// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineClip/BlendCurveMode
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/BlendCurveMode Auto
UnityEngine::Timeline::TimelineClip::BlendCurveMode UnityEngine::Timeline::TimelineClip::BlendCurveMode::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::BlendCurveMode::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineClip::BlendCurveMode>("UnityEngine.Timeline", "TimelineClip/BlendCurveMode", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/BlendCurveMode Auto
void UnityEngine::Timeline::TimelineClip::BlendCurveMode::_set_Auto(UnityEngine::Timeline::TimelineClip::BlendCurveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::BlendCurveMode::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/BlendCurveMode", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/BlendCurveMode Manual
UnityEngine::Timeline::TimelineClip::BlendCurveMode UnityEngine::Timeline::TimelineClip::BlendCurveMode::_get_Manual() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::BlendCurveMode::_get_Manual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineClip::BlendCurveMode>("UnityEngine.Timeline", "TimelineClip/BlendCurveMode", "Manual"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/BlendCurveMode Manual
void UnityEngine::Timeline::TimelineClip::BlendCurveMode::_set_Manual(UnityEngine::Timeline::TimelineClip::BlendCurveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::BlendCurveMode::_set_Manual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/BlendCurveMode", "Manual", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset/Versions
#include "UnityEngine/Timeline/TimelineAsset_Versions.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset/TimelineAssetUpgrade
#include "UnityEngine/Timeline/TimelineAsset_TimelineAssetUpgrade.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset/MediaType
#include "UnityEngine/Timeline/TimelineAsset_MediaType.hpp"
// Including type: UnityEngine.Timeline.MarkerTrack
#include "UnityEngine/Timeline/MarkerTrack.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset/EditorSettings
#include "UnityEngine/Timeline/TimelineAsset_EditorSettings.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27
#include "UnityEngine/Timeline/TimelineAsset_-get_outputs-d__27.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_LatestVersion
int UnityEngine::Timeline::TimelineAsset::_get_k_LatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::_get_k_LatestVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Timeline", "TimelineAsset", "k_LatestVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_LatestVersion
void UnityEngine::Timeline::TimelineAsset::_set_k_LatestVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::_set_k_LatestVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset", "k_LatestVersion", value));
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.UpgradeToLatestVersion
void UnityEngine::Timeline::TimelineAsset::UpgradeToLatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::UpgradeToLatestVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpgradeToLatestVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_editorSettings
UnityEngine::Timeline::TimelineAsset::EditorSettings* UnityEngine::Timeline::TimelineAsset::get_editorSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_editorSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_editorSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineAsset::EditorSettings*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_fixedDuration
double UnityEngine::Timeline::TimelineAsset::get_fixedDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_fixedDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fixedDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.set_fixedDuration
void UnityEngine::Timeline::TimelineAsset::set_fixedDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::set_fixedDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fixedDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_durationMode
UnityEngine::Timeline::TimelineAsset::DurationMode UnityEngine::Timeline::TimelineAsset::get_durationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_durationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_durationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineAsset::DurationMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.set_durationMode
void UnityEngine::Timeline::TimelineAsset::set_durationMode(UnityEngine::Timeline::TimelineAsset::DurationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::set_durationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_durationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::TimelineAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_outputTrackCount
int UnityEngine::Timeline::TimelineAsset::get_outputTrackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_outputTrackCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputTrackCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_rootTrackCount
int UnityEngine::Timeline::TimelineAsset::get_rootTrackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_rootTrackCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootTrackCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.OnValidate
void UnityEngine::Timeline::TimelineAsset::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GetValidFramerate
float UnityEngine::Timeline::TimelineAsset::GetValidFramerate(float framerate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::GetValidFramerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineAsset", "GetValidFramerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(framerate)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, framerate);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GetRootTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineAsset::GetRootTrack(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::GetRootTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GetRootTracks
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* UnityEngine::Timeline::TimelineAsset::GetRootTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::GetRootTracks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootTracks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GetOutputTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineAsset::GetOutputTrack(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::GetOutputTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOutputTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GetOutputTracks
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* UnityEngine::Timeline::TimelineAsset::GetOutputTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::GetOutputTracks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOutputTracks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.UpdateRootTrackCache
void UnityEngine::Timeline::TimelineAsset::UpdateRootTrackCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::UpdateRootTrackCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRootTrackCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.UpdateOutputTrackCache
void UnityEngine::Timeline::TimelineAsset::UpdateOutputTrackCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::UpdateOutputTrackCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateOutputTrackCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_flattenedTracks
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* UnityEngine::Timeline::TimelineAsset::get_flattenedTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_flattenedTracks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flattenedTracks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_markerTrack
UnityEngine::Timeline::MarkerTrack* UnityEngine::Timeline::TimelineAsset::get_markerTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_markerTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_markerTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::MarkerTrack*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_trackObjects
System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>* UnityEngine::Timeline::TimelineAsset::get_trackObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_trackObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.AddTrackInternal
void UnityEngine::Timeline::TimelineAsset::AddTrackInternal(UnityEngine::Timeline::TrackAsset* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::AddTrackInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTrackInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.RemoveTrack
void UnityEngine::Timeline::TimelineAsset::RemoveTrack(UnityEngine::Timeline::TrackAsset* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::RemoveTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Timeline::TimelineAsset::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Timeline::TimelineAsset::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.__internalAwake
void UnityEngine::Timeline::TimelineAsset::__internalAwake() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::__internalAwake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__internalAwake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GatherProperties
void UnityEngine::Timeline::TimelineAsset::GatherProperties(UnityEngine::Playables::PlayableDirector* director, UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::GatherProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GatherProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(director), ::il2cpp_utils::ExtractType(driver)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.CreateMarkerTrack
void UnityEngine::Timeline::TimelineAsset::CreateMarkerTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::CreateMarkerTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMarkerTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.Invalidate
void UnityEngine::Timeline::TimelineAsset::Invalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::Invalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.CalculateDuration
double UnityEngine::Timeline::TimelineAsset::CalculateDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::CalculateDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.AddSubTracksRecursive
void UnityEngine::Timeline::TimelineAsset::AddSubTracksRecursive(UnityEngine::Timeline::TrackAsset* track, System::Collections::Generic::List_1<UnityEngine::Timeline::TrackAsset*>*& allTracks) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::AddSubTracksRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineAsset", "AddSubTracksRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(allTracks)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, track, allTracks);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.CreateTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineAsset::CreateTrack(System::Type* type, UnityEngine::Timeline::TrackAsset* parent, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::CreateTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method, type, parent, name);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.DeleteClip
bool UnityEngine::Timeline::TimelineAsset::DeleteClip(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::DeleteClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.DeleteTrack
bool UnityEngine::Timeline::TimelineAsset::DeleteTrack(UnityEngine::Timeline::TrackAsset* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::DeleteTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.MoveLastTrackBefore
void UnityEngine::Timeline::TimelineAsset::MoveLastTrackBefore(UnityEngine::Timeline::TrackAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MoveLastTrackBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveLastTrackBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.AllocateTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineAsset::AllocateTrack(UnityEngine::Timeline::TrackAsset* trackAssetParent, ::Il2CppString* trackName, System::Type* trackType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::AllocateTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllocateTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackAssetParent), ::il2cpp_utils::ExtractType(trackName), ::il2cpp_utils::ExtractType(trackType)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method, trackAssetParent, trackName, trackType);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.DeleteRecordedAnimation
void UnityEngine::Timeline::TimelineAsset::DeleteRecordedAnimation(UnityEngine::Timeline::TrackAsset* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::DeleteRecordedAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteRecordedAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.DeleteRecordedAnimation
void UnityEngine::Timeline::TimelineAsset::DeleteRecordedAnimation(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::DeleteRecordedAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteRecordedAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_duration
double UnityEngine::Timeline::TimelineAsset::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::TimelineAsset::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_outputs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::TimelineAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineAsset/Versions
#include "UnityEngine/Timeline/TimelineAsset_Versions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/Versions Initial
UnityEngine::Timeline::TimelineAsset::Versions UnityEngine::Timeline::TimelineAsset::Versions::_get_Initial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::Versions::_get_Initial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineAsset::Versions>("UnityEngine.Timeline", "TimelineAsset/Versions", "Initial"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/Versions Initial
void UnityEngine::Timeline::TimelineAsset::Versions::_set_Initial(UnityEngine::Timeline::TimelineAsset::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::Versions::_set_Initial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/Versions", "Initial", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineAsset/MediaType
#include "UnityEngine/Timeline/TimelineAsset_MediaType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Animation
UnityEngine::Timeline::TimelineAsset::MediaType UnityEngine::Timeline::TimelineAsset::MediaType::_get_Animation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_get_Animation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineAsset::MediaType>("UnityEngine.Timeline", "TimelineAsset/MediaType", "Animation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Animation
void UnityEngine::Timeline::TimelineAsset::MediaType::_set_Animation(UnityEngine::Timeline::TimelineAsset::MediaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_set_Animation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/MediaType", "Animation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Audio
UnityEngine::Timeline::TimelineAsset::MediaType UnityEngine::Timeline::TimelineAsset::MediaType::_get_Audio() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_get_Audio");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineAsset::MediaType>("UnityEngine.Timeline", "TimelineAsset/MediaType", "Audio"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Audio
void UnityEngine::Timeline::TimelineAsset::MediaType::_set_Audio(UnityEngine::Timeline::TimelineAsset::MediaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_set_Audio");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/MediaType", "Audio", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Texture
UnityEngine::Timeline::TimelineAsset::MediaType UnityEngine::Timeline::TimelineAsset::MediaType::_get_Texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_get_Texture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineAsset::MediaType>("UnityEngine.Timeline", "TimelineAsset/MediaType", "Texture"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Texture
void UnityEngine::Timeline::TimelineAsset::MediaType::_set_Texture(UnityEngine::Timeline::TimelineAsset::MediaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_set_Texture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/MediaType", "Texture", value));
}
// [ObsoleteAttribute] Offset: 0xCFDF60
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Video
UnityEngine::Timeline::TimelineAsset::MediaType UnityEngine::Timeline::TimelineAsset::MediaType::_get_Video() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_get_Video");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineAsset::MediaType>("UnityEngine.Timeline", "TimelineAsset/MediaType", "Video"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Video
void UnityEngine::Timeline::TimelineAsset::MediaType::_set_Video(UnityEngine::Timeline::TimelineAsset::MediaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_set_Video");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/MediaType", "Video", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Script
UnityEngine::Timeline::TimelineAsset::MediaType UnityEngine::Timeline::TimelineAsset::MediaType::_get_Script() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_get_Script");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineAsset::MediaType>("UnityEngine.Timeline", "TimelineAsset/MediaType", "Script"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Script
void UnityEngine::Timeline::TimelineAsset::MediaType::_set_Script(UnityEngine::Timeline::TimelineAsset::MediaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_set_Script");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/MediaType", "Script", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Hybrid
UnityEngine::Timeline::TimelineAsset::MediaType UnityEngine::Timeline::TimelineAsset::MediaType::_get_Hybrid() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_get_Hybrid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineAsset::MediaType>("UnityEngine.Timeline", "TimelineAsset/MediaType", "Hybrid"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Hybrid
void UnityEngine::Timeline::TimelineAsset::MediaType::_set_Hybrid(UnityEngine::Timeline::TimelineAsset::MediaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_set_Hybrid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/MediaType", "Hybrid", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Group
UnityEngine::Timeline::TimelineAsset::MediaType UnityEngine::Timeline::TimelineAsset::MediaType::_get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_get_Group");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineAsset::MediaType>("UnityEngine.Timeline", "TimelineAsset/MediaType", "Group"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Group
void UnityEngine::Timeline::TimelineAsset::MediaType::_set_Group(UnityEngine::Timeline::TimelineAsset::MediaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_set_Group");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/MediaType", "Group", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineAsset/DurationMode
#include "UnityEngine/Timeline/TimelineAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/DurationMode BasedOnClips
UnityEngine::Timeline::TimelineAsset::DurationMode UnityEngine::Timeline::TimelineAsset::DurationMode::_get_BasedOnClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::DurationMode::_get_BasedOnClips");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineAsset::DurationMode>("UnityEngine.Timeline", "TimelineAsset/DurationMode", "BasedOnClips"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/DurationMode BasedOnClips
void UnityEngine::Timeline::TimelineAsset::DurationMode::_set_BasedOnClips(UnityEngine::Timeline::TimelineAsset::DurationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::DurationMode::_set_BasedOnClips");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/DurationMode", "BasedOnClips", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/DurationMode FixedLength
UnityEngine::Timeline::TimelineAsset::DurationMode UnityEngine::Timeline::TimelineAsset::DurationMode::_get_FixedLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::DurationMode::_get_FixedLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineAsset::DurationMode>("UnityEngine.Timeline", "TimelineAsset/DurationMode", "FixedLength"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/DurationMode FixedLength
void UnityEngine::Timeline::TimelineAsset::DurationMode::_set_FixedLength(UnityEngine::Timeline::TimelineAsset::DurationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::DurationMode::_set_FixedLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/DurationMode", "FixedLength", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineAsset/EditorSettings
#include "UnityEngine/Timeline/TimelineAsset_EditorSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Single kMinFps
float UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kMinFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kMinFps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kMinFps"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Single kMinFps
void UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kMinFps(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kMinFps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kMinFps", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Single kMaxFps
float UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kMaxFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kMaxFps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kMaxFps"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Single kMaxFps
void UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kMaxFps(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kMaxFps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kMaxFps", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Single kDefaultFps
float UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kDefaultFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kDefaultFps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kDefaultFps"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Single kDefaultFps
void UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kDefaultFps(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kDefaultFps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kDefaultFps", value));
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/EditorSettings.get_fps
float UnityEngine::Timeline::TimelineAsset::EditorSettings::get_fps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::get_fps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/EditorSettings.set_fps
void UnityEngine::Timeline::TimelineAsset::EditorSettings::set_fps(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::set_fps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/EditorSettings.get_scenePreview
bool UnityEngine::Timeline::TimelineAsset::EditorSettings::get_scenePreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::get_scenePreview");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scenePreview", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/EditorSettings.set_scenePreview
void UnityEngine::Timeline::TimelineAsset::EditorSettings::set_scenePreview(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::set_scenePreview");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scenePreview", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/EditorSettings..cctor
void UnityEngine::Timeline::TimelineAsset::EditorSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineAsset/EditorSettings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27
#include "UnityEngine/Timeline/TimelineAsset_-get_outputs-d__27.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.System.IDisposable.Dispose
void UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.MoveNext
bool UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.<>m__Finally1
void UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.<>m__Finally2
void UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::$$m__Finally2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::<>m__Finally2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Timeline.TrackAsset/Versions
#include "UnityEngine/Timeline/TrackAsset_Versions.hpp"
// Including type: UnityEngine.Timeline.TrackAsset/TrackAssetUpgrade
#include "UnityEngine/Timeline/TrackAsset_TrackAssetUpgrade.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65
#include "UnityEngine/Timeline/TrackAsset_-get_outputs-d__65.hpp"
// Including type: UnityEngine.Timeline.TrackAsset/<>c
#include "UnityEngine/Timeline/TrackAsset_--c.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Timeline.TrackBindingTypeAttribute
#include "UnityEngine/Timeline/TrackBindingTypeAttribute.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.IPlayableAsset
#include "UnityEngine/Playables/IPlayableAsset.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.Timeline.IntervalTree`1
#include "UnityEngine/Timeline/IntervalTree_1.hpp"
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_LatestVersion
int UnityEngine::Timeline::TrackAsset::_get_k_LatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_k_LatestVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Timeline", "TrackAsset", "k_LatestVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_LatestVersion
void UnityEngine::Timeline::TrackAsset::_set_k_LatestVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_k_LatestVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "k_LatestVersion", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Timeline.TrackAsset/TransientBuildData s_BuildData
UnityEngine::Timeline::TrackAsset::TransientBuildData UnityEngine::Timeline::TrackAsset::_get_s_BuildData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_s_BuildData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackAsset::TransientBuildData>("UnityEngine.Timeline", "TrackAsset", "s_BuildData"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Timeline.TrackAsset/TransientBuildData s_BuildData
void UnityEngine::Timeline::TrackAsset::_set_s_BuildData(UnityEngine::Timeline::TrackAsset::TransientBuildData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_s_BuildData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "s_BuildData", value));
}
// Autogenerated static field getter
// Get static field: static System.String kDefaultCurvesName
::Il2CppString* UnityEngine::Timeline::TrackAsset::_get_kDefaultCurvesName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_kDefaultCurvesName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("UnityEngine.Timeline", "TrackAsset", "kDefaultCurvesName"));
}
// Autogenerated static field setter
// Set static field: static System.String kDefaultCurvesName
void UnityEngine::Timeline::TrackAsset::_set_kDefaultCurvesName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_kDefaultCurvesName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "kDefaultCurvesName", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCFDA08
// Autogenerated static field getter
// Get static field: static private System.Action`3<UnityEngine.Timeline.TimelineClip,UnityEngine.GameObject,UnityEngine.Playables.Playable> OnClipPlayableCreate
System::Action_3<UnityEngine::Timeline::TimelineClip*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* UnityEngine::Timeline::TrackAsset::_get_OnClipPlayableCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_OnClipPlayableCreate");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_3<UnityEngine::Timeline::TimelineClip*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>*>("UnityEngine.Timeline", "TrackAsset", "OnClipPlayableCreate")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`3<UnityEngine.Timeline.TimelineClip,UnityEngine.GameObject,UnityEngine.Playables.Playable> OnClipPlayableCreate
void UnityEngine::Timeline::TrackAsset::_set_OnClipPlayableCreate(System::Action_3<UnityEngine::Timeline::TimelineClip*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_OnClipPlayableCreate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "OnClipPlayableCreate", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCFDA18
// Autogenerated static field getter
// Get static field: static private System.Action`3<UnityEngine.Timeline.TrackAsset,UnityEngine.GameObject,UnityEngine.Playables.Playable> OnTrackAnimationPlayableCreate
System::Action_3<UnityEngine::Timeline::TrackAsset*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* UnityEngine::Timeline::TrackAsset::_get_OnTrackAnimationPlayableCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_OnTrackAnimationPlayableCreate");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_3<UnityEngine::Timeline::TrackAsset*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>*>("UnityEngine.Timeline", "TrackAsset", "OnTrackAnimationPlayableCreate")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`3<UnityEngine.Timeline.TrackAsset,UnityEngine.GameObject,UnityEngine.Playables.Playable> OnTrackAnimationPlayableCreate
void UnityEngine::Timeline::TrackAsset::_set_OnTrackAnimationPlayableCreate(System::Action_3<UnityEngine::Timeline::TrackAsset*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_OnTrackAnimationPlayableCreate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "OnTrackAnimationPlayableCreate", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Timeline.TrackAsset[] s_EmptyCache
::Array<UnityEngine::Timeline::TrackAsset*>* UnityEngine::Timeline::TrackAsset::_get_s_EmptyCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_s_EmptyCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Timeline::TrackAsset*>*>("UnityEngine.Timeline", "TrackAsset", "s_EmptyCache"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Timeline.TrackAsset[] s_EmptyCache
void UnityEngine::Timeline::TrackAsset::_set_s_EmptyCache(::Array<UnityEngine::Timeline::TrackAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_s_EmptyCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "s_EmptyCache", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.Timeline.TrackBindingTypeAttribute> s_TrackBindingTypeAttributeCache
System::Collections::Generic::Dictionary_2<System::Type*, UnityEngine::Timeline::TrackBindingTypeAttribute*>* UnityEngine::Timeline::TrackAsset::_get_s_TrackBindingTypeAttributeCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_s_TrackBindingTypeAttributeCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<System::Type*, UnityEngine::Timeline::TrackBindingTypeAttribute*>*>("UnityEngine.Timeline", "TrackAsset", "s_TrackBindingTypeAttributeCache")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.Timeline.TrackBindingTypeAttribute> s_TrackBindingTypeAttributeCache
void UnityEngine::Timeline::TrackAsset::_set_s_TrackBindingTypeAttributeCache(System::Collections::Generic::Dictionary_2<System::Type*, UnityEngine::Timeline::TrackBindingTypeAttribute*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_s_TrackBindingTypeAttributeCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "s_TrackBindingTypeAttributeCache", value));
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnBeforeTrackSerialize
void UnityEngine::Timeline::TrackAsset::OnBeforeTrackSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::OnBeforeTrackSerialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeTrackSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnAfterTrackDeserialize
void UnityEngine::Timeline::TrackAsset::OnAfterTrackDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::OnAfterTrackDeserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAfterTrackDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnUpgradeFromVersion
void UnityEngine::Timeline::TrackAsset::OnUpgradeFromVersion(int oldVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::OnUpgradeFromVersion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpgradeFromVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldVersion)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, oldVersion);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Timeline::TrackAsset::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Timeline::TrackAsset::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UpgradeToLatestVersion
void UnityEngine::Timeline::TrackAsset::UpgradeToLatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UpgradeToLatestVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpgradeToLatestVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.add_OnClipPlayableCreate
void UnityEngine::Timeline::TrackAsset::add_OnClipPlayableCreate(System::Action_3<UnityEngine::Timeline::TimelineClip*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::add_OnClipPlayableCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", "add_OnClipPlayableCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.remove_OnClipPlayableCreate
void UnityEngine::Timeline::TrackAsset::remove_OnClipPlayableCreate(System::Action_3<UnityEngine::Timeline::TimelineClip*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::remove_OnClipPlayableCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", "remove_OnClipPlayableCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.add_OnTrackAnimationPlayableCreate
void UnityEngine::Timeline::TrackAsset::add_OnTrackAnimationPlayableCreate(System::Action_3<UnityEngine::Timeline::TrackAsset*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::add_OnTrackAnimationPlayableCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", "add_OnTrackAnimationPlayableCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.remove_OnTrackAnimationPlayableCreate
void UnityEngine::Timeline::TrackAsset::remove_OnTrackAnimationPlayableCreate(System::Action_3<UnityEngine::Timeline::TrackAsset*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::remove_OnTrackAnimationPlayableCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", "remove_OnTrackAnimationPlayableCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_start
double UnityEngine::Timeline::TrackAsset::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_end
double UnityEngine::Timeline::TrackAsset::get_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_end");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_end", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_muted
bool UnityEngine::Timeline::TrackAsset::get_muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_muted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_muted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.set_muted
void UnityEngine::Timeline::TrackAsset::set_muted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::set_muted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_muted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_mutedInHierarchy
bool UnityEngine::Timeline::TrackAsset::get_mutedInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_mutedInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mutedInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_timelineAsset
UnityEngine::Timeline::TimelineAsset* UnityEngine::Timeline::TrackAsset::get_timelineAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_timelineAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timelineAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_parent
UnityEngine::Playables::PlayableAsset* UnityEngine::Timeline::TrackAsset::get_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.set_parent
void UnityEngine::Timeline::TrackAsset::set_parent(UnityEngine::Playables::PlayableAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::set_parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetClips
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TimelineClip*>* UnityEngine::Timeline::TrackAsset::GetClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetClips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TimelineClip*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_clips
::Array<UnityEngine::Timeline::TimelineClip*>* UnityEngine::Timeline::TrackAsset::get_clips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_clips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Timeline::TimelineClip*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_isEmpty
bool UnityEngine::Timeline::TrackAsset::get_isEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_isEmpty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_hasClips
bool UnityEngine::Timeline::TrackAsset::get_hasClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_hasClips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_hasCurves
bool UnityEngine::Timeline::TrackAsset::get_hasCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_hasCurves");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_isSubTrack
bool UnityEngine::Timeline::TrackAsset::get_isSubTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_isSubTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSubTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetChildTracks
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* UnityEngine::Timeline::TrackAsset::GetChildTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetChildTracks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChildTracks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_customPlayableTypename
::Il2CppString* UnityEngine::Timeline::TrackAsset::get_customPlayableTypename() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_customPlayableTypename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_customPlayableTypename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.set_customPlayableTypename
void UnityEngine::Timeline::TrackAsset::set_customPlayableTypename(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::set_customPlayableTypename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_customPlayableTypename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_curves
UnityEngine::AnimationClip* UnityEngine::Timeline::TrackAsset::get_curves() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_curves");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_curves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.set_curves
void UnityEngine::Timeline::TrackAsset::set_curves(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::set_curves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_curves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName
::Il2CppString* UnityEngine::Timeline::TrackAsset::UnityEngine_Timeline_ICurvesOwner_get_defaultCurvesName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.Timeline.ICurvesOwner.get_asset
UnityEngine::Object* UnityEngine::Timeline::TrackAsset::UnityEngine_Timeline_ICurvesOwner_get_asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UnityEngine.Timeline.ICurvesOwner.get_asset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_asset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.Timeline.ICurvesOwner.get_assetOwner
UnityEngine::Object* UnityEngine::Timeline::TrackAsset::UnityEngine_Timeline_ICurvesOwner_get_assetOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UnityEngine.Timeline.ICurvesOwner.get_assetOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_assetOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.Timeline.ICurvesOwner.get_targetTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TrackAsset::UnityEngine_Timeline_ICurvesOwner_get_targetTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UnityEngine.Timeline.ICurvesOwner.get_targetTrack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_targetTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_subTracksObjects
System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>* UnityEngine::Timeline::TrackAsset::get_subTracksObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_subTracksObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_subTracksObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_locked
bool UnityEngine::Timeline::TrackAsset::get_locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_locked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_locked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.set_locked
void UnityEngine::Timeline::TrackAsset::set_locked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::set_locked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_locked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_lockedInHierarchy
bool UnityEngine::Timeline::TrackAsset::get_lockedInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_lockedInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lockedInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_supportsNotifications
bool UnityEngine::Timeline::TrackAsset::get_supportsNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_supportsNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_supportsNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.__internalAwake
void UnityEngine::Timeline::TrackAsset::__internalAwake() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::__internalAwake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__internalAwake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateCurves
void UnityEngine::Timeline::TrackAsset::CreateCurves(::Il2CppString* curvesClipName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateCurves");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curvesClipName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, curvesClipName);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateTrackMixer
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreateTrackMixer(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateTrackMixer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTrackMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, inputCount);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateDefaultClip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateDefaultClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateDefaultClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDefaultClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.DeleteClip
bool UnityEngine::Timeline::TrackAsset::DeleteClip(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::DeleteClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateMarker
UnityEngine::Timeline::IMarker* UnityEngine::Timeline::TrackAsset::CreateMarker(System::Type* type, double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::IMarker*, false>(this, ___internal__method, type, time);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.DeleteMarker
bool UnityEngine::Timeline::TrackAsset::DeleteMarker(UnityEngine::Timeline::IMarker* marker) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::DeleteMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(marker)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, marker);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetMarkers
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IMarker*>* UnityEngine::Timeline::TrackAsset::GetMarkers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetMarkers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMarkers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IMarker*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetMarkerCount
int UnityEngine::Timeline::TrackAsset::GetMarkerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetMarkerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMarkerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetMarker
UnityEngine::Timeline::IMarker* UnityEngine::Timeline::TrackAsset::GetMarker(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::IMarker*, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateClip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateClip(System::Type* requestedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestedType)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, requestedType);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateAndAddNewClipOfType
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateAndAddNewClipOfType(System::Type* requestedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateAndAddNewClipOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAndAddNewClipOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestedType)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, requestedType);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateClipOfType
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateClipOfType(System::Type* requestedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateClipOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClipOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestedType)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, requestedType);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateClipFromPlayableAsset
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateClipFromPlayableAsset(UnityEngine::Playables::IPlayableAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateClipFromPlayableAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClipFromPlayableAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateClipFromAsset
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateClipFromAsset(UnityEngine::ScriptableObject* playableAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateClipFromAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClipFromAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playableAsset)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, playableAsset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetMarkersRaw
System::Collections::Generic::IEnumerable_1<UnityEngine::ScriptableObject*>* UnityEngine::Timeline::TrackAsset::GetMarkersRaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetMarkersRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMarkersRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::ScriptableObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.ClearMarkers
void UnityEngine::Timeline::TrackAsset::ClearMarkers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::ClearMarkers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMarkers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.AddMarker
void UnityEngine::Timeline::TrackAsset::AddMarker(UnityEngine::ScriptableObject* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::AddMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.DeleteMarkerRaw
bool UnityEngine::Timeline::TrackAsset::DeleteMarkerRaw(UnityEngine::ScriptableObject* marker) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::DeleteMarkerRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteMarkerRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(marker)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, marker);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetTimeRangeHash
int UnityEngine::Timeline::TrackAsset::GetTimeRangeHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetTimeRangeHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTimeRangeHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.AddClip
void UnityEngine::Timeline::TrackAsset::AddClip(UnityEngine::Timeline::TimelineClip* newClip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::AddClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newClip)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newClip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateNotificationsPlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreateNotificationsPlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable mixerPlayable, UnityEngine::GameObject* go, UnityEngine::Playables::Playable timelinePlayable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateNotificationsPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNotificationsPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(mixerPlayable), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(timelinePlayable)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, mixerPlayable, go, timelinePlayable);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreatePlayableGraph
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreatePlayableGraph(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree, UnityEngine::Playables::Playable timelinePlayable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreatePlayableGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayableGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(timelinePlayable)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, tree, timelinePlayable);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CompileClips
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CompileClips(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, System::Collections::Generic::IList_1<UnityEngine::Timeline::TimelineClip*>* timelineClips, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CompileClips");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(timelineClips), ::il2cpp_utils::ExtractType(tree)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, timelineClips, tree);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GatherCompilableTracks
void UnityEngine::Timeline::TrackAsset::GatherCompilableTracks(System::Collections::Generic::IList_1<UnityEngine::Timeline::TrackAsset*>* tracks) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GatherCompilableTracks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GatherCompilableTracks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tracks)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tracks);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GatherNotificiations
void UnityEngine::Timeline::TrackAsset::GatherNotificiations(System::Collections::Generic::List_1<UnityEngine::Timeline::IMarker*>* markers) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GatherNotificiations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GatherNotificiations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(markers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, markers);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnCreateClipPlayableGraph
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::OnCreateClipPlayableGraph(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::OnCreateClipPlayableGraph");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCreateClipPlayableGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(tree)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, tree);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.ConfigureTrackAnimation
void UnityEngine::Timeline::TrackAsset::ConfigureTrackAnimation(UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree, UnityEngine::GameObject* go, UnityEngine::Playables::Playable blend) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::ConfigureTrackAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConfigureTrackAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(blend)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tree, go, blend);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.SortClips
void UnityEngine::Timeline::TrackAsset::SortClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::SortClips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.ClearClipsInternal
void UnityEngine::Timeline::TrackAsset::ClearClipsInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::ClearClipsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearClipsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.ClearSubTracksInternal
void UnityEngine::Timeline::TrackAsset::ClearSubTracksInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::ClearSubTracksInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSubTracksInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnClipMove
void UnityEngine::Timeline::TrackAsset::OnClipMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::OnClipMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnClipMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateNewClipContainerInternal
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateNewClipContainerInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateNewClipContainerInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNewClipContainerInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.AddChild
void UnityEngine::Timeline::TrackAsset::AddChild(UnityEngine::Timeline::TrackAsset* child) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::AddChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, child);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.MoveLastTrackBefore
void UnityEngine::Timeline::TrackAsset::MoveLastTrackBefore(UnityEngine::Timeline::TrackAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::MoveLastTrackBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveLastTrackBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.RemoveSubTrack
bool UnityEngine::Timeline::TrackAsset::RemoveSubTrack(UnityEngine::Timeline::TrackAsset* child) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::RemoveSubTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSubTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, child);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.RemoveClip
void UnityEngine::Timeline::TrackAsset::RemoveClip(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::RemoveClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetEvaluationTime
void UnityEngine::Timeline::TrackAsset::GetEvaluationTime(double& outStart, double& outDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetEvaluationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEvaluationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<double&>(), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, outStart, outDuration);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetSequenceTime
void UnityEngine::Timeline::TrackAsset::GetSequenceTime(double& outStart, double& outDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetSequenceTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSequenceTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<double&>(), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, outStart, outDuration);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GatherProperties
void UnityEngine::Timeline::TrackAsset::GatherProperties(UnityEngine::Playables::PlayableDirector* director, UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GatherProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GatherProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(director), ::il2cpp_utils::ExtractType(driver)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetGameObjectBinding
UnityEngine::GameObject* UnityEngine::Timeline::TrackAsset::GetGameObjectBinding(UnityEngine::Playables::PlayableDirector* director) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetGameObjectBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGameObjectBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(director)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, director);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.ValidateClipType
bool UnityEngine::Timeline::TrackAsset::ValidateClipType(System::Type* clipType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::ValidateClipType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateClipType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipType)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, clipType);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnCreateClip
void UnityEngine::Timeline::TrackAsset::OnCreateClip(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::OnCreateClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCreateClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UpdateDuration
void UnityEngine::Timeline::TrackAsset::UpdateDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UpdateDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CalculateItemsHash
int UnityEngine::Timeline::TrackAsset::CalculateItemsHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CalculateItemsHash");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateItemsHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* gameObject, UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, gameObject, clip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.Invalidate
void UnityEngine::Timeline::TrackAsset::Invalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Invalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetNotificationDuration
double UnityEngine::Timeline::TrackAsset::GetNotificationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetNotificationDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNotificationDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CanCompileClips
bool UnityEngine::Timeline::TrackAsset::CanCompileClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CanCompileClips");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanCompileClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.IsCompilable
bool UnityEngine::Timeline::TrackAsset::IsCompilable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::IsCompilable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCompilable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UpdateChildTrackCache
void UnityEngine::Timeline::TrackAsset::UpdateChildTrackCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UpdateChildTrackCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateChildTrackCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.Hash
int UnityEngine::Timeline::TrackAsset::Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Hash");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetClipsHash
int UnityEngine::Timeline::TrackAsset::GetClipsHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetClipsHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipsHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetAnimationClipHash
int UnityEngine::Timeline::TrackAsset::GetAnimationClipHash(UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetAnimationClipHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", "GetAnimationClipHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.HasNotifications
bool UnityEngine::Timeline::TrackAsset::HasNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::HasNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CanCompileNotifications
bool UnityEngine::Timeline::TrackAsset::CanCompileNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CanCompileNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanCompileNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CanCompileClipsRecursive
bool UnityEngine::Timeline::TrackAsset::CanCompileClipsRecursive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CanCompileClipsRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanCompileClipsRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_duration
double UnityEngine::Timeline::TrackAsset::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::TrackAsset::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_outputs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset..cctor
void UnityEngine::Timeline::TrackAsset::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackAsset/Versions
#include "UnityEngine/Timeline/TrackAsset_Versions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackAsset/Versions Initial
UnityEngine::Timeline::TrackAsset::Versions UnityEngine::Timeline::TrackAsset::Versions::_get_Initial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_get_Initial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackAsset::Versions>("UnityEngine.Timeline", "TrackAsset/Versions", "Initial"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackAsset/Versions Initial
void UnityEngine::Timeline::TrackAsset::Versions::_set_Initial(UnityEngine::Timeline::TrackAsset::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_set_Initial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset/Versions", "Initial", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackAsset/Versions RotationAsEuler
UnityEngine::Timeline::TrackAsset::Versions UnityEngine::Timeline::TrackAsset::Versions::_get_RotationAsEuler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_get_RotationAsEuler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackAsset::Versions>("UnityEngine.Timeline", "TrackAsset/Versions", "RotationAsEuler"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackAsset/Versions RotationAsEuler
void UnityEngine::Timeline::TrackAsset::Versions::_set_RotationAsEuler(UnityEngine::Timeline::TrackAsset::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_set_RotationAsEuler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset/Versions", "RotationAsEuler", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackAsset/Versions RootMotionUpgrade
UnityEngine::Timeline::TrackAsset::Versions UnityEngine::Timeline::TrackAsset::Versions::_get_RootMotionUpgrade() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_get_RootMotionUpgrade");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackAsset::Versions>("UnityEngine.Timeline", "TrackAsset/Versions", "RootMotionUpgrade"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackAsset/Versions RootMotionUpgrade
void UnityEngine::Timeline::TrackAsset::Versions::_set_RootMotionUpgrade(UnityEngine::Timeline::TrackAsset::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_set_RootMotionUpgrade");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset/Versions", "RootMotionUpgrade", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackAsset/Versions AnimatedTrackProperties
UnityEngine::Timeline::TrackAsset::Versions UnityEngine::Timeline::TrackAsset::Versions::_get_AnimatedTrackProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_get_AnimatedTrackProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackAsset::Versions>("UnityEngine.Timeline", "TrackAsset/Versions", "AnimatedTrackProperties"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackAsset/Versions AnimatedTrackProperties
void UnityEngine::Timeline::TrackAsset::Versions::_set_AnimatedTrackProperties(UnityEngine::Timeline::TrackAsset::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_set_AnimatedTrackProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset/Versions", "AnimatedTrackProperties", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackAsset/TransientBuildData
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TrackAsset/TransientBuildData.Create
UnityEngine::Timeline::TrackAsset::TransientBuildData UnityEngine::Timeline::TrackAsset::TransientBuildData::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::TransientBuildData::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset/TransientBuildData", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset::TransientBuildData, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/TransientBuildData.Clear
void UnityEngine::Timeline::TrackAsset::TransientBuildData::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::TransientBuildData::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65
#include "UnityEngine/Timeline/TrackAsset_-get_outputs-d__65.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.System.IDisposable.Dispose
void UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.MoveNext
bool UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackAsset/<>c
#include "UnityEngine/Timeline/TrackAsset_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.TrackAsset/<>c <>9
UnityEngine::Timeline::TrackAsset::$$c* UnityEngine::Timeline::TrackAsset::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackAsset::$$c*>("UnityEngine.Timeline", "TrackAsset/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.TrackAsset/<>c <>9
void UnityEngine::Timeline::TrackAsset::$$c::_set_$$9(UnityEngine::Timeline::TrackAsset::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__121_0
System::Comparison_1<UnityEngine::Timeline::TimelineClip*>* UnityEngine::Timeline::TrackAsset::$$c::_get_$$9__121_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$$c::_get_$$9__121_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<UnityEngine::Timeline::TimelineClip*>*>("UnityEngine.Timeline", "TrackAsset/<>c", "<>9__121_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__121_0
void UnityEngine::Timeline::TrackAsset::$$c::_set_$$9__121_0(System::Comparison_1<UnityEngine::Timeline::TimelineClip*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$$c::_set_$$9__121_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset/<>c", "<>9__121_0", value)));
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<>c..cctor
void UnityEngine::Timeline::TrackAsset::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<>c.<SortClips>b__121_0
int UnityEngine::Timeline::TrackAsset::$$c::$SortClips$b__121_0(UnityEngine::Timeline::TimelineClip* clip1, UnityEngine::Timeline::TimelineClip* clip2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$$c::<SortClips>b__121_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortClips>b__121_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip1), ::il2cpp_utils::ExtractType(clip2)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, clip1, clip2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackColorAttribute
#include "UnityEngine/Timeline/TrackColorAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TrackColorAttribute.get_color
UnityEngine::Color UnityEngine::Timeline::TrackColorAttribute::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackColorAttribute::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AudioClipProperties
#include "UnityEngine/Timeline/AudioClipProperties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AudioMixerProperties
#include "UnityEngine/Timeline/AudioMixerProperties.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AudioMixerProperties.PrepareFrame
void UnityEngine::Timeline::AudioMixerProperties::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioMixerProperties::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AudioPlayableAsset
#include "UnityEngine/Timeline/AudioPlayableAsset.hpp"
// Including type: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16
#include "UnityEngine/Timeline/AudioPlayableAsset_-get_outputs-d__16.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Timeline.AudioClipProperties
#include "UnityEngine/Timeline/AudioClipProperties.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_bufferingTime
float UnityEngine::Timeline::AudioPlayableAsset::get_bufferingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::get_bufferingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bufferingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.set_bufferingTime
void UnityEngine::Timeline::AudioPlayableAsset::set_bufferingTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::set_bufferingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bufferingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_clip
UnityEngine::AudioClip* UnityEngine::Timeline::AudioPlayableAsset::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.set_clip
void UnityEngine::Timeline::AudioPlayableAsset::set_clip(UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::set_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_loop
bool UnityEngine::Timeline::AudioPlayableAsset::get_loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::get_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.set_loop
void UnityEngine::Timeline::AudioPlayableAsset::set_loop(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::set_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::AudioPlayableAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_duration
double UnityEngine::Timeline::AudioPlayableAsset::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AudioPlayableAsset::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::get_outputs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::AudioPlayableAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16
#include "UnityEngine/Timeline/AudioPlayableAsset_-get_outputs-d__16.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.System.IDisposable.Dispose
void UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.MoveNext
bool UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AudioTrack
#include "UnityEngine/Timeline/AudioTrack.hpp"
// Including type: UnityEngine.Timeline.AudioTrack/<get_outputs>d__4
#include "UnityEngine/Timeline/AudioTrack_-get_outputs-d__4.hpp"
// Including type: UnityEngine.Timeline.AudioMixerProperties
#include "UnityEngine/Timeline/AudioMixerProperties.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.Timeline.IntervalTree`1
#include "UnityEngine/Timeline/IntervalTree_1.hpp"
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AudioTrack.CreateClip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::AudioTrack::CreateClip(UnityEngine::AudioClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::CreateClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack.OnValidate
void UnityEngine::Timeline::AudioTrack::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack.CompileClips
UnityEngine::Playables::Playable UnityEngine::Timeline::AudioTrack::CompileClips(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, System::Collections::Generic::IList_1<UnityEngine::Timeline::TimelineClip*>* timelineClips, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::CompileClips");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(timelineClips), ::il2cpp_utils::ExtractType(tree)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, timelineClips, tree);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AudioTrack::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::get_outputs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.AudioTrack/<get_outputs>d__4
#include "UnityEngine/Timeline/AudioTrack_-get_outputs-d__4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AudioTrack/<get_outputs>d__4.System.IDisposable.Dispose
void UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/<get_outputs>d__4.MoveNext
bool UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/<get_outputs>d__4.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/<get_outputs>d__4.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/<get_outputs>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/<get_outputs>d__4.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/<get_outputs>d__4.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps None
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps None
void UnityEngine::Timeline::ClipCaps::_set_None(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps Looping
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_Looping() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_Looping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "Looping"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps Looping
void UnityEngine::Timeline::ClipCaps::_set_Looping(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_Looping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "Looping", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps Extrapolation
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_Extrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_Extrapolation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "Extrapolation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps Extrapolation
void UnityEngine::Timeline::ClipCaps::_set_Extrapolation(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_Extrapolation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "Extrapolation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps ClipIn
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_ClipIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_ClipIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "ClipIn"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps ClipIn
void UnityEngine::Timeline::ClipCaps::_set_ClipIn(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_ClipIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "ClipIn", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps SpeedMultiplier
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_SpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_SpeedMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "SpeedMultiplier"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps SpeedMultiplier
void UnityEngine::Timeline::ClipCaps::_set_SpeedMultiplier(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_SpeedMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "SpeedMultiplier", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps Blending
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_Blending() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_Blending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "Blending"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps Blending
void UnityEngine::Timeline::ClipCaps::_set_Blending(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_Blending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "Blending", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps AutoScale
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_AutoScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_AutoScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "AutoScale"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps AutoScale
void UnityEngine::Timeline::ClipCaps::_set_AutoScale(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_AutoScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "AutoScale", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps All
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps All
void UnityEngine::Timeline::ClipCaps::_set_All(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "All", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineClipCapsExtensions
#include "UnityEngine/Timeline/TimelineClipCapsExtensions.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsLooping
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsLooping(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsLooping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsLooping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsExtrapolation
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsExtrapolation(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsClipIn
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsClipIn(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsClipIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsClipIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsSpeedMultiplier
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsSpeedMultiplier(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsSpeedMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsSpeedMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsBlending
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsBlending(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsBlending");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsBlending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.HasAll
bool UnityEngine::Timeline::TimelineClipCapsExtensions::HasAll(UnityEngine::Timeline::ClipCaps caps, UnityEngine::Timeline::ClipCaps flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::HasAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "HasAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caps), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, caps, flags);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.HasAny
bool UnityEngine::Timeline::TimelineClipCapsExtensions::HasAny(UnityEngine::Timeline::ClipCaps caps, UnityEngine::Timeline::ClipCaps flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::HasAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "HasAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caps), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, caps, flags);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ControlPlayableAsset
#include "UnityEngine/Timeline/ControlPlayableAsset.hpp"
// Including type: UnityEngine.Timeline.ControlPlayableAsset/<GetControlableScripts>d__38
#include "UnityEngine/Timeline/ControlPlayableAsset_-GetControlableScripts-d__38.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MaxRandInt
int UnityEngine::Timeline::ControlPlayableAsset::_get_k_MaxRandInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_get_k_MaxRandInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Timeline", "ControlPlayableAsset", "k_MaxRandInt"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MaxRandInt
void UnityEngine::Timeline::ControlPlayableAsset::_set_k_MaxRandInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_set_k_MaxRandInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "k_MaxRandInt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Playables.PlayableDirector> k_EmptyDirectorsList
System::Collections::Generic::List_1<UnityEngine::Playables::PlayableDirector*>* UnityEngine::Timeline::ControlPlayableAsset::_get_k_EmptyDirectorsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_get_k_EmptyDirectorsList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::Playables::PlayableDirector*>*>("UnityEngine.Timeline", "ControlPlayableAsset", "k_EmptyDirectorsList"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Playables.PlayableDirector> k_EmptyDirectorsList
void UnityEngine::Timeline::ControlPlayableAsset::_set_k_EmptyDirectorsList(System::Collections::Generic::List_1<UnityEngine::Playables::PlayableDirector*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_set_k_EmptyDirectorsList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "k_EmptyDirectorsList", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.ParticleSystem> k_EmptyParticlesList
System::Collections::Generic::List_1<UnityEngine::ParticleSystem*>* UnityEngine::Timeline::ControlPlayableAsset::_get_k_EmptyParticlesList() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_get_k_EmptyParticlesList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::ParticleSystem*>*>("UnityEngine.Timeline", "ControlPlayableAsset", "k_EmptyParticlesList"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.ParticleSystem> k_EmptyParticlesList
void UnityEngine::Timeline::ControlPlayableAsset::_set_k_EmptyParticlesList(System::Collections::Generic::List_1<UnityEngine::ParticleSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_set_k_EmptyParticlesList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "k_EmptyParticlesList", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<UnityEngine.Playables.PlayableDirector> s_ProcessedDirectors
System::Collections::Generic::HashSet_1<UnityEngine::Playables::PlayableDirector*>* UnityEngine::Timeline::ControlPlayableAsset::_get_s_ProcessedDirectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_get_s_ProcessedDirectors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::HashSet_1<UnityEngine::Playables::PlayableDirector*>*>("UnityEngine.Timeline", "ControlPlayableAsset", "s_ProcessedDirectors"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<UnityEngine.Playables.PlayableDirector> s_ProcessedDirectors
void UnityEngine::Timeline::ControlPlayableAsset::_set_s_ProcessedDirectors(System::Collections::Generic::HashSet_1<UnityEngine::Playables::PlayableDirector*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_set_s_ProcessedDirectors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "s_ProcessedDirectors", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<UnityEngine.GameObject> s_CreatedPrefabs
System::Collections::Generic::HashSet_1<UnityEngine::GameObject*>* UnityEngine::Timeline::ControlPlayableAsset::_get_s_CreatedPrefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_get_s_CreatedPrefabs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::HashSet_1<UnityEngine::GameObject*>*>("UnityEngine.Timeline", "ControlPlayableAsset", "s_CreatedPrefabs"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<UnityEngine.GameObject> s_CreatedPrefabs
void UnityEngine::Timeline::ControlPlayableAsset::_set_s_CreatedPrefabs(System::Collections::Generic::HashSet_1<UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_set_s_CreatedPrefabs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "s_CreatedPrefabs", value));
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.get_controllingDirectors
bool UnityEngine::Timeline::ControlPlayableAsset::get_controllingDirectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::get_controllingDirectors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controllingDirectors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.set_controllingDirectors
void UnityEngine::Timeline::ControlPlayableAsset::set_controllingDirectors(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::set_controllingDirectors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controllingDirectors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.get_controllingParticles
bool UnityEngine::Timeline::ControlPlayableAsset::get_controllingParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::get_controllingParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controllingParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.set_controllingParticles
void UnityEngine::Timeline::ControlPlayableAsset::set_controllingParticles(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::set_controllingParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controllingParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.OnEnable
void UnityEngine::Timeline::ControlPlayableAsset::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ControlPlayableAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.ConnectPlayablesToMixer
UnityEngine::Playables::Playable UnityEngine::Timeline::ControlPlayableAsset::ConnectPlayablesToMixer(UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::List_1<UnityEngine::Playables::Playable>* playables) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::ConnectPlayablesToMixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "ConnectPlayablesToMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(playables)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, playables);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.CreateActivationPlayable
void UnityEngine::Timeline::ControlPlayableAsset::CreateActivationPlayable(UnityEngine::GameObject* root, UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::List_1<UnityEngine::Playables::Playable>* outplayables) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::CreateActivationPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateActivationPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(outplayables)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, root, graph, outplayables);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.SearchHiearchyAndConnectParticleSystem
void UnityEngine::Timeline::ControlPlayableAsset::SearchHiearchyAndConnectParticleSystem(System::Collections::Generic::IEnumerable_1<UnityEngine::ParticleSystem*>* particleSystems, UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::List_1<UnityEngine::Playables::Playable>* outplayables) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::SearchHiearchyAndConnectParticleSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchHiearchyAndConnectParticleSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particleSystems), ::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(outplayables)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, particleSystems, graph, outplayables);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.SearchHierarchyAndConnectDirector
void UnityEngine::Timeline::ControlPlayableAsset::SearchHierarchyAndConnectDirector(System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableDirector*>* directors, UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::List_1<UnityEngine::Playables::Playable>* outplayables, bool disableSelfReferences) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::SearchHierarchyAndConnectDirector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchHierarchyAndConnectDirector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directors), ::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(outplayables), ::il2cpp_utils::ExtractType(disableSelfReferences)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, directors, graph, outplayables, disableSelfReferences);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.SearchHierarchyAndConnectControlableScripts
void UnityEngine::Timeline::ControlPlayableAsset::SearchHierarchyAndConnectControlableScripts(System::Collections::Generic::IEnumerable_1<UnityEngine::MonoBehaviour*>* controlableScripts, UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::List_1<UnityEngine::Playables::Playable>* outplayables) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::SearchHierarchyAndConnectControlableScripts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "SearchHierarchyAndConnectControlableScripts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controlableScripts), ::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(outplayables)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controlableScripts, graph, outplayables);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.ConnectMixerAndPlayable
void UnityEngine::Timeline::ControlPlayableAsset::ConnectMixerAndPlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable mixer, UnityEngine::Playables::Playable playable, int portIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::ConnectMixerAndPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "ConnectMixerAndPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(mixer), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(portIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, mixer, playable, portIndex);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.GetControlableScripts
System::Collections::Generic::IEnumerable_1<UnityEngine::MonoBehaviour*>* UnityEngine::Timeline::ControlPlayableAsset::GetControlableScripts(UnityEngine::GameObject* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::GetControlableScripts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "GetControlableScripts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::MonoBehaviour*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, root);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.UpdateDurationAndLoopFlag
void UnityEngine::Timeline::ControlPlayableAsset::UpdateDurationAndLoopFlag(System::Collections::Generic::IList_1<UnityEngine::Playables::PlayableDirector*>* directors, System::Collections::Generic::IList_1<UnityEngine::ParticleSystem*>* particleSystems) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::UpdateDurationAndLoopFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDurationAndLoopFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directors), ::il2cpp_utils::ExtractType(particleSystems)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, directors, particleSystems);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.GetParticleSystemRoots
System::Collections::Generic::IList_1<UnityEngine::ParticleSystem*>* UnityEngine::Timeline::ControlPlayableAsset::GetParticleSystemRoots(UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::GetParticleSystemRoots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParticleSystemRoots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<UnityEngine::ParticleSystem*>*, false>(this, ___internal__method, go);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.GetParticleSystemRoots
void UnityEngine::Timeline::ControlPlayableAsset::GetParticleSystemRoots(UnityEngine::Transform* t, System::Collections::Generic::ICollection_1<UnityEngine::ParticleSystem*>* roots) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::GetParticleSystemRoots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "GetParticleSystemRoots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(roots)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, roots);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.GatherProperties
void UnityEngine::Timeline::ControlPlayableAsset::GatherProperties(UnityEngine::Playables::PlayableDirector* director, UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::GatherProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GatherProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(director), ::il2cpp_utils::ExtractType(driver)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.PreviewParticles
void UnityEngine::Timeline::ControlPlayableAsset::PreviewParticles(UnityEngine::Timeline::IPropertyCollector* driver, System::Collections::Generic::IEnumerable_1<UnityEngine::ParticleSystem*>* particles) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::PreviewParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "PreviewParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driver), ::il2cpp_utils::ExtractType(particles)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, driver, particles);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.PreviewActivation
void UnityEngine::Timeline::ControlPlayableAsset::PreviewActivation(UnityEngine::Timeline::IPropertyCollector* driver, System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* objects) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::PreviewActivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "PreviewActivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driver), ::il2cpp_utils::ExtractType(objects)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, driver, objects);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.PreviewTimeControl
void UnityEngine::Timeline::ControlPlayableAsset::PreviewTimeControl(UnityEngine::Timeline::IPropertyCollector* driver, UnityEngine::Playables::PlayableDirector* director, System::Collections::Generic::IEnumerable_1<UnityEngine::MonoBehaviour*>* scripts) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::PreviewTimeControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "PreviewTimeControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driver), ::il2cpp_utils::ExtractType(director), ::il2cpp_utils::ExtractType(scripts)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, driver, director, scripts);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.PreviewDirectors
void UnityEngine::Timeline::ControlPlayableAsset::PreviewDirectors(UnityEngine::Timeline::IPropertyCollector* driver, System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableDirector*>* directors) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::PreviewDirectors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "PreviewDirectors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driver), ::il2cpp_utils::ExtractType(directors)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, driver, directors);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.get_duration
double UnityEngine::Timeline::ControlPlayableAsset::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::ControlPlayableAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset..cctor
void UnityEngine::Timeline::ControlPlayableAsset::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.ControlPlayableAsset/<GetControlableScripts>d__38
#include "UnityEngine/Timeline/ControlPlayableAsset_-GetControlableScripts-d__38.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/<GetControlableScripts>d__38.System.IDisposable.Dispose
void UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/<GetControlableScripts>d__38.MoveNext
bool UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/<GetControlableScripts>d__38.System.Collections.Generic.IEnumerator<UnityEngine.MonoBehaviour>.get_Current
UnityEngine::MonoBehaviour* UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System_Collections_Generic_IEnumerator$UnityEngine_MonoBehaviour$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System.Collections.Generic.IEnumerator<UnityEngine.MonoBehaviour>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.MonoBehaviour>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::MonoBehaviour*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/<GetControlableScripts>d__38.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/<GetControlableScripts>d__38.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/<GetControlableScripts>d__38.System.Collections.Generic.IEnumerable<UnityEngine.MonoBehaviour>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::MonoBehaviour*>* UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System_Collections_Generic_IEnumerable$UnityEngine_MonoBehaviour$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System.Collections.Generic.IEnumerable<UnityEngine.MonoBehaviour>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.MonoBehaviour>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<UnityEngine::MonoBehaviour*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/<GetControlableScripts>d__38.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ControlTrack
#include "UnityEngine/Timeline/ControlTrack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.DiscreteTime
#include "UnityEngine/Timeline/DiscreteTime.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Double k_Tick
double UnityEngine::Timeline::DiscreteTime::_get_k_Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::_get_k_Tick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "DiscreteTime", "k_Tick"));
}
// Autogenerated static field setter
// Set static field: static private System.Double k_Tick
void UnityEngine::Timeline::DiscreteTime::_set_k_Tick(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::_set_k_Tick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "DiscreteTime", "k_Tick", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.DiscreteTime kMaxTime
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::_get_kMaxTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::_get_kMaxTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::DiscreteTime>("UnityEngine.Timeline", "DiscreteTime", "kMaxTime"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.DiscreteTime kMaxTime
void UnityEngine::Timeline::DiscreteTime::_set_kMaxTime(UnityEngine::Timeline::DiscreteTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::_set_kMaxTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "DiscreteTime", "kMaxTime", value));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.get_tickValue
double UnityEngine::Timeline::DiscreteTime::get_tickValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::get_tickValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "get_tickValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.OneTickBefore
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::OneTickBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::OneTickBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OneTickBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.OneTickAfter
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::OneTickAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::OneTickAfter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OneTickAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.GetTick
int64_t UnityEngine::Timeline::DiscreteTime::GetTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::GetTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.FromTicks
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::FromTicks(int64_t ticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::FromTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "FromTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ticks)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ticks);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.CompareTo
int UnityEngine::Timeline::DiscreteTime::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Equals
bool UnityEngine::Timeline::DiscreteTime::Equals(UnityEngine::Timeline::DiscreteTime other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.DoubleToDiscreteTime
int64_t UnityEngine::Timeline::DiscreteTime::DoubleToDiscreteTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::DoubleToDiscreteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "DoubleToDiscreteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.FloatToDiscreteTime
int64_t UnityEngine::Timeline::DiscreteTime::FloatToDiscreteTime(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::FloatToDiscreteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "FloatToDiscreteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.IntToDiscreteTime
int64_t UnityEngine::Timeline::DiscreteTime::IntToDiscreteTime(int time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::IntToDiscreteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "IntToDiscreteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.ToDouble
double UnityEngine::Timeline::DiscreteTime::ToDouble(int64_t time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.ToFloat
float UnityEngine::Timeline::DiscreteTime::ToFloat(int64_t time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::ToFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "ToFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::operator double() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::operator float() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
// ABORTED elsewhere.  UnityEngine::Timeline::DiscreteTime::operator int64_t()
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::DiscreteTime(double& time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  *this = ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::DiscreteTime(float& time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  *this = ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::DiscreteTime(int64_t& time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  *this = ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Min
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::Min(UnityEngine::Timeline::DiscreteTime lhs, UnityEngine::Timeline::DiscreteTime rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Max
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::Max(UnityEngine::Timeline::DiscreteTime lhs, UnityEngine::Timeline::DiscreteTime rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.SnapToNearestTick
double UnityEngine::Timeline::DiscreteTime::SnapToNearestTick(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::SnapToNearestTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "SnapToNearestTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.SnapToNearestTick
float UnityEngine::Timeline::DiscreteTime::SnapToNearestTick(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::SnapToNearestTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "SnapToNearestTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.GetNearestTick
int64_t UnityEngine::Timeline::DiscreteTime::GetNearestTick(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::GetNearestTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "GetNearestTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..cctor
void UnityEngine::Timeline::DiscreteTime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Equals
bool UnityEngine::Timeline::DiscreteTime::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.ToString
::Il2CppString* UnityEngine::Timeline::DiscreteTime::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.GetHashCode
int UnityEngine::Timeline::DiscreteTime::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Equality
bool UnityEngine::Timeline::operator ==(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Inequality
bool UnityEngine::Timeline::operator !=(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_GreaterThan
bool UnityEngine::Timeline::operator >(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_LessThan
bool UnityEngine::Timeline::operator <(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_LessThanOrEqual
bool UnityEngine::Timeline::operator <=(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_GreaterThanOrEqual
bool UnityEngine::Timeline::operator >=(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Addition
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::operator+(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Subtraction
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::operator-(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.InfiniteRuntimeClip
#include "UnityEngine/Timeline/InfiniteRuntimeClip.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 kIntervalEnd
int64_t UnityEngine::Timeline::InfiniteRuntimeClip::_get_kIntervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::_get_kIntervalEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("UnityEngine.Timeline", "InfiniteRuntimeClip", "kIntervalEnd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 kIntervalEnd
void UnityEngine::Timeline::InfiniteRuntimeClip::_set_kIntervalEnd(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::_set_kIntervalEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "InfiniteRuntimeClip", "kIntervalEnd", value));
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip..cctor
void UnityEngine::Timeline::InfiniteRuntimeClip::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "InfiniteRuntimeClip", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.get_intervalStart
int64_t UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.get_intervalEnd
int64_t UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.set_enable
void UnityEngine::Timeline::InfiniteRuntimeClip::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::set_enable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.EvaluateAt
void UnityEngine::Timeline::InfiniteRuntimeClip::EvaluateAt(double localTime, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::EvaluateAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localTime), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IInterval
#include "UnityEngine/Timeline/IInterval.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IInterval.get_intervalStart
int64_t UnityEngine::Timeline::IInterval::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IInterval::get_intervalStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IInterval.get_intervalEnd
int64_t UnityEngine::Timeline::IInterval::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IInterval::get_intervalEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.RuntimeClip
#include "UnityEngine/Timeline/RuntimeClip.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.Create
void UnityEngine::Timeline::RuntimeClip::Create(UnityEngine::Timeline::TimelineClip* clip, UnityEngine::Playables::Playable clipPlayable, UnityEngine::Playables::Playable parentMixer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(clipPlayable), ::il2cpp_utils::ExtractType(parentMixer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip, clipPlayable, parentMixer);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_clip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::RuntimeClip::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_mixer
UnityEngine::Playables::Playable UnityEngine::Timeline::RuntimeClip::get_mixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::get_mixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_playable
UnityEngine::Playables::Playable UnityEngine::Timeline::RuntimeClip::get_playable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::get_playable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.SetTime
void UnityEngine::Timeline::RuntimeClip::SetTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::SetTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.SetDuration
void UnityEngine::Timeline::RuntimeClip::SetDuration(double duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::SetDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, duration);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_start
double UnityEngine::Timeline::RuntimeClip::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::get_start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_duration
double UnityEngine::Timeline::RuntimeClip::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.set_enable
void UnityEngine::Timeline::RuntimeClip::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::set_enable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.EvaluateAt
void UnityEngine::Timeline::RuntimeClip::EvaluateAt(double localTime, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::EvaluateAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localTime), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.Reset
void UnityEngine::Timeline::RuntimeClip::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.RuntimeClipBase
#include "UnityEngine/Timeline/RuntimeClipBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_start
double UnityEngine::Timeline::RuntimeClipBase::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClipBase::get_start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_duration
double UnityEngine::Timeline::RuntimeClipBase::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClipBase::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_intervalStart
int64_t UnityEngine::Timeline::RuntimeClipBase::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClipBase::get_intervalStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_intervalEnd
int64_t UnityEngine::Timeline::RuntimeClipBase::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClipBase::get_intervalEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.get_intervalStart
int64_t UnityEngine::Timeline::RuntimeElement::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::get_intervalStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.get_intervalEnd
int64_t UnityEngine::Timeline::RuntimeElement::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::get_intervalEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.get_intervalBit
int UnityEngine::Timeline::RuntimeElement::get_intervalBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::get_intervalBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.set_intervalBit
void UnityEngine::Timeline::RuntimeElement::set_intervalBit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::set_intervalBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_intervalBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.set_enable
void UnityEngine::Timeline::RuntimeElement::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::set_enable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.EvaluateAt
void UnityEngine::Timeline::RuntimeElement::EvaluateAt(double localTime, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::EvaluateAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localTime), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.Reset
void UnityEngine::Timeline::RuntimeElement::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ScheduleRuntimeClip
#include "UnityEngine/Timeline/ScheduleRuntimeClip.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.SetTime
void UnityEngine::Timeline::ScheduleRuntimeClip::SetTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::SetTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_clip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::ScheduleRuntimeClip::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_mixer
UnityEngine::Playables::Playable UnityEngine::Timeline::ScheduleRuntimeClip::get_mixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::get_mixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_playable
UnityEngine::Playables::Playable UnityEngine::Timeline::ScheduleRuntimeClip::get_playable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::get_playable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.Create
void UnityEngine::Timeline::ScheduleRuntimeClip::Create(UnityEngine::Timeline::TimelineClip* clip, UnityEngine::Playables::Playable clipPlayable, UnityEngine::Playables::Playable parentMixer, double startDelay, double finishTail) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(clipPlayable), ::il2cpp_utils::ExtractType(parentMixer), ::il2cpp_utils::ExtractType(startDelay), ::il2cpp_utils::ExtractType(finishTail)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip, clipPlayable, parentMixer, startDelay, finishTail);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_start
double UnityEngine::Timeline::ScheduleRuntimeClip::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::get_start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_duration
double UnityEngine::Timeline::ScheduleRuntimeClip::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.set_enable
void UnityEngine::Timeline::ScheduleRuntimeClip::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::set_enable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.EvaluateAt
void UnityEngine::Timeline::ScheduleRuntimeClip::EvaluateAt(double localTime, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::EvaluateAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localTime), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IMarker.get_time
double UnityEngine::Timeline::IMarker::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IMarker::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IMarker.set_time
void UnityEngine::Timeline::IMarker::set_time(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IMarker::set_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.IMarker.get_parent
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::IMarker::get_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IMarker::get_parent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IMarker.Initialize
void UnityEngine::Timeline::IMarker::Initialize(UnityEngine::Timeline::TrackAsset* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IMarker::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.INotificationOptionProvider
#include "UnityEngine/Timeline/INotificationOptionProvider.hpp"
// Including type: UnityEngine.Timeline.NotificationFlags
#include "UnityEngine/Timeline/NotificationFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.INotificationOptionProvider.get_flags
UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::INotificationOptionProvider::get_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::INotificationOptionProvider::get_flags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::NotificationFlags, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.Marker
#include "UnityEngine/Timeline/Marker.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.Marker.get_parent
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::Marker::get_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::get_parent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.Marker.set_parent
void UnityEngine::Timeline::Marker::set_parent(UnityEngine::Timeline::TrackAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::set_parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.Marker.get_time
double UnityEngine::Timeline::Marker::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.Marker.set_time
void UnityEngine::Timeline::Marker::set_time(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::set_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.Marker.UnityEngine.Timeline.IMarker.Initialize
void UnityEngine::Timeline::Marker::UnityEngine_Timeline_IMarker_Initialize(UnityEngine::Timeline::TrackAsset* parentTrack) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::UnityEngine.Timeline.IMarker.Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.IMarker.Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentTrack)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parentTrack);
}
// Autogenerated method: UnityEngine.Timeline.Marker.OnInitialize
void UnityEngine::Timeline::Marker::OnInitialize(UnityEngine::Timeline::TrackAsset* aPent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::OnInitialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aPent)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, aPent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MarkerList
#include "UnityEngine/Timeline/MarkerList.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Playables.PlayableAsset
#include "UnityEngine/Playables/PlayableAsset.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.MarkerList.get_markers
System::Collections::Generic::List_1<UnityEngine::Timeline::IMarker*>* UnityEngine::Timeline::MarkerList::get_markers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::get_markers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_markers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::Timeline::IMarker*>*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Add
void UnityEngine::Timeline::MarkerList::Add(UnityEngine::ScriptableObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, item);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Remove
bool UnityEngine::Timeline::MarkerList::Remove(UnityEngine::Timeline::IMarker* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, item);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Remove
bool UnityEngine::Timeline::MarkerList::Remove(UnityEngine::ScriptableObject* item, UnityEngine::Timeline::TimelineAsset* timelineAsset, UnityEngine::Playables::PlayableAsset* thingToDirty) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item), ::il2cpp_utils::ExtractType(timelineAsset), ::il2cpp_utils::ExtractType(thingToDirty)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, item, timelineAsset, thingToDirty);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Clear
void UnityEngine::Timeline::MarkerList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Contains
bool UnityEngine::Timeline::MarkerList::Contains(UnityEngine::ScriptableObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, item);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.GetMarkers
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IMarker*>* UnityEngine::Timeline::MarkerList::GetMarkers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::GetMarkers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetMarkers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IMarker*>*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.get_Count
int UnityEngine::Timeline::MarkerList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.get_Item
UnityEngine::Timeline::IMarker* UnityEngine::Timeline::MarkerList::get_Item(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::IMarker*, false>(*this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.GetRawMarkerList
System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>* UnityEngine::Timeline::MarkerList::GetRawMarkerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::GetRawMarkerList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRawMarkerList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.CreateMarker
UnityEngine::Timeline::IMarker* UnityEngine::Timeline::MarkerList::CreateMarker(System::Type* type, double time, UnityEngine::Timeline::TrackAsset* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::CreateMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CreateMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(owner)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::IMarker*, false>(*this, ___internal__method, type, time, owner);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.HasNotifications
bool UnityEngine::Timeline::MarkerList::HasNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::HasNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "HasNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Timeline::MarkerList::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Timeline::MarkerList::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.BuildCache
void UnityEngine::Timeline::MarkerList::BuildCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::BuildCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "BuildCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MarkerTrack
#include "UnityEngine/Timeline/MarkerTrack.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.MarkerTrack.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::MarkerTrack::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerTrack::get_outputs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SignalTrack
#include "UnityEngine/Timeline/SignalTrack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.CustomSignalEventDrawer
#include "UnityEngine/Timeline/CustomSignalEventDrawer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SignalAsset
#include "UnityEngine/Timeline/SignalAsset.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xCFDE48
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.Timeline.SignalAsset> OnEnableCallback
System::Action_1<UnityEngine::Timeline::SignalAsset*>* UnityEngine::Timeline::SignalAsset::_get_OnEnableCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalAsset::_get_OnEnableCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<UnityEngine::Timeline::SignalAsset*>*>("UnityEngine.Timeline", "SignalAsset", "OnEnableCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.Timeline.SignalAsset> OnEnableCallback
void UnityEngine::Timeline::SignalAsset::_set_OnEnableCallback(System::Action_1<UnityEngine::Timeline::SignalAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalAsset::_set_OnEnableCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "SignalAsset", "OnEnableCallback", value));
}
// Autogenerated method: UnityEngine.Timeline.SignalAsset.add_OnEnableCallback
void UnityEngine::Timeline::SignalAsset::add_OnEnableCallback(System::Action_1<UnityEngine::Timeline::SignalAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalAsset::add_OnEnableCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "SignalAsset", "add_OnEnableCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalAsset.remove_OnEnableCallback
void UnityEngine::Timeline::SignalAsset::remove_OnEnableCallback(System::Action_1<UnityEngine::Timeline::SignalAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalAsset::remove_OnEnableCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "SignalAsset", "remove_OnEnableCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalAsset.OnEnable
void UnityEngine::Timeline::SignalAsset::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalAsset::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SignalEmitter
#include "UnityEngine/Timeline/SignalEmitter.hpp"
// Including type: UnityEngine.Timeline.SignalAsset
#include "UnityEngine/Timeline/SignalAsset.hpp"
// Including type: UnityEngine.PropertyName
#include "UnityEngine/PropertyName.hpp"
// Including type: UnityEngine.Timeline.NotificationFlags
#include "UnityEngine/Timeline/NotificationFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.get_retroactive
bool UnityEngine::Timeline::SignalEmitter::get_retroactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::get_retroactive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_retroactive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.set_retroactive
void UnityEngine::Timeline::SignalEmitter::set_retroactive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::set_retroactive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_retroactive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.get_emitOnce
bool UnityEngine::Timeline::SignalEmitter::get_emitOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::get_emitOnce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_emitOnce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.set_emitOnce
void UnityEngine::Timeline::SignalEmitter::set_emitOnce(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::set_emitOnce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_emitOnce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.get_asset
UnityEngine::Timeline::SignalAsset* UnityEngine::Timeline::SignalEmitter::get_asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::get_asset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_asset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::SignalAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.set_asset
void UnityEngine::Timeline::SignalEmitter::set_asset(UnityEngine::Timeline::SignalAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::set_asset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_asset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.UnityEngine.Playables.INotification.get_id
UnityEngine::PropertyName UnityEngine::Timeline::SignalEmitter::UnityEngine_Playables_INotification_get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::UnityEngine.Playables.INotification.get_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Playables.INotification.get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::PropertyName, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.UnityEngine.Timeline.INotificationOptionProvider.get_flags
UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::SignalEmitter::UnityEngine_Timeline_INotificationOptionProvider_get_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::UnityEngine.Timeline.INotificationOptionProvider.get_flags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.INotificationOptionProvider.get_flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::NotificationFlags, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.SignalReceiver
#include "UnityEngine/Timeline/SignalReceiver.hpp"
// Including type: UnityEngine.Timeline.SignalReceiver/EventKeyValue
#include "UnityEngine/Timeline/SignalReceiver_EventKeyValue.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
// Including type: UnityEngine.Timeline.SignalAsset
#include "UnityEngine/Timeline/SignalAsset.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.OnNotify
void UnityEngine::Timeline::SignalReceiver::OnNotify(UnityEngine::Playables::Playable origin, UnityEngine::Playables::INotification* notification, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::OnNotify");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(notification), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, origin, notification, context);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.AddReaction
void UnityEngine::Timeline::SignalReceiver::AddReaction(UnityEngine::Timeline::SignalAsset* asset, UnityEngine::Events::UnityEvent* reaction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::AddReaction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddReaction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(reaction)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asset, reaction);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.AddEmptyReaction
int UnityEngine::Timeline::SignalReceiver::AddEmptyReaction(UnityEngine::Events::UnityEvent* reaction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::AddEmptyReaction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEmptyReaction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reaction)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, reaction);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.Remove
void UnityEngine::Timeline::SignalReceiver::Remove(UnityEngine::Timeline::SignalAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.GetRegisteredSignals
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::SignalAsset*>* UnityEngine::Timeline::SignalReceiver::GetRegisteredSignals() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::GetRegisteredSignals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRegisteredSignals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::SignalAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.GetReaction
UnityEngine::Events::UnityEvent* UnityEngine::Timeline::SignalReceiver::GetReaction(UnityEngine::Timeline::SignalAsset* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::GetReaction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReaction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Events::UnityEvent*, false>(this, ___internal__method, key);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.Count
int UnityEngine::Timeline::SignalReceiver::Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.ChangeSignalAtIndex
void UnityEngine::Timeline::SignalReceiver::ChangeSignalAtIndex(int idx, UnityEngine::Timeline::SignalAsset* newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::ChangeSignalAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeSignalAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx, newKey);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.RemoveAtIndex
void UnityEngine::Timeline::SignalReceiver::RemoveAtIndex(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::RemoveAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.ChangeReactionAtIndex
void UnityEngine::Timeline::SignalReceiver::ChangeReactionAtIndex(int idx, UnityEngine::Events::UnityEvent* reaction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::ChangeReactionAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeReactionAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(reaction)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx, reaction);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.GetReactionAtIndex
UnityEngine::Events::UnityEvent* UnityEngine::Timeline::SignalReceiver::GetReactionAtIndex(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::GetReactionAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReactionAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Events::UnityEvent*, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.GetSignalAssetAtIndex
UnityEngine::Timeline::SignalAsset* UnityEngine::Timeline::SignalReceiver::GetSignalAssetAtIndex(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::GetSignalAssetAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSignalAssetAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::SignalAsset*, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.OnEnable
void UnityEngine::Timeline::SignalReceiver::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SignalReceiver/EventKeyValue
#include "UnityEngine/Timeline/SignalReceiver_EventKeyValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Timeline.SignalAsset
#include "UnityEngine/Timeline/SignalAsset.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/EventKeyValue.TryGetValue
bool UnityEngine::Timeline::SignalReceiver::EventKeyValue::TryGetValue(UnityEngine::Timeline::SignalAsset* key, UnityEngine::Events::UnityEvent*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::TryGetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityEvent*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, key, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/EventKeyValue.Append
void UnityEngine::Timeline::SignalReceiver::EventKeyValue::Append(UnityEngine::Timeline::SignalAsset* key, UnityEngine::Events::UnityEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/EventKeyValue.Remove
void UnityEngine::Timeline::SignalReceiver::EventKeyValue::Remove(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/EventKeyValue.Remove
void UnityEngine::Timeline::SignalReceiver::EventKeyValue::Remove(UnityEngine::Timeline::SignalAsset* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/EventKeyValue.get_signals
System::Collections::Generic::List_1<UnityEngine::Timeline::SignalAsset*>* UnityEngine::Timeline::SignalReceiver::EventKeyValue::get_signals() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::get_signals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_signals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::Timeline::SignalAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/EventKeyValue.get_events
System::Collections::Generic::List_1<UnityEngine::Events::UnityEvent*>* UnityEngine::Timeline::SignalReceiver::EventKeyValue::get_events() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::get_events");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_events", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::Events::UnityEvent*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackAssetExtensions
#include "UnityEngine/Timeline/TrackAssetExtensions.hpp"
// Including type: UnityEngine.Timeline.GroupTrack
#include "UnityEngine/Timeline/GroupTrack.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TrackAssetExtensions.GetGroup
UnityEngine::Timeline::GroupTrack* UnityEngine::Timeline::TrackAssetExtensions::GetGroup(UnityEngine::Timeline::TrackAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAssetExtensions::GetGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAssetExtensions", "GetGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::GroupTrack*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAssetExtensions.SetGroup
void UnityEngine::Timeline::TrackAssetExtensions::SetGroup(UnityEngine::Timeline::TrackAsset* asset, UnityEngine::Timeline::GroupTrack* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAssetExtensions::SetGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAssetExtensions", "SetGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, asset, group);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.GroupTrack
#include "UnityEngine/Timeline/GroupTrack.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.GroupTrack.CanCompileClips
bool UnityEngine::Timeline::GroupTrack::CanCompileClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::GroupTrack::CanCompileClips");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanCompileClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.GroupTrack.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::GroupTrack::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::GroupTrack::get_outputs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ILayerable
#include "UnityEngine/Timeline/ILayerable.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ILayerable.CreateLayerMixer
UnityEngine::Playables::Playable UnityEngine::Timeline::ILayerable::CreateLayerMixer(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ILayerable::CreateLayerMixer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateLayerMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, inputCount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.ActivationControlPlayable
#include "UnityEngine/Timeline/ActivationControlPlayable.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::ActivationControlPlayable*> UnityEngine::Timeline::ActivationControlPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* gameObject, UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState postPlaybackState) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ActivationControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(postPlaybackState)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::ActivationControlPlayable*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, gameObject, postPlaybackState);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::ActivationControlPlayable::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::ActivationControlPlayable::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.ProcessFrame
void UnityEngine::Timeline::ActivationControlPlayable::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(userData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, userData);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.OnGraphStart
void UnityEngine::Timeline::ActivationControlPlayable::OnGraphStart(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.OnPlayableDestroy
void UnityEngine::Timeline::ActivationControlPlayable::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState
#include "UnityEngine/Timeline/ActivationControlPlayable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState Active
UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState>("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Active"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState Active
void UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Active(UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Active", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState Inactive
UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Inactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Inactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState>("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Inactive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState Inactive
void UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Inactive(UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Inactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Inactive", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState Revert
UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Revert() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Revert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState>("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Revert"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState Revert
void UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Revert(UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Revert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Revert", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ActivationControlPlayable/InitialState
#include "UnityEngine/Timeline/ActivationControlPlayable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/InitialState Unset
UnityEngine::Timeline::ActivationControlPlayable::InitialState UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Unset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Unset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::InitialState>("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Unset"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/InitialState Unset
void UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Unset(UnityEngine::Timeline::ActivationControlPlayable::InitialState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Unset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Unset", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/InitialState Active
UnityEngine::Timeline::ActivationControlPlayable::InitialState UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::InitialState>("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Active"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/InitialState Active
void UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Active(UnityEngine::Timeline::ActivationControlPlayable::InitialState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Active", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/InitialState Inactive
UnityEngine::Timeline::ActivationControlPlayable::InitialState UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Inactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Inactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::InitialState>("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Inactive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/InitialState Inactive
void UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Inactive(UnityEngine::Timeline::ActivationControlPlayable::InitialState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Inactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Inactive", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.BasicPlayableBehaviour
#include "UnityEngine/Timeline/BasicPlayableBehaviour.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.get_duration
double UnityEngine::Timeline::BasicPlayableBehaviour::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::BasicPlayableBehaviour::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::get_outputs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnGraphStart
void UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStart(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnGraphStop
void UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStop(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStop");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnPlayableCreate
void UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableCreate(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableCreate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnPlayableDestroy
void UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnBehaviourPlay
void UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnBehaviourPause
void UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.PrepareFrame
void UnityEngine::Timeline::BasicPlayableBehaviour::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.ProcessFrame
void UnityEngine::Timeline::BasicPlayableBehaviour::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::BasicPlayableBehaviour::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(owner)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, owner);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.DirectorControlPlayable
#include "UnityEngine/Timeline/DirectorControlPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::DirectorControlPlayable*> UnityEngine::Timeline::DirectorControlPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::PlayableDirector* director) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DirectorControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(director)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::DirectorControlPlayable*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, director);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.SyncSpeed
void UnityEngine::Timeline::DirectorControlPlayable::SyncSpeed(double speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::SyncSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, speed);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.SyncPlayState
void UnityEngine::Timeline::DirectorControlPlayable::SyncPlayState(UnityEngine::Playables::PlayableGraph graph, double playableTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::SyncPlayState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncPlayState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(playableTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, graph, playableTime);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.DetectDiscontinuity
bool UnityEngine::Timeline::DirectorControlPlayable::DetectDiscontinuity(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::DetectDiscontinuity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectDiscontinuity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.DetectOutOfSync
bool UnityEngine::Timeline::DirectorControlPlayable::DetectOutOfSync(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::DetectOutOfSync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectOutOfSync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.UpdateTime
void UnityEngine::Timeline::DirectorControlPlayable::UpdateTime(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::UpdateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.OnPlayableDestroy
void UnityEngine::Timeline::DirectorControlPlayable::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.PrepareFrame
void UnityEngine::Timeline::DirectorControlPlayable::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.ProcessFrame
void UnityEngine::Timeline::DirectorControlPlayable::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ITimeControl
#include "UnityEngine/Timeline/ITimeControl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ITimeControl.SetTime
void UnityEngine::Timeline::ITimeControl::SetTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ITimeControl::SetTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.ITimeControl.OnControlTimeStart
void UnityEngine::Timeline::ITimeControl::OnControlTimeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ITimeControl::OnControlTimeStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnControlTimeStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ITimeControl.OnControlTimeStop
void UnityEngine::Timeline::ITimeControl::OnControlTimeStop() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ITimeControl::OnControlTimeStop");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnControlTimeStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotificationFlags
#include "UnityEngine/Timeline/NotificationFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags TriggerInEditMode
UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_TriggerInEditMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_get_TriggerInEditMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "TriggerInEditMode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags TriggerInEditMode
void UnityEngine::Timeline::NotificationFlags::_set_TriggerInEditMode(UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_set_TriggerInEditMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "TriggerInEditMode", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags Retroactive
UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_Retroactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_get_Retroactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "Retroactive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags Retroactive
void UnityEngine::Timeline::NotificationFlags::_set_Retroactive(UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_set_Retroactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "Retroactive", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags TriggerOnce
UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_TriggerOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_get_TriggerOnce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "TriggerOnce"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags TriggerOnce
void UnityEngine::Timeline::NotificationFlags::_set_TriggerOnce(UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_set_TriggerOnce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "TriggerOnce", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ParticleControlPlayable
#include "UnityEngine/Timeline/ParticleControlPlayable.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kUnsetTime
float UnityEngine::Timeline::ParticleControlPlayable::_get_kUnsetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::_get_kUnsetTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "ParticleControlPlayable", "kUnsetTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kUnsetTime
void UnityEngine::Timeline::ParticleControlPlayable::_set_kUnsetTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::_set_kUnsetTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ParticleControlPlayable", "kUnsetTime", value));
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::ParticleControlPlayable*> UnityEngine::Timeline::ParticleControlPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::ParticleSystem* component, uint randomSeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ParticleControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(randomSeed)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::ParticleControlPlayable*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, component, randomSeed);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.get_particleSystem
UnityEngine::ParticleSystem* UnityEngine::Timeline::ParticleControlPlayable::get_particleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::get_particleSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_particleSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ParticleSystem*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.set_particleSystem
void UnityEngine::Timeline::ParticleControlPlayable::set_particleSystem(UnityEngine::ParticleSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::set_particleSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_particleSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.Initialize
void UnityEngine::Timeline::ParticleControlPlayable::Initialize(UnityEngine::ParticleSystem* ps, uint randomSeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ps), ::il2cpp_utils::ExtractType(randomSeed)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ps, randomSeed);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.SetRandomSeed
void UnityEngine::Timeline::ParticleControlPlayable::SetRandomSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::SetRandomSeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRandomSeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.PrepareFrame
void UnityEngine::Timeline::ParticleControlPlayable::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData data) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, data);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.PrefabControlPlayable
#include "UnityEngine/Timeline/PrefabControlPlayable.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::PrefabControlPlayable*> UnityEngine::Timeline::PrefabControlPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* prefabGameObject, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "PrefabControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(prefabGameObject), ::il2cpp_utils::ExtractType(parentTransform)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::PrefabControlPlayable*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, prefabGameObject, parentTransform);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.get_prefabInstance
UnityEngine::GameObject* UnityEngine::Timeline::PrefabControlPlayable::get_prefabInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::get_prefabInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.Initialize
UnityEngine::GameObject* UnityEngine::Timeline::PrefabControlPlayable::Initialize(UnityEngine::GameObject* prefabGameObject, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabGameObject), ::il2cpp_utils::ExtractType(parentTransform)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefabGameObject, parentTransform);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.SetHideFlagsRecursive
void UnityEngine::Timeline::PrefabControlPlayable::SetHideFlagsRecursive(UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::SetHideFlagsRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "PrefabControlPlayable", "SetHideFlagsRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.OnPlayableDestroy
void UnityEngine::Timeline::PrefabControlPlayable::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeControlPlayable
#include "UnityEngine/Timeline/TimeControlPlayable.hpp"
// Including type: UnityEngine.Timeline.ITimeControl
#include "UnityEngine/Timeline/ITimeControl.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeControlPlayable*> UnityEngine::Timeline::TimeControlPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Timeline::ITimeControl* timeControl) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timeControl)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeControlPlayable*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, timeControl);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.Initialize
void UnityEngine::Timeline::TimeControlPlayable::Initialize(UnityEngine::Timeline::ITimeControl* timeControl) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeControl)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, timeControl);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.PrepareFrame
void UnityEngine::Timeline::TimeControlPlayable::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/<>c
#include "UnityEngine/Timeline/TimeNotificationBehaviour_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.DirectorWrapMode
#include "UnityEngine/Playables/DirectorWrapMode.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.set_timeSource
void UnityEngine::Timeline::TimeNotificationBehaviour::set_timeSource(UnityEngine::Playables::Playable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::set_timeSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeNotificationBehaviour*> UnityEngine::Timeline::TimeNotificationBehaviour::Create(UnityEngine::Playables::PlayableGraph graph, double duration, UnityEngine::Playables::DirectorWrapMode loopMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(loopMode)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeNotificationBehaviour*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, duration, loopMode);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.AddNotification
void UnityEngine::Timeline::TimeNotificationBehaviour::AddNotification(double time, UnityEngine::Playables::INotification* payload, UnityEngine::Timeline::NotificationFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::AddNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(payload), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time, payload, flags);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.SortNotifications
void UnityEngine::Timeline::TimeNotificationBehaviour::SortNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::SortNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.CanRestoreNotification
bool UnityEngine::Timeline::TimeNotificationBehaviour::CanRestoreNotification(UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry e, UnityEngine::Playables::FrameData info, double currentTime, double previousTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::CanRestoreNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "CanRestoreNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(currentTime), ::il2cpp_utils::ExtractType(previousTime)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, e, info, currentTime, previousTime);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.TriggerNotificationsInRange
void UnityEngine::Timeline::TimeNotificationBehaviour::TriggerNotificationsInRange(double start, double end, UnityEngine::Playables::FrameData info, UnityEngine::Playables::Playable playable, bool checkState) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::TriggerNotificationsInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerNotificationsInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(checkState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, start, end, info, playable, checkState);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.SyncDurationWithExternalSource
void UnityEngine::Timeline::TimeNotificationBehaviour::SyncDurationWithExternalSource(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::SyncDurationWithExternalSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncDurationWithExternalSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Trigger_internal
void UnityEngine::Timeline::TimeNotificationBehaviour::Trigger_internal(UnityEngine::Playables::Playable playable, UnityEngine::Playables::PlayableOutput output, UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry& e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::Trigger_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Trigger_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, playable, output, e);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Restore_internal
void UnityEngine::Timeline::TimeNotificationBehaviour::Restore_internal(UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry& e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::Restore_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Restore_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, e);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.OnGraphStart
void UnityEngine::Timeline::TimeNotificationBehaviour::OnGraphStart(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.OnBehaviourPause
void UnityEngine::Timeline::TimeNotificationBehaviour::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.PrepareFrame
void UnityEngine::Timeline::TimeNotificationBehaviour::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry.get_triggerInEditor
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerInEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_triggerInEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry.get_prewarm
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_prewarm() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_prewarm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_prewarm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry.get_triggerOnce
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerOnce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_triggerOnce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/<>c
#include "UnityEngine/Timeline/TimeNotificationBehaviour_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.TimeNotificationBehaviour/<>c <>9
UnityEngine::Timeline::TimeNotificationBehaviour::$$c* UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimeNotificationBehaviour::$$c*>("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.TimeNotificationBehaviour/<>c <>9
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9(UnityEngine::Timeline::TimeNotificationBehaviour::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry> <>9__12_0
System::Comparison_1<UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>* UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9__12_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>*>("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9__12_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry> <>9__12_0
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9__12_0(System::Comparison_1<UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9__12_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9__12_0", value)));
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/<>c..cctor
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/<>c.<SortNotifications>b__12_0
int UnityEngine::Timeline::TimeNotificationBehaviour::$$c::$SortNotifications$b__12_0(UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry x, UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry y) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::<SortNotifications>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortNotifications>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.PlayableTrack
#include "UnityEngine/Timeline/PlayableTrack.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.PlayableTrack.OnCreateClip
void UnityEngine::Timeline::PlayableTrack::OnCreateClip(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PlayableTrack::OnCreateClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCreateClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackMediaType
#include "UnityEngine/Timeline/TrackMediaType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackClipTypeAttribute
#include "UnityEngine/Timeline/TrackClipTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotKeyableAttribute
#include "UnityEngine/Timeline/NotKeyableAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackBindingFlags
#include "UnityEngine/Timeline/TrackBindingFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags None
UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags None
void UnityEngine::Timeline::TrackBindingFlags::_set_None(UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags AllowCreateComponent
UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_AllowCreateComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_get_AllowCreateComponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "AllowCreateComponent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags AllowCreateComponent
void UnityEngine::Timeline::TrackBindingFlags::_set_AllowCreateComponent(UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_set_AllowCreateComponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "AllowCreateComponent", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags All
UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags All
void UnityEngine::Timeline::TrackBindingFlags::_set_All(UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "All", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackBindingTypeAttribute
#include "UnityEngine/Timeline/TrackBindingTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SupportsChildTracksAttribute
#include "UnityEngine/Timeline/SupportsChildTracksAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IgnoreOnPlayableTrackAttribute
#include "UnityEngine/Timeline/IgnoreOnPlayableTrackAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeFieldAttribute
#include "UnityEngine/Timeline/TimeFieldAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimeFieldAttribute.get_useEditMode
UnityEngine::Timeline::TimeFieldAttribute::UseEditMode UnityEngine::Timeline::TimeFieldAttribute::get_useEditMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::get_useEditMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useEditMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimeFieldAttribute::UseEditMode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeFieldAttribute/UseEditMode
#include "UnityEngine/Timeline/TimeFieldAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimeFieldAttribute/UseEditMode None
UnityEngine::Timeline::TimeFieldAttribute::UseEditMode UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimeFieldAttribute::UseEditMode>("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimeFieldAttribute/UseEditMode None
void UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_None(UnityEngine::Timeline::TimeFieldAttribute::UseEditMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimeFieldAttribute/UseEditMode ApplyEditMode
UnityEngine::Timeline::TimeFieldAttribute::UseEditMode UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_ApplyEditMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_ApplyEditMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimeFieldAttribute::UseEditMode>("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "ApplyEditMode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimeFieldAttribute/UseEditMode ApplyEditMode
void UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_ApplyEditMode(UnityEngine::Timeline::TimeFieldAttribute::UseEditMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_ApplyEditMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "ApplyEditMode", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.HideInMenuAttribute
#include "UnityEngine/Timeline/HideInMenuAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.CustomStyleAttribute
#include "UnityEngine/Timeline/CustomStyleAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.MenuCategoryAttribute
#include "UnityEngine/Timeline/MenuCategoryAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ITimelineClipAsset
#include "UnityEngine/Timeline/ITimelineClipAsset.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ITimelineClipAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ITimelineClipAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ITimelineClipAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ITimelineEvaluateCallback
#include "UnityEngine/Timeline/ITimelineEvaluateCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ITimelineEvaluateCallback.Evaluate
void UnityEngine::Timeline::ITimelineEvaluateCallback::Evaluate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ITimelineEvaluateCallback::Evaluate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelinePlayable
#include "UnityEngine/Timeline/TimelinePlayable.hpp"
// Including type: UnityEngine.Timeline.IntervalTree`1
#include "UnityEngine/Timeline/IntervalTree_1.hpp"
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Timeline.ITimelineEvaluateCallback
#include "UnityEngine/Timeline/ITimelineEvaluateCallback.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Animations.AnimationPlayableOutput
#include "UnityEngine/Animations/AnimationPlayableOutput.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Boolean muteAudioScrubbing
bool UnityEngine::Timeline::TimelinePlayable::_get_muteAudioScrubbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::_get_muteAudioScrubbing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngine.Timeline", "TimelinePlayable", "muteAudioScrubbing"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean muteAudioScrubbing
void UnityEngine::Timeline::TimelinePlayable::_set_muteAudioScrubbing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::_set_muteAudioScrubbing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelinePlayable", "muteAudioScrubbing", value));
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimelinePlayable*> UnityEngine::Timeline::TimelinePlayable::Create(UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* tracks, UnityEngine::GameObject* go, bool autoRebalance, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(autoRebalance), ::il2cpp_utils::ExtractType(createOutputs)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimelinePlayable*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, tracks, go, autoRebalance, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Compile
void UnityEngine::Timeline::TimelinePlayable::Compile(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable timelinePlayable, System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* tracks, UnityEngine::GameObject* go, bool autoRebalance, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::Compile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timelinePlayable), ::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(autoRebalance), ::il2cpp_utils::ExtractType(createOutputs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, graph, timelinePlayable, tracks, go, autoRebalance, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CompileTrackList
void UnityEngine::Timeline::TimelinePlayable::CompileTrackList(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable timelinePlayable, System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* tracks, UnityEngine::GameObject* go, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::CompileTrackList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileTrackList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timelinePlayable), ::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(createOutputs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, graph, timelinePlayable, tracks, go, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CreateTrackOutput
void UnityEngine::Timeline::TimelinePlayable::CreateTrackOutput(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Timeline::TrackAsset* track, UnityEngine::GameObject* go, UnityEngine::Playables::Playable playable, int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::CreateTrackOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTrackOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(port)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, graph, track, go, playable, port);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.EvaluateWeightsForAnimationPlayableOutput
void UnityEngine::Timeline::TimelinePlayable::EvaluateWeightsForAnimationPlayableOutput(UnityEngine::Timeline::TrackAsset* track, UnityEngine::Animations::AnimationPlayableOutput animOutput) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::EvaluateWeightsForAnimationPlayableOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateWeightsForAnimationPlayableOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(animOutput)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, track, animOutput);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.EvaluateAnimationPreviewUpdateCallback
void UnityEngine::Timeline::TimelinePlayable::EvaluateAnimationPreviewUpdateCallback(UnityEngine::Timeline::TrackAsset* track, UnityEngine::Animations::AnimationPlayableOutput animOutput) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::EvaluateAnimationPreviewUpdateCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateAnimationPreviewUpdateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(animOutput)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, track, animOutput);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CreatePlayableGraph
UnityEngine::Playables::Playable UnityEngine::Timeline::TimelinePlayable::CreatePlayableGraph(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Timeline::TrackAsset* asset, UnityEngine::GameObject* go, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree, UnityEngine::Playables::Playable timelinePlayable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::CreatePlayableGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", "CreatePlayableGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(timelinePlayable)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, asset, go, tree, timelinePlayable);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CreateTrackPlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::TimelinePlayable::CreateTrackPlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable timelinePlayable, UnityEngine::Timeline::TrackAsset* track, UnityEngine::GameObject* go, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::CreateTrackPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTrackPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timelinePlayable), ::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(createOutputs)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, timelinePlayable, track, go, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Evaluate
void UnityEngine::Timeline::TimelinePlayable::Evaluate(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::Evaluate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, frameData);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CacheTrack
void UnityEngine::Timeline::TimelinePlayable::CacheTrack(UnityEngine::Timeline::TrackAsset* track, UnityEngine::Playables::Playable playable, int port, UnityEngine::Playables::Playable parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::CacheTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CacheTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, track, playable, port, parent);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.ForAOTCompilationOnly
void UnityEngine::Timeline::TimelinePlayable::ForAOTCompilationOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::ForAOTCompilationOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", "ForAOTCompilationOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable..cctor
void UnityEngine::Timeline::TimelinePlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.PrepareFrame
void UnityEngine::Timeline::TimelinePlayable::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.Extrapolation
#include "UnityEngine/Timeline/Extrapolation.hpp"
// Including type: UnityEngine.Timeline.Extrapolation/<>c
#include "UnityEngine/Timeline/Extrapolation_--c.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Double kMinExtrapolationTime
double UnityEngine::Timeline::Extrapolation::_get_kMinExtrapolationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::_get_kMinExtrapolationTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "Extrapolation", "kMinExtrapolationTime"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Double kMinExtrapolationTime
void UnityEngine::Timeline::Extrapolation::_set_kMinExtrapolationTime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::_set_kMinExtrapolationTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation", "kMinExtrapolationTime", value));
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation.CalculateExtrapolationTimes
void UnityEngine::Timeline::Extrapolation::CalculateExtrapolationTimes(UnityEngine::Timeline::TrackAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::CalculateExtrapolationTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", "CalculateExtrapolationTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation.SortClipsByStartTime
::Array<UnityEngine::Timeline::TimelineClip*>* UnityEngine::Timeline::Extrapolation::SortClipsByStartTime(::Array<UnityEngine::Timeline::TimelineClip*>* clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::SortClipsByStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", "SortClipsByStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clips)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Timeline::TimelineClip*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clips);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation..cctor
void UnityEngine::Timeline::Extrapolation::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.Extrapolation/<>c
#include "UnityEngine/Timeline/Extrapolation_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.Extrapolation/<>c <>9
UnityEngine::Timeline::Extrapolation::$$c* UnityEngine::Timeline::Extrapolation::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Timeline::Extrapolation::$$c*>("UnityEngine.Timeline", "Extrapolation/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.Extrapolation/<>c <>9
void UnityEngine::Timeline::Extrapolation::$$c::_set_$$9(UnityEngine::Timeline::Extrapolation::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__2_0
System::Comparison_1<UnityEngine::Timeline::TimelineClip*>* UnityEngine::Timeline::Extrapolation::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<UnityEngine::Timeline::TimelineClip*>*>("UnityEngine.Timeline", "Extrapolation/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__2_0
void UnityEngine::Timeline::Extrapolation::$$c::_set_$$9__2_0(System::Comparison_1<UnityEngine::Timeline::TimelineClip*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation/<>c", "<>9__2_0", value)));
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation/<>c..cctor
void UnityEngine::Timeline::Extrapolation::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation/<>c.<SortClipsByStartTime>b__2_0
int UnityEngine::Timeline::Extrapolation::$$c::$SortClipsByStartTime$b__2_0(UnityEngine::Timeline::TimelineClip* clip1, UnityEngine::Timeline::TimelineClip* clip2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::<SortClipsByStartTime>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortClipsByStartTime>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip1), ::il2cpp_utils::ExtractType(clip2)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, clip1, clip2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.HashUtility
#include "UnityEngine/Timeline/HashUtility.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2, h3);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2, h3, h4);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4, int h5) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4), ::il2cpp_utils::ExtractType(h5)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2, h3, h4, h5);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4, int h5, int h6) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4), ::il2cpp_utils::ExtractType(h5), ::il2cpp_utils::ExtractType(h6)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2, h3, h4, h5, h6);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4, int h5, int h6, int h7) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4), ::il2cpp_utils::ExtractType(h5), ::il2cpp_utils::ExtractType(h6), ::il2cpp_utils::ExtractType(h7)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2, h3, h4, h5, h6, h7);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(::Array<int>* hashes) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashes)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.PushActiveGameObject
void UnityEngine::Timeline::IPropertyCollector::PushActiveGameObject(UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::PushActiveGameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushActiveGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.PopActiveGameObject
void UnityEngine::Timeline::IPropertyCollector::PopActiveGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::PopActiveGameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopActiveGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClip
void UnityEngine::Timeline::IPropertyCollector::AddFromClip(UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClips
void UnityEngine::Timeline::IPropertyCollector::AddFromClips(System::Collections::Generic::IEnumerable_1<UnityEngine::AnimationClip*>* clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromClips");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clips)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clips);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromName
void UnityEngine::Timeline::IPropertyCollector::AddFromName(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClip
void UnityEngine::Timeline::IPropertyCollector::AddFromClip(UnityEngine::GameObject* obj, UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, clip);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClips
void UnityEngine::Timeline::IPropertyCollector::AddFromClips(UnityEngine::GameObject* obj, System::Collections::Generic::IEnumerable_1<UnityEngine::AnimationClip*>* clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromClips");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(clips)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, clips);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromName
void UnityEngine::Timeline::IPropertyCollector::AddFromName(UnityEngine::GameObject* obj, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, name);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromName
void UnityEngine::Timeline::IPropertyCollector::AddFromName(UnityEngine::Component* component, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, component, name);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromComponent
void UnityEngine::Timeline::IPropertyCollector::AddFromComponent(UnityEngine::GameObject* obj, UnityEngine::Component* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromComponent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(component)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, component);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddObjectProperties
void UnityEngine::Timeline::IPropertyCollector::AddObjectProperties(UnityEngine::Object* obj, UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddObjectProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddObjectProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, clip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IPropertyPreview
#include "UnityEngine/Timeline/IPropertyPreview.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IPropertyPreview.GatherProperties
void UnityEngine::Timeline::IPropertyPreview::GatherProperties(UnityEngine::Playables::PlayableDirector* director, UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyPreview::GatherProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GatherProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(director), ::il2cpp_utils::ExtractType(driver)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotificationUtilities
#include "UnityEngine/Timeline/NotificationUtilities.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.NotificationUtilities.CreateNotificationsPlayable
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeNotificationBehaviour*> UnityEngine::Timeline::NotificationUtilities::CreateNotificationsPlayable(UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IMarker*>* markers, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationUtilities::CreateNotificationsPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "NotificationUtilities", "CreateNotificationsPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(markers), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeNotificationBehaviour*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, markers, go);
}
// Autogenerated method: UnityEngine.Timeline.NotificationUtilities.TrackTypeSupportsNotifications
bool UnityEngine::Timeline::NotificationUtilities::TrackTypeSupportsNotifications(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationUtilities::TrackTypeSupportsNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "NotificationUtilities", "TrackTypeSupportsNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimeUtility
#include "UnityEngine/Timeline/TimeUtility.hpp"
// Including type: UnityEngine.Timeline.TimeUtility/<>c
#include "UnityEngine/Timeline/TimeUtility_--c.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Double kTimeEpsilon
double UnityEngine::Timeline::TimeUtility::_get_kTimeEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_get_kTimeEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "kTimeEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kTimeEpsilon
void UnityEngine::Timeline::TimeUtility::_set_kTimeEpsilon(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_set_kTimeEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "kTimeEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double kFrameRateEpsilon
double UnityEngine::Timeline::TimeUtility::_get_kFrameRateEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_get_kFrameRateEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "kFrameRateEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kFrameRateEpsilon
void UnityEngine::Timeline::TimeUtility::_set_kFrameRateEpsilon(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_set_kFrameRateEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "kFrameRateEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double k_MaxTimelineDurationInSeconds
double UnityEngine::Timeline::TimeUtility::_get_k_MaxTimelineDurationInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_get_k_MaxTimelineDurationInSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "k_MaxTimelineDurationInSeconds"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double k_MaxTimelineDurationInSeconds
void UnityEngine::Timeline::TimeUtility::_set_k_MaxTimelineDurationInSeconds(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_set_k_MaxTimelineDurationInSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "k_MaxTimelineDurationInSeconds", value));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ValidateFrameRate
void UnityEngine::Timeline::TimeUtility::ValidateFrameRate(double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::ValidateFrameRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ValidateFrameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameRate)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ToFrames
int UnityEngine::Timeline::TimeUtility::ToFrames(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::ToFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ToFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ToExactFrames
double UnityEngine::Timeline::TimeUtility::ToExactFrames(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::ToExactFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ToExactFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.FromFrames
double UnityEngine::Timeline::TimeUtility::FromFrames(int frames, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::FromFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "FromFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frames), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, frames, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.FromFrames
double UnityEngine::Timeline::TimeUtility::FromFrames(double frames, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::FromFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "FromFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frames), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, frames, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.OnFrameBoundary
bool UnityEngine::Timeline::TimeUtility::OnFrameBoundary(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::OnFrameBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "OnFrameBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.GetEpsilon
double UnityEngine::Timeline::TimeUtility::GetEpsilon(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::GetEpsilon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "GetEpsilon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.OnFrameBoundary
bool UnityEngine::Timeline::TimeUtility::OnFrameBoundary(double time, double frameRate, double epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::OnFrameBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "OnFrameBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(epsilon)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate, epsilon);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.RoundToFrame
double UnityEngine::Timeline::TimeUtility::RoundToFrame(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::RoundToFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "RoundToFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.TimeAsFrames
::Il2CppString* UnityEngine::Timeline::TimeUtility::TimeAsFrames(double timeValue, double frameRate, ::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::TimeAsFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "TimeAsFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeValue), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeValue, frameRate, format);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.TimeAsTimeCode
::Il2CppString* UnityEngine::Timeline::TimeUtility::TimeAsTimeCode(double timeValue, double frameRate, ::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::TimeAsTimeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "TimeAsTimeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeValue), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeValue, frameRate, format);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ParseTimeCode
double UnityEngine::Timeline::TimeUtility::ParseTimeCode(::Il2CppString* timeCode, double frameRate, double defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::ParseTimeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ParseTimeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeCode), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeCode, frameRate, defaultValue);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.GetAnimationClipLength
double UnityEngine::Timeline::TimeUtility::GetAnimationClipLength(UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::GetAnimationClipLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "GetAnimationClipLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.RemoveChar
::Il2CppString* UnityEngine::Timeline::TimeUtility::RemoveChar(::Il2CppString* str, System::Func_2<::Il2CppChar, bool>* charToRemoveFunc) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::RemoveChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "RemoveChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(charToRemoveFunc)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, charToRemoveFunc);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility..cctor
void UnityEngine::Timeline::TimeUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeUtility/<>c
#include "UnityEngine/Timeline/TimeUtility_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.TimeUtility/<>c <>9
UnityEngine::Timeline::TimeUtility::$$c* UnityEngine::Timeline::TimeUtility::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimeUtility::$$c*>("UnityEngine.Timeline", "TimeUtility/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.TimeUtility/<>c <>9
void UnityEngine::Timeline::TimeUtility::$$c::_set_$$9(UnityEngine::Timeline::TimeUtility::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Char,System.Boolean> <>9__14_0
System::Func_2<::Il2CppChar, bool>* UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__14_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppChar, bool>*>("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__14_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Char,System.Boolean> <>9__14_0
void UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__14_0(System::Func_2<::Il2CppChar, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__14_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__14_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Char,System.Boolean> <>9__14_1
System::Func_2<::Il2CppChar, bool>* UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__14_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__14_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppChar, bool>*>("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__14_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Char,System.Boolean> <>9__14_1
void UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__14_1(System::Func_2<::Il2CppChar, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__14_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__14_1", value)));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility/<>c..cctor
void UnityEngine::Timeline::TimeUtility::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility/<>c.<ParseTimeCode>b__14_0
bool UnityEngine::Timeline::TimeUtility::$$c::$ParseTimeCode$b__14_0(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::<ParseTimeCode>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ParseTimeCode>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility/<>c.<ParseTimeCode>b__14_1
bool UnityEngine::Timeline::TimeUtility::$$c::$ParseTimeCode$b__14_1(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::<ParseTimeCode>b__14_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ParseTimeCode>b__14_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities
#include "UnityEngine/Timeline/TimelineCreateUtilities.hpp"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_0
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_0.hpp"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_1
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.GenerateUniqueActorName
::Il2CppString* UnityEngine::Timeline::TimelineCreateUtilities::GenerateUniqueActorName(System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>* tracks, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::GenerateUniqueActorName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "GenerateUniqueActorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, tracks, name);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.SaveAssetIntoObject
void UnityEngine::Timeline::TimelineCreateUtilities::SaveAssetIntoObject(UnityEngine::Object* childAsset, UnityEngine::Object* masterAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::SaveAssetIntoObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "SaveAssetIntoObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(childAsset), ::il2cpp_utils::ExtractType(masterAsset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, childAsset, masterAsset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.CreateAnimationClipForTrack
UnityEngine::AnimationClip* UnityEngine::Timeline::TimelineCreateUtilities::CreateAnimationClipForTrack(::Il2CppString* name, UnityEngine::Timeline::TrackAsset* track, bool isLegacy) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::CreateAnimationClipForTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "CreateAnimationClipForTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(isLegacy)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, track, isLegacy);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.ValidateParentTrack
bool UnityEngine::Timeline::TimelineCreateUtilities::ValidateParentTrack(UnityEngine::Timeline::TrackAsset* parent, System::Type* childType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::ValidateParentTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "ValidateParentTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(childType)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parent, childType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_0
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_0.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_0.<GenerateUniqueActorName>b__0
bool UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::$GenerateUniqueActorName$b__0(UnityEngine::ScriptableObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::<GenerateUniqueActorName>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GenerateUniqueActorName>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_1
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_1.<GenerateUniqueActorName>b__1
bool UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::$GenerateUniqueActorName$b__1(UnityEngine::ScriptableObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::<GenerateUniqueActorName>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GenerateUniqueActorName>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineUndo
#include "UnityEngine/Timeline/TimelineUndo.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.PushDestroyUndo
void UnityEngine::Timeline::TimelineUndo::PushDestroyUndo(UnityEngine::Timeline::TimelineAsset* timeline, UnityEngine::Object* thingToDirty, UnityEngine::Object* objectToDestroy) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineUndo::PushDestroyUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "PushDestroyUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeline), ::il2cpp_utils::ExtractType(thingToDirty), ::il2cpp_utils::ExtractType(objectToDestroy)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeline, thingToDirty, objectToDestroy);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.PushUndo
void UnityEngine::Timeline::TimelineUndo::PushUndo(::Array<UnityEngine::Object*>* thingsToDirty, ::Il2CppString* operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineUndo::PushUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "PushUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thingsToDirty), ::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, thingsToDirty, operation);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.PushUndo
void UnityEngine::Timeline::TimelineUndo::PushUndo(UnityEngine::Object* thingToDirty, ::Il2CppString* operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineUndo::PushUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "PushUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thingToDirty), ::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, thingToDirty, operation);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.RegisterCreatedObjectUndo
void UnityEngine::Timeline::TimelineUndo::RegisterCreatedObjectUndo(UnityEngine::Object* thingCreated, ::Il2CppString* operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineUndo::RegisterCreatedObjectUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "RegisterCreatedObjectUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thingCreated), ::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, thingCreated, operation);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.UndoName
::Il2CppString* UnityEngine::Timeline::TimelineUndo::UndoName(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineUndo::UndoName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "UndoName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.WeightUtility
#include "UnityEngine/Timeline/WeightUtility.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.WeightUtility.NormalizeMixer
float UnityEngine::Timeline::WeightUtility::NormalizeMixer(UnityEngine::Playables::Playable mixer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::WeightUtility::NormalizeMixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "WeightUtility", "NormalizeMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mixer)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mixer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.NavMeshPathStatus
#include "UnityEngine/AI/NavMeshPathStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.NavMeshPathStatus PathComplete
UnityEngine::AI::NavMeshPathStatus UnityEngine::AI::NavMeshPathStatus::_get_PathComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_get_PathComplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AI::NavMeshPathStatus>("UnityEngine.AI", "NavMeshPathStatus", "PathComplete"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.NavMeshPathStatus PathComplete
void UnityEngine::AI::NavMeshPathStatus::_set_PathComplete(UnityEngine::AI::NavMeshPathStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_set_PathComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshPathStatus", "PathComplete", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.NavMeshPathStatus PathPartial
UnityEngine::AI::NavMeshPathStatus UnityEngine::AI::NavMeshPathStatus::_get_PathPartial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_get_PathPartial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AI::NavMeshPathStatus>("UnityEngine.AI", "NavMeshPathStatus", "PathPartial"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.NavMeshPathStatus PathPartial
void UnityEngine::AI::NavMeshPathStatus::_set_PathPartial(UnityEngine::AI::NavMeshPathStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_set_PathPartial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshPathStatus", "PathPartial", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.NavMeshPathStatus PathInvalid
UnityEngine::AI::NavMeshPathStatus UnityEngine::AI::NavMeshPathStatus::_get_PathInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_get_PathInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AI::NavMeshPathStatus>("UnityEngine.AI", "NavMeshPathStatus", "PathInvalid"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.NavMeshPathStatus PathInvalid
void UnityEngine::AI::NavMeshPathStatus::_set_PathInvalid(UnityEngine::AI::NavMeshPathStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_set_PathInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshPathStatus", "PathInvalid", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AI.NavMeshPath
#include "UnityEngine/AI/NavMeshPath.hpp"
// Including type: UnityEngine.AI.NavMeshPathStatus
#include "UnityEngine/AI/NavMeshPathStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AI.NavMeshPath.InitializeNavMeshPath
System::IntPtr UnityEngine::AI::NavMeshPath::InitializeNavMeshPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::InitializeNavMeshPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshPath", "InitializeNavMeshPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.DestroyNavMeshPath
void UnityEngine::AI::NavMeshPath::DestroyNavMeshPath(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::DestroyNavMeshPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshPath", "DestroyNavMeshPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.CalculateCornersInternal
::Array<UnityEngine::Vector3>* UnityEngine::AI::NavMeshPath::CalculateCornersInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::CalculateCornersInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateCornersInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.ClearCornersInternal
void UnityEngine::AI::NavMeshPath::ClearCornersInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::ClearCornersInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCornersInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.ClearCorners
void UnityEngine::AI::NavMeshPath::ClearCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::ClearCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.CalculateCorners
void UnityEngine::AI::NavMeshPath::CalculateCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::CalculateCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.get_corners
::Array<UnityEngine::Vector3>* UnityEngine::AI::NavMeshPath::get_corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::get_corners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_corners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.get_status
UnityEngine::AI::NavMeshPathStatus UnityEngine::AI::NavMeshPath::get_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::get_status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AI::NavMeshPathStatus, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.Finalize
void UnityEngine::AI::NavMeshPath::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.NavMeshHit
#include "UnityEngine/AI/NavMeshHit.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AI.NavMeshHit.get_position
UnityEngine::Vector3 UnityEngine::AI::NavMeshHit::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshHit::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.NavMesh
#include "UnityEngine/AI/NavMesh.hpp"
// Including type: UnityEngine.AI.NavMesh/OnNavMeshPreUpdate
#include "UnityEngine/AI/NavMesh_OnNavMeshPreUpdate.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.AI.NavMeshPath
#include "UnityEngine/AI/NavMeshPath.hpp"
// Including type: UnityEngine.AI.NavMeshHit
#include "UnityEngine/AI/NavMeshHit.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.NavMesh/OnNavMeshPreUpdate onPreUpdate
UnityEngine::AI::NavMesh::OnNavMeshPreUpdate* UnityEngine::AI::NavMesh::_get_onPreUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::_get_onPreUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AI::NavMesh::OnNavMeshPreUpdate*>("UnityEngine.AI", "NavMesh", "onPreUpdate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.NavMesh/OnNavMeshPreUpdate onPreUpdate
void UnityEngine::AI::NavMesh::_set_onPreUpdate(UnityEngine::AI::NavMesh::OnNavMeshPreUpdate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::_set_onPreUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMesh", "onPreUpdate", value));
}
// Autogenerated method: UnityEngine.AI.NavMesh.Internal_CallOnNavMeshPreUpdate
void UnityEngine::AI::NavMesh::Internal_CallOnNavMeshPreUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::Internal_CallOnNavMeshPreUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "Internal_CallOnNavMeshPreUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMesh.CalculatePath
bool UnityEngine::AI::NavMesh::CalculatePath(UnityEngine::Vector3 sourcePosition, UnityEngine::Vector3 targetPosition, int areaMask, UnityEngine::AI::NavMeshPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::CalculatePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "CalculatePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractType(areaMask), ::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourcePosition, targetPosition, areaMask, path);
}
// Autogenerated method: UnityEngine.AI.NavMesh.CalculatePathInternal
bool UnityEngine::AI::NavMesh::CalculatePathInternal(UnityEngine::Vector3 sourcePosition, UnityEngine::Vector3 targetPosition, int areaMask, UnityEngine::AI::NavMeshPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::CalculatePathInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "CalculatePathInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractType(areaMask), ::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourcePosition, targetPosition, areaMask, path);
}
// Autogenerated method: UnityEngine.AI.NavMesh.SamplePosition
bool UnityEngine::AI::NavMesh::SamplePosition(UnityEngine::Vector3 sourcePosition, UnityEngine::AI::NavMeshHit& hit, float maxDistance, int areaMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::SamplePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "SamplePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractIndependentType<UnityEngine::AI::NavMeshHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(areaMask)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourcePosition, hit, maxDistance, areaMask);
}
// Autogenerated method: UnityEngine.AI.NavMesh.CalculatePathInternal_Injected
bool UnityEngine::AI::NavMesh::CalculatePathInternal_Injected(UnityEngine::Vector3& sourcePosition, UnityEngine::Vector3& targetPosition, int areaMask, UnityEngine::AI::NavMeshPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::CalculatePathInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "CalculatePathInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractType(areaMask), ::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourcePosition, targetPosition, areaMask, path);
}
// Autogenerated method: UnityEngine.AI.NavMesh.SamplePosition_Injected
bool UnityEngine::AI::NavMesh::SamplePosition_Injected(UnityEngine::Vector3& sourcePosition, UnityEngine::AI::NavMeshHit& hit, float maxDistance, int areaMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::SamplePosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "SamplePosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractIndependentType<UnityEngine::AI::NavMeshHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(areaMask)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourcePosition, hit, maxDistance, areaMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AI.NavMesh/OnNavMeshPreUpdate
#include "UnityEngine/AI/NavMesh_OnNavMeshPreUpdate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AI.NavMesh/OnNavMeshPreUpdate.Invoke
void UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMesh/OnNavMeshPreUpdate.BeginInvoke
System::IAsyncResult* UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.AI.NavMesh/OnNavMeshPreUpdate.EndInvoke
void UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidJNIHelper
#include "UnityEngine/AndroidJNIHelper.hpp"
// Including type: UnityEngine.AndroidJavaRunnable
#include "UnityEngine/AndroidJavaRunnable.hpp"
// Including type: UnityEngine.AndroidJavaProxy
#include "UnityEngine/AndroidJavaProxy.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AndroidJNIHelper.get_debug
bool UnityEngine::AndroidJNIHelper::get_debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::get_debug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "get_debug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.set_debug
void UnityEngine::AndroidJNIHelper::set_debug(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::set_debug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "set_debug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetConstructorID
System::IntPtr UnityEngine::AndroidJNIHelper::GetConstructorID(System::IntPtr javaClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetConstructorID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetConstructorID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetConstructorID
System::IntPtr UnityEngine::AndroidJNIHelper::GetConstructorID(System::IntPtr javaClass, ::Il2CppString* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetConstructorID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetConstructorID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, signature);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetMethodID
System::IntPtr UnityEngine::AndroidJNIHelper::GetMethodID(System::IntPtr javaClass, ::Il2CppString* methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(methodName)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, methodName);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetMethodID
System::IntPtr UnityEngine::AndroidJNIHelper::GetMethodID(System::IntPtr javaClass, ::Il2CppString* methodName, ::Il2CppString* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, methodName, signature);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetMethodID
System::IntPtr UnityEngine::AndroidJNIHelper::GetMethodID(System::IntPtr javaClass, ::Il2CppString* methodName, ::Il2CppString* signature, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, methodName, signature, isStatic);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetFieldID
System::IntPtr UnityEngine::AndroidJNIHelper::GetFieldID(System::IntPtr javaClass, ::Il2CppString* fieldName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetFieldID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(fieldName)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, fieldName);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetFieldID
System::IntPtr UnityEngine::AndroidJNIHelper::GetFieldID(System::IntPtr javaClass, ::Il2CppString* fieldName, ::Il2CppString* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetFieldID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(fieldName), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, fieldName, signature);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetFieldID
System::IntPtr UnityEngine::AndroidJNIHelper::GetFieldID(System::IntPtr javaClass, ::Il2CppString* fieldName, ::Il2CppString* signature, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetFieldID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(fieldName), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, fieldName, signature, isStatic);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.CreateJavaRunnable
System::IntPtr UnityEngine::AndroidJNIHelper::CreateJavaRunnable(UnityEngine::AndroidJavaRunnable* jrunnable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::CreateJavaRunnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "CreateJavaRunnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jrunnable)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jrunnable);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.CreateJavaProxy
System::IntPtr UnityEngine::AndroidJNIHelper::CreateJavaProxy(UnityEngine::AndroidJavaProxy* proxy) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::CreateJavaProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "CreateJavaProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxy)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxy);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.ConvertToJNIArray
System::IntPtr UnityEngine::AndroidJNIHelper::ConvertToJNIArray(System::Array* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::ConvertToJNIArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "ConvertToJNIArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.CreateJNIArgArray
::Array<UnityEngine::jvalue>* UnityEngine::AndroidJNIHelper::CreateJNIArgArray(::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::CreateJNIArgArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "CreateJNIArgArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::jvalue>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.DeleteJNIArgArray
void UnityEngine::AndroidJNIHelper::DeleteJNIArgArray(::Array<::Il2CppObject*>* args, ::Array<UnityEngine::jvalue>* jniArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::DeleteJNIArgArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "DeleteJNIArgArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(jniArgs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args, jniArgs);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetConstructorID
System::IntPtr UnityEngine::AndroidJNIHelper::GetConstructorID(System::IntPtr jclass, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetConstructorID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetConstructorID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jclass), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, args);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetMethodID
System::IntPtr UnityEngine::AndroidJNIHelper::GetMethodID(System::IntPtr jclass, ::Il2CppString* methodName, ::Array<::Il2CppObject*>* args, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jclass), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, methodName, args, isStatic);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetSignature
::Il2CppString* UnityEngine::AndroidJNIHelper::GetSignature(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetSignature
::Il2CppString* UnityEngine::AndroidJNIHelper::GetSignature(::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidJNI
#include "UnityEngine/AndroidJNI.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AndroidJNI.AttachCurrentThread
int UnityEngine::AndroidJNI::AttachCurrentThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::AttachCurrentThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "AttachCurrentThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.DetachCurrentThread
int UnityEngine::AndroidJNI::DetachCurrentThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::DetachCurrentThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "DetachCurrentThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetVersion
int UnityEngine::AndroidJNI::GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.FindClass
System::IntPtr UnityEngine::AndroidJNI::FindClass(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FindClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FindClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromReflectedMethod
System::IntPtr UnityEngine::AndroidJNI::FromReflectedMethod(System::IntPtr refMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromReflectedMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromReflectedMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(refMethod)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, refMethod);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromReflectedField
System::IntPtr UnityEngine::AndroidJNI::FromReflectedField(System::IntPtr refField) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromReflectedField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromReflectedField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(refField)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, refField);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToReflectedMethod
System::IntPtr UnityEngine::AndroidJNI::ToReflectedMethod(System::IntPtr clazz, System::IntPtr methodID, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToReflectedMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToReflectedMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, isStatic);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToReflectedField
System::IntPtr UnityEngine::AndroidJNI::ToReflectedField(System::IntPtr clazz, System::IntPtr fieldID, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToReflectedField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToReflectedField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, isStatic);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetSuperclass
System::IntPtr UnityEngine::AndroidJNI::GetSuperclass(System::IntPtr clazz) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetSuperclass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetSuperclass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz);
}
// Autogenerated method: UnityEngine.AndroidJNI.IsAssignableFrom
bool UnityEngine::AndroidJNI::IsAssignableFrom(System::IntPtr clazz1, System::IntPtr clazz2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::IsAssignableFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "IsAssignableFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz1), ::il2cpp_utils::ExtractType(clazz2)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz1, clazz2);
}
// Autogenerated method: UnityEngine.AndroidJNI.Throw
int UnityEngine::AndroidJNI::Throw(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.ThrowNew
int UnityEngine::AndroidJNI::ThrowNew(System::IntPtr clazz, ::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ThrowNew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ThrowNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, message);
}
// Autogenerated method: UnityEngine.AndroidJNI.ExceptionOccurred
System::IntPtr UnityEngine::AndroidJNI::ExceptionOccurred() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ExceptionOccurred");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ExceptionOccurred", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.ExceptionDescribe
void UnityEngine::AndroidJNI::ExceptionDescribe() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ExceptionDescribe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ExceptionDescribe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.ExceptionClear
void UnityEngine::AndroidJNI::ExceptionClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ExceptionClear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ExceptionClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.FatalError
void UnityEngine::AndroidJNI::FatalError(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FatalError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FatalError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: UnityEngine.AndroidJNI.PushLocalFrame
int UnityEngine::AndroidJNI::PushLocalFrame(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::PushLocalFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "PushLocalFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, capacity);
}
// Autogenerated method: UnityEngine.AndroidJNI.PopLocalFrame
System::IntPtr UnityEngine::AndroidJNI::PopLocalFrame(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::PopLocalFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "PopLocalFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewGlobalRef
System::IntPtr UnityEngine::AndroidJNI::NewGlobalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewGlobalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewGlobalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.DeleteGlobalRef
void UnityEngine::AndroidJNI::DeleteGlobalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::DeleteGlobalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "DeleteGlobalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewWeakGlobalRef
System::IntPtr UnityEngine::AndroidJNI::NewWeakGlobalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewWeakGlobalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewWeakGlobalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.DeleteWeakGlobalRef
void UnityEngine::AndroidJNI::DeleteWeakGlobalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::DeleteWeakGlobalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "DeleteWeakGlobalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewLocalRef
System::IntPtr UnityEngine::AndroidJNI::NewLocalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewLocalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewLocalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.DeleteLocalRef
void UnityEngine::AndroidJNI::DeleteLocalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::DeleteLocalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "DeleteLocalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.IsSameObject
bool UnityEngine::AndroidJNI::IsSameObject(System::IntPtr obj1, System::IntPtr obj2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::IsSameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "IsSameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj1), ::il2cpp_utils::ExtractType(obj2)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj1, obj2);
}
// Autogenerated method: UnityEngine.AndroidJNI.EnsureLocalCapacity
int UnityEngine::AndroidJNI::EnsureLocalCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::EnsureLocalCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "EnsureLocalCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, capacity);
}
// Autogenerated method: UnityEngine.AndroidJNI.AllocObject
System::IntPtr UnityEngine::AndroidJNI::AllocObject(System::IntPtr clazz) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::AllocObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "AllocObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewObject
System::IntPtr UnityEngine::AndroidJNI::NewObject(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetObjectClass
System::IntPtr UnityEngine::AndroidJNI::GetObjectClass(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetObjectClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetObjectClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.IsInstanceOf
bool UnityEngine::AndroidJNI::IsInstanceOf(System::IntPtr obj, System::IntPtr clazz) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::IsInstanceOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "IsInstanceOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(clazz)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, clazz);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetMethodID
System::IntPtr UnityEngine::AndroidJNI::GetMethodID(System::IntPtr clazz, ::Il2CppString* name, ::Il2CppString* sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sig)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetFieldID
System::IntPtr UnityEngine::AndroidJNI::GetFieldID(System::IntPtr clazz, ::Il2CppString* name, ::Il2CppString* sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetFieldID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sig)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticMethodID
System::IntPtr UnityEngine::AndroidJNI::GetStaticMethodID(System::IntPtr clazz, ::Il2CppString* name, ::Il2CppString* sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sig)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticFieldID
System::IntPtr UnityEngine::AndroidJNI::GetStaticFieldID(System::IntPtr clazz, ::Il2CppString* name, ::Il2CppString* sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticFieldID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticFieldID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sig)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewString
System::IntPtr UnityEngine::AndroidJNI::NewString(::Il2CppString* chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, chars);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewStringFromStr
System::IntPtr UnityEngine::AndroidJNI::NewStringFromStr(::Il2CppString* chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewStringFromStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewStringFromStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, chars);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewString
System::IntPtr UnityEngine::AndroidJNI::NewString(::Array<::Il2CppChar>* chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, chars);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewStringUTF
System::IntPtr UnityEngine::AndroidJNI::NewStringUTF(::Il2CppString* bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewStringUTF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewStringUTF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStringChars
::Il2CppString* UnityEngine::AndroidJNI::GetStringChars(System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStringChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStringChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStringLength
int UnityEngine::AndroidJNI::GetStringLength(System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStringLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStringLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStringUTFLength
int UnityEngine::AndroidJNI::GetStringUTFLength(System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStringUTFLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStringUTFLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStringUTFChars
::Il2CppString* UnityEngine::AndroidJNI::GetStringUTFChars(System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStringUTFChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStringUTFChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStringMethod
::Il2CppString* UnityEngine::AndroidJNI::CallStringMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStringMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStringMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallObjectMethod
System::IntPtr UnityEngine::AndroidJNI::CallObjectMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallObjectMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallObjectMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallIntMethod
int UnityEngine::AndroidJNI::CallIntMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallIntMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallIntMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallBooleanMethod
bool UnityEngine::AndroidJNI::CallBooleanMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallBooleanMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallBooleanMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallShortMethod
int16_t UnityEngine::AndroidJNI::CallShortMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallShortMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallShortMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallByteMethod
uint8_t UnityEngine::AndroidJNI::CallByteMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallByteMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallByteMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallSByteMethod
int8_t UnityEngine::AndroidJNI::CallSByteMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallSByteMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallSByteMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallCharMethod
::Il2CppChar UnityEngine::AndroidJNI::CallCharMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallCharMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallCharMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallFloatMethod
float UnityEngine::AndroidJNI::CallFloatMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallFloatMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallFloatMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallDoubleMethod
double UnityEngine::AndroidJNI::CallDoubleMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallDoubleMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallDoubleMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallLongMethod
int64_t UnityEngine::AndroidJNI::CallLongMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallLongMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallLongMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallVoidMethod
void UnityEngine::AndroidJNI::CallVoidMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallVoidMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallVoidMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStringField
::Il2CppString* UnityEngine::AndroidJNI::GetStringField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStringField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStringField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetObjectField
System::IntPtr UnityEngine::AndroidJNI::GetObjectField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetObjectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetObjectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetBooleanField
bool UnityEngine::AndroidJNI::GetBooleanField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetBooleanField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetBooleanField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetByteField
uint8_t UnityEngine::AndroidJNI::GetByteField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetSByteField
int8_t UnityEngine::AndroidJNI::GetSByteField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetSByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetSByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetCharField
::Il2CppChar UnityEngine::AndroidJNI::GetCharField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetCharField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetCharField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetShortField
int16_t UnityEngine::AndroidJNI::GetShortField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetShortField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetShortField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetIntField
int UnityEngine::AndroidJNI::GetIntField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetIntField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetIntField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetLongField
int64_t UnityEngine::AndroidJNI::GetLongField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetLongField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetLongField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetFloatField
float UnityEngine::AndroidJNI::GetFloatField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetFloatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetFloatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetDoubleField
double UnityEngine::AndroidJNI::GetDoubleField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetDoubleField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetDoubleField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStringField
void UnityEngine::AndroidJNI::SetStringField(System::IntPtr obj, System::IntPtr fieldID, ::Il2CppString* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStringField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStringField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetObjectField
void UnityEngine::AndroidJNI::SetObjectField(System::IntPtr obj, System::IntPtr fieldID, System::IntPtr val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetObjectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetObjectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetBooleanField
void UnityEngine::AndroidJNI::SetBooleanField(System::IntPtr obj, System::IntPtr fieldID, bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetBooleanField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetBooleanField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetByteField
void UnityEngine::AndroidJNI::SetByteField(System::IntPtr obj, System::IntPtr fieldID, uint8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetSByteField
void UnityEngine::AndroidJNI::SetSByteField(System::IntPtr obj, System::IntPtr fieldID, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetSByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetSByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetCharField
void UnityEngine::AndroidJNI::SetCharField(System::IntPtr obj, System::IntPtr fieldID, ::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetCharField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetCharField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetShortField
void UnityEngine::AndroidJNI::SetShortField(System::IntPtr obj, System::IntPtr fieldID, int16_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetShortField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetShortField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetIntField
void UnityEngine::AndroidJNI::SetIntField(System::IntPtr obj, System::IntPtr fieldID, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetIntField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetIntField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetLongField
void UnityEngine::AndroidJNI::SetLongField(System::IntPtr obj, System::IntPtr fieldID, int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetLongField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetLongField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetFloatField
void UnityEngine::AndroidJNI::SetFloatField(System::IntPtr obj, System::IntPtr fieldID, float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetFloatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetFloatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetDoubleField
void UnityEngine::AndroidJNI::SetDoubleField(System::IntPtr obj, System::IntPtr fieldID, double val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetDoubleField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetDoubleField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticStringMethod
::Il2CppString* UnityEngine::AndroidJNI::CallStaticStringMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticStringMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticStringMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticObjectMethod
System::IntPtr UnityEngine::AndroidJNI::CallStaticObjectMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticObjectMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticObjectMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticIntMethod
int UnityEngine::AndroidJNI::CallStaticIntMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticIntMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticIntMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticBooleanMethod
bool UnityEngine::AndroidJNI::CallStaticBooleanMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticBooleanMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticBooleanMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticShortMethod
int16_t UnityEngine::AndroidJNI::CallStaticShortMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticShortMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticShortMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticByteMethod
uint8_t UnityEngine::AndroidJNI::CallStaticByteMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticByteMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticByteMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticSByteMethod
int8_t UnityEngine::AndroidJNI::CallStaticSByteMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticSByteMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticSByteMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticCharMethod
::Il2CppChar UnityEngine::AndroidJNI::CallStaticCharMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticCharMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticCharMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticFloatMethod
float UnityEngine::AndroidJNI::CallStaticFloatMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticFloatMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticFloatMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticDoubleMethod
double UnityEngine::AndroidJNI::CallStaticDoubleMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticDoubleMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticDoubleMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticLongMethod
int64_t UnityEngine::AndroidJNI::CallStaticLongMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticLongMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticLongMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticVoidMethod
void UnityEngine::AndroidJNI::CallStaticVoidMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticVoidMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticVoidMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticStringField
::Il2CppString* UnityEngine::AndroidJNI::GetStaticStringField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticStringField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticStringField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticObjectField
System::IntPtr UnityEngine::AndroidJNI::GetStaticObjectField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticObjectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticObjectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticBooleanField
bool UnityEngine::AndroidJNI::GetStaticBooleanField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticBooleanField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticBooleanField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticByteField
uint8_t UnityEngine::AndroidJNI::GetStaticByteField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticSByteField
int8_t UnityEngine::AndroidJNI::GetStaticSByteField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticSByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticSByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticCharField
::Il2CppChar UnityEngine::AndroidJNI::GetStaticCharField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticCharField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticCharField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticShortField
int16_t UnityEngine::AndroidJNI::GetStaticShortField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticShortField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticShortField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticIntField
int UnityEngine::AndroidJNI::GetStaticIntField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticIntField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticIntField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticLongField
int64_t UnityEngine::AndroidJNI::GetStaticLongField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticLongField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticLongField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticFloatField
float UnityEngine::AndroidJNI::GetStaticFloatField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticFloatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticFloatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticDoubleField
double UnityEngine::AndroidJNI::GetStaticDoubleField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticDoubleField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticDoubleField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticStringField
void UnityEngine::AndroidJNI::SetStaticStringField(System::IntPtr clazz, System::IntPtr fieldID, ::Il2CppString* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticStringField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticStringField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticObjectField
void UnityEngine::AndroidJNI::SetStaticObjectField(System::IntPtr clazz, System::IntPtr fieldID, System::IntPtr val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticObjectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticObjectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticBooleanField
void UnityEngine::AndroidJNI::SetStaticBooleanField(System::IntPtr clazz, System::IntPtr fieldID, bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticBooleanField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticBooleanField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticByteField
void UnityEngine::AndroidJNI::SetStaticByteField(System::IntPtr clazz, System::IntPtr fieldID, uint8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticSByteField
void UnityEngine::AndroidJNI::SetStaticSByteField(System::IntPtr clazz, System::IntPtr fieldID, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticSByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticSByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticCharField
void UnityEngine::AndroidJNI::SetStaticCharField(System::IntPtr clazz, System::IntPtr fieldID, ::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticCharField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticCharField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticShortField
void UnityEngine::AndroidJNI::SetStaticShortField(System::IntPtr clazz, System::IntPtr fieldID, int16_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticShortField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticShortField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticIntField
void UnityEngine::AndroidJNI::SetStaticIntField(System::IntPtr clazz, System::IntPtr fieldID, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticIntField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticIntField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticLongField
void UnityEngine::AndroidJNI::SetStaticLongField(System::IntPtr clazz, System::IntPtr fieldID, int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticLongField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticLongField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticFloatField
void UnityEngine::AndroidJNI::SetStaticFloatField(System::IntPtr clazz, System::IntPtr fieldID, float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticFloatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticFloatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticDoubleField
void UnityEngine::AndroidJNI::SetStaticDoubleField(System::IntPtr clazz, System::IntPtr fieldID, double val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticDoubleField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticDoubleField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToBooleanArray
System::IntPtr UnityEngine::AndroidJNI::ToBooleanArray(::Array<bool>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToBooleanArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToBooleanArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToByteArray
System::IntPtr UnityEngine::AndroidJNI::ToByteArray(::Array<uint8_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToSByteArray
System::IntPtr UnityEngine::AndroidJNI::ToSByteArray(::Array<int8_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToSByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToSByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToCharArray
System::IntPtr UnityEngine::AndroidJNI::ToCharArray(::Array<::Il2CppChar>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToShortArray
System::IntPtr UnityEngine::AndroidJNI::ToShortArray(::Array<int16_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToShortArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToShortArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToIntArray
System::IntPtr UnityEngine::AndroidJNI::ToIntArray(::Array<int>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToLongArray
System::IntPtr UnityEngine::AndroidJNI::ToLongArray(::Array<int64_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToLongArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToLongArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToFloatArray
System::IntPtr UnityEngine::AndroidJNI::ToFloatArray(::Array<float>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToDoubleArray
System::IntPtr UnityEngine::AndroidJNI::ToDoubleArray(::Array<double>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToDoubleArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToDoubleArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToObjectArray
System::IntPtr UnityEngine::AndroidJNI::ToObjectArray(::Array<System::IntPtr>* array, System::IntPtr arrayClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToObjectArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToObjectArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayClass)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, arrayClass);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToObjectArray
System::IntPtr UnityEngine::AndroidJNI::ToObjectArray(::Array<System::IntPtr>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToObjectArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToObjectArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromBooleanArray
::Array<bool>* UnityEngine::AndroidJNI::FromBooleanArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromBooleanArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromBooleanArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<bool>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromByteArray
::Array<uint8_t>* UnityEngine::AndroidJNI::FromByteArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromSByteArray
::Array<int8_t>* UnityEngine::AndroidJNI::FromSByteArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromSByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromSByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromCharArray
::Array<::Il2CppChar>* UnityEngine::AndroidJNI::FromCharArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromShortArray
::Array<int16_t>* UnityEngine::AndroidJNI::FromShortArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromShortArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromShortArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int16_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromIntArray
::Array<int>* UnityEngine::AndroidJNI::FromIntArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromLongArray
::Array<int64_t>* UnityEngine::AndroidJNI::FromLongArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromLongArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromLongArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int64_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromFloatArray
::Array<float>* UnityEngine::AndroidJNI::FromFloatArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<float>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromDoubleArray
::Array<double>* UnityEngine::AndroidJNI::FromDoubleArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromDoubleArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromDoubleArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<double>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromObjectArray
::Array<System::IntPtr>* UnityEngine::AndroidJNI::FromObjectArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromObjectArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromObjectArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::IntPtr>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetArrayLength
int UnityEngine::AndroidJNI::GetArrayLength(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetArrayLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetArrayLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewBooleanArray
System::IntPtr UnityEngine::AndroidJNI::NewBooleanArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewBooleanArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewBooleanArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewByteArray
System::IntPtr UnityEngine::AndroidJNI::NewByteArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewSByteArray
System::IntPtr UnityEngine::AndroidJNI::NewSByteArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewSByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewSByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewCharArray
System::IntPtr UnityEngine::AndroidJNI::NewCharArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewShortArray
System::IntPtr UnityEngine::AndroidJNI::NewShortArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewShortArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewShortArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewIntArray
System::IntPtr UnityEngine::AndroidJNI::NewIntArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewLongArray
System::IntPtr UnityEngine::AndroidJNI::NewLongArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewLongArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewLongArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewFloatArray
System::IntPtr UnityEngine::AndroidJNI::NewFloatArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewDoubleArray
System::IntPtr UnityEngine::AndroidJNI::NewDoubleArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewDoubleArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewDoubleArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewObjectArray
System::IntPtr UnityEngine::AndroidJNI::NewObjectArray(int size, System::IntPtr clazz, System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewObjectArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewObjectArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size, clazz, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetBooleanArrayElement
bool UnityEngine::AndroidJNI::GetBooleanArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetBooleanArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetBooleanArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetByteArrayElement
uint8_t UnityEngine::AndroidJNI::GetByteArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetByteArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetByteArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetSByteArrayElement
int8_t UnityEngine::AndroidJNI::GetSByteArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetSByteArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetSByteArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetCharArrayElement
::Il2CppChar UnityEngine::AndroidJNI::GetCharArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetCharArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetCharArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetShortArrayElement
int16_t UnityEngine::AndroidJNI::GetShortArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetShortArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetShortArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetIntArrayElement
int UnityEngine::AndroidJNI::GetIntArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetIntArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetIntArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetLongArrayElement
int64_t UnityEngine::AndroidJNI::GetLongArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetLongArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetLongArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetFloatArrayElement
float UnityEngine::AndroidJNI::GetFloatArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetFloatArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetFloatArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetDoubleArrayElement
double UnityEngine::AndroidJNI::GetDoubleArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetDoubleArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetDoubleArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetObjectArrayElement
System::IntPtr UnityEngine::AndroidJNI::GetObjectArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetObjectArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetObjectArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetBooleanArrayElement
void UnityEngine::AndroidJNI::SetBooleanArrayElement(System::IntPtr array, int index, uint8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetBooleanArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetBooleanArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetBooleanArrayElement
void UnityEngine::AndroidJNI::SetBooleanArrayElement(System::IntPtr array, int index, bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetBooleanArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetBooleanArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetByteArrayElement
void UnityEngine::AndroidJNI::SetByteArrayElement(System::IntPtr array, int index, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetByteArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetByteArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetSByteArrayElement
void UnityEngine::AndroidJNI::SetSByteArrayElement(System::IntPtr array, int index, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetSByteArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetSByteArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetCharArrayElement
void UnityEngine::AndroidJNI::SetCharArrayElement(System::IntPtr array, int index, ::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetCharArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetCharArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetShortArrayElement
void UnityEngine::AndroidJNI::SetShortArrayElement(System::IntPtr array, int index, int16_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetShortArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetShortArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetIntArrayElement
void UnityEngine::AndroidJNI::SetIntArrayElement(System::IntPtr array, int index, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetIntArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetIntArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetLongArrayElement
void UnityEngine::AndroidJNI::SetLongArrayElement(System::IntPtr array, int index, int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetLongArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetLongArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetFloatArrayElement
void UnityEngine::AndroidJNI::SetFloatArrayElement(System::IntPtr array, int index, float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetFloatArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetFloatArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetDoubleArrayElement
void UnityEngine::AndroidJNI::SetDoubleArrayElement(System::IntPtr array, int index, double val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetDoubleArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetDoubleArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetObjectArrayElement
void UnityEngine::AndroidJNI::SetObjectArrayElement(System::IntPtr array, int index, System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetObjectArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetObjectArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, obj);
}
