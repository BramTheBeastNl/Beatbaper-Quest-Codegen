// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.DiscreteTime
#include "UnityEngine/Timeline/DiscreteTime.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Double k_Tick
double UnityEngine::Timeline::DiscreteTime::_get_k_Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::_get_k_Tick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "DiscreteTime", "k_Tick"));
}
// Autogenerated static field setter
// Set static field: static private System.Double k_Tick
void UnityEngine::Timeline::DiscreteTime::_set_k_Tick(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::_set_k_Tick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "DiscreteTime", "k_Tick", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.DiscreteTime kMaxTime
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::_get_kMaxTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::_get_kMaxTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::DiscreteTime>("UnityEngine.Timeline", "DiscreteTime", "kMaxTime"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.DiscreteTime kMaxTime
void UnityEngine::Timeline::DiscreteTime::_set_kMaxTime(UnityEngine::Timeline::DiscreteTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::_set_kMaxTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "DiscreteTime", "kMaxTime", value));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.get_tickValue
double UnityEngine::Timeline::DiscreteTime::get_tickValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::get_tickValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "get_tickValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.OneTickBefore
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::OneTickBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::OneTickBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OneTickBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.OneTickAfter
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::OneTickAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::OneTickAfter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OneTickAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.GetTick
int64_t UnityEngine::Timeline::DiscreteTime::GetTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::GetTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.FromTicks
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::FromTicks(int64_t ticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::FromTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "FromTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ticks)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ticks);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.CompareTo
int UnityEngine::Timeline::DiscreteTime::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Equals
bool UnityEngine::Timeline::DiscreteTime::Equals(UnityEngine::Timeline::DiscreteTime other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.DoubleToDiscreteTime
int64_t UnityEngine::Timeline::DiscreteTime::DoubleToDiscreteTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::DoubleToDiscreteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "DoubleToDiscreteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.FloatToDiscreteTime
int64_t UnityEngine::Timeline::DiscreteTime::FloatToDiscreteTime(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::FloatToDiscreteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "FloatToDiscreteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.IntToDiscreteTime
int64_t UnityEngine::Timeline::DiscreteTime::IntToDiscreteTime(int time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::IntToDiscreteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "IntToDiscreteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.ToDouble
double UnityEngine::Timeline::DiscreteTime::ToDouble(int64_t time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.ToFloat
float UnityEngine::Timeline::DiscreteTime::ToFloat(int64_t time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::ToFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "ToFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::operator double() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::operator float() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
// ABORTED elsewhere.  UnityEngine::Timeline::DiscreteTime::operator int64_t()
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::DiscreteTime(double& time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  *this = ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::DiscreteTime(float& time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  *this = ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::DiscreteTime(int64_t& time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  *this = ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Min
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::Min(UnityEngine::Timeline::DiscreteTime lhs, UnityEngine::Timeline::DiscreteTime rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Max
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::Max(UnityEngine::Timeline::DiscreteTime lhs, UnityEngine::Timeline::DiscreteTime rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.SnapToNearestTick
double UnityEngine::Timeline::DiscreteTime::SnapToNearestTick(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::SnapToNearestTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "SnapToNearestTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.SnapToNearestTick
float UnityEngine::Timeline::DiscreteTime::SnapToNearestTick(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::SnapToNearestTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "SnapToNearestTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.GetNearestTick
int64_t UnityEngine::Timeline::DiscreteTime::GetNearestTick(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::GetNearestTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "GetNearestTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..cctor
void UnityEngine::Timeline::DiscreteTime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Equals
bool UnityEngine::Timeline::DiscreteTime::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.ToString
::Il2CppString* UnityEngine::Timeline::DiscreteTime::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.GetHashCode
int UnityEngine::Timeline::DiscreteTime::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Equality
bool UnityEngine::Timeline::operator ==(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Inequality
bool UnityEngine::Timeline::operator !=(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_GreaterThan
bool UnityEngine::Timeline::operator >(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_LessThan
bool UnityEngine::Timeline::operator <(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_LessThanOrEqual
bool UnityEngine::Timeline::operator <=(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_GreaterThanOrEqual
bool UnityEngine::Timeline::operator >=(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Addition
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::operator+(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Subtraction
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::operator-(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.InfiniteRuntimeClip
#include "UnityEngine/Timeline/InfiniteRuntimeClip.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 kIntervalEnd
int64_t UnityEngine::Timeline::InfiniteRuntimeClip::_get_kIntervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::_get_kIntervalEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("UnityEngine.Timeline", "InfiniteRuntimeClip", "kIntervalEnd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 kIntervalEnd
void UnityEngine::Timeline::InfiniteRuntimeClip::_set_kIntervalEnd(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::_set_kIntervalEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "InfiniteRuntimeClip", "kIntervalEnd", value));
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip..cctor
void UnityEngine::Timeline::InfiniteRuntimeClip::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "InfiniteRuntimeClip", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.get_intervalStart
int64_t UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.get_intervalEnd
int64_t UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.set_enable
void UnityEngine::Timeline::InfiniteRuntimeClip::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::set_enable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.EvaluateAt
void UnityEngine::Timeline::InfiniteRuntimeClip::EvaluateAt(double localTime, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::EvaluateAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localTime), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IInterval
#include "UnityEngine/Timeline/IInterval.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IInterval.get_intervalStart
int64_t UnityEngine::Timeline::IInterval::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IInterval::get_intervalStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IInterval.get_intervalEnd
int64_t UnityEngine::Timeline::IInterval::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IInterval::get_intervalEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.RuntimeClip
#include "UnityEngine/Timeline/RuntimeClip.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.Create
void UnityEngine::Timeline::RuntimeClip::Create(UnityEngine::Timeline::TimelineClip* clip, UnityEngine::Playables::Playable clipPlayable, UnityEngine::Playables::Playable parentMixer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(clipPlayable), ::il2cpp_utils::ExtractType(parentMixer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip, clipPlayable, parentMixer);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_clip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::RuntimeClip::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_mixer
UnityEngine::Playables::Playable UnityEngine::Timeline::RuntimeClip::get_mixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::get_mixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_playable
UnityEngine::Playables::Playable UnityEngine::Timeline::RuntimeClip::get_playable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::get_playable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.SetTime
void UnityEngine::Timeline::RuntimeClip::SetTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::SetTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.SetDuration
void UnityEngine::Timeline::RuntimeClip::SetDuration(double duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::SetDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, duration);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_start
double UnityEngine::Timeline::RuntimeClip::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::get_start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_duration
double UnityEngine::Timeline::RuntimeClip::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.set_enable
void UnityEngine::Timeline::RuntimeClip::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::set_enable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.EvaluateAt
void UnityEngine::Timeline::RuntimeClip::EvaluateAt(double localTime, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::EvaluateAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localTime), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.Reset
void UnityEngine::Timeline::RuntimeClip::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.RuntimeClipBase
#include "UnityEngine/Timeline/RuntimeClipBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_start
double UnityEngine::Timeline::RuntimeClipBase::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClipBase::get_start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_duration
double UnityEngine::Timeline::RuntimeClipBase::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClipBase::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_intervalStart
int64_t UnityEngine::Timeline::RuntimeClipBase::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClipBase::get_intervalStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_intervalEnd
int64_t UnityEngine::Timeline::RuntimeClipBase::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClipBase::get_intervalEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.get_intervalStart
int64_t UnityEngine::Timeline::RuntimeElement::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::get_intervalStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.get_intervalEnd
int64_t UnityEngine::Timeline::RuntimeElement::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::get_intervalEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.get_intervalBit
int UnityEngine::Timeline::RuntimeElement::get_intervalBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::get_intervalBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.set_intervalBit
void UnityEngine::Timeline::RuntimeElement::set_intervalBit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::set_intervalBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_intervalBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.set_enable
void UnityEngine::Timeline::RuntimeElement::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::set_enable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.EvaluateAt
void UnityEngine::Timeline::RuntimeElement::EvaluateAt(double localTime, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::EvaluateAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localTime), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.Reset
void UnityEngine::Timeline::RuntimeElement::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ScheduleRuntimeClip
#include "UnityEngine/Timeline/ScheduleRuntimeClip.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.SetTime
void UnityEngine::Timeline::ScheduleRuntimeClip::SetTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::SetTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_clip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::ScheduleRuntimeClip::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_mixer
UnityEngine::Playables::Playable UnityEngine::Timeline::ScheduleRuntimeClip::get_mixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::get_mixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_playable
UnityEngine::Playables::Playable UnityEngine::Timeline::ScheduleRuntimeClip::get_playable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::get_playable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.Create
void UnityEngine::Timeline::ScheduleRuntimeClip::Create(UnityEngine::Timeline::TimelineClip* clip, UnityEngine::Playables::Playable clipPlayable, UnityEngine::Playables::Playable parentMixer, double startDelay, double finishTail) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(clipPlayable), ::il2cpp_utils::ExtractType(parentMixer), ::il2cpp_utils::ExtractType(startDelay), ::il2cpp_utils::ExtractType(finishTail)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip, clipPlayable, parentMixer, startDelay, finishTail);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_start
double UnityEngine::Timeline::ScheduleRuntimeClip::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::get_start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_duration
double UnityEngine::Timeline::ScheduleRuntimeClip::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.set_enable
void UnityEngine::Timeline::ScheduleRuntimeClip::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::set_enable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.EvaluateAt
void UnityEngine::Timeline::ScheduleRuntimeClip::EvaluateAt(double localTime, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::EvaluateAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localTime), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IMarker.get_time
double UnityEngine::Timeline::IMarker::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IMarker::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IMarker.set_time
void UnityEngine::Timeline::IMarker::set_time(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IMarker::set_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.IMarker.get_parent
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::IMarker::get_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IMarker::get_parent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IMarker.Initialize
void UnityEngine::Timeline::IMarker::Initialize(UnityEngine::Timeline::TrackAsset* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IMarker::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.INotificationOptionProvider
#include "UnityEngine/Timeline/INotificationOptionProvider.hpp"
// Including type: UnityEngine.Timeline.NotificationFlags
#include "UnityEngine/Timeline/NotificationFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.INotificationOptionProvider.get_flags
UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::INotificationOptionProvider::get_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::INotificationOptionProvider::get_flags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::NotificationFlags, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.Marker
#include "UnityEngine/Timeline/Marker.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.Marker.get_parent
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::Marker::get_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::get_parent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.Marker.set_parent
void UnityEngine::Timeline::Marker::set_parent(UnityEngine::Timeline::TrackAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::set_parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.Marker.get_time
double UnityEngine::Timeline::Marker::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.Marker.set_time
void UnityEngine::Timeline::Marker::set_time(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::set_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.Marker.UnityEngine.Timeline.IMarker.Initialize
void UnityEngine::Timeline::Marker::UnityEngine_Timeline_IMarker_Initialize(UnityEngine::Timeline::TrackAsset* parentTrack) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::UnityEngine.Timeline.IMarker.Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.IMarker.Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentTrack)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parentTrack);
}
// Autogenerated method: UnityEngine.Timeline.Marker.OnInitialize
void UnityEngine::Timeline::Marker::OnInitialize(UnityEngine::Timeline::TrackAsset* aPent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::OnInitialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aPent)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, aPent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MarkerList
#include "UnityEngine/Timeline/MarkerList.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Playables.PlayableAsset
#include "UnityEngine/Playables/PlayableAsset.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.MarkerList.get_markers
System::Collections::Generic::List_1<UnityEngine::Timeline::IMarker*>* UnityEngine::Timeline::MarkerList::get_markers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::get_markers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_markers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::Timeline::IMarker*>*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Add
void UnityEngine::Timeline::MarkerList::Add(UnityEngine::ScriptableObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, item);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Remove
bool UnityEngine::Timeline::MarkerList::Remove(UnityEngine::Timeline::IMarker* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, item);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Remove
bool UnityEngine::Timeline::MarkerList::Remove(UnityEngine::ScriptableObject* item, UnityEngine::Timeline::TimelineAsset* timelineAsset, UnityEngine::Playables::PlayableAsset* thingToDirty) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item), ::il2cpp_utils::ExtractType(timelineAsset), ::il2cpp_utils::ExtractType(thingToDirty)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, item, timelineAsset, thingToDirty);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Clear
void UnityEngine::Timeline::MarkerList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Contains
bool UnityEngine::Timeline::MarkerList::Contains(UnityEngine::ScriptableObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, item);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.GetMarkers
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IMarker*>* UnityEngine::Timeline::MarkerList::GetMarkers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::GetMarkers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetMarkers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IMarker*>*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.get_Count
int UnityEngine::Timeline::MarkerList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.get_Item
UnityEngine::Timeline::IMarker* UnityEngine::Timeline::MarkerList::get_Item(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::IMarker*, false>(*this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.GetRawMarkerList
System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>* UnityEngine::Timeline::MarkerList::GetRawMarkerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::GetRawMarkerList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRawMarkerList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.CreateMarker
UnityEngine::Timeline::IMarker* UnityEngine::Timeline::MarkerList::CreateMarker(System::Type* type, double time, UnityEngine::Timeline::TrackAsset* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::CreateMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CreateMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(owner)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::IMarker*, false>(*this, ___internal__method, type, time, owner);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.HasNotifications
bool UnityEngine::Timeline::MarkerList::HasNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::HasNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "HasNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Timeline::MarkerList::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Timeline::MarkerList::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.BuildCache
void UnityEngine::Timeline::MarkerList::BuildCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::BuildCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "BuildCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MarkerTrack
#include "UnityEngine/Timeline/MarkerTrack.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.MarkerTrack.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::MarkerTrack::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerTrack::get_outputs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SignalTrack
#include "UnityEngine/Timeline/SignalTrack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.CustomSignalEventDrawer
#include "UnityEngine/Timeline/CustomSignalEventDrawer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SignalAsset
#include "UnityEngine/Timeline/SignalAsset.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xCEACB8
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.Timeline.SignalAsset> OnEnableCallback
System::Action_1<UnityEngine::Timeline::SignalAsset*>* UnityEngine::Timeline::SignalAsset::_get_OnEnableCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalAsset::_get_OnEnableCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<UnityEngine::Timeline::SignalAsset*>*>("UnityEngine.Timeline", "SignalAsset", "OnEnableCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.Timeline.SignalAsset> OnEnableCallback
void UnityEngine::Timeline::SignalAsset::_set_OnEnableCallback(System::Action_1<UnityEngine::Timeline::SignalAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalAsset::_set_OnEnableCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "SignalAsset", "OnEnableCallback", value));
}
// Autogenerated method: UnityEngine.Timeline.SignalAsset.add_OnEnableCallback
void UnityEngine::Timeline::SignalAsset::add_OnEnableCallback(System::Action_1<UnityEngine::Timeline::SignalAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalAsset::add_OnEnableCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "SignalAsset", "add_OnEnableCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalAsset.remove_OnEnableCallback
void UnityEngine::Timeline::SignalAsset::remove_OnEnableCallback(System::Action_1<UnityEngine::Timeline::SignalAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalAsset::remove_OnEnableCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "SignalAsset", "remove_OnEnableCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalAsset.OnEnable
void UnityEngine::Timeline::SignalAsset::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalAsset::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SignalEmitter
#include "UnityEngine/Timeline/SignalEmitter.hpp"
// Including type: UnityEngine.Timeline.SignalAsset
#include "UnityEngine/Timeline/SignalAsset.hpp"
// Including type: UnityEngine.PropertyName
#include "UnityEngine/PropertyName.hpp"
// Including type: UnityEngine.Timeline.NotificationFlags
#include "UnityEngine/Timeline/NotificationFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.get_retroactive
bool UnityEngine::Timeline::SignalEmitter::get_retroactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::get_retroactive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_retroactive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.set_retroactive
void UnityEngine::Timeline::SignalEmitter::set_retroactive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::set_retroactive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_retroactive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.get_emitOnce
bool UnityEngine::Timeline::SignalEmitter::get_emitOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::get_emitOnce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_emitOnce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.set_emitOnce
void UnityEngine::Timeline::SignalEmitter::set_emitOnce(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::set_emitOnce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_emitOnce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.get_asset
UnityEngine::Timeline::SignalAsset* UnityEngine::Timeline::SignalEmitter::get_asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::get_asset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_asset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::SignalAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.set_asset
void UnityEngine::Timeline::SignalEmitter::set_asset(UnityEngine::Timeline::SignalAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::set_asset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_asset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.UnityEngine.Playables.INotification.get_id
UnityEngine::PropertyName UnityEngine::Timeline::SignalEmitter::UnityEngine_Playables_INotification_get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::UnityEngine.Playables.INotification.get_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Playables.INotification.get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::PropertyName, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.UnityEngine.Timeline.INotificationOptionProvider.get_flags
UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::SignalEmitter::UnityEngine_Timeline_INotificationOptionProvider_get_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::UnityEngine.Timeline.INotificationOptionProvider.get_flags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.INotificationOptionProvider.get_flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::NotificationFlags, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.SignalReceiver
#include "UnityEngine/Timeline/SignalReceiver.hpp"
// Including type: UnityEngine.Timeline.SignalReceiver/EventKeyValue
#include "UnityEngine/Timeline/SignalReceiver_EventKeyValue.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
// Including type: UnityEngine.Timeline.SignalAsset
#include "UnityEngine/Timeline/SignalAsset.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.OnNotify
void UnityEngine::Timeline::SignalReceiver::OnNotify(UnityEngine::Playables::Playable origin, UnityEngine::Playables::INotification* notification, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::OnNotify");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(notification), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, origin, notification, context);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.AddReaction
void UnityEngine::Timeline::SignalReceiver::AddReaction(UnityEngine::Timeline::SignalAsset* asset, UnityEngine::Events::UnityEvent* reaction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::AddReaction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddReaction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(reaction)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asset, reaction);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.AddEmptyReaction
int UnityEngine::Timeline::SignalReceiver::AddEmptyReaction(UnityEngine::Events::UnityEvent* reaction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::AddEmptyReaction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEmptyReaction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reaction)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, reaction);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.Remove
void UnityEngine::Timeline::SignalReceiver::Remove(UnityEngine::Timeline::SignalAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.GetRegisteredSignals
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::SignalAsset*>* UnityEngine::Timeline::SignalReceiver::GetRegisteredSignals() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::GetRegisteredSignals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRegisteredSignals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::SignalAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.GetReaction
UnityEngine::Events::UnityEvent* UnityEngine::Timeline::SignalReceiver::GetReaction(UnityEngine::Timeline::SignalAsset* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::GetReaction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReaction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Events::UnityEvent*, false>(this, ___internal__method, key);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.Count
int UnityEngine::Timeline::SignalReceiver::Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.ChangeSignalAtIndex
void UnityEngine::Timeline::SignalReceiver::ChangeSignalAtIndex(int idx, UnityEngine::Timeline::SignalAsset* newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::ChangeSignalAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeSignalAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx, newKey);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.RemoveAtIndex
void UnityEngine::Timeline::SignalReceiver::RemoveAtIndex(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::RemoveAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.ChangeReactionAtIndex
void UnityEngine::Timeline::SignalReceiver::ChangeReactionAtIndex(int idx, UnityEngine::Events::UnityEvent* reaction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::ChangeReactionAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeReactionAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(reaction)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx, reaction);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.GetReactionAtIndex
UnityEngine::Events::UnityEvent* UnityEngine::Timeline::SignalReceiver::GetReactionAtIndex(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::GetReactionAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReactionAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Events::UnityEvent*, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.GetSignalAssetAtIndex
UnityEngine::Timeline::SignalAsset* UnityEngine::Timeline::SignalReceiver::GetSignalAssetAtIndex(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::GetSignalAssetAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSignalAssetAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::SignalAsset*, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.OnEnable
void UnityEngine::Timeline::SignalReceiver::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SignalReceiver/EventKeyValue
#include "UnityEngine/Timeline/SignalReceiver_EventKeyValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Timeline.SignalAsset
#include "UnityEngine/Timeline/SignalAsset.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/EventKeyValue.TryGetValue
bool UnityEngine::Timeline::SignalReceiver::EventKeyValue::TryGetValue(UnityEngine::Timeline::SignalAsset* key, UnityEngine::Events::UnityEvent*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::TryGetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityEvent*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, key, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/EventKeyValue.Append
void UnityEngine::Timeline::SignalReceiver::EventKeyValue::Append(UnityEngine::Timeline::SignalAsset* key, UnityEngine::Events::UnityEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/EventKeyValue.Remove
void UnityEngine::Timeline::SignalReceiver::EventKeyValue::Remove(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/EventKeyValue.Remove
void UnityEngine::Timeline::SignalReceiver::EventKeyValue::Remove(UnityEngine::Timeline::SignalAsset* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/EventKeyValue.get_signals
System::Collections::Generic::List_1<UnityEngine::Timeline::SignalAsset*>* UnityEngine::Timeline::SignalReceiver::EventKeyValue::get_signals() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::get_signals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_signals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::Timeline::SignalAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/EventKeyValue.get_events
System::Collections::Generic::List_1<UnityEngine::Events::UnityEvent*>* UnityEngine::Timeline::SignalReceiver::EventKeyValue::get_events() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::get_events");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_events", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::Events::UnityEvent*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackAssetExtensions
#include "UnityEngine/Timeline/TrackAssetExtensions.hpp"
// Including type: UnityEngine.Timeline.GroupTrack
#include "UnityEngine/Timeline/GroupTrack.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TrackAssetExtensions.GetGroup
UnityEngine::Timeline::GroupTrack* UnityEngine::Timeline::TrackAssetExtensions::GetGroup(UnityEngine::Timeline::TrackAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAssetExtensions::GetGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAssetExtensions", "GetGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::GroupTrack*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAssetExtensions.SetGroup
void UnityEngine::Timeline::TrackAssetExtensions::SetGroup(UnityEngine::Timeline::TrackAsset* asset, UnityEngine::Timeline::GroupTrack* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAssetExtensions::SetGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAssetExtensions", "SetGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, asset, group);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.GroupTrack
#include "UnityEngine/Timeline/GroupTrack.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.GroupTrack.CanCompileClips
bool UnityEngine::Timeline::GroupTrack::CanCompileClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::GroupTrack::CanCompileClips");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanCompileClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.GroupTrack.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::GroupTrack::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::GroupTrack::get_outputs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ILayerable
#include "UnityEngine/Timeline/ILayerable.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ILayerable.CreateLayerMixer
UnityEngine::Playables::Playable UnityEngine::Timeline::ILayerable::CreateLayerMixer(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ILayerable::CreateLayerMixer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateLayerMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, inputCount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.ActivationControlPlayable
#include "UnityEngine/Timeline/ActivationControlPlayable.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::ActivationControlPlayable*> UnityEngine::Timeline::ActivationControlPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* gameObject, UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState postPlaybackState) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ActivationControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(postPlaybackState)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::ActivationControlPlayable*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, gameObject, postPlaybackState);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::ActivationControlPlayable::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::ActivationControlPlayable::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.ProcessFrame
void UnityEngine::Timeline::ActivationControlPlayable::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(userData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, userData);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.OnGraphStart
void UnityEngine::Timeline::ActivationControlPlayable::OnGraphStart(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.OnPlayableDestroy
void UnityEngine::Timeline::ActivationControlPlayable::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState
#include "UnityEngine/Timeline/ActivationControlPlayable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState Active
UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState>("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Active"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState Active
void UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Active(UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Active", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState Inactive
UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Inactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Inactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState>("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Inactive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState Inactive
void UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Inactive(UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Inactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Inactive", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState Revert
UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Revert() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Revert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState>("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Revert"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState Revert
void UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Revert(UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Revert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Revert", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ActivationControlPlayable/InitialState
#include "UnityEngine/Timeline/ActivationControlPlayable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/InitialState Unset
UnityEngine::Timeline::ActivationControlPlayable::InitialState UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Unset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Unset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::InitialState>("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Unset"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/InitialState Unset
void UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Unset(UnityEngine::Timeline::ActivationControlPlayable::InitialState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Unset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Unset", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/InitialState Active
UnityEngine::Timeline::ActivationControlPlayable::InitialState UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::InitialState>("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Active"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/InitialState Active
void UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Active(UnityEngine::Timeline::ActivationControlPlayable::InitialState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Active", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/InitialState Inactive
UnityEngine::Timeline::ActivationControlPlayable::InitialState UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Inactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Inactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::InitialState>("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Inactive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/InitialState Inactive
void UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Inactive(UnityEngine::Timeline::ActivationControlPlayable::InitialState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Inactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Inactive", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.BasicPlayableBehaviour
#include "UnityEngine/Timeline/BasicPlayableBehaviour.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.get_duration
double UnityEngine::Timeline::BasicPlayableBehaviour::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::BasicPlayableBehaviour::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::get_outputs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnGraphStart
void UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStart(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnGraphStop
void UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStop(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStop");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnPlayableCreate
void UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableCreate(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableCreate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnPlayableDestroy
void UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnBehaviourPlay
void UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnBehaviourPause
void UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.PrepareFrame
void UnityEngine::Timeline::BasicPlayableBehaviour::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.ProcessFrame
void UnityEngine::Timeline::BasicPlayableBehaviour::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::BasicPlayableBehaviour::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(owner)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, owner);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.DirectorControlPlayable
#include "UnityEngine/Timeline/DirectorControlPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::DirectorControlPlayable*> UnityEngine::Timeline::DirectorControlPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::PlayableDirector* director) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DirectorControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(director)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::DirectorControlPlayable*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, director);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.SyncSpeed
void UnityEngine::Timeline::DirectorControlPlayable::SyncSpeed(double speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::SyncSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, speed);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.SyncPlayState
void UnityEngine::Timeline::DirectorControlPlayable::SyncPlayState(UnityEngine::Playables::PlayableGraph graph, double playableTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::SyncPlayState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncPlayState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(playableTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, graph, playableTime);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.DetectDiscontinuity
bool UnityEngine::Timeline::DirectorControlPlayable::DetectDiscontinuity(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::DetectDiscontinuity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectDiscontinuity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.DetectOutOfSync
bool UnityEngine::Timeline::DirectorControlPlayable::DetectOutOfSync(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::DetectOutOfSync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectOutOfSync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.UpdateTime
void UnityEngine::Timeline::DirectorControlPlayable::UpdateTime(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::UpdateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.OnPlayableDestroy
void UnityEngine::Timeline::DirectorControlPlayable::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.PrepareFrame
void UnityEngine::Timeline::DirectorControlPlayable::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.ProcessFrame
void UnityEngine::Timeline::DirectorControlPlayable::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ITimeControl
#include "UnityEngine/Timeline/ITimeControl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ITimeControl.SetTime
void UnityEngine::Timeline::ITimeControl::SetTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ITimeControl::SetTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.ITimeControl.OnControlTimeStart
void UnityEngine::Timeline::ITimeControl::OnControlTimeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ITimeControl::OnControlTimeStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnControlTimeStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ITimeControl.OnControlTimeStop
void UnityEngine::Timeline::ITimeControl::OnControlTimeStop() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ITimeControl::OnControlTimeStop");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnControlTimeStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotificationFlags
#include "UnityEngine/Timeline/NotificationFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags TriggerInEditMode
UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_TriggerInEditMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_get_TriggerInEditMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "TriggerInEditMode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags TriggerInEditMode
void UnityEngine::Timeline::NotificationFlags::_set_TriggerInEditMode(UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_set_TriggerInEditMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "TriggerInEditMode", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags Retroactive
UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_Retroactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_get_Retroactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "Retroactive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags Retroactive
void UnityEngine::Timeline::NotificationFlags::_set_Retroactive(UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_set_Retroactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "Retroactive", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags TriggerOnce
UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_TriggerOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_get_TriggerOnce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "TriggerOnce"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags TriggerOnce
void UnityEngine::Timeline::NotificationFlags::_set_TriggerOnce(UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_set_TriggerOnce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "TriggerOnce", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ParticleControlPlayable
#include "UnityEngine/Timeline/ParticleControlPlayable.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kUnsetTime
float UnityEngine::Timeline::ParticleControlPlayable::_get_kUnsetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::_get_kUnsetTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "ParticleControlPlayable", "kUnsetTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kUnsetTime
void UnityEngine::Timeline::ParticleControlPlayable::_set_kUnsetTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::_set_kUnsetTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ParticleControlPlayable", "kUnsetTime", value));
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::ParticleControlPlayable*> UnityEngine::Timeline::ParticleControlPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::ParticleSystem* component, uint randomSeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ParticleControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(randomSeed)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::ParticleControlPlayable*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, component, randomSeed);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.get_particleSystem
UnityEngine::ParticleSystem* UnityEngine::Timeline::ParticleControlPlayable::get_particleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::get_particleSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_particleSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ParticleSystem*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.set_particleSystem
void UnityEngine::Timeline::ParticleControlPlayable::set_particleSystem(UnityEngine::ParticleSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::set_particleSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_particleSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.Initialize
void UnityEngine::Timeline::ParticleControlPlayable::Initialize(UnityEngine::ParticleSystem* ps, uint randomSeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ps), ::il2cpp_utils::ExtractType(randomSeed)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ps, randomSeed);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.SetRandomSeed
void UnityEngine::Timeline::ParticleControlPlayable::SetRandomSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::SetRandomSeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRandomSeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.PrepareFrame
void UnityEngine::Timeline::ParticleControlPlayable::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData data) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, data);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.PrefabControlPlayable
#include "UnityEngine/Timeline/PrefabControlPlayable.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::PrefabControlPlayable*> UnityEngine::Timeline::PrefabControlPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* prefabGameObject, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "PrefabControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(prefabGameObject), ::il2cpp_utils::ExtractType(parentTransform)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::PrefabControlPlayable*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, prefabGameObject, parentTransform);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.get_prefabInstance
UnityEngine::GameObject* UnityEngine::Timeline::PrefabControlPlayable::get_prefabInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::get_prefabInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.Initialize
UnityEngine::GameObject* UnityEngine::Timeline::PrefabControlPlayable::Initialize(UnityEngine::GameObject* prefabGameObject, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabGameObject), ::il2cpp_utils::ExtractType(parentTransform)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefabGameObject, parentTransform);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.SetHideFlagsRecursive
void UnityEngine::Timeline::PrefabControlPlayable::SetHideFlagsRecursive(UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::SetHideFlagsRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "PrefabControlPlayable", "SetHideFlagsRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.OnPlayableDestroy
void UnityEngine::Timeline::PrefabControlPlayable::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeControlPlayable
#include "UnityEngine/Timeline/TimeControlPlayable.hpp"
// Including type: UnityEngine.Timeline.ITimeControl
#include "UnityEngine/Timeline/ITimeControl.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeControlPlayable*> UnityEngine::Timeline::TimeControlPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Timeline::ITimeControl* timeControl) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timeControl)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeControlPlayable*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, timeControl);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.Initialize
void UnityEngine::Timeline::TimeControlPlayable::Initialize(UnityEngine::Timeline::ITimeControl* timeControl) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeControl)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, timeControl);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.PrepareFrame
void UnityEngine::Timeline::TimeControlPlayable::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/<>c
#include "UnityEngine/Timeline/TimeNotificationBehaviour_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.DirectorWrapMode
#include "UnityEngine/Playables/DirectorWrapMode.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.set_timeSource
void UnityEngine::Timeline::TimeNotificationBehaviour::set_timeSource(UnityEngine::Playables::Playable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::set_timeSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeNotificationBehaviour*> UnityEngine::Timeline::TimeNotificationBehaviour::Create(UnityEngine::Playables::PlayableGraph graph, double duration, UnityEngine::Playables::DirectorWrapMode loopMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(loopMode)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeNotificationBehaviour*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, duration, loopMode);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.AddNotification
void UnityEngine::Timeline::TimeNotificationBehaviour::AddNotification(double time, UnityEngine::Playables::INotification* payload, UnityEngine::Timeline::NotificationFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::AddNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(payload), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time, payload, flags);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.SortNotifications
void UnityEngine::Timeline::TimeNotificationBehaviour::SortNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::SortNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.CanRestoreNotification
bool UnityEngine::Timeline::TimeNotificationBehaviour::CanRestoreNotification(UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry e, UnityEngine::Playables::FrameData info, double currentTime, double previousTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::CanRestoreNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "CanRestoreNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(currentTime), ::il2cpp_utils::ExtractType(previousTime)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, e, info, currentTime, previousTime);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.TriggerNotificationsInRange
void UnityEngine::Timeline::TimeNotificationBehaviour::TriggerNotificationsInRange(double start, double end, UnityEngine::Playables::FrameData info, UnityEngine::Playables::Playable playable, bool checkState) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::TriggerNotificationsInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerNotificationsInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(checkState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, start, end, info, playable, checkState);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.SyncDurationWithExternalSource
void UnityEngine::Timeline::TimeNotificationBehaviour::SyncDurationWithExternalSource(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::SyncDurationWithExternalSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncDurationWithExternalSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Trigger_internal
void UnityEngine::Timeline::TimeNotificationBehaviour::Trigger_internal(UnityEngine::Playables::Playable playable, UnityEngine::Playables::PlayableOutput output, UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry& e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::Trigger_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Trigger_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, playable, output, e);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Restore_internal
void UnityEngine::Timeline::TimeNotificationBehaviour::Restore_internal(UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry& e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::Restore_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Restore_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, e);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.OnGraphStart
void UnityEngine::Timeline::TimeNotificationBehaviour::OnGraphStart(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.OnBehaviourPause
void UnityEngine::Timeline::TimeNotificationBehaviour::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.PrepareFrame
void UnityEngine::Timeline::TimeNotificationBehaviour::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry.get_triggerInEditor
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerInEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_triggerInEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry.get_prewarm
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_prewarm() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_prewarm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_prewarm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry.get_triggerOnce
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerOnce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_triggerOnce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/<>c
#include "UnityEngine/Timeline/TimeNotificationBehaviour_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.TimeNotificationBehaviour/<>c <>9
UnityEngine::Timeline::TimeNotificationBehaviour::$$c* UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimeNotificationBehaviour::$$c*>("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.TimeNotificationBehaviour/<>c <>9
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9(UnityEngine::Timeline::TimeNotificationBehaviour::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry> <>9__12_0
System::Comparison_1<UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>* UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9__12_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>*>("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9__12_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry> <>9__12_0
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9__12_0(System::Comparison_1<UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9__12_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9__12_0", value)));
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/<>c..cctor
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/<>c.<SortNotifications>b__12_0
int UnityEngine::Timeline::TimeNotificationBehaviour::$$c::$SortNotifications$b__12_0(UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry x, UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry y) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::<SortNotifications>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortNotifications>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.PlayableTrack
#include "UnityEngine/Timeline/PlayableTrack.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.PlayableTrack.OnCreateClip
void UnityEngine::Timeline::PlayableTrack::OnCreateClip(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PlayableTrack::OnCreateClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCreateClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackMediaType
#include "UnityEngine/Timeline/TrackMediaType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackClipTypeAttribute
#include "UnityEngine/Timeline/TrackClipTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotKeyableAttribute
#include "UnityEngine/Timeline/NotKeyableAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackBindingFlags
#include "UnityEngine/Timeline/TrackBindingFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags None
UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags None
void UnityEngine::Timeline::TrackBindingFlags::_set_None(UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags AllowCreateComponent
UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_AllowCreateComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_get_AllowCreateComponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "AllowCreateComponent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags AllowCreateComponent
void UnityEngine::Timeline::TrackBindingFlags::_set_AllowCreateComponent(UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_set_AllowCreateComponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "AllowCreateComponent", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags All
UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags All
void UnityEngine::Timeline::TrackBindingFlags::_set_All(UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "All", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackBindingTypeAttribute
#include "UnityEngine/Timeline/TrackBindingTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SupportsChildTracksAttribute
#include "UnityEngine/Timeline/SupportsChildTracksAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IgnoreOnPlayableTrackAttribute
#include "UnityEngine/Timeline/IgnoreOnPlayableTrackAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeFieldAttribute
#include "UnityEngine/Timeline/TimeFieldAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimeFieldAttribute.get_useEditMode
UnityEngine::Timeline::TimeFieldAttribute::UseEditMode UnityEngine::Timeline::TimeFieldAttribute::get_useEditMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::get_useEditMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useEditMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimeFieldAttribute::UseEditMode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeFieldAttribute/UseEditMode
#include "UnityEngine/Timeline/TimeFieldAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimeFieldAttribute/UseEditMode None
UnityEngine::Timeline::TimeFieldAttribute::UseEditMode UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimeFieldAttribute::UseEditMode>("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimeFieldAttribute/UseEditMode None
void UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_None(UnityEngine::Timeline::TimeFieldAttribute::UseEditMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimeFieldAttribute/UseEditMode ApplyEditMode
UnityEngine::Timeline::TimeFieldAttribute::UseEditMode UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_ApplyEditMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_ApplyEditMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimeFieldAttribute::UseEditMode>("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "ApplyEditMode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimeFieldAttribute/UseEditMode ApplyEditMode
void UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_ApplyEditMode(UnityEngine::Timeline::TimeFieldAttribute::UseEditMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_ApplyEditMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "ApplyEditMode", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.HideInMenuAttribute
#include "UnityEngine/Timeline/HideInMenuAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.CustomStyleAttribute
#include "UnityEngine/Timeline/CustomStyleAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.MenuCategoryAttribute
#include "UnityEngine/Timeline/MenuCategoryAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ITimelineClipAsset
#include "UnityEngine/Timeline/ITimelineClipAsset.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ITimelineClipAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ITimelineClipAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ITimelineClipAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ITimelineEvaluateCallback
#include "UnityEngine/Timeline/ITimelineEvaluateCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ITimelineEvaluateCallback.Evaluate
void UnityEngine::Timeline::ITimelineEvaluateCallback::Evaluate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ITimelineEvaluateCallback::Evaluate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelinePlayable
#include "UnityEngine/Timeline/TimelinePlayable.hpp"
// Including type: UnityEngine.Timeline.IntervalTree`1
#include "UnityEngine/Timeline/IntervalTree_1.hpp"
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Timeline.ITimelineEvaluateCallback
#include "UnityEngine/Timeline/ITimelineEvaluateCallback.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Animations.AnimationPlayableOutput
#include "UnityEngine/Animations/AnimationPlayableOutput.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Boolean muteAudioScrubbing
bool UnityEngine::Timeline::TimelinePlayable::_get_muteAudioScrubbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::_get_muteAudioScrubbing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngine.Timeline", "TimelinePlayable", "muteAudioScrubbing"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean muteAudioScrubbing
void UnityEngine::Timeline::TimelinePlayable::_set_muteAudioScrubbing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::_set_muteAudioScrubbing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelinePlayable", "muteAudioScrubbing", value));
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimelinePlayable*> UnityEngine::Timeline::TimelinePlayable::Create(UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* tracks, UnityEngine::GameObject* go, bool autoRebalance, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(autoRebalance), ::il2cpp_utils::ExtractType(createOutputs)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimelinePlayable*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, tracks, go, autoRebalance, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Compile
void UnityEngine::Timeline::TimelinePlayable::Compile(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable timelinePlayable, System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* tracks, UnityEngine::GameObject* go, bool autoRebalance, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::Compile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timelinePlayable), ::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(autoRebalance), ::il2cpp_utils::ExtractType(createOutputs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, graph, timelinePlayable, tracks, go, autoRebalance, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CompileTrackList
void UnityEngine::Timeline::TimelinePlayable::CompileTrackList(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable timelinePlayable, System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* tracks, UnityEngine::GameObject* go, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::CompileTrackList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileTrackList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timelinePlayable), ::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(createOutputs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, graph, timelinePlayable, tracks, go, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CreateTrackOutput
void UnityEngine::Timeline::TimelinePlayable::CreateTrackOutput(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Timeline::TrackAsset* track, UnityEngine::GameObject* go, UnityEngine::Playables::Playable playable, int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::CreateTrackOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTrackOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(port)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, graph, track, go, playable, port);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.EvaluateWeightsForAnimationPlayableOutput
void UnityEngine::Timeline::TimelinePlayable::EvaluateWeightsForAnimationPlayableOutput(UnityEngine::Timeline::TrackAsset* track, UnityEngine::Animations::AnimationPlayableOutput animOutput) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::EvaluateWeightsForAnimationPlayableOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateWeightsForAnimationPlayableOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(animOutput)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, track, animOutput);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.EvaluateAnimationPreviewUpdateCallback
void UnityEngine::Timeline::TimelinePlayable::EvaluateAnimationPreviewUpdateCallback(UnityEngine::Timeline::TrackAsset* track, UnityEngine::Animations::AnimationPlayableOutput animOutput) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::EvaluateAnimationPreviewUpdateCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateAnimationPreviewUpdateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(animOutput)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, track, animOutput);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CreatePlayableGraph
UnityEngine::Playables::Playable UnityEngine::Timeline::TimelinePlayable::CreatePlayableGraph(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Timeline::TrackAsset* asset, UnityEngine::GameObject* go, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree, UnityEngine::Playables::Playable timelinePlayable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::CreatePlayableGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", "CreatePlayableGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(timelinePlayable)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, asset, go, tree, timelinePlayable);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CreateTrackPlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::TimelinePlayable::CreateTrackPlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable timelinePlayable, UnityEngine::Timeline::TrackAsset* track, UnityEngine::GameObject* go, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::CreateTrackPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTrackPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timelinePlayable), ::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(createOutputs)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, timelinePlayable, track, go, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Evaluate
void UnityEngine::Timeline::TimelinePlayable::Evaluate(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::Evaluate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, frameData);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CacheTrack
void UnityEngine::Timeline::TimelinePlayable::CacheTrack(UnityEngine::Timeline::TrackAsset* track, UnityEngine::Playables::Playable playable, int port, UnityEngine::Playables::Playable parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::CacheTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CacheTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, track, playable, port, parent);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.ForAOTCompilationOnly
void UnityEngine::Timeline::TimelinePlayable::ForAOTCompilationOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::ForAOTCompilationOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", "ForAOTCompilationOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable..cctor
void UnityEngine::Timeline::TimelinePlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.PrepareFrame
void UnityEngine::Timeline::TimelinePlayable::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.Extrapolation
#include "UnityEngine/Timeline/Extrapolation.hpp"
// Including type: UnityEngine.Timeline.Extrapolation/<>c
#include "UnityEngine/Timeline/Extrapolation_--c.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Double kMinExtrapolationTime
double UnityEngine::Timeline::Extrapolation::_get_kMinExtrapolationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::_get_kMinExtrapolationTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "Extrapolation", "kMinExtrapolationTime"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Double kMinExtrapolationTime
void UnityEngine::Timeline::Extrapolation::_set_kMinExtrapolationTime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::_set_kMinExtrapolationTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation", "kMinExtrapolationTime", value));
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation.CalculateExtrapolationTimes
void UnityEngine::Timeline::Extrapolation::CalculateExtrapolationTimes(UnityEngine::Timeline::TrackAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::CalculateExtrapolationTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", "CalculateExtrapolationTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation.SortClipsByStartTime
::Array<UnityEngine::Timeline::TimelineClip*>* UnityEngine::Timeline::Extrapolation::SortClipsByStartTime(::Array<UnityEngine::Timeline::TimelineClip*>* clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::SortClipsByStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", "SortClipsByStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clips)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Timeline::TimelineClip*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clips);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation..cctor
void UnityEngine::Timeline::Extrapolation::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.Extrapolation/<>c
#include "UnityEngine/Timeline/Extrapolation_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.Extrapolation/<>c <>9
UnityEngine::Timeline::Extrapolation::$$c* UnityEngine::Timeline::Extrapolation::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Timeline::Extrapolation::$$c*>("UnityEngine.Timeline", "Extrapolation/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.Extrapolation/<>c <>9
void UnityEngine::Timeline::Extrapolation::$$c::_set_$$9(UnityEngine::Timeline::Extrapolation::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__2_0
System::Comparison_1<UnityEngine::Timeline::TimelineClip*>* UnityEngine::Timeline::Extrapolation::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<UnityEngine::Timeline::TimelineClip*>*>("UnityEngine.Timeline", "Extrapolation/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__2_0
void UnityEngine::Timeline::Extrapolation::$$c::_set_$$9__2_0(System::Comparison_1<UnityEngine::Timeline::TimelineClip*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation/<>c", "<>9__2_0", value)));
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation/<>c..cctor
void UnityEngine::Timeline::Extrapolation::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation/<>c.<SortClipsByStartTime>b__2_0
int UnityEngine::Timeline::Extrapolation::$$c::$SortClipsByStartTime$b__2_0(UnityEngine::Timeline::TimelineClip* clip1, UnityEngine::Timeline::TimelineClip* clip2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::<SortClipsByStartTime>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortClipsByStartTime>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip1), ::il2cpp_utils::ExtractType(clip2)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, clip1, clip2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.HashUtility
#include "UnityEngine/Timeline/HashUtility.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2, h3);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2, h3, h4);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4, int h5) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4), ::il2cpp_utils::ExtractType(h5)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2, h3, h4, h5);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4, int h5, int h6) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4), ::il2cpp_utils::ExtractType(h5), ::il2cpp_utils::ExtractType(h6)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2, h3, h4, h5, h6);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4, int h5, int h6, int h7) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4), ::il2cpp_utils::ExtractType(h5), ::il2cpp_utils::ExtractType(h6), ::il2cpp_utils::ExtractType(h7)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2, h3, h4, h5, h6, h7);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(::Array<int>* hashes) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashes)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.PushActiveGameObject
void UnityEngine::Timeline::IPropertyCollector::PushActiveGameObject(UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::PushActiveGameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushActiveGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.PopActiveGameObject
void UnityEngine::Timeline::IPropertyCollector::PopActiveGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::PopActiveGameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopActiveGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClip
void UnityEngine::Timeline::IPropertyCollector::AddFromClip(UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClips
void UnityEngine::Timeline::IPropertyCollector::AddFromClips(System::Collections::Generic::IEnumerable_1<UnityEngine::AnimationClip*>* clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromClips");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clips)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clips);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromName
void UnityEngine::Timeline::IPropertyCollector::AddFromName(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClip
void UnityEngine::Timeline::IPropertyCollector::AddFromClip(UnityEngine::GameObject* obj, UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, clip);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClips
void UnityEngine::Timeline::IPropertyCollector::AddFromClips(UnityEngine::GameObject* obj, System::Collections::Generic::IEnumerable_1<UnityEngine::AnimationClip*>* clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromClips");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(clips)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, clips);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromName
void UnityEngine::Timeline::IPropertyCollector::AddFromName(UnityEngine::GameObject* obj, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, name);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromName
void UnityEngine::Timeline::IPropertyCollector::AddFromName(UnityEngine::Component* component, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, component, name);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromComponent
void UnityEngine::Timeline::IPropertyCollector::AddFromComponent(UnityEngine::GameObject* obj, UnityEngine::Component* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromComponent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFromComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(component)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, component);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddObjectProperties
void UnityEngine::Timeline::IPropertyCollector::AddObjectProperties(UnityEngine::Object* obj, UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddObjectProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddObjectProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, clip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IPropertyPreview
#include "UnityEngine/Timeline/IPropertyPreview.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IPropertyPreview.GatherProperties
void UnityEngine::Timeline::IPropertyPreview::GatherProperties(UnityEngine::Playables::PlayableDirector* director, UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyPreview::GatherProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GatherProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(director), ::il2cpp_utils::ExtractType(driver)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotificationUtilities
#include "UnityEngine/Timeline/NotificationUtilities.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.NotificationUtilities.CreateNotificationsPlayable
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeNotificationBehaviour*> UnityEngine::Timeline::NotificationUtilities::CreateNotificationsPlayable(UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IMarker*>* markers, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationUtilities::CreateNotificationsPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "NotificationUtilities", "CreateNotificationsPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(markers), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeNotificationBehaviour*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, markers, go);
}
// Autogenerated method: UnityEngine.Timeline.NotificationUtilities.TrackTypeSupportsNotifications
bool UnityEngine::Timeline::NotificationUtilities::TrackTypeSupportsNotifications(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationUtilities::TrackTypeSupportsNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "NotificationUtilities", "TrackTypeSupportsNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimeUtility
#include "UnityEngine/Timeline/TimeUtility.hpp"
// Including type: UnityEngine.Timeline.TimeUtility/<>c
#include "UnityEngine/Timeline/TimeUtility_--c.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Double kTimeEpsilon
double UnityEngine::Timeline::TimeUtility::_get_kTimeEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_get_kTimeEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "kTimeEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kTimeEpsilon
void UnityEngine::Timeline::TimeUtility::_set_kTimeEpsilon(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_set_kTimeEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "kTimeEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double kFrameRateEpsilon
double UnityEngine::Timeline::TimeUtility::_get_kFrameRateEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_get_kFrameRateEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "kFrameRateEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kFrameRateEpsilon
void UnityEngine::Timeline::TimeUtility::_set_kFrameRateEpsilon(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_set_kFrameRateEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "kFrameRateEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double k_MaxTimelineDurationInSeconds
double UnityEngine::Timeline::TimeUtility::_get_k_MaxTimelineDurationInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_get_k_MaxTimelineDurationInSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "k_MaxTimelineDurationInSeconds"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double k_MaxTimelineDurationInSeconds
void UnityEngine::Timeline::TimeUtility::_set_k_MaxTimelineDurationInSeconds(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_set_k_MaxTimelineDurationInSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "k_MaxTimelineDurationInSeconds", value));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ValidateFrameRate
void UnityEngine::Timeline::TimeUtility::ValidateFrameRate(double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::ValidateFrameRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ValidateFrameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameRate)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ToFrames
int UnityEngine::Timeline::TimeUtility::ToFrames(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::ToFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ToFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ToExactFrames
double UnityEngine::Timeline::TimeUtility::ToExactFrames(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::ToExactFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ToExactFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.FromFrames
double UnityEngine::Timeline::TimeUtility::FromFrames(int frames, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::FromFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "FromFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frames), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, frames, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.FromFrames
double UnityEngine::Timeline::TimeUtility::FromFrames(double frames, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::FromFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "FromFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frames), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, frames, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.OnFrameBoundary
bool UnityEngine::Timeline::TimeUtility::OnFrameBoundary(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::OnFrameBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "OnFrameBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.GetEpsilon
double UnityEngine::Timeline::TimeUtility::GetEpsilon(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::GetEpsilon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "GetEpsilon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.OnFrameBoundary
bool UnityEngine::Timeline::TimeUtility::OnFrameBoundary(double time, double frameRate, double epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::OnFrameBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "OnFrameBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(epsilon)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate, epsilon);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.RoundToFrame
double UnityEngine::Timeline::TimeUtility::RoundToFrame(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::RoundToFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "RoundToFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.TimeAsFrames
::Il2CppString* UnityEngine::Timeline::TimeUtility::TimeAsFrames(double timeValue, double frameRate, ::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::TimeAsFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "TimeAsFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeValue), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeValue, frameRate, format);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.TimeAsTimeCode
::Il2CppString* UnityEngine::Timeline::TimeUtility::TimeAsTimeCode(double timeValue, double frameRate, ::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::TimeAsTimeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "TimeAsTimeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeValue), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeValue, frameRate, format);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ParseTimeCode
double UnityEngine::Timeline::TimeUtility::ParseTimeCode(::Il2CppString* timeCode, double frameRate, double defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::ParseTimeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ParseTimeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeCode), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeCode, frameRate, defaultValue);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.GetAnimationClipLength
double UnityEngine::Timeline::TimeUtility::GetAnimationClipLength(UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::GetAnimationClipLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "GetAnimationClipLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.RemoveChar
::Il2CppString* UnityEngine::Timeline::TimeUtility::RemoveChar(::Il2CppString* str, System::Func_2<::Il2CppChar, bool>* charToRemoveFunc) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::RemoveChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "RemoveChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(charToRemoveFunc)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, charToRemoveFunc);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility..cctor
void UnityEngine::Timeline::TimeUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeUtility/<>c
#include "UnityEngine/Timeline/TimeUtility_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.TimeUtility/<>c <>9
UnityEngine::Timeline::TimeUtility::$$c* UnityEngine::Timeline::TimeUtility::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimeUtility::$$c*>("UnityEngine.Timeline", "TimeUtility/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.TimeUtility/<>c <>9
void UnityEngine::Timeline::TimeUtility::$$c::_set_$$9(UnityEngine::Timeline::TimeUtility::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Char,System.Boolean> <>9__14_0
System::Func_2<::Il2CppChar, bool>* UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__14_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppChar, bool>*>("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__14_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Char,System.Boolean> <>9__14_0
void UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__14_0(System::Func_2<::Il2CppChar, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__14_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__14_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Char,System.Boolean> <>9__14_1
System::Func_2<::Il2CppChar, bool>* UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__14_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__14_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppChar, bool>*>("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__14_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Char,System.Boolean> <>9__14_1
void UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__14_1(System::Func_2<::Il2CppChar, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__14_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__14_1", value)));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility/<>c..cctor
void UnityEngine::Timeline::TimeUtility::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility/<>c.<ParseTimeCode>b__14_0
bool UnityEngine::Timeline::TimeUtility::$$c::$ParseTimeCode$b__14_0(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::<ParseTimeCode>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ParseTimeCode>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility/<>c.<ParseTimeCode>b__14_1
bool UnityEngine::Timeline::TimeUtility::$$c::$ParseTimeCode$b__14_1(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::<ParseTimeCode>b__14_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ParseTimeCode>b__14_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities
#include "UnityEngine/Timeline/TimelineCreateUtilities.hpp"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_0
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_0.hpp"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_1
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.GenerateUniqueActorName
::Il2CppString* UnityEngine::Timeline::TimelineCreateUtilities::GenerateUniqueActorName(System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>* tracks, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::GenerateUniqueActorName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "GenerateUniqueActorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, tracks, name);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.SaveAssetIntoObject
void UnityEngine::Timeline::TimelineCreateUtilities::SaveAssetIntoObject(UnityEngine::Object* childAsset, UnityEngine::Object* masterAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::SaveAssetIntoObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "SaveAssetIntoObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(childAsset), ::il2cpp_utils::ExtractType(masterAsset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, childAsset, masterAsset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.CreateAnimationClipForTrack
UnityEngine::AnimationClip* UnityEngine::Timeline::TimelineCreateUtilities::CreateAnimationClipForTrack(::Il2CppString* name, UnityEngine::Timeline::TrackAsset* track, bool isLegacy) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::CreateAnimationClipForTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "CreateAnimationClipForTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(isLegacy)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, track, isLegacy);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.ValidateParentTrack
bool UnityEngine::Timeline::TimelineCreateUtilities::ValidateParentTrack(UnityEngine::Timeline::TrackAsset* parent, System::Type* childType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::ValidateParentTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "ValidateParentTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(childType)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parent, childType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_0
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_0.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_0.<GenerateUniqueActorName>b__0
bool UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::$GenerateUniqueActorName$b__0(UnityEngine::ScriptableObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::<GenerateUniqueActorName>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GenerateUniqueActorName>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_1
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_1.<GenerateUniqueActorName>b__1
bool UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::$GenerateUniqueActorName$b__1(UnityEngine::ScriptableObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::<GenerateUniqueActorName>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GenerateUniqueActorName>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineUndo
#include "UnityEngine/Timeline/TimelineUndo.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.PushDestroyUndo
void UnityEngine::Timeline::TimelineUndo::PushDestroyUndo(UnityEngine::Timeline::TimelineAsset* timeline, UnityEngine::Object* thingToDirty, UnityEngine::Object* objectToDestroy) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineUndo::PushDestroyUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "PushDestroyUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeline), ::il2cpp_utils::ExtractType(thingToDirty), ::il2cpp_utils::ExtractType(objectToDestroy)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeline, thingToDirty, objectToDestroy);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.PushUndo
void UnityEngine::Timeline::TimelineUndo::PushUndo(::Array<UnityEngine::Object*>* thingsToDirty, ::Il2CppString* operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineUndo::PushUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "PushUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thingsToDirty), ::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, thingsToDirty, operation);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.PushUndo
void UnityEngine::Timeline::TimelineUndo::PushUndo(UnityEngine::Object* thingToDirty, ::Il2CppString* operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineUndo::PushUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "PushUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thingToDirty), ::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, thingToDirty, operation);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.RegisterCreatedObjectUndo
void UnityEngine::Timeline::TimelineUndo::RegisterCreatedObjectUndo(UnityEngine::Object* thingCreated, ::Il2CppString* operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineUndo::RegisterCreatedObjectUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "RegisterCreatedObjectUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thingCreated), ::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, thingCreated, operation);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.UndoName
::Il2CppString* UnityEngine::Timeline::TimelineUndo::UndoName(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineUndo::UndoName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "UndoName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.WeightUtility
#include "UnityEngine/Timeline/WeightUtility.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.WeightUtility.NormalizeMixer
float UnityEngine::Timeline::WeightUtility::NormalizeMixer(UnityEngine::Playables::Playable mixer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::WeightUtility::NormalizeMixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "WeightUtility", "NormalizeMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mixer)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mixer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.NavMeshPathStatus
#include "UnityEngine/AI/NavMeshPathStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.NavMeshPathStatus PathComplete
UnityEngine::AI::NavMeshPathStatus UnityEngine::AI::NavMeshPathStatus::_get_PathComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_get_PathComplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AI::NavMeshPathStatus>("UnityEngine.AI", "NavMeshPathStatus", "PathComplete"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.NavMeshPathStatus PathComplete
void UnityEngine::AI::NavMeshPathStatus::_set_PathComplete(UnityEngine::AI::NavMeshPathStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_set_PathComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshPathStatus", "PathComplete", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.NavMeshPathStatus PathPartial
UnityEngine::AI::NavMeshPathStatus UnityEngine::AI::NavMeshPathStatus::_get_PathPartial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_get_PathPartial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AI::NavMeshPathStatus>("UnityEngine.AI", "NavMeshPathStatus", "PathPartial"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.NavMeshPathStatus PathPartial
void UnityEngine::AI::NavMeshPathStatus::_set_PathPartial(UnityEngine::AI::NavMeshPathStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_set_PathPartial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshPathStatus", "PathPartial", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.NavMeshPathStatus PathInvalid
UnityEngine::AI::NavMeshPathStatus UnityEngine::AI::NavMeshPathStatus::_get_PathInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_get_PathInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AI::NavMeshPathStatus>("UnityEngine.AI", "NavMeshPathStatus", "PathInvalid"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.NavMeshPathStatus PathInvalid
void UnityEngine::AI::NavMeshPathStatus::_set_PathInvalid(UnityEngine::AI::NavMeshPathStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_set_PathInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshPathStatus", "PathInvalid", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AI.NavMeshPath
#include "UnityEngine/AI/NavMeshPath.hpp"
// Including type: UnityEngine.AI.NavMeshPathStatus
#include "UnityEngine/AI/NavMeshPathStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AI.NavMeshPath.InitializeNavMeshPath
System::IntPtr UnityEngine::AI::NavMeshPath::InitializeNavMeshPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::InitializeNavMeshPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshPath", "InitializeNavMeshPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.DestroyNavMeshPath
void UnityEngine::AI::NavMeshPath::DestroyNavMeshPath(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::DestroyNavMeshPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshPath", "DestroyNavMeshPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.CalculateCornersInternal
::Array<UnityEngine::Vector3>* UnityEngine::AI::NavMeshPath::CalculateCornersInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::CalculateCornersInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateCornersInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.ClearCornersInternal
void UnityEngine::AI::NavMeshPath::ClearCornersInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::ClearCornersInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCornersInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.ClearCorners
void UnityEngine::AI::NavMeshPath::ClearCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::ClearCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.CalculateCorners
void UnityEngine::AI::NavMeshPath::CalculateCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::CalculateCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.get_corners
::Array<UnityEngine::Vector3>* UnityEngine::AI::NavMeshPath::get_corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::get_corners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_corners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.get_status
UnityEngine::AI::NavMeshPathStatus UnityEngine::AI::NavMeshPath::get_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::get_status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AI::NavMeshPathStatus, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.Finalize
void UnityEngine::AI::NavMeshPath::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.NavMeshHit
#include "UnityEngine/AI/NavMeshHit.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AI.NavMeshHit.get_position
UnityEngine::Vector3 UnityEngine::AI::NavMeshHit::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshHit::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.NavMesh
#include "UnityEngine/AI/NavMesh.hpp"
// Including type: UnityEngine.AI.NavMesh/OnNavMeshPreUpdate
#include "UnityEngine/AI/NavMesh_OnNavMeshPreUpdate.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.AI.NavMeshPath
#include "UnityEngine/AI/NavMeshPath.hpp"
// Including type: UnityEngine.AI.NavMeshHit
#include "UnityEngine/AI/NavMeshHit.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.NavMesh/OnNavMeshPreUpdate onPreUpdate
UnityEngine::AI::NavMesh::OnNavMeshPreUpdate* UnityEngine::AI::NavMesh::_get_onPreUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::_get_onPreUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AI::NavMesh::OnNavMeshPreUpdate*>("UnityEngine.AI", "NavMesh", "onPreUpdate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.NavMesh/OnNavMeshPreUpdate onPreUpdate
void UnityEngine::AI::NavMesh::_set_onPreUpdate(UnityEngine::AI::NavMesh::OnNavMeshPreUpdate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::_set_onPreUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMesh", "onPreUpdate", value));
}
// Autogenerated method: UnityEngine.AI.NavMesh.Internal_CallOnNavMeshPreUpdate
void UnityEngine::AI::NavMesh::Internal_CallOnNavMeshPreUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::Internal_CallOnNavMeshPreUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "Internal_CallOnNavMeshPreUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMesh.CalculatePath
bool UnityEngine::AI::NavMesh::CalculatePath(UnityEngine::Vector3 sourcePosition, UnityEngine::Vector3 targetPosition, int areaMask, UnityEngine::AI::NavMeshPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::CalculatePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "CalculatePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractType(areaMask), ::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourcePosition, targetPosition, areaMask, path);
}
// Autogenerated method: UnityEngine.AI.NavMesh.CalculatePathInternal
bool UnityEngine::AI::NavMesh::CalculatePathInternal(UnityEngine::Vector3 sourcePosition, UnityEngine::Vector3 targetPosition, int areaMask, UnityEngine::AI::NavMeshPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::CalculatePathInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "CalculatePathInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractType(areaMask), ::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourcePosition, targetPosition, areaMask, path);
}
// Autogenerated method: UnityEngine.AI.NavMesh.SamplePosition
bool UnityEngine::AI::NavMesh::SamplePosition(UnityEngine::Vector3 sourcePosition, UnityEngine::AI::NavMeshHit& hit, float maxDistance, int areaMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::SamplePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "SamplePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractIndependentType<UnityEngine::AI::NavMeshHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(areaMask)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourcePosition, hit, maxDistance, areaMask);
}
// Autogenerated method: UnityEngine.AI.NavMesh.CalculatePathInternal_Injected
bool UnityEngine::AI::NavMesh::CalculatePathInternal_Injected(UnityEngine::Vector3& sourcePosition, UnityEngine::Vector3& targetPosition, int areaMask, UnityEngine::AI::NavMeshPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::CalculatePathInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "CalculatePathInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractType(targetPosition), ::il2cpp_utils::ExtractType(areaMask), ::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourcePosition, targetPosition, areaMask, path);
}
// Autogenerated method: UnityEngine.AI.NavMesh.SamplePosition_Injected
bool UnityEngine::AI::NavMesh::SamplePosition_Injected(UnityEngine::Vector3& sourcePosition, UnityEngine::AI::NavMeshHit& hit, float maxDistance, int areaMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::SamplePosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "SamplePosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcePosition), ::il2cpp_utils::ExtractIndependentType<UnityEngine::AI::NavMeshHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(areaMask)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourcePosition, hit, maxDistance, areaMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AI.NavMesh/OnNavMeshPreUpdate
#include "UnityEngine/AI/NavMesh_OnNavMeshPreUpdate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AI.NavMesh/OnNavMeshPreUpdate.Invoke
void UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMesh/OnNavMeshPreUpdate.BeginInvoke
System::IAsyncResult* UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.AI.NavMesh/OnNavMeshPreUpdate.EndInvoke
void UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidJNIHelper
#include "UnityEngine/AndroidJNIHelper.hpp"
// Including type: UnityEngine.AndroidJavaRunnable
#include "UnityEngine/AndroidJavaRunnable.hpp"
// Including type: UnityEngine.AndroidJavaProxy
#include "UnityEngine/AndroidJavaProxy.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AndroidJNIHelper.get_debug
bool UnityEngine::AndroidJNIHelper::get_debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::get_debug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "get_debug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.set_debug
void UnityEngine::AndroidJNIHelper::set_debug(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::set_debug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "set_debug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetConstructorID
System::IntPtr UnityEngine::AndroidJNIHelper::GetConstructorID(System::IntPtr javaClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetConstructorID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetConstructorID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetConstructorID
System::IntPtr UnityEngine::AndroidJNIHelper::GetConstructorID(System::IntPtr javaClass, ::Il2CppString* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetConstructorID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetConstructorID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, signature);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetMethodID
System::IntPtr UnityEngine::AndroidJNIHelper::GetMethodID(System::IntPtr javaClass, ::Il2CppString* methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(methodName)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, methodName);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetMethodID
System::IntPtr UnityEngine::AndroidJNIHelper::GetMethodID(System::IntPtr javaClass, ::Il2CppString* methodName, ::Il2CppString* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, methodName, signature);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetMethodID
System::IntPtr UnityEngine::AndroidJNIHelper::GetMethodID(System::IntPtr javaClass, ::Il2CppString* methodName, ::Il2CppString* signature, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, methodName, signature, isStatic);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetFieldID
System::IntPtr UnityEngine::AndroidJNIHelper::GetFieldID(System::IntPtr javaClass, ::Il2CppString* fieldName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetFieldID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(fieldName)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, fieldName);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetFieldID
System::IntPtr UnityEngine::AndroidJNIHelper::GetFieldID(System::IntPtr javaClass, ::Il2CppString* fieldName, ::Il2CppString* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetFieldID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(fieldName), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, fieldName, signature);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetFieldID
System::IntPtr UnityEngine::AndroidJNIHelper::GetFieldID(System::IntPtr javaClass, ::Il2CppString* fieldName, ::Il2CppString* signature, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetFieldID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(javaClass), ::il2cpp_utils::ExtractType(fieldName), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, fieldName, signature, isStatic);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.CreateJavaRunnable
System::IntPtr UnityEngine::AndroidJNIHelper::CreateJavaRunnable(UnityEngine::AndroidJavaRunnable* jrunnable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::CreateJavaRunnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "CreateJavaRunnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jrunnable)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jrunnable);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.CreateJavaProxy
System::IntPtr UnityEngine::AndroidJNIHelper::CreateJavaProxy(UnityEngine::AndroidJavaProxy* proxy) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::CreateJavaProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "CreateJavaProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxy)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxy);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.ConvertToJNIArray
System::IntPtr UnityEngine::AndroidJNIHelper::ConvertToJNIArray(System::Array* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::ConvertToJNIArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "ConvertToJNIArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.CreateJNIArgArray
::Array<UnityEngine::jvalue>* UnityEngine::AndroidJNIHelper::CreateJNIArgArray(::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::CreateJNIArgArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "CreateJNIArgArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::jvalue>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.DeleteJNIArgArray
void UnityEngine::AndroidJNIHelper::DeleteJNIArgArray(::Array<::Il2CppObject*>* args, ::Array<UnityEngine::jvalue>* jniArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::DeleteJNIArgArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "DeleteJNIArgArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(jniArgs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args, jniArgs);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetConstructorID
System::IntPtr UnityEngine::AndroidJNIHelper::GetConstructorID(System::IntPtr jclass, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetConstructorID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetConstructorID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jclass), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, args);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetMethodID
System::IntPtr UnityEngine::AndroidJNIHelper::GetMethodID(System::IntPtr jclass, ::Il2CppString* methodName, ::Array<::Il2CppObject*>* args, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jclass), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, methodName, args, isStatic);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetSignature
::Il2CppString* UnityEngine::AndroidJNIHelper::GetSignature(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetSignature
::Il2CppString* UnityEngine::AndroidJNIHelper::GetSignature(::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidJNI
#include "UnityEngine/AndroidJNI.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AndroidJNI.AttachCurrentThread
int UnityEngine::AndroidJNI::AttachCurrentThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::AttachCurrentThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "AttachCurrentThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.DetachCurrentThread
int UnityEngine::AndroidJNI::DetachCurrentThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::DetachCurrentThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "DetachCurrentThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetVersion
int UnityEngine::AndroidJNI::GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.FindClass
System::IntPtr UnityEngine::AndroidJNI::FindClass(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FindClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FindClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromReflectedMethod
System::IntPtr UnityEngine::AndroidJNI::FromReflectedMethod(System::IntPtr refMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromReflectedMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromReflectedMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(refMethod)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, refMethod);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromReflectedField
System::IntPtr UnityEngine::AndroidJNI::FromReflectedField(System::IntPtr refField) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromReflectedField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromReflectedField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(refField)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, refField);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToReflectedMethod
System::IntPtr UnityEngine::AndroidJNI::ToReflectedMethod(System::IntPtr clazz, System::IntPtr methodID, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToReflectedMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToReflectedMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, isStatic);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToReflectedField
System::IntPtr UnityEngine::AndroidJNI::ToReflectedField(System::IntPtr clazz, System::IntPtr fieldID, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToReflectedField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToReflectedField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, isStatic);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetSuperclass
System::IntPtr UnityEngine::AndroidJNI::GetSuperclass(System::IntPtr clazz) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetSuperclass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetSuperclass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz);
}
// Autogenerated method: UnityEngine.AndroidJNI.IsAssignableFrom
bool UnityEngine::AndroidJNI::IsAssignableFrom(System::IntPtr clazz1, System::IntPtr clazz2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::IsAssignableFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "IsAssignableFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz1), ::il2cpp_utils::ExtractType(clazz2)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz1, clazz2);
}
// Autogenerated method: UnityEngine.AndroidJNI.Throw
int UnityEngine::AndroidJNI::Throw(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.ThrowNew
int UnityEngine::AndroidJNI::ThrowNew(System::IntPtr clazz, ::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ThrowNew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ThrowNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, message);
}
// Autogenerated method: UnityEngine.AndroidJNI.ExceptionOccurred
System::IntPtr UnityEngine::AndroidJNI::ExceptionOccurred() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ExceptionOccurred");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ExceptionOccurred", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.ExceptionDescribe
void UnityEngine::AndroidJNI::ExceptionDescribe() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ExceptionDescribe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ExceptionDescribe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.ExceptionClear
void UnityEngine::AndroidJNI::ExceptionClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ExceptionClear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ExceptionClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.FatalError
void UnityEngine::AndroidJNI::FatalError(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FatalError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FatalError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: UnityEngine.AndroidJNI.PushLocalFrame
int UnityEngine::AndroidJNI::PushLocalFrame(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::PushLocalFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "PushLocalFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, capacity);
}
// Autogenerated method: UnityEngine.AndroidJNI.PopLocalFrame
System::IntPtr UnityEngine::AndroidJNI::PopLocalFrame(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::PopLocalFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "PopLocalFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewGlobalRef
System::IntPtr UnityEngine::AndroidJNI::NewGlobalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewGlobalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewGlobalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.DeleteGlobalRef
void UnityEngine::AndroidJNI::DeleteGlobalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::DeleteGlobalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "DeleteGlobalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewWeakGlobalRef
System::IntPtr UnityEngine::AndroidJNI::NewWeakGlobalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewWeakGlobalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewWeakGlobalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.DeleteWeakGlobalRef
void UnityEngine::AndroidJNI::DeleteWeakGlobalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::DeleteWeakGlobalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "DeleteWeakGlobalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewLocalRef
System::IntPtr UnityEngine::AndroidJNI::NewLocalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewLocalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewLocalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.DeleteLocalRef
void UnityEngine::AndroidJNI::DeleteLocalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::DeleteLocalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "DeleteLocalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.IsSameObject
bool UnityEngine::AndroidJNI::IsSameObject(System::IntPtr obj1, System::IntPtr obj2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::IsSameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "IsSameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj1), ::il2cpp_utils::ExtractType(obj2)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj1, obj2);
}
// Autogenerated method: UnityEngine.AndroidJNI.EnsureLocalCapacity
int UnityEngine::AndroidJNI::EnsureLocalCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::EnsureLocalCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "EnsureLocalCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, capacity);
}
// Autogenerated method: UnityEngine.AndroidJNI.AllocObject
System::IntPtr UnityEngine::AndroidJNI::AllocObject(System::IntPtr clazz) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::AllocObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "AllocObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewObject
System::IntPtr UnityEngine::AndroidJNI::NewObject(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetObjectClass
System::IntPtr UnityEngine::AndroidJNI::GetObjectClass(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetObjectClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetObjectClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.IsInstanceOf
bool UnityEngine::AndroidJNI::IsInstanceOf(System::IntPtr obj, System::IntPtr clazz) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::IsInstanceOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "IsInstanceOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(clazz)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, clazz);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetMethodID
System::IntPtr UnityEngine::AndroidJNI::GetMethodID(System::IntPtr clazz, ::Il2CppString* name, ::Il2CppString* sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sig)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetFieldID
System::IntPtr UnityEngine::AndroidJNI::GetFieldID(System::IntPtr clazz, ::Il2CppString* name, ::Il2CppString* sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetFieldID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sig)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticMethodID
System::IntPtr UnityEngine::AndroidJNI::GetStaticMethodID(System::IntPtr clazz, ::Il2CppString* name, ::Il2CppString* sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sig)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticFieldID
System::IntPtr UnityEngine::AndroidJNI::GetStaticFieldID(System::IntPtr clazz, ::Il2CppString* name, ::Il2CppString* sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticFieldID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticFieldID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sig)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewString
System::IntPtr UnityEngine::AndroidJNI::NewString(::Il2CppString* chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, chars);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewStringFromStr
System::IntPtr UnityEngine::AndroidJNI::NewStringFromStr(::Il2CppString* chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewStringFromStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewStringFromStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, chars);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewString
System::IntPtr UnityEngine::AndroidJNI::NewString(::Array<::Il2CppChar>* chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, chars);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewStringUTF
System::IntPtr UnityEngine::AndroidJNI::NewStringUTF(::Il2CppString* bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewStringUTF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewStringUTF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStringChars
::Il2CppString* UnityEngine::AndroidJNI::GetStringChars(System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStringChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStringChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStringLength
int UnityEngine::AndroidJNI::GetStringLength(System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStringLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStringLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStringUTFLength
int UnityEngine::AndroidJNI::GetStringUTFLength(System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStringUTFLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStringUTFLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStringUTFChars
::Il2CppString* UnityEngine::AndroidJNI::GetStringUTFChars(System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStringUTFChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStringUTFChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStringMethod
::Il2CppString* UnityEngine::AndroidJNI::CallStringMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStringMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStringMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallObjectMethod
System::IntPtr UnityEngine::AndroidJNI::CallObjectMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallObjectMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallObjectMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallIntMethod
int UnityEngine::AndroidJNI::CallIntMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallIntMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallIntMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallBooleanMethod
bool UnityEngine::AndroidJNI::CallBooleanMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallBooleanMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallBooleanMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallShortMethod
int16_t UnityEngine::AndroidJNI::CallShortMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallShortMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallShortMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallByteMethod
uint8_t UnityEngine::AndroidJNI::CallByteMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallByteMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallByteMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallSByteMethod
int8_t UnityEngine::AndroidJNI::CallSByteMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallSByteMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallSByteMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallCharMethod
::Il2CppChar UnityEngine::AndroidJNI::CallCharMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallCharMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallCharMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallFloatMethod
float UnityEngine::AndroidJNI::CallFloatMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallFloatMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallFloatMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallDoubleMethod
double UnityEngine::AndroidJNI::CallDoubleMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallDoubleMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallDoubleMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallLongMethod
int64_t UnityEngine::AndroidJNI::CallLongMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallLongMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallLongMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallVoidMethod
void UnityEngine::AndroidJNI::CallVoidMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallVoidMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallVoidMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStringField
::Il2CppString* UnityEngine::AndroidJNI::GetStringField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStringField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStringField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetObjectField
System::IntPtr UnityEngine::AndroidJNI::GetObjectField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetObjectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetObjectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetBooleanField
bool UnityEngine::AndroidJNI::GetBooleanField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetBooleanField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetBooleanField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetByteField
uint8_t UnityEngine::AndroidJNI::GetByteField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetSByteField
int8_t UnityEngine::AndroidJNI::GetSByteField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetSByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetSByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetCharField
::Il2CppChar UnityEngine::AndroidJNI::GetCharField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetCharField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetCharField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetShortField
int16_t UnityEngine::AndroidJNI::GetShortField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetShortField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetShortField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetIntField
int UnityEngine::AndroidJNI::GetIntField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetIntField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetIntField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetLongField
int64_t UnityEngine::AndroidJNI::GetLongField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetLongField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetLongField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetFloatField
float UnityEngine::AndroidJNI::GetFloatField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetFloatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetFloatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetDoubleField
double UnityEngine::AndroidJNI::GetDoubleField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetDoubleField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetDoubleField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStringField
void UnityEngine::AndroidJNI::SetStringField(System::IntPtr obj, System::IntPtr fieldID, ::Il2CppString* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStringField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStringField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetObjectField
void UnityEngine::AndroidJNI::SetObjectField(System::IntPtr obj, System::IntPtr fieldID, System::IntPtr val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetObjectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetObjectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetBooleanField
void UnityEngine::AndroidJNI::SetBooleanField(System::IntPtr obj, System::IntPtr fieldID, bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetBooleanField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetBooleanField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetByteField
void UnityEngine::AndroidJNI::SetByteField(System::IntPtr obj, System::IntPtr fieldID, uint8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetSByteField
void UnityEngine::AndroidJNI::SetSByteField(System::IntPtr obj, System::IntPtr fieldID, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetSByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetSByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetCharField
void UnityEngine::AndroidJNI::SetCharField(System::IntPtr obj, System::IntPtr fieldID, ::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetCharField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetCharField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetShortField
void UnityEngine::AndroidJNI::SetShortField(System::IntPtr obj, System::IntPtr fieldID, int16_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetShortField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetShortField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetIntField
void UnityEngine::AndroidJNI::SetIntField(System::IntPtr obj, System::IntPtr fieldID, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetIntField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetIntField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetLongField
void UnityEngine::AndroidJNI::SetLongField(System::IntPtr obj, System::IntPtr fieldID, int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetLongField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetLongField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetFloatField
void UnityEngine::AndroidJNI::SetFloatField(System::IntPtr obj, System::IntPtr fieldID, float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetFloatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetFloatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetDoubleField
void UnityEngine::AndroidJNI::SetDoubleField(System::IntPtr obj, System::IntPtr fieldID, double val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetDoubleField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetDoubleField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticStringMethod
::Il2CppString* UnityEngine::AndroidJNI::CallStaticStringMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticStringMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticStringMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticObjectMethod
System::IntPtr UnityEngine::AndroidJNI::CallStaticObjectMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticObjectMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticObjectMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticIntMethod
int UnityEngine::AndroidJNI::CallStaticIntMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticIntMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticIntMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticBooleanMethod
bool UnityEngine::AndroidJNI::CallStaticBooleanMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticBooleanMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticBooleanMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticShortMethod
int16_t UnityEngine::AndroidJNI::CallStaticShortMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticShortMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticShortMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticByteMethod
uint8_t UnityEngine::AndroidJNI::CallStaticByteMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticByteMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticByteMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticSByteMethod
int8_t UnityEngine::AndroidJNI::CallStaticSByteMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticSByteMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticSByteMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticCharMethod
::Il2CppChar UnityEngine::AndroidJNI::CallStaticCharMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticCharMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticCharMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticFloatMethod
float UnityEngine::AndroidJNI::CallStaticFloatMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticFloatMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticFloatMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticDoubleMethod
double UnityEngine::AndroidJNI::CallStaticDoubleMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticDoubleMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticDoubleMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticLongMethod
int64_t UnityEngine::AndroidJNI::CallStaticLongMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticLongMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticLongMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticVoidMethod
void UnityEngine::AndroidJNI::CallStaticVoidMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticVoidMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticVoidMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticStringField
::Il2CppString* UnityEngine::AndroidJNI::GetStaticStringField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticStringField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticStringField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticObjectField
System::IntPtr UnityEngine::AndroidJNI::GetStaticObjectField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticObjectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticObjectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticBooleanField
bool UnityEngine::AndroidJNI::GetStaticBooleanField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticBooleanField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticBooleanField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticByteField
uint8_t UnityEngine::AndroidJNI::GetStaticByteField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticSByteField
int8_t UnityEngine::AndroidJNI::GetStaticSByteField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticSByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticSByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticCharField
::Il2CppChar UnityEngine::AndroidJNI::GetStaticCharField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticCharField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticCharField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticShortField
int16_t UnityEngine::AndroidJNI::GetStaticShortField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticShortField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticShortField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticIntField
int UnityEngine::AndroidJNI::GetStaticIntField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticIntField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticIntField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticLongField
int64_t UnityEngine::AndroidJNI::GetStaticLongField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticLongField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticLongField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticFloatField
float UnityEngine::AndroidJNI::GetStaticFloatField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticFloatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticFloatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticDoubleField
double UnityEngine::AndroidJNI::GetStaticDoubleField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticDoubleField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticDoubleField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticStringField
void UnityEngine::AndroidJNI::SetStaticStringField(System::IntPtr clazz, System::IntPtr fieldID, ::Il2CppString* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticStringField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticStringField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticObjectField
void UnityEngine::AndroidJNI::SetStaticObjectField(System::IntPtr clazz, System::IntPtr fieldID, System::IntPtr val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticObjectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticObjectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticBooleanField
void UnityEngine::AndroidJNI::SetStaticBooleanField(System::IntPtr clazz, System::IntPtr fieldID, bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticBooleanField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticBooleanField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticByteField
void UnityEngine::AndroidJNI::SetStaticByteField(System::IntPtr clazz, System::IntPtr fieldID, uint8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticSByteField
void UnityEngine::AndroidJNI::SetStaticSByteField(System::IntPtr clazz, System::IntPtr fieldID, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticSByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticSByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticCharField
void UnityEngine::AndroidJNI::SetStaticCharField(System::IntPtr clazz, System::IntPtr fieldID, ::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticCharField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticCharField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticShortField
void UnityEngine::AndroidJNI::SetStaticShortField(System::IntPtr clazz, System::IntPtr fieldID, int16_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticShortField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticShortField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticIntField
void UnityEngine::AndroidJNI::SetStaticIntField(System::IntPtr clazz, System::IntPtr fieldID, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticIntField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticIntField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticLongField
void UnityEngine::AndroidJNI::SetStaticLongField(System::IntPtr clazz, System::IntPtr fieldID, int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticLongField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticLongField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticFloatField
void UnityEngine::AndroidJNI::SetStaticFloatField(System::IntPtr clazz, System::IntPtr fieldID, float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticFloatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticFloatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticDoubleField
void UnityEngine::AndroidJNI::SetStaticDoubleField(System::IntPtr clazz, System::IntPtr fieldID, double val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticDoubleField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticDoubleField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToBooleanArray
System::IntPtr UnityEngine::AndroidJNI::ToBooleanArray(::Array<bool>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToBooleanArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToBooleanArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToByteArray
System::IntPtr UnityEngine::AndroidJNI::ToByteArray(::Array<uint8_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToSByteArray
System::IntPtr UnityEngine::AndroidJNI::ToSByteArray(::Array<int8_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToSByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToSByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToCharArray
System::IntPtr UnityEngine::AndroidJNI::ToCharArray(::Array<::Il2CppChar>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToShortArray
System::IntPtr UnityEngine::AndroidJNI::ToShortArray(::Array<int16_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToShortArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToShortArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToIntArray
System::IntPtr UnityEngine::AndroidJNI::ToIntArray(::Array<int>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToLongArray
System::IntPtr UnityEngine::AndroidJNI::ToLongArray(::Array<int64_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToLongArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToLongArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToFloatArray
System::IntPtr UnityEngine::AndroidJNI::ToFloatArray(::Array<float>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToDoubleArray
System::IntPtr UnityEngine::AndroidJNI::ToDoubleArray(::Array<double>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToDoubleArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToDoubleArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToObjectArray
System::IntPtr UnityEngine::AndroidJNI::ToObjectArray(::Array<System::IntPtr>* array, System::IntPtr arrayClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToObjectArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToObjectArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayClass)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, arrayClass);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToObjectArray
System::IntPtr UnityEngine::AndroidJNI::ToObjectArray(::Array<System::IntPtr>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToObjectArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToObjectArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromBooleanArray
::Array<bool>* UnityEngine::AndroidJNI::FromBooleanArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromBooleanArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromBooleanArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<bool>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromByteArray
::Array<uint8_t>* UnityEngine::AndroidJNI::FromByteArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromSByteArray
::Array<int8_t>* UnityEngine::AndroidJNI::FromSByteArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromSByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromSByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromCharArray
::Array<::Il2CppChar>* UnityEngine::AndroidJNI::FromCharArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromShortArray
::Array<int16_t>* UnityEngine::AndroidJNI::FromShortArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromShortArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromShortArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int16_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromIntArray
::Array<int>* UnityEngine::AndroidJNI::FromIntArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromLongArray
::Array<int64_t>* UnityEngine::AndroidJNI::FromLongArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromLongArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromLongArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int64_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromFloatArray
::Array<float>* UnityEngine::AndroidJNI::FromFloatArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<float>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromDoubleArray
::Array<double>* UnityEngine::AndroidJNI::FromDoubleArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromDoubleArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromDoubleArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<double>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromObjectArray
::Array<System::IntPtr>* UnityEngine::AndroidJNI::FromObjectArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromObjectArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromObjectArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::IntPtr>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetArrayLength
int UnityEngine::AndroidJNI::GetArrayLength(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetArrayLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetArrayLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewBooleanArray
System::IntPtr UnityEngine::AndroidJNI::NewBooleanArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewBooleanArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewBooleanArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewByteArray
System::IntPtr UnityEngine::AndroidJNI::NewByteArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewSByteArray
System::IntPtr UnityEngine::AndroidJNI::NewSByteArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewSByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewSByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewCharArray
System::IntPtr UnityEngine::AndroidJNI::NewCharArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewShortArray
System::IntPtr UnityEngine::AndroidJNI::NewShortArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewShortArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewShortArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewIntArray
System::IntPtr UnityEngine::AndroidJNI::NewIntArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewLongArray
System::IntPtr UnityEngine::AndroidJNI::NewLongArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewLongArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewLongArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewFloatArray
System::IntPtr UnityEngine::AndroidJNI::NewFloatArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewDoubleArray
System::IntPtr UnityEngine::AndroidJNI::NewDoubleArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewDoubleArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewDoubleArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewObjectArray
System::IntPtr UnityEngine::AndroidJNI::NewObjectArray(int size, System::IntPtr clazz, System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewObjectArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewObjectArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size, clazz, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetBooleanArrayElement
bool UnityEngine::AndroidJNI::GetBooleanArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetBooleanArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetBooleanArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetByteArrayElement
uint8_t UnityEngine::AndroidJNI::GetByteArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetByteArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetByteArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetSByteArrayElement
int8_t UnityEngine::AndroidJNI::GetSByteArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetSByteArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetSByteArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetCharArrayElement
::Il2CppChar UnityEngine::AndroidJNI::GetCharArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetCharArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetCharArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetShortArrayElement
int16_t UnityEngine::AndroidJNI::GetShortArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetShortArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetShortArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetIntArrayElement
int UnityEngine::AndroidJNI::GetIntArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetIntArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetIntArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetLongArrayElement
int64_t UnityEngine::AndroidJNI::GetLongArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetLongArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetLongArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetFloatArrayElement
float UnityEngine::AndroidJNI::GetFloatArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetFloatArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetFloatArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetDoubleArrayElement
double UnityEngine::AndroidJNI::GetDoubleArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetDoubleArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetDoubleArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetObjectArrayElement
System::IntPtr UnityEngine::AndroidJNI::GetObjectArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetObjectArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetObjectArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetBooleanArrayElement
void UnityEngine::AndroidJNI::SetBooleanArrayElement(System::IntPtr array, int index, uint8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetBooleanArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetBooleanArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetBooleanArrayElement
void UnityEngine::AndroidJNI::SetBooleanArrayElement(System::IntPtr array, int index, bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetBooleanArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetBooleanArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetByteArrayElement
void UnityEngine::AndroidJNI::SetByteArrayElement(System::IntPtr array, int index, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetByteArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetByteArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetSByteArrayElement
void UnityEngine::AndroidJNI::SetSByteArrayElement(System::IntPtr array, int index, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetSByteArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetSByteArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetCharArrayElement
void UnityEngine::AndroidJNI::SetCharArrayElement(System::IntPtr array, int index, ::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetCharArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetCharArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetShortArrayElement
void UnityEngine::AndroidJNI::SetShortArrayElement(System::IntPtr array, int index, int16_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetShortArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetShortArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetIntArrayElement
void UnityEngine::AndroidJNI::SetIntArrayElement(System::IntPtr array, int index, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetIntArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetIntArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetLongArrayElement
void UnityEngine::AndroidJNI::SetLongArrayElement(System::IntPtr array, int index, int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetLongArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetLongArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetFloatArrayElement
void UnityEngine::AndroidJNI::SetFloatArrayElement(System::IntPtr array, int index, float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetFloatArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetFloatArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetDoubleArrayElement
void UnityEngine::AndroidJNI::SetDoubleArrayElement(System::IntPtr array, int index, double val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetDoubleArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetDoubleArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetObjectArrayElement
void UnityEngine::AndroidJNI::SetObjectArrayElement(System::IntPtr array, int index, System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetObjectArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetObjectArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidJNISafe
#include "UnityEngine/AndroidJNISafe.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AndroidJNISafe.CheckException
void UnityEngine::AndroidJNISafe::CheckException() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CheckException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CheckException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.DeleteGlobalRef
void UnityEngine::AndroidJNISafe::DeleteGlobalRef(System::IntPtr globalref) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::DeleteGlobalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "DeleteGlobalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(globalref)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, globalref);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.DeleteWeakGlobalRef
void UnityEngine::AndroidJNISafe::DeleteWeakGlobalRef(System::IntPtr globalref) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::DeleteWeakGlobalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "DeleteWeakGlobalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(globalref)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, globalref);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.DeleteLocalRef
void UnityEngine::AndroidJNISafe::DeleteLocalRef(System::IntPtr localref) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::DeleteLocalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "DeleteLocalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localref)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, localref);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.NewString
System::IntPtr UnityEngine::AndroidJNISafe::NewString(::Il2CppString* chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::NewString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "NewString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, chars);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStringChars
::Il2CppString* UnityEngine::AndroidJNISafe::GetStringChars(System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStringChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStringChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetObjectClass
System::IntPtr UnityEngine::AndroidJNISafe::GetObjectClass(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetObjectClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetObjectClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticMethodID
System::IntPtr UnityEngine::AndroidJNISafe::GetStaticMethodID(System::IntPtr clazz, ::Il2CppString* name, ::Il2CppString* sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sig)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetMethodID
System::IntPtr UnityEngine::AndroidJNISafe::GetMethodID(System::IntPtr obj, ::Il2CppString* name, ::Il2CppString* sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sig)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetFieldID
System::IntPtr UnityEngine::AndroidJNISafe::GetFieldID(System::IntPtr clazz, ::Il2CppString* name, ::Il2CppString* sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetFieldID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sig)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticFieldID
System::IntPtr UnityEngine::AndroidJNISafe::GetStaticFieldID(System::IntPtr clazz, ::Il2CppString* name, ::Il2CppString* sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticFieldID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticFieldID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sig)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromReflectedMethod
System::IntPtr UnityEngine::AndroidJNISafe::FromReflectedMethod(System::IntPtr refMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromReflectedMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromReflectedMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(refMethod)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, refMethod);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FindClass
System::IntPtr UnityEngine::AndroidJNISafe::FindClass(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FindClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FindClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.NewObject
System::IntPtr UnityEngine::AndroidJNISafe::NewObject(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::NewObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "NewObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticObjectField
void UnityEngine::AndroidJNISafe::SetStaticObjectField(System::IntPtr clazz, System::IntPtr fieldID, System::IntPtr val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticObjectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticObjectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticStringField
void UnityEngine::AndroidJNISafe::SetStaticStringField(System::IntPtr clazz, System::IntPtr fieldID, ::Il2CppString* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticStringField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticStringField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticCharField
void UnityEngine::AndroidJNISafe::SetStaticCharField(System::IntPtr clazz, System::IntPtr fieldID, ::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticCharField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticCharField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticDoubleField
void UnityEngine::AndroidJNISafe::SetStaticDoubleField(System::IntPtr clazz, System::IntPtr fieldID, double val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticDoubleField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticDoubleField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticFloatField
void UnityEngine::AndroidJNISafe::SetStaticFloatField(System::IntPtr clazz, System::IntPtr fieldID, float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticFloatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticFloatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticLongField
void UnityEngine::AndroidJNISafe::SetStaticLongField(System::IntPtr clazz, System::IntPtr fieldID, int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticLongField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticLongField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticShortField
void UnityEngine::AndroidJNISafe::SetStaticShortField(System::IntPtr clazz, System::IntPtr fieldID, int16_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticShortField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticShortField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticSByteField
void UnityEngine::AndroidJNISafe::SetStaticSByteField(System::IntPtr clazz, System::IntPtr fieldID, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticSByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticSByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticBooleanField
void UnityEngine::AndroidJNISafe::SetStaticBooleanField(System::IntPtr clazz, System::IntPtr fieldID, bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticBooleanField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticBooleanField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticIntField
void UnityEngine::AndroidJNISafe::SetStaticIntField(System::IntPtr clazz, System::IntPtr fieldID, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticIntField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticIntField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticObjectField
System::IntPtr UnityEngine::AndroidJNISafe::GetStaticObjectField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticObjectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticObjectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticStringField
::Il2CppString* UnityEngine::AndroidJNISafe::GetStaticStringField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticStringField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticStringField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticCharField
::Il2CppChar UnityEngine::AndroidJNISafe::GetStaticCharField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticCharField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticCharField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticDoubleField
double UnityEngine::AndroidJNISafe::GetStaticDoubleField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticDoubleField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticDoubleField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticFloatField
float UnityEngine::AndroidJNISafe::GetStaticFloatField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticFloatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticFloatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticLongField
int64_t UnityEngine::AndroidJNISafe::GetStaticLongField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticLongField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticLongField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticShortField
int16_t UnityEngine::AndroidJNISafe::GetStaticShortField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticShortField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticShortField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticSByteField
int8_t UnityEngine::AndroidJNISafe::GetStaticSByteField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticSByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticSByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticBooleanField
bool UnityEngine::AndroidJNISafe::GetStaticBooleanField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticBooleanField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticBooleanField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticIntField
int UnityEngine::AndroidJNISafe::GetStaticIntField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticIntField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticIntField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticVoidMethod
void UnityEngine::AndroidJNISafe::CallStaticVoidMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticVoidMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticVoidMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticObjectMethod
System::IntPtr UnityEngine::AndroidJNISafe::CallStaticObjectMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticObjectMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticObjectMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticStringMethod
::Il2CppString* UnityEngine::AndroidJNISafe::CallStaticStringMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticStringMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticStringMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticCharMethod
::Il2CppChar UnityEngine::AndroidJNISafe::CallStaticCharMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticCharMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticCharMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticDoubleMethod
double UnityEngine::AndroidJNISafe::CallStaticDoubleMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticDoubleMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticDoubleMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticFloatMethod
float UnityEngine::AndroidJNISafe::CallStaticFloatMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticFloatMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticFloatMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticLongMethod
int64_t UnityEngine::AndroidJNISafe::CallStaticLongMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticLongMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticLongMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticShortMethod
int16_t UnityEngine::AndroidJNISafe::CallStaticShortMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticShortMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticShortMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticSByteMethod
int8_t UnityEngine::AndroidJNISafe::CallStaticSByteMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticSByteMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticSByteMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticBooleanMethod
bool UnityEngine::AndroidJNISafe::CallStaticBooleanMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticBooleanMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticBooleanMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticIntMethod
int UnityEngine::AndroidJNISafe::CallStaticIntMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticIntMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticIntMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetObjectField
void UnityEngine::AndroidJNISafe::SetObjectField(System::IntPtr obj, System::IntPtr fieldID, System::IntPtr val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetObjectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetObjectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStringField
void UnityEngine::AndroidJNISafe::SetStringField(System::IntPtr obj, System::IntPtr fieldID, ::Il2CppString* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStringField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStringField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetCharField
void UnityEngine::AndroidJNISafe::SetCharField(System::IntPtr obj, System::IntPtr fieldID, ::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetCharField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetCharField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetDoubleField
void UnityEngine::AndroidJNISafe::SetDoubleField(System::IntPtr obj, System::IntPtr fieldID, double val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetDoubleField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetDoubleField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetFloatField
void UnityEngine::AndroidJNISafe::SetFloatField(System::IntPtr obj, System::IntPtr fieldID, float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetFloatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetFloatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetLongField
void UnityEngine::AndroidJNISafe::SetLongField(System::IntPtr obj, System::IntPtr fieldID, int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetLongField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetLongField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetShortField
void UnityEngine::AndroidJNISafe::SetShortField(System::IntPtr obj, System::IntPtr fieldID, int16_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetShortField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetShortField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetSByteField
void UnityEngine::AndroidJNISafe::SetSByteField(System::IntPtr obj, System::IntPtr fieldID, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetSByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetSByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetBooleanField
void UnityEngine::AndroidJNISafe::SetBooleanField(System::IntPtr obj, System::IntPtr fieldID, bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetBooleanField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetBooleanField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetIntField
void UnityEngine::AndroidJNISafe::SetIntField(System::IntPtr obj, System::IntPtr fieldID, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetIntField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetIntField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetObjectField
System::IntPtr UnityEngine::AndroidJNISafe::GetObjectField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetObjectField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetObjectField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStringField
::Il2CppString* UnityEngine::AndroidJNISafe::GetStringField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStringField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStringField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetCharField
::Il2CppChar UnityEngine::AndroidJNISafe::GetCharField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetCharField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetCharField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetDoubleField
double UnityEngine::AndroidJNISafe::GetDoubleField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetDoubleField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetDoubleField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetFloatField
float UnityEngine::AndroidJNISafe::GetFloatField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetFloatField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetFloatField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetLongField
int64_t UnityEngine::AndroidJNISafe::GetLongField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetLongField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetLongField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetShortField
int16_t UnityEngine::AndroidJNISafe::GetShortField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetShortField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetShortField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetSByteField
int8_t UnityEngine::AndroidJNISafe::GetSByteField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetSByteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetSByteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetBooleanField
bool UnityEngine::AndroidJNISafe::GetBooleanField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetBooleanField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetBooleanField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetIntField
int UnityEngine::AndroidJNISafe::GetIntField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetIntField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetIntField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(fieldID)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallVoidMethod
void UnityEngine::AndroidJNISafe::CallVoidMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallVoidMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallVoidMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallObjectMethod
System::IntPtr UnityEngine::AndroidJNISafe::CallObjectMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallObjectMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallObjectMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStringMethod
::Il2CppString* UnityEngine::AndroidJNISafe::CallStringMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStringMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStringMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallCharMethod
::Il2CppChar UnityEngine::AndroidJNISafe::CallCharMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallCharMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallCharMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallDoubleMethod
double UnityEngine::AndroidJNISafe::CallDoubleMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallDoubleMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallDoubleMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallFloatMethod
float UnityEngine::AndroidJNISafe::CallFloatMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallFloatMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallFloatMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallLongMethod
int64_t UnityEngine::AndroidJNISafe::CallLongMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallLongMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallLongMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallShortMethod
int16_t UnityEngine::AndroidJNISafe::CallShortMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallShortMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallShortMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallSByteMethod
int8_t UnityEngine::AndroidJNISafe::CallSByteMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallSByteMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallSByteMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallBooleanMethod
bool UnityEngine::AndroidJNISafe::CallBooleanMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallBooleanMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallBooleanMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallIntMethod
int UnityEngine::AndroidJNISafe::CallIntMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallIntMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallIntMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(methodID), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromCharArray
::Array<::Il2CppChar>* UnityEngine::AndroidJNISafe::FromCharArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromDoubleArray
::Array<double>* UnityEngine::AndroidJNISafe::FromDoubleArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromDoubleArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromDoubleArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<double>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromFloatArray
::Array<float>* UnityEngine::AndroidJNISafe::FromFloatArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<float>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromLongArray
::Array<int64_t>* UnityEngine::AndroidJNISafe::FromLongArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromLongArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromLongArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int64_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromShortArray
::Array<int16_t>* UnityEngine::AndroidJNISafe::FromShortArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromShortArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromShortArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int16_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromByteArray
::Array<uint8_t>* UnityEngine::AndroidJNISafe::FromByteArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromSByteArray
::Array<int8_t>* UnityEngine::AndroidJNISafe::FromSByteArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromSByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromSByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromBooleanArray
::Array<bool>* UnityEngine::AndroidJNISafe::FromBooleanArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromBooleanArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromBooleanArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<bool>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromIntArray
::Array<int>* UnityEngine::AndroidJNISafe::FromIntArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToObjectArray
System::IntPtr UnityEngine::AndroidJNISafe::ToObjectArray(::Array<System::IntPtr>* array, System::IntPtr type) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToObjectArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToObjectArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, type);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToCharArray
System::IntPtr UnityEngine::AndroidJNISafe::ToCharArray(::Array<::Il2CppChar>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToDoubleArray
System::IntPtr UnityEngine::AndroidJNISafe::ToDoubleArray(::Array<double>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToDoubleArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToDoubleArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToFloatArray
System::IntPtr UnityEngine::AndroidJNISafe::ToFloatArray(::Array<float>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToFloatArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToFloatArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToLongArray
System::IntPtr UnityEngine::AndroidJNISafe::ToLongArray(::Array<int64_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToLongArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToLongArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToShortArray
System::IntPtr UnityEngine::AndroidJNISafe::ToShortArray(::Array<int16_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToShortArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToShortArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToByteArray
System::IntPtr UnityEngine::AndroidJNISafe::ToByteArray(::Array<uint8_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToSByteArray
System::IntPtr UnityEngine::AndroidJNISafe::ToSByteArray(::Array<int8_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToSByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToSByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToBooleanArray
System::IntPtr UnityEngine::AndroidJNISafe::ToBooleanArray(::Array<bool>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToBooleanArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToBooleanArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToIntArray
System::IntPtr UnityEngine::AndroidJNISafe::ToIntArray(::Array<int>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetObjectArrayElement
System::IntPtr UnityEngine::AndroidJNISafe::GetObjectArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetObjectArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetObjectArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetArrayLength
int UnityEngine::AndroidJNISafe::GetArrayLength(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetArrayLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetArrayLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidJavaRunnable
#include "UnityEngine/AndroidJavaRunnable.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AndroidJavaRunnable.Invoke
void UnityEngine::AndroidJavaRunnable::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaRunnable::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaRunnable.BeginInvoke
System::IAsyncResult* UnityEngine::AndroidJavaRunnable::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaRunnable::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.AndroidJavaRunnable.EndInvoke
void UnityEngine::AndroidJavaRunnable::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaRunnable::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidJavaException
#include "UnityEngine/AndroidJavaException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AndroidJavaException.get_StackTrace
::Il2CppString* UnityEngine::AndroidJavaException::get_StackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaException::get_StackTrace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.GlobalJavaObjectRef
#include "UnityEngine/GlobalJavaObjectRef.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.GlobalJavaObjectRef.Dispose
void UnityEngine::GlobalJavaObjectRef::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GlobalJavaObjectRef::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GlobalJavaObjectRef.Finalize
void UnityEngine::GlobalJavaObjectRef::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GlobalJavaObjectRef::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AndroidJavaRunnableProxy
#include "UnityEngine/AndroidJavaRunnableProxy.hpp"
// Including type: UnityEngine.AndroidJavaRunnable
#include "UnityEngine/AndroidJavaRunnable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AndroidJavaRunnableProxy.run
void UnityEngine::AndroidJavaRunnableProxy::run() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaRunnableProxy::run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidJavaProxy
#include "UnityEngine/AndroidJavaProxy.hpp"
// Including type: UnityEngine.AndroidJavaClass
#include "UnityEngine/AndroidJavaClass.hpp"
// Including type: UnityEngine.GlobalJavaObjectRef
#include "UnityEngine/GlobalJavaObjectRef.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.GlobalJavaObjectRef s_JavaLangSystemClass
UnityEngine::GlobalJavaObjectRef* UnityEngine::AndroidJavaProxy::_get_s_JavaLangSystemClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::_get_s_JavaLangSystemClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GlobalJavaObjectRef*>("UnityEngine", "AndroidJavaProxy", "s_JavaLangSystemClass"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.GlobalJavaObjectRef s_JavaLangSystemClass
void UnityEngine::AndroidJavaProxy::_set_s_JavaLangSystemClass(UnityEngine::GlobalJavaObjectRef* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::_set_s_JavaLangSystemClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidJavaProxy", "s_JavaLangSystemClass", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr s_HashCodeMethodID
System::IntPtr UnityEngine::AndroidJavaProxy::_get_s_HashCodeMethodID() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::_get_s_HashCodeMethodID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("UnityEngine", "AndroidJavaProxy", "s_HashCodeMethodID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr s_HashCodeMethodID
void UnityEngine::AndroidJavaProxy::_set_s_HashCodeMethodID(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::_set_s_HashCodeMethodID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidJavaProxy", "s_HashCodeMethodID", value));
}
// Autogenerated method: UnityEngine.AndroidJavaProxy.Invoke
UnityEngine::AndroidJavaObject* UnityEngine::AndroidJavaProxy::Invoke(::Il2CppString* methodName, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AndroidJavaObject*, false>(this, ___internal__method, methodName, args);
}
// Autogenerated method: UnityEngine.AndroidJavaProxy.Invoke
UnityEngine::AndroidJavaObject* UnityEngine::AndroidJavaProxy::Invoke(::Il2CppString* methodName, ::Array<UnityEngine::AndroidJavaObject*>* javaArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(javaArgs)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AndroidJavaObject*, false>(this, ___internal__method, methodName, javaArgs);
}
// Autogenerated method: UnityEngine.AndroidJavaProxy.equals
bool UnityEngine::AndroidJavaProxy::equals(UnityEngine::AndroidJavaObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJavaProxy.hashCode
int UnityEngine::AndroidJavaProxy::hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::hashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "hashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaProxy.toString
::Il2CppString* UnityEngine::AndroidJavaProxy::toString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::toString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "toString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaProxy.GetProxyObject
UnityEngine::AndroidJavaObject* UnityEngine::AndroidJavaProxy::GetProxyObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::GetProxyObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxyObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AndroidJavaObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaProxy.GetRawProxy
System::IntPtr UnityEngine::AndroidJavaProxy::GetRawProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::GetRawProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaProxy..cctor
void UnityEngine::AndroidJavaProxy::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJavaProxy", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaProxy.Finalize
void UnityEngine::AndroidJavaProxy::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
// Including type: UnityEngine.GlobalJavaObjectRef
#include "UnityEngine/GlobalJavaObjectRef.hpp"
// Including type: UnityEngine.AndroidJavaClass
#include "UnityEngine/AndroidJavaClass.hpp"
// Including type: UnityEngine.AndroidJavaProxy
#include "UnityEngine/AndroidJavaProxy.hpp"
// Including type: UnityEngine.AndroidJavaRunnable
#include "UnityEngine/AndroidJavaRunnable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean enableDebugPrints
bool UnityEngine::AndroidJavaObject::_get_enableDebugPrints() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::_get_enableDebugPrints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngine", "AndroidJavaObject", "enableDebugPrints"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean enableDebugPrints
void UnityEngine::AndroidJavaObject::_set_enableDebugPrints(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::_set_enableDebugPrints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidJavaObject", "enableDebugPrints", value));
}
// Autogenerated method: UnityEngine.AndroidJavaObject.Dispose
void UnityEngine::AndroidJavaObject::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaObject.Call
void UnityEngine::AndroidJavaObject::Call(::Il2CppString* methodName, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, methodName, args);
}
// Creating initializer_list -> params proxy for: System.Void Call(System.String methodName, params System.Object[] args)
void UnityEngine::AndroidJavaObject::Call(::Il2CppString* methodName, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::AndroidJavaObject::Call(methodName, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.AndroidJavaObject.CallStatic
void UnityEngine::AndroidJavaObject::CallStatic(::Il2CppString* methodName, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::CallStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, methodName, args);
}
// Creating initializer_list -> params proxy for: System.Void CallStatic(System.String methodName, params System.Object[] args)
void UnityEngine::AndroidJavaObject::CallStatic(::Il2CppString* methodName, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::AndroidJavaObject::CallStatic(methodName, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.AndroidJavaObject.GetRawObject
System::IntPtr UnityEngine::AndroidJavaObject::GetRawObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::GetRawObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaObject.GetRawClass
System::IntPtr UnityEngine::AndroidJavaObject::GetRawClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::GetRawClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaObject.DebugPrint
void UnityEngine::AndroidJavaObject::DebugPrint(::Il2CppString* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::DebugPrint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugPrint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: UnityEngine.AndroidJavaObject.DebugPrint
void UnityEngine::AndroidJavaObject::DebugPrint(::Il2CppString* call, ::Il2CppString* methodName, ::Il2CppString* signature, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::DebugPrint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugPrint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(call), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, call, methodName, signature, args);
}
// Autogenerated method: UnityEngine.AndroidJavaObject._AndroidJavaObject
void UnityEngine::AndroidJavaObject::_AndroidJavaObject(::Il2CppString* className, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::_AndroidJavaObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_AndroidJavaObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(className), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, className, args);
}
// Creating initializer_list -> params proxy for: System.Void _AndroidJavaObject(System.String className, params System.Object[] args)
void UnityEngine::AndroidJavaObject::_AndroidJavaObject(::Il2CppString* className, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::AndroidJavaObject::_AndroidJavaObject(className, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.AndroidJavaObject.Dispose
void UnityEngine::AndroidJavaObject::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: UnityEngine.AndroidJavaObject._Call
void UnityEngine::AndroidJavaObject::_Call(::Il2CppString* methodName, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::_Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, methodName, args);
}
// Creating initializer_list -> params proxy for: System.Void _Call(System.String methodName, params System.Object[] args)
void UnityEngine::AndroidJavaObject::_Call(::Il2CppString* methodName, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::AndroidJavaObject::_Call(methodName, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.AndroidJavaObject._CallStatic
void UnityEngine::AndroidJavaObject::_CallStatic(::Il2CppString* methodName, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::_CallStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_CallStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, methodName, args);
}
// Creating initializer_list -> params proxy for: System.Void _CallStatic(System.String methodName, params System.Object[] args)
void UnityEngine::AndroidJavaObject::_CallStatic(::Il2CppString* methodName, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::AndroidJavaObject::_CallStatic(methodName, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.AndroidJavaObject.AndroidJavaObjectDeleteLocalRef
UnityEngine::AndroidJavaObject* UnityEngine::AndroidJavaObject::AndroidJavaObjectDeleteLocalRef(System::IntPtr jobject) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::AndroidJavaObjectDeleteLocalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJavaObject", "AndroidJavaObjectDeleteLocalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jobject)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AndroidJavaObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jobject);
}
// Autogenerated method: UnityEngine.AndroidJavaObject.AndroidJavaClassDeleteLocalRef
UnityEngine::AndroidJavaClass* UnityEngine::AndroidJavaObject::AndroidJavaClassDeleteLocalRef(System::IntPtr jclass) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::AndroidJavaClassDeleteLocalRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJavaObject", "AndroidJavaClassDeleteLocalRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jclass)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AndroidJavaClass*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass);
}
// Autogenerated method: UnityEngine.AndroidJavaObject._GetRawObject
System::IntPtr UnityEngine::AndroidJavaObject::_GetRawObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::_GetRawObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_GetRawObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaObject._GetRawClass
System::IntPtr UnityEngine::AndroidJavaObject::_GetRawClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::_GetRawClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_GetRawClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaObject..cctor
void UnityEngine::AndroidJavaObject::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidJavaObject", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaObject.Finalize
void UnityEngine::AndroidJavaObject::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidJavaClass
#include "UnityEngine/AndroidJavaClass.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AndroidJavaClass._AndroidJavaClass
void UnityEngine::AndroidJavaClass::_AndroidJavaClass(::Il2CppString* className) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaClass::_AndroidJavaClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "_AndroidJavaClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(className)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, className);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidReflection
#include "UnityEngine/AndroidReflection.hpp"
// Including type: UnityEngine.GlobalJavaObjectRef
#include "UnityEngine/GlobalJavaObjectRef.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.GlobalJavaObjectRef s_ReflectionHelperClass
UnityEngine::GlobalJavaObjectRef* UnityEngine::AndroidReflection::_get_s_ReflectionHelperClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_get_s_ReflectionHelperClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GlobalJavaObjectRef*>("UnityEngine", "AndroidReflection", "s_ReflectionHelperClass"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.GlobalJavaObjectRef s_ReflectionHelperClass
void UnityEngine::AndroidReflection::_set_s_ReflectionHelperClass(UnityEngine::GlobalJavaObjectRef* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_set_s_ReflectionHelperClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidReflection", "s_ReflectionHelperClass", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr s_ReflectionHelperGetConstructorID
System::IntPtr UnityEngine::AndroidReflection::_get_s_ReflectionHelperGetConstructorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_get_s_ReflectionHelperGetConstructorID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("UnityEngine", "AndroidReflection", "s_ReflectionHelperGetConstructorID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr s_ReflectionHelperGetConstructorID
void UnityEngine::AndroidReflection::_set_s_ReflectionHelperGetConstructorID(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_set_s_ReflectionHelperGetConstructorID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidReflection", "s_ReflectionHelperGetConstructorID", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr s_ReflectionHelperGetMethodID
System::IntPtr UnityEngine::AndroidReflection::_get_s_ReflectionHelperGetMethodID() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_get_s_ReflectionHelperGetMethodID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("UnityEngine", "AndroidReflection", "s_ReflectionHelperGetMethodID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr s_ReflectionHelperGetMethodID
void UnityEngine::AndroidReflection::_set_s_ReflectionHelperGetMethodID(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_set_s_ReflectionHelperGetMethodID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidReflection", "s_ReflectionHelperGetMethodID", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr s_ReflectionHelperGetFieldID
System::IntPtr UnityEngine::AndroidReflection::_get_s_ReflectionHelperGetFieldID() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_get_s_ReflectionHelperGetFieldID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("UnityEngine", "AndroidReflection", "s_ReflectionHelperGetFieldID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr s_ReflectionHelperGetFieldID
void UnityEngine::AndroidReflection::_set_s_ReflectionHelperGetFieldID(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_set_s_ReflectionHelperGetFieldID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidReflection", "s_ReflectionHelperGetFieldID", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr s_ReflectionHelperGetFieldSignature
System::IntPtr UnityEngine::AndroidReflection::_get_s_ReflectionHelperGetFieldSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_get_s_ReflectionHelperGetFieldSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("UnityEngine", "AndroidReflection", "s_ReflectionHelperGetFieldSignature"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr s_ReflectionHelperGetFieldSignature
void UnityEngine::AndroidReflection::_set_s_ReflectionHelperGetFieldSignature(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_set_s_ReflectionHelperGetFieldSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidReflection", "s_ReflectionHelperGetFieldSignature", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr s_ReflectionHelperNewProxyInstance
System::IntPtr UnityEngine::AndroidReflection::_get_s_ReflectionHelperNewProxyInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_get_s_ReflectionHelperNewProxyInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("UnityEngine", "AndroidReflection", "s_ReflectionHelperNewProxyInstance"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr s_ReflectionHelperNewProxyInstance
void UnityEngine::AndroidReflection::_set_s_ReflectionHelperNewProxyInstance(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_set_s_ReflectionHelperNewProxyInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidReflection", "s_ReflectionHelperNewProxyInstance", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr s_ReflectionHelperSetNativeExceptionOnProxy
System::IntPtr UnityEngine::AndroidReflection::_get_s_ReflectionHelperSetNativeExceptionOnProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_get_s_ReflectionHelperSetNativeExceptionOnProxy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("UnityEngine", "AndroidReflection", "s_ReflectionHelperSetNativeExceptionOnProxy"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr s_ReflectionHelperSetNativeExceptionOnProxy
void UnityEngine::AndroidReflection::_set_s_ReflectionHelperSetNativeExceptionOnProxy(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_set_s_ReflectionHelperSetNativeExceptionOnProxy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidReflection", "s_ReflectionHelperSetNativeExceptionOnProxy", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr s_FieldGetDeclaringClass
System::IntPtr UnityEngine::AndroidReflection::_get_s_FieldGetDeclaringClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_get_s_FieldGetDeclaringClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("UnityEngine", "AndroidReflection", "s_FieldGetDeclaringClass"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr s_FieldGetDeclaringClass
void UnityEngine::AndroidReflection::_set_s_FieldGetDeclaringClass(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_set_s_FieldGetDeclaringClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidReflection", "s_FieldGetDeclaringClass", value));
}
// Autogenerated method: UnityEngine.AndroidReflection.IsPrimitive
bool UnityEngine::AndroidReflection::IsPrimitive(System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::IsPrimitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "IsPrimitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: UnityEngine.AndroidReflection.IsAssignableFrom
bool UnityEngine::AndroidReflection::IsAssignableFrom(System::Type* t, System::Type* from) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::IsAssignableFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "IsAssignableFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(from)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, from);
}
// Autogenerated method: UnityEngine.AndroidReflection.GetStaticMethodID
System::IntPtr UnityEngine::AndroidReflection::GetStaticMethodID(::Il2CppString* clazz, ::Il2CppString* methodName, ::Il2CppString* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::GetStaticMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "GetStaticMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodName, signature);
}
// Autogenerated method: UnityEngine.AndroidReflection.GetMethodID
System::IntPtr UnityEngine::AndroidReflection::GetMethodID(::Il2CppString* clazz, ::Il2CppString* methodName, ::Il2CppString* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "GetMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clazz), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodName, signature);
}
// Autogenerated method: UnityEngine.AndroidReflection.GetConstructorMember
System::IntPtr UnityEngine::AndroidReflection::GetConstructorMember(System::IntPtr jclass, ::Il2CppString* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::GetConstructorMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "GetConstructorMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jclass), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, signature);
}
// Autogenerated method: UnityEngine.AndroidReflection.GetMethodMember
System::IntPtr UnityEngine::AndroidReflection::GetMethodMember(System::IntPtr jclass, ::Il2CppString* methodName, ::Il2CppString* signature, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::GetMethodMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "GetMethodMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jclass), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, methodName, signature, isStatic);
}
// Autogenerated method: UnityEngine.AndroidReflection.GetFieldMember
System::IntPtr UnityEngine::AndroidReflection::GetFieldMember(System::IntPtr jclass, ::Il2CppString* fieldName, ::Il2CppString* signature, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::GetFieldMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "GetFieldMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jclass), ::il2cpp_utils::ExtractType(fieldName), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, fieldName, signature, isStatic);
}
// Autogenerated method: UnityEngine.AndroidReflection.GetFieldClass
System::IntPtr UnityEngine::AndroidReflection::GetFieldClass(System::IntPtr field) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::GetFieldClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "GetFieldClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(field)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, field);
}
// Autogenerated method: UnityEngine.AndroidReflection.GetFieldSignature
::Il2CppString* UnityEngine::AndroidReflection::GetFieldSignature(System::IntPtr field) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::GetFieldSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "GetFieldSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(field)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, field);
}
// Autogenerated method: UnityEngine.AndroidReflection.NewProxyInstance
System::IntPtr UnityEngine::AndroidReflection::NewProxyInstance(System::IntPtr delegateHandle, System::IntPtr interfaze) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::NewProxyInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "NewProxyInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegateHandle), ::il2cpp_utils::ExtractType(interfaze)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, delegateHandle, interfaze);
}
// Autogenerated method: UnityEngine.AndroidReflection.SetNativeExceptionOnProxy
void UnityEngine::AndroidReflection::SetNativeExceptionOnProxy(System::IntPtr proxy, System::Exception* e, bool methodNotFound) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::SetNativeExceptionOnProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "SetNativeExceptionOnProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxy), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(methodNotFound)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxy, e, methodNotFound);
}
// Autogenerated method: UnityEngine.AndroidReflection..cctor
void UnityEngine::AndroidReflection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine._AndroidJNIHelper
#include "UnityEngine/_AndroidJNIHelper.hpp"
// Including type: UnityEngine.AndroidJavaProxy
#include "UnityEngine/AndroidJavaProxy.hpp"
// Including type: UnityEngine.AndroidJavaRunnable
#include "UnityEngine/AndroidJavaRunnable.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine._AndroidJNIHelper.CreateJavaProxy
System::IntPtr UnityEngine::_AndroidJNIHelper::CreateJavaProxy(System::IntPtr delegateHandle, UnityEngine::AndroidJavaProxy* proxy) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::CreateJavaProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "CreateJavaProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegateHandle), ::il2cpp_utils::ExtractType(proxy)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, delegateHandle, proxy);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.CreateJavaRunnable
System::IntPtr UnityEngine::_AndroidJNIHelper::CreateJavaRunnable(UnityEngine::AndroidJavaRunnable* jrunnable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::CreateJavaRunnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "CreateJavaRunnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jrunnable)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jrunnable);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.InvokeJavaProxyMethod
System::IntPtr UnityEngine::_AndroidJNIHelper::InvokeJavaProxyMethod(UnityEngine::AndroidJavaProxy* proxy, System::IntPtr jmethodName, System::IntPtr jargs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::InvokeJavaProxyMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "InvokeJavaProxyMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxy), ::il2cpp_utils::ExtractType(jmethodName), ::il2cpp_utils::ExtractType(jargs)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxy, jmethodName, jargs);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.CreateJNIArgArray
::Array<UnityEngine::jvalue>* UnityEngine::_AndroidJNIHelper::CreateJNIArgArray(::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::CreateJNIArgArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "CreateJNIArgArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::jvalue>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.UnboxArray
::Il2CppObject* UnityEngine::_AndroidJNIHelper::UnboxArray(UnityEngine::AndroidJavaObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::UnboxArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "UnboxArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.Unbox
::Il2CppObject* UnityEngine::_AndroidJNIHelper::Unbox(UnityEngine::AndroidJavaObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::Unbox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "Unbox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.Box
UnityEngine::AndroidJavaObject* UnityEngine::_AndroidJNIHelper::Box(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::Box");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "Box", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AndroidJavaObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.DeleteJNIArgArray
void UnityEngine::_AndroidJNIHelper::DeleteJNIArgArray(::Array<::Il2CppObject*>* args, ::Array<UnityEngine::jvalue>* jniArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::DeleteJNIArgArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "DeleteJNIArgArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(jniArgs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args, jniArgs);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.ConvertToJNIArray
System::IntPtr UnityEngine::_AndroidJNIHelper::ConvertToJNIArray(System::Array* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::ConvertToJNIArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "ConvertToJNIArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.GetConstructorID
System::IntPtr UnityEngine::_AndroidJNIHelper::GetConstructorID(System::IntPtr jclass, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::GetConstructorID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "GetConstructorID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jclass), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, args);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.GetMethodID
System::IntPtr UnityEngine::_AndroidJNIHelper::GetMethodID(System::IntPtr jclass, ::Il2CppString* methodName, ::Array<::Il2CppObject*>* args, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "GetMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jclass), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, methodName, args, isStatic);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.GetConstructorID
System::IntPtr UnityEngine::_AndroidJNIHelper::GetConstructorID(System::IntPtr jclass, ::Il2CppString* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::GetConstructorID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "GetConstructorID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jclass), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, signature);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.GetMethodID
System::IntPtr UnityEngine::_AndroidJNIHelper::GetMethodID(System::IntPtr jclass, ::Il2CppString* methodName, ::Il2CppString* signature, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "GetMethodID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jclass), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, methodName, signature, isStatic);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.GetMethodIDFallback
System::IntPtr UnityEngine::_AndroidJNIHelper::GetMethodIDFallback(System::IntPtr jclass, ::Il2CppString* methodName, ::Il2CppString* signature, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::GetMethodIDFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "GetMethodIDFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jclass), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, methodName, signature, isStatic);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.GetFieldID
System::IntPtr UnityEngine::_AndroidJNIHelper::GetFieldID(System::IntPtr jclass, ::Il2CppString* fieldName, ::Il2CppString* signature, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "GetFieldID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jclass), ::il2cpp_utils::ExtractType(fieldName), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(isStatic)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, fieldName, signature, isStatic);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.GetSignature
::Il2CppString* UnityEngine::_AndroidJNIHelper::GetSignature(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::GetSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "GetSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.GetSignature
::Il2CppString* UnityEngine::_AndroidJNIHelper::GetSignature(::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::GetSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "GetSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.StateMachineBehaviour
#include "UnityEngine/StateMachineBehaviour.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.AnimatorStateInfo
#include "UnityEngine/AnimatorStateInfo.hpp"
// Including type: UnityEngine.Animations.AnimatorControllerPlayable
#include "UnityEngine/Animations/AnimatorControllerPlayable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateEnter
void UnityEngine::StateMachineBehaviour::OnStateEnter(UnityEngine::Animator* animator, UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStateEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(stateInfo), ::il2cpp_utils::ExtractType(layerIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateUpdate
void UnityEngine::StateMachineBehaviour::OnStateUpdate(UnityEngine::Animator* animator, UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(stateInfo), ::il2cpp_utils::ExtractType(layerIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateExit
void UnityEngine::StateMachineBehaviour::OnStateExit(UnityEngine::Animator* animator, UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStateExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(stateInfo), ::il2cpp_utils::ExtractType(layerIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMove
void UnityEngine::StateMachineBehaviour::OnStateMove(UnityEngine::Animator* animator, UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateMove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStateMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(stateInfo), ::il2cpp_utils::ExtractType(layerIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateIK
void UnityEngine::StateMachineBehaviour::OnStateIK(UnityEngine::Animator* animator, UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateIK");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStateIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(stateInfo), ::il2cpp_utils::ExtractType(layerIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMachineEnter
void UnityEngine::StateMachineBehaviour::OnStateMachineEnter(UnityEngine::Animator* animator, int stateMachinePathHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateMachineEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStateMachineEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(stateMachinePathHash)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateMachinePathHash);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMachineExit
void UnityEngine::StateMachineBehaviour::OnStateMachineExit(UnityEngine::Animator* animator, int stateMachinePathHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateMachineExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStateMachineExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(stateMachinePathHash)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateMachinePathHash);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateEnter
void UnityEngine::StateMachineBehaviour::OnStateEnter(UnityEngine::Animator* animator, UnityEngine::AnimatorStateInfo stateInfo, int layerIndex, UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStateEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(stateInfo), ::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateUpdate
void UnityEngine::StateMachineBehaviour::OnStateUpdate(UnityEngine::Animator* animator, UnityEngine::AnimatorStateInfo stateInfo, int layerIndex, UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(stateInfo), ::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateExit
void UnityEngine::StateMachineBehaviour::OnStateExit(UnityEngine::Animator* animator, UnityEngine::AnimatorStateInfo stateInfo, int layerIndex, UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStateExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(stateInfo), ::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMove
void UnityEngine::StateMachineBehaviour::OnStateMove(UnityEngine::Animator* animator, UnityEngine::AnimatorStateInfo stateInfo, int layerIndex, UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateMove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStateMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(stateInfo), ::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateIK
void UnityEngine::StateMachineBehaviour::OnStateIK(UnityEngine::Animator* animator, UnityEngine::AnimatorStateInfo stateInfo, int layerIndex, UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateIK");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStateIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(stateInfo), ::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMachineEnter
void UnityEngine::StateMachineBehaviour::OnStateMachineEnter(UnityEngine::Animator* animator, int stateMachinePathHash, UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateMachineEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStateMachineEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(stateMachinePathHash), ::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateMachinePathHash, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMachineExit
void UnityEngine::StateMachineBehaviour::OnStateMachineExit(UnityEngine::Animator* animator, int stateMachinePathHash, UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateMachineExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStateMachineExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(stateMachinePathHash), ::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateMachinePathHash, controller);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.WrapMode
#include "UnityEngine/WrapMode.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AnimationClip.Internal_CreateAnimationClip
void UnityEngine::AnimationClip::Internal_CreateAnimationClip(UnityEngine::AnimationClip* self) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::Internal_CreateAnimationClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AnimationClip", "Internal_CreateAnimationClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, self);
}
// Autogenerated method: UnityEngine.AnimationClip.SampleAnimation
void UnityEngine::AnimationClip::SampleAnimation(UnityEngine::GameObject* go, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::SampleAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SampleAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, go, time);
}
// Autogenerated method: UnityEngine.AnimationClip.SampleAnimation
void UnityEngine::AnimationClip::SampleAnimation(UnityEngine::GameObject* go, UnityEngine::AnimationClip* clip, float inTime, UnityEngine::WrapMode wrapMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::SampleAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AnimationClip", "SampleAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(inTime), ::il2cpp_utils::ExtractType(wrapMode)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, go, clip, inTime, wrapMode);
}
// Autogenerated method: UnityEngine.AnimationClip.get_length
float UnityEngine::AnimationClip::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_frameRate
float UnityEngine::AnimationClip::get_frameRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::get_frameRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.set_frameRate
void UnityEngine::AnimationClip::set_frameRate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::set_frameRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_frameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationClip.SetCurve
void UnityEngine::AnimationClip::SetCurve(::Il2CppString* relativePath, System::Type* type, ::Il2CppString* propertyName, UnityEngine::AnimationCurve* curve) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::SetCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativePath), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(curve)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, relativePath, type, propertyName, curve);
}
// Autogenerated method: UnityEngine.AnimationClip.EnsureQuaternionContinuity
void UnityEngine::AnimationClip::EnsureQuaternionContinuity() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::EnsureQuaternionContinuity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureQuaternionContinuity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_wrapMode
UnityEngine::WrapMode UnityEngine::AnimationClip::get_wrapMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::get_wrapMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wrapMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::WrapMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_legacy
bool UnityEngine::AnimationClip::get_legacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::get_legacy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_legacy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.set_legacy
void UnityEngine::AnimationClip::set_legacy(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::set_legacy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_legacy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationClip.get_empty
bool UnityEngine::AnimationClip::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_hasGenericRootTransform
bool UnityEngine::AnimationClip::get_hasGenericRootTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::get_hasGenericRootTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasGenericRootTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_hasMotionCurves
bool UnityEngine::AnimationClip::get_hasMotionCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::get_hasMotionCurves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasMotionCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_hasRootCurves
bool UnityEngine::AnimationClip::get_hasRootCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::get_hasRootCurves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasRootCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_hasRootMotion
bool UnityEngine::AnimationClip::get_hasRootMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::get_hasRootMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasRootMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AvatarIKGoal
#include "UnityEngine/AvatarIKGoal.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarIKGoal LeftFoot
UnityEngine::AvatarIKGoal UnityEngine::AvatarIKGoal::_get_LeftFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarIKGoal::_get_LeftFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarIKGoal>("UnityEngine", "AvatarIKGoal", "LeftFoot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarIKGoal LeftFoot
void UnityEngine::AvatarIKGoal::_set_LeftFoot(UnityEngine::AvatarIKGoal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarIKGoal::_set_LeftFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarIKGoal", "LeftFoot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarIKGoal RightFoot
UnityEngine::AvatarIKGoal UnityEngine::AvatarIKGoal::_get_RightFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarIKGoal::_get_RightFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarIKGoal>("UnityEngine", "AvatarIKGoal", "RightFoot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarIKGoal RightFoot
void UnityEngine::AvatarIKGoal::_set_RightFoot(UnityEngine::AvatarIKGoal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarIKGoal::_set_RightFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarIKGoal", "RightFoot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarIKGoal LeftHand
UnityEngine::AvatarIKGoal UnityEngine::AvatarIKGoal::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarIKGoal::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarIKGoal>("UnityEngine", "AvatarIKGoal", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarIKGoal LeftHand
void UnityEngine::AvatarIKGoal::_set_LeftHand(UnityEngine::AvatarIKGoal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarIKGoal::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarIKGoal", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarIKGoal RightHand
UnityEngine::AvatarIKGoal UnityEngine::AvatarIKGoal::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarIKGoal::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarIKGoal>("UnityEngine", "AvatarIKGoal", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarIKGoal RightHand
void UnityEngine::AvatarIKGoal::_set_RightHand(UnityEngine::AvatarIKGoal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarIKGoal::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarIKGoal", "RightHand", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.StateInfoIndex
#include "UnityEngine/StateInfoIndex.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.StateInfoIndex CurrentState
UnityEngine::StateInfoIndex UnityEngine::StateInfoIndex::_get_CurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateInfoIndex::_get_CurrentState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::StateInfoIndex>("UnityEngine", "StateInfoIndex", "CurrentState"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.StateInfoIndex CurrentState
void UnityEngine::StateInfoIndex::_set_CurrentState(UnityEngine::StateInfoIndex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateInfoIndex::_set_CurrentState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StateInfoIndex", "CurrentState", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.StateInfoIndex NextState
UnityEngine::StateInfoIndex UnityEngine::StateInfoIndex::_get_NextState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateInfoIndex::_get_NextState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::StateInfoIndex>("UnityEngine", "StateInfoIndex", "NextState"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.StateInfoIndex NextState
void UnityEngine::StateInfoIndex::_set_NextState(UnityEngine::StateInfoIndex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateInfoIndex::_set_NextState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StateInfoIndex", "NextState", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.StateInfoIndex ExitState
UnityEngine::StateInfoIndex UnityEngine::StateInfoIndex::_get_ExitState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateInfoIndex::_get_ExitState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::StateInfoIndex>("UnityEngine", "StateInfoIndex", "ExitState"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.StateInfoIndex ExitState
void UnityEngine::StateInfoIndex::_set_ExitState(UnityEngine::StateInfoIndex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateInfoIndex::_set_ExitState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StateInfoIndex", "ExitState", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.StateInfoIndex InterruptedState
UnityEngine::StateInfoIndex UnityEngine::StateInfoIndex::_get_InterruptedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateInfoIndex::_get_InterruptedState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::StateInfoIndex>("UnityEngine", "StateInfoIndex", "InterruptedState"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.StateInfoIndex InterruptedState
void UnityEngine::StateInfoIndex::_set_InterruptedState(UnityEngine::StateInfoIndex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateInfoIndex::_set_InterruptedState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StateInfoIndex", "InterruptedState", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimatorCullingMode
#include "UnityEngine/AnimatorCullingMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorCullingMode AlwaysAnimate
UnityEngine::AnimatorCullingMode UnityEngine::AnimatorCullingMode::_get_AlwaysAnimate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorCullingMode::_get_AlwaysAnimate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AnimatorCullingMode>("UnityEngine", "AnimatorCullingMode", "AlwaysAnimate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorCullingMode AlwaysAnimate
void UnityEngine::AnimatorCullingMode::_set_AlwaysAnimate(UnityEngine::AnimatorCullingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorCullingMode::_set_AlwaysAnimate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorCullingMode", "AlwaysAnimate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorCullingMode CullUpdateTransforms
UnityEngine::AnimatorCullingMode UnityEngine::AnimatorCullingMode::_get_CullUpdateTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorCullingMode::_get_CullUpdateTransforms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AnimatorCullingMode>("UnityEngine", "AnimatorCullingMode", "CullUpdateTransforms"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorCullingMode CullUpdateTransforms
void UnityEngine::AnimatorCullingMode::_set_CullUpdateTransforms(UnityEngine::AnimatorCullingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorCullingMode::_set_CullUpdateTransforms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorCullingMode", "CullUpdateTransforms", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorCullingMode CullCompletely
UnityEngine::AnimatorCullingMode UnityEngine::AnimatorCullingMode::_get_CullCompletely() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorCullingMode::_get_CullCompletely");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AnimatorCullingMode>("UnityEngine", "AnimatorCullingMode", "CullCompletely"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorCullingMode CullCompletely
void UnityEngine::AnimatorCullingMode::_set_CullCompletely(UnityEngine::AnimatorCullingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorCullingMode::_set_CullCompletely");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorCullingMode", "CullCompletely", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimatorUpdateMode
#include "UnityEngine/AnimatorUpdateMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorUpdateMode Normal
UnityEngine::AnimatorUpdateMode UnityEngine::AnimatorUpdateMode::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorUpdateMode::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AnimatorUpdateMode>("UnityEngine", "AnimatorUpdateMode", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorUpdateMode Normal
void UnityEngine::AnimatorUpdateMode::_set_Normal(UnityEngine::AnimatorUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorUpdateMode::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorUpdateMode", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorUpdateMode AnimatePhysics
UnityEngine::AnimatorUpdateMode UnityEngine::AnimatorUpdateMode::_get_AnimatePhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorUpdateMode::_get_AnimatePhysics");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AnimatorUpdateMode>("UnityEngine", "AnimatorUpdateMode", "AnimatePhysics"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorUpdateMode AnimatePhysics
void UnityEngine::AnimatorUpdateMode::_set_AnimatePhysics(UnityEngine::AnimatorUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorUpdateMode::_set_AnimatePhysics");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorUpdateMode", "AnimatePhysics", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorUpdateMode UnscaledTime
UnityEngine::AnimatorUpdateMode UnityEngine::AnimatorUpdateMode::_get_UnscaledTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorUpdateMode::_get_UnscaledTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AnimatorUpdateMode>("UnityEngine", "AnimatorUpdateMode", "UnscaledTime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorUpdateMode UnscaledTime
void UnityEngine::AnimatorUpdateMode::_set_UnscaledTime(UnityEngine::AnimatorUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorUpdateMode::_set_UnscaledTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorUpdateMode", "UnscaledTime", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimatorStateInfo
#include "UnityEngine/AnimatorStateInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AnimatorStateInfo.get_normalizedTime
float UnityEngine::AnimatorStateInfo::get_normalizedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorStateInfo::get_normalizedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_normalizedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.AnimatorUpdateMode
#include "UnityEngine/AnimatorUpdateMode.hpp"
// Including type: UnityEngine.StateMachineBehaviour
#include "UnityEngine/StateMachineBehaviour.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.StateInfoIndex
#include "UnityEngine/StateInfoIndex.hpp"
// Including type: UnityEngine.AnimatorStateInfo
#include "UnityEngine/AnimatorStateInfo.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.HumanBodyBones
#include "UnityEngine/HumanBodyBones.hpp"
// Including type: UnityEngine.AnimatorCullingMode
#include "UnityEngine/AnimatorCullingMode.hpp"
// Including type: UnityEngine.RuntimeAnimatorController
#include "UnityEngine/RuntimeAnimatorController.hpp"
// Including type: UnityEngine.Avatar
#include "UnityEngine/Avatar.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animator.get_isHuman
bool UnityEngine::Animator::get_isHuman() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::get_isHuman");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isHuman", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_hasRootMotion
bool UnityEngine::Animator::get_hasRootMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::get_hasRootMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasRootMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_humanScale
float UnityEngine::Animator::get_humanScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::get_humanScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_humanScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.GetBool
bool UnityEngine::Animator::GetBool(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::GetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.SetBool
void UnityEngine::Animator::SetBool(::Il2CppString* name, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::SetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Animator.SetBool
void UnityEngine::Animator::SetBool(int id, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::SetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, id, value);
}
// Autogenerated method: UnityEngine.Animator.SetTrigger
void UnityEngine::Animator::SetTrigger(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::SetTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.SetTrigger
void UnityEngine::Animator::SetTrigger(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::SetTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.ResetTrigger
void UnityEngine::Animator::ResetTrigger(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::ResetTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.set_applyRootMotion
void UnityEngine::Animator::set_applyRootMotion(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::set_applyRootMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_applyRootMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_updateMode
UnityEngine::AnimatorUpdateMode UnityEngine::Animator::get_updateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::get_updateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_updateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimatorUpdateMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_updateMode
void UnityEngine::Animator::set_updateMode(UnityEngine::AnimatorUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::set_updateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_updateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.InternalGetBehaviours
::Array<UnityEngine::ScriptableObject*>* UnityEngine::Animator::InternalGetBehaviours(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::InternalGetBehaviours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::ScriptableObject*>*, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.Animator.GetAnimatorStateInfo
void UnityEngine::Animator::GetAnimatorStateInfo(int layerIndex, UnityEngine::StateInfoIndex stateInfoIndex, UnityEngine::AnimatorStateInfo& info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::GetAnimatorStateInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAnimatorStateInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(stateInfoIndex), ::il2cpp_utils::ExtractIndependentType<UnityEngine::AnimatorStateInfo&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, layerIndex, stateInfoIndex, info);
}
// Autogenerated method: UnityEngine.Animator.GetCurrentAnimatorStateInfo
UnityEngine::AnimatorStateInfo UnityEngine::Animator::GetCurrentAnimatorStateInfo(int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::GetCurrentAnimatorStateInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentAnimatorStateInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimatorStateInfo, false>(this, ___internal__method, layerIndex);
}
// Autogenerated method: UnityEngine.Animator.set_speed
void UnityEngine::Animator::set_speed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::set_speed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_speed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.CrossFade
void UnityEngine::Animator::CrossFade(::Il2CppString* stateName, float normalizedTransitionDuration, int layer, float normalizedTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName), ::il2cpp_utils::ExtractType(normalizedTransitionDuration), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(normalizedTimeOffset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stateName, normalizedTransitionDuration, layer, normalizedTimeOffset);
}
// Autogenerated method: UnityEngine.Animator.CrossFade
void UnityEngine::Animator::CrossFade(::Il2CppString* stateName, float normalizedTransitionDuration, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName), ::il2cpp_utils::ExtractType(normalizedTransitionDuration), ::il2cpp_utils::ExtractType(layer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stateName, normalizedTransitionDuration, layer);
}
// Autogenerated method: UnityEngine.Animator.CrossFade
void UnityEngine::Animator::CrossFade(::Il2CppString* stateName, float normalizedTransitionDuration, int layer, float normalizedTimeOffset, float normalizedTransitionTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName), ::il2cpp_utils::ExtractType(normalizedTransitionDuration), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(normalizedTimeOffset), ::il2cpp_utils::ExtractType(normalizedTransitionTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stateName, normalizedTransitionDuration, layer, normalizedTimeOffset, normalizedTransitionTime);
}
// Autogenerated method: UnityEngine.Animator.CrossFade
void UnityEngine::Animator::CrossFade(int stateHashName, float normalizedTransitionDuration, int layer, float normalizedTimeOffset, float normalizedTransitionTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateHashName), ::il2cpp_utils::ExtractType(normalizedTransitionDuration), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(normalizedTimeOffset), ::il2cpp_utils::ExtractType(normalizedTransitionTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stateHashName, normalizedTransitionDuration, layer, normalizedTimeOffset, normalizedTransitionTime);
}
// Autogenerated method: UnityEngine.Animator.Play
void UnityEngine::Animator::Play(::Il2CppString* stateName, int layer, float normalizedTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateName), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(normalizedTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stateName, layer, normalizedTime);
}
// Autogenerated method: UnityEngine.Animator.Play
void UnityEngine::Animator::Play(int stateNameHash, int layer, float normalizedTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateNameHash), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(normalizedTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stateNameHash, layer, normalizedTime);
}
// Autogenerated method: UnityEngine.Animator.GetBoneTransform
UnityEngine::Transform* UnityEngine::Animator::GetBoneTransform(UnityEngine::HumanBodyBones humanBoneId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::GetBoneTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoneTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(humanBoneId)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method, humanBoneId);
}
// Autogenerated method: UnityEngine.Animator.GetBoneTransformInternal
UnityEngine::Transform* UnityEngine::Animator::GetBoneTransformInternal(int humanBoneId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::GetBoneTransformInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoneTransformInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(humanBoneId)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method, humanBoneId);
}
// Autogenerated method: UnityEngine.Animator.set_cullingMode
void UnityEngine::Animator::set_cullingMode(UnityEngine::AnimatorCullingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::set_cullingMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cullingMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_runtimeAnimatorController
UnityEngine::RuntimeAnimatorController* UnityEngine::Animator::get_runtimeAnimatorController() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::get_runtimeAnimatorController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_runtimeAnimatorController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RuntimeAnimatorController*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_runtimeAnimatorController
void UnityEngine::Animator::set_runtimeAnimatorController(UnityEngine::RuntimeAnimatorController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::set_runtimeAnimatorController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_runtimeAnimatorController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_hasBoundPlayables
bool UnityEngine::Animator::get_hasBoundPlayables() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::get_hasBoundPlayables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasBoundPlayables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.StringToHash
int UnityEngine::Animator::StringToHash(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::StringToHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Animator", "StringToHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.get_avatar
UnityEngine::Avatar* UnityEngine::Animator::get_avatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::get_avatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_avatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Avatar*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.SetBoolString
void UnityEngine::Animator::SetBoolString(::Il2CppString* name, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::SetBoolString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBoolString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Animator.SetBoolID
void UnityEngine::Animator::SetBoolID(int id, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::SetBoolID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBoolID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, id, value);
}
// Autogenerated method: UnityEngine.Animator.GetBoolID
bool UnityEngine::Animator::GetBoolID(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::GetBoolID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoolID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.SetTriggerString
void UnityEngine::Animator::SetTriggerString(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::SetTriggerString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTriggerString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.SetTriggerID
void UnityEngine::Animator::SetTriggerID(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::SetTriggerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTriggerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.ResetTriggerString
void UnityEngine::Animator::ResetTriggerString(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::ResetTriggerString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetTriggerString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.set_keepAnimatorControllerStateOnDisable
void UnityEngine::Animator::set_keepAnimatorControllerStateOnDisable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::set_keepAnimatorControllerStateOnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_keepAnimatorControllerStateOnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimatorOverrideController
#include "UnityEngine/AnimatorOverrideController.hpp"
// Including type: UnityEngine.AnimatorOverrideController/OnOverrideControllerDirtyCallback
#include "UnityEngine/AnimatorOverrideController_OnOverrideControllerDirtyCallback.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AnimatorOverrideController.Internal_Create
void UnityEngine::AnimatorOverrideController::Internal_Create(UnityEngine::AnimatorOverrideController* self, UnityEngine::RuntimeAnimatorController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorOverrideController::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AnimatorOverrideController", "Internal_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, self, controller);
}
// Autogenerated method: UnityEngine.AnimatorOverrideController.SetClip
void UnityEngine::AnimatorOverrideController::SetClip(UnityEngine::AnimationClip* originalClip, UnityEngine::AnimationClip* overrideClip, bool notify) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorOverrideController::SetClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalClip), ::il2cpp_utils::ExtractType(overrideClip), ::il2cpp_utils::ExtractType(notify)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, originalClip, overrideClip, notify);
}
// Autogenerated method: UnityEngine.AnimatorOverrideController.SendNotification
void UnityEngine::AnimatorOverrideController::SendNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorOverrideController::SendNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimatorOverrideController.ApplyOverrides
void UnityEngine::AnimatorOverrideController::ApplyOverrides(System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::AnimationClip*, UnityEngine::AnimationClip*>>* overrides) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorOverrideController::ApplyOverrides");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyOverrides", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overrides)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, overrides);
}
// Autogenerated method: UnityEngine.AnimatorOverrideController.OnInvalidateOverrideController
void UnityEngine::AnimatorOverrideController::OnInvalidateOverrideController(UnityEngine::AnimatorOverrideController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorOverrideController::OnInvalidateOverrideController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AnimatorOverrideController", "OnInvalidateOverrideController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controller);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AnimatorOverrideController/OnOverrideControllerDirtyCallback
#include "UnityEngine/AnimatorOverrideController_OnOverrideControllerDirtyCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AnimatorOverrideController/OnOverrideControllerDirtyCallback.Invoke
void UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimatorOverrideController/OnOverrideControllerDirtyCallback.BeginInvoke
System::IAsyncResult* UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.AnimatorOverrideController/OnOverrideControllerDirtyCallback.EndInvoke
void UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.HumanBodyBones
#include "UnityEngine/HumanBodyBones.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Hips
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Hips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_Hips");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Hips"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Hips
void UnityEngine::HumanBodyBones::_set_Hips(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_Hips");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Hips", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftUpperLeg
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftUpperLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftUpperLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftUpperLeg"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftUpperLeg
void UnityEngine::HumanBodyBones::_set_LeftUpperLeg(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftUpperLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftUpperLeg", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightUpperLeg
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightUpperLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightUpperLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightUpperLeg"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightUpperLeg
void UnityEngine::HumanBodyBones::_set_RightUpperLeg(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightUpperLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightUpperLeg", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftLowerLeg
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftLowerLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftLowerLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftLowerLeg"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftLowerLeg
void UnityEngine::HumanBodyBones::_set_LeftLowerLeg(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftLowerLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftLowerLeg", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightLowerLeg
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightLowerLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightLowerLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightLowerLeg"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightLowerLeg
void UnityEngine::HumanBodyBones::_set_RightLowerLeg(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightLowerLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightLowerLeg", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftFoot
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftFoot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftFoot
void UnityEngine::HumanBodyBones::_set_LeftFoot(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftFoot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightFoot
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightFoot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightFoot
void UnityEngine::HumanBodyBones::_set_RightFoot(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightFoot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Spine
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Spine() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_Spine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Spine"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Spine
void UnityEngine::HumanBodyBones::_set_Spine(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_Spine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Spine", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Chest
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Chest() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_Chest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Chest"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Chest
void UnityEngine::HumanBodyBones::_set_Chest(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_Chest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Chest", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones UpperChest
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_UpperChest() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_UpperChest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "UpperChest"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones UpperChest
void UnityEngine::HumanBodyBones::_set_UpperChest(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_UpperChest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "UpperChest", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Neck
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Neck() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_Neck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Neck"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Neck
void UnityEngine::HumanBodyBones::_set_Neck(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_Neck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Neck", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Head
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Head"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Head
void UnityEngine::HumanBodyBones::_set_Head(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftShoulder
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftShoulder"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftShoulder
void UnityEngine::HumanBodyBones::_set_LeftShoulder(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightShoulder
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightShoulder"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightShoulder
void UnityEngine::HumanBodyBones::_set_RightShoulder(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftUpperArm
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftUpperArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftUpperArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftUpperArm"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftUpperArm
void UnityEngine::HumanBodyBones::_set_LeftUpperArm(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftUpperArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftUpperArm", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightUpperArm
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightUpperArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightUpperArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightUpperArm"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightUpperArm
void UnityEngine::HumanBodyBones::_set_RightUpperArm(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightUpperArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightUpperArm", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftLowerArm
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftLowerArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftLowerArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftLowerArm"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftLowerArm
void UnityEngine::HumanBodyBones::_set_LeftLowerArm(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftLowerArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftLowerArm", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightLowerArm
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightLowerArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightLowerArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightLowerArm"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightLowerArm
void UnityEngine::HumanBodyBones::_set_RightLowerArm(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightLowerArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightLowerArm", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftHand
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftHand
void UnityEngine::HumanBodyBones::_set_LeftHand(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightHand
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightHand
void UnityEngine::HumanBodyBones::_set_RightHand(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftToes
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftToes() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftToes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftToes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftToes
void UnityEngine::HumanBodyBones::_set_LeftToes(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftToes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftToes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightToes
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightToes() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightToes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightToes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightToes
void UnityEngine::HumanBodyBones::_set_RightToes(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightToes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightToes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftEye
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftEye
void UnityEngine::HumanBodyBones::_set_LeftEye(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightEye
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightEye
void UnityEngine::HumanBodyBones::_set_RightEye(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Jaw
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Jaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_Jaw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Jaw"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Jaw
void UnityEngine::HumanBodyBones::_set_Jaw(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_Jaw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Jaw", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftThumbProximal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftThumbProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftThumbProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftThumbProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftThumbProximal
void UnityEngine::HumanBodyBones::_set_LeftThumbProximal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftThumbProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftThumbProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftThumbIntermediate
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftThumbIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftThumbIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftThumbIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftThumbIntermediate
void UnityEngine::HumanBodyBones::_set_LeftThumbIntermediate(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftThumbIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftThumbIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftThumbDistal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftThumbDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftThumbDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftThumbDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftThumbDistal
void UnityEngine::HumanBodyBones::_set_LeftThumbDistal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftThumbDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftThumbDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftIndexProximal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftIndexProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftIndexProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftIndexProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftIndexProximal
void UnityEngine::HumanBodyBones::_set_LeftIndexProximal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftIndexProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftIndexProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftIndexIntermediate
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftIndexIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftIndexIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftIndexIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftIndexIntermediate
void UnityEngine::HumanBodyBones::_set_LeftIndexIntermediate(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftIndexIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftIndexIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftIndexDistal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftIndexDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftIndexDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftIndexDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftIndexDistal
void UnityEngine::HumanBodyBones::_set_LeftIndexDistal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftIndexDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftIndexDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftMiddleProximal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftMiddleProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftMiddleProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftMiddleProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftMiddleProximal
void UnityEngine::HumanBodyBones::_set_LeftMiddleProximal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftMiddleProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftMiddleProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftMiddleIntermediate
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftMiddleIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftMiddleIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftMiddleIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftMiddleIntermediate
void UnityEngine::HumanBodyBones::_set_LeftMiddleIntermediate(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftMiddleIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftMiddleIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftMiddleDistal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftMiddleDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftMiddleDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftMiddleDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftMiddleDistal
void UnityEngine::HumanBodyBones::_set_LeftMiddleDistal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftMiddleDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftMiddleDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftRingProximal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftRingProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftRingProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftRingProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftRingProximal
void UnityEngine::HumanBodyBones::_set_LeftRingProximal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftRingProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftRingProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftRingIntermediate
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftRingIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftRingIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftRingIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftRingIntermediate
void UnityEngine::HumanBodyBones::_set_LeftRingIntermediate(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftRingIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftRingIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftRingDistal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftRingDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftRingDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftRingDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftRingDistal
void UnityEngine::HumanBodyBones::_set_LeftRingDistal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftRingDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftRingDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftLittleProximal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftLittleProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftLittleProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftLittleProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftLittleProximal
void UnityEngine::HumanBodyBones::_set_LeftLittleProximal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftLittleProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftLittleProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftLittleIntermediate
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftLittleIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftLittleIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftLittleIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftLittleIntermediate
void UnityEngine::HumanBodyBones::_set_LeftLittleIntermediate(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftLittleIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftLittleIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftLittleDistal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftLittleDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftLittleDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftLittleDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftLittleDistal
void UnityEngine::HumanBodyBones::_set_LeftLittleDistal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftLittleDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftLittleDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightThumbProximal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightThumbProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightThumbProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightThumbProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightThumbProximal
void UnityEngine::HumanBodyBones::_set_RightThumbProximal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightThumbProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightThumbProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightThumbIntermediate
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightThumbIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightThumbIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightThumbIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightThumbIntermediate
void UnityEngine::HumanBodyBones::_set_RightThumbIntermediate(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightThumbIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightThumbIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightThumbDistal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightThumbDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightThumbDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightThumbDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightThumbDistal
void UnityEngine::HumanBodyBones::_set_RightThumbDistal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightThumbDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightThumbDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightIndexProximal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightIndexProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightIndexProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightIndexProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightIndexProximal
void UnityEngine::HumanBodyBones::_set_RightIndexProximal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightIndexProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightIndexProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightIndexIntermediate
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightIndexIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightIndexIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightIndexIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightIndexIntermediate
void UnityEngine::HumanBodyBones::_set_RightIndexIntermediate(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightIndexIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightIndexIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightIndexDistal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightIndexDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightIndexDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightIndexDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightIndexDistal
void UnityEngine::HumanBodyBones::_set_RightIndexDistal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightIndexDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightIndexDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightMiddleProximal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightMiddleProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightMiddleProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightMiddleProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightMiddleProximal
void UnityEngine::HumanBodyBones::_set_RightMiddleProximal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightMiddleProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightMiddleProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightMiddleIntermediate
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightMiddleIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightMiddleIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightMiddleIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightMiddleIntermediate
void UnityEngine::HumanBodyBones::_set_RightMiddleIntermediate(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightMiddleIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightMiddleIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightMiddleDistal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightMiddleDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightMiddleDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightMiddleDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightMiddleDistal
void UnityEngine::HumanBodyBones::_set_RightMiddleDistal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightMiddleDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightMiddleDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightRingProximal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightRingProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightRingProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightRingProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightRingProximal
void UnityEngine::HumanBodyBones::_set_RightRingProximal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightRingProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightRingProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightRingIntermediate
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightRingIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightRingIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightRingIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightRingIntermediate
void UnityEngine::HumanBodyBones::_set_RightRingIntermediate(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightRingIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightRingIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightRingDistal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightRingDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightRingDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightRingDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightRingDistal
void UnityEngine::HumanBodyBones::_set_RightRingDistal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightRingDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightRingDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightLittleProximal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightLittleProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightLittleProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightLittleProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightLittleProximal
void UnityEngine::HumanBodyBones::_set_RightLittleProximal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightLittleProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightLittleProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightLittleIntermediate
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightLittleIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightLittleIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightLittleIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightLittleIntermediate
void UnityEngine::HumanBodyBones::_set_RightLittleIntermediate(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightLittleIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightLittleIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightLittleDistal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightLittleDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightLittleDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightLittleDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightLittleDistal
void UnityEngine::HumanBodyBones::_set_RightLittleDistal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightLittleDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightLittleDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LastBone
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LastBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LastBone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LastBone"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LastBone
void UnityEngine::HumanBodyBones::_set_LastBone(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LastBone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LastBone", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Avatar
#include "UnityEngine/Avatar.hpp"
// Including type: UnityEngine.HumanDescription
#include "UnityEngine/HumanDescription.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Avatar.get_isValid
bool UnityEngine::Avatar::get_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Avatar::get_isValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Avatar.get_isHuman
bool UnityEngine::Avatar::get_isHuman() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Avatar::get_isHuman");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isHuman", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Avatar.get_humanDescription
UnityEngine::HumanDescription UnityEngine::Avatar::get_humanDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Avatar::get_humanDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_humanDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::HumanDescription, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Avatar.GetAxisLength
float UnityEngine::Avatar::GetAxisLength(int humanId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Avatar::GetAxisLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAxisLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(humanId)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, humanId);
}
// Autogenerated method: UnityEngine.Avatar.GetPostRotation
UnityEngine::Quaternion UnityEngine::Avatar::GetPostRotation(int humanId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Avatar::GetPostRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPostRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(humanId)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, humanId);
}
// Autogenerated method: UnityEngine.Avatar.Internal_GetAxisLength
float UnityEngine::Avatar::Internal_GetAxisLength(int humanId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Avatar::Internal_GetAxisLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_GetAxisLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(humanId)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, humanId);
}
// Autogenerated method: UnityEngine.Avatar.Internal_GetPostRotation
UnityEngine::Quaternion UnityEngine::Avatar::Internal_GetPostRotation(int humanId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Avatar::Internal_GetPostRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_GetPostRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(humanId)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, humanId);
}
// Autogenerated method: UnityEngine.Avatar.get_humanDescription_Injected
void UnityEngine::Avatar::get_humanDescription_Injected(UnityEngine::HumanDescription& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Avatar::get_humanDescription_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_humanDescription_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::HumanDescription&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Avatar.Internal_GetPostRotation_Injected
void UnityEngine::Avatar::Internal_GetPostRotation_Injected(int humanId, UnityEngine::Quaternion& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Avatar::Internal_GetPostRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_GetPostRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(humanId), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, humanId, ret);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AvatarMaskBodyPart
#include "UnityEngine/AvatarMaskBodyPart.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart Root
UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_get_Root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "Root"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart Root
void UnityEngine::AvatarMaskBodyPart::_set_Root(UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_set_Root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "Root", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart Body
UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_get_Body");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "Body"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart Body
void UnityEngine::AvatarMaskBodyPart::_set_Body(UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_set_Body");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "Body", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart Head
UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "Head"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart Head
void UnityEngine::AvatarMaskBodyPart::_set_Head(UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart LeftLeg
UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_LeftLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_get_LeftLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "LeftLeg"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart LeftLeg
void UnityEngine::AvatarMaskBodyPart::_set_LeftLeg(UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_set_LeftLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "LeftLeg", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart RightLeg
UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_RightLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_get_RightLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "RightLeg"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart RightLeg
void UnityEngine::AvatarMaskBodyPart::_set_RightLeg(UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_set_RightLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "RightLeg", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart LeftArm
UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_LeftArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_get_LeftArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "LeftArm"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart LeftArm
void UnityEngine::AvatarMaskBodyPart::_set_LeftArm(UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_set_LeftArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "LeftArm", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart RightArm
UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_RightArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_get_RightArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "RightArm"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart RightArm
void UnityEngine::AvatarMaskBodyPart::_set_RightArm(UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_set_RightArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "RightArm", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart LeftFingers
UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_LeftFingers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_get_LeftFingers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "LeftFingers"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart LeftFingers
void UnityEngine::AvatarMaskBodyPart::_set_LeftFingers(UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_set_LeftFingers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "LeftFingers", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart RightFingers
UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_RightFingers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_get_RightFingers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "RightFingers"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart RightFingers
void UnityEngine::AvatarMaskBodyPart::_set_RightFingers(UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_set_RightFingers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "RightFingers", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart LeftFootIK
UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_LeftFootIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_get_LeftFootIK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "LeftFootIK"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart LeftFootIK
void UnityEngine::AvatarMaskBodyPart::_set_LeftFootIK(UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_set_LeftFootIK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "LeftFootIK", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart RightFootIK
UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_RightFootIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_get_RightFootIK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "RightFootIK"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart RightFootIK
void UnityEngine::AvatarMaskBodyPart::_set_RightFootIK(UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_set_RightFootIK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "RightFootIK", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart LeftHandIK
UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_LeftHandIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_get_LeftHandIK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "LeftHandIK"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart LeftHandIK
void UnityEngine::AvatarMaskBodyPart::_set_LeftHandIK(UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_set_LeftHandIK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "LeftHandIK", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart RightHandIK
UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_RightHandIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_get_RightHandIK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "RightHandIK"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart RightHandIK
void UnityEngine::AvatarMaskBodyPart::_set_RightHandIK(UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_set_RightHandIK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "RightHandIK", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarMaskBodyPart LastBodyPart
UnityEngine::AvatarMaskBodyPart UnityEngine::AvatarMaskBodyPart::_get_LastBodyPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_get_LastBodyPart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarMaskBodyPart>("UnityEngine", "AvatarMaskBodyPart", "LastBodyPart"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarMaskBodyPart LastBodyPart
void UnityEngine::AvatarMaskBodyPart::_set_LastBodyPart(UnityEngine::AvatarMaskBodyPart value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMaskBodyPart::_set_LastBodyPart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarMaskBodyPart", "LastBodyPart", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AvatarMask
#include "UnityEngine/AvatarMask.hpp"
// Including type: UnityEngine.AvatarMaskBodyPart
#include "UnityEngine/AvatarMaskBodyPart.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AvatarMask.GetHumanoidBodyPartActive
bool UnityEngine::AvatarMask::GetHumanoidBodyPartActive(UnityEngine::AvatarMaskBodyPart index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMask::GetHumanoidBodyPartActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHumanoidBodyPartActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.AvatarMask.get_transformCount
int UnityEngine::AvatarMask::get_transformCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMask::get_transformCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transformCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AvatarMask.GetTransformPath
::Il2CppString* UnityEngine::AvatarMask::GetTransformPath(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMask::GetTransformPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTransformPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.AvatarMask.GetTransformWeight
float UnityEngine::AvatarMask::GetTransformWeight(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMask::GetTransformWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTransformWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.AvatarMask.GetTransformActive
bool UnityEngine::AvatarMask::GetTransformActive(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarMask::GetTransformActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTransformActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.HumanPose
#include "UnityEngine/HumanPose.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.HumanPose.Init
void UnityEngine::HumanPose::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanPose::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.HumanPoseHandler
#include "UnityEngine/HumanPoseHandler.hpp"
// Including type: UnityEngine.Avatar
#include "UnityEngine/Avatar.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.HumanPose
#include "UnityEngine/HumanPose.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.HumanPoseHandler.Internal_Create
System::IntPtr UnityEngine::HumanPoseHandler::Internal_Create(UnityEngine::Avatar* avatar, UnityEngine::Transform* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanPoseHandler::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "HumanPoseHandler", "Internal_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, avatar, root);
}
// Autogenerated method: UnityEngine.HumanPoseHandler.Internal_Destroy
void UnityEngine::HumanPoseHandler::Internal_Destroy(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanPoseHandler::Internal_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "HumanPoseHandler", "Internal_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.HumanPoseHandler.GetHumanPose
void UnityEngine::HumanPoseHandler::GetHumanPose(UnityEngine::Vector3& bodyPosition, UnityEngine::Quaternion& bodyRotation, ::Array<float>*& muscles) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanPoseHandler::GetHumanPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHumanPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bodyPosition, bodyRotation, muscles);
}
// Autogenerated method: UnityEngine.HumanPoseHandler.Dispose
void UnityEngine::HumanPoseHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanPoseHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.HumanPoseHandler.GetHumanPose
void UnityEngine::HumanPoseHandler::GetHumanPose(UnityEngine::HumanPose& humanPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanPoseHandler::GetHumanPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHumanPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(humanPose)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, humanPose);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.HumanTrait
#include "UnityEngine/HumanTrait.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.HumanTrait.get_MuscleCount
int UnityEngine::HumanTrait::get_MuscleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanTrait::get_MuscleCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "HumanTrait", "get_MuscleCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.HumanTrait.GetBoneIndexFromMono
int UnityEngine::HumanTrait::GetBoneIndexFromMono(int humanId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanTrait::GetBoneIndexFromMono");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "HumanTrait", "GetBoneIndexFromMono", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(humanId)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, humanId);
}
// Autogenerated method: UnityEngine.HumanTrait.get_MuscleName
::Array<::Il2CppString*>* UnityEngine::HumanTrait::get_MuscleName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanTrait::get_MuscleName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "HumanTrait", "get_MuscleName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Motion
#include "UnityEngine/Motion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Motion.get_isLooping
bool UnityEngine::Motion::get_isLooping() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Motion::get_isLooping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isLooping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.RuntimeAnimatorController
#include "UnityEngine/RuntimeAnimatorController.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.RuntimeAnimatorController.get_animationClips
::Array<UnityEngine::AnimationClip*>* UnityEngine::RuntimeAnimatorController::get_animationClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RuntimeAnimatorController::get_animationClips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animationClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::AnimationClip*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimationEventSource
#include "UnityEngine/AnimationEventSource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimationEventSource NoSource
UnityEngine::AnimationEventSource UnityEngine::AnimationEventSource::_get_NoSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationEventSource::_get_NoSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AnimationEventSource>("UnityEngine", "AnimationEventSource", "NoSource"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimationEventSource NoSource
void UnityEngine::AnimationEventSource::_set_NoSource(UnityEngine::AnimationEventSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationEventSource::_set_NoSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimationEventSource", "NoSource", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimationEventSource Legacy
UnityEngine::AnimationEventSource UnityEngine::AnimationEventSource::_get_Legacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationEventSource::_get_Legacy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AnimationEventSource>("UnityEngine", "AnimationEventSource", "Legacy"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimationEventSource Legacy
void UnityEngine::AnimationEventSource::_set_Legacy(UnityEngine::AnimationEventSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationEventSource::_set_Legacy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimationEventSource", "Legacy", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimationEventSource Animator
UnityEngine::AnimationEventSource UnityEngine::AnimationEventSource::_get_Animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationEventSource::_get_Animator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AnimationEventSource>("UnityEngine", "AnimationEventSource", "Animator"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimationEventSource Animator
void UnityEngine::AnimationEventSource::_set_Animator(UnityEngine::AnimationEventSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationEventSource::_set_Animator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimationEventSource", "Animator", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AnimationEvent
#include "UnityEngine/AnimationEvent.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.AnimationState
#include "UnityEngine/AnimationState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.PlayMode
#include "UnityEngine/PlayMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.PlayMode StopSameLayer
UnityEngine::PlayMode UnityEngine::PlayMode::_get_StopSameLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PlayMode::_get_StopSameLayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::PlayMode>("UnityEngine", "PlayMode", "StopSameLayer"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PlayMode StopSameLayer
void UnityEngine::PlayMode::_set_StopSameLayer(UnityEngine::PlayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PlayMode::_set_StopSameLayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PlayMode", "StopSameLayer", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.PlayMode StopAll
UnityEngine::PlayMode UnityEngine::PlayMode::_get_StopAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PlayMode::_get_StopAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::PlayMode>("UnityEngine", "PlayMode", "StopAll"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PlayMode StopAll
void UnityEngine::PlayMode::_set_StopAll(UnityEngine::PlayMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PlayMode::_set_StopAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PlayMode", "StopAll", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Animation
#include "UnityEngine/Animation.hpp"
// Including type: UnityEngine.Animation/Enumerator
#include "UnityEngine/Animation_Enumerator.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.AnimationState
#include "UnityEngine/AnimationState.hpp"
// Including type: UnityEngine.PlayMode
#include "UnityEngine/PlayMode.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animation.get_clip
UnityEngine::AnimationClip* UnityEngine::Animation::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.Rewind
void UnityEngine::Animation::Rewind(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::Rewind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animation.Internal_RewindByName
void UnityEngine::Animation::Internal_RewindByName(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::Internal_RewindByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_RewindByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animation.Rewind
void UnityEngine::Animation::Rewind() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::Rewind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.INTERNAL_CALL_Rewind
void UnityEngine::Animation::INTERNAL_CALL_Rewind(UnityEngine::Animation* self) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::INTERNAL_CALL_Rewind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Animation", "INTERNAL_CALL_Rewind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, self);
}
// Autogenerated method: UnityEngine.Animation.Sample
void UnityEngine::Animation::Sample() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::Sample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.INTERNAL_CALL_Sample
void UnityEngine::Animation::INTERNAL_CALL_Sample(UnityEngine::Animation* self) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::INTERNAL_CALL_Sample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Animation", "INTERNAL_CALL_Sample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, self);
}
// Autogenerated method: UnityEngine.Animation.get_Item
UnityEngine::AnimationState* UnityEngine::Animation::get_Item(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationState*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animation.Play
bool UnityEngine::Animation::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.Play
bool UnityEngine::Animation::Play(UnityEngine::PlayMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, mode);
}
// Autogenerated method: UnityEngine.Animation.CrossFade
void UnityEngine::Animation::CrossFade(::Il2CppString* animation, float fadeLength, UnityEngine::PlayMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(fadeLength), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animation, fadeLength, mode);
}
// Autogenerated method: UnityEngine.Animation.CrossFade
void UnityEngine::Animation::CrossFade(::Il2CppString* animation, float fadeLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::CrossFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(fadeLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animation, fadeLength);
}
// Autogenerated method: UnityEngine.Animation.PlayDefaultAnimation
bool UnityEngine::Animation::PlayDefaultAnimation(UnityEngine::PlayMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::PlayDefaultAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayDefaultAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, mode);
}
// Autogenerated method: UnityEngine.Animation.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Animation::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.GetState
UnityEngine::AnimationState* UnityEngine::Animation::GetState(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::GetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationState*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animation.GetStateAtIndex
UnityEngine::AnimationState* UnityEngine::Animation::GetStateAtIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::GetStateAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStateAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationState*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Animation.GetStateCount
int UnityEngine::Animation::GetStateCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::GetStateCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStateCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation.get_animatePhysics
bool UnityEngine::Animation::get_animatePhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::get_animatePhysics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animatePhysics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Animation/Enumerator
#include "UnityEngine/Animation_Enumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animation/Enumerator.get_Current
::Il2CppObject* UnityEngine::Animation::Enumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::Enumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation/Enumerator.MoveNext
bool UnityEngine::Animation::Enumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::Enumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animation/Enumerator.Reset
void UnityEngine::Animation::Enumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animation::Enumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimationState
#include "UnityEngine/AnimationState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AnimationState.set_normalizedTime
void UnityEngine::AnimationState::set_normalizedTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationState::set_normalizedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_normalizedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationState.set_speed
void UnityEngine::AnimationState::set_speed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationState::set_speed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_speed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationState.set_layer
void UnityEngine::AnimationState::set_layer(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationState::set_layer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_layer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.Animations.IAnimationWindowPreview
#include "UnityEngine/Experimental/Animations/IAnimationWindowPreview.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.Animations.IAnimationWindowPreview.UpdatePreviewGraph
void UnityEngine::Experimental::Animations::IAnimationWindowPreview::UpdatePreviewGraph(UnityEngine::Playables::PlayableGraph graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Experimental::Animations::IAnimationWindowPreview::UpdatePreviewGraph");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePreviewGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, graph);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Animations.AnimationPlayableBinding
#include "UnityEngine/Animations/AnimationPlayableBinding.hpp"
// Including type: UnityEngine.Playables.PlayableBinding
#include "UnityEngine/Playables/PlayableBinding.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.AnimationPlayableBinding.Create
UnityEngine::Playables::PlayableBinding UnityEngine::Animations::AnimationPlayableBinding::Create(::Il2CppString* name, UnityEngine::Object* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationPlayableBinding::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableBinding", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableBinding, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, key);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableBinding.CreateAnimationOutput
UnityEngine::Playables::PlayableOutput UnityEngine::Animations::AnimationPlayableBinding::CreateAnimationOutput(UnityEngine::Playables::PlayableGraph graph, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationPlayableBinding::CreateAnimationOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableBinding", "CreateAnimationOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableOutput, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationClipPlayable
#include "UnityEngine/Animations/AnimationClipPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.Create
UnityEngine::Animations::AnimationClipPlayable UnityEngine::Animations::AnimationClipPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationClipPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Animations::AnimationClipPlayable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, clip);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.CreateHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationClipPlayable::CreateHandle(UnityEngine::Playables::PlayableGraph graph, UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationClipPlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, clip);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.GetHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationClipPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationClipPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.Equals
bool UnityEngine::Animations::AnimationClipPlayable::Equals(UnityEngine::Animations::AnimationClipPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationClipPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetApplyFootIK
void UnityEngine::Animations::AnimationClipPlayable::SetApplyFootIK(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationClipPlayable::SetApplyFootIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetApplyFootIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetRemoveStartOffset
void UnityEngine::Animations::AnimationClipPlayable::SetRemoveStartOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationClipPlayable::SetRemoveStartOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetRemoveStartOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetOverrideLoopTime
void UnityEngine::Animations::AnimationClipPlayable::SetOverrideLoopTime(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationClipPlayable::SetOverrideLoopTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetOverrideLoopTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetLoopTime
void UnityEngine::Animations::AnimationClipPlayable::SetLoopTime(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationClipPlayable::SetLoopTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLoopTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationClipPlayable::CreateHandleInternal(UnityEngine::Playables::PlayableGraph graph, UnityEngine::AnimationClip* clip, UnityEngine::Playables::PlayableHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationClipPlayable::CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "CreateHandleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, clip, handle);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetApplyFootIKInternal
void UnityEngine::Animations::AnimationClipPlayable::SetApplyFootIKInternal(UnityEngine::Playables::PlayableHandle& handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationClipPlayable::SetApplyFootIKInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "SetApplyFootIKInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetRemoveStartOffsetInternal
void UnityEngine::Animations::AnimationClipPlayable::SetRemoveStartOffsetInternal(UnityEngine::Playables::PlayableHandle& handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationClipPlayable::SetRemoveStartOffsetInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "SetRemoveStartOffsetInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetOverrideLoopTimeInternal
void UnityEngine::Animations::AnimationClipPlayable::SetOverrideLoopTimeInternal(UnityEngine::Playables::PlayableHandle& handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationClipPlayable::SetOverrideLoopTimeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "SetOverrideLoopTimeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.SetLoopTimeInternal
void UnityEngine::Animations::AnimationClipPlayable::SetLoopTimeInternal(UnityEngine::Playables::PlayableHandle& handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationClipPlayable::SetLoopTimeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "SetLoopTimeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationClipPlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationClipPlayable::CreateHandleInternal_Injected(UnityEngine::Playables::PlayableGraph& graph, UnityEngine::AnimationClip* clip, UnityEngine::Playables::PlayableHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationClipPlayable::CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationClipPlayable", "CreateHandleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, clip, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationLayerMixerPlayable
#include "UnityEngine/Animations/AnimationLayerMixerPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.AvatarMask
#include "UnityEngine/AvatarMask.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationLayerMixerPlayable m_NullPlayable
UnityEngine::Animations::AnimationLayerMixerPlayable UnityEngine::Animations::AnimationLayerMixerPlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationLayerMixerPlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Animations::AnimationLayerMixerPlayable>("UnityEngine.Animations", "AnimationLayerMixerPlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationLayerMixerPlayable m_NullPlayable
void UnityEngine::Animations::AnimationLayerMixerPlayable::_set_m_NullPlayable(UnityEngine::Animations::AnimationLayerMixerPlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationLayerMixerPlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationLayerMixerPlayable", "m_NullPlayable", value));
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.Create
UnityEngine::Animations::AnimationLayerMixerPlayable UnityEngine::Animations::AnimationLayerMixerPlayable::Create(UnityEngine::Playables::PlayableGraph graph, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationLayerMixerPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Animations::AnimationLayerMixerPlayable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.CreateHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationLayerMixerPlayable::CreateHandle(UnityEngine::Playables::PlayableGraph graph, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationLayerMixerPlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.GetHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationLayerMixerPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationLayerMixerPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.Equals
bool UnityEngine::Animations::AnimationLayerMixerPlayable::Equals(UnityEngine::Animations::AnimationLayerMixerPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationLayerMixerPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.SetLayerMaskFromAvatarMask
void UnityEngine::Animations::AnimationLayerMixerPlayable::SetLayerMaskFromAvatarMask(uint layerIndex, UnityEngine::AvatarMask* mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationLayerMixerPlayable::SetLayerMaskFromAvatarMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLayerMaskFromAvatarMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(mask)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, layerIndex, mask);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationLayerMixerPlayable::CreateHandleInternal(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::PlayableHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationLayerMixerPlayable::CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", "CreateHandleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, handle);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.SetLayerMaskFromAvatarMaskInternal
void UnityEngine::Animations::AnimationLayerMixerPlayable::SetLayerMaskFromAvatarMaskInternal(UnityEngine::Playables::PlayableHandle& handle, uint layerIndex, UnityEngine::AvatarMask* mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationLayerMixerPlayable::SetLayerMaskFromAvatarMaskInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", "SetLayerMaskFromAvatarMaskInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(layerIndex), ::il2cpp_utils::ExtractType(mask)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, layerIndex, mask);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable..cctor
void UnityEngine::Animations::AnimationLayerMixerPlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationLayerMixerPlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationLayerMixerPlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationLayerMixerPlayable::CreateHandleInternal_Injected(UnityEngine::Playables::PlayableGraph& graph, UnityEngine::Playables::PlayableHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationLayerMixerPlayable::CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationLayerMixerPlayable", "CreateHandleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationMixerPlayable
#include "UnityEngine/Animations/AnimationMixerPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationMixerPlayable m_NullPlayable
UnityEngine::Animations::AnimationMixerPlayable UnityEngine::Animations::AnimationMixerPlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationMixerPlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Animations::AnimationMixerPlayable>("UnityEngine.Animations", "AnimationMixerPlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationMixerPlayable m_NullPlayable
void UnityEngine::Animations::AnimationMixerPlayable::_set_m_NullPlayable(UnityEngine::Animations::AnimationMixerPlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationMixerPlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationMixerPlayable", "m_NullPlayable", value));
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable.Create
UnityEngine::Animations::AnimationMixerPlayable UnityEngine::Animations::AnimationMixerPlayable::Create(UnityEngine::Playables::PlayableGraph graph, int inputCount, bool normalizeWeights) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationMixerPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMixerPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(normalizeWeights)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Animations::AnimationMixerPlayable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, inputCount, normalizeWeights);
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable.CreateHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationMixerPlayable::CreateHandle(UnityEngine::Playables::PlayableGraph graph, int inputCount, bool normalizeWeights) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationMixerPlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMixerPlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(normalizeWeights)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, inputCount, normalizeWeights);
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable.GetHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationMixerPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationMixerPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable.Equals
bool UnityEngine::Animations::AnimationMixerPlayable::Equals(UnityEngine::Animations::AnimationMixerPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationMixerPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationMixerPlayable::CreateHandleInternal(UnityEngine::Playables::PlayableGraph graph, bool normalizeWeights, UnityEngine::Playables::PlayableHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationMixerPlayable::CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMixerPlayable", "CreateHandleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(normalizeWeights), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, normalizeWeights, handle);
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable..cctor
void UnityEngine::Animations::AnimationMixerPlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationMixerPlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMixerPlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationMixerPlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationMixerPlayable::CreateHandleInternal_Injected(UnityEngine::Playables::PlayableGraph& graph, bool normalizeWeights, UnityEngine::Playables::PlayableHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationMixerPlayable::CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMixerPlayable", "CreateHandleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(normalizeWeights), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, normalizeWeights, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationMotionXToDeltaPlayable
#include "UnityEngine/Animations/AnimationMotionXToDeltaPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationMotionXToDeltaPlayable m_NullPlayable
UnityEngine::Animations::AnimationMotionXToDeltaPlayable UnityEngine::Animations::AnimationMotionXToDeltaPlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationMotionXToDeltaPlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Animations::AnimationMotionXToDeltaPlayable>("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationMotionXToDeltaPlayable m_NullPlayable
void UnityEngine::Animations::AnimationMotionXToDeltaPlayable::_set_m_NullPlayable(UnityEngine::Animations::AnimationMotionXToDeltaPlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationMotionXToDeltaPlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "m_NullPlayable", value));
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.Create
UnityEngine::Animations::AnimationMotionXToDeltaPlayable UnityEngine::Animations::AnimationMotionXToDeltaPlayable::Create(UnityEngine::Playables::PlayableGraph graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationMotionXToDeltaPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Animations::AnimationMotionXToDeltaPlayable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.CreateHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationMotionXToDeltaPlayable::CreateHandle(UnityEngine::Playables::PlayableGraph graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationMotionXToDeltaPlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.GetHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationMotionXToDeltaPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationMotionXToDeltaPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.Equals
bool UnityEngine::Animations::AnimationMotionXToDeltaPlayable::Equals(UnityEngine::Animations::AnimationMotionXToDeltaPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationMotionXToDeltaPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.SetAbsoluteMotion
void UnityEngine::Animations::AnimationMotionXToDeltaPlayable::SetAbsoluteMotion(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationMotionXToDeltaPlayable::SetAbsoluteMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetAbsoluteMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationMotionXToDeltaPlayable::CreateHandleInternal(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::PlayableHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationMotionXToDeltaPlayable::CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "CreateHandleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, handle);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.SetAbsoluteMotionInternal
void UnityEngine::Animations::AnimationMotionXToDeltaPlayable::SetAbsoluteMotionInternal(UnityEngine::Playables::PlayableHandle& handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationMotionXToDeltaPlayable::SetAbsoluteMotionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "SetAbsoluteMotionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable..cctor
void UnityEngine::Animations::AnimationMotionXToDeltaPlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationMotionXToDeltaPlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationMotionXToDeltaPlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationMotionXToDeltaPlayable::CreateHandleInternal_Injected(UnityEngine::Playables::PlayableGraph& graph, UnityEngine::Playables::PlayableHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationMotionXToDeltaPlayable::CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationMotionXToDeltaPlayable", "CreateHandleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationOffsetPlayable
#include "UnityEngine/Animations/AnimationOffsetPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationOffsetPlayable m_NullPlayable
UnityEngine::Animations::AnimationOffsetPlayable UnityEngine::Animations::AnimationOffsetPlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationOffsetPlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Animations::AnimationOffsetPlayable>("UnityEngine.Animations", "AnimationOffsetPlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationOffsetPlayable m_NullPlayable
void UnityEngine::Animations::AnimationOffsetPlayable::_set_m_NullPlayable(UnityEngine::Animations::AnimationOffsetPlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationOffsetPlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationOffsetPlayable", "m_NullPlayable", value));
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.Create
UnityEngine::Animations::AnimationOffsetPlayable UnityEngine::Animations::AnimationOffsetPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Vector3 position, UnityEngine::Quaternion rotation, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationOffsetPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Animations::AnimationOffsetPlayable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, position, rotation, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.CreateHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationOffsetPlayable::CreateHandle(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Vector3 position, UnityEngine::Quaternion rotation, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationOffsetPlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, position, rotation, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.GetHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationOffsetPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationOffsetPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.Equals
bool UnityEngine::Animations::AnimationOffsetPlayable::Equals(UnityEngine::Animations::AnimationOffsetPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationOffsetPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationOffsetPlayable::CreateHandleInternal(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Vector3 position, UnityEngine::Quaternion rotation, UnityEngine::Playables::PlayableHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationOffsetPlayable::CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", "CreateHandleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, position, rotation, handle);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable..cctor
void UnityEngine::Animations::AnimationOffsetPlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationOffsetPlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationOffsetPlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationOffsetPlayable::CreateHandleInternal_Injected(UnityEngine::Playables::PlayableGraph& graph, UnityEngine::Vector3& position, UnityEngine::Quaternion& rotation, UnityEngine::Playables::PlayableHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationOffsetPlayable::CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationOffsetPlayable", "CreateHandleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, position, rotation, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationPlayableExtensions
#include "UnityEngine/Animations/AnimationPlayableExtensions.hpp"
// Including type: UnityEngine.Playables.IPlayable
#include "UnityEngine/Playables/IPlayable.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Playables.PlayableHandle
#include "UnityEngine/Playables/PlayableHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.AnimationPlayableExtensions.SetAnimatedPropertiesInternal
void UnityEngine::Animations::AnimationPlayableExtensions::SetAnimatedPropertiesInternal(UnityEngine::Playables::PlayableHandle& playable, UnityEngine::AnimationClip* animatedProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationPlayableExtensions::SetAnimatedPropertiesInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableExtensions", "SetAnimatedPropertiesInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(animatedProperties)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, playable, animatedProperties);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Animations.AnimationPlayableGraphExtensions
#include "UnityEngine/Animations/AnimationPlayableGraphExtensions.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.PlayableOutputHandle
#include "UnityEngine/Playables/PlayableOutputHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.AnimationPlayableGraphExtensions.InternalCreateAnimationOutput
bool UnityEngine::Animations::AnimationPlayableGraphExtensions::InternalCreateAnimationOutput(UnityEngine::Playables::PlayableGraph& graph, ::Il2CppString* name, UnityEngine::Playables::PlayableOutputHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationPlayableGraphExtensions::InternalCreateAnimationOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableGraphExtensions", "InternalCreateAnimationOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::PlayableOutputHandle&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, name, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Animations.AnimationPlayableOutput
#include "UnityEngine/Animations/AnimationPlayableOutput.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.Create
UnityEngine::Animations::AnimationPlayableOutput UnityEngine::Animations::AnimationPlayableOutput::Create(UnityEngine::Playables::PlayableGraph graph, ::Il2CppString* name, UnityEngine::Animator* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationPlayableOutput::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableOutput", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Animations::AnimationPlayableOutput, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, name, target);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.get_Null
UnityEngine::Animations::AnimationPlayableOutput UnityEngine::Animations::AnimationPlayableOutput::get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationPlayableOutput::get_Null");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableOutput", "get_Null", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Animations::AnimationPlayableOutput, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.GetHandle
UnityEngine::Playables::PlayableOutputHandle UnityEngine::Animations::AnimationPlayableOutput::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationPlayableOutput::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableOutputHandle, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.op_Explicit
UnityEngine::Animations::AnimationPlayableOutput::AnimationPlayableOutput(UnityEngine::Playables::PlayableOutput& output) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationPlayableOutput::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableOutput", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  *this = ::il2cpp_utils::RunMethodThrow<UnityEngine::Animations::AnimationPlayableOutput, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, output);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.GetTarget
UnityEngine::Animator* UnityEngine::Animations::AnimationPlayableOutput::GetTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationPlayableOutput::GetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Animator*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.SetTarget
void UnityEngine::Animations::AnimationPlayableOutput::SetTarget(UnityEngine::Animator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationPlayableOutput::SetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.InternalGetTarget
UnityEngine::Animator* UnityEngine::Animations::AnimationPlayableOutput::InternalGetTarget(UnityEngine::Playables::PlayableOutputHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationPlayableOutput::InternalGetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableOutput", "InternalGetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Animator*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: UnityEngine.Animations.AnimationPlayableOutput.InternalSetTarget
void UnityEngine::Animations::AnimationPlayableOutput::InternalSetTarget(UnityEngine::Playables::PlayableOutputHandle& handle, UnityEngine::Animator* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationPlayableOutput::InternalSetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPlayableOutput", "InternalSetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, target);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationPosePlayable
#include "UnityEngine/Animations/AnimationPosePlayable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationPosePlayable m_NullPlayable
UnityEngine::Animations::AnimationPosePlayable UnityEngine::Animations::AnimationPosePlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationPosePlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Animations::AnimationPosePlayable>("UnityEngine.Animations", "AnimationPosePlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationPosePlayable m_NullPlayable
void UnityEngine::Animations::AnimationPosePlayable::_set_m_NullPlayable(UnityEngine::Animations::AnimationPosePlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationPosePlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationPosePlayable", "m_NullPlayable", value));
}
// Autogenerated method: UnityEngine.Animations.AnimationPosePlayable.GetHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationPosePlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationPosePlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationPosePlayable.Equals
bool UnityEngine::Animations::AnimationPosePlayable::Equals(UnityEngine::Animations::AnimationPosePlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationPosePlayable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationPosePlayable..cctor
void UnityEngine::Animations::AnimationPosePlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationPosePlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationPosePlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationRemoveScalePlayable
#include "UnityEngine/Animations/AnimationRemoveScalePlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationRemoveScalePlayable m_NullPlayable
UnityEngine::Animations::AnimationRemoveScalePlayable UnityEngine::Animations::AnimationRemoveScalePlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationRemoveScalePlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Animations::AnimationRemoveScalePlayable>("UnityEngine.Animations", "AnimationRemoveScalePlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationRemoveScalePlayable m_NullPlayable
void UnityEngine::Animations::AnimationRemoveScalePlayable::_set_m_NullPlayable(UnityEngine::Animations::AnimationRemoveScalePlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationRemoveScalePlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationRemoveScalePlayable", "m_NullPlayable", value));
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable.Create
UnityEngine::Animations::AnimationRemoveScalePlayable UnityEngine::Animations::AnimationRemoveScalePlayable::Create(UnityEngine::Playables::PlayableGraph graph, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationRemoveScalePlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationRemoveScalePlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Animations::AnimationRemoveScalePlayable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable.CreateHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationRemoveScalePlayable::CreateHandle(UnityEngine::Playables::PlayableGraph graph, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationRemoveScalePlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationRemoveScalePlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, inputCount);
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable.GetHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationRemoveScalePlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationRemoveScalePlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable.Equals
bool UnityEngine::Animations::AnimationRemoveScalePlayable::Equals(UnityEngine::Animations::AnimationRemoveScalePlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationRemoveScalePlayable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable.CreateHandleInternal
bool UnityEngine::Animations::AnimationRemoveScalePlayable::CreateHandleInternal(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::PlayableHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationRemoveScalePlayable::CreateHandleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationRemoveScalePlayable", "CreateHandleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, handle);
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable..cctor
void UnityEngine::Animations::AnimationRemoveScalePlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationRemoveScalePlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationRemoveScalePlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationRemoveScalePlayable.CreateHandleInternal_Injected
bool UnityEngine::Animations::AnimationRemoveScalePlayable::CreateHandleInternal_Injected(UnityEngine::Playables::PlayableGraph& graph, UnityEngine::Playables::PlayableHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationRemoveScalePlayable::CreateHandleInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationRemoveScalePlayable", "CreateHandleInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimationScriptPlayable
#include "UnityEngine/Animations/AnimationScriptPlayable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimationScriptPlayable m_NullPlayable
UnityEngine::Animations::AnimationScriptPlayable UnityEngine::Animations::AnimationScriptPlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationScriptPlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Animations::AnimationScriptPlayable>("UnityEngine.Animations", "AnimationScriptPlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimationScriptPlayable m_NullPlayable
void UnityEngine::Animations::AnimationScriptPlayable::_set_m_NullPlayable(UnityEngine::Animations::AnimationScriptPlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationScriptPlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimationScriptPlayable", "m_NullPlayable", value));
}
// Autogenerated method: UnityEngine.Animations.AnimationScriptPlayable.GetHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimationScriptPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationScriptPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimationScriptPlayable.Equals
bool UnityEngine::Animations::AnimationScriptPlayable::Equals(UnityEngine::Animations::AnimationScriptPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationScriptPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimationScriptPlayable..cctor
void UnityEngine::Animations::AnimationScriptPlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimationScriptPlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimationScriptPlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.AnimatorControllerPlayable
#include "UnityEngine/Animations/AnimatorControllerPlayable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.AnimatorControllerPlayable m_NullPlayable
UnityEngine::Animations::AnimatorControllerPlayable UnityEngine::Animations::AnimatorControllerPlayable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimatorControllerPlayable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Animations::AnimatorControllerPlayable>("UnityEngine.Animations", "AnimatorControllerPlayable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.AnimatorControllerPlayable m_NullPlayable
void UnityEngine::Animations::AnimatorControllerPlayable::_set_m_NullPlayable(UnityEngine::Animations::AnimatorControllerPlayable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimatorControllerPlayable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations", "AnimatorControllerPlayable", "m_NullPlayable", value));
}
// Autogenerated method: UnityEngine.Animations.AnimatorControllerPlayable.GetHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Animations::AnimatorControllerPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimatorControllerPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.AnimatorControllerPlayable.SetHandle
void UnityEngine::Animations::AnimatorControllerPlayable::SetHandle(UnityEngine::Playables::PlayableHandle handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimatorControllerPlayable::SetHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, handle);
}
// Autogenerated method: UnityEngine.Animations.AnimatorControllerPlayable.Equals
bool UnityEngine::Animations::AnimatorControllerPlayable::Equals(UnityEngine::Animations::AnimatorControllerPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimatorControllerPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.AnimatorControllerPlayable..cctor
void UnityEngine::Animations::AnimatorControllerPlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animations::AnimatorControllerPlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations", "AnimatorControllerPlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AssetBundle
#include "UnityEngine/AssetBundle.hpp"
// Including type: UnityEngine.AssetBundleCreateRequest
#include "UnityEngine/AssetBundleCreateRequest.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.AssetBundleRequest
#include "UnityEngine/AssetBundleRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AssetBundle.LoadFromFileAsync_Internal
UnityEngine::AssetBundleCreateRequest* UnityEngine::AssetBundle::LoadFromFileAsync_Internal(::Il2CppString* path, uint crc, uint64_t offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AssetBundle::LoadFromFileAsync_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AssetBundle", "LoadFromFileAsync_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(crc), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AssetBundleCreateRequest*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, crc, offset);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadFromFileAsync
UnityEngine::AssetBundleCreateRequest* UnityEngine::AssetBundle::LoadFromFileAsync(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AssetBundle::LoadFromFileAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AssetBundle", "LoadFromFileAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AssetBundleCreateRequest*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadFromFile_Internal
UnityEngine::AssetBundle* UnityEngine::AssetBundle::LoadFromFile_Internal(::Il2CppString* path, uint crc, uint64_t offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AssetBundle::LoadFromFile_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AssetBundle", "LoadFromFile_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(crc), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AssetBundle*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, crc, offset);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadFromFile
UnityEngine::AssetBundle* UnityEngine::AssetBundle::LoadFromFile(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AssetBundle::LoadFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AssetBundle", "LoadFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AssetBundle*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadAsset
UnityEngine::Object* UnityEngine::AssetBundle::LoadAsset(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AssetBundle::LoadAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadAsset
UnityEngine::Object* UnityEngine::AssetBundle::LoadAsset(::Il2CppString* name, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AssetBundle::LoadAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method, name, type);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadAsset_Internal
UnityEngine::Object* UnityEngine::AssetBundle::LoadAsset_Internal(::Il2CppString* name, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AssetBundle::LoadAsset_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAsset_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method, name, type);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadAssetAsync
UnityEngine::AssetBundleRequest* UnityEngine::AssetBundle::LoadAssetAsync(::Il2CppString* name, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AssetBundle::LoadAssetAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAssetAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AssetBundleRequest*, false>(this, ___internal__method, name, type);
}
// Autogenerated method: UnityEngine.AssetBundle.LoadAssetAsync_Internal
UnityEngine::AssetBundleRequest* UnityEngine::AssetBundle::LoadAssetAsync_Internal(::Il2CppString* name, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AssetBundle::LoadAssetAsync_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAssetAsync_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AssetBundleRequest*, false>(this, ___internal__method, name, type);
}
// Autogenerated method: UnityEngine.AssetBundle.Unload
void UnityEngine::AssetBundle::Unload(bool unloadAllLoadedObjects) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AssetBundle::Unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unloadAllLoadedObjects)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, unloadAllLoadedObjects);
}
// Autogenerated method: UnityEngine.AssetBundle.GetAllAssetNames
::Array<::Il2CppString*>* UnityEngine::AssetBundle::GetAllAssetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AssetBundle::GetAllAssetNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllAssetNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AssetBundle.GetAllScenePaths
::Array<::Il2CppString*>* UnityEngine::AssetBundle::GetAllScenePaths() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AssetBundle::GetAllScenePaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllScenePaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AssetBundleCreateRequest
#include "UnityEngine/AssetBundleCreateRequest.hpp"
// Including type: UnityEngine.AssetBundle
#include "UnityEngine/AssetBundle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AssetBundleCreateRequest.get_assetBundle
UnityEngine::AssetBundle* UnityEngine::AssetBundleCreateRequest::get_assetBundle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AssetBundleCreateRequest::get_assetBundle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_assetBundle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AssetBundle*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AssetBundleRequest
#include "UnityEngine/AssetBundleRequest.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AssetBundleRequest.get_asset
UnityEngine::Object* UnityEngine::AssetBundleRequest::get_asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AssetBundleRequest::get_asset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_asset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioSpeakerMode
#include "UnityEngine/AudioSpeakerMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [ObsoleteAttribute] Offset: 0xCD0B14
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioSpeakerMode Raw
UnityEngine::AudioSpeakerMode UnityEngine::AudioSpeakerMode::_get_Raw() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSpeakerMode::_get_Raw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioSpeakerMode>("UnityEngine", "AudioSpeakerMode", "Raw"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioSpeakerMode Raw
void UnityEngine::AudioSpeakerMode::_set_Raw(UnityEngine::AudioSpeakerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSpeakerMode::_set_Raw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSpeakerMode", "Raw", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioSpeakerMode Mono
UnityEngine::AudioSpeakerMode UnityEngine::AudioSpeakerMode::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSpeakerMode::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioSpeakerMode>("UnityEngine", "AudioSpeakerMode", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioSpeakerMode Mono
void UnityEngine::AudioSpeakerMode::_set_Mono(UnityEngine::AudioSpeakerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSpeakerMode::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSpeakerMode", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioSpeakerMode Stereo
UnityEngine::AudioSpeakerMode UnityEngine::AudioSpeakerMode::_get_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSpeakerMode::_get_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioSpeakerMode>("UnityEngine", "AudioSpeakerMode", "Stereo"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioSpeakerMode Stereo
void UnityEngine::AudioSpeakerMode::_set_Stereo(UnityEngine::AudioSpeakerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSpeakerMode::_set_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSpeakerMode", "Stereo", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioSpeakerMode Quad
UnityEngine::AudioSpeakerMode UnityEngine::AudioSpeakerMode::_get_Quad() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSpeakerMode::_get_Quad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioSpeakerMode>("UnityEngine", "AudioSpeakerMode", "Quad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioSpeakerMode Quad
void UnityEngine::AudioSpeakerMode::_set_Quad(UnityEngine::AudioSpeakerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSpeakerMode::_set_Quad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSpeakerMode", "Quad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioSpeakerMode Surround
UnityEngine::AudioSpeakerMode UnityEngine::AudioSpeakerMode::_get_Surround() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSpeakerMode::_get_Surround");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioSpeakerMode>("UnityEngine", "AudioSpeakerMode", "Surround"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioSpeakerMode Surround
void UnityEngine::AudioSpeakerMode::_set_Surround(UnityEngine::AudioSpeakerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSpeakerMode::_set_Surround");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSpeakerMode", "Surround", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioSpeakerMode Mode5point1
UnityEngine::AudioSpeakerMode UnityEngine::AudioSpeakerMode::_get_Mode5point1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSpeakerMode::_get_Mode5point1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioSpeakerMode>("UnityEngine", "AudioSpeakerMode", "Mode5point1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioSpeakerMode Mode5point1
void UnityEngine::AudioSpeakerMode::_set_Mode5point1(UnityEngine::AudioSpeakerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSpeakerMode::_set_Mode5point1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSpeakerMode", "Mode5point1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioSpeakerMode Mode7point1
UnityEngine::AudioSpeakerMode UnityEngine::AudioSpeakerMode::_get_Mode7point1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSpeakerMode::_get_Mode7point1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioSpeakerMode>("UnityEngine", "AudioSpeakerMode", "Mode7point1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioSpeakerMode Mode7point1
void UnityEngine::AudioSpeakerMode::_set_Mode7point1(UnityEngine::AudioSpeakerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSpeakerMode::_set_Mode7point1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSpeakerMode", "Mode7point1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioSpeakerMode Prologic
UnityEngine::AudioSpeakerMode UnityEngine::AudioSpeakerMode::_get_Prologic() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSpeakerMode::_get_Prologic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioSpeakerMode>("UnityEngine", "AudioSpeakerMode", "Prologic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioSpeakerMode Prologic
void UnityEngine::AudioSpeakerMode::_set_Prologic(UnityEngine::AudioSpeakerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSpeakerMode::_set_Prologic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSpeakerMode", "Prologic", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioDataLoadState
#include "UnityEngine/AudioDataLoadState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioDataLoadState Unloaded
UnityEngine::AudioDataLoadState UnityEngine::AudioDataLoadState::_get_Unloaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioDataLoadState::_get_Unloaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioDataLoadState>("UnityEngine", "AudioDataLoadState", "Unloaded"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioDataLoadState Unloaded
void UnityEngine::AudioDataLoadState::_set_Unloaded(UnityEngine::AudioDataLoadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioDataLoadState::_set_Unloaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioDataLoadState", "Unloaded", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioDataLoadState Loading
UnityEngine::AudioDataLoadState UnityEngine::AudioDataLoadState::_get_Loading() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioDataLoadState::_get_Loading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioDataLoadState>("UnityEngine", "AudioDataLoadState", "Loading"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioDataLoadState Loading
void UnityEngine::AudioDataLoadState::_set_Loading(UnityEngine::AudioDataLoadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioDataLoadState::_set_Loading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioDataLoadState", "Loading", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioDataLoadState Loaded
UnityEngine::AudioDataLoadState UnityEngine::AudioDataLoadState::_get_Loaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioDataLoadState::_get_Loaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioDataLoadState>("UnityEngine", "AudioDataLoadState", "Loaded"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioDataLoadState Loaded
void UnityEngine::AudioDataLoadState::_set_Loaded(UnityEngine::AudioDataLoadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioDataLoadState::_set_Loaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioDataLoadState", "Loaded", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AudioDataLoadState Failed
UnityEngine::AudioDataLoadState UnityEngine::AudioDataLoadState::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioDataLoadState::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioDataLoadState>("UnityEngine", "AudioDataLoadState", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AudioDataLoadState Failed
void UnityEngine::AudioDataLoadState::_set_Failed(UnityEngine::AudioDataLoadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioDataLoadState::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioDataLoadState", "Failed", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.FFTWindow
#include "UnityEngine/FFTWindow.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.FFTWindow Rectangular
UnityEngine::FFTWindow UnityEngine::FFTWindow::_get_Rectangular() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FFTWindow::_get_Rectangular");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::FFTWindow>("UnityEngine", "FFTWindow", "Rectangular"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FFTWindow Rectangular
void UnityEngine::FFTWindow::_set_Rectangular(UnityEngine::FFTWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FFTWindow::_set_Rectangular");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FFTWindow", "Rectangular", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FFTWindow Triangle
UnityEngine::FFTWindow UnityEngine::FFTWindow::_get_Triangle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FFTWindow::_get_Triangle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::FFTWindow>("UnityEngine", "FFTWindow", "Triangle"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FFTWindow Triangle
void UnityEngine::FFTWindow::_set_Triangle(UnityEngine::FFTWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FFTWindow::_set_Triangle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FFTWindow", "Triangle", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FFTWindow Hamming
UnityEngine::FFTWindow UnityEngine::FFTWindow::_get_Hamming() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FFTWindow::_get_Hamming");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::FFTWindow>("UnityEngine", "FFTWindow", "Hamming"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FFTWindow Hamming
void UnityEngine::FFTWindow::_set_Hamming(UnityEngine::FFTWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FFTWindow::_set_Hamming");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FFTWindow", "Hamming", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FFTWindow Hanning
UnityEngine::FFTWindow UnityEngine::FFTWindow::_get_Hanning() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FFTWindow::_get_Hanning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::FFTWindow>("UnityEngine", "FFTWindow", "Hanning"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FFTWindow Hanning
void UnityEngine::FFTWindow::_set_Hanning(UnityEngine::FFTWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FFTWindow::_set_Hanning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FFTWindow", "Hanning", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FFTWindow Blackman
UnityEngine::FFTWindow UnityEngine::FFTWindow::_get_Blackman() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FFTWindow::_get_Blackman");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::FFTWindow>("UnityEngine", "FFTWindow", "Blackman"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FFTWindow Blackman
void UnityEngine::FFTWindow::_set_Blackman(UnityEngine::FFTWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FFTWindow::_set_Blackman");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FFTWindow", "Blackman", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FFTWindow BlackmanHarris
UnityEngine::FFTWindow UnityEngine::FFTWindow::_get_BlackmanHarris() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FFTWindow::_get_BlackmanHarris");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::FFTWindow>("UnityEngine", "FFTWindow", "BlackmanHarris"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FFTWindow BlackmanHarris
void UnityEngine::FFTWindow::_set_BlackmanHarris(UnityEngine::FFTWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FFTWindow::_set_BlackmanHarris");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FFTWindow", "BlackmanHarris", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AudioSettings
#include "UnityEngine/AudioSettings.hpp"
// Including type: UnityEngine.AudioSettings/AudioConfigurationChangeHandler
#include "UnityEngine/AudioSettings_AudioConfigurationChangeHandler.hpp"
// Including type: UnityEngine.AudioSettings/Mobile
#include "UnityEngine/AudioSettings_Mobile.hpp"
// Including type: UnityEngine.AudioConfiguration
#include "UnityEngine/AudioConfiguration.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0xCD0B50
// [CompilerGeneratedAttribute] Offset: 0xCD0B50
// Autogenerated static field getter
// Get static field: static private UnityEngine.AudioSettings/AudioConfigurationChangeHandler OnAudioConfigurationChanged
UnityEngine::AudioSettings::AudioConfigurationChangeHandler* UnityEngine::AudioSettings::_get_OnAudioConfigurationChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::_get_OnAudioConfigurationChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AudioSettings::AudioConfigurationChangeHandler*>("UnityEngine", "AudioSettings", "OnAudioConfigurationChanged"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AudioSettings/AudioConfigurationChangeHandler OnAudioConfigurationChanged
void UnityEngine::AudioSettings::_set_OnAudioConfigurationChanged(UnityEngine::AudioSettings::AudioConfigurationChangeHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::_set_OnAudioConfigurationChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSettings", "OnAudioConfigurationChanged", value));
}
// Autogenerated method: UnityEngine.AudioSettings.GetSampleRate
int UnityEngine::AudioSettings::GetSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::GetSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "GetSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.get_dspTime
double UnityEngine::AudioSettings::get_dspTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::get_dspTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "get_dspTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.get_outputSampleRate
int UnityEngine::AudioSettings::get_outputSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::get_outputSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "get_outputSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.GetSpatializerPluginName
::Il2CppString* UnityEngine::AudioSettings::GetSpatializerPluginName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::GetSpatializerPluginName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "GetSpatializerPluginName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.GetConfiguration
UnityEngine::AudioConfiguration UnityEngine::AudioSettings::GetConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::GetConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "GetConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioConfiguration, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.InvokeOnAudioConfigurationChanged
void UnityEngine::AudioSettings::InvokeOnAudioConfigurationChanged(bool deviceWasChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::InvokeOnAudioConfigurationChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "InvokeOnAudioConfigurationChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceWasChanged)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, deviceWasChanged);
}
// Autogenerated method: UnityEngine.AudioSettings.StartAudioOutput
bool UnityEngine::AudioSettings::StartAudioOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::StartAudioOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "StartAudioOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.StopAudioOutput
bool UnityEngine::AudioSettings::StopAudioOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::StopAudioOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "StopAudioOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings.GetConfiguration_Injected
void UnityEngine::AudioSettings::GetConfiguration_Injected(UnityEngine::AudioConfiguration& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::GetConfiguration_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings", "GetConfiguration_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::AudioConfiguration&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ret);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AudioSettings/AudioConfigurationChangeHandler
#include "UnityEngine/AudioSettings_AudioConfigurationChangeHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AudioSettings/AudioConfigurationChangeHandler.Invoke
void UnityEngine::AudioSettings::AudioConfigurationChangeHandler::Invoke(bool deviceWasChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::AudioConfigurationChangeHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceWasChanged)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, deviceWasChanged);
}
// Autogenerated method: UnityEngine.AudioSettings/AudioConfigurationChangeHandler.BeginInvoke
System::IAsyncResult* UnityEngine::AudioSettings::AudioConfigurationChangeHandler::BeginInvoke(bool deviceWasChanged, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::AudioConfigurationChangeHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceWasChanged), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, deviceWasChanged, callback, object);
}
// Autogenerated method: UnityEngine.AudioSettings/AudioConfigurationChangeHandler.EndInvoke
void UnityEngine::AudioSettings::AudioConfigurationChangeHandler::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::AudioConfigurationChangeHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioSettings/Mobile
#include "UnityEngine/AudioSettings_Mobile.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0xCD0B8C
// [CompilerGeneratedAttribute] Offset: 0xCD0B8C
// Autogenerated static field getter
// Get static field: static private System.Boolean <muteState>k__BackingField
bool UnityEngine::AudioSettings::Mobile::_get_$muteState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::Mobile::_get_$muteState$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("UnityEngine", "AudioSettings/Mobile", "<muteState>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean <muteState>k__BackingField
void UnityEngine::AudioSettings::Mobile::_set_$muteState$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::Mobile::_set_$muteState$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSettings/Mobile", "<muteState>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _stopAudioOutputOnMute
bool UnityEngine::AudioSettings::Mobile::_get__stopAudioOutputOnMute() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::Mobile::_get__stopAudioOutputOnMute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngine", "AudioSettings/Mobile", "_stopAudioOutputOnMute"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _stopAudioOutputOnMute
void UnityEngine::AudioSettings::Mobile::_set__stopAudioOutputOnMute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::Mobile::_set__stopAudioOutputOnMute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSettings/Mobile", "_stopAudioOutputOnMute", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCD0BC8
// [DebuggerBrowsableAttribute] Offset: 0xCD0BC8
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Boolean> OnMuteStateChanged
System::Action_1<bool>* UnityEngine::AudioSettings::Mobile::_get_OnMuteStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::Mobile::_get_OnMuteStateChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<bool>*>("UnityEngine", "AudioSettings/Mobile", "OnMuteStateChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Boolean> OnMuteStateChanged
void UnityEngine::AudioSettings::Mobile::_set_OnMuteStateChanged(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::Mobile::_set_OnMuteStateChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AudioSettings/Mobile", "OnMuteStateChanged", value));
}
// Autogenerated method: UnityEngine.AudioSettings/Mobile.get_muteState
bool UnityEngine::AudioSettings::Mobile::get_muteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::Mobile::get_muteState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", "get_muteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings/Mobile.set_muteState
void UnityEngine::AudioSettings::Mobile::set_muteState(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::Mobile::set_muteState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", "set_muteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSettings/Mobile.get_stopAudioOutputOnMute
bool UnityEngine::AudioSettings::Mobile::get_stopAudioOutputOnMute() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::Mobile::get_stopAudioOutputOnMute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", "get_stopAudioOutputOnMute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings/Mobile.InvokeOnMuteStateChanged
void UnityEngine::AudioSettings::Mobile::InvokeOnMuteStateChanged(bool mute) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::Mobile::InvokeOnMuteStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", "InvokeOnMuteStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mute)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mute);
}
// Autogenerated method: UnityEngine.AudioSettings/Mobile.StartAudioOutput
void UnityEngine::AudioSettings::Mobile::StartAudioOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::Mobile::StartAudioOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", "StartAudioOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings/Mobile.StopAudioOutput
void UnityEngine::AudioSettings::Mobile::StopAudioOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::Mobile::StopAudioOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", "StopAudioOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSettings/Mobile..cctor
void UnityEngine::AudioSettings::Mobile::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSettings::Mobile::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSettings/Mobile", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.AudioClip/PCMReaderCallback
#include "UnityEngine/AudioClip_PCMReaderCallback.hpp"
// Including type: UnityEngine.AudioClip/PCMSetPositionCallback
#include "UnityEngine/AudioClip_PCMSetPositionCallback.hpp"
// Including type: UnityEngine.AudioDataLoadState
#include "UnityEngine/AudioDataLoadState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AudioClip.GetData
bool UnityEngine::AudioClip::GetData(UnityEngine::AudioClip* clip, ::Array<float>*& data, int numSamples, int samplesOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioClip", "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractIndependentType<::Array<float>*&>(), ::il2cpp_utils::ExtractType(numSamples), ::il2cpp_utils::ExtractType(samplesOffset)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip, data, numSamples, samplesOffset);
}
// Autogenerated method: UnityEngine.AudioClip.SetData
bool UnityEngine::AudioClip::SetData(UnityEngine::AudioClip* clip, ::Array<float>* data, int numsamples, int samplesOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioClip", "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(numsamples), ::il2cpp_utils::ExtractType(samplesOffset)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip, data, numsamples, samplesOffset);
}
// Autogenerated method: UnityEngine.AudioClip.Construct_Internal
UnityEngine::AudioClip* UnityEngine::AudioClip::Construct_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::Construct_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioClip", "Construct_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioClip*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.GetName
::Il2CppString* UnityEngine::AudioClip::GetName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.CreateUserSound
void UnityEngine::AudioClip::CreateUserSound(::Il2CppString* name, int lengthSamples, int channels, int frequency, bool stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::CreateUserSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUserSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(lengthSamples), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, lengthSamples, channels, frequency, stream);
}
// Autogenerated method: UnityEngine.AudioClip.get_length
float UnityEngine::AudioClip::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.get_samples
int UnityEngine::AudioClip::get_samples() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::get_samples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_samples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.get_channels
int UnityEngine::AudioClip::get_channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::get_channels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_channels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.get_frequency
int UnityEngine::AudioClip::get_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::get_frequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.LoadAudioData
bool UnityEngine::AudioClip::LoadAudioData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::LoadAudioData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAudioData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.get_loadState
UnityEngine::AudioDataLoadState UnityEngine::AudioClip::get_loadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::get_loadState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loadState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioDataLoadState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioClip.GetData
bool UnityEngine::AudioClip::GetData(::Array<float>* data, int offsetSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offsetSamples)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, data, offsetSamples);
}
// Autogenerated method: UnityEngine.AudioClip.SetData
bool UnityEngine::AudioClip::SetData(::Array<float>* data, int offsetSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offsetSamples)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, data, offsetSamples);
}
// Autogenerated method: UnityEngine.AudioClip.Create
UnityEngine::AudioClip* UnityEngine::AudioClip::Create(::Il2CppString* name, int lengthSamples, int channels, int frequency, bool stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioClip", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(lengthSamples), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioClip*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, lengthSamples, channels, frequency, stream);
}
// Autogenerated method: UnityEngine.AudioClip.Create
UnityEngine::AudioClip* UnityEngine::AudioClip::Create(::Il2CppString* name, int lengthSamples, int channels, int frequency, bool stream, UnityEngine::AudioClip::PCMReaderCallback* pcmreadercallback, UnityEngine::AudioClip::PCMSetPositionCallback* pcmsetpositioncallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioClip", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(lengthSamples), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(pcmreadercallback), ::il2cpp_utils::ExtractType(pcmsetpositioncallback)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioClip*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, lengthSamples, channels, frequency, stream, pcmreadercallback, pcmsetpositioncallback);
}
// Autogenerated method: UnityEngine.AudioClip.add_m_PCMReaderCallback
void UnityEngine::AudioClip::add_m_PCMReaderCallback(UnityEngine::AudioClip::PCMReaderCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::add_m_PCMReaderCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_m_PCMReaderCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioClip.remove_m_PCMReaderCallback
void UnityEngine::AudioClip::remove_m_PCMReaderCallback(UnityEngine::AudioClip::PCMReaderCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::remove_m_PCMReaderCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_m_PCMReaderCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioClip.add_m_PCMSetPositionCallback
void UnityEngine::AudioClip::add_m_PCMSetPositionCallback(UnityEngine::AudioClip::PCMSetPositionCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::add_m_PCMSetPositionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_m_PCMSetPositionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioClip.remove_m_PCMSetPositionCallback
void UnityEngine::AudioClip::remove_m_PCMSetPositionCallback(UnityEngine::AudioClip::PCMSetPositionCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::remove_m_PCMSetPositionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_m_PCMSetPositionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioClip.InvokePCMReaderCallback_Internal
void UnityEngine::AudioClip::InvokePCMReaderCallback_Internal(::Array<float>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::InvokePCMReaderCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePCMReaderCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: UnityEngine.AudioClip.InvokePCMSetPositionCallback_Internal
void UnityEngine::AudioClip::InvokePCMSetPositionCallback_Internal(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::InvokePCMSetPositionCallback_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePCMSetPositionCallback_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AudioClip/PCMReaderCallback
#include "UnityEngine/AudioClip_PCMReaderCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AudioClip/PCMReaderCallback.Invoke
void UnityEngine::AudioClip::PCMReaderCallback::Invoke(::Array<float>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::PCMReaderCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: UnityEngine.AudioClip/PCMReaderCallback.BeginInvoke
System::IAsyncResult* UnityEngine::AudioClip::PCMReaderCallback::BeginInvoke(::Array<float>* data, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::PCMReaderCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, data, callback, object);
}
// Autogenerated method: UnityEngine.AudioClip/PCMReaderCallback.EndInvoke
void UnityEngine::AudioClip::PCMReaderCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::PCMReaderCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AudioClip/PCMSetPositionCallback
#include "UnityEngine/AudioClip_PCMSetPositionCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AudioClip/PCMSetPositionCallback.Invoke
void UnityEngine::AudioClip::PCMSetPositionCallback::Invoke(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::PCMSetPositionCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.AudioClip/PCMSetPositionCallback.BeginInvoke
System::IAsyncResult* UnityEngine::AudioClip::PCMSetPositionCallback::BeginInvoke(int position, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::PCMSetPositionCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, position, callback, object);
}
// Autogenerated method: UnityEngine.AudioClip/PCMSetPositionCallback.EndInvoke
void UnityEngine::AudioClip::PCMSetPositionCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioClip::PCMSetPositionCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioListener
#include "UnityEngine/AudioListener.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AudioListener.get_pause
bool UnityEngine::AudioListener::get_pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioListener::get_pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioListener", "get_pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AudioListener.set_pause
void UnityEngine::AudioListener::set_pause(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioListener::set_pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioListener", "set_pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.FFTWindow
#include "UnityEngine/FFTWindow.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AudioSource.GetPitch
float UnityEngine::AudioSource::GetPitch(UnityEngine::AudioSource* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::GetPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSource", "GetPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source);
}
// Autogenerated method: UnityEngine.AudioSource.SetPitch
void UnityEngine::AudioSource::SetPitch(UnityEngine::AudioSource* source, float pitch) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::SetPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSource", "SetPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(pitch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, pitch);
}
// Autogenerated method: UnityEngine.AudioSource.PlayHelper
void UnityEngine::AudioSource::PlayHelper(UnityEngine::AudioSource* source, uint64_t delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::PlayHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSource", "PlayHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(delay)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, delay);
}
// Autogenerated method: UnityEngine.AudioSource.Play
void UnityEngine::AudioSource::Play(double delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, delay);
}
// Autogenerated method: UnityEngine.AudioSource.PlayOneShotHelper
void UnityEngine::AudioSource::PlayOneShotHelper(UnityEngine::AudioSource* source, UnityEngine::AudioClip* clip, float volumeScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::PlayOneShotHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSource", "PlayOneShotHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(volumeScale)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, clip, volumeScale);
}
// Autogenerated method: UnityEngine.AudioSource.Stop
void UnityEngine::AudioSource::Stop(bool stopOneShots) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stopOneShots)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stopOneShots);
}
// Autogenerated method: UnityEngine.AudioSource.GetSpectrumDataHelper
void UnityEngine::AudioSource::GetSpectrumDataHelper(UnityEngine::AudioSource* source, ::Array<float>*& samples, int channel, UnityEngine::FFTWindow window) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::GetSpectrumDataHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AudioSource", "GetSpectrumDataHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractIndependentType<::Array<float>*&>(), ::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(window)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, samples, channel, window);
}
// Autogenerated method: UnityEngine.AudioSource.get_volume
float UnityEngine::AudioSource::get_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::get_volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.set_volume
void UnityEngine::AudioSource::set_volume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::set_volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.get_pitch
float UnityEngine::AudioSource::get_pitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::get_pitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.set_pitch
void UnityEngine::AudioSource::set_pitch(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::set_pitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.get_time
float UnityEngine::AudioSource::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.set_time
void UnityEngine::AudioSource::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.get_timeSamples
int UnityEngine::AudioSource::get_timeSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::get_timeSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.get_clip
UnityEngine::AudioClip* UnityEngine::AudioSource::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.set_clip
void UnityEngine::AudioSource::set_clip(UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::set_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.Play
void UnityEngine::AudioSource::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.PlayScheduled
void UnityEngine::AudioSource::PlayScheduled(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::PlayScheduled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayScheduled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.AudioSource.PlayOneShot
void UnityEngine::AudioSource::PlayOneShot(UnityEngine::AudioClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::PlayOneShot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayOneShot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.AudioSource.PlayOneShot
void UnityEngine::AudioSource::PlayOneShot(UnityEngine::AudioClip* clip, float volumeScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::PlayOneShot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayOneShot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(volumeScale)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip, volumeScale);
}
// Autogenerated method: UnityEngine.AudioSource.Stop
void UnityEngine::AudioSource::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.Pause
void UnityEngine::AudioSource::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.UnPause
void UnityEngine::AudioSource::UnPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::UnPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.get_isPlaying
bool UnityEngine::AudioSource::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.set_loop
void UnityEngine::AudioSource::set_loop(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::set_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.get_playOnAwake
bool UnityEngine::AudioSource::get_playOnAwake() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::get_playOnAwake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playOnAwake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioSource.set_playOnAwake
void UnityEngine::AudioSource::set_playOnAwake(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::set_playOnAwake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playOnAwake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.set_ignoreListenerPause
void UnityEngine::AudioSource::set_ignoreListenerPause(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::set_ignoreListenerPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ignoreListenerPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.set_spatialBlend
void UnityEngine::AudioSource::set_spatialBlend(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::set_spatialBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spatialBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.set_reverbZoneMix
void UnityEngine::AudioSource::set_reverbZoneMix(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::set_reverbZoneMix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reverbZoneMix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.set_bypassEffects
void UnityEngine::AudioSource::set_bypassEffects(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::set_bypassEffects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bypassEffects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.set_bypassReverbZones
void UnityEngine::AudioSource::set_bypassReverbZones(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::set_bypassReverbZones");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bypassReverbZones", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.set_dopplerLevel
void UnityEngine::AudioSource::set_dopplerLevel(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::set_dopplerLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dopplerLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.set_spread
void UnityEngine::AudioSource::set_spread(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::set_spread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.set_priority
void UnityEngine::AudioSource::set_priority(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::set_priority");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_priority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.set_minDistance
void UnityEngine::AudioSource::set_minDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::set_minDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_minDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AudioSource.GetSpectrumData
void UnityEngine::AudioSource::GetSpectrumData(::Array<float>* samples, int channel, UnityEngine::FFTWindow window) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioSource::GetSpectrumData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpectrumData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samples), ::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(window)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, samples, channel, window);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AudioLowPassFilter
#include "UnityEngine/AudioLowPassFilter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AudioLowPassFilter.get_cutoffFrequency
float UnityEngine::AudioLowPassFilter::get_cutoffFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioLowPassFilter::get_cutoffFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cutoffFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AudioLowPassFilter.set_cutoffFrequency
void UnityEngine::AudioLowPassFilter::set_cutoffFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AudioLowPassFilter::set_cutoffFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cutoffFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Audio.AudioClipPlayable
#include "UnityEngine/Audio/AudioClipPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.Create
UnityEngine::Audio::AudioClipPlayable UnityEngine::Audio::AudioClipPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::AudioClip* clip, bool looping) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioClipPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioClipPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(looping)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Audio::AudioClipPlayable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, clip, looping);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.CreateHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Audio::AudioClipPlayable::CreateHandle(UnityEngine::Playables::PlayableGraph graph, UnityEngine::AudioClip* clip, bool looping) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioClipPlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioClipPlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(looping)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, clip, looping);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.GetHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Audio::AudioClipPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioClipPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.op_Explicit
UnityEngine::Audio::AudioClipPlayable::AudioClipPlayable(UnityEngine::Playables::Playable& playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioClipPlayable::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioClipPlayable", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  *this = ::il2cpp_utils::RunMethodThrow<UnityEngine::Audio::AudioClipPlayable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.Equals
bool UnityEngine::Audio::AudioClipPlayable::Equals(UnityEngine::Audio::AudioClipPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioClipPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetVolume
void UnityEngine::Audio::AudioClipPlayable::SetVolume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioClipPlayable::SetVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetStereoPan
void UnityEngine::Audio::AudioClipPlayable::SetStereoPan(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioClipPlayable::SetStereoPan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStereoPan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetSpatialBlend
void UnityEngine::Audio::AudioClipPlayable::SetSpatialBlend(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioClipPlayable::SetSpatialBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetSpatialBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.Seek
void UnityEngine::Audio::AudioClipPlayable::Seek(double startTime, double startDelay, double duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioClipPlayable::Seek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTime), ::il2cpp_utils::ExtractType(startDelay), ::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, startTime, startDelay, duration);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetVolumeInternal
void UnityEngine::Audio::AudioClipPlayable::SetVolumeInternal(UnityEngine::Playables::PlayableHandle& hdl, float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioClipPlayable::SetVolumeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioClipPlayable", "SetVolumeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hdl), ::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hdl, volume);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetStereoPanInternal
void UnityEngine::Audio::AudioClipPlayable::SetStereoPanInternal(UnityEngine::Playables::PlayableHandle& hdl, float stereoPan) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioClipPlayable::SetStereoPanInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioClipPlayable", "SetStereoPanInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hdl), ::il2cpp_utils::ExtractType(stereoPan)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hdl, stereoPan);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetSpatialBlendInternal
void UnityEngine::Audio::AudioClipPlayable::SetSpatialBlendInternal(UnityEngine::Playables::PlayableHandle& hdl, float spatialBlend) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioClipPlayable::SetSpatialBlendInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioClipPlayable", "SetSpatialBlendInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hdl), ::il2cpp_utils::ExtractType(spatialBlend)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hdl, spatialBlend);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetStartDelayInternal
void UnityEngine::Audio::AudioClipPlayable::SetStartDelayInternal(UnityEngine::Playables::PlayableHandle& hdl, double delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioClipPlayable::SetStartDelayInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioClipPlayable", "SetStartDelayInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hdl), ::il2cpp_utils::ExtractType(delay)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hdl, delay);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.SetPauseDelayInternal
void UnityEngine::Audio::AudioClipPlayable::SetPauseDelayInternal(UnityEngine::Playables::PlayableHandle& hdl, double delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioClipPlayable::SetPauseDelayInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioClipPlayable", "SetPauseDelayInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hdl), ::il2cpp_utils::ExtractType(delay)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hdl, delay);
}
// Autogenerated method: UnityEngine.Audio.AudioClipPlayable.InternalCreateAudioClipPlayable
bool UnityEngine::Audio::AudioClipPlayable::InternalCreateAudioClipPlayable(UnityEngine::Playables::PlayableGraph& graph, UnityEngine::AudioClip* clip, bool looping, UnityEngine::Playables::PlayableHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioClipPlayable::InternalCreateAudioClipPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioClipPlayable", "InternalCreateAudioClipPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(looping), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, clip, looping, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Audio.AudioMixerUpdateMode
#include "UnityEngine/Audio/AudioMixerUpdateMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Audio.AudioMixerUpdateMode Normal
UnityEngine::Audio::AudioMixerUpdateMode UnityEngine::Audio::AudioMixerUpdateMode::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioMixerUpdateMode::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Audio::AudioMixerUpdateMode>("UnityEngine.Audio", "AudioMixerUpdateMode", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Audio.AudioMixerUpdateMode Normal
void UnityEngine::Audio::AudioMixerUpdateMode::_set_Normal(UnityEngine::Audio::AudioMixerUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioMixerUpdateMode::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Audio", "AudioMixerUpdateMode", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Audio.AudioMixerUpdateMode UnscaledTime
UnityEngine::Audio::AudioMixerUpdateMode UnityEngine::Audio::AudioMixerUpdateMode::_get_UnscaledTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioMixerUpdateMode::_get_UnscaledTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Audio::AudioMixerUpdateMode>("UnityEngine.Audio", "AudioMixerUpdateMode", "UnscaledTime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Audio.AudioMixerUpdateMode UnscaledTime
void UnityEngine::Audio::AudioMixerUpdateMode::_set_UnscaledTime(UnityEngine::Audio::AudioMixerUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioMixerUpdateMode::_set_UnscaledTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Audio", "AudioMixerUpdateMode", "UnscaledTime", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Audio.AudioMixer
#include "UnityEngine/Audio/AudioMixer.hpp"
// Including type: UnityEngine.Audio.AudioMixerUpdateMode
#include "UnityEngine/Audio/AudioMixerUpdateMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Audio.AudioMixer.set_updateMode
void UnityEngine::Audio::AudioMixer::set_updateMode(UnityEngine::Audio::AudioMixerUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioMixer::set_updateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_updateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Audio.AudioMixer.SetFloat
bool UnityEngine::Audio::AudioMixer::SetFloat(::Il2CppString* name, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioMixer::SetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Audio.AudioMixer.GetFloat
bool UnityEngine::Audio::AudioMixer::GetFloat(::Il2CppString* name, float& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioMixer::GetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, name, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Audio.AudioMixerPlayable
#include "UnityEngine/Audio/AudioMixerPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Audio.AudioMixerPlayable.Create
UnityEngine::Audio::AudioMixerPlayable UnityEngine::Audio::AudioMixerPlayable::Create(UnityEngine::Playables::PlayableGraph graph, int inputCount, bool normalizeInputVolumes) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioMixerPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioMixerPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(normalizeInputVolumes)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Audio::AudioMixerPlayable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, inputCount, normalizeInputVolumes);
}
// Autogenerated method: UnityEngine.Audio.AudioMixerPlayable.CreateHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Audio::AudioMixerPlayable::CreateHandle(UnityEngine::Playables::PlayableGraph graph, int inputCount, bool normalizeInputVolumes) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioMixerPlayable::CreateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioMixerPlayable", "CreateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(normalizeInputVolumes)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, inputCount, normalizeInputVolumes);
}
// Autogenerated method: UnityEngine.Audio.AudioMixerPlayable.GetHandle
UnityEngine::Playables::PlayableHandle UnityEngine::Audio::AudioMixerPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioMixerPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableHandle, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Audio.AudioMixerPlayable.Equals
bool UnityEngine::Audio::AudioMixerPlayable::Equals(UnityEngine::Audio::AudioMixerPlayable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioMixerPlayable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Audio.AudioMixerPlayable.CreateAudioMixerPlayableInternal
bool UnityEngine::Audio::AudioMixerPlayable::CreateAudioMixerPlayableInternal(UnityEngine::Playables::PlayableGraph& graph, bool normalizeInputVolumes, UnityEngine::Playables::PlayableHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioMixerPlayable::CreateAudioMixerPlayableInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioMixerPlayable", "CreateAudioMixerPlayableInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(normalizeInputVolumes), ::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, normalizeInputVolumes, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Audio.AudioPlayableBinding
#include "UnityEngine/Audio/AudioPlayableBinding.hpp"
// Including type: UnityEngine.Playables.PlayableBinding
#include "UnityEngine/Playables/PlayableBinding.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Audio.AudioPlayableBinding.Create
UnityEngine::Playables::PlayableBinding UnityEngine::Audio::AudioPlayableBinding::Create(::Il2CppString* name, UnityEngine::Object* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioPlayableBinding::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableBinding", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableBinding, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, key);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableBinding.CreateAudioOutput
UnityEngine::Playables::PlayableOutput UnityEngine::Audio::AudioPlayableBinding::CreateAudioOutput(UnityEngine::Playables::PlayableGraph graph, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioPlayableBinding::CreateAudioOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableBinding", "CreateAudioOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableOutput, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Audio.AudioPlayableGraphExtensions
#include "UnityEngine/Audio/AudioPlayableGraphExtensions.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.PlayableOutputHandle
#include "UnityEngine/Playables/PlayableOutputHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Audio.AudioPlayableGraphExtensions.InternalCreateAudioOutput
bool UnityEngine::Audio::AudioPlayableGraphExtensions::InternalCreateAudioOutput(UnityEngine::Playables::PlayableGraph& graph, ::Il2CppString* name, UnityEngine::Playables::PlayableOutputHandle& handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioPlayableGraphExtensions::InternalCreateAudioOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableGraphExtensions", "InternalCreateAudioOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::PlayableOutputHandle&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, name, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Audio.AudioPlayableOutput
#include "UnityEngine/Audio/AudioPlayableOutput.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.Create
UnityEngine::Audio::AudioPlayableOutput UnityEngine::Audio::AudioPlayableOutput::Create(UnityEngine::Playables::PlayableGraph graph, ::Il2CppString* name, UnityEngine::AudioSource* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioPlayableOutput::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableOutput", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Audio::AudioPlayableOutput, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, name, target);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.get_Null
UnityEngine::Audio::AudioPlayableOutput UnityEngine::Audio::AudioPlayableOutput::get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioPlayableOutput::get_Null");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableOutput", "get_Null", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Audio::AudioPlayableOutput, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.GetHandle
UnityEngine::Playables::PlayableOutputHandle UnityEngine::Audio::AudioPlayableOutput::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioPlayableOutput::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableOutputHandle, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.op_Explicit
UnityEngine::Audio::AudioPlayableOutput::AudioPlayableOutput(UnityEngine::Playables::PlayableOutput& output) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioPlayableOutput::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableOutput", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  *this = ::il2cpp_utils::RunMethodThrow<UnityEngine::Audio::AudioPlayableOutput, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, output);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.SetTarget
void UnityEngine::Audio::AudioPlayableOutput::SetTarget(UnityEngine::AudioSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioPlayableOutput::SetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.SetEvaluateOnSeek
void UnityEngine::Audio::AudioPlayableOutput::SetEvaluateOnSeek(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioPlayableOutput::SetEvaluateOnSeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetEvaluateOnSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.InternalSetTarget
void UnityEngine::Audio::AudioPlayableOutput::InternalSetTarget(UnityEngine::Playables::PlayableOutputHandle& output, UnityEngine::AudioSource* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioPlayableOutput::InternalSetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableOutput", "InternalSetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, output, target);
}
// Autogenerated method: UnityEngine.Audio.AudioPlayableOutput.InternalSetEvaluateOnSeek
void UnityEngine::Audio::AudioPlayableOutput::InternalSetEvaluateOnSeek(UnityEngine::Playables::PlayableOutputHandle& output, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Audio::AudioPlayableOutput::InternalSetEvaluateOnSeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Audio", "AudioPlayableOutput", "InternalSetEvaluateOnSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, output, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.Audio.AudioSampleProvider
#include "UnityEngine/Experimental/Audio/AudioSampleProvider.hpp"
// Including type: UnityEngine.Experimental.Audio.AudioSampleProvider/SampleFramesHandler
#include "UnityEngine/Experimental/Audio/AudioSampleProvider_SampleFramesHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.Audio.AudioSampleProvider.InvokeSampleFramesAvailable
void UnityEngine::Experimental::Audio::AudioSampleProvider::InvokeSampleFramesAvailable(int sampleFrameCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Experimental::Audio::AudioSampleProvider::InvokeSampleFramesAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSampleFramesAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleFrameCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sampleFrameCount);
}
// Autogenerated method: UnityEngine.Experimental.Audio.AudioSampleProvider.InvokeSampleFramesOverflow
void UnityEngine::Experimental::Audio::AudioSampleProvider::InvokeSampleFramesOverflow(int droppedSampleFrameCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Experimental::Audio::AudioSampleProvider::InvokeSampleFramesOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSampleFramesOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(droppedSampleFrameCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, droppedSampleFrameCount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Experimental.Audio.AudioSampleProvider/SampleFramesHandler
#include "UnityEngine/Experimental/Audio/AudioSampleProvider_SampleFramesHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.Audio.AudioSampleProvider/SampleFramesHandler.Invoke
void UnityEngine::Experimental::Audio::AudioSampleProvider::SampleFramesHandler::Invoke(UnityEngine::Experimental::Audio::AudioSampleProvider* provider, uint sampleFrameCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Experimental::Audio::AudioSampleProvider::SampleFramesHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(sampleFrameCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, provider, sampleFrameCount);
}
// Autogenerated method: UnityEngine.Experimental.Audio.AudioSampleProvider/SampleFramesHandler.BeginInvoke
System::IAsyncResult* UnityEngine::Experimental::Audio::AudioSampleProvider::SampleFramesHandler::BeginInvoke(UnityEngine::Experimental::Audio::AudioSampleProvider* provider, uint sampleFrameCount, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Experimental::Audio::AudioSampleProvider::SampleFramesHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(sampleFrameCount), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, provider, sampleFrameCount, callback, object);
}
// Autogenerated method: UnityEngine.Experimental.Audio.AudioSampleProvider/SampleFramesHandler.EndInvoke
void UnityEngine::Experimental::Audio::AudioSampleProvider::SampleFramesHandler::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Experimental::Audio::AudioSampleProvider::SampleFramesHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngineInternal.MathfInternal
#include "UnityEngineInternal/MathfInternal.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single FloatMinNormal
float UnityEngineInternal::MathfInternal::_get_FloatMinNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::MathfInternal::_get_FloatMinNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngineInternal", "MathfInternal", "FloatMinNormal"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FloatMinNormal
void UnityEngineInternal::MathfInternal::_set_FloatMinNormal(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::MathfInternal::_set_FloatMinNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal", "MathfInternal", "FloatMinNormal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single FloatMinDenormal
float UnityEngineInternal::MathfInternal::_get_FloatMinDenormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::MathfInternal::_get_FloatMinDenormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngineInternal", "MathfInternal", "FloatMinDenormal"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FloatMinDenormal
void UnityEngineInternal::MathfInternal::_set_FloatMinDenormal(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::MathfInternal::_set_FloatMinDenormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal", "MathfInternal", "FloatMinDenormal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean IsFlushToZeroEnabled
bool UnityEngineInternal::MathfInternal::_get_IsFlushToZeroEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::MathfInternal::_get_IsFlushToZeroEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngineInternal", "MathfInternal", "IsFlushToZeroEnabled"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean IsFlushToZeroEnabled
void UnityEngineInternal::MathfInternal::_set_IsFlushToZeroEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::MathfInternal::_set_IsFlushToZeroEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal", "MathfInternal", "IsFlushToZeroEnabled", value));
}
// Autogenerated method: UnityEngineInternal.MathfInternal..cctor
void UnityEngineInternal::MathfInternal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::MathfInternal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngineInternal", "MathfInternal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngineInternal.TypeInferenceRules
#include "UnityEngineInternal/TypeInferenceRules.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngineInternal.TypeInferenceRules TypeReferencedByFirstArgument
UnityEngineInternal::TypeInferenceRules UnityEngineInternal::TypeInferenceRules::_get_TypeReferencedByFirstArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::TypeInferenceRules::_get_TypeReferencedByFirstArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngineInternal::TypeInferenceRules>("UnityEngineInternal", "TypeInferenceRules", "TypeReferencedByFirstArgument"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngineInternal.TypeInferenceRules TypeReferencedByFirstArgument
void UnityEngineInternal::TypeInferenceRules::_set_TypeReferencedByFirstArgument(UnityEngineInternal::TypeInferenceRules value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::TypeInferenceRules::_set_TypeReferencedByFirstArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal", "TypeInferenceRules", "TypeReferencedByFirstArgument", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngineInternal.TypeInferenceRules TypeReferencedBySecondArgument
UnityEngineInternal::TypeInferenceRules UnityEngineInternal::TypeInferenceRules::_get_TypeReferencedBySecondArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::TypeInferenceRules::_get_TypeReferencedBySecondArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngineInternal::TypeInferenceRules>("UnityEngineInternal", "TypeInferenceRules", "TypeReferencedBySecondArgument"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngineInternal.TypeInferenceRules TypeReferencedBySecondArgument
void UnityEngineInternal::TypeInferenceRules::_set_TypeReferencedBySecondArgument(UnityEngineInternal::TypeInferenceRules value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::TypeInferenceRules::_set_TypeReferencedBySecondArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal", "TypeInferenceRules", "TypeReferencedBySecondArgument", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngineInternal.TypeInferenceRules ArrayOfTypeReferencedByFirstArgument
UnityEngineInternal::TypeInferenceRules UnityEngineInternal::TypeInferenceRules::_get_ArrayOfTypeReferencedByFirstArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::TypeInferenceRules::_get_ArrayOfTypeReferencedByFirstArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngineInternal::TypeInferenceRules>("UnityEngineInternal", "TypeInferenceRules", "ArrayOfTypeReferencedByFirstArgument"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngineInternal.TypeInferenceRules ArrayOfTypeReferencedByFirstArgument
void UnityEngineInternal::TypeInferenceRules::_set_ArrayOfTypeReferencedByFirstArgument(UnityEngineInternal::TypeInferenceRules value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::TypeInferenceRules::_set_ArrayOfTypeReferencedByFirstArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal", "TypeInferenceRules", "ArrayOfTypeReferencedByFirstArgument", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngineInternal.TypeInferenceRules TypeOfFirstArgument
UnityEngineInternal::TypeInferenceRules UnityEngineInternal::TypeInferenceRules::_get_TypeOfFirstArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::TypeInferenceRules::_get_TypeOfFirstArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngineInternal::TypeInferenceRules>("UnityEngineInternal", "TypeInferenceRules", "TypeOfFirstArgument"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngineInternal.TypeInferenceRules TypeOfFirstArgument
void UnityEngineInternal::TypeInferenceRules::_set_TypeOfFirstArgument(UnityEngineInternal::TypeInferenceRules value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::TypeInferenceRules::_set_TypeOfFirstArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal", "TypeInferenceRules", "TypeOfFirstArgument", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngineInternal.TypeInferenceRuleAttribute
#include "UnityEngineInternal/TypeInferenceRuleAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngineInternal.TypeInferenceRuleAttribute.ToString
::Il2CppString* UnityEngineInternal::TypeInferenceRuleAttribute::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngineInternal::TypeInferenceRuleAttribute::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngineInternal.GenericStack
#include "UnityEngineInternal/GenericStack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Jobs.JobHandle
#include "Unity/Jobs/JobHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.Jobs.JobHandle.ScheduleBatchedJobs
void Unity::Jobs::JobHandle::ScheduleBatchedJobs() {
  static auto ___internal__logger = ::Logger::get().WithContext("Unity::Jobs::JobHandle::ScheduleBatchedJobs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.Jobs", "JobHandle", "ScheduleBatchedJobs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Collections.Allocator
#include "Unity/Collections/Allocator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Unity.Collections.Allocator Invalid
Unity::Collections::Allocator Unity::Collections::Allocator::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Unity::Collections::Allocator::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Unity::Collections::Allocator>("Unity.Collections", "Allocator", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public Unity.Collections.Allocator Invalid
void Unity::Collections::Allocator::_set_Invalid(Unity::Collections::Allocator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Unity::Collections::Allocator::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.Collections", "Allocator", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.Collections.Allocator None
Unity::Collections::Allocator Unity::Collections::Allocator::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Unity::Collections::Allocator::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Unity::Collections::Allocator>("Unity.Collections", "Allocator", "None"));
}
// Autogenerated static field setter
// Set static field: static public Unity.Collections.Allocator None
void Unity::Collections::Allocator::_set_None(Unity::Collections::Allocator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Unity::Collections::Allocator::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.Collections", "Allocator", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.Collections.Allocator Temp
Unity::Collections::Allocator Unity::Collections::Allocator::_get_Temp() {
  static auto ___internal__logger = ::Logger::get().WithContext("Unity::Collections::Allocator::_get_Temp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Unity::Collections::Allocator>("Unity.Collections", "Allocator", "Temp"));
}
// Autogenerated static field setter
// Set static field: static public Unity.Collections.Allocator Temp
void Unity::Collections::Allocator::_set_Temp(Unity::Collections::Allocator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Unity::Collections::Allocator::_set_Temp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.Collections", "Allocator", "Temp", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.Collections.Allocator TempJob
Unity::Collections::Allocator Unity::Collections::Allocator::_get_TempJob() {
  static auto ___internal__logger = ::Logger::get().WithContext("Unity::Collections::Allocator::_get_TempJob");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Unity::Collections::Allocator>("Unity.Collections", "Allocator", "TempJob"));
}
// Autogenerated static field setter
// Set static field: static public Unity.Collections.Allocator TempJob
void Unity::Collections::Allocator::_set_TempJob(Unity::Collections::Allocator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Unity::Collections::Allocator::_set_TempJob");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.Collections", "Allocator", "TempJob", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.Collections.Allocator Persistent
Unity::Collections::Allocator Unity::Collections::Allocator::_get_Persistent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Unity::Collections::Allocator::_get_Persistent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Unity::Collections::Allocator>("Unity.Collections", "Allocator", "Persistent"));
}
// Autogenerated static field setter
// Set static field: static public Unity.Collections.Allocator Persistent
void Unity::Collections::Allocator::_set_Persistent(Unity::Collections::Allocator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Unity::Collections::Allocator::_set_Persistent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.Collections", "Allocator", "Persistent", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.Collections.Allocator AudioKernel
Unity::Collections::Allocator Unity::Collections::Allocator::_get_AudioKernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("Unity::Collections::Allocator::_get_AudioKernel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Unity::Collections::Allocator>("Unity.Collections", "Allocator", "AudioKernel"));
}
// Autogenerated static field setter
// Set static field: static public Unity.Collections.Allocator AudioKernel
void Unity::Collections::Allocator::_set_AudioKernel(Unity::Collections::Allocator value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Unity::Collections::Allocator::_set_AudioKernel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.Collections", "Allocator", "AudioKernel", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Collections.NativeLeakDetection
#include "Unity/Collections/NativeLeakDetection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 s_NativeLeakDetectionMode
int Unity::Collections::NativeLeakDetection::_get_s_NativeLeakDetectionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Unity::Collections::NativeLeakDetection::_get_s_NativeLeakDetectionMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Unity.Collections", "NativeLeakDetection", "s_NativeLeakDetectionMode"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_NativeLeakDetectionMode
void Unity::Collections::NativeLeakDetection::_set_s_NativeLeakDetectionMode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Unity::Collections::NativeLeakDetection::_set_s_NativeLeakDetectionMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.Collections", "NativeLeakDetection", "s_NativeLeakDetectionMode", value));
}
// Autogenerated method: Unity.Collections.NativeLeakDetection.Initialize
void Unity::Collections::NativeLeakDetection::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Unity::Collections::NativeLeakDetection::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.Collections", "NativeLeakDetection", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Collections.LowLevel.Unsafe.NativeContainerAttribute
#include "Unity/Collections/LowLevel/Unsafe/NativeContainerAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Collections.LowLevel.Unsafe.NativeContainerSupportsMinMaxWriteRestrictionAttribute
#include "Unity/Collections/LowLevel/Unsafe/NativeContainerSupportsMinMaxWriteRestrictionAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Collections.LowLevel.Unsafe.NativeContainerSupportsDeallocateOnJobCompletionAttribute
#include "Unity/Collections/LowLevel/Unsafe/NativeContainerSupportsDeallocateOnJobCompletionAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Collections.LowLevel.Unsafe.NativeContainerSupportsDeferredConvertListToArray
#include "Unity/Collections/LowLevel/Unsafe/NativeContainerSupportsDeferredConvertListToArray.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Collections.LowLevel.Unsafe.WriteAccessRequiredAttribute
#include "Unity/Collections/LowLevel/Unsafe/WriteAccessRequiredAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Collections.LowLevel.Unsafe.NativeDisableUnsafePtrRestrictionAttribute
#include "Unity/Collections/LowLevel/Unsafe/NativeDisableUnsafePtrRestrictionAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Collections.LowLevel.Unsafe.NativeArrayUnsafeUtility
#include "Unity/Collections/LowLevel/Unsafe/NativeArrayUnsafeUtility.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Collections.LowLevel.Unsafe.UnsafeUtility
#include "Unity/Collections/LowLevel/Unsafe/UnsafeUtility.hpp"
// Including type: Unity.Collections.Allocator
#include "Unity/Collections/Allocator.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.Collections.LowLevel.Unsafe.UnsafeUtility.Free
void Unity::Collections::LowLevel::Unsafe::UnsafeUtility::Free(void* memory, Unity::Collections::Allocator allocator) {
  static auto ___internal__logger = ::Logger::get().WithContext("Unity::Collections::LowLevel::Unsafe::UnsafeUtility::Free");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.Collections.LowLevel.Unsafe", "UnsafeUtility", "Free", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memory), ::il2cpp_utils::ExtractType(allocator)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, memory, allocator);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: JetBrains.Annotations.NotNullAttribute
#include "JetBrains/Annotations/NotNullAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: JetBrains.Annotations.UsedImplicitlyAttribute
#include "JetBrains/Annotations/UsedImplicitlyAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: JetBrains.Annotations.ImplicitUseKindFlags
#include "JetBrains/Annotations/ImplicitUseKindFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public JetBrains.Annotations.ImplicitUseKindFlags Default
JetBrains::Annotations::ImplicitUseKindFlags JetBrains::Annotations::ImplicitUseKindFlags::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("JetBrains::Annotations::ImplicitUseKindFlags::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<JetBrains::Annotations::ImplicitUseKindFlags>("JetBrains.Annotations", "ImplicitUseKindFlags", "Default"));
}
// Autogenerated static field setter
// Set static field: static public JetBrains.Annotations.ImplicitUseKindFlags Default
void JetBrains::Annotations::ImplicitUseKindFlags::_set_Default(JetBrains::Annotations::ImplicitUseKindFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("JetBrains::Annotations::ImplicitUseKindFlags::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("JetBrains.Annotations", "ImplicitUseKindFlags", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public JetBrains.Annotations.ImplicitUseKindFlags Access
JetBrains::Annotations::ImplicitUseKindFlags JetBrains::Annotations::ImplicitUseKindFlags::_get_Access() {
  static auto ___internal__logger = ::Logger::get().WithContext("JetBrains::Annotations::ImplicitUseKindFlags::_get_Access");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<JetBrains::Annotations::ImplicitUseKindFlags>("JetBrains.Annotations", "ImplicitUseKindFlags", "Access"));
}
// Autogenerated static field setter
// Set static field: static public JetBrains.Annotations.ImplicitUseKindFlags Access
void JetBrains::Annotations::ImplicitUseKindFlags::_set_Access(JetBrains::Annotations::ImplicitUseKindFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("JetBrains::Annotations::ImplicitUseKindFlags::_set_Access");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("JetBrains.Annotations", "ImplicitUseKindFlags", "Access", value));
}
// Autogenerated static field getter
// Get static field: static public JetBrains.Annotations.ImplicitUseKindFlags Assign
JetBrains::Annotations::ImplicitUseKindFlags JetBrains::Annotations::ImplicitUseKindFlags::_get_Assign() {
  static auto ___internal__logger = ::Logger::get().WithContext("JetBrains::Annotations::ImplicitUseKindFlags::_get_Assign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<JetBrains::Annotations::ImplicitUseKindFlags>("JetBrains.Annotations", "ImplicitUseKindFlags", "Assign"));
}
// Autogenerated static field setter
// Set static field: static public JetBrains.Annotations.ImplicitUseKindFlags Assign
void JetBrains::Annotations::ImplicitUseKindFlags::_set_Assign(JetBrains::Annotations::ImplicitUseKindFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("JetBrains::Annotations::ImplicitUseKindFlags::_set_Assign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("JetBrains.Annotations", "ImplicitUseKindFlags", "Assign", value));
}
// Autogenerated static field getter
// Get static field: static public JetBrains.Annotations.ImplicitUseKindFlags InstantiatedWithFixedConstructorSignature
JetBrains::Annotations::ImplicitUseKindFlags JetBrains::Annotations::ImplicitUseKindFlags::_get_InstantiatedWithFixedConstructorSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("JetBrains::Annotations::ImplicitUseKindFlags::_get_InstantiatedWithFixedConstructorSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<JetBrains::Annotations::ImplicitUseKindFlags>("JetBrains.Annotations", "ImplicitUseKindFlags", "InstantiatedWithFixedConstructorSignature"));
}
// Autogenerated static field setter
// Set static field: static public JetBrains.Annotations.ImplicitUseKindFlags InstantiatedWithFixedConstructorSignature
void JetBrains::Annotations::ImplicitUseKindFlags::_set_InstantiatedWithFixedConstructorSignature(JetBrains::Annotations::ImplicitUseKindFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("JetBrains::Annotations::ImplicitUseKindFlags::_set_InstantiatedWithFixedConstructorSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("JetBrains.Annotations", "ImplicitUseKindFlags", "InstantiatedWithFixedConstructorSignature", value));
}
// Autogenerated static field getter
// Get static field: static public JetBrains.Annotations.ImplicitUseKindFlags InstantiatedNoFixedConstructorSignature
JetBrains::Annotations::ImplicitUseKindFlags JetBrains::Annotations::ImplicitUseKindFlags::_get_InstantiatedNoFixedConstructorSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("JetBrains::Annotations::ImplicitUseKindFlags::_get_InstantiatedNoFixedConstructorSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<JetBrains::Annotations::ImplicitUseKindFlags>("JetBrains.Annotations", "ImplicitUseKindFlags", "InstantiatedNoFixedConstructorSignature"));
}
// Autogenerated static field setter
// Set static field: static public JetBrains.Annotations.ImplicitUseKindFlags InstantiatedNoFixedConstructorSignature
void JetBrains::Annotations::ImplicitUseKindFlags::_set_InstantiatedNoFixedConstructorSignature(JetBrains::Annotations::ImplicitUseKindFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("JetBrains::Annotations::ImplicitUseKindFlags::_set_InstantiatedNoFixedConstructorSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("JetBrains.Annotations", "ImplicitUseKindFlags", "InstantiatedNoFixedConstructorSignature", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: JetBrains.Annotations.ImplicitUseTargetFlags
#include "JetBrains/Annotations/ImplicitUseTargetFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public JetBrains.Annotations.ImplicitUseTargetFlags Default
JetBrains::Annotations::ImplicitUseTargetFlags JetBrains::Annotations::ImplicitUseTargetFlags::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("JetBrains::Annotations::ImplicitUseTargetFlags::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<JetBrains::Annotations::ImplicitUseTargetFlags>("JetBrains.Annotations", "ImplicitUseTargetFlags", "Default"));
}
// Autogenerated static field setter
// Set static field: static public JetBrains.Annotations.ImplicitUseTargetFlags Default
void JetBrains::Annotations::ImplicitUseTargetFlags::_set_Default(JetBrains::Annotations::ImplicitUseTargetFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("JetBrains::Annotations::ImplicitUseTargetFlags::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("JetBrains.Annotations", "ImplicitUseTargetFlags", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public JetBrains.Annotations.ImplicitUseTargetFlags Itself
JetBrains::Annotations::ImplicitUseTargetFlags JetBrains::Annotations::ImplicitUseTargetFlags::_get_Itself() {
  static auto ___internal__logger = ::Logger::get().WithContext("JetBrains::Annotations::ImplicitUseTargetFlags::_get_Itself");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<JetBrains::Annotations::ImplicitUseTargetFlags>("JetBrains.Annotations", "ImplicitUseTargetFlags", "Itself"));
}
// Autogenerated static field setter
// Set static field: static public JetBrains.Annotations.ImplicitUseTargetFlags Itself
void JetBrains::Annotations::ImplicitUseTargetFlags::_set_Itself(JetBrains::Annotations::ImplicitUseTargetFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("JetBrains::Annotations::ImplicitUseTargetFlags::_set_Itself");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("JetBrains.Annotations", "ImplicitUseTargetFlags", "Itself", value));
}
// Autogenerated static field getter
// Get static field: static public JetBrains.Annotations.ImplicitUseTargetFlags Members
JetBrains::Annotations::ImplicitUseTargetFlags JetBrains::Annotations::ImplicitUseTargetFlags::_get_Members() {
  static auto ___internal__logger = ::Logger::get().WithContext("JetBrains::Annotations::ImplicitUseTargetFlags::_get_Members");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<JetBrains::Annotations::ImplicitUseTargetFlags>("JetBrains.Annotations", "ImplicitUseTargetFlags", "Members"));
}
// Autogenerated static field setter
// Set static field: static public JetBrains.Annotations.ImplicitUseTargetFlags Members
void JetBrains::Annotations::ImplicitUseTargetFlags::_set_Members(JetBrains::Annotations::ImplicitUseTargetFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("JetBrains::Annotations::ImplicitUseTargetFlags::_set_Members");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("JetBrains.Annotations", "ImplicitUseTargetFlags", "Members", value));
}
// Autogenerated static field getter
// Get static field: static public JetBrains.Annotations.ImplicitUseTargetFlags WithMembers
JetBrains::Annotations::ImplicitUseTargetFlags JetBrains::Annotations::ImplicitUseTargetFlags::_get_WithMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("JetBrains::Annotations::ImplicitUseTargetFlags::_get_WithMembers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<JetBrains::Annotations::ImplicitUseTargetFlags>("JetBrains.Annotations", "ImplicitUseTargetFlags", "WithMembers"));
}
// Autogenerated static field setter
// Set static field: static public JetBrains.Annotations.ImplicitUseTargetFlags WithMembers
void JetBrains::Annotations::ImplicitUseTargetFlags::_set_WithMembers(JetBrains::Annotations::ImplicitUseTargetFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("JetBrains::Annotations::ImplicitUseTargetFlags::_set_WithMembers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("JetBrains.Annotations", "ImplicitUseTargetFlags", "WithMembers", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SendMessageOptions
#include "UnityEngine/SendMessageOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SendMessageOptions RequireReceiver
UnityEngine::SendMessageOptions UnityEngine::SendMessageOptions::_get_RequireReceiver() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SendMessageOptions::_get_RequireReceiver");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::SendMessageOptions>("UnityEngine", "SendMessageOptions", "RequireReceiver"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SendMessageOptions RequireReceiver
void UnityEngine::SendMessageOptions::_set_RequireReceiver(UnityEngine::SendMessageOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SendMessageOptions::_set_RequireReceiver");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SendMessageOptions", "RequireReceiver", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SendMessageOptions DontRequireReceiver
UnityEngine::SendMessageOptions UnityEngine::SendMessageOptions::_get_DontRequireReceiver() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SendMessageOptions::_get_DontRequireReceiver");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::SendMessageOptions>("UnityEngine", "SendMessageOptions", "DontRequireReceiver"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SendMessageOptions DontRequireReceiver
void UnityEngine::SendMessageOptions::_set_DontRequireReceiver(UnityEngine::SendMessageOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SendMessageOptions::_set_DontRequireReceiver");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SendMessageOptions", "DontRequireReceiver", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.PrimitiveType
#include "UnityEngine/PrimitiveType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.PrimitiveType Sphere
UnityEngine::PrimitiveType UnityEngine::PrimitiveType::_get_Sphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PrimitiveType::_get_Sphere");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::PrimitiveType>("UnityEngine", "PrimitiveType", "Sphere"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PrimitiveType Sphere
void UnityEngine::PrimitiveType::_set_Sphere(UnityEngine::PrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PrimitiveType::_set_Sphere");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PrimitiveType", "Sphere", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.PrimitiveType Capsule
UnityEngine::PrimitiveType UnityEngine::PrimitiveType::_get_Capsule() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PrimitiveType::_get_Capsule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::PrimitiveType>("UnityEngine", "PrimitiveType", "Capsule"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PrimitiveType Capsule
void UnityEngine::PrimitiveType::_set_Capsule(UnityEngine::PrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PrimitiveType::_set_Capsule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PrimitiveType", "Capsule", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.PrimitiveType Cylinder
UnityEngine::PrimitiveType UnityEngine::PrimitiveType::_get_Cylinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PrimitiveType::_get_Cylinder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::PrimitiveType>("UnityEngine", "PrimitiveType", "Cylinder"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PrimitiveType Cylinder
void UnityEngine::PrimitiveType::_set_Cylinder(UnityEngine::PrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PrimitiveType::_set_Cylinder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PrimitiveType", "Cylinder", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.PrimitiveType Cube
UnityEngine::PrimitiveType UnityEngine::PrimitiveType::_get_Cube() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PrimitiveType::_get_Cube");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::PrimitiveType>("UnityEngine", "PrimitiveType", "Cube"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PrimitiveType Cube
void UnityEngine::PrimitiveType::_set_Cube(UnityEngine::PrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PrimitiveType::_set_Cube");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PrimitiveType", "Cube", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.PrimitiveType Plane
UnityEngine::PrimitiveType UnityEngine::PrimitiveType::_get_Plane() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PrimitiveType::_get_Plane");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::PrimitiveType>("UnityEngine", "PrimitiveType", "Plane"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PrimitiveType Plane
void UnityEngine::PrimitiveType::_set_Plane(UnityEngine::PrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PrimitiveType::_set_Plane");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PrimitiveType", "Plane", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.PrimitiveType Quad
UnityEngine::PrimitiveType UnityEngine::PrimitiveType::_get_Quad() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PrimitiveType::_get_Quad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::PrimitiveType>("UnityEngine", "PrimitiveType", "Quad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.PrimitiveType Quad
void UnityEngine::PrimitiveType::_set_Quad(UnityEngine::PrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::PrimitiveType::_set_Quad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "PrimitiveType", "Quad", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Space
#include "UnityEngine/Space.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Space World
UnityEngine::Space UnityEngine::Space::_get_World() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Space::_get_World");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Space>("UnityEngine", "Space", "World"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Space World
void UnityEngine::Space::_set_World(UnityEngine::Space value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Space::_set_World");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Space", "World", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Space Self
UnityEngine::Space UnityEngine::Space::_get_Self() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Space::_get_Self");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Space>("UnityEngine", "Space", "Self"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Space Self
void UnityEngine::Space::_set_Self(UnityEngine::Space value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Space::_set_Self");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Space", "Self", value));
}
