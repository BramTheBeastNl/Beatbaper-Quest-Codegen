// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_1
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass5_1.hpp"
// Including type: Zenject.PrefabInstantiatorCached
#include "Zenject/PrefabInstantiatorCached.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass5_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabInstantiatorCached prefabCreator
Zenject::PrefabInstantiatorCached* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::_get_prefabCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::_get_prefabCreator");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::PrefabInstantiatorCached*>(___internal__instance, "prefabCreator"));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.PrefabInstantiatorCached prefabCreator
void Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::_set_prefabCreator(Zenject::PrefabInstantiatorCached* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::_set_prefabCreator");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "prefabCreator", value));
}
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_0 CS$<>8__locals1
Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::_get_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::_get_CS$$$8__locals1");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0*>(___internal__instance, "CS$<>8__locals1")));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_0 CS$<>8__locals1
void Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::_set_CS$$$8__locals1(Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::_set_CS$$$8__locals1");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "CS$<>8__locals1", value));
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_1.<FinalizeBindingConcrete>b__1
Zenject::IProvider* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::$FinalizeBindingConcrete$b__1(Zenject::DiContainer* _, System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::<FinalizeBindingConcrete>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingConcrete>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::IProvider*, false>(this, ___internal__method, _, concreteType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass6_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabResourceBindingFinalizer <>4__this
Zenject::PrefabResourceBindingFinalizer* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::_get_$$4__this");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::PrefabResourceBindingFinalizer*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.PrefabResourceBindingFinalizer <>4__this
void Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::_set_$$4__this(Zenject::PrefabResourceBindingFinalizer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::_set_$$4__this");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
Zenject::DiContainer* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::_get_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::_get_container");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::DiContainer*>(___internal__instance, "container"));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.DiContainer container
void Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::_set_container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::_set_container");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "container", value));
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_0.<FinalizeBindingSelf>b__0
Zenject::IProvider* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::$FinalizeBindingSelf$b__0(Zenject::DiContainer* _, System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::<FinalizeBindingSelf>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_1
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass6_1.hpp"
// Including type: Zenject.PrefabInstantiatorCached
#include "Zenject/PrefabInstantiatorCached.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass6_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabInstantiatorCached prefabCreator
Zenject::PrefabInstantiatorCached* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::_get_prefabCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::_get_prefabCreator");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::PrefabInstantiatorCached*>(___internal__instance, "prefabCreator"));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.PrefabInstantiatorCached prefabCreator
void Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::_set_prefabCreator(Zenject::PrefabInstantiatorCached* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::_set_prefabCreator");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "prefabCreator", value));
}
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_0 CS$<>8__locals1
Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::_get_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::_get_CS$$$8__locals1");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0*>(___internal__instance, "CS$<>8__locals1")));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_0 CS$<>8__locals1
void Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::_set_CS$$$8__locals1(Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::_set_CS$$$8__locals1");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "CS$<>8__locals1", value));
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_1.<FinalizeBindingSelf>b__1
Zenject::IProvider* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::$FinalizeBindingSelf$b__1(Zenject::DiContainer* _, System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::<FinalizeBindingSelf>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ProviderBindingFinalizer
#include "Zenject/ProviderBindingFinalizer.hpp"
// Including type: Zenject.ProviderBindingFinalizer/Zenject.<>c
#include "Zenject/ProviderBindingFinalizer_--c.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.BindingInheritanceMethods
#include "Zenject/BindingInheritanceMethods.hpp"
// Including type: Zenject.ScopeTypes
#include "Zenject/ScopeTypes.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.BindInfo <BindInfo>k__BackingField
Zenject::BindInfo* Zenject::ProviderBindingFinalizer::_get_$BindInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::_get_$BindInfo$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::BindInfo*>(___internal__instance, "<BindInfo>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.BindInfo <BindInfo>k__BackingField
void Zenject::ProviderBindingFinalizer::_set_$BindInfo$k__BackingField(Zenject::BindInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::_set_$BindInfo$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<BindInfo>k__BackingField", value));
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.get_BindingInheritanceMethod
Zenject::BindingInheritanceMethods Zenject::ProviderBindingFinalizer::get_BindingInheritanceMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::get_BindingInheritanceMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindingInheritanceMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::BindingInheritanceMethods, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.get_BindInfo
Zenject::BindInfo* Zenject::ProviderBindingFinalizer::get_BindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::get_BindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::BindInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.set_BindInfo
void Zenject::ProviderBindingFinalizer::set_BindInfo(Zenject::BindInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::set_BindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.GetScope
Zenject::ScopeTypes Zenject::ProviderBindingFinalizer::GetScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::GetScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ScopeTypes, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.FinalizeBinding
void Zenject::ProviderBindingFinalizer::FinalizeBinding(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::FinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.OnFinalizeBinding
void Zenject::ProviderBindingFinalizer::OnFinalizeBinding(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::OnFinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.RegisterProvider
void Zenject::ProviderBindingFinalizer::RegisterProvider(Zenject::DiContainer* container, System::Type* contractType, Zenject::IProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::RegisterProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(contractType), ::il2cpp_utils::ExtractType(provider)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container, contractType, provider);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.RegisterProviderPerContract
void Zenject::ProviderBindingFinalizer::RegisterProviderPerContract(Zenject::DiContainer* container, System::Func_3<Zenject::DiContainer*, System::Type*, Zenject::IProvider*>* providerFunc) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::RegisterProviderPerContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterProviderPerContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(providerFunc)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container, providerFunc);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.RegisterProviderForAllContracts
void Zenject::ProviderBindingFinalizer::RegisterProviderForAllContracts(Zenject::DiContainer* container, Zenject::IProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::RegisterProviderForAllContracts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterProviderForAllContracts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(provider)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container, provider);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.RegisterProvidersPerContractAndConcreteType
void Zenject::ProviderBindingFinalizer::RegisterProvidersPerContractAndConcreteType(Zenject::DiContainer* container, System::Collections::Generic::List_1<System::Type*>* concreteTypes, System::Func_3<System::Type*, System::Type*, Zenject::IProvider*>* providerFunc) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::RegisterProvidersPerContractAndConcreteType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterProvidersPerContractAndConcreteType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteTypes), ::il2cpp_utils::ExtractType(providerFunc)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container, concreteTypes, providerFunc);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.ValidateBindTypes
bool Zenject::ProviderBindingFinalizer::ValidateBindTypes(System::Type* concreteType, System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::ValidateBindTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateBindTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteType), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, concreteType, contractType);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.RegisterProvidersForAllContractsPerConcreteType
void Zenject::ProviderBindingFinalizer::RegisterProvidersForAllContractsPerConcreteType(Zenject::DiContainer* container, System::Collections::Generic::List_1<System::Type*>* concreteTypes, System::Func_3<Zenject::DiContainer*, System::Type*, Zenject::IProvider*>* providerFunc) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::RegisterProvidersForAllContractsPerConcreteType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterProvidersForAllContractsPerConcreteType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteTypes), ::il2cpp_utils::ExtractType(providerFunc)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container, concreteTypes, providerFunc);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ProviderBindingFinalizer/Zenject.<>c
#include "Zenject/ProviderBindingFinalizer_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.ProviderBindingFinalizer/Zenject.<>c <>9
Zenject::ProviderBindingFinalizer::$$c* Zenject::ProviderBindingFinalizer::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::ProviderBindingFinalizer::$$c*>("Zenject", "ProviderBindingFinalizer/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.ProviderBindingFinalizer/Zenject.<>c <>9
void Zenject::ProviderBindingFinalizer::$$c::_set_$$9(Zenject::ProviderBindingFinalizer::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ProviderBindingFinalizer/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.String> <>9__7_0
System::Func_2<System::Type*, ::Il2CppString*>* Zenject::ProviderBindingFinalizer::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Type*, ::Il2CppString*>*>("Zenject", "ProviderBindingFinalizer/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.String> <>9__7_0
void Zenject::ProviderBindingFinalizer::$$c::_set_$$9__7_0(System::Func_2<System::Type*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ProviderBindingFinalizer/<>c", "<>9__7_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.String> <>9__8_0
System::Func_2<System::Type*, ::Il2CppString*>* Zenject::ProviderBindingFinalizer::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Type*, ::Il2CppString*>*>("Zenject", "ProviderBindingFinalizer/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.String> <>9__8_0
void Zenject::ProviderBindingFinalizer::$$c::_set_$$9__8_0(System::Func_2<System::Type*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ProviderBindingFinalizer/<>c", "<>9__8_0", value)));
}
// Autogenerated method: Zenject.ProviderBindingFinalizer/Zenject.<>c..cctor
void Zenject::ProviderBindingFinalizer::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ProviderBindingFinalizer/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer/Zenject.<>c.<GetScope>b__7_0
::Il2CppString* Zenject::ProviderBindingFinalizer::$$c::$GetScope$b__7_0(System::Type* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::$$c::<GetScope>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetScope>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer/Zenject.<>c.<FinalizeBinding>b__8_0
::Il2CppString* Zenject::ProviderBindingFinalizer::$$c::$FinalizeBinding$b__8_0(System::Type* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProviderBindingFinalizer::$$c::<FinalizeBinding>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBinding>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ScopableBindingFinalizer
#include "Zenject/ScopableBindingFinalizer.hpp"
// Including type: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass3_0
#include "Zenject/ScopableBindingFinalizer_--c__DisplayClass3_0.hpp"
// Including type: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass4_0
#include "Zenject/ScopableBindingFinalizer_--c__DisplayClass4_0.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Func`3<Zenject.DiContainer,System.Type,Zenject.IProvider> _providerFactory
System::Func_3<Zenject::DiContainer*, System::Type*, Zenject::IProvider*>* Zenject::ScopableBindingFinalizer::_get__providerFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopableBindingFinalizer::_get__providerFactory");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_3<Zenject::DiContainer*, System::Type*, Zenject::IProvider*>*>(___internal__instance, "_providerFactory")));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Func`3<Zenject.DiContainer,System.Type,Zenject.IProvider> _providerFactory
void Zenject::ScopableBindingFinalizer::_set__providerFactory(System::Func_3<Zenject::DiContainer*, System::Type*, Zenject::IProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopableBindingFinalizer::_set__providerFactory");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_providerFactory", value));
}
// Autogenerated method: Zenject.ScopableBindingFinalizer.FinalizeBindingConcrete
void Zenject::ScopableBindingFinalizer::FinalizeBindingConcrete(Zenject::DiContainer* container, System::Collections::Generic::List_1<System::Type*>* concreteTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopableBindingFinalizer::FinalizeBindingConcrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingConcrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteTypes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container, concreteTypes);
}
// Autogenerated method: Zenject.ScopableBindingFinalizer.FinalizeBindingSelf
void Zenject::ScopableBindingFinalizer::FinalizeBindingSelf(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopableBindingFinalizer::FinalizeBindingSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.ScopableBindingFinalizer.OnFinalizeBinding
void Zenject::ScopableBindingFinalizer::OnFinalizeBinding(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopableBindingFinalizer::OnFinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass3_0
#include "Zenject/ScopableBindingFinalizer_--c__DisplayClass3_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.ScopableBindingFinalizer <>4__this
Zenject::ScopableBindingFinalizer* Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::_get_$$4__this");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::ScopableBindingFinalizer*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.ScopableBindingFinalizer <>4__this
void Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::_set_$$4__this(Zenject::ScopableBindingFinalizer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::_set_$$4__this");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
Zenject::DiContainer* Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::_get_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::_get_container");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::DiContainer*>(___internal__instance, "container"));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.DiContainer container
void Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::_set_container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::_set_container");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "container", value));
}
// Autogenerated method: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass3_0.<FinalizeBindingConcrete>b__0
Zenject::IProvider* Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::$FinalizeBindingConcrete$b__0(Zenject::DiContainer* _, System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::<FinalizeBindingConcrete>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingConcrete>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::IProvider*, false>(this, ___internal__method, _, concreteType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass4_0
#include "Zenject/ScopableBindingFinalizer_--c__DisplayClass4_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.ScopableBindingFinalizer <>4__this
Zenject::ScopableBindingFinalizer* Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::_get_$$4__this");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::ScopableBindingFinalizer*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.ScopableBindingFinalizer <>4__this
void Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::_set_$$4__this(Zenject::ScopableBindingFinalizer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::_set_$$4__this");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
Zenject::DiContainer* Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::_get_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::_get_container");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::DiContainer*>(___internal__instance, "container"));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.DiContainer container
void Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::_set_container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::_set_container");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "container", value));
}
// Autogenerated method: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass4_0.<FinalizeBindingSelf>b__0
Zenject::IProvider* Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::$FinalizeBindingSelf$b__0(Zenject::DiContainer* _, System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::<FinalizeBindingSelf>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SingleProviderBindingFinalizer
#include "Zenject/SingleProviderBindingFinalizer.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Func`3<Zenject.DiContainer,System.Type,Zenject.IProvider> _providerFactory
System::Func_3<Zenject::DiContainer*, System::Type*, Zenject::IProvider*>* Zenject::SingleProviderBindingFinalizer::_get__providerFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SingleProviderBindingFinalizer::_get__providerFactory");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_3<Zenject::DiContainer*, System::Type*, Zenject::IProvider*>*>(___internal__instance, "_providerFactory")));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Func`3<Zenject.DiContainer,System.Type,Zenject.IProvider> _providerFactory
void Zenject::SingleProviderBindingFinalizer::_set__providerFactory(System::Func_3<Zenject::DiContainer*, System::Type*, Zenject::IProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SingleProviderBindingFinalizer::_set__providerFactory");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_providerFactory", value));
}
// Autogenerated method: Zenject.SingleProviderBindingFinalizer.OnFinalizeBinding
void Zenject::SingleProviderBindingFinalizer::OnFinalizeBinding(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SingleProviderBindingFinalizer::OnFinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBindingFinalizer
#include "Zenject/SubContainerBindingFinalizer.hpp"
// Including type: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/SubContainerBindingFinalizer_--c__DisplayClass5_0.hpp"
// Including type: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_1
#include "Zenject/SubContainerBindingFinalizer_--c__DisplayClass5_1.hpp"
// Including type: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/SubContainerBindingFinalizer_--c__DisplayClass6_0.hpp"
// Including type: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_1
#include "Zenject/SubContainerBindingFinalizer_--c__DisplayClass6_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _subIdentifier
::Il2CppObject* Zenject::SubContainerBindingFinalizer::_get__subIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::_get__subIdentifier");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>(___internal__instance, "_subIdentifier"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Object _subIdentifier
void Zenject::SubContainerBindingFinalizer::_set__subIdentifier(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::_set__subIdentifier");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_subIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _resolveAll
bool Zenject::SubContainerBindingFinalizer::_get__resolveAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::_get__resolveAll");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_resolveAll"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Boolean _resolveAll
void Zenject::SubContainerBindingFinalizer::_set__resolveAll(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::_set__resolveAll");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_resolveAll", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Func`2<Zenject.DiContainer,Zenject.ISubContainerCreator> _creatorFactory
System::Func_2<Zenject::DiContainer*, Zenject::ISubContainerCreator*>* Zenject::SubContainerBindingFinalizer::_get__creatorFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::_get__creatorFactory");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::DiContainer*, Zenject::ISubContainerCreator*>*>(___internal__instance, "_creatorFactory")));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Func`2<Zenject.DiContainer,Zenject.ISubContainerCreator> _creatorFactory
void Zenject::SubContainerBindingFinalizer::_set__creatorFactory(System::Func_2<Zenject::DiContainer*, Zenject::ISubContainerCreator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::_set__creatorFactory");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_creatorFactory", value));
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer.FinalizeBindingConcrete
void Zenject::SubContainerBindingFinalizer::FinalizeBindingConcrete(Zenject::DiContainer* container, System::Collections::Generic::List_1<System::Type*>* concreteTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::FinalizeBindingConcrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingConcrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteTypes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container, concreteTypes);
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer.FinalizeBindingSelf
void Zenject::SubContainerBindingFinalizer::FinalizeBindingSelf(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::FinalizeBindingSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer.OnFinalizeBinding
void Zenject::SubContainerBindingFinalizer::OnFinalizeBinding(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::OnFinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/SubContainerBindingFinalizer_--c__DisplayClass5_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerBindingFinalizer <>4__this
Zenject::SubContainerBindingFinalizer* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0::_get_$$4__this");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::SubContainerBindingFinalizer*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.SubContainerBindingFinalizer <>4__this
void Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0::_set_$$4__this(Zenject::SubContainerBindingFinalizer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0::_set_$$4__this");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
Zenject::DiContainer* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0::_get_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0::_get_container");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::DiContainer*>(___internal__instance, "container"));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.DiContainer container
void Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0::_set_container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0::_set_container");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "container", value));
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_0.<FinalizeBindingConcrete>b__0
Zenject::IProvider* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0::$FinalizeBindingConcrete$b__0(Zenject::DiContainer* _, System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0::<FinalizeBindingConcrete>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingConcrete>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::IProvider*, false>(this, ___internal__method, _, concreteType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_1
#include "Zenject/SubContainerBindingFinalizer_--c__DisplayClass5_1.hpp"
// Including type: Zenject.SubContainerCreatorCached
#include "Zenject/SubContainerCreatorCached.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/SubContainerBindingFinalizer_--c__DisplayClass5_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerCreatorCached containerCreator
Zenject::SubContainerCreatorCached* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_1::_get_containerCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_1::_get_containerCreator");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::SubContainerCreatorCached*>(___internal__instance, "containerCreator"));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.SubContainerCreatorCached containerCreator
void Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_1::_set_containerCreator(Zenject::SubContainerCreatorCached* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_1::_set_containerCreator");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "containerCreator", value));
}
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_0 CS$<>8__locals1
Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_1::_get_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_1::_get_CS$$$8__locals1");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0*>(___internal__instance, "CS$<>8__locals1")));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_0 CS$<>8__locals1
void Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_1::_set_CS$$$8__locals1(Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_0* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_1::_set_CS$$$8__locals1");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "CS$<>8__locals1", value));
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass5_1.<FinalizeBindingConcrete>b__1
Zenject::IProvider* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_1::$FinalizeBindingConcrete$b__1(Zenject::DiContainer* _, System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::$$c__DisplayClass5_1::<FinalizeBindingConcrete>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingConcrete>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::IProvider*, false>(this, ___internal__method, _, concreteType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/SubContainerBindingFinalizer_--c__DisplayClass6_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerBindingFinalizer <>4__this
Zenject::SubContainerBindingFinalizer* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0::_get_$$4__this");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::SubContainerBindingFinalizer*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.SubContainerBindingFinalizer <>4__this
void Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0::_set_$$4__this(Zenject::SubContainerBindingFinalizer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0::_set_$$4__this");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
Zenject::DiContainer* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0::_get_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0::_get_container");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::DiContainer*>(___internal__instance, "container"));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.DiContainer container
void Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0::_set_container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0::_set_container");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "container", value));
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_0.<FinalizeBindingSelf>b__0
Zenject::IProvider* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0::$FinalizeBindingSelf$b__0(Zenject::DiContainer* _, System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0::<FinalizeBindingSelf>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_1
#include "Zenject/SubContainerBindingFinalizer_--c__DisplayClass6_1.hpp"
// Including type: Zenject.SubContainerCreatorCached
#include "Zenject/SubContainerCreatorCached.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/SubContainerBindingFinalizer_--c__DisplayClass6_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerCreatorCached containerCreator
Zenject::SubContainerCreatorCached* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_1::_get_containerCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_1::_get_containerCreator");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::SubContainerCreatorCached*>(___internal__instance, "containerCreator"));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.SubContainerCreatorCached containerCreator
void Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_1::_set_containerCreator(Zenject::SubContainerCreatorCached* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_1::_set_containerCreator");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "containerCreator", value));
}
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_0 CS$<>8__locals1
Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_1::_get_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_1::_get_CS$$$8__locals1");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0*>(___internal__instance, "CS$<>8__locals1")));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_0 CS$<>8__locals1
void Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_1::_set_CS$$$8__locals1(Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_0* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_1::_set_CS$$$8__locals1");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "CS$<>8__locals1", value));
}
// Autogenerated method: Zenject.SubContainerBindingFinalizer/Zenject.<>c__DisplayClass6_1.<FinalizeBindingSelf>b__1
Zenject::IProvider* Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_1::$FinalizeBindingSelf$b__1(Zenject::DiContainer* _, System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerBindingFinalizer::$$c__DisplayClass6_1::<FinalizeBindingSelf>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerPrefabBindingFinalizer
#include "Zenject/SubContainerPrefabBindingFinalizer.hpp"
// Including type: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/SubContainerPrefabBindingFinalizer_--c__DisplayClass5_0.hpp"
// Including type: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_1
#include "Zenject/SubContainerPrefabBindingFinalizer_--c__DisplayClass5_1.hpp"
// Including type: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/SubContainerPrefabBindingFinalizer_--c__DisplayClass6_0.hpp"
// Including type: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_1
#include "Zenject/SubContainerPrefabBindingFinalizer_--c__DisplayClass6_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _subIdentifier
::Il2CppObject* Zenject::SubContainerPrefabBindingFinalizer::_get__subIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::_get__subIdentifier");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>(___internal__instance, "_subIdentifier"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Object _subIdentifier
void Zenject::SubContainerPrefabBindingFinalizer::_set__subIdentifier(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::_set__subIdentifier");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_subIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _resolveAll
bool Zenject::SubContainerPrefabBindingFinalizer::_get__resolveAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::_get__resolveAll");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_resolveAll"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Boolean _resolveAll
void Zenject::SubContainerPrefabBindingFinalizer::_set__resolveAll(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::_set__resolveAll");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_resolveAll", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Func`2<Zenject.DiContainer,Zenject.ISubContainerCreator> _subContainerCreatorFactory
System::Func_2<Zenject::DiContainer*, Zenject::ISubContainerCreator*>* Zenject::SubContainerPrefabBindingFinalizer::_get__subContainerCreatorFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::_get__subContainerCreatorFactory");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::DiContainer*, Zenject::ISubContainerCreator*>*>(___internal__instance, "_subContainerCreatorFactory")));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Func`2<Zenject.DiContainer,Zenject.ISubContainerCreator> _subContainerCreatorFactory
void Zenject::SubContainerPrefabBindingFinalizer::_set__subContainerCreatorFactory(System::Func_2<Zenject::DiContainer*, Zenject::ISubContainerCreator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::_set__subContainerCreatorFactory");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_subContainerCreatorFactory", value));
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer.FinalizeBindingConcrete
void Zenject::SubContainerPrefabBindingFinalizer::FinalizeBindingConcrete(Zenject::DiContainer* container, System::Collections::Generic::List_1<System::Type*>* concreteTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::FinalizeBindingConcrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingConcrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteTypes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container, concreteTypes);
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer.FinalizeBindingSelf
void Zenject::SubContainerPrefabBindingFinalizer::FinalizeBindingSelf(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::FinalizeBindingSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer.OnFinalizeBinding
void Zenject::SubContainerPrefabBindingFinalizer::OnFinalizeBinding(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::OnFinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/SubContainerPrefabBindingFinalizer_--c__DisplayClass5_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerPrefabBindingFinalizer <>4__this
Zenject::SubContainerPrefabBindingFinalizer* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0::_get_$$4__this");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::SubContainerPrefabBindingFinalizer*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.SubContainerPrefabBindingFinalizer <>4__this
void Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0::_set_$$4__this(Zenject::SubContainerPrefabBindingFinalizer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0::_set_$$4__this");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
Zenject::DiContainer* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0::_get_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0::_get_container");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::DiContainer*>(___internal__instance, "container"));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.DiContainer container
void Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0::_set_container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0::_set_container");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "container", value));
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0.<FinalizeBindingConcrete>b__0
Zenject::IProvider* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0::$FinalizeBindingConcrete$b__0(Zenject::DiContainer* _, System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0::<FinalizeBindingConcrete>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingConcrete>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::IProvider*, false>(this, ___internal__method, _, concreteType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_1
#include "Zenject/SubContainerPrefabBindingFinalizer_--c__DisplayClass5_1.hpp"
// Including type: Zenject.SubContainerCreatorCached
#include "Zenject/SubContainerCreatorCached.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/SubContainerPrefabBindingFinalizer_--c__DisplayClass5_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerCreatorCached containerCreator
Zenject::SubContainerCreatorCached* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_1::_get_containerCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_1::_get_containerCreator");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::SubContainerCreatorCached*>(___internal__instance, "containerCreator"));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.SubContainerCreatorCached containerCreator
void Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_1::_set_containerCreator(Zenject::SubContainerCreatorCached* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_1::_set_containerCreator");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "containerCreator", value));
}
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0 CS$<>8__locals1
Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_1::_get_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_1::_get_CS$$$8__locals1");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0*>(___internal__instance, "CS$<>8__locals1")));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0 CS$<>8__locals1
void Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_1::_set_CS$$$8__locals1(Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_0* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_1::_set_CS$$$8__locals1");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "CS$<>8__locals1", value));
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass5_1.<FinalizeBindingConcrete>b__1
Zenject::IProvider* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_1::$FinalizeBindingConcrete$b__1(Zenject::DiContainer* _, System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass5_1::<FinalizeBindingConcrete>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingConcrete>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::IProvider*, false>(this, ___internal__method, _, concreteType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/SubContainerPrefabBindingFinalizer_--c__DisplayClass6_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerPrefabBindingFinalizer <>4__this
Zenject::SubContainerPrefabBindingFinalizer* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::_get_$$4__this");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::SubContainerPrefabBindingFinalizer*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.SubContainerPrefabBindingFinalizer <>4__this
void Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::_set_$$4__this(Zenject::SubContainerPrefabBindingFinalizer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::_set_$$4__this");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
Zenject::DiContainer* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::_get_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::_get_container");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::DiContainer*>(___internal__instance, "container"));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.DiContainer container
void Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::_set_container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::_set_container");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "container", value));
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0.<FinalizeBindingSelf>b__0
Zenject::IProvider* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::$FinalizeBindingSelf$b__0(Zenject::DiContainer* _, System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0::<FinalizeBindingSelf>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_1
#include "Zenject/SubContainerPrefabBindingFinalizer_--c__DisplayClass6_1.hpp"
// Including type: Zenject.SubContainerCreatorCached
#include "Zenject/SubContainerCreatorCached.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/SubContainerPrefabBindingFinalizer_--c__DisplayClass6_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerCreatorCached containerCreator
Zenject::SubContainerCreatorCached* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_1::_get_containerCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_1::_get_containerCreator");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::SubContainerCreatorCached*>(___internal__instance, "containerCreator"));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.SubContainerCreatorCached containerCreator
void Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_1::_set_containerCreator(Zenject::SubContainerCreatorCached* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_1::_set_containerCreator");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "containerCreator", value));
}
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0 CS$<>8__locals1
Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_1::_get_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_1::_get_CS$$$8__locals1");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0*>(___internal__instance, "CS$<>8__locals1")));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0 CS$<>8__locals1
void Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_1::_set_CS$$$8__locals1(Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_0* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_1::_set_CS$$$8__locals1");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "CS$<>8__locals1", value));
}
// Autogenerated method: Zenject.SubContainerPrefabBindingFinalizer/Zenject.<>c__DisplayClass6_1.<FinalizeBindingSelf>b__1
Zenject::IProvider* Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_1::$FinalizeBindingSelf$b__1(Zenject::DiContainer* _, System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SubContainerPrefabBindingFinalizer::$$c__DisplayClass6_1::<FinalizeBindingSelf>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.IMemoryPool
#include "Zenject/IMemoryPool.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IMemoryPool.get_NumTotal
int Zenject::IMemoryPool::get_NumTotal() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IMemoryPool::get_NumTotal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumTotal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IMemoryPool.get_NumActive
int Zenject::IMemoryPool::get_NumActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IMemoryPool::get_NumActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IMemoryPool.get_NumInactive
int Zenject::IMemoryPool::get_NumInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IMemoryPool::get_NumInactive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumInactive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IMemoryPool.get_ItemType
System::Type* Zenject::IMemoryPool::get_ItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IMemoryPool::get_ItemType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IMemoryPool.Resize
void Zenject::IMemoryPool::Resize(int desiredPoolSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IMemoryPool::Resize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(desiredPoolSize)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, desiredPoolSize);
}
// Autogenerated method: Zenject.IMemoryPool.Clear
void Zenject::IMemoryPool::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IMemoryPool::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IMemoryPool.ExpandBy
void Zenject::IMemoryPool::ExpandBy(int numToAdd) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IMemoryPool::ExpandBy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numToAdd)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, numToAdd);
}
// Autogenerated method: Zenject.IMemoryPool.ShrinkBy
void Zenject::IMemoryPool::ShrinkBy(int numToRemove) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IMemoryPool::ShrinkBy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShrinkBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numToRemove)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, numToRemove);
}
// Autogenerated method: Zenject.IMemoryPool.Despawn
void Zenject::IMemoryPool::Despawn(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IMemoryPool::Despawn");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Despawn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PoolExceededFixedSizeException
#include "Zenject/PoolExceededFixedSizeException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.MemoryPoolSettings
#include "Zenject/MemoryPoolSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.MemoryPoolSettings Default
Zenject::MemoryPoolSettings* Zenject::MemoryPoolSettings::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MemoryPoolSettings::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::MemoryPoolSettings*>("Zenject", "MemoryPoolSettings", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.MemoryPoolSettings Default
void Zenject::MemoryPoolSettings::_set_Default(Zenject::MemoryPoolSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MemoryPoolSettings::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "MemoryPoolSettings", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 InitialSize
int Zenject::MemoryPoolSettings::_get_InitialSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MemoryPoolSettings::_get_InitialSize");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "InitialSize"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 InitialSize
void Zenject::MemoryPoolSettings::_set_InitialSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MemoryPoolSettings::_set_InitialSize");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "InitialSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxSize
int Zenject::MemoryPoolSettings::_get_MaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MemoryPoolSettings::_get_MaxSize");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "MaxSize"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 MaxSize
void Zenject::MemoryPoolSettings::_set_MaxSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MemoryPoolSettings::_set_MaxSize");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "MaxSize", value));
}
// Autogenerated instance field getter
// Get instance field: public Zenject.PoolExpandMethods ExpandMethod
Zenject::PoolExpandMethods Zenject::MemoryPoolSettings::_get_ExpandMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MemoryPoolSettings::_get_ExpandMethod");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::PoolExpandMethods>(___internal__instance, "ExpandMethod"));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.PoolExpandMethods ExpandMethod
void Zenject::MemoryPoolSettings::_set_ExpandMethod(Zenject::PoolExpandMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MemoryPoolSettings::_set_ExpandMethod");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "ExpandMethod", value));
}
// Autogenerated method: Zenject.MemoryPoolSettings..cctor
void Zenject::MemoryPoolSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MemoryPoolSettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "MemoryPoolSettings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PoolCleanupChecker
#include "Zenject/PoolCleanupChecker.hpp"
// Including type: Zenject.PoolCleanupChecker/Zenject.<>c
#include "Zenject/PoolCleanupChecker_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IMemoryPool
#include "Zenject/IMemoryPool.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Zenject.IMemoryPool> _poolFactories
System::Collections::Generic::List_1<Zenject::IMemoryPool*>* Zenject::PoolCleanupChecker::_get__poolFactories() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolCleanupChecker::_get__poolFactories");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<Zenject::IMemoryPool*>*>(___internal__instance, "_poolFactories"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<Zenject.IMemoryPool> _poolFactories
void Zenject::PoolCleanupChecker::_set__poolFactories(System::Collections::Generic::List_1<Zenject::IMemoryPool*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolCleanupChecker::_set__poolFactories");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_poolFactories", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Type> _ignoredPools
System::Collections::Generic::List_1<System::Type*>* Zenject::PoolCleanupChecker::_get__ignoredPools() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolCleanupChecker::_get__ignoredPools");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<System::Type*>*>(___internal__instance, "_ignoredPools"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<System.Type> _ignoredPools
void Zenject::PoolCleanupChecker::_set__ignoredPools(System::Collections::Generic::List_1<System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolCleanupChecker::_set__ignoredPools");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_ignoredPools", value));
}
// Autogenerated method: Zenject.PoolCleanupChecker.LateDispose
void Zenject::PoolCleanupChecker::LateDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolCleanupChecker::LateDispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PoolCleanupChecker/Zenject.<>c
#include "Zenject/PoolCleanupChecker_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.PoolCleanupChecker/Zenject.<>c <>9
Zenject::PoolCleanupChecker::$$c* Zenject::PoolCleanupChecker::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolCleanupChecker::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::PoolCleanupChecker::$$c*>("Zenject", "PoolCleanupChecker/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.PoolCleanupChecker/Zenject.<>c <>9
void Zenject::PoolCleanupChecker::$$c::_set_$$9(Zenject::PoolCleanupChecker::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolCleanupChecker::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "PoolCleanupChecker/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Boolean> <>9__2_0
System::Func_2<System::Type*, bool>* Zenject::PoolCleanupChecker::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolCleanupChecker::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Type*, bool>*>("Zenject", "PoolCleanupChecker/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Boolean> <>9__2_0
void Zenject::PoolCleanupChecker::$$c::_set_$$9__2_0(System::Func_2<System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolCleanupChecker::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "PoolCleanupChecker/<>c", "<>9__2_0", value)));
}
// Autogenerated method: Zenject.PoolCleanupChecker/Zenject.<>c..cctor
void Zenject::PoolCleanupChecker::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolCleanupChecker::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PoolCleanupChecker/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.PoolCleanupChecker/Zenject.<>c.<.ctor>b__2_0
bool Zenject::PoolCleanupChecker::$$c::$_ctor$b__2_0(System::Type* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::PoolCleanupChecker::$$c::<.ctor>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52
#include "Zenject/InjectContext_-get_ParentContexts-d__52.hpp"
// Including type: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54
#include "Zenject/InjectContext_-get_ParentContextsAndSelf-d__54.hpp"
// Including type: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56
#include "Zenject/InjectContext_-get_AllObjectTypes-d__56.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.BindingId _bindingId
Zenject::BindingId Zenject::InjectContext::_get__bindingId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::_get__bindingId");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::BindingId>(___internal__instance, "_bindingId"));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.BindingId _bindingId
void Zenject::InjectContext::_set__bindingId(Zenject::BindingId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::_set__bindingId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_bindingId", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Type _objectType
System::Type* Zenject::InjectContext::_get__objectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::_get__objectType");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>(___internal__instance, "_objectType"));
}
// Autogenerated instance field setter
// Set instance field: private System.Type _objectType
void Zenject::InjectContext::_set__objectType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::_set__objectType");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_objectType", value));
}
// Autogenerated instance field getter
// Get instance field: private Zenject.InjectContext _parentContext
Zenject::InjectContext* Zenject::InjectContext::_get__parentContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::_get__parentContext");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::InjectContext*>(___internal__instance, "_parentContext"));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.InjectContext _parentContext
void Zenject::InjectContext::_set__parentContext(Zenject::InjectContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::_set__parentContext");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_parentContext", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object _objectInstance
::Il2CppObject* Zenject::InjectContext::_get__objectInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::_get__objectInstance");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>(___internal__instance, "_objectInstance"));
}
// Autogenerated instance field setter
// Set instance field: private System.Object _objectInstance
void Zenject::InjectContext::_set__objectInstance(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::_set__objectInstance");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_objectInstance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _memberName
::Il2CppString* Zenject::InjectContext::_get__memberName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::_get__memberName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "_memberName"));
}
// Autogenerated instance field setter
// Set instance field: private System.String _memberName
void Zenject::InjectContext::_set__memberName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::_set__memberName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_memberName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _optional
bool Zenject::InjectContext::_get__optional() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::_get__optional");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_optional"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _optional
void Zenject::InjectContext::_set__optional(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::_set__optional");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_optional", value));
}
// Autogenerated instance field getter
// Get instance field: private Zenject.InjectSources _sourceType
Zenject::InjectSources Zenject::InjectContext::_get__sourceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::_get__sourceType");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::InjectSources>(___internal__instance, "_sourceType"));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.InjectSources _sourceType
void Zenject::InjectContext::_set__sourceType(Zenject::InjectSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::_set__sourceType");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_sourceType", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object _fallBackValue
::Il2CppObject* Zenject::InjectContext::_get__fallBackValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::_get__fallBackValue");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>(___internal__instance, "_fallBackValue"));
}
// Autogenerated instance field setter
// Set instance field: private System.Object _fallBackValue
void Zenject::InjectContext::_set__fallBackValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::_set__fallBackValue");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_fallBackValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object _concreteIdentifier
::Il2CppObject* Zenject::InjectContext::_get__concreteIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::_get__concreteIdentifier");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>(___internal__instance, "_concreteIdentifier"));
}
// Autogenerated instance field setter
// Set instance field: private System.Object _concreteIdentifier
void Zenject::InjectContext::_set__concreteIdentifier(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::_set__concreteIdentifier");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_concreteIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: private Zenject.DiContainer _container
Zenject::DiContainer* Zenject::InjectContext::_get__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::_get__container");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::DiContainer*>(___internal__instance, "_container"));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.DiContainer _container
void Zenject::InjectContext::_set__container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::_set__container");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_container", value));
}
// Autogenerated method: Zenject.InjectContext.get_BindingId
Zenject::BindingId Zenject::InjectContext::get_BindingId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::get_BindingId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindingId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::BindingId, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.get_ObjectType
System::Type* Zenject::InjectContext::get_ObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::get_ObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_ObjectType
void Zenject::InjectContext::set_ObjectType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::set_ObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_ParentContext
Zenject::InjectContext* Zenject::InjectContext::get_ParentContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::get_ParentContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectContext*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_ParentContext
void Zenject::InjectContext::set_ParentContext(Zenject::InjectContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::set_ParentContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParentContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_ObjectInstance
::Il2CppObject* Zenject::InjectContext::get_ObjectInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::get_ObjectInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_ObjectInstance
void Zenject::InjectContext::set_ObjectInstance(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::set_ObjectInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ObjectInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_Identifier
::Il2CppObject* Zenject::InjectContext::get_Identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::get_Identifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Identifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_Identifier
void Zenject::InjectContext::set_Identifier(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::set_Identifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Identifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_MemberName
::Il2CppString* Zenject::InjectContext::get_MemberName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::get_MemberName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_MemberName
void Zenject::InjectContext::set_MemberName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::set_MemberName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MemberName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_MemberType
System::Type* Zenject::InjectContext::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::get_MemberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_MemberType
void Zenject::InjectContext::set_MemberType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::set_MemberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_Optional
bool Zenject::InjectContext::get_Optional() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::get_Optional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Optional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_Optional
void Zenject::InjectContext::set_Optional(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::set_Optional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Optional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_SourceType
Zenject::InjectSources Zenject::InjectContext::get_SourceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::get_SourceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SourceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectSources, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_SourceType
void Zenject::InjectContext::set_SourceType(Zenject::InjectSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::set_SourceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SourceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_ConcreteIdentifier
::Il2CppObject* Zenject::InjectContext::get_ConcreteIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::get_ConcreteIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConcreteIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_ConcreteIdentifier
void Zenject::InjectContext::set_ConcreteIdentifier(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::set_ConcreteIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ConcreteIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_FallBackValue
::Il2CppObject* Zenject::InjectContext::get_FallBackValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::get_FallBackValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FallBackValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_FallBackValue
void Zenject::InjectContext::set_FallBackValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::set_FallBackValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FallBackValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_Container
Zenject::DiContainer* Zenject::InjectContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::get_Container");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.set_Container
void Zenject::InjectContext::set_Container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::set_Container");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.InjectContext.get_ParentContexts
System::Collections::Generic::IEnumerable_1<Zenject::InjectContext*>* Zenject::InjectContext::get_ParentContexts() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::get_ParentContexts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentContexts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::InjectContext*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.get_ParentContextsAndSelf
System::Collections::Generic::IEnumerable_1<Zenject::InjectContext*>* Zenject::InjectContext::get_ParentContextsAndSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::get_ParentContextsAndSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentContextsAndSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::InjectContext*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.get_AllObjectTypes
System::Collections::Generic::IEnumerable_1<System::Type*>* Zenject::InjectContext::get_AllObjectTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::get_AllObjectTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllObjectTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.Dispose
void Zenject::InjectContext::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.Reset
void Zenject::InjectContext::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.CreateSubContext
Zenject::InjectContext* Zenject::InjectContext::CreateSubContext(System::Type* memberType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::CreateSubContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSubContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberType)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectContext*, false>(this, ___internal__method, memberType);
}
// Autogenerated method: Zenject.InjectContext.CreateSubContext
Zenject::InjectContext* Zenject::InjectContext::CreateSubContext(System::Type* memberType, ::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::CreateSubContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSubContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberType), ::il2cpp_utils::ExtractType(identifier)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectContext*, false>(this, ___internal__method, memberType, identifier);
}
// Autogenerated method: Zenject.InjectContext.Clone
Zenject::InjectContext* Zenject::InjectContext::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectContext*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext.GetObjectGraphString
::Il2CppString* Zenject::InjectContext::GetObjectGraphString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::GetObjectGraphString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectGraphString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52
#include "Zenject/InjectContext_-get_ParentContexts-d__52.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int Zenject::InjectContext::$get_ParentContexts$d__52::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContexts$d__52::_get_$$1__state");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void Zenject::InjectContext::$get_ParentContexts$d__52::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContexts$d__52::_set_$$1__state");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: private Zenject.InjectContext <>2__current
Zenject::InjectContext* Zenject::InjectContext::$get_ParentContexts$d__52::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContexts$d__52::_get_$$2__current");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::InjectContext*>(___internal__instance, "<>2__current")));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.InjectContext <>2__current
void Zenject::InjectContext::$get_ParentContexts$d__52::_set_$$2__current(Zenject::InjectContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContexts$d__52::_set_$$2__current");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>2__current", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int Zenject::InjectContext::$get_ParentContexts$d__52::_get_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContexts$d__52::_get_$$l__initialThreadId");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>l__initialThreadId")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>l__initialThreadId
void Zenject::InjectContext::$get_ParentContexts$d__52::_set_$$l__initialThreadId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContexts$d__52::_set_$$l__initialThreadId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>l__initialThreadId", value));
}
// Autogenerated instance field getter
// Get instance field: public Zenject.InjectContext <>4__this
Zenject::InjectContext* Zenject::InjectContext::$get_ParentContexts$d__52::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContexts$d__52::_get_$$4__this");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::InjectContext*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.InjectContext <>4__this
void Zenject::InjectContext::$get_ParentContexts$d__52::_set_$$4__this(Zenject::InjectContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContexts$d__52::_set_$$4__this");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<Zenject.InjectContext> <>7__wrap1
System::Collections::Generic::IEnumerator_1<Zenject::InjectContext*>* Zenject::InjectContext::$get_ParentContexts$d__52::_get_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContexts$d__52::_get_$$7__wrap1");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::IEnumerator_1<Zenject::InjectContext*>*>(___internal__instance, "<>7__wrap1")));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.IEnumerator`1<Zenject.InjectContext> <>7__wrap1
void Zenject::InjectContext::$get_ParentContexts$d__52::_set_$$7__wrap1(System::Collections::Generic::IEnumerator_1<Zenject::InjectContext*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContexts$d__52::_set_$$7__wrap1");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>7__wrap1", value));
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52.System.Collections.Generic.IEnumerator<Zenject.InjectContext>.get_Current
Zenject::InjectContext* Zenject::InjectContext::$get_ParentContexts$d__52::System_Collections_Generic_IEnumerator$Zenject_InjectContext$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContexts$d__52::System.Collections.Generic.IEnumerator<Zenject.InjectContext>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<Zenject.InjectContext>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectContext*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52.System.Collections.IEnumerator.get_Current
::Il2CppObject* Zenject::InjectContext::$get_ParentContexts$d__52::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContexts$d__52::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52.System.IDisposable.Dispose
void Zenject::InjectContext::$get_ParentContexts$d__52::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContexts$d__52::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52.MoveNext
bool Zenject::InjectContext::$get_ParentContexts$d__52::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContexts$d__52::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52.<>m__Finally1
void Zenject::InjectContext::$get_ParentContexts$d__52::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContexts$d__52::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52.System.Collections.IEnumerator.Reset
void Zenject::InjectContext::$get_ParentContexts$d__52::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContexts$d__52::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52.System.Collections.Generic.IEnumerable<Zenject.InjectContext>.GetEnumerator
System::Collections::Generic::IEnumerator_1<Zenject::InjectContext*>* Zenject::InjectContext::$get_ParentContexts$d__52::System_Collections_Generic_IEnumerable$Zenject_InjectContext$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContexts$d__52::System.Collections.Generic.IEnumerable<Zenject.InjectContext>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<Zenject.InjectContext>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<Zenject::InjectContext*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContexts>d__52.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* Zenject::InjectContext::$get_ParentContexts$d__52::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContexts$d__52::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54
#include "Zenject/InjectContext_-get_ParentContextsAndSelf-d__54.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::_get_$$1__state");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::_set_$$1__state");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: private Zenject.InjectContext <>2__current
Zenject::InjectContext* Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::_get_$$2__current");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::InjectContext*>(___internal__instance, "<>2__current")));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.InjectContext <>2__current
void Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::_set_$$2__current(Zenject::InjectContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::_set_$$2__current");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>2__current", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::_get_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::_get_$$l__initialThreadId");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>l__initialThreadId")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>l__initialThreadId
void Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::_set_$$l__initialThreadId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::_set_$$l__initialThreadId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>l__initialThreadId", value));
}
// Autogenerated instance field getter
// Get instance field: public Zenject.InjectContext <>4__this
Zenject::InjectContext* Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::_get_$$4__this");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::InjectContext*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.InjectContext <>4__this
void Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::_set_$$4__this(Zenject::InjectContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::_set_$$4__this");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<Zenject.InjectContext> <>7__wrap1
System::Collections::Generic::IEnumerator_1<Zenject::InjectContext*>* Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::_get_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::_get_$$7__wrap1");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::IEnumerator_1<Zenject::InjectContext*>*>(___internal__instance, "<>7__wrap1")));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.IEnumerator`1<Zenject.InjectContext> <>7__wrap1
void Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::_set_$$7__wrap1(System::Collections::Generic::IEnumerator_1<Zenject::InjectContext*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::_set_$$7__wrap1");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>7__wrap1", value));
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54.System.Collections.Generic.IEnumerator<Zenject.InjectContext>.get_Current
Zenject::InjectContext* Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System_Collections_Generic_IEnumerator$Zenject_InjectContext$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System.Collections.Generic.IEnumerator<Zenject.InjectContext>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<Zenject.InjectContext>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectContext*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54.System.Collections.IEnumerator.get_Current
::Il2CppObject* Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54.System.IDisposable.Dispose
void Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54.MoveNext
bool Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54.<>m__Finally1
void Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54.System.Collections.IEnumerator.Reset
void Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54.System.Collections.Generic.IEnumerable<Zenject.InjectContext>.GetEnumerator
System::Collections::Generic::IEnumerator_1<Zenject::InjectContext*>* Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System_Collections_Generic_IEnumerable$Zenject_InjectContext$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System.Collections.Generic.IEnumerable<Zenject.InjectContext>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<Zenject.InjectContext>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<Zenject::InjectContext*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_ParentContextsAndSelf>d__54.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_ParentContextsAndSelf$d__54::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56
#include "Zenject/InjectContext_-get_AllObjectTypes-d__56.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int Zenject::InjectContext::$get_AllObjectTypes$d__56::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_AllObjectTypes$d__56::_get_$$1__state");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void Zenject::InjectContext::$get_AllObjectTypes$d__56::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_AllObjectTypes$d__56::_set_$$1__state");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Type <>2__current
System::Type* Zenject::InjectContext::$get_AllObjectTypes$d__56::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_AllObjectTypes$d__56::_get_$$2__current");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Type*>(___internal__instance, "<>2__current")));
}
// Autogenerated instance field setter
// Set instance field: private System.Type <>2__current
void Zenject::InjectContext::$get_AllObjectTypes$d__56::_set_$$2__current(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_AllObjectTypes$d__56::_set_$$2__current");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>2__current", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int Zenject::InjectContext::$get_AllObjectTypes$d__56::_get_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_AllObjectTypes$d__56::_get_$$l__initialThreadId");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>l__initialThreadId")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>l__initialThreadId
void Zenject::InjectContext::$get_AllObjectTypes$d__56::_set_$$l__initialThreadId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_AllObjectTypes$d__56::_set_$$l__initialThreadId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>l__initialThreadId", value));
}
// Autogenerated instance field getter
// Get instance field: public Zenject.InjectContext <>4__this
Zenject::InjectContext* Zenject::InjectContext::$get_AllObjectTypes$d__56::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_AllObjectTypes$d__56::_get_$$4__this");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::InjectContext*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public Zenject.InjectContext <>4__this
void Zenject::InjectContext::$get_AllObjectTypes$d__56::_set_$$4__this(Zenject::InjectContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_AllObjectTypes$d__56::_set_$$4__this");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<Zenject.InjectContext> <>7__wrap1
System::Collections::Generic::IEnumerator_1<Zenject::InjectContext*>* Zenject::InjectContext::$get_AllObjectTypes$d__56::_get_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_AllObjectTypes$d__56::_get_$$7__wrap1");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::IEnumerator_1<Zenject::InjectContext*>*>(___internal__instance, "<>7__wrap1")));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.IEnumerator`1<Zenject.InjectContext> <>7__wrap1
void Zenject::InjectContext::$get_AllObjectTypes$d__56::_set_$$7__wrap1(System::Collections::Generic::IEnumerator_1<Zenject::InjectContext*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_AllObjectTypes$d__56::_set_$$7__wrap1");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>7__wrap1", value));
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56.System.Collections.Generic.IEnumerator<System.Type>.get_Current
System::Type* Zenject::InjectContext::$get_AllObjectTypes$d__56::System_Collections_Generic_IEnumerator$System_Type$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_AllObjectTypes$d__56::System.Collections.Generic.IEnumerator<System.Type>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Type>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56.System.Collections.IEnumerator.get_Current
::Il2CppObject* Zenject::InjectContext::$get_AllObjectTypes$d__56::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_AllObjectTypes$d__56::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56.System.IDisposable.Dispose
void Zenject::InjectContext::$get_AllObjectTypes$d__56::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_AllObjectTypes$d__56::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56.MoveNext
bool Zenject::InjectContext::$get_AllObjectTypes$d__56::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_AllObjectTypes$d__56::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56.<>m__Finally1
void Zenject::InjectContext::$get_AllObjectTypes$d__56::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_AllObjectTypes$d__56::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56.System.Collections.IEnumerator.Reset
void Zenject::InjectContext::$get_AllObjectTypes$d__56::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_AllObjectTypes$d__56::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56.System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator
System::Collections::Generic::IEnumerator_1<System::Type*>* Zenject::InjectContext::$get_AllObjectTypes$d__56::System_Collections_Generic_IEnumerable$System_Type$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_AllObjectTypes$d__56::System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InjectContext/Zenject.<get_AllObjectTypes>d__56.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* Zenject::InjectContext::$get_AllObjectTypes$d__56::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectContext::$get_AllObjectTypes$d__56::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.TypeValuePair
#include "Zenject/TypeValuePair.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type Type
System::Type* Zenject::TypeValuePair::_get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeValuePair::_get_Type");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>(___internal__instance, "Type"));
}
// Autogenerated instance field setter
// Set instance field: public System.Type Type
void Zenject::TypeValuePair::_set_Type(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeValuePair::_set_Type");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "Type", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Object Value
::Il2CppObject* Zenject::TypeValuePair::_get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeValuePair::_get_Value");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>(___internal__instance, "Value"));
}
// Autogenerated instance field setter
// Set instance field: public System.Object Value
void Zenject::TypeValuePair::_set_Value(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::TypeValuePair::_set_Value");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "Value", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InjectUtil
#include "Zenject/InjectUtil.hpp"
// Including type: Zenject.InjectUtil/Zenject.<>c
#include "Zenject/InjectUtil_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.InjectUtil.CreateArgList
System::Collections::Generic::List_1<Zenject::TypeValuePair>* Zenject::InjectUtil::CreateArgList(System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectUtil::CreateArgList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "InjectUtil", "CreateArgList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<Zenject::TypeValuePair>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args);
}
// Autogenerated method: Zenject.InjectUtil.PopValueWithType
bool Zenject::InjectUtil::PopValueWithType(System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgMap, System::Type* injectedFieldType, ::Il2CppObject*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectUtil::PopValueWithType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "InjectUtil", "PopValueWithType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extraArgMap), ::il2cpp_utils::ExtractType(injectedFieldType), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, extraArgMap, injectedFieldType, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InjectUtil/Zenject.<>c
#include "Zenject/InjectUtil_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.InjectUtil/Zenject.<>c <>9
Zenject::InjectUtil::$$c* Zenject::InjectUtil::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectUtil::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::InjectUtil::$$c*>("Zenject", "InjectUtil/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.InjectUtil/Zenject.<>c <>9
void Zenject::InjectUtil::$$c::_set_$$9(Zenject::InjectUtil::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectUtil::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "InjectUtil/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Object,Zenject.TypeValuePair> <>9__0_0
System::Func_2<::Il2CppObject*, Zenject::TypeValuePair>* Zenject::InjectUtil::$$c::_get_$$9__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectUtil::$$c::_get_$$9__0_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppObject*, Zenject::TypeValuePair>*>("Zenject", "InjectUtil/<>c", "<>9__0_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Object,Zenject.TypeValuePair> <>9__0_0
void Zenject::InjectUtil::$$c::_set_$$9__0_0(System::Func_2<::Il2CppObject*, Zenject::TypeValuePair>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectUtil::$$c::_set_$$9__0_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "InjectUtil/<>c", "<>9__0_0", value)));
}
// Autogenerated method: Zenject.InjectUtil/Zenject.<>c..cctor
void Zenject::InjectUtil::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectUtil::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "InjectUtil/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.InjectUtil/Zenject.<>c.<CreateArgList>b__0_0
Zenject::TypeValuePair Zenject::InjectUtil::$$c::$CreateArgList$b__0_0(::Il2CppObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InjectUtil::$$c::<CreateArgList>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateArgList>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::TypeValuePair, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Context
#include "Zenject/Context.hpp"
// Including type: Zenject.Context/Zenject.<>c
#include "Zenject/Context_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.ScriptableObjectInstaller
#include "Zenject/ScriptableObjectInstaller.hpp"
// Including type: Zenject.MonoInstaller
#include "Zenject/MonoInstaller.hpp"
// Including type: Zenject.InstallerBase
#include "Zenject/InstallerBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.ZenjectBinding
#include "Zenject/ZenjectBinding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Zenject.ScriptableObjectInstaller> _scriptableObjectInstallers
System::Collections::Generic::List_1<Zenject::ScriptableObjectInstaller*>* Zenject::Context::_get__scriptableObjectInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::_get__scriptableObjectInstallers");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<Zenject::ScriptableObjectInstaller*>*>(___internal__instance, "_scriptableObjectInstallers"));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<Zenject.ScriptableObjectInstaller> _scriptableObjectInstallers
void Zenject::Context::_set__scriptableObjectInstallers(System::Collections::Generic::List_1<Zenject::ScriptableObjectInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::_set__scriptableObjectInstallers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_scriptableObjectInstallers", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Zenject.MonoInstaller> _monoInstallers
System::Collections::Generic::List_1<Zenject::MonoInstaller*>* Zenject::Context::_get__monoInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::_get__monoInstallers");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<Zenject::MonoInstaller*>*>(___internal__instance, "_monoInstallers"));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<Zenject.MonoInstaller> _monoInstallers
void Zenject::Context::_set__monoInstallers(System::Collections::Generic::List_1<Zenject::MonoInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::_set__monoInstallers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_monoInstallers", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Zenject.MonoInstaller> _installerPrefabs
System::Collections::Generic::List_1<Zenject::MonoInstaller*>* Zenject::Context::_get__installerPrefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::_get__installerPrefabs");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<Zenject::MonoInstaller*>*>(___internal__instance, "_installerPrefabs"));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<Zenject.MonoInstaller> _installerPrefabs
void Zenject::Context::_set__installerPrefabs(System::Collections::Generic::List_1<Zenject::MonoInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::_set__installerPrefabs");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_installerPrefabs", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Zenject.InstallerBase> _normalInstallers
System::Collections::Generic::List_1<Zenject::InstallerBase*>* Zenject::Context::_get__normalInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::_get__normalInstallers");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<Zenject::InstallerBase*>*>(___internal__instance, "_normalInstallers"));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<Zenject.InstallerBase> _normalInstallers
void Zenject::Context::_set__normalInstallers(System::Collections::Generic::List_1<Zenject::InstallerBase*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::_set__normalInstallers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_normalInstallers", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Type> _normalInstallerTypes
System::Collections::Generic::List_1<System::Type*>* Zenject::Context::_get__normalInstallerTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::_get__normalInstallerTypes");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<System::Type*>*>(___internal__instance, "_normalInstallerTypes"));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<System.Type> _normalInstallerTypes
void Zenject::Context::_set__normalInstallerTypes(System::Collections::Generic::List_1<System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::_set__normalInstallerTypes");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_normalInstallerTypes", value));
}
// Autogenerated method: Zenject.Context.get_Installers
System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>* Zenject::Context::get_Installers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::get_Installers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Installers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.set_Installers
void Zenject::Context::set_Installers(System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::set_Installers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Installers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.Context.get_InstallerPrefabs
System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>* Zenject::Context::get_InstallerPrefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::get_InstallerPrefabs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstallerPrefabs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.set_InstallerPrefabs
void Zenject::Context::set_InstallerPrefabs(System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::set_InstallerPrefabs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InstallerPrefabs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.Context.get_ScriptableObjectInstallers
System::Collections::Generic::IEnumerable_1<Zenject::ScriptableObjectInstaller*>* Zenject::Context::get_ScriptableObjectInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::get_ScriptableObjectInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ScriptableObjectInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::ScriptableObjectInstaller*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.set_ScriptableObjectInstallers
void Zenject::Context::set_ScriptableObjectInstallers(System::Collections::Generic::IEnumerable_1<Zenject::ScriptableObjectInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::set_ScriptableObjectInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ScriptableObjectInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.Context.get_NormalInstallerTypes
System::Collections::Generic::IEnumerable_1<System::Type*>* Zenject::Context::get_NormalInstallerTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::get_NormalInstallerTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NormalInstallerTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.set_NormalInstallerTypes
void Zenject::Context::set_NormalInstallerTypes(System::Collections::Generic::IEnumerable_1<System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::set_NormalInstallerTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NormalInstallerTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.Context.get_NormalInstallers
System::Collections::Generic::IEnumerable_1<Zenject::InstallerBase*>* Zenject::Context::get_NormalInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::get_NormalInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NormalInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::InstallerBase*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.set_NormalInstallers
void Zenject::Context::set_NormalInstallers(System::Collections::Generic::IEnumerable_1<Zenject::InstallerBase*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::set_NormalInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NormalInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.Context.get_Container
Zenject::DiContainer* Zenject::Context::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::get_Container");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.GetRootGameObjects
System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* Zenject::Context::GetRootGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::GetRootGameObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.AddNormalInstallerType
void Zenject::Context::AddNormalInstallerType(System::Type* installerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::AddNormalInstallerType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNormalInstallerType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(installerType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, installerType);
}
// Autogenerated method: Zenject.Context.AddNormalInstaller
void Zenject::Context::AddNormalInstaller(Zenject::InstallerBase* installer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::AddNormalInstaller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNormalInstaller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(installer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, installer);
}
// Autogenerated method: Zenject.Context.CheckInstallerPrefabTypes
void Zenject::Context::CheckInstallerPrefabTypes(System::Collections::Generic::List_1<Zenject::MonoInstaller*>* installers, System::Collections::Generic::List_1<Zenject::MonoInstaller*>* installerPrefabs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::CheckInstallerPrefabTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckInstallerPrefabTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(installers), ::il2cpp_utils::ExtractType(installerPrefabs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, installers, installerPrefabs);
}
// Autogenerated method: Zenject.Context.InstallInstallers
void Zenject::Context::InstallInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::InstallInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.Context.InstallInstallers
void Zenject::Context::InstallInstallers(System::Collections::Generic::List_1<Zenject::InstallerBase*>* normalInstallers, System::Collections::Generic::List_1<System::Type*>* normalInstallerTypes, System::Collections::Generic::List_1<Zenject::ScriptableObjectInstaller*>* scriptableObjectInstallers, System::Collections::Generic::List_1<Zenject::MonoInstaller*>* installers, System::Collections::Generic::List_1<Zenject::MonoInstaller*>* installerPrefabs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::InstallInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(normalInstallers), ::il2cpp_utils::ExtractType(normalInstallerTypes), ::il2cpp_utils::ExtractType(scriptableObjectInstallers), ::il2cpp_utils::ExtractType(installers), ::il2cpp_utils::ExtractType(installerPrefabs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, normalInstallers, normalInstallerTypes, scriptableObjectInstallers, installers, installerPrefabs);
}
// Autogenerated method: Zenject.Context.InstallSceneBindings
void Zenject::Context::InstallSceneBindings(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* injectableMonoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::InstallSceneBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallSceneBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(injectableMonoBehaviours)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectableMonoBehaviours);
}
// Autogenerated method: Zenject.Context.InstallZenjectBinding
void Zenject::Context::InstallZenjectBinding(Zenject::ZenjectBinding* binding) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::InstallZenjectBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallZenjectBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binding)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, binding);
}
// Autogenerated method: Zenject.Context.GetInjectableMonoBehaviours
void Zenject::Context::GetInjectableMonoBehaviours(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* components) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::GetInjectableMonoBehaviours");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInjectableMonoBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(components)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, components);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Context/Zenject.<>c
#include "Zenject/Context_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.Context/Zenject.<>c <>9
Zenject::Context::$$c* Zenject::Context::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::Context::$$c*>("Zenject", "Context/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.Context/Zenject.<>c <>9
void Zenject::Context::$$c::_set_$$9(Zenject::Context::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "Context/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Boolean> <>9__16_0
System::Func_2<System::Type*, bool>* Zenject::Context::$$c::_get_$$9__16_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::$$c::_get_$$9__16_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Type*, bool>*>("Zenject", "Context/<>c", "<>9__16_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Boolean> <>9__16_0
void Zenject::Context::$$c::_set_$$9__16_0(System::Func_2<System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::$$c::_set_$$9__16_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "Context/<>c", "<>9__16_0", value)));
}
// Autogenerated method: Zenject.Context/Zenject.<>c..cctor
void Zenject::Context::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "Context/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.Context/Zenject.<>c.<set_NormalInstallerTypes>b__16_0
bool Zenject::Context::$$c::$set_NormalInstallerTypes$b__16_0(System::Type* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::Context::$$c::<set_NormalInstallerTypes>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<set_NormalInstallerTypes>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.GameObjectContext
#include "Zenject/GameObjectContext.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Zenject.MonoKernel
#include "Zenject/MonoKernel.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action PreInstall
System::Action* Zenject::GameObjectContext::_get_PreInstall() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::_get_PreInstall");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "PreInstall"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action PreInstall
void Zenject::GameObjectContext::_set_PreInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::_set_PreInstall");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "PreInstall", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action PostInstall
System::Action* Zenject::GameObjectContext::_get_PostInstall() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::_get_PostInstall");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "PostInstall"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action PostInstall
void Zenject::GameObjectContext::_set_PostInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::_set_PostInstall");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "PostInstall", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action PreResolve
System::Action* Zenject::GameObjectContext::_get_PreResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::_get_PreResolve");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "PreResolve"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action PreResolve
void Zenject::GameObjectContext::_set_PreResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::_set_PreResolve");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "PreResolve", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action PostResolve
System::Action* Zenject::GameObjectContext::_get_PostResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::_get_PostResolve");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "PostResolve"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action PostResolve
void Zenject::GameObjectContext::_set_PostResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::_set_PostResolve");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "PostResolve", value));
}
// Autogenerated instance field getter
// Get instance field: private Zenject.MonoKernel _kernel
Zenject::MonoKernel* Zenject::GameObjectContext::_get__kernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::_get__kernel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::MonoKernel*>(___internal__instance, "_kernel"));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.MonoKernel _kernel
void Zenject::GameObjectContext::_set__kernel(Zenject::MonoKernel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::_set__kernel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_kernel", value));
}
// Autogenerated instance field getter
// Get instance field: private Zenject.DiContainer _container
Zenject::DiContainer* Zenject::GameObjectContext::_get__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::_get__container");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::DiContainer*>(___internal__instance, "_container"));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.DiContainer _container
void Zenject::GameObjectContext::_set__container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::_set__container");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_container", value));
}
// Autogenerated method: Zenject.GameObjectContext.add_PreInstall
void Zenject::GameObjectContext::add_PreInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::add_PreInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PreInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.remove_PreInstall
void Zenject::GameObjectContext::remove_PreInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::remove_PreInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PreInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.add_PostInstall
void Zenject::GameObjectContext::add_PostInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::add_PostInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PostInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.remove_PostInstall
void Zenject::GameObjectContext::remove_PostInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::remove_PostInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PostInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.add_PreResolve
void Zenject::GameObjectContext::add_PreResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::add_PreResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PreResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.remove_PreResolve
void Zenject::GameObjectContext::remove_PreResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::remove_PreResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PreResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.add_PostResolve
void Zenject::GameObjectContext::add_PostResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::add_PostResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PostResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.remove_PostResolve
void Zenject::GameObjectContext::remove_PostResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::remove_PostResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PostResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectContext.Construct
void Zenject::GameObjectContext::Construct(Zenject::DiContainer* parentContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::Construct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Construct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentContainer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parentContainer);
}
// Autogenerated method: Zenject.GameObjectContext.InstallBindings
void Zenject::GameObjectContext::InstallBindings(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* injectableMonoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(injectableMonoBehaviours)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectableMonoBehaviours);
}
// Autogenerated method: Zenject.GameObjectContext.get_Container
Zenject::DiContainer* Zenject::GameObjectContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::get_Container");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectContext.GetRootGameObjects
System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* Zenject::GameObjectContext::GetRootGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::GetRootGameObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectContext.RunInternal
void Zenject::GameObjectContext::RunInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::RunInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectContext.GetInjectableMonoBehaviours
void Zenject::GameObjectContext::GetInjectableMonoBehaviours(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* monoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::GameObjectContext::GetInjectableMonoBehaviours");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInjectableMonoBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monoBehaviours)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, monoBehaviours);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ProjectContext
#include "Zenject/ProjectContext.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Zenject.ZenjectSettings
#include "Zenject/ZenjectSettings.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String ProjectContextResourcePath
::Il2CppString* Zenject::ProjectContext::_get_ProjectContextResourcePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_get_ProjectContextResourcePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Zenject", "ProjectContext", "ProjectContextResourcePath"));
}
// Autogenerated static field setter
// Set static field: static public System.String ProjectContextResourcePath
void Zenject::ProjectContext::_set_ProjectContextResourcePath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_set_ProjectContextResourcePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ProjectContext", "ProjectContextResourcePath", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ProjectContextResourcePathOld
::Il2CppString* Zenject::ProjectContext::_get_ProjectContextResourcePathOld() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_get_ProjectContextResourcePathOld");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Zenject", "ProjectContext", "ProjectContextResourcePathOld"));
}
// Autogenerated static field setter
// Set static field: static public System.String ProjectContextResourcePathOld
void Zenject::ProjectContext::_set_ProjectContextResourcePathOld(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_set_ProjectContextResourcePathOld");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ProjectContext", "ProjectContextResourcePathOld", value));
}
// Autogenerated static field getter
// Get static field: static private Zenject.ProjectContext _instance
Zenject::ProjectContext* Zenject::ProjectContext::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ProjectContext*>("Zenject", "ProjectContext", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Zenject.ProjectContext _instance
void Zenject::ProjectContext::_set__instance(Zenject::ProjectContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ProjectContext", "_instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean <ValidateOnNextRun>k__BackingField
bool Zenject::ProjectContext::_get_$ValidateOnNextRun$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_get_$ValidateOnNextRun$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("Zenject", "ProjectContext", "<ValidateOnNextRun>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean <ValidateOnNextRun>k__BackingField
void Zenject::ProjectContext::_set_$ValidateOnNextRun$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_set_$ValidateOnNextRun$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ProjectContext", "<ValidateOnNextRun>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action PreInstall
System::Action* Zenject::ProjectContext::_get_PreInstall() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_get_PreInstall");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "PreInstall"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action PreInstall
void Zenject::ProjectContext::_set_PreInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_set_PreInstall");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "PreInstall", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action PostInstall
System::Action* Zenject::ProjectContext::_get_PostInstall() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_get_PostInstall");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "PostInstall"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action PostInstall
void Zenject::ProjectContext::_set_PostInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_set_PostInstall");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "PostInstall", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action PreResolve
System::Action* Zenject::ProjectContext::_get_PreResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_get_PreResolve");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "PreResolve"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action PreResolve
void Zenject::ProjectContext::_set_PreResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_set_PreResolve");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "PreResolve", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action PostResolve
System::Action* Zenject::ProjectContext::_get_PostResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_get_PostResolve");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "PostResolve"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action PostResolve
void Zenject::ProjectContext::_set_PostResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_set_PostResolve");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "PostResolve", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _parentNewObjectsUnderContext
bool Zenject::ProjectContext::_get__parentNewObjectsUnderContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_get__parentNewObjectsUnderContext");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_parentNewObjectsUnderContext"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _parentNewObjectsUnderContext
void Zenject::ProjectContext::_set__parentNewObjectsUnderContext(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_set__parentNewObjectsUnderContext");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_parentNewObjectsUnderContext", value));
}
// Autogenerated instance field getter
// Get instance field: private Zenject.ReflectionBakingCoverageModes _editorReflectionBakingCoverageMode
Zenject::ReflectionBakingCoverageModes Zenject::ProjectContext::_get__editorReflectionBakingCoverageMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_get__editorReflectionBakingCoverageMode");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ReflectionBakingCoverageModes>(___internal__instance, "_editorReflectionBakingCoverageMode"));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.ReflectionBakingCoverageModes _editorReflectionBakingCoverageMode
void Zenject::ProjectContext::_set__editorReflectionBakingCoverageMode(Zenject::ReflectionBakingCoverageModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_set__editorReflectionBakingCoverageMode");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_editorReflectionBakingCoverageMode", value));
}
// Autogenerated instance field getter
// Get instance field: private Zenject.ReflectionBakingCoverageModes _buildsReflectionBakingCoverageMode
Zenject::ReflectionBakingCoverageModes Zenject::ProjectContext::_get__buildsReflectionBakingCoverageMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_get__buildsReflectionBakingCoverageMode");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ReflectionBakingCoverageModes>(___internal__instance, "_buildsReflectionBakingCoverageMode"));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.ReflectionBakingCoverageModes _buildsReflectionBakingCoverageMode
void Zenject::ProjectContext::_set__buildsReflectionBakingCoverageMode(Zenject::ReflectionBakingCoverageModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_set__buildsReflectionBakingCoverageMode");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_buildsReflectionBakingCoverageMode", value));
}
// Autogenerated instance field getter
// Get instance field: private Zenject.ZenjectSettings _settings
Zenject::ZenjectSettings* Zenject::ProjectContext::_get__settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_get__settings");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ZenjectSettings*>(___internal__instance, "_settings"));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.ZenjectSettings _settings
void Zenject::ProjectContext::_set__settings(Zenject::ZenjectSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_set__settings");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_settings", value));
}
// Autogenerated instance field getter
// Get instance field: private Zenject.DiContainer _container
Zenject::DiContainer* Zenject::ProjectContext::_get__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_get__container");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::DiContainer*>(___internal__instance, "_container"));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.DiContainer _container
void Zenject::ProjectContext::_set__container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::_set__container");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_container", value));
}
// Autogenerated method: Zenject.ProjectContext.get_HasInstance
bool Zenject::ProjectContext::get_HasInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::get_HasInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ProjectContext", "get_HasInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.get_Instance
Zenject::ProjectContext* Zenject::ProjectContext::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ProjectContext", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ProjectContext*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.get_ValidateOnNextRun
bool Zenject::ProjectContext::get_ValidateOnNextRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::get_ValidateOnNextRun");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ProjectContext", "get_ValidateOnNextRun", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.set_ValidateOnNextRun
void Zenject::ProjectContext::set_ValidateOnNextRun(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::set_ValidateOnNextRun");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ProjectContext", "set_ValidateOnNextRun", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.get_ParentNewObjectsUnderContext
bool Zenject::ProjectContext::get_ParentNewObjectsUnderContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::get_ParentNewObjectsUnderContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNewObjectsUnderContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.set_ParentNewObjectsUnderContext
void Zenject::ProjectContext::set_ParentNewObjectsUnderContext(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::set_ParentNewObjectsUnderContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParentNewObjectsUnderContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.add_PreInstall
void Zenject::ProjectContext::add_PreInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::add_PreInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PreInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.remove_PreInstall
void Zenject::ProjectContext::remove_PreInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::remove_PreInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PreInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.add_PostInstall
void Zenject::ProjectContext::add_PostInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::add_PostInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PostInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.remove_PostInstall
void Zenject::ProjectContext::remove_PostInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::remove_PostInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PostInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.add_PreResolve
void Zenject::ProjectContext::add_PreResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::add_PreResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PreResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.remove_PreResolve
void Zenject::ProjectContext::remove_PreResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::remove_PreResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PreResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.add_PostResolve
void Zenject::ProjectContext::add_PostResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::add_PostResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PostResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.remove_PostResolve
void Zenject::ProjectContext::remove_PostResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::remove_PostResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PostResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProjectContext.TryGetPrefab
UnityEngine::GameObject* Zenject::ProjectContext::TryGetPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::TryGetPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ProjectContext", "TryGetPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.InstantiateAndInitialize
void Zenject::ProjectContext::InstantiateAndInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::InstantiateAndInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ProjectContext", "InstantiateAndInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.EnsureIsInitialized
void Zenject::ProjectContext::EnsureIsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::EnsureIsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureIsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.Awake
void Zenject::ProjectContext::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.Initialize
void Zenject::ProjectContext::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.InstallBindings
void Zenject::ProjectContext::InstallBindings(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* injectableMonoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(injectableMonoBehaviours)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectableMonoBehaviours);
}
// Autogenerated method: Zenject.ProjectContext.get_Container
Zenject::DiContainer* Zenject::ProjectContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::get_Container");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.GetRootGameObjects
System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* Zenject::ProjectContext::GetRootGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::GetRootGameObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProjectContext.GetInjectableMonoBehaviours
void Zenject::ProjectContext::GetInjectableMonoBehaviours(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* monoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ProjectContext::GetInjectableMonoBehaviours");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInjectableMonoBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monoBehaviours)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, monoBehaviours);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.RunnableContext
#include "Zenject/RunnableContext.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean _staticAutoRun
bool Zenject::RunnableContext::_get__staticAutoRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::RunnableContext::_get__staticAutoRun");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Zenject", "RunnableContext", "_staticAutoRun"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _staticAutoRun
void Zenject::RunnableContext::_set__staticAutoRun(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::RunnableContext::_set__staticAutoRun");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "RunnableContext", "_staticAutoRun", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _autoRun
bool Zenject::RunnableContext::_get__autoRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::RunnableContext::_get__autoRun");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_autoRun"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _autoRun
void Zenject::RunnableContext::_set__autoRun(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::RunnableContext::_set__autoRun");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_autoRun", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Initialized>k__BackingField
bool Zenject::RunnableContext::_get_$Initialized$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::RunnableContext::_get_$Initialized$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<Initialized>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <Initialized>k__BackingField
void Zenject::RunnableContext::_set_$Initialized$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::RunnableContext::_set_$Initialized$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<Initialized>k__BackingField", value));
}
// Autogenerated method: Zenject.RunnableContext.get_Initialized
bool Zenject::RunnableContext::get_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::RunnableContext::get_Initialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Initialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.RunnableContext.set_Initialized
void Zenject::RunnableContext::set_Initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::RunnableContext::set_Initialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Initialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.RunnableContext.Initialize
void Zenject::RunnableContext::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::RunnableContext::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.RunnableContext.Run
void Zenject::RunnableContext::Run() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::RunnableContext::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.RunnableContext.RunInternal
void Zenject::RunnableContext::RunInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::RunnableContext::RunInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.RunnableContext..cctor
void Zenject::RunnableContext::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::RunnableContext::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "RunnableContext", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SceneContext
#include "Zenject/SceneContext.hpp"
// Including type: Zenject.SceneContext/Zenject.<>c__DisplayClass49_0
#include "Zenject/SceneContext_--c__DisplayClass49_0.hpp"
// Including type: Zenject.SceneContext/Zenject.<>c
#include "Zenject/SceneContext_--c.hpp"
// Including type: Zenject.SceneContext/Zenject.<>c__DisplayClass51_0
#include "Zenject/SceneContext_--c__DisplayClass51_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.SceneDecoratorContext
#include "Zenject/SceneDecoratorContext.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Action`1<Zenject.DiContainer> ExtraBindingsEarlyInstallMethod
System::Action_1<Zenject::DiContainer*>* Zenject::SceneContext::_get_ExtraBindingsEarlyInstallMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_get_ExtraBindingsEarlyInstallMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<Zenject::DiContainer*>*>("Zenject", "SceneContext", "ExtraBindingsEarlyInstallMethod"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Zenject.DiContainer> ExtraBindingsEarlyInstallMethod
void Zenject::SceneContext::_set_ExtraBindingsEarlyInstallMethod(System::Action_1<Zenject::DiContainer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_set_ExtraBindingsEarlyInstallMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SceneContext", "ExtraBindingsEarlyInstallMethod", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Zenject.DiContainer> ExtraBindingsInstallMethod
System::Action_1<Zenject::DiContainer*>* Zenject::SceneContext::_get_ExtraBindingsInstallMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_get_ExtraBindingsInstallMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<Zenject::DiContainer*>*>("Zenject", "SceneContext", "ExtraBindingsInstallMethod"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Zenject.DiContainer> ExtraBindingsInstallMethod
void Zenject::SceneContext::_set_ExtraBindingsInstallMethod(System::Action_1<Zenject::DiContainer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_set_ExtraBindingsInstallMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SceneContext", "ExtraBindingsInstallMethod", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Zenject.DiContainer> ExtraBindingsLateInstallMethod
System::Action_1<Zenject::DiContainer*>* Zenject::SceneContext::_get_ExtraBindingsLateInstallMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_get_ExtraBindingsLateInstallMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<Zenject::DiContainer*>*>("Zenject", "SceneContext", "ExtraBindingsLateInstallMethod"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Zenject.DiContainer> ExtraBindingsLateInstallMethod
void Zenject::SceneContext::_set_ExtraBindingsLateInstallMethod(System::Action_1<Zenject::DiContainer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_set_ExtraBindingsLateInstallMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SceneContext", "ExtraBindingsLateInstallMethod", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<Zenject.DiContainer> ExtraPostInstallMethod
System::Action_1<Zenject::DiContainer*>* Zenject::SceneContext::_get_ExtraPostInstallMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_get_ExtraPostInstallMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<Zenject::DiContainer*>*>("Zenject", "SceneContext", "ExtraPostInstallMethod"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<Zenject.DiContainer> ExtraPostInstallMethod
void Zenject::SceneContext::_set_ExtraPostInstallMethod(System::Action_1<Zenject::DiContainer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_set_ExtraPostInstallMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SceneContext", "ExtraPostInstallMethod", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.IEnumerable`1<Zenject.DiContainer> ParentContainers
System::Collections::Generic::IEnumerable_1<Zenject::DiContainer*>* Zenject::SceneContext::_get_ParentContainers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_get_ParentContainers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::IEnumerable_1<Zenject::DiContainer*>*>("Zenject", "SceneContext", "ParentContainers"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.IEnumerable`1<Zenject.DiContainer> ParentContainers
void Zenject::SceneContext::_set_ParentContainers(System::Collections::Generic::IEnumerable_1<Zenject::DiContainer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_set_ParentContainers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "SceneContext", "ParentContainers", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action PreInstall
System::Action* Zenject::SceneContext::_get_PreInstall() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_get_PreInstall");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "PreInstall"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action PreInstall
void Zenject::SceneContext::_set_PreInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_set_PreInstall");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "PreInstall", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action PostInstall
System::Action* Zenject::SceneContext::_get_PostInstall() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_get_PostInstall");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "PostInstall"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action PostInstall
void Zenject::SceneContext::_set_PostInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_set_PostInstall");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "PostInstall", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action PreResolve
System::Action* Zenject::SceneContext::_get_PreResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_get_PreResolve");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "PreResolve"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action PreResolve
void Zenject::SceneContext::_set_PreResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_set_PreResolve");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "PreResolve", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action PostResolve
System::Action* Zenject::SceneContext::_get_PostResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_get_PostResolve");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "PostResolve"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action PostResolve
void Zenject::SceneContext::_set_PostResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_set_PostResolve");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "PostResolve", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent OnPreInstall
UnityEngine::Events::UnityEvent* Zenject::SceneContext::_get_OnPreInstall() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_get_OnPreInstall");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Events::UnityEvent*>(___internal__instance, "OnPreInstall"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Events.UnityEvent OnPreInstall
void Zenject::SceneContext::_set_OnPreInstall(UnityEngine::Events::UnityEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_set_OnPreInstall");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "OnPreInstall", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent OnPostInstall
UnityEngine::Events::UnityEvent* Zenject::SceneContext::_get_OnPostInstall() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_get_OnPostInstall");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Events::UnityEvent*>(___internal__instance, "OnPostInstall"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Events.UnityEvent OnPostInstall
void Zenject::SceneContext::_set_OnPostInstall(UnityEngine::Events::UnityEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_set_OnPostInstall");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "OnPostInstall", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent OnPreResolve
UnityEngine::Events::UnityEvent* Zenject::SceneContext::_get_OnPreResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_get_OnPreResolve");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Events::UnityEvent*>(___internal__instance, "OnPreResolve"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Events.UnityEvent OnPreResolve
void Zenject::SceneContext::_set_OnPreResolve(UnityEngine::Events::UnityEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_set_OnPreResolve");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "OnPreResolve", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent OnPostResolve
UnityEngine::Events::UnityEvent* Zenject::SceneContext::_get_OnPostResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_get_OnPostResolve");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Events::UnityEvent*>(___internal__instance, "OnPostResolve"));
}
// Autogenerated instance field setter
// Set instance field: public UnityEngine.Events.UnityEvent OnPostResolve
void Zenject::SceneContext::_set_OnPostResolve(UnityEngine::Events::UnityEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_set_OnPostResolve");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "OnPostResolve", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _parentNewObjectsUnderSceneContext
bool Zenject::SceneContext::_get__parentNewObjectsUnderSceneContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_get__parentNewObjectsUnderSceneContext");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_parentNewObjectsUnderSceneContext"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _parentNewObjectsUnderSceneContext
void Zenject::SceneContext::_set__parentNewObjectsUnderSceneContext(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_set__parentNewObjectsUnderSceneContext");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_parentNewObjectsUnderSceneContext", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> _contractNames
System::Collections::Generic::List_1<::Il2CppString*>* Zenject::SceneContext::_get__contractNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_get__contractNames");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<::Il2CppString*>*>(___internal__instance, "_contractNames"));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<System.String> _contractNames
void Zenject::SceneContext::_set__contractNames(System::Collections::Generic::List_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_set__contractNames");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_contractNames", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> _parentContractNames
System::Collections::Generic::List_1<::Il2CppString*>* Zenject::SceneContext::_get__parentContractNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_get__parentContractNames");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<::Il2CppString*>*>(___internal__instance, "_parentContractNames"));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<System.String> _parentContractNames
void Zenject::SceneContext::_set__parentContractNames(System::Collections::Generic::List_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_set__parentContractNames");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_parentContractNames", value));
}
// Autogenerated instance field getter
// Get instance field: private Zenject.DiContainer _container
Zenject::DiContainer* Zenject::SceneContext::_get__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_get__container");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::DiContainer*>(___internal__instance, "_container"));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.DiContainer _container
void Zenject::SceneContext::_set__container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_set__container");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_container", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Zenject.SceneDecoratorContext> _decoratorContexts
System::Collections::Generic::List_1<Zenject::SceneDecoratorContext*>* Zenject::SceneContext::_get__decoratorContexts() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_get__decoratorContexts");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<Zenject::SceneDecoratorContext*>*>(___internal__instance, "_decoratorContexts"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<Zenject.SceneDecoratorContext> _decoratorContexts
void Zenject::SceneContext::_set__decoratorContexts(System::Collections::Generic::List_1<Zenject::SceneDecoratorContext*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_set__decoratorContexts");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_decoratorContexts", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasInstalled
bool Zenject::SceneContext::_get__hasInstalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_get__hasInstalled");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_hasInstalled"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _hasInstalled
void Zenject::SceneContext::_set__hasInstalled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_set__hasInstalled");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_hasInstalled", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasResolved
bool Zenject::SceneContext::_get__hasResolved() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_get__hasResolved");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_hasResolved"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _hasResolved
void Zenject::SceneContext::_set__hasResolved(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::_set__hasResolved");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_hasResolved", value));
}
// Autogenerated method: Zenject.SceneContext.get_HasResolved
bool Zenject::SceneContext::get_HasResolved() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::get_HasResolved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasResolved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.get_HasInstalled
bool Zenject::SceneContext::get_HasInstalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::get_HasInstalled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasInstalled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.get_IsValidating
bool Zenject::SceneContext::get_IsValidating() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::get_IsValidating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValidating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.get_ContractNames
System::Collections::Generic::IEnumerable_1<::Il2CppString*>* Zenject::SceneContext::get_ContractNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::get_ContractNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContractNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.set_ContractNames
void Zenject::SceneContext::set_ContractNames(System::Collections::Generic::IEnumerable_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::set_ContractNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContractNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.get_ParentContractNames
System::Collections::Generic::IEnumerable_1<::Il2CppString*>* Zenject::SceneContext::get_ParentContractNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::get_ParentContractNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentContractNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.set_ParentContractNames
void Zenject::SceneContext::set_ParentContractNames(System::Collections::Generic::IEnumerable_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::set_ParentContractNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParentContractNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.get_ParentNewObjectsUnderSceneContext
bool Zenject::SceneContext::get_ParentNewObjectsUnderSceneContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::get_ParentNewObjectsUnderSceneContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNewObjectsUnderSceneContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.set_ParentNewObjectsUnderSceneContext
void Zenject::SceneContext::set_ParentNewObjectsUnderSceneContext(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::set_ParentNewObjectsUnderSceneContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParentNewObjectsUnderSceneContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.add_PreInstall
void Zenject::SceneContext::add_PreInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::add_PreInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PreInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.remove_PreInstall
void Zenject::SceneContext::remove_PreInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::remove_PreInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PreInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.add_PostInstall
void Zenject::SceneContext::add_PostInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::add_PostInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PostInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.remove_PostInstall
void Zenject::SceneContext::remove_PostInstall(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::remove_PostInstall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PostInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.add_PreResolve
void Zenject::SceneContext::add_PreResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::add_PreResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PreResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.remove_PreResolve
void Zenject::SceneContext::remove_PreResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::remove_PreResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PreResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.add_PostResolve
void Zenject::SceneContext::add_PostResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::add_PostResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_PostResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.remove_PostResolve
void Zenject::SceneContext::remove_PostResolve(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::remove_PostResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_PostResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneContext.Awake
void Zenject::SceneContext::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.Validate
void Zenject::SceneContext::Validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.GetParentContainers
System::Collections::Generic::IEnumerable_1<Zenject::DiContainer*>* Zenject::SceneContext::GetParentContainers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::GetParentContainers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentContainers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::DiContainer*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.LookupDecoratorContexts
System::Collections::Generic::List_1<Zenject::SceneDecoratorContext*>* Zenject::SceneContext::LookupDecoratorContexts() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::LookupDecoratorContexts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupDecoratorContexts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<Zenject::SceneDecoratorContext*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.Install
void Zenject::SceneContext::Install() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::Install");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Install", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.Resolve
void Zenject::SceneContext::Resolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::Resolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.InstallBindings
void Zenject::SceneContext::InstallBindings(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* injectableMonoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(injectableMonoBehaviours)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectableMonoBehaviours);
}
// Autogenerated method: Zenject.SceneContext.Create
Zenject::SceneContext* Zenject::SceneContext::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SceneContext", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::SceneContext*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.<LookupDecoratorContexts>b__50_2
bool Zenject::SceneContext::$LookupDecoratorContexts$b__50_2(Zenject::SceneDecoratorContext* decoratorContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::<LookupDecoratorContexts>b__50_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LookupDecoratorContexts>b__50_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(decoratorContext)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, decoratorContext);
}
// Autogenerated method: Zenject.SceneContext.get_Container
Zenject::DiContainer* Zenject::SceneContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::get_Container");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.RunInternal
void Zenject::SceneContext::RunInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::RunInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.GetRootGameObjects
System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* Zenject::SceneContext::GetRootGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::GetRootGameObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneContext.GetInjectableMonoBehaviours
void Zenject::SceneContext::GetInjectableMonoBehaviours(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* monoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::GetInjectableMonoBehaviours");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInjectableMonoBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monoBehaviours)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, monoBehaviours);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SceneContext/Zenject.<>c__DisplayClass49_0
#include "Zenject/SceneContext_--c__DisplayClass49_0.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.IEnumerable`1<System.String> parentContractNames
System::Collections::Generic::IEnumerable_1<::Il2CppString*>* Zenject::SceneContext::$$c__DisplayClass49_0::_get_parentContractNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c__DisplayClass49_0::_get_parentContractNames");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::IEnumerable_1<::Il2CppString*>*>(___internal__instance, "parentContractNames"));
}
// Autogenerated instance field setter
// Set instance field: public System.Collections.Generic.IEnumerable`1<System.String> parentContractNames
void Zenject::SceneContext::$$c__DisplayClass49_0::_set_parentContractNames(System::Collections::Generic::IEnumerable_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c__DisplayClass49_0::_set_parentContractNames");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "parentContractNames", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<System.String,System.Boolean> <>9__4
System::Func_2<::Il2CppString*, bool>* Zenject::SceneContext::$$c__DisplayClass49_0::_get_$$9__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c__DisplayClass49_0::_get_$$9__4");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppString*, bool>*>(___internal__instance, "<>9__4")));
}
// Autogenerated instance field setter
// Set instance field: public System.Func`2<System.String,System.Boolean> <>9__4
void Zenject::SceneContext::$$c__DisplayClass49_0::_set_$$9__4(System::Func_2<::Il2CppString*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c__DisplayClass49_0::_set_$$9__4");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>9__4", value));
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c__DisplayClass49_0.<GetParentContainers>b__2
bool Zenject::SceneContext::$$c__DisplayClass49_0::$GetParentContainers$b__2(Zenject::SceneContext* sceneContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c__DisplayClass49_0::<GetParentContainers>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetParentContainers>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneContext)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sceneContext);
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c__DisplayClass49_0.<GetParentContainers>b__4
bool Zenject::SceneContext::$$c__DisplayClass49_0::$GetParentContainers$b__4(::Il2CppString* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c__DisplayClass49_0::<GetParentContainers>b__4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetParentContainers>b__4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SceneContext/Zenject.<>c
#include "Zenject/SceneContext_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.SceneDecoratorContext
#include "Zenject/SceneDecoratorContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.SceneContext/Zenject.<>c <>9
Zenject::SceneContext::$$c* Zenject::SceneContext::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::SceneContext::$$c*>("Zenject", "SceneContext/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.SceneContext/Zenject.<>c <>9
void Zenject::SceneContext::$$c::_set_$$9(Zenject::SceneContext::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "SceneContext/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.SceneManagement.Scene,System.Collections.Generic.IEnumerable`1<UnityEngine.GameObject>> <>9__49_0
System::Func_2<UnityEngine::SceneManagement::Scene, System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*>* Zenject::SceneContext::$$c::_get_$$9__49_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c::_get_$$9__49_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::SceneManagement::Scene, System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*>*>("Zenject", "SceneContext/<>c", "<>9__49_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.SceneManagement.Scene,System.Collections.Generic.IEnumerable`1<UnityEngine.GameObject>> <>9__49_0
void Zenject::SceneContext::$$c::_set_$$9__49_0(System::Func_2<UnityEngine::SceneManagement::Scene, System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c::_set_$$9__49_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "SceneContext/<>c", "<>9__49_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.GameObject,System.Collections.Generic.IEnumerable`1<Zenject.SceneContext>> <>9__49_1
System::Func_2<UnityEngine::GameObject*, System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>*>* Zenject::SceneContext::$$c::_get_$$9__49_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c::_get_$$9__49_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::GameObject*, System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>*>*>("Zenject", "SceneContext/<>c", "<>9__49_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.GameObject,System.Collections.Generic.IEnumerable`1<Zenject.SceneContext>> <>9__49_1
void Zenject::SceneContext::$$c::_set_$$9__49_1(System::Func_2<UnityEngine::GameObject*, System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c::_set_$$9__49_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "SceneContext/<>c", "<>9__49_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.SceneContext,Zenject.DiContainer> <>9__49_3
System::Func_2<Zenject::SceneContext*, Zenject::DiContainer*>* Zenject::SceneContext::$$c::_get_$$9__49_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c::_get_$$9__49_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<Zenject::SceneContext*, Zenject::DiContainer*>*>("Zenject", "SceneContext/<>c", "<>9__49_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.SceneContext,Zenject.DiContainer> <>9__49_3
void Zenject::SceneContext::$$c::_set_$$9__49_3(System::Func_2<Zenject::SceneContext*, Zenject::DiContainer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c::_set_$$9__49_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "SceneContext/<>c", "<>9__49_3", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.SceneManagement.Scene,System.Collections.Generic.IEnumerable`1<UnityEngine.GameObject>> <>9__50_0
System::Func_2<UnityEngine::SceneManagement::Scene, System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*>* Zenject::SceneContext::$$c::_get_$$9__50_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c::_get_$$9__50_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::SceneManagement::Scene, System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*>*>("Zenject", "SceneContext/<>c", "<>9__50_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.SceneManagement.Scene,System.Collections.Generic.IEnumerable`1<UnityEngine.GameObject>> <>9__50_0
void Zenject::SceneContext::$$c::_set_$$9__50_0(System::Func_2<UnityEngine::SceneManagement::Scene, System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c::_set_$$9__50_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "SceneContext/<>c", "<>9__50_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.GameObject,System.Collections.Generic.IEnumerable`1<Zenject.SceneDecoratorContext>> <>9__50_1
System::Func_2<UnityEngine::GameObject*, System::Collections::Generic::IEnumerable_1<Zenject::SceneDecoratorContext*>*>* Zenject::SceneContext::$$c::_get_$$9__50_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c::_get_$$9__50_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::GameObject*, System::Collections::Generic::IEnumerable_1<Zenject::SceneDecoratorContext*>*>*>("Zenject", "SceneContext/<>c", "<>9__50_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.GameObject,System.Collections.Generic.IEnumerable`1<Zenject.SceneDecoratorContext>> <>9__50_1
void Zenject::SceneContext::$$c::_set_$$9__50_1(System::Func_2<UnityEngine::GameObject*, System::Collections::Generic::IEnumerable_1<Zenject::SceneDecoratorContext*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c::_set_$$9__50_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "SceneContext/<>c", "<>9__50_1", value)));
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c..cctor
void Zenject::SceneContext::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SceneContext/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c.<GetParentContainers>b__49_0
System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* Zenject::SceneContext::$$c::$GetParentContainers$b__49_0(UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c::<GetParentContainers>b__49_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetParentContainers>b__49_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*, false>(this, ___internal__method, scene);
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c.<GetParentContainers>b__49_1
System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>* Zenject::SceneContext::$$c::$GetParentContainers$b__49_1(UnityEngine::GameObject* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c::<GetParentContainers>b__49_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetParentContainers>b__49_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::SceneContext*>*, false>(this, ___internal__method, root);
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c.<GetParentContainers>b__49_3
Zenject::DiContainer* Zenject::SceneContext::$$c::$GetParentContainers$b__49_3(Zenject::SceneContext* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c::<GetParentContainers>b__49_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetParentContainers>b__49_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c.<LookupDecoratorContexts>b__50_0
System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* Zenject::SceneContext::$$c::$LookupDecoratorContexts$b__50_0(UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c::<LookupDecoratorContexts>b__50_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LookupDecoratorContexts>b__50_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*, false>(this, ___internal__method, scene);
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c.<LookupDecoratorContexts>b__50_1
System::Collections::Generic::IEnumerable_1<Zenject::SceneDecoratorContext*>* Zenject::SceneContext::$$c::$LookupDecoratorContexts$b__50_1(UnityEngine::GameObject* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c::<LookupDecoratorContexts>b__50_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LookupDecoratorContexts>b__50_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::SceneDecoratorContext*>*, false>(this, ___internal__method, root);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SceneContext/Zenject.<>c__DisplayClass51_0
#include "Zenject/SceneContext_--c__DisplayClass51_0.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.IEnumerable`1<Zenject.DiContainer> parents
System::Collections::Generic::IEnumerable_1<Zenject::DiContainer*>* Zenject::SceneContext::$$c__DisplayClass51_0::_get_parents() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c__DisplayClass51_0::_get_parents");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::IEnumerable_1<Zenject::DiContainer*>*>(___internal__instance, "parents"));
}
// Autogenerated instance field setter
// Set instance field: public System.Collections.Generic.IEnumerable`1<Zenject.DiContainer> parents
void Zenject::SceneContext::$$c__DisplayClass51_0::_set_parents(System::Collections::Generic::IEnumerable_1<Zenject::DiContainer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c__DisplayClass51_0::_set_parents");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "parents", value));
}
// Autogenerated method: Zenject.SceneContext/Zenject.<>c__DisplayClass51_0.<Install>b__0
bool Zenject::SceneContext::$$c__DisplayClass51_0::$Install$b__0(Zenject::DiContainer* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneContext::$$c__DisplayClass51_0::<Install>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Install>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SceneDecoratorContext
#include "Zenject/SceneDecoratorContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.MonoInstaller
#include "Zenject/MonoInstaller.hpp"
// Including type: Zenject.ScriptableObjectInstaller
#include "Zenject/ScriptableObjectInstaller.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Zenject.MonoInstaller> _lateInstallers
System::Collections::Generic::List_1<Zenject::MonoInstaller*>* Zenject::SceneDecoratorContext::_get__lateInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::_get__lateInstallers");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<Zenject::MonoInstaller*>*>(___internal__instance, "_lateInstallers"));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<Zenject.MonoInstaller> _lateInstallers
void Zenject::SceneDecoratorContext::_set__lateInstallers(System::Collections::Generic::List_1<Zenject::MonoInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::_set__lateInstallers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_lateInstallers", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Zenject.MonoInstaller> _lateInstallerPrefabs
System::Collections::Generic::List_1<Zenject::MonoInstaller*>* Zenject::SceneDecoratorContext::_get__lateInstallerPrefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::_get__lateInstallerPrefabs");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<Zenject::MonoInstaller*>*>(___internal__instance, "_lateInstallerPrefabs"));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<Zenject.MonoInstaller> _lateInstallerPrefabs
void Zenject::SceneDecoratorContext::_set__lateInstallerPrefabs(System::Collections::Generic::List_1<Zenject::MonoInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::_set__lateInstallerPrefabs");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_lateInstallerPrefabs", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Zenject.ScriptableObjectInstaller> _lateScriptableObjectInstallers
System::Collections::Generic::List_1<Zenject::ScriptableObjectInstaller*>* Zenject::SceneDecoratorContext::_get__lateScriptableObjectInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::_get__lateScriptableObjectInstallers");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<Zenject::ScriptableObjectInstaller*>*>(___internal__instance, "_lateScriptableObjectInstallers"));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<Zenject.ScriptableObjectInstaller> _lateScriptableObjectInstallers
void Zenject::SceneDecoratorContext::_set__lateScriptableObjectInstallers(System::Collections::Generic::List_1<Zenject::ScriptableObjectInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::_set__lateScriptableObjectInstallers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_lateScriptableObjectInstallers", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _decoratedContractName
::Il2CppString* Zenject::SceneDecoratorContext::_get__decoratedContractName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::_get__decoratedContractName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "_decoratedContractName"));
}
// Autogenerated instance field setter
// Set instance field: private System.String _decoratedContractName
void Zenject::SceneDecoratorContext::_set__decoratedContractName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::_set__decoratedContractName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_decoratedContractName", value));
}
// Autogenerated instance field getter
// Get instance field: private Zenject.DiContainer _container
Zenject::DiContainer* Zenject::SceneDecoratorContext::_get__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::_get__container");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::DiContainer*>(___internal__instance, "_container"));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.DiContainer _container
void Zenject::SceneDecoratorContext::_set__container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::_set__container");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_container", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> _injectableMonoBehaviours
System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* Zenject::SceneDecoratorContext::_get__injectableMonoBehaviours() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::_get__injectableMonoBehaviours");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>*>(___internal__instance, "_injectableMonoBehaviours"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<UnityEngine.MonoBehaviour> _injectableMonoBehaviours
void Zenject::SceneDecoratorContext::_set__injectableMonoBehaviours(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::_set__injectableMonoBehaviours");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_injectableMonoBehaviours", value));
}
// Autogenerated method: Zenject.SceneDecoratorContext.get_LateInstallers
System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>* Zenject::SceneDecoratorContext::get_LateInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::get_LateInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LateInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.set_LateInstallers
void Zenject::SceneDecoratorContext::set_LateInstallers(System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::set_LateInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LateInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneDecoratorContext.get_LateInstallerPrefabs
System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>* Zenject::SceneDecoratorContext::get_LateInstallerPrefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::get_LateInstallerPrefabs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LateInstallerPrefabs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.set_LateInstallerPrefabs
void Zenject::SceneDecoratorContext::set_LateInstallerPrefabs(System::Collections::Generic::IEnumerable_1<Zenject::MonoInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::set_LateInstallerPrefabs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LateInstallerPrefabs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneDecoratorContext.get_LateScriptableObjectInstallers
System::Collections::Generic::IEnumerable_1<Zenject::ScriptableObjectInstaller*>* Zenject::SceneDecoratorContext::get_LateScriptableObjectInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::get_LateScriptableObjectInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LateScriptableObjectInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::ScriptableObjectInstaller*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.set_LateScriptableObjectInstallers
void Zenject::SceneDecoratorContext::set_LateScriptableObjectInstallers(System::Collections::Generic::IEnumerable_1<Zenject::ScriptableObjectInstaller*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::set_LateScriptableObjectInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LateScriptableObjectInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SceneDecoratorContext.get_DecoratedContractName
::Il2CppString* Zenject::SceneDecoratorContext::get_DecoratedContractName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::get_DecoratedContractName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DecoratedContractName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.Initialize
void Zenject::SceneDecoratorContext::Initialize(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SceneDecoratorContext.InstallDecoratorSceneBindings
void Zenject::SceneDecoratorContext::InstallDecoratorSceneBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::InstallDecoratorSceneBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallDecoratorSceneBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.InstallDecoratorInstallers
void Zenject::SceneDecoratorContext::InstallDecoratorInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::InstallDecoratorInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallDecoratorInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.InstallLateDecoratorInstallers
void Zenject::SceneDecoratorContext::InstallLateDecoratorInstallers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::InstallLateDecoratorInstallers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallLateDecoratorInstallers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.get_Container
Zenject::DiContainer* Zenject::SceneDecoratorContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::get_Container");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.GetRootGameObjects
System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* Zenject::SceneDecoratorContext::GetRootGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::GetRootGameObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.SceneDecoratorContext.GetInjectableMonoBehaviours
void Zenject::SceneDecoratorContext::GetInjectableMonoBehaviours(System::Collections::Generic::List_1<UnityEngine::MonoBehaviour*>* monoBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::SceneDecoratorContext::GetInjectableMonoBehaviours");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInjectableMonoBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monoBehaviours)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, monoBehaviours);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.StaticContext
#include "Zenject/StaticContext.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Zenject.DiContainer _container
Zenject::DiContainer* Zenject::StaticContext::_get__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::StaticContext::_get__container");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::DiContainer*>("Zenject", "StaticContext", "_container"));
}
// Autogenerated static field setter
// Set static field: static private Zenject.DiContainer _container
void Zenject::StaticContext::_set__container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::StaticContext::_set__container");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "StaticContext", "_container", value));
}
// Autogenerated method: Zenject.StaticContext.get_HasContainer
bool Zenject::StaticContext::get_HasContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::StaticContext::get_HasContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "StaticContext", "get_HasContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.StaticContext.get_Container
Zenject::DiContainer* Zenject::StaticContext::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::StaticContext::get_Container");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "StaticContext", "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.StaticContext.Clear
void Zenject::StaticContext::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::StaticContext::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "StaticContext", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IInstaller
#include "Zenject/IInstaller.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IInstaller.get_IsEnabled
bool Zenject::IInstaller::get_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IInstaller::get_IsEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IInstaller.InstallBindings
void Zenject::IInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::IInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Installer
#include "Zenject/Installer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.InstallerBase
#include "Zenject/InstallerBase.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.DiContainer _container
Zenject::DiContainer* Zenject::InstallerBase::_get__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InstallerBase::_get__container");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::DiContainer*>(___internal__instance, "_container"));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.DiContainer _container
void Zenject::InstallerBase::_set__container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InstallerBase::_set__container");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_container", value));
}
// Autogenerated method: Zenject.InstallerBase.get_Container
Zenject::DiContainer* Zenject::InstallerBase::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InstallerBase::get_Container");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InstallerBase.get_IsEnabled
bool Zenject::InstallerBase::get_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InstallerBase::get_IsEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.InstallerBase.InstallBindings
void Zenject::InstallerBase::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::InstallerBase::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.MonoInstaller
#include "Zenject/MonoInstaller.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.MonoInstallerUtil
#include "Zenject/MonoInstallerUtil.hpp"
// Including type: Zenject.MonoInstallerBase
#include "Zenject/MonoInstallerBase.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.MonoInstallerBase
#include "Zenject/MonoInstallerBase.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.DiContainer <Container>k__BackingField
Zenject::DiContainer* Zenject::MonoInstallerBase::_get_$Container$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoInstallerBase::_get_$Container$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::DiContainer*>(___internal__instance, "<Container>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.DiContainer <Container>k__BackingField
void Zenject::MonoInstallerBase::_set_$Container$k__BackingField(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoInstallerBase::_set_$Container$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<Container>k__BackingField", value));
}
// Autogenerated method: Zenject.MonoInstallerBase.get_Container
Zenject::DiContainer* Zenject::MonoInstallerBase::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoInstallerBase::get_Container");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MonoInstallerBase.set_Container
void Zenject::MonoInstallerBase::set_Container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoInstallerBase::set_Container");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.MonoInstallerBase.get_IsEnabled
bool Zenject::MonoInstallerBase::get_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoInstallerBase::get_IsEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MonoInstallerBase.Start
void Zenject::MonoInstallerBase::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoInstallerBase::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MonoInstallerBase.InstallBindings
void Zenject::MonoInstallerBase::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::MonoInstallerBase::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ScriptableObjectInstaller
#include "Zenject/ScriptableObjectInstaller.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ScriptableObjectInstallerUtil
#include "Zenject/ScriptableObjectInstallerUtil.hpp"
// Including type: Zenject.ScriptableObjectInstallerBase
#include "Zenject/ScriptableObjectInstallerBase.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ScriptableObjectInstallerBase
#include "Zenject/ScriptableObjectInstallerBase.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.DiContainer _container
Zenject::DiContainer* Zenject::ScriptableObjectInstallerBase::_get__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScriptableObjectInstallerBase::_get__container");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::DiContainer*>(___internal__instance, "_container"));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.DiContainer _container
void Zenject::ScriptableObjectInstallerBase::_set__container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScriptableObjectInstallerBase::_set__container");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_container", value));
}
// Autogenerated method: Zenject.ScriptableObjectInstallerBase.get_Container
Zenject::DiContainer* Zenject::ScriptableObjectInstallerBase::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScriptableObjectInstallerBase::get_Container");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ScriptableObjectInstallerBase.Zenject.IInstaller.get_IsEnabled
bool Zenject::ScriptableObjectInstallerBase::Zenject_IInstaller_get_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScriptableObjectInstallerBase::Zenject.IInstaller.get_IsEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Zenject.IInstaller.get_IsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ScriptableObjectInstallerBase.InstallBindings
void Zenject::ScriptableObjectInstallerBase::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ScriptableObjectInstallerBase::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ZenjectBinding
#include "Zenject/ZenjectBinding.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.Context
#include "Zenject/Context.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Component[] _components
::Array<UnityEngine::Component*>* Zenject::ZenjectBinding::_get__components() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::_get__components");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Component*>*>(___internal__instance, "_components"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Component[] _components
void Zenject::ZenjectBinding::_set__components(::Array<UnityEngine::Component*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::_set__components");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_components", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _identifier
::Il2CppString* Zenject::ZenjectBinding::_get__identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::_get__identifier");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "_identifier"));
}
// Autogenerated instance field setter
// Set instance field: private System.String _identifier
void Zenject::ZenjectBinding::_set__identifier(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::_set__identifier");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_identifier", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useSceneContext
bool Zenject::ZenjectBinding::_get__useSceneContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::_get__useSceneContext");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_useSceneContext"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _useSceneContext
void Zenject::ZenjectBinding::_set__useSceneContext(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::_set__useSceneContext");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_useSceneContext", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _ifNotBound
bool Zenject::ZenjectBinding::_get__ifNotBound() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::_get__ifNotBound");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_ifNotBound"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _ifNotBound
void Zenject::ZenjectBinding::_set__ifNotBound(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::_set__ifNotBound");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_ifNotBound", value));
}
// Autogenerated instance field getter
// Get instance field: private Zenject.Context _context
Zenject::Context* Zenject::ZenjectBinding::_get__context() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::_get__context");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::Context*>(___internal__instance, "_context"));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.Context _context
void Zenject::ZenjectBinding::_set__context(Zenject::Context* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::_set__context");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_context", value));
}
// Autogenerated instance field getter
// Get instance field: private Zenject.ZenjectBinding/Zenject.BindTypes _bindType
Zenject::ZenjectBinding::BindTypes Zenject::ZenjectBinding::_get__bindType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::_get__bindType");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ZenjectBinding::BindTypes>(___internal__instance, "_bindType"));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.ZenjectBinding/Zenject.BindTypes _bindType
void Zenject::ZenjectBinding::_set__bindType(Zenject::ZenjectBinding::BindTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::_set__bindType");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_bindType", value));
}
// Autogenerated method: Zenject.ZenjectBinding.get_UseSceneContext
bool Zenject::ZenjectBinding::get_UseSceneContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::get_UseSceneContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseSceneContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectBinding.get_IfNotBound
bool Zenject::ZenjectBinding::get_IfNotBound() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::get_IfNotBound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IfNotBound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectBinding.get_Context
Zenject::Context* Zenject::ZenjectBinding::get_Context() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::get_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::Context*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectBinding.set_Context
void Zenject::ZenjectBinding::set_Context(Zenject::Context* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::set_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ZenjectBinding.get_Components
::Array<UnityEngine::Component*>* Zenject::ZenjectBinding::get_Components() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::get_Components");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Components", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Component*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectBinding.get_Identifier
::Il2CppString* Zenject::ZenjectBinding::get_Identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::get_Identifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Identifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectBinding.get_BindType
Zenject::ZenjectBinding::BindTypes Zenject::ZenjectBinding::get_BindType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::get_BindType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ZenjectBinding::BindTypes, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectBinding.Start
void Zenject::ZenjectBinding::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ZenjectBinding/Zenject.BindTypes
#include "Zenject/ZenjectBinding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.ZenjectBinding/Zenject.BindTypes Self
Zenject::ZenjectBinding::BindTypes Zenject::ZenjectBinding::BindTypes::_get_Self() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::BindTypes::_get_Self");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ZenjectBinding::BindTypes>("Zenject", "ZenjectBinding/BindTypes", "Self"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ZenjectBinding/Zenject.BindTypes Self
void Zenject::ZenjectBinding::BindTypes::_set_Self(Zenject::ZenjectBinding::BindTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::BindTypes::_set_Self");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ZenjectBinding/BindTypes", "Self", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.ZenjectBinding/Zenject.BindTypes AllInterfaces
Zenject::ZenjectBinding::BindTypes Zenject::ZenjectBinding::BindTypes::_get_AllInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::BindTypes::_get_AllInterfaces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ZenjectBinding::BindTypes>("Zenject", "ZenjectBinding/BindTypes", "AllInterfaces"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ZenjectBinding/Zenject.BindTypes AllInterfaces
void Zenject::ZenjectBinding::BindTypes::_set_AllInterfaces(Zenject::ZenjectBinding::BindTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::BindTypes::_set_AllInterfaces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ZenjectBinding/BindTypes", "AllInterfaces", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.ZenjectBinding/Zenject.BindTypes AllInterfacesAndSelf
Zenject::ZenjectBinding::BindTypes Zenject::ZenjectBinding::BindTypes::_get_AllInterfacesAndSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::BindTypes::_get_AllInterfacesAndSelf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ZenjectBinding::BindTypes>("Zenject", "ZenjectBinding/BindTypes", "AllInterfacesAndSelf"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ZenjectBinding/Zenject.BindTypes AllInterfacesAndSelf
void Zenject::ZenjectBinding::BindTypes::_set_AllInterfacesAndSelf(Zenject::ZenjectBinding::BindTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::BindTypes::_set_AllInterfacesAndSelf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ZenjectBinding/BindTypes", "AllInterfacesAndSelf", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.ZenjectBinding/Zenject.BindTypes BaseType
Zenject::ZenjectBinding::BindTypes Zenject::ZenjectBinding::BindTypes::_get_BaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::BindTypes::_get_BaseType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ZenjectBinding::BindTypes>("Zenject", "ZenjectBinding/BindTypes", "BaseType"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ZenjectBinding/Zenject.BindTypes BaseType
void Zenject::ZenjectBinding::BindTypes::_set_BaseType(Zenject::ZenjectBinding::BindTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::BindTypes::_set_BaseType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ZenjectBinding/BindTypes", "BaseType", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int Zenject::ZenjectBinding::BindTypes::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::BindTypes::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void Zenject::ZenjectBinding::BindTypes::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectBinding::BindTypes::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ZenjectManagersInstaller
#include "Zenject/ZenjectManagersInstaller.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ZenjectManagersInstaller.InstallBindings
void Zenject::ZenjectManagersInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::ZenjectManagersInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.BindingId
#include "Zenject/BindingId.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type _type
System::Type* Zenject::BindingId::_get__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingId::_get__type");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>(___internal__instance, "_type"));
}
// Autogenerated instance field setter
// Set instance field: private System.Type _type
void Zenject::BindingId::_set__type(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingId::_set__type");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_type", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object _identifier
::Il2CppObject* Zenject::BindingId::_get__identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingId::_get__identifier");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>(___internal__instance, "_identifier"));
}
// Autogenerated instance field setter
// Set instance field: private System.Object _identifier
void Zenject::BindingId::_set__identifier(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingId::_set__identifier");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_identifier", value));
}
// Autogenerated method: Zenject.BindingId.get_Type
System::Type* Zenject::BindingId::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingId::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(*this, ___internal__method);
}
// Autogenerated method: Zenject.BindingId.set_Type
void Zenject::BindingId::set_Type(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingId::set_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: Zenject.BindingId.get_Identifier
::Il2CppObject* Zenject::BindingId::get_Identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingId::get_Identifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Identifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method);
}
// Autogenerated method: Zenject.BindingId.set_Identifier
void Zenject::BindingId::set_Identifier(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingId::set_Identifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Identifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: Zenject.BindingId.Equals
bool Zenject::BindingId::Equals(Zenject::BindingId that) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingId::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(that)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, that);
}
// Autogenerated method: Zenject.BindingId.ToString
::Il2CppString* Zenject::BindingId::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingId::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: Zenject.BindingId.GetHashCode
int Zenject::BindingId::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingId::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: Zenject.BindingId.Equals
bool Zenject::BindingId::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingId::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: Zenject.BindingId.op_Equality
bool Zenject::operator ==(const Zenject::BindingId& left, const Zenject::BindingId& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingId::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingId", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: Zenject.BindingId.op_Inequality
bool Zenject::operator !=(const Zenject::BindingId& left, const Zenject::BindingId& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingId::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingId", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.BindingCondition
#include "Zenject/BindingCondition.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.BindingCondition.Invoke
bool Zenject::BindingCondition::Invoke(Zenject::InjectContext* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingCondition::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: Zenject.BindingCondition.BeginInvoke
System::IAsyncResult* Zenject::BindingCondition::BeginInvoke(Zenject::InjectContext* c, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingCondition::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, c, callback, object);
}
// Autogenerated method: Zenject.BindingCondition.EndInvoke
bool Zenject::BindingCondition::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::BindingCondition::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.DiContainer/Zenject.ProviderInfo
#include "Zenject/DiContainer_ProviderInfo.hpp"
// Including type: Zenject.DiContainer/Zenject.<>c
#include "Zenject/DiContainer_--c.hpp"
// Including type: Zenject.DiContainer/Zenject.<>c__DisplayClass86_0
#include "Zenject/DiContainer_--c__DisplayClass86_0.hpp"
// Including type: Zenject.DiContainer/Zenject.<GetDependencyContracts>d__96
#include "Zenject/DiContainer_-GetDependencyContracts-d__96.hpp"
// Including type: Zenject.DiContainer/Zenject.<>c__DisplayClass178_0
#include "Zenject/DiContainer_--c__DisplayClass178_0.hpp"
// Including type: Zenject.DiContainer/Zenject.<>c__DisplayClass203_0`1
#include "Zenject/DiContainer_--c__DisplayClass203_0_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.Internal.IDecoratorProvider
#include "Zenject/Internal/IDecoratorProvider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: Zenject.Internal.LookupId
#include "Zenject/Internal/LookupId.hpp"
// Including type: Zenject.LazyInstanceInjector
#include "Zenject/LazyInstanceInjector.hpp"
// Including type: Zenject.Internal.SingletonMarkRegistry
#include "Zenject/Internal/SingletonMarkRegistry.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: Zenject.BindStatement
#include "Zenject/BindStatement.hpp"
// Including type: Zenject.IValidatable
#include "Zenject/IValidatable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Zenject.ZenjectSettings
#include "Zenject/ZenjectSettings.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.BindingCondition
#include "Zenject/BindingCondition.hpp"
// Including type: Zenject.InjectSources
#include "Zenject/InjectSources.hpp"
// Including type: Zenject.Installer
#include "Zenject/Installer.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: Zenject.DecoratorToChoiceFromBinder`1
#include "Zenject/DecoratorToChoiceFromBinder_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.ConcreteBinderGeneric`1
#include "Zenject/ConcreteBinderGeneric_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: Zenject.ConcreteBinderNonGeneric
#include "Zenject/ConcreteBinderNonGeneric.hpp"
// Including type: Zenject.ConcreteIdBinderGeneric`1
#include "Zenject/ConcreteIdBinderGeneric_1.hpp"
// Including type: Zenject.ConcreteIdBinderNonGeneric
#include "Zenject/ConcreteIdBinderNonGeneric.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.ConventionSelectTypesBinder
#include "Zenject/ConventionSelectTypesBinder.hpp"
// Including type: Zenject.FromBinderNonGeneric
#include "Zenject/FromBinderNonGeneric.hpp"
// Including type: Zenject.IdScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/IdScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.IFactory
#include "Zenject/IFactory.hpp"
// Including type: Zenject.FactoryToChoiceIdBinder`1
#include "Zenject/FactoryToChoiceIdBinder_1.hpp"
// Including type: Zenject.PlaceholderFactory`1
#include "Zenject/PlaceholderFactory_1.hpp"
// Including type: Zenject.MemoryPoolIdInitialSizeMaxSizeBinder`1
#include "Zenject/MemoryPoolIdInitialSizeMaxSizeBinder_1.hpp"
// Including type: Zenject.IMemoryPool
#include "Zenject/IMemoryPool.hpp"
// Including type: Zenject.FactoryToChoiceIdBinder`2
#include "Zenject/FactoryToChoiceIdBinder_2.hpp"
// Including type: Zenject.PlaceholderFactory`2
#include "Zenject/PlaceholderFactory_2.hpp"
// Including type: Zenject.FactoryToChoiceIdBinder`3
#include "Zenject/FactoryToChoiceIdBinder_3.hpp"
// Including type: Zenject.PlaceholderFactory`3
#include "Zenject/PlaceholderFactory_3.hpp"
// Including type: Zenject.FactoryToChoiceIdBinder`4
#include "Zenject/FactoryToChoiceIdBinder_4.hpp"
// Including type: Zenject.PlaceholderFactory`4
#include "Zenject/PlaceholderFactory_4.hpp"
// Including type: Zenject.FactoryToChoiceIdBinder`5
#include "Zenject/FactoryToChoiceIdBinder_5.hpp"
// Including type: Zenject.PlaceholderFactory`5
#include "Zenject/PlaceholderFactory_5.hpp"
// Including type: Zenject.FactoryToChoiceIdBinder`6
#include "Zenject/FactoryToChoiceIdBinder_6.hpp"
// Including type: Zenject.PlaceholderFactory`6
#include "Zenject/PlaceholderFactory_6.hpp"
// Including type: Zenject.FactoryToChoiceIdBinder`7
#include "Zenject/FactoryToChoiceIdBinder_7.hpp"
// Including type: Zenject.PlaceholderFactory`7
#include "Zenject/PlaceholderFactory_7.hpp"
// Including type: Zenject.FactoryToChoiceIdBinder`11
#include "Zenject/FactoryToChoiceIdBinder_11.hpp"
// Including type: Zenject.PlaceholderFactory`11
#include "Zenject/PlaceholderFactory_11.hpp"
// Including type: Zenject.ITickable
#include "Zenject/ITickable.hpp"
// Including type: Zenject.CopyNonLazyBinder
#include "Zenject/CopyNonLazyBinder.hpp"
// Including type: Zenject.IInitializable
#include "Zenject/IInitializable.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: Zenject.ILateDisposable
#include "Zenject/ILateDisposable.hpp"
// Including type: Zenject.IFixedTickable
#include "Zenject/IFixedTickable.hpp"
// Including type: Zenject.ILateTickable
#include "Zenject/ILateTickable.hpp"
// Including type: Zenject.IPoolable
#include "Zenject/IPoolable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Type,Zenject.Internal.IDecoratorProvider> _decorators
System::Collections::Generic::Dictionary_2<System::Type*, Zenject::Internal::IDecoratorProvider*>* Zenject::DiContainer::_get__decorators() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__decorators");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<System::Type*, Zenject::Internal::IDecoratorProvider*>*>(___internal__instance, "_decorators")));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.Dictionary`2<System.Type,Zenject.Internal.IDecoratorProvider> _decorators
void Zenject::DiContainer::_set__decorators(System::Collections::Generic::Dictionary_2<System::Type*, Zenject::Internal::IDecoratorProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__decorators");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_decorators", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<Zenject.BindingId,System.Collections.Generic.List`1<Zenject.DiContainer/Zenject.ProviderInfo>> _providers
System::Collections::Generic::Dictionary_2<Zenject::BindingId, System::Collections::Generic::List_1<Zenject::DiContainer::ProviderInfo*>*>* Zenject::DiContainer::_get__providers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__providers");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<Zenject::BindingId, System::Collections::Generic::List_1<Zenject::DiContainer::ProviderInfo*>*>*>(___internal__instance, "_providers")));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.Dictionary`2<Zenject.BindingId,System.Collections.Generic.List`1<Zenject.DiContainer/Zenject.ProviderInfo>> _providers
void Zenject::DiContainer::_set__providers(System::Collections::Generic::Dictionary_2<Zenject::BindingId, System::Collections::Generic::List_1<Zenject::DiContainer::ProviderInfo*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__providers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_providers", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.DiContainer[][] _containerLookups
::Array<::Array<Zenject::DiContainer*>*>* Zenject::DiContainer::_get__containerLookups() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__containerLookups");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Array<Zenject::DiContainer*>*>*>(___internal__instance, "_containerLookups"));
}
// Autogenerated instance field setter
// Set instance field: private readonly Zenject.DiContainer[][] _containerLookups
void Zenject::DiContainer::_set__containerLookups(::Array<::Array<Zenject::DiContainer*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__containerLookups");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_containerLookups", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<Zenject.Internal.LookupId> _resolvesInProgress
System::Collections::Generic::HashSet_1<Zenject::Internal::LookupId*>* Zenject::DiContainer::_get__resolvesInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__resolvesInProgress");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::HashSet_1<Zenject::Internal::LookupId*>*>(___internal__instance, "_resolvesInProgress"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.HashSet`1<Zenject.Internal.LookupId> _resolvesInProgress
void Zenject::DiContainer::_set__resolvesInProgress(System::Collections::Generic::HashSet_1<Zenject::Internal::LookupId*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__resolvesInProgress");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_resolvesInProgress", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<Zenject.Internal.LookupId> _resolvesTwiceInProgress
System::Collections::Generic::HashSet_1<Zenject::Internal::LookupId*>* Zenject::DiContainer::_get__resolvesTwiceInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__resolvesTwiceInProgress");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::HashSet_1<Zenject::Internal::LookupId*>*>(___internal__instance, "_resolvesTwiceInProgress"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.HashSet`1<Zenject.Internal.LookupId> _resolvesTwiceInProgress
void Zenject::DiContainer::_set__resolvesTwiceInProgress(System::Collections::Generic::HashSet_1<Zenject::Internal::LookupId*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__resolvesTwiceInProgress");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_resolvesTwiceInProgress", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.LazyInstanceInjector _lazyInjector
Zenject::LazyInstanceInjector* Zenject::DiContainer::_get__lazyInjector() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__lazyInjector");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::LazyInstanceInjector*>(___internal__instance, "_lazyInjector"));
}
// Autogenerated instance field setter
// Set instance field: private readonly Zenject.LazyInstanceInjector _lazyInjector
void Zenject::DiContainer::_set__lazyInjector(Zenject::LazyInstanceInjector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__lazyInjector");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_lazyInjector", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.Internal.SingletonMarkRegistry _singletonMarkRegistry
Zenject::Internal::SingletonMarkRegistry* Zenject::DiContainer::_get__singletonMarkRegistry() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__singletonMarkRegistry");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::Internal::SingletonMarkRegistry*>(___internal__instance, "_singletonMarkRegistry"));
}
// Autogenerated instance field setter
// Set instance field: private readonly Zenject.Internal.SingletonMarkRegistry _singletonMarkRegistry
void Zenject::DiContainer::_set__singletonMarkRegistry(Zenject::Internal::SingletonMarkRegistry* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__singletonMarkRegistry");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_singletonMarkRegistry", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Queue`1<Zenject.BindStatement> _currentBindings
System::Collections::Generic::Queue_1<Zenject::BindStatement*>* Zenject::DiContainer::_get__currentBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__currentBindings");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::Queue_1<Zenject::BindStatement*>*>(___internal__instance, "_currentBindings"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.Queue`1<Zenject.BindStatement> _currentBindings
void Zenject::DiContainer::_set__currentBindings(System::Collections::Generic::Queue_1<Zenject::BindStatement*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__currentBindings");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_currentBindings", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Zenject.BindStatement> _childBindings
System::Collections::Generic::List_1<Zenject::BindStatement*>* Zenject::DiContainer::_get__childBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__childBindings");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<Zenject::BindStatement*>*>(___internal__instance, "_childBindings"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<Zenject.BindStatement> _childBindings
void Zenject::DiContainer::_set__childBindings(System::Collections::Generic::List_1<Zenject::BindStatement*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__childBindings");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_childBindings", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.Type> _validatedTypes
System::Collections::Generic::HashSet_1<System::Type*>* Zenject::DiContainer::_get__validatedTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__validatedTypes");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::HashSet_1<System::Type*>*>(___internal__instance, "_validatedTypes"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.HashSet`1<System.Type> _validatedTypes
void Zenject::DiContainer::_set__validatedTypes(System::Collections::Generic::HashSet_1<System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__validatedTypes");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_validatedTypes", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Zenject.IValidatable> _validationQueue
System::Collections::Generic::List_1<Zenject::IValidatable*>* Zenject::DiContainer::_get__validationQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__validationQueue");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<Zenject::IValidatable*>*>(___internal__instance, "_validationQueue"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<Zenject.IValidatable> _validationQueue
void Zenject::DiContainer::_set__validationQueue(System::Collections::Generic::List_1<Zenject::IValidatable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__validationQueue");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_validationQueue", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _contextTransform
UnityEngine::Transform* Zenject::DiContainer::_get__contextTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__contextTransform");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Transform*>(___internal__instance, "_contextTransform"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform _contextTransform
void Zenject::DiContainer::_set__contextTransform(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__contextTransform");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_contextTransform", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasLookedUpContextTransform
bool Zenject::DiContainer::_get__hasLookedUpContextTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__hasLookedUpContextTransform");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_hasLookedUpContextTransform"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _hasLookedUpContextTransform
void Zenject::DiContainer::_set__hasLookedUpContextTransform(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__hasLookedUpContextTransform");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_hasLookedUpContextTransform", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _inheritedDefaultParent
UnityEngine::Transform* Zenject::DiContainer::_get__inheritedDefaultParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__inheritedDefaultParent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Transform*>(___internal__instance, "_inheritedDefaultParent"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform _inheritedDefaultParent
void Zenject::DiContainer::_set__inheritedDefaultParent(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__inheritedDefaultParent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_inheritedDefaultParent", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _explicitDefaultParent
UnityEngine::Transform* Zenject::DiContainer::_get__explicitDefaultParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__explicitDefaultParent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Transform*>(___internal__instance, "_explicitDefaultParent"));
}
// Autogenerated instance field setter
// Set instance field: private UnityEngine.Transform _explicitDefaultParent
void Zenject::DiContainer::_set__explicitDefaultParent(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__explicitDefaultParent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_explicitDefaultParent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasExplicitDefaultParent
bool Zenject::DiContainer::_get__hasExplicitDefaultParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__hasExplicitDefaultParent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_hasExplicitDefaultParent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _hasExplicitDefaultParent
void Zenject::DiContainer::_set__hasExplicitDefaultParent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__hasExplicitDefaultParent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_hasExplicitDefaultParent", value));
}
// Autogenerated instance field getter
// Get instance field: private Zenject.ZenjectSettings _settings
Zenject::ZenjectSettings* Zenject::DiContainer::_get__settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__settings");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ZenjectSettings*>(___internal__instance, "_settings"));
}
// Autogenerated instance field setter
// Set instance field: private Zenject.ZenjectSettings _settings
void Zenject::DiContainer::_set__settings(Zenject::ZenjectSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__settings");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_settings", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasResolvedRoots
bool Zenject::DiContainer::_get__hasResolvedRoots() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__hasResolvedRoots");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_hasResolvedRoots"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _hasResolvedRoots
void Zenject::DiContainer::_set__hasResolvedRoots(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__hasResolvedRoots");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_hasResolvedRoots", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isFinalizingBinding
bool Zenject::DiContainer::_get__isFinalizingBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__isFinalizingBinding");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_isFinalizingBinding"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _isFinalizingBinding
void Zenject::DiContainer::_set__isFinalizingBinding(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__isFinalizingBinding");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_isFinalizingBinding", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isValidating
bool Zenject::DiContainer::_get__isValidating() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__isValidating");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_isValidating"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _isValidating
void Zenject::DiContainer::_set__isValidating(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__isValidating");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_isValidating", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInstalling
bool Zenject::DiContainer::_get__isInstalling() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get__isInstalling");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_isInstalling"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _isInstalling
void Zenject::DiContainer::_set__isInstalling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set__isInstalling");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_isInstalling", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <AssertOnNewGameObjects>k__BackingField
bool Zenject::DiContainer::_get_$AssertOnNewGameObjects$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_get_$AssertOnNewGameObjects$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<AssertOnNewGameObjects>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <AssertOnNewGameObjects>k__BackingField
void Zenject::DiContainer::_set_$AssertOnNewGameObjects$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::_set_$AssertOnNewGameObjects$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<AssertOnNewGameObjects>k__BackingField", value));
}
// Autogenerated method: Zenject.DiContainer.get_Settings
Zenject::ZenjectSettings* Zenject::DiContainer::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::get_Settings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ZenjectSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.set_Settings
void Zenject::DiContainer::set_Settings(Zenject::ZenjectSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::set_Settings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.DiContainer.get_SingletonMarkRegistry
Zenject::Internal::SingletonMarkRegistry* Zenject::DiContainer::get_SingletonMarkRegistry() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::get_SingletonMarkRegistry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SingletonMarkRegistry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::Internal::SingletonMarkRegistry*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.get_AllProviders
System::Collections::Generic::IEnumerable_1<Zenject::IProvider*>* Zenject::DiContainer::get_AllProviders() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::get_AllProviders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllProviders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::IProvider*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.get_ContextTransform
UnityEngine::Transform* Zenject::DiContainer::get_ContextTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::get_ContextTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContextTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.get_AssertOnNewGameObjects
bool Zenject::DiContainer::get_AssertOnNewGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::get_AssertOnNewGameObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssertOnNewGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.set_AssertOnNewGameObjects
void Zenject::DiContainer::set_AssertOnNewGameObjects(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::set_AssertOnNewGameObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AssertOnNewGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.DiContainer.get_InheritedDefaultParent
UnityEngine::Transform* Zenject::DiContainer::get_InheritedDefaultParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::get_InheritedDefaultParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InheritedDefaultParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.get_DefaultParent
UnityEngine::Transform* Zenject::DiContainer::get_DefaultParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::get_DefaultParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.set_DefaultParent
void Zenject::DiContainer::set_DefaultParent(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::set_DefaultParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DefaultParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.DiContainer.get_ParentContainers
::Array<Zenject::DiContainer*>* Zenject::DiContainer::get_ParentContainers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::get_ParentContainers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentContainers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<Zenject::DiContainer*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.get_AncestorContainers
::Array<Zenject::DiContainer*>* Zenject::DiContainer::get_AncestorContainers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::get_AncestorContainers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AncestorContainers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<Zenject::DiContainer*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.get_ChecksForCircularDependencies
bool Zenject::DiContainer::get_ChecksForCircularDependencies() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::get_ChecksForCircularDependencies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChecksForCircularDependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.get_IsValidating
bool Zenject::DiContainer::get_IsValidating() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::get_IsValidating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValidating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.get_IsInstalling
bool Zenject::DiContainer::get_IsInstalling() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::get_IsInstalling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInstalling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.set_IsInstalling
void Zenject::DiContainer::set_IsInstalling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::set_IsInstalling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsInstalling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.DiContainer.get_AllContracts
System::Collections::Generic::IEnumerable_1<Zenject::BindingId>* Zenject::DiContainer::get_AllContracts() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::get_AllContracts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllContracts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<Zenject::BindingId>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.InstallDefaultBindings
void Zenject::DiContainer::InstallDefaultBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstallDefaultBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallDefaultBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.CreateLazyBinding
::Il2CppObject* Zenject::DiContainer::CreateLazyBinding(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::CreateLazyBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateLazyBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.DiContainer.QueueForValidate
void Zenject::DiContainer::QueueForValidate(Zenject::IValidatable* validatable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::QueueForValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueForValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(validatable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, validatable);
}
// Autogenerated method: Zenject.DiContainer.ShouldInheritBinding
bool Zenject::DiContainer::ShouldInheritBinding(Zenject::BindStatement* binding, Zenject::DiContainer* ancestorContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ShouldInheritBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldInheritBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binding), ::il2cpp_utils::ExtractType(ancestorContainer)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, binding, ancestorContainer);
}
// Autogenerated method: Zenject.DiContainer.ResolveRoots
void Zenject::DiContainer::ResolveRoots() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ResolveRoots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveRoots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.ResolveDependencyRoots
void Zenject::DiContainer::ResolveDependencyRoots() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ResolveDependencyRoots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveDependencyRoots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.ValidateFullResolve
void Zenject::DiContainer::ValidateFullResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ValidateFullResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateFullResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.FlushValidationQueue
void Zenject::DiContainer::FlushValidationQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::FlushValidationQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushValidationQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.CreateSubContainer
Zenject::DiContainer* Zenject::DiContainer::CreateSubContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::CreateSubContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.QueueForInject
void Zenject::DiContainer::QueueForInject(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::QueueForInject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueForInject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, instance);
}
// Autogenerated method: Zenject.DiContainer.CreateSubContainer
Zenject::DiContainer* Zenject::DiContainer::CreateSubContainer(bool isValidating) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::CreateSubContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSubContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isValidating)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method, isValidating);
}
// Autogenerated method: Zenject.DiContainer.RegisterProvider
void Zenject::DiContainer::RegisterProvider(Zenject::BindingId bindingId, Zenject::BindingCondition* condition, Zenject::IProvider* provider, bool nonLazy) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::RegisterProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingId), ::il2cpp_utils::ExtractType(condition), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(nonLazy)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bindingId, condition, provider, nonLazy);
}
// Autogenerated method: Zenject.DiContainer.GetProviderMatches
void Zenject::DiContainer::GetProviderMatches(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::DiContainer::ProviderInfo*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::GetProviderMatches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProviderMatches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, buffer);
}
// Autogenerated method: Zenject.DiContainer.TryGetUniqueProvider
Zenject::DiContainer::ProviderInfo* Zenject::DiContainer::TryGetUniqueProvider(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::TryGetUniqueProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetUniqueProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer::ProviderInfo*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.DiContainer.FlattenInheritanceChain
System::Collections::Generic::List_1<Zenject::DiContainer*>* Zenject::DiContainer::FlattenInheritanceChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::FlattenInheritanceChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlattenInheritanceChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<Zenject::DiContainer*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.GetLocalProviders
void Zenject::DiContainer::GetLocalProviders(Zenject::BindingId bindingId, System::Collections::Generic::List_1<Zenject::DiContainer::ProviderInfo*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::GetLocalProviders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalProviders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingId), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bindingId, buffer);
}
// Autogenerated method: Zenject.DiContainer.GetProvidersForContract
void Zenject::DiContainer::GetProvidersForContract(Zenject::BindingId bindingId, Zenject::InjectSources sourceType, System::Collections::Generic::List_1<Zenject::DiContainer::ProviderInfo*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::GetProvidersForContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProvidersForContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingId), ::il2cpp_utils::ExtractType(sourceType), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bindingId, sourceType, buffer);
}
// Autogenerated method: Zenject.DiContainer.ResolveAll
System::Collections::IList* Zenject::DiContainer::ResolveAll(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ResolveAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IList*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.DiContainer.ResolveAll
void Zenject::DiContainer::ResolveAll(Zenject::InjectContext* context, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ResolveAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, buffer);
}
// Autogenerated method: Zenject.DiContainer.CheckForInstallWarning
void Zenject::DiContainer::CheckForInstallWarning(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::CheckForInstallWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForInstallWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.DiContainer.ResolveType
System::Type* Zenject::DiContainer::ResolveType(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ResolveType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, type);
}
// Autogenerated method: Zenject.DiContainer.ResolveType
System::Type* Zenject::DiContainer::ResolveType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ResolveType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.DiContainer.ResolveTypeAll
System::Collections::Generic::List_1<System::Type*>* Zenject::DiContainer::ResolveTypeAll(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ResolveTypeAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveTypeAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<System::Type*>*, false>(this, ___internal__method, type);
}
// Autogenerated method: Zenject.DiContainer.ResolveTypeAll
System::Collections::Generic::List_1<System::Type*>* Zenject::DiContainer::ResolveTypeAll(System::Type* type, ::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ResolveTypeAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveTypeAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(identifier)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<System::Type*>*, false>(this, ___internal__method, type, identifier);
}
// Autogenerated method: Zenject.DiContainer.ResolveTypeAll
System::Collections::Generic::List_1<System::Type*>* Zenject::DiContainer::ResolveTypeAll(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ResolveTypeAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveTypeAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<System::Type*>*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.DiContainer.Resolve
::Il2CppObject* Zenject::DiContainer::Resolve(Zenject::BindingId id) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::Resolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, id);
}
// Autogenerated method: Zenject.DiContainer.Resolve
::Il2CppObject* Zenject::DiContainer::Resolve(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::Resolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.DiContainer.SafeGetInstances
void Zenject::DiContainer::SafeGetInstances(Zenject::DiContainer::ProviderInfo* providerInfo, Zenject::InjectContext* context, System::Collections::Generic::List_1<::Il2CppObject*>* instances) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::SafeGetInstances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeGetInstances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(providerInfo), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(instances)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, providerInfo, context, instances);
}
// Autogenerated method: Zenject.DiContainer.GetDecoratedInstances
void Zenject::DiContainer::GetDecoratedInstances(Zenject::IProvider* provider, Zenject::InjectContext* context, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::GetDecoratedInstances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDecoratedInstances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, provider, context, buffer);
}
// Autogenerated method: Zenject.DiContainer.TryGetDecoratorProvider
Zenject::Internal::IDecoratorProvider* Zenject::DiContainer::TryGetDecoratorProvider(System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::TryGetDecoratorProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetDecoratorProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::Internal::IDecoratorProvider*, false>(this, ___internal__method, contractType);
}
// Autogenerated method: Zenject.DiContainer.GetContainerHeirarchyDistance
int Zenject::DiContainer::GetContainerHeirarchyDistance(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::GetContainerHeirarchyDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContainerHeirarchyDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.DiContainer.GetContainerHeirarchyDistance
System::Nullable_1<int> Zenject::DiContainer::GetContainerHeirarchyDistance(Zenject::DiContainer* container, int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::GetContainerHeirarchyDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContainerHeirarchyDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(depth)})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<int>, false>(this, ___internal__method, container, depth);
}
// Autogenerated method: Zenject.DiContainer.GetDependencyContracts
System::Collections::Generic::IEnumerable_1<System::Type*>* Zenject::DiContainer::GetDependencyContracts(System::Type* contract) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::GetDependencyContracts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDependencyContracts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contract)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<System::Type*>*, false>(this, ___internal__method, contract);
}
// Autogenerated method: Zenject.DiContainer.InstantiateInternal
::Il2CppObject* Zenject::DiContainer::InstantiateInternal(System::Type* concreteType, bool autoInject, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::InjectContext* context, ::Il2CppObject* concreteIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiateInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteType), ::il2cpp_utils::ExtractType(autoInject), ::il2cpp_utils::ExtractType(extraArgs), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(concreteIdentifier)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType, autoInject, extraArgs, context, concreteIdentifier);
}
// Autogenerated method: Zenject.DiContainer.InjectExplicit
void Zenject::DiContainer::InjectExplicit(::Il2CppObject* injectable, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InjectExplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectExplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(injectable), ::il2cpp_utils::ExtractType(extraArgs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectable, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InjectExplicit
void Zenject::DiContainer::InjectExplicit(::Il2CppObject* injectable, System::Type* injectableType, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::InjectContext* context, ::Il2CppObject* concreteIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InjectExplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectExplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(injectable), ::il2cpp_utils::ExtractType(injectableType), ::il2cpp_utils::ExtractType(extraArgs), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(concreteIdentifier)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectable, injectableType, extraArgs, context, concreteIdentifier);
}
// Autogenerated method: Zenject.DiContainer.CallInjectMethodsTopDown
void Zenject::DiContainer::CallInjectMethodsTopDown(::Il2CppObject* injectable, System::Type* injectableType, Zenject::InjectTypeInfo* typeInfo, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::InjectContext* context, ::Il2CppObject* concreteIdentifier, bool isDryRun) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::CallInjectMethodsTopDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallInjectMethodsTopDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(injectable), ::il2cpp_utils::ExtractType(injectableType), ::il2cpp_utils::ExtractType(typeInfo), ::il2cpp_utils::ExtractType(extraArgs), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(concreteIdentifier), ::il2cpp_utils::ExtractType(isDryRun)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectable, injectableType, typeInfo, extraArgs, context, concreteIdentifier, isDryRun);
}
// Autogenerated method: Zenject.DiContainer.InjectMembersTopDown
void Zenject::DiContainer::InjectMembersTopDown(::Il2CppObject* injectable, System::Type* injectableType, Zenject::InjectTypeInfo* typeInfo, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::InjectContext* context, ::Il2CppObject* concreteIdentifier, bool isDryRun) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InjectMembersTopDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectMembersTopDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(injectable), ::il2cpp_utils::ExtractType(injectableType), ::il2cpp_utils::ExtractType(typeInfo), ::il2cpp_utils::ExtractType(extraArgs), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(concreteIdentifier), ::il2cpp_utils::ExtractType(isDryRun)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectable, injectableType, typeInfo, extraArgs, context, concreteIdentifier, isDryRun);
}
// Autogenerated method: Zenject.DiContainer.InjectExplicitInternal
void Zenject::DiContainer::InjectExplicitInternal(::Il2CppObject* injectable, System::Type* injectableType, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::InjectContext* context, ::Il2CppObject* concreteIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InjectExplicitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectExplicitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(injectable), ::il2cpp_utils::ExtractType(injectableType), ::il2cpp_utils::ExtractType(extraArgs), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(concreteIdentifier)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectable, injectableType, extraArgs, context, concreteIdentifier);
}
// Autogenerated method: Zenject.DiContainer.CreateAndParentPrefabResource
UnityEngine::GameObject* Zenject::DiContainer::CreateAndParentPrefabResource(::Il2CppString* resourcePath, Zenject::GameObjectCreationParameters* gameObjectBindInfo, Zenject::InjectContext* context, bool& shouldMakeActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::CreateAndParentPrefabResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAndParentPrefabResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath), ::il2cpp_utils::ExtractType(gameObjectBindInfo), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, resourcePath, gameObjectBindInfo, context, shouldMakeActive);
}
// Autogenerated method: Zenject.DiContainer.GetPrefabAsGameObject
UnityEngine::GameObject* Zenject::DiContainer::GetPrefabAsGameObject(UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::GetPrefabAsGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrefabAsGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Zenject.DiContainer.CreateAndParentPrefab
UnityEngine::GameObject* Zenject::DiContainer::CreateAndParentPrefab(UnityEngine::Object* prefab, Zenject::GameObjectCreationParameters* gameObjectBindInfo, Zenject::InjectContext* context, bool& shouldMakeActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::CreateAndParentPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAndParentPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(gameObjectBindInfo), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefab, gameObjectBindInfo, context, shouldMakeActive);
}
// Autogenerated method: Zenject.DiContainer.CreateEmptyGameObject
UnityEngine::GameObject* Zenject::DiContainer::CreateEmptyGameObject(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::CreateEmptyGameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEmptyGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, name);
}
// Autogenerated method: Zenject.DiContainer.CreateEmptyGameObject
UnityEngine::GameObject* Zenject::DiContainer::CreateEmptyGameObject(Zenject::GameObjectCreationParameters* gameObjectBindInfo, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::CreateEmptyGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEmptyGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObjectBindInfo), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, gameObjectBindInfo, context);
}
// Autogenerated method: Zenject.DiContainer.GetTransformGroup
UnityEngine::Transform* Zenject::DiContainer::GetTransformGroup(Zenject::GameObjectCreationParameters* gameObjectBindInfo, Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::GetTransformGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTransformGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObjectBindInfo), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method, gameObjectBindInfo, context);
}
// Autogenerated method: Zenject.DiContainer.CreateTransformGroup
UnityEngine::GameObject* Zenject::DiContainer::CreateTransformGroup(::Il2CppString* groupName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::CreateTransformGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTransformGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupName)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, groupName);
}
// Autogenerated method: Zenject.DiContainer.Instantiate
::Il2CppObject* Zenject::DiContainer::Instantiate(System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::Instantiate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType);
}
// Autogenerated method: Zenject.DiContainer.Instantiate
::Il2CppObject* Zenject::DiContainer::Instantiate(System::Type* concreteType, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::Instantiate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteType), ::il2cpp_utils::ExtractType(extraArgs)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InstantiateComponent
UnityEngine::Component* Zenject::DiContainer::InstantiateComponent(System::Type* componentType, UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiateComponent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentType), ::il2cpp_utils::ExtractType(gameObject)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Component*, false>(this, ___internal__method, componentType, gameObject);
}
// Autogenerated method: Zenject.DiContainer.InstantiateComponent
UnityEngine::Component* Zenject::DiContainer::InstantiateComponent(System::Type* componentType, UnityEngine::GameObject* gameObject, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiateComponent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentType), ::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(extraArgs)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Component*, false>(this, ___internal__method, componentType, gameObject, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefab
UnityEngine::GameObject* Zenject::DiContainer::InstantiatePrefab(UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiatePrefab");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiatePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefab
UnityEngine::GameObject* Zenject::DiContainer::InstantiatePrefab(UnityEngine::Object* prefab, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiatePrefab");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiatePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(parentTransform)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefab, parentTransform);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefab
UnityEngine::GameObject* Zenject::DiContainer::InstantiatePrefab(UnityEngine::Object* prefab, UnityEngine::Vector3 position, UnityEngine::Quaternion rotation, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiatePrefab");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiatePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(parentTransform)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefab, position, rotation, parentTransform);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefab
UnityEngine::GameObject* Zenject::DiContainer::InstantiatePrefab(UnityEngine::Object* prefab, Zenject::GameObjectCreationParameters* gameObjectBindInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiatePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiatePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(gameObjectBindInfo)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefab, gameObjectBindInfo);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabResource
UnityEngine::GameObject* Zenject::DiContainer::InstantiatePrefabResource(::Il2CppString* resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiatePrefabResource");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiatePrefabResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabResource
UnityEngine::GameObject* Zenject::DiContainer::InstantiatePrefabResource(::Il2CppString* resourcePath, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiatePrefabResource");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiatePrefabResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath), ::il2cpp_utils::ExtractType(parentTransform)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, resourcePath, parentTransform);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabResource
UnityEngine::GameObject* Zenject::DiContainer::InstantiatePrefabResource(::Il2CppString* resourcePath, UnityEngine::Vector3 position, UnityEngine::Quaternion rotation, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiatePrefabResource");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiatePrefabResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(parentTransform)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, resourcePath, position, rotation, parentTransform);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabResource
UnityEngine::GameObject* Zenject::DiContainer::InstantiatePrefabResource(::Il2CppString* resourcePath, Zenject::GameObjectCreationParameters* creationInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiatePrefabResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiatePrefabResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath), ::il2cpp_utils::ExtractType(creationInfo)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, resourcePath, creationInfo);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabForComponent
::Il2CppObject* Zenject::DiContainer::InstantiatePrefabForComponent(System::Type* concreteType, UnityEngine::Object* prefab, UnityEngine::Transform* parentTransform, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiatePrefabForComponent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiatePrefabForComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteType), ::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(parentTransform), ::il2cpp_utils::ExtractType(extraArgs)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType, prefab, parentTransform, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabForComponent
::Il2CppObject* Zenject::DiContainer::InstantiatePrefabForComponent(System::Type* concreteType, UnityEngine::Object* prefab, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs, Zenject::GameObjectCreationParameters* creationInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiatePrefabForComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiatePrefabForComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteType), ::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(extraArgs), ::il2cpp_utils::ExtractType(creationInfo)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType, prefab, extraArgs, creationInfo);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabResourceForComponent
::Il2CppObject* Zenject::DiContainer::InstantiatePrefabResourceForComponent(System::Type* concreteType, ::Il2CppString* resourcePath, UnityEngine::Transform* parentTransform, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiatePrefabResourceForComponent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiatePrefabResourceForComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteType), ::il2cpp_utils::ExtractType(resourcePath), ::il2cpp_utils::ExtractType(parentTransform), ::il2cpp_utils::ExtractType(extraArgs)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType, resourcePath, parentTransform, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InstantiateScriptableObjectResource
::Il2CppObject* Zenject::DiContainer::InstantiateScriptableObjectResource(System::Type* scriptableObjectType, ::Il2CppString* resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiateScriptableObjectResource");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateScriptableObjectResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scriptableObjectType), ::il2cpp_utils::ExtractType(resourcePath)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, scriptableObjectType, resourcePath);
}
// Autogenerated method: Zenject.DiContainer.InstantiateScriptableObjectResource
::Il2CppObject* Zenject::DiContainer::InstantiateScriptableObjectResource(System::Type* scriptableObjectType, ::Il2CppString* resourcePath, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiateScriptableObjectResource");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateScriptableObjectResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scriptableObjectType), ::il2cpp_utils::ExtractType(resourcePath), ::il2cpp_utils::ExtractType(extraArgs)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, scriptableObjectType, resourcePath, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InjectGameObject
void Zenject::DiContainer::InjectGameObject(UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InjectGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: Zenject.DiContainer.InjectGameObjectForComponent
::Il2CppObject* Zenject::DiContainer::InjectGameObjectForComponent(UnityEngine::GameObject* gameObject, System::Type* componentType, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InjectGameObjectForComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectGameObjectForComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(componentType), ::il2cpp_utils::ExtractType(extraArgs)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, gameObject, componentType, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InjectGameObjectForComponentExplicit
UnityEngine::Component* Zenject::DiContainer::InjectGameObjectForComponentExplicit(UnityEngine::GameObject* gameObject, System::Type* componentType, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::InjectContext* context, ::Il2CppObject* concreteIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InjectGameObjectForComponentExplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InjectGameObjectForComponentExplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(componentType), ::il2cpp_utils::ExtractType(extraArgs), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(concreteIdentifier)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Component*, false>(this, ___internal__method, gameObject, componentType, extraArgs, context, concreteIdentifier);
}
// Autogenerated method: Zenject.DiContainer.Inject
void Zenject::DiContainer::Inject(::Il2CppObject* injectable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::Inject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Inject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(injectable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectable);
}
// Autogenerated method: Zenject.DiContainer.Inject
void Zenject::DiContainer::Inject(::Il2CppObject* injectable, System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::Inject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Inject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(injectable), ::il2cpp_utils::ExtractType(extraArgs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, injectable, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.Resolve
::Il2CppObject* Zenject::DiContainer::Resolve(System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::Resolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, contractType);
}
// Autogenerated method: Zenject.DiContainer.ResolveId
::Il2CppObject* Zenject::DiContainer::ResolveId(System::Type* contractType, ::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ResolveId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType), ::il2cpp_utils::ExtractType(identifier)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, contractType, identifier);
}
// Autogenerated method: Zenject.DiContainer.TryResolve
::Il2CppObject* Zenject::DiContainer::TryResolve(System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::TryResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, contractType);
}
// Autogenerated method: Zenject.DiContainer.TryResolveId
::Il2CppObject* Zenject::DiContainer::TryResolveId(System::Type* contractType, ::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::TryResolveId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryResolveId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType), ::il2cpp_utils::ExtractType(identifier)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, contractType, identifier);
}
// Autogenerated method: Zenject.DiContainer.ResolveAll
System::Collections::IList* Zenject::DiContainer::ResolveAll(System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ResolveAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IList*, false>(this, ___internal__method, contractType);
}
// Autogenerated method: Zenject.DiContainer.ResolveIdAll
System::Collections::IList* Zenject::DiContainer::ResolveIdAll(System::Type* contractType, ::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ResolveIdAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveIdAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType), ::il2cpp_utils::ExtractType(identifier)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IList*, false>(this, ___internal__method, contractType, identifier);
}
// Autogenerated method: Zenject.DiContainer.UnbindAll
void Zenject::DiContainer::UnbindAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::UnbindAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnbindAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.Unbind
bool Zenject::DiContainer::Unbind(System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::Unbind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unbind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, contractType);
}
// Autogenerated method: Zenject.DiContainer.UnbindId
bool Zenject::DiContainer::UnbindId(System::Type* contractType, ::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::UnbindId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnbindId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType), ::il2cpp_utils::ExtractType(identifier)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, contractType, identifier);
}
// Autogenerated method: Zenject.DiContainer.UnbindInterfacesTo
void Zenject::DiContainer::UnbindInterfacesTo(System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::UnbindInterfacesTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnbindInterfacesTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, concreteType);
}
// Autogenerated method: Zenject.DiContainer.Unbind
bool Zenject::DiContainer::Unbind(System::Type* contractType, System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::Unbind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unbind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, contractType, concreteType);
}
// Autogenerated method: Zenject.DiContainer.UnbindId
bool Zenject::DiContainer::UnbindId(System::Type* contractType, System::Type* concreteType, ::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::UnbindId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnbindId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType), ::il2cpp_utils::ExtractType(concreteType), ::il2cpp_utils::ExtractType(identifier)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, contractType, concreteType, identifier);
}
// Autogenerated method: Zenject.DiContainer.HasBinding
bool Zenject::DiContainer::HasBinding(System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::HasBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, contractType);
}
// Autogenerated method: Zenject.DiContainer.HasBindingId
bool Zenject::DiContainer::HasBindingId(System::Type* contractType, ::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::HasBindingId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasBindingId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType), ::il2cpp_utils::ExtractType(identifier)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, contractType, identifier);
}
// Autogenerated method: Zenject.DiContainer.HasBindingId
bool Zenject::DiContainer::HasBindingId(System::Type* contractType, ::Il2CppObject* identifier, Zenject::InjectSources sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::HasBindingId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasBindingId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType), ::il2cpp_utils::ExtractType(identifier), ::il2cpp_utils::ExtractType(sourceType)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, contractType, identifier, sourceType);
}
// Autogenerated method: Zenject.DiContainer.HasBinding
bool Zenject::DiContainer::HasBinding(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::HasBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.DiContainer.FlushBindings
void Zenject::DiContainer::FlushBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::FlushBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DiContainer.FinalizeBinding
void Zenject::DiContainer::FinalizeBinding(Zenject::BindStatement* binding) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::FinalizeBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binding)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, binding);
}
// Autogenerated method: Zenject.DiContainer.StartBinding
Zenject::BindStatement* Zenject::DiContainer::StartBinding(bool flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::StartBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flush)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::BindStatement*, false>(this, ___internal__method, flush);
}
// Autogenerated method: Zenject.DiContainer.Rebind
Zenject::ConcreteBinderNonGeneric* Zenject::DiContainer::Rebind(System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::Rebind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConcreteBinderNonGeneric*, false>(this, ___internal__method, contractType);
}
// Autogenerated method: Zenject.DiContainer.RebindId
Zenject::ConcreteBinderNonGeneric* Zenject::DiContainer::RebindId(System::Type* contractType, ::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::RebindId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebindId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType), ::il2cpp_utils::ExtractType(identifier)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConcreteBinderNonGeneric*, false>(this, ___internal__method, contractType, identifier);
}
// Autogenerated method: Zenject.DiContainer.Bind
Zenject::ConcreteIdBinderNonGeneric* Zenject::DiContainer::Bind(::Array<System::Type*>* contractTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractTypes)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConcreteIdBinderNonGeneric*, false>(this, ___internal__method, contractTypes);
}
// Creating initializer_list -> params proxy for: Zenject.ConcreteIdBinderNonGeneric Bind(params System.Type[] contractTypes)
Zenject::ConcreteIdBinderNonGeneric* Zenject::DiContainer::Bind(std::initializer_list<System::Type*> contractTypes) {
  return Zenject::DiContainer::Bind(::Array<System::Type*>::New(contractTypes));
}
// Autogenerated method: Zenject.DiContainer.Bind
Zenject::ConcreteIdBinderNonGeneric* Zenject::DiContainer::Bind(System::Collections::Generic::IEnumerable_1<System::Type*>* contractTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractTypes)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConcreteIdBinderNonGeneric*, false>(this, ___internal__method, contractTypes);
}
// Autogenerated method: Zenject.DiContainer.BindInternal
Zenject::ConcreteIdBinderNonGeneric* Zenject::DiContainer::BindInternal(Zenject::BindInfo* bindInfo, Zenject::BindStatement* bindingFinalizer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::BindInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindInfo), ::il2cpp_utils::ExtractType(bindingFinalizer)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConcreteIdBinderNonGeneric*, false>(this, ___internal__method, bindInfo, bindingFinalizer);
}
// Autogenerated method: Zenject.DiContainer.Bind
Zenject::ConcreteIdBinderNonGeneric* Zenject::DiContainer::Bind(System::Action_1<Zenject::ConventionSelectTypesBinder*>* generator) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(generator)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConcreteIdBinderNonGeneric*, false>(this, ___internal__method, generator);
}
// Autogenerated method: Zenject.DiContainer.BindInterfacesTo
Zenject::FromBinderNonGeneric* Zenject::DiContainer::BindInterfacesTo(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::BindInterfacesTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindInterfacesTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::FromBinderNonGeneric*, false>(this, ___internal__method, type);
}
// Autogenerated method: Zenject.DiContainer.BindInterfacesAndSelfTo
Zenject::FromBinderNonGeneric* Zenject::DiContainer::BindInterfacesAndSelfTo(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::BindInterfacesAndSelfTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindInterfacesAndSelfTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::FromBinderNonGeneric*, false>(this, ___internal__method, type);
}
// Autogenerated method: Zenject.DiContainer.BindInstances
void Zenject::DiContainer::BindInstances(::Array<::Il2CppObject*>* instances) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::BindInstances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindInstances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instances)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, instances);
}
// Creating initializer_list -> params proxy for: System.Void BindInstances(params System.Object[] instances)
void Zenject::DiContainer::BindInstances(std::initializer_list<::Il2CppObject*> instances) {
  Zenject::DiContainer::BindInstances(::Array<::Il2CppObject*>::New(instances));
}
// Autogenerated method: Zenject.DiContainer.InstantiateExplicit
::Il2CppObject* Zenject::DiContainer::InstantiateExplicit(System::Type* concreteType, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiateExplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateExplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteType), ::il2cpp_utils::ExtractType(extraArgs)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InstantiateExplicit
::Il2CppObject* Zenject::DiContainer::InstantiateExplicit(System::Type* concreteType, bool autoInject, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::InjectContext* context, ::Il2CppObject* concreteIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiateExplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateExplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteType), ::il2cpp_utils::ExtractType(autoInject), ::il2cpp_utils::ExtractType(extraArgs), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(concreteIdentifier)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, concreteType, autoInject, extraArgs, context, concreteIdentifier);
}
// Autogenerated method: Zenject.DiContainer.InstantiateComponentExplicit
UnityEngine::Component* Zenject::DiContainer::InstantiateComponentExplicit(System::Type* componentType, UnityEngine::GameObject* gameObject, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiateComponentExplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateComponentExplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentType), ::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(extraArgs)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Component*, false>(this, ___internal__method, componentType, gameObject, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InstantiateScriptableObjectResourceExplicit
::Il2CppObject* Zenject::DiContainer::InstantiateScriptableObjectResourceExplicit(System::Type* scriptableObjectType, ::Il2CppString* resourcePath, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiateScriptableObjectResourceExplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateScriptableObjectResourceExplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scriptableObjectType), ::il2cpp_utils::ExtractType(resourcePath), ::il2cpp_utils::ExtractType(extraArgs)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, scriptableObjectType, resourcePath, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabResourceForComponentExplicit
::Il2CppObject* Zenject::DiContainer::InstantiatePrefabResourceForComponentExplicit(System::Type* componentType, ::Il2CppString* resourcePath, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::GameObjectCreationParameters* creationInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiatePrefabResourceForComponentExplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiatePrefabResourceForComponentExplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentType), ::il2cpp_utils::ExtractType(resourcePath), ::il2cpp_utils::ExtractType(extraArgs), ::il2cpp_utils::ExtractType(creationInfo)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, componentType, resourcePath, extraArgs, creationInfo);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabResourceForComponentExplicit
::Il2CppObject* Zenject::DiContainer::InstantiatePrefabResourceForComponentExplicit(System::Type* componentType, ::Il2CppString* resourcePath, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::InjectContext* context, ::Il2CppObject* concreteIdentifier, Zenject::GameObjectCreationParameters* creationInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiatePrefabResourceForComponentExplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiatePrefabResourceForComponentExplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentType), ::il2cpp_utils::ExtractType(resourcePath), ::il2cpp_utils::ExtractType(extraArgs), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(concreteIdentifier), ::il2cpp_utils::ExtractType(creationInfo)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, componentType, resourcePath, extraArgs, context, concreteIdentifier, creationInfo);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabForComponentExplicit
::Il2CppObject* Zenject::DiContainer::InstantiatePrefabForComponentExplicit(System::Type* componentType, UnityEngine::Object* prefab, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiatePrefabForComponentExplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiatePrefabForComponentExplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentType), ::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(extraArgs)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, componentType, prefab, extraArgs);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabForComponentExplicit
::Il2CppObject* Zenject::DiContainer::InstantiatePrefabForComponentExplicit(System::Type* componentType, UnityEngine::Object* prefab, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::GameObjectCreationParameters* gameObjectBindInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiatePrefabForComponentExplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiatePrefabForComponentExplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentType), ::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(extraArgs), ::il2cpp_utils::ExtractType(gameObjectBindInfo)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, componentType, prefab, extraArgs, gameObjectBindInfo);
}
// Autogenerated method: Zenject.DiContainer.InstantiatePrefabForComponentExplicit
::Il2CppObject* Zenject::DiContainer::InstantiatePrefabForComponentExplicit(System::Type* componentType, UnityEngine::Object* prefab, System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgs, Zenject::InjectContext* context, ::Il2CppObject* concreteIdentifier, Zenject::GameObjectCreationParameters* gameObjectBindInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::InstantiatePrefabForComponentExplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiatePrefabForComponentExplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentType), ::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(extraArgs), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(concreteIdentifier), ::il2cpp_utils::ExtractType(gameObjectBindInfo)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, componentType, prefab, extraArgs, context, concreteIdentifier, gameObjectBindInfo);
}
// Autogenerated method: Zenject.DiContainer.BindExecutionOrder
void Zenject::DiContainer::BindExecutionOrder(System::Type* type, int order) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::BindExecutionOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindExecutionOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(order)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, type, order);
}
// Autogenerated method: Zenject.DiContainer.BindTickableExecutionOrder
Zenject::CopyNonLazyBinder* Zenject::DiContainer::BindTickableExecutionOrder(System::Type* type, int order) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::BindTickableExecutionOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindTickableExecutionOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(order)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::CopyNonLazyBinder*, false>(this, ___internal__method, type, order);
}
// Autogenerated method: Zenject.DiContainer.BindInitializableExecutionOrder
Zenject::CopyNonLazyBinder* Zenject::DiContainer::BindInitializableExecutionOrder(System::Type* type, int order) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::BindInitializableExecutionOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindInitializableExecutionOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(order)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::CopyNonLazyBinder*, false>(this, ___internal__method, type, order);
}
// Autogenerated method: Zenject.DiContainer.BindDisposableExecutionOrder
Zenject::CopyNonLazyBinder* Zenject::DiContainer::BindDisposableExecutionOrder(System::Type* type, int order) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::BindDisposableExecutionOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindDisposableExecutionOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(order)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::CopyNonLazyBinder*, false>(this, ___internal__method, type, order);
}
// Autogenerated method: Zenject.DiContainer.BindLateDisposableExecutionOrder
Zenject::CopyNonLazyBinder* Zenject::DiContainer::BindLateDisposableExecutionOrder(System::Type* type, int order) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::BindLateDisposableExecutionOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindLateDisposableExecutionOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(order)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::CopyNonLazyBinder*, false>(this, ___internal__method, type, order);
}
// Autogenerated method: Zenject.DiContainer.BindFixedTickableExecutionOrder
Zenject::CopyNonLazyBinder* Zenject::DiContainer::BindFixedTickableExecutionOrder(System::Type* type, int order) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::BindFixedTickableExecutionOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindFixedTickableExecutionOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(order)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::CopyNonLazyBinder*, false>(this, ___internal__method, type, order);
}
// Autogenerated method: Zenject.DiContainer.BindLateTickableExecutionOrder
Zenject::CopyNonLazyBinder* Zenject::DiContainer::BindLateTickableExecutionOrder(System::Type* type, int order) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::BindLateTickableExecutionOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindLateTickableExecutionOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(order)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::CopyNonLazyBinder*, false>(this, ___internal__method, type, order);
}
// Autogenerated method: Zenject.DiContainer.BindPoolableExecutionOrder
Zenject::CopyNonLazyBinder* Zenject::DiContainer::BindPoolableExecutionOrder(System::Type* type, int order) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::BindPoolableExecutionOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindPoolableExecutionOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(order)})));
  return ::il2cpp_utils::RunMethodThrow<Zenject::CopyNonLazyBinder*, false>(this, ___internal__method, type, order);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DiContainer/Zenject.ProviderInfo
#include "Zenject/DiContainer_ProviderInfo.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.BindingCondition
#include "Zenject/BindingCondition.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Zenject.DiContainer Container
Zenject::DiContainer* Zenject::DiContainer::ProviderInfo::_get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ProviderInfo::_get_Container");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::DiContainer*>(___internal__instance, "Container"));
}
// Autogenerated instance field setter
// Set instance field: public readonly Zenject.DiContainer Container
void Zenject::DiContainer::ProviderInfo::_set_Container(Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ProviderInfo::_set_Container");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "Container", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean NonLazy
bool Zenject::DiContainer::ProviderInfo::_get_NonLazy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ProviderInfo::_get_NonLazy");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "NonLazy"));
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean NonLazy
void Zenject::DiContainer::ProviderInfo::_set_NonLazy(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ProviderInfo::_set_NonLazy");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "NonLazy", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly Zenject.IProvider Provider
Zenject::IProvider* Zenject::DiContainer::ProviderInfo::_get_Provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ProviderInfo::_get_Provider");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::IProvider*>(___internal__instance, "Provider"));
}
// Autogenerated instance field setter
// Set instance field: public readonly Zenject.IProvider Provider
void Zenject::DiContainer::ProviderInfo::_set_Provider(Zenject::IProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ProviderInfo::_set_Provider");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "Provider", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly Zenject.BindingCondition Condition
Zenject::BindingCondition* Zenject::DiContainer::ProviderInfo::_get_Condition() {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ProviderInfo::_get_Condition");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::BindingCondition*>(___internal__instance, "Condition"));
}
// Autogenerated instance field setter
// Set instance field: public readonly Zenject.BindingCondition Condition
void Zenject::DiContainer::ProviderInfo::_set_Condition(Zenject::BindingCondition* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Zenject::DiContainer::ProviderInfo::_set_Condition");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "Condition", value));
}
