// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusNetworkPlayerModel
#include "GlobalNamespace/OculusNetworkPlayerModel.hpp"
// Including type: OculusNetworkPlayerModel/OculusNetworkPlayer
#include "GlobalNamespace/OculusNetworkPlayerModel_OculusNetworkPlayer.hpp"
// Including type: OculusNetworkPlayerModel/<Start>d__37
#include "GlobalNamespace/OculusNetworkPlayerModel_-Start-d__37.hpp"
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass45_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass45_0.hpp"
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass46_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass46_0.hpp"
// Including type: OculusNetworkPlayerModel/<HandleRoomInviteReceived>d__46
#include "GlobalNamespace/OculusNetworkPlayerModel_-HandleRoomInviteReceived-d__46.hpp"
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass50_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass50_0.hpp"
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass61_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass61_0.hpp"
// Including type: IPlatformUserModel
#include "GlobalNamespace/IPlatformUserModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: OculusConnectionManager
#include "GlobalNamespace/OculusConnectionManager.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: INetworkPlayerModelPartyConfig`1
#include "GlobalNamespace/INetworkPlayerModelPartyConfig_1.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kConnectionTypeKey
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kConnectionTypeKey() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kConnectionTypeKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionTypeKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kConnectionTypeKey(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kConnectionTypeKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kConnectionTypeOculus
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kConnectionTypeOculus() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kConnectionTypeOculus"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionTypeOculus
void GlobalNamespace::OculusNetworkPlayerModel::_set_kConnectionTypeOculus(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kConnectionTypeOculus", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kConnectionTypeLiteNetLib
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kConnectionTypeLiteNetLib() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kConnectionTypeLiteNetLib"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionTypeLiteNetLib
void GlobalNamespace::OculusNetworkPlayerModel::_set_kConnectionTypeLiteNetLib(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kConnectionTypeLiteNetLib", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kCurrentPartySizeKey
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kCurrentPartySizeKey() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kCurrentPartySizeKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCurrentPartySizeKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kCurrentPartySizeKey(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kCurrentPartySizeKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMaxPartySizeKey
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kMaxPartySizeKey() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kMaxPartySizeKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMaxPartySizeKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kMaxPartySizeKey(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kMaxPartySizeKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDifficultiesKey
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kDifficultiesKey() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kDifficultiesKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDifficultiesKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kDifficultiesKey(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kDifficultiesKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kModifiersKey
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kModifiersKey() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kModifiersKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kModifiersKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kModifiersKey(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kModifiersKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kSongPacksKey
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kSongPacksKey() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kSongPacksKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kSongPacksKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kSongPacksKey(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kSongPacksKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kAutoRefreshRate
float GlobalNamespace::OculusNetworkPlayerModel::_get_kAutoRefreshRate() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OculusNetworkPlayerModel", "kAutoRefreshRate"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kAutoRefreshRate
void GlobalNamespace::OculusNetworkPlayerModel::_set_kAutoRefreshRate(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kAutoRefreshRate", value));
}
// Autogenerated method: OculusNetworkPlayerModel.get_oculusConnectionManager
GlobalNamespace::OculusConnectionManager* GlobalNamespace::OculusNetworkPlayerModel::get_oculusConnectionManager() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OculusConnectionManager*>(this, "get_oculusConnectionManager"));
}
// Autogenerated method: OculusNetworkPlayerModel.GetPlayer
GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer* GlobalNamespace::OculusNetworkPlayerModel::GetPlayer(uint64_t id) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer*>(this, "GetPlayer", id));
}
// Autogenerated method: OculusNetworkPlayerModel.GetPlayer
GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer* GlobalNamespace::OculusNetworkPlayerModel::GetPlayer(::Il2CppString* userId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer*>(this, "GetPlayer", userId));
}
// Autogenerated method: OculusNetworkPlayerModel.TryCreateRoom
void GlobalNamespace::OculusNetworkPlayerModel::TryCreateRoom() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "TryCreateRoom"));
}
// Autogenerated method: OculusNetworkPlayerModel.GetUserName
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::GetUserName(uint64_t id) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "GetUserName", id));
}
// Autogenerated method: OculusNetworkPlayerModel.GetUserNameAsync
System::Threading::Tasks::Task_1<::Il2CppString*>* GlobalNamespace::OculusNetworkPlayerModel::GetUserNameAsync(uint64_t id) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<::Il2CppString*>*>(this, "GetUserNameAsync", id));
}
// Autogenerated method: OculusNetworkPlayerModel.HandleRoomInviteReceived
void GlobalNamespace::OculusNetworkPlayerModel::HandleRoomInviteReceived(Oculus::Platform::Message_1<Oculus::Platform::Models::RoomInviteNotification*>* message) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleRoomInviteReceived", message));
}
// Autogenerated method: OculusNetworkPlayerModel.HandleRoomInviteAccepted
void GlobalNamespace::OculusNetworkPlayerModel::HandleRoomInviteAccepted(Oculus::Platform::Message_1<::Il2CppString*>* message) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleRoomInviteAccepted", message));
}
// Autogenerated method: OculusNetworkPlayerModel.HandleRoomUpdate
void GlobalNamespace::OculusNetworkPlayerModel::HandleRoomUpdate(Oculus::Platform::Message_1<Oculus::Platform::Models::Room*>* message) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleRoomUpdate", message));
}
// Autogenerated method: OculusNetworkPlayerModel.HandlePlayersChanged
void GlobalNamespace::OculusNetworkPlayerModel::HandlePlayersChanged() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePlayersChanged"));
}
// Autogenerated method: OculusNetworkPlayerModel.Refresh
void GlobalNamespace::OculusNetworkPlayerModel::Refresh() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Refresh"));
}
// Autogenerated method: OculusNetworkPlayerModel.UpdateRoomDataStore
void GlobalNamespace::OculusNetworkPlayerModel::UpdateRoomDataStore() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdateRoomDataStore"));
}
// Autogenerated method: OculusNetworkPlayerModel.TryLeaveRoom
void GlobalNamespace::OculusNetworkPlayerModel::TryLeaveRoom() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "TryLeaveRoom"));
}
// Autogenerated method: OculusNetworkPlayerModel.TryConnectToServer
void GlobalNamespace::OculusNetworkPlayerModel::TryConnectToServer() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "TryConnectToServer"));
}
// Autogenerated method: OculusNetworkPlayerModel.ShouldAcceptConnectionFromPlayer
System::Threading::Tasks::Task_1<bool>* GlobalNamespace::OculusNetworkPlayerModel::ShouldAcceptConnectionFromPlayer(uint64_t userId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<bool>*>(this, "ShouldAcceptConnectionFromPlayer", userId));
}
// Autogenerated method: OculusNetworkPlayerModel.<TryCreateRoom>b__43_0
void GlobalNamespace::OculusNetworkPlayerModel::$TryCreateRoom$b__43_0(Oculus::Platform::Message_1<Oculus::Platform::Models::Room*>* result) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<TryCreateRoom>b__43_0", result));
}
// Autogenerated method: OculusNetworkPlayerModel.get_localPlayerIsPartyOwner
bool GlobalNamespace::OculusNetworkPlayerModel::get_localPlayerIsPartyOwner() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_localPlayerIsPartyOwner"));
}
// Autogenerated method: OculusNetworkPlayerModel.get_localPlayer
GlobalNamespace::INetworkPlayer* GlobalNamespace::OculusNetworkPlayerModel::get_localPlayer() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::INetworkPlayer*>(this, "get_localPlayer"));
}
// Autogenerated method: OculusNetworkPlayerModel.get_currentPartySize
int GlobalNamespace::OculusNetworkPlayerModel::get_currentPartySize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_currentPartySize"));
}
// Autogenerated method: OculusNetworkPlayerModel.add_partySizeChangedEvent
void GlobalNamespace::OculusNetworkPlayerModel::add_partySizeChangedEvent(System::Action_1<int>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_partySizeChangedEvent", value));
}
// Autogenerated method: OculusNetworkPlayerModel.remove_partySizeChangedEvent
void GlobalNamespace::OculusNetworkPlayerModel::remove_partySizeChangedEvent(System::Action_1<int>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_partySizeChangedEvent", value));
}
// Autogenerated method: OculusNetworkPlayerModel.add_partyChangedEvent
void GlobalNamespace::OculusNetworkPlayerModel::add_partyChangedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_partyChangedEvent", value));
}
// Autogenerated method: OculusNetworkPlayerModel.remove_partyChangedEvent
void GlobalNamespace::OculusNetworkPlayerModel::remove_partyChangedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_partyChangedEvent", value));
}
// Autogenerated method: OculusNetworkPlayerModel.add_inviteRequestedEvent
void GlobalNamespace::OculusNetworkPlayerModel::add_inviteRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_inviteRequestedEvent", value));
}
// Autogenerated method: OculusNetworkPlayerModel.remove_inviteRequestedEvent
void GlobalNamespace::OculusNetworkPlayerModel::remove_inviteRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_inviteRequestedEvent", value));
}
// Autogenerated method: OculusNetworkPlayerModel.Start
void GlobalNamespace::OculusNetworkPlayerModel::Start() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Start"));
}
// Autogenerated method: OculusNetworkPlayerModel.Update
void GlobalNamespace::OculusNetworkPlayerModel::Update() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Update"));
}
// Autogenerated method: OculusNetworkPlayerModel.GetPartyPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::OculusNetworkPlayerModel::GetPartyPlayers() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*>(this, "GetPartyPlayers"));
}
// Autogenerated method: OculusNetworkPlayerModel.GetOtherPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::OculusNetworkPlayerModel::GetOtherPlayers() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*>(this, "GetOtherPlayers"));
}
// Autogenerated method: OculusNetworkPlayerModel.DestroyParty
void GlobalNamespace::OculusNetworkPlayerModel::DestroyParty() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DestroyParty"));
}
// Autogenerated method: OculusNetworkPlayerModel.Disconnect
void GlobalNamespace::OculusNetworkPlayerModel::Disconnect() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Disconnect"));
}
// Autogenerated method: OculusNetworkPlayerModel.ConnectionFailed
void GlobalNamespace::OculusNetworkPlayerModel::ConnectionFailed(GlobalNamespace::ConnectionFailedReason reason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ConnectionFailed", reason));
}
// Autogenerated method: OculusNetworkPlayerModel.PlayerConnected
void GlobalNamespace::OculusNetworkPlayerModel::PlayerConnected(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PlayerConnected", connectedPlayer));
}
// Autogenerated method: OculusNetworkPlayerModel.PlayerDisconnected
void GlobalNamespace::OculusNetworkPlayerModel::PlayerDisconnected(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PlayerDisconnected", connectedPlayer));
}
// Autogenerated method: OculusNetworkPlayerModel.PartySizeChanged
void GlobalNamespace::OculusNetworkPlayerModel::PartySizeChanged(int currentPartySize) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PartySizeChanged", currentPartySize));
}
// Autogenerated method: OculusNetworkPlayerModel..ctor
GlobalNamespace::OculusNetworkPlayerModel* GlobalNamespace::OculusNetworkPlayerModel::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<OculusNetworkPlayerModel*>());
}
