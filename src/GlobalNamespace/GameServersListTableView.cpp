// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameServersListTableView
#include "GlobalNamespace/GameServersListTableView.hpp"
// Including type: TableViewWithDetailCell
#include "GlobalNamespace/TableViewWithDetailCell.hpp"
// Including type: GameServerListTableCell
#include "GlobalNamespace/GameServerListTableCell.hpp"
// Including type: GameServerListDetailTableCell
#include "GlobalNamespace/GameServerListDetailTableCell.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellReuseIdentifier
::Il2CppString* GlobalNamespace::GameServersListTableView::_get_kCellReuseIdentifier() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "GameServersListTableView", "kCellReuseIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellReuseIdentifier
void GlobalNamespace::GameServersListTableView::_set_kCellReuseIdentifier(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServersListTableView", "kCellReuseIdentifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDetailCellReuseIdentifier
::Il2CppString* GlobalNamespace::GameServersListTableView::_get_kDetailCellReuseIdentifier() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "GameServersListTableView", "kDetailCellReuseIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDetailCellReuseIdentifier
void GlobalNamespace::GameServersListTableView::_set_kDetailCellReuseIdentifier(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServersListTableView", "kDetailCellReuseIdentifier", value));
}
// Autogenerated method: GameServersListTableView.add_joinButtonPressedEvent
void GlobalNamespace::GameServersListTableView::add_joinButtonPressedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_joinButtonPressedEvent", value));
}
// Autogenerated method: GameServersListTableView.remove_joinButtonPressedEvent
void GlobalNamespace::GameServersListTableView::remove_joinButtonPressedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_joinButtonPressedEvent", value));
}
// Autogenerated method: GameServersListTableView.Init
void GlobalNamespace::GameServersListTableView::Init() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Init"));
}
// Autogenerated method: GameServersListTableView.SetData
void GlobalNamespace::GameServersListTableView::SetData(System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* servers, bool clearSelection) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetData", servers, clearSelection));
}
// Autogenerated method: GameServersListTableView.HandleGameServerListDetailTableCellJoinServerButtonWasPressed
void GlobalNamespace::GameServersListTableView::HandleGameServerListDetailTableCellJoinServerButtonWasPressed() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleGameServerListDetailTableCellJoinServerButtonWasPressed"));
}
// Autogenerated method: GameServersListTableView.HandleTableViewDidSelectCellWithIdx
void GlobalNamespace::GameServersListTableView::HandleTableViewDidSelectCellWithIdx(HMUI::TableView* tableView, int id) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleTableViewDidSelectCellWithIdx", tableView, id));
}
// Autogenerated method: GameServersListTableView.HandleTableViewDidDeselectCellWithIdx
void GlobalNamespace::GameServersListTableView::HandleTableViewDidDeselectCellWithIdx(GlobalNamespace::TableViewWithDetailCell* arg1, int arg2) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleTableViewDidDeselectCellWithIdx", arg1, arg2));
}
// Autogenerated method: GameServersListTableView.OnDestroy
void GlobalNamespace::GameServersListTableView::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: GameServersListTableView.CellSize
float GlobalNamespace::GameServersListTableView::CellSize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "CellSize"));
}
// Autogenerated method: GameServersListTableView.NumberOfCells
int GlobalNamespace::GameServersListTableView::NumberOfCells() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "NumberOfCells"));
}
// Autogenerated method: GameServersListTableView.CellForContent
HMUI::TableCell* GlobalNamespace::GameServersListTableView::CellForContent(GlobalNamespace::TableViewWithDetailCell* tableView, int idx, bool detailOpened) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<HMUI::TableCell*>(this, "CellForContent", tableView, idx, detailOpened));
}
// Autogenerated method: GameServersListTableView.CellForDetail
HMUI::TableCell* GlobalNamespace::GameServersListTableView::CellForDetail(GlobalNamespace::TableViewWithDetailCell* tableView, int contentIdx) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<HMUI::TableCell*>(this, "CellForDetail", tableView, contentIdx));
}
// Autogenerated method: GameServersListTableView..ctor
GlobalNamespace::GameServersListTableView* GlobalNamespace::GameServersListTableView::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<GameServersListTableView*>());
}
