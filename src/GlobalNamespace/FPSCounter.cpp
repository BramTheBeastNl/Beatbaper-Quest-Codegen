// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FPSCounter
#include "GlobalNamespace/FPSCounter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FPSCounter.get_currentFPS
int GlobalNamespace::FPSCounter::get_currentFPS() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_currentFPS"));
}
// Autogenerated method: FPSCounter.set_currentFPS
void GlobalNamespace::FPSCounter::set_currentFPS(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_currentFPS", value));
}
// Autogenerated method: FPSCounter.get_lowestFPS
int GlobalNamespace::FPSCounter::get_lowestFPS() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_lowestFPS"));
}
// Autogenerated method: FPSCounter.set_lowestFPS
void GlobalNamespace::FPSCounter::set_lowestFPS(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_lowestFPS", value));
}
// Autogenerated method: FPSCounter.get_highestFPS
int GlobalNamespace::FPSCounter::get_highestFPS() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_highestFPS"));
}
// Autogenerated method: FPSCounter.set_highestFPS
void GlobalNamespace::FPSCounter::set_highestFPS(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_highestFPS", value));
}
// Autogenerated method: FPSCounter.Awake
void GlobalNamespace::FPSCounter::Awake() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Awake"));
}
// Autogenerated method: FPSCounter.Update
void GlobalNamespace::FPSCounter::Update() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Update"));
}
// Autogenerated method: FPSCounter..ctor
GlobalNamespace::FPSCounter* GlobalNamespace::FPSCounter::New_ctor() {
  return (FPSCounter*)THROW_UNLESS(il2cpp_utils::New("", "FPSCounter"));
}
