// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DifficultyBeatmapSet
#include "GlobalNamespace/DifficultyBeatmapSet.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DifficultyBeatmapSet.set_beatmapCharacteristic
void GlobalNamespace::DifficultyBeatmapSet::set_beatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_beatmapCharacteristic", value));
}
// Autogenerated method: DifficultyBeatmapSet.set_difficultyBeatmaps
void GlobalNamespace::DifficultyBeatmapSet::set_difficultyBeatmaps(::Array<GlobalNamespace::IDifficultyBeatmap*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_difficultyBeatmaps", value));
}
// Autogenerated method: DifficultyBeatmapSet..ctor
GlobalNamespace::DifficultyBeatmapSet* GlobalNamespace::DifficultyBeatmapSet::New_ctor(GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, ::Array<GlobalNamespace::IDifficultyBeatmap*>* difficultyBeatmaps) {
  return THROW_UNLESS(il2cpp_utils::New<DifficultyBeatmapSet*>(beatmapCharacteristic, difficultyBeatmaps));
}
// Autogenerated method: DifficultyBeatmapSet.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::DifficultyBeatmapSet::get_beatmapCharacteristic() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::BeatmapCharacteristicSO*>(this, "get_beatmapCharacteristic"));
}
// Autogenerated method: DifficultyBeatmapSet.get_difficultyBeatmaps
::Array<GlobalNamespace::IDifficultyBeatmap*>* GlobalNamespace::DifficultyBeatmapSet::get_difficultyBeatmaps() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<GlobalNamespace::IDifficultyBeatmap*>*>(this, "get_difficultyBeatmaps"));
}
