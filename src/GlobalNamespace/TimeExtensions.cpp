// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TimeExtensions
#include "GlobalNamespace/TimeExtensions.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TimeExtensions.MinSecDurationText
::Il2CppString* GlobalNamespace::TimeExtensions::MinSecDurationText(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TimeExtensions").WithContext("MinSecDurationText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeExtensions", "MinSecDurationText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(duration)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, duration);
}
// Autogenerated method: TimeExtensions.MinSecMillisecDurationText
::Il2CppString* GlobalNamespace::TimeExtensions::MinSecMillisecDurationText(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TimeExtensions").WithContext("MinSecMillisecDurationText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeExtensions", "MinSecMillisecDurationText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(duration)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, duration);
}
// Autogenerated method: TimeExtensions.SecondsToDays
int GlobalNamespace::TimeExtensions::SecondsToDays(int time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TimeExtensions").WithContext("SecondsToDays");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeExtensions", "SecondsToDays", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: TimeExtensions.SecondsToHours
int GlobalNamespace::TimeExtensions::SecondsToHours(int time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TimeExtensions").WithContext("SecondsToHours");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeExtensions", "SecondsToHours", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: TimeExtensions.SecondsToMinutes
int GlobalNamespace::TimeExtensions::SecondsToMinutes(int time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TimeExtensions").WithContext("SecondsToMinutes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeExtensions", "SecondsToMinutes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: TimeExtensions.DaysToSeconds
int GlobalNamespace::TimeExtensions::DaysToSeconds(int days) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TimeExtensions").WithContext("DaysToSeconds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeExtensions", "DaysToSeconds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(days)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, days);
}
// Autogenerated method: TimeExtensions.HoursToSeconds
int GlobalNamespace::TimeExtensions::HoursToSeconds(int hours) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TimeExtensions").WithContext("HoursToSeconds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeExtensions", "HoursToSeconds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hours)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hours);
}
// Autogenerated method: TimeExtensions.MinutesToSeconds
int GlobalNamespace::TimeExtensions::MinutesToSeconds(int minutes) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TimeExtensions").WithContext("MinutesToSeconds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeExtensions", "MinutesToSeconds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(minutes)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, minutes);
}
// Autogenerated method: TimeExtensions.Hours
int GlobalNamespace::TimeExtensions::Hours(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TimeExtensions").WithContext("Hours");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeExtensions", "Hours", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: TimeExtensions.Minutes
int GlobalNamespace::TimeExtensions::Minutes(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TimeExtensions").WithContext("Minutes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeExtensions", "Minutes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: TimeExtensions.Seconds
int GlobalNamespace::TimeExtensions::Seconds(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TimeExtensions").WithContext("Seconds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeExtensions", "Seconds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: TimeExtensions.Milliseconds
int GlobalNamespace::TimeExtensions::Milliseconds(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TimeExtensions").WithContext("Milliseconds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeExtensions", "Milliseconds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: TimeExtensions.TotalDays
int GlobalNamespace::TimeExtensions::TotalDays(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TimeExtensions").WithContext("TotalDays");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeExtensions", "TotalDays", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: TimeExtensions.TotalHours
int GlobalNamespace::TimeExtensions::TotalHours(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TimeExtensions").WithContext("TotalHours");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeExtensions", "TotalHours", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: TimeExtensions.TotalMinutes
int GlobalNamespace::TimeExtensions::TotalMinutes(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TimeExtensions").WithContext("TotalMinutes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeExtensions", "TotalMinutes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: TimeExtensions.TotalSeconds
int GlobalNamespace::TimeExtensions::TotalSeconds(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TimeExtensions").WithContext("TotalSeconds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeExtensions", "TotalSeconds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: TimeExtensions.ToUnixTime
int64_t GlobalNamespace::TimeExtensions::ToUnixTime(System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TimeExtensions").WithContext("ToUnixTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeExtensions", "ToUnixTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateTime);
}
// Autogenerated method: TimeExtensions.AsUnixTime
System::DateTime GlobalNamespace::TimeExtensions::AsUnixTime(int64_t unixTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TimeExtensions").WithContext("AsUnixTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "TimeExtensions", "AsUnixTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(unixTime)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, unixTime);
}
