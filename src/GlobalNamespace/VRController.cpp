// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
// Including type: VRControllerTransformOffset
#include "GlobalNamespace/VRControllerTransformOffset.hpp"
// Including type: VRPlatformHelper
#include "GlobalNamespace/VRPlatformHelper.hpp"
// Including type: VRControllersInputManager
#include "GlobalNamespace/VRControllersInputManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRController.get_node
UnityEngine::XR::XRNode GlobalNamespace::VRController::get_node() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::XR::XRNode>(this, "get_node"));
}
// Autogenerated method: VRController.set_node
void GlobalNamespace::VRController::set_node(UnityEngine::XR::XRNode value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_node", value));
}
// Autogenerated method: VRController.get_nodeIdx
int GlobalNamespace::VRController::get_nodeIdx() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_nodeIdx"));
}
// Autogenerated method: VRController.set_nodeIdx
void GlobalNamespace::VRController::set_nodeIdx(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_nodeIdx", value));
}
// Autogenerated method: VRController.get_position
UnityEngine::Vector3 GlobalNamespace::VRController::get_position() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_position"));
}
// Autogenerated method: VRController.get_rotation
UnityEngine::Quaternion GlobalNamespace::VRController::get_rotation() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Quaternion>(this, "get_rotation"));
}
// Autogenerated method: VRController.get_forward
UnityEngine::Vector3 GlobalNamespace::VRController::get_forward() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_forward"));
}
// Autogenerated method: VRController.get_triggerValue
float GlobalNamespace::VRController::get_triggerValue() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_triggerValue"));
}
// Autogenerated method: VRController.get_verticalAxisValue
float GlobalNamespace::VRController::get_verticalAxisValue() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_verticalAxisValue"));
}
// Autogenerated method: VRController.get_horizontalAxisValue
float GlobalNamespace::VRController::get_horizontalAxisValue() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_horizontalAxisValue"));
}
// Autogenerated method: VRController.get_active
bool GlobalNamespace::VRController::get_active() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_active"));
}
// Autogenerated method: VRController.Update
void GlobalNamespace::VRController::Update() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Update"));
}
// Autogenerated method: VRController..ctor
GlobalNamespace::VRController* GlobalNamespace::VRController::New_ctor() {
  return (VRController*)THROW_UNLESS(il2cpp_utils::New("", "VRController"));
}
