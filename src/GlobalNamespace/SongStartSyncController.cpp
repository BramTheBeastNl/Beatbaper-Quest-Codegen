// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongStartSyncController
#include "GlobalNamespace/SongStartSyncController.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: PlayersAtGameStartModel
#include "GlobalNamespace/PlayersAtGameStartModel.hpp"
// Including type: SongStartHandler
#include "GlobalNamespace/SongStartHandler.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kAudioLoadTimeoutForceStart
float GlobalNamespace::SongStartSyncController::_get_kAudioLoadTimeoutForceStart() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SongStartSyncController", "kAudioLoadTimeoutForceStart"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kAudioLoadTimeoutForceStart
void GlobalNamespace::SongStartSyncController::_set_kAudioLoadTimeoutForceStart(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongStartSyncController", "kAudioLoadTimeoutForceStart", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kAudioLoadTimeout
float GlobalNamespace::SongStartSyncController::_get_kAudioLoadTimeout() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SongStartSyncController", "kAudioLoadTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kAudioLoadTimeout
void GlobalNamespace::SongStartSyncController::_set_kAudioLoadTimeout(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongStartSyncController", "kAudioLoadTimeout", value));
}
// Autogenerated method: SongStartSyncController.get_isSongStarted
bool GlobalNamespace::SongStartSyncController::get_isSongStarted() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isSongStarted"));
}
// Autogenerated method: SongStartSyncController.get_songStartSyncTime
float GlobalNamespace::SongStartSyncController::get_songStartSyncTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_songStartSyncTime"));
}
// Autogenerated method: SongStartSyncController.add_syncStartFailedEvent
void GlobalNamespace::SongStartSyncController::add_syncStartFailedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_syncStartFailedEvent", value));
}
// Autogenerated method: SongStartSyncController.remove_syncStartFailedEvent
void GlobalNamespace::SongStartSyncController::remove_syncStartFailedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_syncStartFailedEvent", value));
}
// Autogenerated method: SongStartSyncController.add_syncStartSuccessEvent
void GlobalNamespace::SongStartSyncController::add_syncStartSuccessEvent(System::Action_1<float>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_syncStartSuccessEvent", value));
}
// Autogenerated method: SongStartSyncController.remove_syncStartSuccessEvent
void GlobalNamespace::SongStartSyncController::remove_syncStartSuccessEvent(System::Action_1<float>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_syncStartSuccessEvent", value));
}
// Autogenerated method: SongStartSyncController.add_syncResumeEvent
void GlobalNamespace::SongStartSyncController::add_syncResumeEvent(System::Action_1<float>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_syncResumeEvent", value));
}
// Autogenerated method: SongStartSyncController.remove_syncResumeEvent
void GlobalNamespace::SongStartSyncController::remove_syncResumeEvent(System::Action_1<float>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_syncResumeEvent", value));
}
// Autogenerated method: SongStartSyncController.Start
void GlobalNamespace::SongStartSyncController::Start() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Start"));
}
// Autogenerated method: SongStartSyncController.OnDestroy
void GlobalNamespace::SongStartSyncController::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: SongStartSyncController.Update
void GlobalNamespace::SongStartSyncController::Update() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Update"));
}
// Autogenerated method: SongStartSyncController.OnApplicationPause
void GlobalNamespace::SongStartSyncController::OnApplicationPause(bool pauseStatus) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnApplicationPause", pauseStatus));
}
// Autogenerated method: SongStartSyncController.StartSong
void GlobalNamespace::SongStartSyncController::StartSong() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "StartSong"));
}
// Autogenerated method: SongStartSyncController.HandleSetSongStartSyncTime
void GlobalNamespace::SongStartSyncController::HandleSetSongStartSyncTime(float songStartSyncTime) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleSetSongStartSyncTime", songStartSyncTime));
}
// Autogenerated method: SongStartSyncController..ctor
GlobalNamespace::SongStartSyncController* GlobalNamespace::SongStartSyncController::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<SongStartSyncController*>());
}
