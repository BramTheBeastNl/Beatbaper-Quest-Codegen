// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusConnectionManager/OculusConnection
#include "GlobalNamespace/OculusConnectionManager_OculusConnection.hpp"
// Including type: OculusConnectionManager/OculusConnection/<>c__DisplayClass15_0
#include "GlobalNamespace/OculusConnectionManager_OculusConnection_--c__DisplayClass15_0.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.DeliveryMethod
#include "LiteNetLib/DeliveryMethod.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusConnectionManager/OculusConnection.get_id
uint64_t GlobalNamespace::OculusConnectionManager::OculusConnection::get_id() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint64_t>(this, "get_id"));
}
// Autogenerated method: OculusConnectionManager/OculusConnection..ctor
GlobalNamespace::OculusConnectionManager::OculusConnection* GlobalNamespace::OculusConnectionManager::OculusConnection::New_ctor(uint64_t id, ::Il2CppString* userName, bool isConnectionOwner) {
  return THROW_UNLESS(il2cpp_utils::New<OculusConnectionManager::OculusConnection*>(id, userName, isConnectionOwner));
}
// Autogenerated method: OculusConnectionManager/OculusConnection.Ping
void GlobalNamespace::OculusConnectionManager::OculusConnection::Ping(System::Action_2<GlobalNamespace::OculusConnectionManager::OculusConnection*, float>* onPingResult) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Ping", onPingResult));
}
// Autogenerated method: OculusConnectionManager/OculusConnection.get_userId
::Il2CppString* GlobalNamespace::OculusConnectionManager::OculusConnection::get_userId() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_userId"));
}
// Autogenerated method: OculusConnectionManager/OculusConnection.get_userName
::Il2CppString* GlobalNamespace::OculusConnectionManager::OculusConnection::get_userName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_userName"));
}
// Autogenerated method: OculusConnectionManager/OculusConnection.get_isConnectionOwner
bool GlobalNamespace::OculusConnectionManager::OculusConnection::get_isConnectionOwner() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isConnectionOwner"));
}
// Autogenerated method: OculusConnectionManager/OculusConnection.Send
void GlobalNamespace::OculusConnectionManager::OculusConnection::Send(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Send", writer, deliveryMethod));
}
// Autogenerated method: OculusConnectionManager/OculusConnection.Disconnect
void GlobalNamespace::OculusConnectionManager::OculusConnection::Disconnect() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Disconnect"));
}
// Autogenerated method: OculusConnectionManager/OculusConnection.Equals
bool GlobalNamespace::OculusConnectionManager::OculusConnection::Equals(GlobalNamespace::OculusConnectionManager::OculusConnection* other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Equals", other));
}
// Autogenerated method: OculusConnectionManager/OculusConnection.Equals
bool GlobalNamespace::OculusConnectionManager::OculusConnection::Equals(::Il2CppObject* obj) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Equals", obj));
}
// Autogenerated method: OculusConnectionManager/OculusConnection.GetHashCode
int GlobalNamespace::OculusConnectionManager::OculusConnection::GetHashCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetHashCode"));
}
// Autogenerated method: OculusConnectionManager/OculusConnection.ToString
::Il2CppString* GlobalNamespace::OculusConnectionManager::OculusConnection::ToString() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "ToString"));
}
