// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRGrabber
#include "GlobalNamespace/OVRGrabber.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRGrabbable
#include "GlobalNamespace/OVRGrabbable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRGrabber.get_grabbedObject
GlobalNamespace::OVRGrabbable* GlobalNamespace::OVRGrabber::get_grabbedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRGrabber").WithContext("get_grabbedObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_grabbedObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRGrabbable*, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.ForceRelease
void GlobalNamespace::OVRGrabber::ForceRelease(GlobalNamespace::OVRGrabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRGrabber").WithContext("ForceRelease");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ForceRelease", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(grabbable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated method: OVRGrabber.Awake
void GlobalNamespace::OVRGrabber::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRGrabber").WithContext("Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.Start
void GlobalNamespace::OVRGrabber::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRGrabber").WithContext("Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.Update
void GlobalNamespace::OVRGrabber::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRGrabber").WithContext("Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.FixedUpdate
void GlobalNamespace::OVRGrabber::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRGrabber").WithContext("FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.OnUpdatedAnchors
void GlobalNamespace::OVRGrabber::OnUpdatedAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRGrabber").WithContext("OnUpdatedAnchors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnUpdatedAnchors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.OnDestroy
void GlobalNamespace::OVRGrabber::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRGrabber").WithContext("OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.OnTriggerEnter
void GlobalNamespace::OVRGrabber::OnTriggerEnter(UnityEngine::Collider* otherCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRGrabber").WithContext("OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(otherCollider)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, otherCollider);
}
// Autogenerated method: OVRGrabber.OnTriggerExit
void GlobalNamespace::OVRGrabber::OnTriggerExit(UnityEngine::Collider* otherCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRGrabber").WithContext("OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(otherCollider)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, otherCollider);
}
// Autogenerated method: OVRGrabber.CheckForGrabOrRelease
void GlobalNamespace::OVRGrabber::CheckForGrabOrRelease(float prevFlex) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRGrabber").WithContext("CheckForGrabOrRelease");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckForGrabOrRelease", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prevFlex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prevFlex);
}
// Autogenerated method: OVRGrabber.GrabBegin
void GlobalNamespace::OVRGrabber::GrabBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRGrabber").WithContext("GrabBegin");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GrabBegin", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.MoveGrabbedObject
void GlobalNamespace::OVRGrabber::MoveGrabbedObject(UnityEngine::Vector3 pos, UnityEngine::Quaternion rot, bool forceTeleport) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRGrabber").WithContext("MoveGrabbedObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveGrabbedObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pos, rot, forceTeleport)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos, rot, forceTeleport);
}
// Autogenerated method: OVRGrabber.GrabEnd
void GlobalNamespace::OVRGrabber::GrabEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRGrabber").WithContext("GrabEnd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GrabEnd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.GrabbableRelease
void GlobalNamespace::OVRGrabber::GrabbableRelease(UnityEngine::Vector3 linearVelocity, UnityEngine::Vector3 angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRGrabber").WithContext("GrabbableRelease");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GrabbableRelease", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(linearVelocity, angularVelocity)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, linearVelocity, angularVelocity);
}
// Autogenerated method: OVRGrabber.GrabVolumeEnable
void GlobalNamespace::OVRGrabber::GrabVolumeEnable(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRGrabber").WithContext("GrabVolumeEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GrabVolumeEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(enabled)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated method: OVRGrabber.OffhandGrabbed
void GlobalNamespace::OVRGrabber::OffhandGrabbed(GlobalNamespace::OVRGrabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRGrabber").WithContext("OffhandGrabbed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OffhandGrabbed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(grabbable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated method: OVRGrabber.SetPlayerIgnoreCollision
void GlobalNamespace::OVRGrabber::SetPlayerIgnoreCollision(UnityEngine::GameObject* grabbable, bool ignore) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRGrabber").WithContext("SetPlayerIgnoreCollision");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPlayerIgnoreCollision", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(grabbable, ignore)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, grabbable, ignore);
}
// Autogenerated method: OVRGrabber.<Awake>b__24_0
void GlobalNamespace::OVRGrabber::$Awake$b__24_0(GlobalNamespace::OVRCameraRig* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRGrabber").WithContext("<Awake>b__24_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__24_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(r))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, r);
}
