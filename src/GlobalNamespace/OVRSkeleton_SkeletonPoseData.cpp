// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSkeleton/SkeletonPoseData
#include "GlobalNamespace/OVRSkeleton_SkeletonPoseData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRSkeleton/SkeletonPoseData.get_RootPose
GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRSkeleton::SkeletonPoseData::get_RootPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SkeletonPoseData").WithContext("get_RootPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_RootPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Posef, false>(*this, ___internal__method);
}
// Autogenerated method: OVRSkeleton/SkeletonPoseData.set_RootPose
void GlobalNamespace::OVRSkeleton::SkeletonPoseData::set_RootPose(GlobalNamespace::OVRPlugin::Posef value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SkeletonPoseData").WithContext("set_RootPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_RootPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: OVRSkeleton/SkeletonPoseData.get_RootScale
float GlobalNamespace::OVRSkeleton::SkeletonPoseData::get_RootScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SkeletonPoseData").WithContext("get_RootScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_RootScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: OVRSkeleton/SkeletonPoseData.set_RootScale
void GlobalNamespace::OVRSkeleton::SkeletonPoseData::set_RootScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SkeletonPoseData").WithContext("set_RootScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_RootScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: OVRSkeleton/SkeletonPoseData.get_BoneRotations
::Array<GlobalNamespace::OVRPlugin::Quatf>* GlobalNamespace::OVRSkeleton::SkeletonPoseData::get_BoneRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SkeletonPoseData").WithContext("get_BoneRotations");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_BoneRotations", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::OVRPlugin::Quatf>*, false>(*this, ___internal__method);
}
// Autogenerated method: OVRSkeleton/SkeletonPoseData.set_BoneRotations
void GlobalNamespace::OVRSkeleton::SkeletonPoseData::set_BoneRotations(::Array<GlobalNamespace::OVRPlugin::Quatf>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SkeletonPoseData").WithContext("set_BoneRotations");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_BoneRotations", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: OVRSkeleton/SkeletonPoseData.get_IsDataValid
bool GlobalNamespace::OVRSkeleton::SkeletonPoseData::get_IsDataValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SkeletonPoseData").WithContext("get_IsDataValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_IsDataValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: OVRSkeleton/SkeletonPoseData.set_IsDataValid
void GlobalNamespace::OVRSkeleton::SkeletonPoseData::set_IsDataValid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SkeletonPoseData").WithContext("set_IsDataValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_IsDataValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: OVRSkeleton/SkeletonPoseData.get_IsDataHighConfidence
bool GlobalNamespace::OVRSkeleton::SkeletonPoseData::get_IsDataHighConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SkeletonPoseData").WithContext("get_IsDataHighConfidence");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_IsDataHighConfidence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: OVRSkeleton/SkeletonPoseData.set_IsDataHighConfidence
void GlobalNamespace::OVRSkeleton::SkeletonPoseData::set_IsDataHighConfidence(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SkeletonPoseData").WithContext("set_IsDataHighConfidence");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_IsDataHighConfidence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
