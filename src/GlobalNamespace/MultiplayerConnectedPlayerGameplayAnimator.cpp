// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerConnectedPlayerGameplayAnimator
#include "GlobalNamespace/MultiplayerConnectedPlayerGameplayAnimator.hpp"
// Including type: MultiplayerBigAvatarAnimator
#include "GlobalNamespace/MultiplayerBigAvatarAnimator.hpp"
// Including type: ScaleAnimator
#include "GlobalNamespace/ScaleAnimator.hpp"
// Including type: MultiplayerConnectedPlayerLevelFailController
#include "GlobalNamespace/MultiplayerConnectedPlayerLevelFailController.hpp"
// Including type: MultiplayerLayoutProvider
#include "GlobalNamespace/MultiplayerLayoutProvider.hpp"
// Including type: MultiplayerConnectedPlayerSpectatingSpot
#include "GlobalNamespace/MultiplayerConnectedPlayerSpectatingSpot.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerConnectedPlayerGameplayAnimator.TransitionIntoFailedState
void GlobalNamespace::MultiplayerConnectedPlayerGameplayAnimator::TransitionIntoFailedState() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "TransitionIntoFailedState"));
}
// Autogenerated method: MultiplayerConnectedPlayerGameplayAnimator.HandlePlayerDidFail
void GlobalNamespace::MultiplayerConnectedPlayerGameplayAnimator::HandlePlayerDidFail() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePlayerDidFail"));
}
// Autogenerated method: MultiplayerConnectedPlayerGameplayAnimator.HandleIsObservedChanged
void GlobalNamespace::MultiplayerConnectedPlayerGameplayAnimator::HandleIsObservedChanged(bool isObserved) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleIsObservedChanged", isObserved));
}
// Autogenerated method: MultiplayerConnectedPlayerGameplayAnimator.Start
void GlobalNamespace::MultiplayerConnectedPlayerGameplayAnimator::Start() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Start"));
}
// Autogenerated method: MultiplayerConnectedPlayerGameplayAnimator.OnDestroy
void GlobalNamespace::MultiplayerConnectedPlayerGameplayAnimator::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: MultiplayerConnectedPlayerGameplayAnimator.AnimateNewLeaderSelected
void GlobalNamespace::MultiplayerConnectedPlayerGameplayAnimator::AnimateNewLeaderSelected(bool isLeading) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AnimateNewLeaderSelected", isLeading));
}
// Autogenerated method: MultiplayerConnectedPlayerGameplayAnimator.HandleStateChanged
void GlobalNamespace::MultiplayerConnectedPlayerGameplayAnimator::HandleStateChanged(GlobalNamespace::MultiplayerController::State state) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleStateChanged", state));
}
// Autogenerated method: MultiplayerConnectedPlayerGameplayAnimator..ctor
GlobalNamespace::MultiplayerConnectedPlayerGameplayAnimator* GlobalNamespace::MultiplayerConnectedPlayerGameplayAnimator::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<MultiplayerConnectedPlayerGameplayAnimator*>());
}
