// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/TrackingOrigin
#include "GlobalNamespace/OVRPlugin_TrackingOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/TrackingOrigin EyeLevel
GlobalNamespace::OVRPlugin::TrackingOrigin GlobalNamespace::OVRPlugin::TrackingOrigin::_get_EyeLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TrackingOrigin").WithContext("_get_EyeLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::TrackingOrigin>("", "OVRPlugin/TrackingOrigin", "EyeLevel"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/TrackingOrigin EyeLevel
void GlobalNamespace::OVRPlugin::TrackingOrigin::_set_EyeLevel(GlobalNamespace::OVRPlugin::TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TrackingOrigin").WithContext("_set_EyeLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/TrackingOrigin", "EyeLevel", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/TrackingOrigin FloorLevel
GlobalNamespace::OVRPlugin::TrackingOrigin GlobalNamespace::OVRPlugin::TrackingOrigin::_get_FloorLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TrackingOrigin").WithContext("_get_FloorLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::TrackingOrigin>("", "OVRPlugin/TrackingOrigin", "FloorLevel"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/TrackingOrigin FloorLevel
void GlobalNamespace::OVRPlugin::TrackingOrigin::_set_FloorLevel(GlobalNamespace::OVRPlugin::TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TrackingOrigin").WithContext("_set_FloorLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/TrackingOrigin", "FloorLevel", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/TrackingOrigin Stage
GlobalNamespace::OVRPlugin::TrackingOrigin GlobalNamespace::OVRPlugin::TrackingOrigin::_get_Stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TrackingOrigin").WithContext("_get_Stage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::TrackingOrigin>("", "OVRPlugin/TrackingOrigin", "Stage"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/TrackingOrigin Stage
void GlobalNamespace::OVRPlugin::TrackingOrigin::_set_Stage(GlobalNamespace::OVRPlugin::TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TrackingOrigin").WithContext("_set_Stage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/TrackingOrigin", "Stage", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/TrackingOrigin Count
GlobalNamespace::OVRPlugin::TrackingOrigin GlobalNamespace::OVRPlugin::TrackingOrigin::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TrackingOrigin").WithContext("_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::TrackingOrigin>("", "OVRPlugin/TrackingOrigin", "Count"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/TrackingOrigin Count
void GlobalNamespace::OVRPlugin::TrackingOrigin::_set_Count(GlobalNamespace::OVRPlugin::TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TrackingOrigin").WithContext("_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/TrackingOrigin", "Count", value));
}
