// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_21_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_21_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/FixedFoveatedRenderingLevel
#include "GlobalNamespace/OVRPlugin_FixedFoveatedRenderingLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_21_0::_get_version() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_21_0").WithContext("_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_21_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_21_0::_set_version(System::Version* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_21_0").WithContext("_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_21_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetTiledMultiResSupported
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetTiledMultiResSupported(GlobalNamespace::OVRPlugin::Bool& foveationSupported) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_21_0").WithContext("ovrp_GetTiledMultiResSupported");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetTiledMultiResSupported", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(foveationSupported)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, foveationSupported);
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetTiledMultiResLevel
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetTiledMultiResLevel(GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel& level) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_21_0").WithContext("ovrp_GetTiledMultiResLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetTiledMultiResLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(level)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, level);
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_SetTiledMultiResLevel
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_SetTiledMultiResLevel(GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel level) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_21_0").WithContext("ovrp_SetTiledMultiResLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_SetTiledMultiResLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(level)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, level);
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetGPUUtilSupported
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetGPUUtilSupported(GlobalNamespace::OVRPlugin::Bool& gpuUtilSupported) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_21_0").WithContext("ovrp_GetGPUUtilSupported");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetGPUUtilSupported", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gpuUtilSupported)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gpuUtilSupported);
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetGPUUtilLevel
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetGPUUtilLevel(float& gpuUtil) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_21_0").WithContext("ovrp_GetGPUUtilLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetGPUUtilLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gpuUtil)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gpuUtil);
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetSystemDisplayFrequency2
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetSystemDisplayFrequency2(float& systemDisplayFrequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_21_0").WithContext("ovrp_GetSystemDisplayFrequency2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetSystemDisplayFrequency2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(systemDisplayFrequency)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, systemDisplayFrequency);
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetSystemDisplayAvailableFrequencies
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetSystemDisplayAvailableFrequencies(System::IntPtr systemDisplayAvailableFrequencies, int& numFrequencies) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_21_0").WithContext("ovrp_GetSystemDisplayAvailableFrequencies");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetSystemDisplayAvailableFrequencies", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(systemDisplayAvailableFrequencies, numFrequencies)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, systemDisplayAvailableFrequencies, numFrequencies);
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_SetSystemDisplayFrequency
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_SetSystemDisplayFrequency(float requestedFrequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_21_0").WithContext("ovrp_SetSystemDisplayFrequency");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_SetSystemDisplayFrequency", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(requestedFrequency)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, requestedFrequency);
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetAppAsymmetricFov
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetAppAsymmetricFov(GlobalNamespace::OVRPlugin::Bool& useAsymmetricFov) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_21_0").WithContext("ovrp_GetAppAsymmetricFov");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetAppAsymmetricFov", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(useAsymmetricFov)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, useAsymmetricFov);
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_21_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_21_0").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
