// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PerlinNoise
#include "GlobalNamespace/PerlinNoise.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD98EE8
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] permutation
::Array<int>* GlobalNamespace::PerlinNoise::_get_permutation() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("PerlinNoise").WithContext("_get_permutation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("", "PerlinNoise", "permutation"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] permutation
void GlobalNamespace::PerlinNoise::_set_permutation(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("PerlinNoise").WithContext("_set_permutation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PerlinNoise", "permutation", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD98EF8
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] p
::Array<int>* GlobalNamespace::PerlinNoise::_get_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("PerlinNoise").WithContext("_get_p");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("", "PerlinNoise", "p"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] p
void GlobalNamespace::PerlinNoise::_set_p(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("PerlinNoise").WithContext("_set_p");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PerlinNoise", "p", value));
}
// Autogenerated method: PerlinNoise..cctor
void GlobalNamespace::PerlinNoise::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("PerlinNoise").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PerlinNoise", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: PerlinNoise.OctavePerlin3D
float GlobalNamespace::PerlinNoise::OctavePerlin3D(float x, float y, float z, int octaves, float persistence, int repeat) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("PerlinNoise").WithContext("OctavePerlin3D");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PerlinNoise", "OctavePerlin3D", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y, z, octaves, persistence, repeat)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y, z, octaves, persistence, repeat);
}
// Autogenerated method: PerlinNoise.Perlin3D
float GlobalNamespace::PerlinNoise::Perlin3D(float x, float y, float z, int repeat) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("PerlinNoise").WithContext("Perlin3D");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PerlinNoise", "Perlin3D", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y, z, repeat)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y, z, repeat);
}
// Autogenerated method: PerlinNoise.Inc
int GlobalNamespace::PerlinNoise::Inc(int num, int repeat) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("PerlinNoise").WithContext("Inc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PerlinNoise", "Inc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(num, repeat)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, num, repeat);
}
// Autogenerated method: PerlinNoise.Grad3D
float GlobalNamespace::PerlinNoise::Grad3D(int hash, float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("PerlinNoise").WithContext("Grad3D");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PerlinNoise", "Grad3D", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hash, x, y, z)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hash, x, y, z);
}
// Autogenerated method: PerlinNoise.Fade
float GlobalNamespace::PerlinNoise::Fade(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("PerlinNoise").WithContext("Fade");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PerlinNoise", "Fade", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: PerlinNoise.Lerp
float GlobalNamespace::PerlinNoise::Lerp(float a, float b, float x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("PerlinNoise").WithContext("Lerp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "PerlinNoise", "Lerp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b, x)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, x);
}
