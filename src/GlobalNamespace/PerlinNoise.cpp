// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PerlinNoise
#include "GlobalNamespace/PerlinNoise.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] permutation
::Array<int>* GlobalNamespace::PerlinNoise::_get_permutation() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("", "PerlinNoise", "permutation"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] permutation
void GlobalNamespace::PerlinNoise::_set_permutation(::Array<int>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PerlinNoise", "permutation", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] p
::Array<int>* GlobalNamespace::PerlinNoise::_get_p() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("", "PerlinNoise", "p"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] p
void GlobalNamespace::PerlinNoise::_set_p(::Array<int>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PerlinNoise", "p", value));
}
// Autogenerated method: PerlinNoise..cctor
void GlobalNamespace::PerlinNoise::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "PerlinNoise", ".cctor"));
}
// Autogenerated method: PerlinNoise.OctavePerlin3D
float GlobalNamespace::PerlinNoise::OctavePerlin3D(float x, float y, float z, int octaves, float persistence, int repeat) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("", "PerlinNoise", "OctavePerlin3D", x, y, z, octaves, persistence, repeat));
}
// Autogenerated method: PerlinNoise.Perlin3D
float GlobalNamespace::PerlinNoise::Perlin3D(float x, float y, float z, int repeat) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("", "PerlinNoise", "Perlin3D", x, y, z, repeat));
}
// Autogenerated method: PerlinNoise.Inc
int GlobalNamespace::PerlinNoise::Inc(int num, int repeat) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("", "PerlinNoise", "Inc", num, repeat));
}
// Autogenerated method: PerlinNoise.Grad3D
float GlobalNamespace::PerlinNoise::Grad3D(int hash, float x, float y, float z) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("", "PerlinNoise", "Grad3D", hash, x, y, z));
}
// Autogenerated method: PerlinNoise.Fade
float GlobalNamespace::PerlinNoise::Fade(float t) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("", "PerlinNoise", "Fade", t));
}
// Autogenerated method: PerlinNoise.Lerp
float GlobalNamespace::PerlinNoise::Lerp(float a, float b, float x) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("", "PerlinNoise", "Lerp", a, b, x));
}
// Autogenerated method: PerlinNoise..ctor
GlobalNamespace::PerlinNoise* GlobalNamespace::PerlinNoise::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<PerlinNoise*>());
}
