// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerConditionalActiveByLayout
#include "GlobalNamespace/MultiplayerConditionalActiveByLayout.hpp"
// Including type: MultiplayerLayoutProvider
#include "GlobalNamespace/MultiplayerLayoutProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerConditionalActiveByLayout.Start
void GlobalNamespace::MultiplayerConditionalActiveByLayout::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerConditionalActiveByLayout").WithContext("Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Start", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerConditionalActiveByLayout.HandlePlayersLayoutWasCalculated
void GlobalNamespace::MultiplayerConditionalActiveByLayout::HandlePlayersLayoutWasCalculated(GlobalNamespace::MultiplayerPlayerLayout layout, int playersCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerConditionalActiveByLayout").WithContext("HandlePlayersLayoutWasCalculated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "HandlePlayersLayoutWasCalculated", {}, ::il2cpp_utils::ExtractTypes(layout, playersCount)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, layout, playersCount);
}
// Autogenerated method: MultiplayerConditionalActiveByLayout..ctor
GlobalNamespace::MultiplayerConditionalActiveByLayout* GlobalNamespace::MultiplayerConditionalActiveByLayout::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerConditionalActiveByLayout").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<MultiplayerConditionalActiveByLayout*>());
}
