// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerCenterResizeController
#include "GlobalNamespace/MultiplayerCenterResizeController.hpp"
// Including type: MultiplayerLayoutProvider
#include "GlobalNamespace/MultiplayerLayoutProvider.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MultiplayerPlayerLayout
#include "GlobalNamespace/MultiplayerPlayerLayout.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerCenterResizeController.add_edgeDistanceFromCenterWasCalculatedEvent
void GlobalNamespace::MultiplayerCenterResizeController::add_edgeDistanceFromCenterWasCalculatedEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerCenterResizeController").WithContext("add_edgeDistanceFromCenterWasCalculatedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_edgeDistanceFromCenterWasCalculatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerCenterResizeController.remove_edgeDistanceFromCenterWasCalculatedEvent
void GlobalNamespace::MultiplayerCenterResizeController::remove_edgeDistanceFromCenterWasCalculatedEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerCenterResizeController").WithContext("remove_edgeDistanceFromCenterWasCalculatedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_edgeDistanceFromCenterWasCalculatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerCenterResizeController.get_isEdgeDistanceFromCenterCalculated
bool GlobalNamespace::MultiplayerCenterResizeController::get_isEdgeDistanceFromCenterCalculated() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerCenterResizeController").WithContext("get_isEdgeDistanceFromCenterCalculated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isEdgeDistanceFromCenterCalculated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerCenterResizeController.set_isEdgeDistanceFromCenterCalculated
void GlobalNamespace::MultiplayerCenterResizeController::set_isEdgeDistanceFromCenterCalculated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerCenterResizeController").WithContext("set_isEdgeDistanceFromCenterCalculated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isEdgeDistanceFromCenterCalculated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerCenterResizeController.get_edgeDistanceFromCenter
float GlobalNamespace::MultiplayerCenterResizeController::get_edgeDistanceFromCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerCenterResizeController").WithContext("get_edgeDistanceFromCenter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_edgeDistanceFromCenter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerCenterResizeController.set_edgeDistanceFromCenter
void GlobalNamespace::MultiplayerCenterResizeController::set_edgeDistanceFromCenter(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerCenterResizeController").WithContext("set_edgeDistanceFromCenter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_edgeDistanceFromCenter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerCenterResizeController.Start
void GlobalNamespace::MultiplayerCenterResizeController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerCenterResizeController").WithContext("Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerCenterResizeController.OnDestroy
void GlobalNamespace::MultiplayerCenterResizeController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerCenterResizeController").WithContext("OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerCenterResizeController.HandlePlayersLayoutWasCalculated
void GlobalNamespace::MultiplayerCenterResizeController::HandlePlayersLayoutWasCalculated(GlobalNamespace::MultiplayerPlayerLayout layout, int numberOfPlayers) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerCenterResizeController").WithContext("HandlePlayersLayoutWasCalculated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandlePlayersLayoutWasCalculated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(layout, numberOfPlayers)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, layout, numberOfPlayers);
}
