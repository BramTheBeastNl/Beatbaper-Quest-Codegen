// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ThreadedOpenVrOpenVrHaptics
#include "GlobalNamespace/ThreadedOpenVrOpenVrHaptics.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ThreadedOpenVrOpenVrHaptics.UpdateHaptics
void GlobalNamespace::ThreadedOpenVrOpenVrHaptics::UpdateHaptics() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ThreadedOpenVrOpenVrHaptics").WithContext("UpdateHaptics");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "UpdateHaptics", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ThreadedOpenVrOpenVrHaptics.UpdateHandHaptics
void GlobalNamespace::ThreadedOpenVrOpenVrHaptics::UpdateHandHaptics(UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ThreadedOpenVrOpenVrHaptics").WithContext("UpdateHandHaptics");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "UpdateHandHaptics", {}, ::il2cpp_utils::ExtractTypes(node)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: ThreadedOpenVrOpenVrHaptics..ctor
GlobalNamespace::ThreadedOpenVrOpenVrHaptics* GlobalNamespace::ThreadedOpenVrOpenVrHaptics::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ThreadedOpenVrOpenVrHaptics").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<ThreadedOpenVrOpenVrHaptics*>());
}
// Autogenerated method: ThreadedOpenVrOpenVrHaptics.TriggerHapticPulse
void GlobalNamespace::ThreadedOpenVrOpenVrHaptics::TriggerHapticPulse(UnityEngine::XR::XRNode node, float duration, float strength, float frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ThreadedOpenVrOpenVrHaptics").WithContext("TriggerHapticPulse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "TriggerHapticPulse", {}, ::il2cpp_utils::ExtractTypes(node, duration, strength, frequency)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, node, duration, strength, frequency);
}
// Autogenerated method: ThreadedOpenVrOpenVrHaptics.Destroy
void GlobalNamespace::ThreadedOpenVrOpenVrHaptics::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ThreadedOpenVrOpenVrHaptics").WithContext("Destroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Destroy", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
