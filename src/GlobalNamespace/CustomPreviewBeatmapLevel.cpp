// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CustomPreviewBeatmapLevel
#include "GlobalNamespace/CustomPreviewBeatmapLevel.hpp"
// Including type: CustomPreviewBeatmapLevel/<GetPreviewAudioClipAsync>d__60
#include "GlobalNamespace/CustomPreviewBeatmapLevel_-GetPreviewAudioClipAsync-d__60.hpp"
// Including type: CustomPreviewBeatmapLevel/<GetCoverImageAsync>d__61
#include "GlobalNamespace/CustomPreviewBeatmapLevel_-GetCoverImageAsync-d__61.hpp"
// Including type: StandardLevelInfoSaveData
#include "GlobalNamespace/StandardLevelInfoSaveData.hpp"
// Including type: IAudioClipAsyncLoader
#include "GlobalNamespace/IAudioClipAsyncLoader.hpp"
// Including type: ISpriteAsyncLoader
#include "GlobalNamespace/ISpriteAsyncLoader.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CustomPreviewBeatmapLevel.get_audioClipAsyncLoader
GlobalNamespace::IAudioClipAsyncLoader* GlobalNamespace::CustomPreviewBeatmapLevel::get_audioClipAsyncLoader() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::IAudioClipAsyncLoader*>(this, "get_audioClipAsyncLoader"));
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_spriteAsyncLoader
GlobalNamespace::ISpriteAsyncLoader* GlobalNamespace::CustomPreviewBeatmapLevel::get_spriteAsyncLoader() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::ISpriteAsyncLoader*>(this, "get_spriteAsyncLoader"));
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_standardLevelInfoSaveData
GlobalNamespace::StandardLevelInfoSaveData* GlobalNamespace::CustomPreviewBeatmapLevel::get_standardLevelInfoSaveData() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::StandardLevelInfoSaveData*>(this, "get_standardLevelInfoSaveData"));
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_customLevelPath
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::get_customLevelPath() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_customLevelPath"));
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_defaultCoverImage
UnityEngine::Sprite* GlobalNamespace::CustomPreviewBeatmapLevel::get_defaultCoverImage() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Sprite*>(this, "get_defaultCoverImage"));
}
// Autogenerated method: CustomPreviewBeatmapLevel..ctor
GlobalNamespace::CustomPreviewBeatmapLevel* GlobalNamespace::CustomPreviewBeatmapLevel::New_ctor(UnityEngine::Sprite* defaultCoverImage, GlobalNamespace::StandardLevelInfoSaveData* standardLevelInfoSaveData, ::Il2CppString* customLevelPath, GlobalNamespace::IAudioClipAsyncLoader* audioClipAsyncLoader, GlobalNamespace::ISpriteAsyncLoader* spriteAsyncLoader, ::Il2CppString* levelID, ::Il2CppString* songName, ::Il2CppString* songSubName, ::Il2CppString* songAuthorName, ::Il2CppString* levelAuthorName, float beatsPerMinute, float songTimeOffset, float shuffle, float shufflePeriod, float previewStartTime, float previewDuration, GlobalNamespace::EnvironmentInfoSO* environmentInfo, GlobalNamespace::EnvironmentInfoSO* allDirectionsEnvironmentInfo, ::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* previewDifficultyBeatmapSets) {
  return THROW_UNLESS(il2cpp_utils::New<CustomPreviewBeatmapLevel*>(defaultCoverImage, standardLevelInfoSaveData, customLevelPath, audioClipAsyncLoader, spriteAsyncLoader, levelID, songName, songSubName, songAuthorName, levelAuthorName, beatsPerMinute, songTimeOffset, shuffle, shufflePeriod, previewStartTime, previewDuration, environmentInfo, allDirectionsEnvironmentInfo, previewDifficultyBeatmapSets));
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_levelID
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::get_levelID() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_levelID"));
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songName
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::get_songName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_songName"));
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songSubName
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::get_songSubName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_songSubName"));
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songAuthorName
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::get_songAuthorName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_songAuthorName"));
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_levelAuthorName
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::get_levelAuthorName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_levelAuthorName"));
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_beatsPerMinute
float GlobalNamespace::CustomPreviewBeatmapLevel::get_beatsPerMinute() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_beatsPerMinute"));
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songTimeOffset
float GlobalNamespace::CustomPreviewBeatmapLevel::get_songTimeOffset() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_songTimeOffset"));
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songDuration
float GlobalNamespace::CustomPreviewBeatmapLevel::get_songDuration() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_songDuration"));
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_shuffle
float GlobalNamespace::CustomPreviewBeatmapLevel::get_shuffle() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_shuffle"));
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_shufflePeriod
float GlobalNamespace::CustomPreviewBeatmapLevel::get_shufflePeriod() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_shufflePeriod"));
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_previewStartTime
float GlobalNamespace::CustomPreviewBeatmapLevel::get_previewStartTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_previewStartTime"));
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_previewDuration
float GlobalNamespace::CustomPreviewBeatmapLevel::get_previewDuration() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_previewDuration"));
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_environmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::CustomPreviewBeatmapLevel::get_environmentInfo() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::EnvironmentInfoSO*>(this, "get_environmentInfo"));
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_allDirectionsEnvironmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::CustomPreviewBeatmapLevel::get_allDirectionsEnvironmentInfo() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::EnvironmentInfoSO*>(this, "get_allDirectionsEnvironmentInfo"));
}
// Autogenerated method: CustomPreviewBeatmapLevel.GetPreviewAudioClipAsync
System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* GlobalNamespace::CustomPreviewBeatmapLevel::GetPreviewAudioClipAsync(System::Threading::CancellationToken cancellationToken) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>*>(this, "GetPreviewAudioClipAsync", cancellationToken));
}
// Autogenerated method: CustomPreviewBeatmapLevel.GetCoverImageAsync
System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* GlobalNamespace::CustomPreviewBeatmapLevel::GetCoverImageAsync(System::Threading::CancellationToken cancellationToken) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>*>(this, "GetCoverImageAsync", cancellationToken));
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_previewDifficultyBeatmapSets
::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::CustomPreviewBeatmapLevel::get_previewDifficultyBeatmapSets() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>*>(this, "get_previewDifficultyBeatmapSets"));
}
