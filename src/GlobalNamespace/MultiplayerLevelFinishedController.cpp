// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLevelFinishedController
#include "GlobalNamespace/MultiplayerLevelFinishedController.hpp"
// Including type: MultiplayerLevelFinishedController/<StartLevelFinished>d__20
#include "GlobalNamespace/MultiplayerLevelFinishedController_-StartLevelFinished-d__20.hpp"
// Including type: IMultiplayerLevelEndActionsPublisher
#include "GlobalNamespace/IMultiplayerLevelEndActionsPublisher.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayerNetworkFailReason
#include "GlobalNamespace/PlayerNetworkFailReason.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kMinSceneDuration
float GlobalNamespace::MultiplayerLevelFinishedController::_get_kMinSceneDuration() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MultiplayerLevelFinishedController", "kMinSceneDuration"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMinSceneDuration
void GlobalNamespace::MultiplayerLevelFinishedController::_set_kMinSceneDuration(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelFinishedController", "kMinSceneDuration", value));
}
// Autogenerated method: MultiplayerLevelFinishedController.add_allResultsCollectedEvent
void GlobalNamespace::MultiplayerLevelFinishedController::add_allResultsCollectedEvent(System::Action_2<GlobalNamespace::LevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_allResultsCollectedEvent", value));
}
// Autogenerated method: MultiplayerLevelFinishedController.remove_allResultsCollectedEvent
void GlobalNamespace::MultiplayerLevelFinishedController::remove_allResultsCollectedEvent(System::Action_2<GlobalNamespace::LevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_allResultsCollectedEvent", value));
}
// Autogenerated method: MultiplayerLevelFinishedController.get_gameResultsReady
bool GlobalNamespace::MultiplayerLevelFinishedController::get_gameResultsReady() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_gameResultsReady"));
}
// Autogenerated method: MultiplayerLevelFinishedController.get_otherPlayersCompletionResults
System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>* GlobalNamespace::MultiplayerLevelFinishedController::get_otherPlayersCompletionResults() {
  return THROW_UNLESS((il2cpp_utils::RunMethod<System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>*>(this, "get_otherPlayersCompletionResults")));
}
// Autogenerated method: MultiplayerLevelFinishedController.get_localPlayerResults
GlobalNamespace::LevelCompletionResults* GlobalNamespace::MultiplayerLevelFinishedController::get_localPlayerResults() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::LevelCompletionResults*>(this, "get_localPlayerResults"));
}
// Autogenerated method: MultiplayerLevelFinishedController.Start
void GlobalNamespace::MultiplayerLevelFinishedController::Start() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Start"));
}
// Autogenerated method: MultiplayerLevelFinishedController.OnDestroy
void GlobalNamespace::MultiplayerLevelFinishedController::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: MultiplayerLevelFinishedController.PlayerNetworkDidFail
void GlobalNamespace::MultiplayerLevelFinishedController::PlayerNetworkDidFail(GlobalNamespace::PlayerNetworkFailReason playerNetworkFailReason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PlayerNetworkDidFail", playerNetworkFailReason));
}
// Autogenerated method: MultiplayerLevelFinishedController.StartLevelFinished
System::Collections::IEnumerator* GlobalNamespace::MultiplayerLevelFinishedController::StartLevelFinished(GlobalNamespace::LevelCompletionResults* localPlayerResults) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::IEnumerator*>(this, "StartLevelFinished", localPlayerResults));
}
// Autogenerated method: MultiplayerLevelFinishedController.HandlePlayerDidFinish
void GlobalNamespace::MultiplayerLevelFinishedController::HandlePlayerDidFinish(GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePlayerDidFinish", levelCompletionResults));
}
// Autogenerated method: MultiplayerLevelFinishedController.HandlePlayerNetworkDidFailed
void GlobalNamespace::MultiplayerLevelFinishedController::HandlePlayerNetworkDidFailed(GlobalNamespace::PlayerNetworkFailReason playerNetworkFailReason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePlayerNetworkDidFailed", playerNetworkFailReason));
}
// Autogenerated method: MultiplayerLevelFinishedController.HandleRpcLevelFinished
void GlobalNamespace::MultiplayerLevelFinishedController::HandleRpcLevelFinished(::Il2CppString* userId, GlobalNamespace::LevelCompletionResults* results) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleRpcLevelFinished", userId, results));
}
// Autogenerated method: MultiplayerLevelFinishedController..ctor
GlobalNamespace::MultiplayerLevelFinishedController* GlobalNamespace::MultiplayerLevelFinishedController::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<MultiplayerLevelFinishedController*>());
}
