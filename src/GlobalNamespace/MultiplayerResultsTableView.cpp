// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerResultsTableView
#include "GlobalNamespace/MultiplayerResultsTableView.hpp"
// Including type: MultiplayerResultsTableView/Data
#include "GlobalNamespace/MultiplayerResultsTableView_Data.hpp"
// Including type: MultiplayerResultsTableView/<>c__DisplayClass31_0
#include "GlobalNamespace/MultiplayerResultsTableView_--c__DisplayClass31_0.hpp"
// Including type: MultiplayerResultsTableView/<>c__DisplayClass31_1
#include "GlobalNamespace/MultiplayerResultsTableView_--c__DisplayClass31_1.hpp"
// Including type: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__32
#include "GlobalNamespace/MultiplayerResultsTableView_-PlayRandomRowSlideInSound-d__32.hpp"
// Including type: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__33
#include "GlobalNamespace/MultiplayerResultsTableView_-PlayAvatarSlideInSound-d__33.hpp"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: MultiplayerResultsTableCell
#include "GlobalNamespace/MultiplayerResultsTableCell.hpp"
// Including type: MultiplayerOffsetPositionByLocalPlayerPosition
#include "GlobalNamespace/MultiplayerOffsetPositionByLocalPlayerPosition.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: Tweening.TweeningManager
#include "Tweening/TweeningManager.hpp"
// Including type: MultiplayerLayoutProvider
#include "GlobalNamespace/MultiplayerLayoutProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellIdentifier
::Il2CppString* GlobalNamespace::MultiplayerResultsTableView::_get_kCellIdentifier() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerResultsTableView", "kCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellIdentifier
void GlobalNamespace::MultiplayerResultsTableView::_set_kCellIdentifier(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerResultsTableView", "kCellIdentifier", value));
}
// Autogenerated method: MultiplayerResultsTableView.Awake
void GlobalNamespace::MultiplayerResultsTableView::Awake() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Awake"));
}
// Autogenerated method: MultiplayerResultsTableView.OnDestroy
void GlobalNamespace::MultiplayerResultsTableView::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: MultiplayerResultsTableView.SetData
void GlobalNamespace::MultiplayerResultsTableView::SetData(System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::MultiplayerResultsTableView::Data*>* dataList) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetData", dataList));
}
// Autogenerated method: MultiplayerResultsTableView.StartAnimation
float GlobalNamespace::MultiplayerResultsTableView::StartAnimation() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "StartAnimation"));
}
// Autogenerated method: MultiplayerResultsTableView.PlayRandomRowSlideInSound
System::Collections::IEnumerator* GlobalNamespace::MultiplayerResultsTableView::PlayRandomRowSlideInSound(float delay) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::IEnumerator*>(this, "PlayRandomRowSlideInSound", delay));
}
// Autogenerated method: MultiplayerResultsTableView.PlayAvatarSlideInSound
System::Collections::IEnumerator* GlobalNamespace::MultiplayerResultsTableView::PlayAvatarSlideInSound(float delay) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::IEnumerator*>(this, "PlayAvatarSlideInSound", delay));
}
// Autogenerated method: MultiplayerResultsTableView.<StartAnimation>b__31_1
void GlobalNamespace::MultiplayerResultsTableView::$StartAnimation$b__31_1() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<StartAnimation>b__31_1"));
}
// Autogenerated method: MultiplayerResultsTableView.<StartAnimation>b__31_4
void GlobalNamespace::MultiplayerResultsTableView::$StartAnimation$b__31_4() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<StartAnimation>b__31_4"));
}
// Autogenerated method: MultiplayerResultsTableView.<StartAnimation>b__31_5
void GlobalNamespace::MultiplayerResultsTableView::$StartAnimation$b__31_5(float val) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<StartAnimation>b__31_5", val));
}
// Autogenerated method: MultiplayerResultsTableView.CellSize
float GlobalNamespace::MultiplayerResultsTableView::CellSize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "CellSize"));
}
// Autogenerated method: MultiplayerResultsTableView.NumberOfCells
int GlobalNamespace::MultiplayerResultsTableView::NumberOfCells() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "NumberOfCells"));
}
// Autogenerated method: MultiplayerResultsTableView.CellForIdx
HMUI::TableCell* GlobalNamespace::MultiplayerResultsTableView::CellForIdx(HMUI::TableView* tableView, int idx) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<HMUI::TableCell*>(this, "CellForIdx", tableView, idx));
}
// Autogenerated method: MultiplayerResultsTableView..ctor
GlobalNamespace::MultiplayerResultsTableView* GlobalNamespace::MultiplayerResultsTableView::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<MultiplayerResultsTableView*>());
}
