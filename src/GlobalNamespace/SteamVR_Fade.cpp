// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamVR_Fade
#include "GlobalNamespace/SteamVR_Fade.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material fadeMaterial
UnityEngine::Material* GlobalNamespace::SteamVR_Fade::_get_fadeMaterial() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Fade").WithContext("_get_fadeMaterial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Material*>("", "SteamVR_Fade", "fadeMaterial"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material fadeMaterial
void GlobalNamespace::SteamVR_Fade::_set_fadeMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Fade").WithContext("_set_fadeMaterial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Fade", "fadeMaterial", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 fadeMaterialColorID
int GlobalNamespace::SteamVR_Fade::_get_fadeMaterialColorID() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Fade").WithContext("_get_fadeMaterialColorID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SteamVR_Fade", "fadeMaterialColorID"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 fadeMaterialColorID
void GlobalNamespace::SteamVR_Fade::_set_fadeMaterialColorID(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Fade").WithContext("_set_fadeMaterialColorID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Fade", "fadeMaterialColorID", value));
}
// Autogenerated method: SteamVR_Fade.Start
void GlobalNamespace::SteamVR_Fade::Start(UnityEngine::Color newColor, float duration, bool fadeOverlay) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Fade").WithContext("Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Fade", il2cpp_utils::NoArgClass<void>(), "Start", {}, ::il2cpp_utils::ExtractTypes(newColor, duration, fadeOverlay)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, newColor, duration, fadeOverlay);
}
// Autogenerated method: SteamVR_Fade.View
void GlobalNamespace::SteamVR_Fade::View(UnityEngine::Color newColor, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Fade").WithContext("View");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Fade", il2cpp_utils::NoArgClass<void>(), "View", {}, ::il2cpp_utils::ExtractTypes(newColor, duration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, newColor, duration);
}
// Autogenerated method: SteamVR_Fade.OnStartFade
void GlobalNamespace::SteamVR_Fade::OnStartFade(UnityEngine::Color newColor, float duration, bool fadeOverlay) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Fade").WithContext("OnStartFade");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnStartFade", {}, ::il2cpp_utils::ExtractTypes(newColor, duration, fadeOverlay)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newColor, duration, fadeOverlay);
}
// Autogenerated method: SteamVR_Fade.OnEnable
void GlobalNamespace::SteamVR_Fade::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Fade").WithContext("OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnEnable", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Fade.OnDisable
void GlobalNamespace::SteamVR_Fade::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Fade").WithContext("OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnDisable", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Fade.OnPostRender
void GlobalNamespace::SteamVR_Fade::OnPostRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Fade").WithContext("OnPostRender");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnPostRender", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Fade..ctor
GlobalNamespace::SteamVR_Fade* GlobalNamespace::SteamVR_Fade::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Fade").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<SteamVR_Fade*>());
}
// Autogenerated method: SteamVR_Fade..cctor
void GlobalNamespace::SteamVR_Fade::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Fade").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Fade", il2cpp_utils::NoArgClass<void>(), ".cctor", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
