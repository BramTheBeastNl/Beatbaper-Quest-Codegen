// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ColorExtensions
#include "GlobalNamespace/ColorExtensions.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorExtensions.SaturatedColor
UnityEngine::Color GlobalNamespace::ColorExtensions::SaturatedColor(UnityEngine::Color color, float saturation) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>("", "ColorExtensions", "SaturatedColor", color, saturation));
}
// Autogenerated method: ColorExtensions.ColorWithAlpha
UnityEngine::Color GlobalNamespace::ColorExtensions::ColorWithAlpha(UnityEngine::Color color, float alpha) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>("", "ColorExtensions", "ColorWithAlpha", color, alpha));
}
// Autogenerated method: ColorExtensions.ColorWithR
UnityEngine::Color GlobalNamespace::ColorExtensions::ColorWithR(UnityEngine::Color color, float r) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>("", "ColorExtensions", "ColorWithR", color, r));
}
// Autogenerated method: ColorExtensions.ColorWithG
UnityEngine::Color GlobalNamespace::ColorExtensions::ColorWithG(UnityEngine::Color color, float g) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>("", "ColorExtensions", "ColorWithG", color, g));
}
// Autogenerated method: ColorExtensions.ColorWithB
UnityEngine::Color GlobalNamespace::ColorExtensions::ColorWithB(UnityEngine::Color color, float b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>("", "ColorExtensions", "ColorWithB", color, b));
}
// Autogenerated method: ColorExtensions.ColorWithValue
UnityEngine::Color GlobalNamespace::ColorExtensions::ColorWithValue(UnityEngine::Color color, float value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>("", "ColorExtensions", "ColorWithValue", color, value));
}
