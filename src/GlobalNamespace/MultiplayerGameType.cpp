// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerGameType
#include "GlobalNamespace/MultiplayerGameType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerGameType None
GlobalNamespace::MultiplayerGameType GlobalNamespace::MultiplayerGameType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerGameType").WithContext("_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerGameType>("", "MultiplayerGameType", "None"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerGameType None
void GlobalNamespace::MultiplayerGameType::_set_None(GlobalNamespace::MultiplayerGameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerGameType").WithContext("_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerGameType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerGameType QuickPlay
GlobalNamespace::MultiplayerGameType GlobalNamespace::MultiplayerGameType::_get_QuickPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerGameType").WithContext("_get_QuickPlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerGameType>("", "MultiplayerGameType", "QuickPlay"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerGameType QuickPlay
void GlobalNamespace::MultiplayerGameType::_set_QuickPlay(GlobalNamespace::MultiplayerGameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerGameType").WithContext("_set_QuickPlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerGameType", "QuickPlay", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerGameType Private
GlobalNamespace::MultiplayerGameType GlobalNamespace::MultiplayerGameType::_get_Private() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerGameType").WithContext("_get_Private");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerGameType>("", "MultiplayerGameType", "Private"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerGameType Private
void GlobalNamespace::MultiplayerGameType::_set_Private(GlobalNamespace::MultiplayerGameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerGameType").WithContext("_set_Private");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerGameType", "Private", value));
}
