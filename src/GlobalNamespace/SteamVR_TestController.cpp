// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamVR_TestController
#include "GlobalNamespace/SteamVR_TestController.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Valve.VR.EVRButtonId
#include "Valve/VR/EVRButtonId.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamVR_TestController.OnDeviceConnected
void GlobalNamespace::SteamVR_TestController::OnDeviceConnected(int index, bool connected) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDeviceConnected", index, connected));
}
// Autogenerated method: SteamVR_TestController.OnEnable
void GlobalNamespace::SteamVR_TestController::OnEnable() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnEnable"));
}
// Autogenerated method: SteamVR_TestController.OnDisable
void GlobalNamespace::SteamVR_TestController::OnDisable() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDisable"));
}
// Autogenerated method: SteamVR_TestController.PrintControllerStatus
void GlobalNamespace::SteamVR_TestController::PrintControllerStatus(int index) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PrintControllerStatus", index));
}
// Autogenerated method: SteamVR_TestController.Update
void GlobalNamespace::SteamVR_TestController::Update() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Update"));
}
// Autogenerated method: SteamVR_TestController..ctor
GlobalNamespace::SteamVR_TestController* GlobalNamespace::SteamVR_TestController::New_ctor() {
  return (SteamVR_TestController*)THROW_UNLESS(il2cpp_utils::New("", "SteamVR_TestController"));
}
