// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapCharacteristicSegmentedControlController
#include "GlobalNamespace\BeatmapCharacteristicSegmentedControlController.hpp"
// Including type: BeatmapCharacteristicSegmentedControlController/<>c
#include "GlobalNamespace\BeatmapCharacteristicSegmentedControlController_--c.hpp"
// Including type: HMUI.IconSegmentedControl
#include "HMUI\IconSegmentedControl.hpp"
// Including type: System.Action`2
#include "System\Action_2.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace\BeatmapCharacteristicSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System\Collections\Generic\List_1.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace\IDifficultyBeatmapSet.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI\SegmentedControl.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.add_didSelectBeatmapCharacteristicEvent
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::add_didSelectBeatmapCharacteristicEvent(System::Action_2<GlobalNamespace::BeatmapCharacteristicSegmentedControlController*, GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_didSelectBeatmapCharacteristicEvent", value));
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.remove_didSelectBeatmapCharacteristicEvent
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::remove_didSelectBeatmapCharacteristicEvent(System::Action_2<GlobalNamespace::BeatmapCharacteristicSegmentedControlController*, GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_didSelectBeatmapCharacteristicEvent", value));
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.get_selectedBeatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::BeatmapCharacteristicSegmentedControlController::get_selectedBeatmapCharacteristic() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::BeatmapCharacteristicSO*>(this, "get_selectedBeatmapCharacteristic"));
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.Awake
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::Awake() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Awake"));
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.OnDestroy
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.SetData
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::SetData(::Array<GlobalNamespace::IDifficultyBeatmapSet*>* difficultyBeatmapSets, GlobalNamespace::BeatmapCharacteristicSO* selectedBeatmapCharacteristic) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetData", difficultyBeatmapSets, selectedBeatmapCharacteristic));
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController.HandleDifficultySegmentedControlDidSelectCell
void GlobalNamespace::BeatmapCharacteristicSegmentedControlController::HandleDifficultySegmentedControlDidSelectCell(HMUI::SegmentedControl* segmentedControl, int cellIdx) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleDifficultySegmentedControlDidSelectCell", segmentedControl, cellIdx));
}
// Autogenerated method: BeatmapCharacteristicSegmentedControlController..ctor
GlobalNamespace::BeatmapCharacteristicSegmentedControlController* GlobalNamespace::BeatmapCharacteristicSegmentedControlController::New_ctor() {
  return (BeatmapCharacteristicSegmentedControlController*)THROW_UNLESS(il2cpp_utils::New("", "BeatmapCharacteristicSegmentedControlController"));
}
