// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelGameplayManager
#include "GlobalNamespace\StandardLevelGameplayManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System\Collections\IEnumerator.hpp"
// Including type: StandardLevelGameplayManager/<Start>d__13
#include "GlobalNamespace\StandardLevelGameplayManager_-Start-d__13.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace\GameScenesManager.hpp"
// Including type: GameSongController
#include "GlobalNamespace\GameSongController.hpp"
// Including type: GameEnergyCounter
#include "GlobalNamespace\GameEnergyCounter.hpp"
// Including type: PauseController
#include "GlobalNamespace\PauseController.hpp"
// Including type: System.Action
#include "System\Action.hpp"
// Including type: System.Action`1
#include "System\Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelGameplayManager.Awake
void GlobalNamespace::StandardLevelGameplayManager::Awake() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Awake"));
}
// Autogenerated method: StandardLevelGameplayManager.Start
System::Collections::IEnumerator* GlobalNamespace::StandardLevelGameplayManager::Start() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::IEnumerator*>(this, "Start"));
}
// Autogenerated method: StandardLevelGameplayManager.OnDestroy
void GlobalNamespace::StandardLevelGameplayManager::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: StandardLevelGameplayManager.HandleGameEnergyDidReach0
void GlobalNamespace::StandardLevelGameplayManager::HandleGameEnergyDidReach0() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleGameEnergyDidReach0"));
}
// Autogenerated method: StandardLevelGameplayManager.HandleSongDidFinish
void GlobalNamespace::StandardLevelGameplayManager::HandleSongDidFinish() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleSongDidFinish"));
}
// Autogenerated method: StandardLevelGameplayManager.HandlePauseControllerCanPause
void GlobalNamespace::StandardLevelGameplayManager::HandlePauseControllerCanPause(System::Action_1<bool>* canPause) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePauseControllerCanPause", canPause));
}
// Autogenerated method: StandardLevelGameplayManager.HandlePauseControllerDidPause
void GlobalNamespace::StandardLevelGameplayManager::HandlePauseControllerDidPause() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePauseControllerDidPause"));
}
// Autogenerated method: StandardLevelGameplayManager.HandlePauseControllerDidResume
void GlobalNamespace::StandardLevelGameplayManager::HandlePauseControllerDidResume() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePauseControllerDidResume"));
}
// Autogenerated method: StandardLevelGameplayManager.add_levelFailedEvent
void GlobalNamespace::StandardLevelGameplayManager::add_levelFailedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_levelFailedEvent", value));
}
// Autogenerated method: StandardLevelGameplayManager.remove_levelFailedEvent
void GlobalNamespace::StandardLevelGameplayManager::remove_levelFailedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_levelFailedEvent", value));
}
// Autogenerated method: StandardLevelGameplayManager.add_levelFinishedEvent
void GlobalNamespace::StandardLevelGameplayManager::add_levelFinishedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_levelFinishedEvent", value));
}
// Autogenerated method: StandardLevelGameplayManager.remove_levelFinishedEvent
void GlobalNamespace::StandardLevelGameplayManager::remove_levelFinishedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_levelFinishedEvent", value));
}
// Autogenerated method: StandardLevelGameplayManager..ctor
GlobalNamespace::StandardLevelGameplayManager* GlobalNamespace::StandardLevelGameplayManager::New_ctor() {
  return (StandardLevelGameplayManager*)THROW_UNLESS(il2cpp_utils::New("", "StandardLevelGameplayManager"));
}
