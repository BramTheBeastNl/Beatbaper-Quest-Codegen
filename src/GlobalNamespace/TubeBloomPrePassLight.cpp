// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: ParametricBoxController
#include "GlobalNamespace/ParametricBoxController.hpp"
// Including type: Parametric3SliceSpriteController
#include "GlobalNamespace/Parametric3SliceSpriteController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TubeBloomPrePassLight.set_color
void GlobalNamespace::TubeBloomPrePassLight::set_color(UnityEngine::Color value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_color", value));
}
// Autogenerated method: TubeBloomPrePassLight.get_color
UnityEngine::Color GlobalNamespace::TubeBloomPrePassLight::get_color() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>(this, "get_color"));
}
// Autogenerated method: TubeBloomPrePassLight.Awake
void GlobalNamespace::TubeBloomPrePassLight::Awake() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Awake"));
}
// Autogenerated method: TubeBloomPrePassLight.Refresh
void GlobalNamespace::TubeBloomPrePassLight::Refresh() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Refresh"));
}
// Autogenerated method: TubeBloomPrePassLight.ClipPoints
void GlobalNamespace::TubeBloomPrePassLight::ClipPoints(UnityEngine::Vector4& fromPointClipPos, UnityEngine::Vector4& toPointClipPos, UnityEngine::Vector3& fromPointViewPos, UnityEngine::Vector3& toPointViewPos, bool fromPointInside, float t) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClipPoints", fromPointClipPos, toPointClipPos, fromPointViewPos, toPointViewPos, fromPointInside, t));
}
// Autogenerated method: TubeBloomPrePassLight.OnDrawGizmos
void GlobalNamespace::TubeBloomPrePassLight::OnDrawGizmos() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDrawGizmos"));
}
// Autogenerated method: TubeBloomPrePassLight.NoDomainReloadInit
void GlobalNamespace::TubeBloomPrePassLight::NoDomainReloadInit() {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "TubeBloomPrePassLight", "NoDomainReloadInit"));
}
// Autogenerated method: TubeBloomPrePassLight.OnEnable
void GlobalNamespace::TubeBloomPrePassLight::OnEnable() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnEnable"));
}
// Autogenerated method: TubeBloomPrePassLight.FillMeshData
void GlobalNamespace::TubeBloomPrePassLight::FillMeshData(int lightNum, ::Array<UnityEngine::Vector3>* vertices, ::Array<UnityEngine::Color>* colors, ::Array<UnityEngine::Vector4>* viewPos, UnityEngine::Matrix4x4 viewMatrix, UnityEngine::Matrix4x4 projectionMatrix, float lineWidth) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "FillMeshData", lightNum, vertices, colors, viewPos, viewMatrix, projectionMatrix, lineWidth));
}
// Autogenerated method: TubeBloomPrePassLight..ctor
GlobalNamespace::TubeBloomPrePassLight* GlobalNamespace::TubeBloomPrePassLight::New_ctor() {
  return (TubeBloomPrePassLight*)THROW_UNLESS(il2cpp_utils::New("", "TubeBloomPrePassLight"));
}
