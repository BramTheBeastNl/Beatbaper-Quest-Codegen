// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObstacleType
#include "GlobalNamespace/ObstacleType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ObstacleType FullHeight
GlobalNamespace::ObstacleType GlobalNamespace::ObstacleType::_get_FullHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleType").WithContext("_get_FullHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::ObstacleType>("", "ObstacleType", "FullHeight"));
}
// Autogenerated static field setter
// Set static field: static public ObstacleType FullHeight
void GlobalNamespace::ObstacleType::_set_FullHeight(GlobalNamespace::ObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleType").WithContext("_set_FullHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObstacleType", "FullHeight", value));
}
// Autogenerated static field getter
// Get static field: static public ObstacleType Top
GlobalNamespace::ObstacleType GlobalNamespace::ObstacleType::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleType").WithContext("_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::ObstacleType>("", "ObstacleType", "Top"));
}
// Autogenerated static field setter
// Set static field: static public ObstacleType Top
void GlobalNamespace::ObstacleType::_set_Top(GlobalNamespace::ObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleType").WithContext("_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObstacleType", "Top", value));
}
