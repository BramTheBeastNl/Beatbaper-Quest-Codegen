// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LineLight
#include "GlobalNamespace/LineLight.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<LineLight> _lineLights
System::Collections::Generic::List_1<GlobalNamespace::LineLight*>* GlobalNamespace::LineLight::_get__lineLights() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LineLight").WithContext("_get__lineLights");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::LineLight*>*>("", "LineLight", "_lineLights"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<LineLight> _lineLights
void GlobalNamespace::LineLight::_set__lineLights(System::Collections::Generic::List_1<GlobalNamespace::LineLight*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LineLight").WithContext("_set__lineLights");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LineLight", "_lineLights", value));
}
// Autogenerated method: LineLight.get_p0
UnityEngine::Vector3 GlobalNamespace::LineLight::get_p0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LineLight").WithContext("get_p0");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Vector3>(), "get_p0", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: LineLight.get_p1
UnityEngine::Vector3 GlobalNamespace::LineLight::get_p1() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LineLight").WithContext("get_p1");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Vector3>(), "get_p1", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: LineLight.get_color
UnityEngine::Color GlobalNamespace::LineLight::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LineLight").WithContext("get_color");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Color>(), "get_color", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: LineLight.get_lineLights
System::Collections::Generic::List_1<GlobalNamespace::LineLight*>* GlobalNamespace::LineLight::get_lineLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LineLight").WithContext("get_lineLights");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "LineLight", il2cpp_utils::NoArgClass<System::Collections::Generic::List_1<GlobalNamespace::LineLight*>*>(), "get_lineLights", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::LineLight*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: LineLight.NoDomainReloadInit
void GlobalNamespace::LineLight::NoDomainReloadInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LineLight").WithContext("NoDomainReloadInit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "LineLight", il2cpp_utils::NoArgClass<void>(), "NoDomainReloadInit", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: LineLight.OnEnable
void GlobalNamespace::LineLight::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LineLight").WithContext("OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnEnable", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LineLight.OnDisable
void GlobalNamespace::LineLight::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LineLight").WithContext("OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnDisable", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LineLight.OnDrawGizmos
void GlobalNamespace::LineLight::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LineLight").WithContext("OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnDrawGizmos", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LineLight..ctor
GlobalNamespace::LineLight* GlobalNamespace::LineLight::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LineLight").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<LineLight*>());
}
// Autogenerated method: LineLight..cctor
void GlobalNamespace::LineLight::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LineLight").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "LineLight", il2cpp_utils::NoArgClass<void>(), ".cctor", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
