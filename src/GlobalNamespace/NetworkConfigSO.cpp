// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkConfigSO
#include "GlobalNamespace/NetworkConfigSO.hpp"
// Including type: MasterServerEndPoint
#include "GlobalNamespace/MasterServerEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetworkConfigSO.get_maxPartySize
int GlobalNamespace::NetworkConfigSO::get_maxPartySize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_maxPartySize"));
}
// Autogenerated method: NetworkConfigSO.get_discoveryPort
int GlobalNamespace::NetworkConfigSO::get_discoveryPort() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_discoveryPort"));
}
// Autogenerated method: NetworkConfigSO.get_partyPort
int GlobalNamespace::NetworkConfigSO::get_partyPort() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_partyPort"));
}
// Autogenerated method: NetworkConfigSO.get_multiplayerPort
int GlobalNamespace::NetworkConfigSO::get_multiplayerPort() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_multiplayerPort"));
}
// Autogenerated method: NetworkConfigSO.get_masterServerEndPoint
GlobalNamespace::MasterServerEndPoint* GlobalNamespace::NetworkConfigSO::get_masterServerEndPoint() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::MasterServerEndPoint*>(this, "get_masterServerEndPoint"));
}
// Autogenerated method: NetworkConfigSO.get_masterServerStatusUrl
::Il2CppString* GlobalNamespace::NetworkConfigSO::get_masterServerStatusUrl() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_masterServerStatusUrl"));
}
// Autogenerated method: NetworkConfigSO..ctor
GlobalNamespace::NetworkConfigSO* GlobalNamespace::NetworkConfigSO::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<NetworkConfigSO*>());
}
