// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerPlayerPlacement
#include "GlobalNamespace/MultiplayerPlayerPlacement.hpp"
// Including type: MultiplayerPlayerPlacement/<>c
#include "GlobalNamespace/MultiplayerPlayerPlacement_--c.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: MultiplayerPlayerLayout
#include "GlobalNamespace/MultiplayerPlayerLayout.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerPlayerPlacement.GetPlayerWorldPosition
UnityEngine::Vector3 GlobalNamespace::MultiplayerPlayerPlacement::GetPlayerWorldPosition(float outerCircleRadius, float outerCirclePositionAngle, GlobalNamespace::MultiplayerPlayerLayout layout) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerPlayerPlacement").WithContext("GetPlayerWorldPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MultiplayerPlayerPlacement", il2cpp_utils::NoArgClass<UnityEngine::Vector3>(), "GetPlayerWorldPosition", {}, ::il2cpp_utils::ExtractTypes(outerCircleRadius, outerCirclePositionAngle, layout)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, outerCircleRadius, outerCirclePositionAngle, layout);
}
// Autogenerated method: MultiplayerPlayerPlacement.GetOuterCirclePositionAngleForPlayer
float GlobalNamespace::MultiplayerPlayerPlacement::GetOuterCirclePositionAngleForPlayer(int playerIndex, int localPlayerIndex, float angleBetweenPlayers) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerPlayerPlacement").WithContext("GetOuterCirclePositionAngleForPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MultiplayerPlayerPlacement", il2cpp_utils::NoArgClass<float>(), "GetOuterCirclePositionAngleForPlayer", {}, ::il2cpp_utils::ExtractTypes(playerIndex, localPlayerIndex, angleBetweenPlayers)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, playerIndex, localPlayerIndex, angleBetweenPlayers);
}
// Autogenerated method: MultiplayerPlayerPlacement.GetOuterCircleRadius
float GlobalNamespace::MultiplayerPlayerPlacement::GetOuterCircleRadius(float angleBetweenPlayers, float innerCircleRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerPlayerPlacement").WithContext("GetOuterCircleRadius");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MultiplayerPlayerPlacement", il2cpp_utils::NoArgClass<float>(), "GetOuterCircleRadius", {}, ::il2cpp_utils::ExtractTypes(angleBetweenPlayers, innerCircleRadius)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, angleBetweenPlayers, innerCircleRadius);
}
// Autogenerated method: MultiplayerPlayerPlacement.GetAngleBetweenPlayersWithEvenAdjustment
float GlobalNamespace::MultiplayerPlayerPlacement::GetAngleBetweenPlayersWithEvenAdjustment(int numberOfPlayers, GlobalNamespace::MultiplayerPlayerLayout layout) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerPlayerPlacement").WithContext("GetAngleBetweenPlayersWithEvenAdjustment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MultiplayerPlayerPlacement", il2cpp_utils::NoArgClass<float>(), "GetAngleBetweenPlayersWithEvenAdjustment", {}, ::il2cpp_utils::ExtractTypes(numberOfPlayers, layout)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, numberOfPlayers, layout);
}
// Autogenerated method: MultiplayerPlayerPlacement.SortPlayers
void GlobalNamespace::MultiplayerPlayerPlacement::SortPlayers(System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>* players) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerPlayerPlacement").WithContext("SortPlayers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MultiplayerPlayerPlacement", il2cpp_utils::NoArgClass<void>(), "SortPlayers", {}, ::il2cpp_utils::ExtractTypes(players)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, players);
}
// Autogenerated method: MultiplayerPlayerPlacement.GetLocalPlayerIndex
int GlobalNamespace::MultiplayerPlayerPlacement::GetLocalPlayerIndex(System::Collections::Generic::IList_1<GlobalNamespace::IConnectedPlayer*>* otherPlayers, GlobalNamespace::IConnectedPlayer* localPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerPlayerPlacement").WithContext("GetLocalPlayerIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MultiplayerPlayerPlacement", il2cpp_utils::NoArgClass<int>(), "GetLocalPlayerIndex", {}, ::il2cpp_utils::ExtractTypes(otherPlayers, localPlayer)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, otherPlayers, localPlayer);
}
