// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CutScoreBuffer
#include "GlobalNamespace/CutScoreBuffer.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: ISaberSwingRatingCounter
#include "GlobalNamespace/ISaberSwingRatingCounter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CutScoreBuffer.get_scoreWithMultiplier
int GlobalNamespace::CutScoreBuffer::get_scoreWithMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("CutScoreBuffer").WithContext("get_scoreWithMultiplier");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "get_scoreWithMultiplier", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CutScoreBuffer.get_multiplier
int GlobalNamespace::CutScoreBuffer::get_multiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("CutScoreBuffer").WithContext("get_multiplier");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "get_multiplier", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CutScoreBuffer..ctor
GlobalNamespace::CutScoreBuffer* GlobalNamespace::CutScoreBuffer::New_ctor(GlobalNamespace::NoteCutInfo* noteCutInfo, int multiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("CutScoreBuffer").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<CutScoreBuffer*>(noteCutInfo, multiplier));
}
// Autogenerated method: CutScoreBuffer.HandleSwingRatingCounterDidChangeEvent
void GlobalNamespace::CutScoreBuffer::HandleSwingRatingCounterDidChangeEvent(GlobalNamespace::ISaberSwingRatingCounter* swingRatingCounter, float rating) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("CutScoreBuffer").WithContext("HandleSwingRatingCounterDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "HandleSwingRatingCounterDidChangeEvent", {}, ::il2cpp_utils::ExtractTypes(swingRatingCounter, rating)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, swingRatingCounter, rating);
}
// Autogenerated method: CutScoreBuffer.RefreshScores
void GlobalNamespace::CutScoreBuffer::RefreshScores() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("CutScoreBuffer").WithContext("RefreshScores");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "RefreshScores", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CutScoreBuffer.HandleSwingRatingCounterDidFinishEvent
void GlobalNamespace::CutScoreBuffer::HandleSwingRatingCounterDidFinishEvent(GlobalNamespace::ISaberSwingRatingCounter* swingRatingCounter) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("CutScoreBuffer").WithContext("HandleSwingRatingCounterDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "HandleSwingRatingCounterDidFinishEvent", {}, ::il2cpp_utils::ExtractTypes(swingRatingCounter)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, swingRatingCounter);
}
