// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamVR_Camera
#include "GlobalNamespace\SteamVR_Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine\Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine\Camera.hpp"
// Including type: System.Collections.Hashtable
#include "System\Collections\Hashtable.hpp"
// Including type: System.String
#include "System\String.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine\Ray.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable values
System::Collections::Hashtable* GlobalNamespace::SteamVR_Camera::_get_values() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("", "SteamVR_Camera", "values"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable values
void GlobalNamespace::SteamVR_Camera::_set_values(System::Collections::Hashtable* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Camera", "values", value));
}
// Autogenerated static field getter
// Get static field: static private System.String eyeSuffix
::Il2CppString* GlobalNamespace::SteamVR_Camera::_get_eyeSuffix() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "SteamVR_Camera", "eyeSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String eyeSuffix
void GlobalNamespace::SteamVR_Camera::_set_eyeSuffix(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Camera", "eyeSuffix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String earsSuffix
::Il2CppString* GlobalNamespace::SteamVR_Camera::_get_earsSuffix() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "SteamVR_Camera", "earsSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String earsSuffix
void GlobalNamespace::SteamVR_Camera::_set_earsSuffix(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Camera", "earsSuffix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String headSuffix
::Il2CppString* GlobalNamespace::SteamVR_Camera::_get_headSuffix() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "SteamVR_Camera", "headSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String headSuffix
void GlobalNamespace::SteamVR_Camera::_set_headSuffix(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Camera", "headSuffix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String originSuffix
::Il2CppString* GlobalNamespace::SteamVR_Camera::_get_originSuffix() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "SteamVR_Camera", "originSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String originSuffix
void GlobalNamespace::SteamVR_Camera::_set_originSuffix(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Camera", "originSuffix", value));
}
// Autogenerated method: SteamVR_Camera.get_head
UnityEngine::Transform* GlobalNamespace::SteamVR_Camera::get_head() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Transform*>(this, "get_head"));
}
// Autogenerated method: SteamVR_Camera.get_offset
UnityEngine::Transform* GlobalNamespace::SteamVR_Camera::get_offset() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Transform*>(this, "get_offset"));
}
// Autogenerated method: SteamVR_Camera.get_origin
UnityEngine::Transform* GlobalNamespace::SteamVR_Camera::get_origin() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Transform*>(this, "get_origin"));
}
// Autogenerated method: SteamVR_Camera.get_camera
UnityEngine::Camera* GlobalNamespace::SteamVR_Camera::get_camera() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Camera*>(this, "get_camera"));
}
// Autogenerated method: SteamVR_Camera.set_camera
void GlobalNamespace::SteamVR_Camera::set_camera(UnityEngine::Camera* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_camera", value));
}
// Autogenerated method: SteamVR_Camera.get_ears
UnityEngine::Transform* GlobalNamespace::SteamVR_Camera::get_ears() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Transform*>(this, "get_ears"));
}
// Autogenerated method: SteamVR_Camera.GetRay
UnityEngine::Ray GlobalNamespace::SteamVR_Camera::GetRay() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Ray>(this, "GetRay"));
}
// Autogenerated method: SteamVR_Camera.get_sceneResolutionScale
float GlobalNamespace::SteamVR_Camera::get_sceneResolutionScale() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("", "SteamVR_Camera", "get_sceneResolutionScale"));
}
// Autogenerated method: SteamVR_Camera.set_sceneResolutionScale
void GlobalNamespace::SteamVR_Camera::set_sceneResolutionScale(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "SteamVR_Camera", "set_sceneResolutionScale", value));
}
// Autogenerated method: SteamVR_Camera.OnDisable
void GlobalNamespace::SteamVR_Camera::OnDisable() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDisable"));
}
// Autogenerated method: SteamVR_Camera.OnEnable
void GlobalNamespace::SteamVR_Camera::OnEnable() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnEnable"));
}
// Autogenerated method: SteamVR_Camera.Awake
void GlobalNamespace::SteamVR_Camera::Awake() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Awake"));
}
// Autogenerated method: SteamVR_Camera.ForceLast
void GlobalNamespace::SteamVR_Camera::ForceLast() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ForceLast"));
}
// Autogenerated method: SteamVR_Camera.get_baseName
::Il2CppString* GlobalNamespace::SteamVR_Camera::get_baseName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_baseName"));
}
// Autogenerated method: SteamVR_Camera.Expand
void GlobalNamespace::SteamVR_Camera::Expand() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Expand"));
}
// Autogenerated method: SteamVR_Camera.Collapse
void GlobalNamespace::SteamVR_Camera::Collapse() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Collapse"));
}
// Autogenerated method: SteamVR_Camera..ctor
GlobalNamespace::SteamVR_Camera* GlobalNamespace::SteamVR_Camera::New_ctor() {
  return (SteamVR_Camera*)THROW_UNLESS(il2cpp_utils::New("", "SteamVR_Camera"));
}
