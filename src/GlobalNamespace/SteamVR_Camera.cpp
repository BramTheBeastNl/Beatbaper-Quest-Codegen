// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamVR_Camera
#include "GlobalNamespace/SteamVR_Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable values
System::Collections::Hashtable* GlobalNamespace::SteamVR_Camera::_get_values() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("_get_values");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("", "SteamVR_Camera", "values"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable values
void GlobalNamespace::SteamVR_Camera::_set_values(System::Collections::Hashtable* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("_set_values");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Camera", "values", value));
}
// Autogenerated static field getter
// Get static field: static private System.String eyeSuffix
::Il2CppString* GlobalNamespace::SteamVR_Camera::_get_eyeSuffix() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("_get_eyeSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "SteamVR_Camera", "eyeSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String eyeSuffix
void GlobalNamespace::SteamVR_Camera::_set_eyeSuffix(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("_set_eyeSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Camera", "eyeSuffix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String earsSuffix
::Il2CppString* GlobalNamespace::SteamVR_Camera::_get_earsSuffix() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("_get_earsSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "SteamVR_Camera", "earsSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String earsSuffix
void GlobalNamespace::SteamVR_Camera::_set_earsSuffix(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("_set_earsSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Camera", "earsSuffix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String headSuffix
::Il2CppString* GlobalNamespace::SteamVR_Camera::_get_headSuffix() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("_get_headSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "SteamVR_Camera", "headSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String headSuffix
void GlobalNamespace::SteamVR_Camera::_set_headSuffix(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("_set_headSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Camera", "headSuffix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String originSuffix
::Il2CppString* GlobalNamespace::SteamVR_Camera::_get_originSuffix() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("_get_originSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "SteamVR_Camera", "originSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String originSuffix
void GlobalNamespace::SteamVR_Camera::_set_originSuffix(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("_set_originSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Camera", "originSuffix", value));
}
// Autogenerated method: SteamVR_Camera.get_head
UnityEngine::Transform* GlobalNamespace::SteamVR_Camera::get_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("get_head");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_head", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.get_offset
UnityEngine::Transform* GlobalNamespace::SteamVR_Camera::get_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("get_offset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_offset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.get_origin
UnityEngine::Transform* GlobalNamespace::SteamVR_Camera::get_origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("get_origin");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_origin", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.get_camera
UnityEngine::Camera* GlobalNamespace::SteamVR_Camera::get_camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("get_camera");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_camera", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.set_camera
void GlobalNamespace::SteamVR_Camera::set_camera(UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("set_camera");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_camera", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR_Camera.get_ears
UnityEngine::Transform* GlobalNamespace::SteamVR_Camera::get_ears() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("get_ears");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ears", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.GetRay
UnityEngine::Ray GlobalNamespace::SteamVR_Camera::GetRay() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("GetRay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Ray, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.get_sceneResolutionScale
float GlobalNamespace::SteamVR_Camera::get_sceneResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("get_sceneResolutionScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Camera", "get_sceneResolutionScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: SteamVR_Camera.set_sceneResolutionScale
void GlobalNamespace::SteamVR_Camera::set_sceneResolutionScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("set_sceneResolutionScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Camera", "set_sceneResolutionScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: SteamVR_Camera.OnDisable
void GlobalNamespace::SteamVR_Camera::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.OnEnable
void GlobalNamespace::SteamVR_Camera::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.Awake
void GlobalNamespace::SteamVR_Camera::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.ForceLast
void GlobalNamespace::SteamVR_Camera::ForceLast() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("ForceLast");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ForceLast", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.get_baseName
::Il2CppString* GlobalNamespace::SteamVR_Camera::get_baseName() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("get_baseName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_baseName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.Expand
void GlobalNamespace::SteamVR_Camera::Expand() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("Expand");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Expand", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Camera.Collapse
void GlobalNamespace::SteamVR_Camera::Collapse() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Camera").WithContext("Collapse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Collapse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
