// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMixedRealityCaptureSettings
#include "GlobalNamespace/OVRMixedRealityCaptureSettings.hpp"
// Including type: OVRManager
#include "GlobalNamespace/OVRManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRMixedRealityCaptureSettings.ReadFrom
void GlobalNamespace::OVRMixedRealityCaptureSettings::ReadFrom(GlobalNamespace::OVRManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRMixedRealityCaptureSettings").WithContext("ReadFrom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadFrom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(manager)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, manager);
}
// Autogenerated method: OVRMixedRealityCaptureSettings.ApplyTo
void GlobalNamespace::OVRMixedRealityCaptureSettings::ApplyTo(GlobalNamespace::OVRManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRMixedRealityCaptureSettings").WithContext("ApplyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(manager)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, manager);
}
