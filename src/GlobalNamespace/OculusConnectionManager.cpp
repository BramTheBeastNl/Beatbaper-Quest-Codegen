// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusConnectionManager
#include "GlobalNamespace/OculusConnectionManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: OculusConnectionManager/OculusConnection
#include "GlobalNamespace/OculusConnectionManager_OculusConnection.hpp"
// Including type: OculusConnectionManager/StartServerParams
#include "GlobalNamespace/OculusConnectionManager_StartServerParams.hpp"
// Including type: OculusConnectionManager/ConnectToServerParams
#include "GlobalNamespace/OculusConnectionManager_ConnectToServerParams.hpp"
// Including type: OculusConnectionManager/<HandlePeerConnectionRequest>d__62
#include "GlobalNamespace/OculusConnectionManager_-HandlePeerConnectionRequest-d__62.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: OculusNetworkPlayerModel
#include "GlobalNamespace/OculusNetworkPlayerModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
// Including type: Oculus.Platform.SendPolicy
#include "Oculus/Platform/SendPolicy.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kPingFrequency
float GlobalNamespace::OculusConnectionManager::_get_kPingFrequency() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("_get_kPingFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OculusConnectionManager", "kPingFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPingFrequency
void GlobalNamespace::OculusConnectionManager::_set_kPingFrequency(float value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("_set_kPingFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusConnectionManager", "kPingFrequency", value));
}
// Autogenerated method: OculusConnectionManager.set_isDisconnecting
void GlobalNamespace::OculusConnectionManager::set_isDisconnecting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("set_isDisconnecting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isDisconnecting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.get_isServer
bool GlobalNamespace::OculusConnectionManager::get_isServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("get_isServer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isServer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_isClient
bool GlobalNamespace::OculusConnectionManager::get_isClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("get_isClient");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isClient", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.DisconnectInternal
void GlobalNamespace::OculusConnectionManager::DisconnectInternal(GlobalNamespace::DisconnectedReason disconnectedReason, GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("DisconnectInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DisconnectInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectedReason, connectionFailedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason, connectionFailedReason);
}
// Autogenerated method: OculusConnectionManager.HandlePeerConnectionRequest
void GlobalNamespace::OculusConnectionManager::HandlePeerConnectionRequest(Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("HandlePeerConnectionRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandlePeerConnectionRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: OculusConnectionManager.HandleConnectionStateChanged
void GlobalNamespace::OculusConnectionManager::HandleConnectionStateChanged(Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("HandleConnectionStateChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleConnectionStateChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: OculusConnectionManager.GetConnection
GlobalNamespace::OculusConnectionManager::OculusConnection* GlobalNamespace::OculusConnectionManager::GetConnection(uint64_t user) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("GetConnection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(user)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OculusConnectionManager::OculusConnection*, false>(this, ___internal__method, user);
}
// Autogenerated method: OculusConnectionManager.RemoveConnection
void GlobalNamespace::OculusConnectionManager::RemoveConnection(uint64_t id, GlobalNamespace::DisconnectedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("RemoveConnection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveConnection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id, reason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, id, reason);
}
// Autogenerated method: OculusConnectionManager.AcquireBuffer
::Array<uint8_t>* GlobalNamespace::OculusConnectionManager::AcquireBuffer(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("AcquireBuffer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AcquireBuffer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(size)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, size);
}
// Autogenerated method: OculusConnectionManager.ReleaseBuffer
void GlobalNamespace::OculusConnectionManager::ReleaseBuffer(::Array<uint8_t>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("ReleaseBuffer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReleaseBuffer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: OculusConnectionManager.DeliveryMethodToSendPolicy
Oculus::Platform::SendPolicy GlobalNamespace::OculusConnectionManager::DeliveryMethodToSendPolicy(LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("DeliveryMethodToSendPolicy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OculusConnectionManager", "DeliveryMethodToSendPolicy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(deliveryMethod)));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::SendPolicy, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, deliveryMethod);
}
// Autogenerated method: OculusConnectionManager.SendPolicyToDeliveryMethod
LiteNetLib::DeliveryMethod GlobalNamespace::OculusConnectionManager::SendPolicyToDeliveryMethod(Oculus::Platform::SendPolicy sendPolicy) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("SendPolicyToDeliveryMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OculusConnectionManager", "SendPolicyToDeliveryMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sendPolicy)));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::DeliveryMethod, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sendPolicy);
}
// Autogenerated method: OculusConnectionManager.VoidHandler
void GlobalNamespace::OculusConnectionManager::VoidHandler(Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("VoidHandler");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OculusConnectionManager", "VoidHandler", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: OculusConnectionManager.<PollUpdate>b__56_0
void GlobalNamespace::OculusConnectionManager::$PollUpdate$b__56_0(GlobalNamespace::OculusConnectionManager::OculusConnection* connection, float latency) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("<PollUpdate>b__56_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PollUpdate>b__56_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connection, latency))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connection, latency);
}
// Autogenerated method: OculusConnectionManager.add_onConnectedEvent
void GlobalNamespace::OculusConnectionManager::add_onConnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("add_onConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onConnectedEvent
void GlobalNamespace::OculusConnectionManager::remove_onConnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("remove_onConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.add_onDisconnectedEvent
void GlobalNamespace::OculusConnectionManager::add_onDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("add_onDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onDisconnectedEvent
void GlobalNamespace::OculusConnectionManager::remove_onDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("remove_onDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.add_onConnectionFailedEvent
void GlobalNamespace::OculusConnectionManager::add_onConnectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("add_onConnectionFailedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onConnectionFailedEvent
void GlobalNamespace::OculusConnectionManager::remove_onConnectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("remove_onConnectionFailedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.add_onConnectionConnectedEvent
void GlobalNamespace::OculusConnectionManager::add_onConnectionConnectedEvent(System::Action_1<GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("add_onConnectionConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onConnectionConnectedEvent
void GlobalNamespace::OculusConnectionManager::remove_onConnectionConnectedEvent(System::Action_1<GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("remove_onConnectionConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.add_onConnectionDisconnectedEvent
void GlobalNamespace::OculusConnectionManager::add_onConnectionDisconnectedEvent(System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("add_onConnectionDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onConnectionDisconnectedEvent
void GlobalNamespace::OculusConnectionManager::remove_onConnectionDisconnectedEvent(System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("remove_onConnectionDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.add_onLatencyUpdatedEvent
void GlobalNamespace::OculusConnectionManager::add_onLatencyUpdatedEvent(System::Action_2<GlobalNamespace::IConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("add_onLatencyUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onLatencyUpdatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onLatencyUpdatedEvent
void GlobalNamespace::OculusConnectionManager::remove_onLatencyUpdatedEvent(System::Action_2<GlobalNamespace::IConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("remove_onLatencyUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onLatencyUpdatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.add_onReceivedDataEvent
void GlobalNamespace::OculusConnectionManager::add_onReceivedDataEvent(System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("add_onReceivedDataEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onReceivedDataEvent
void GlobalNamespace::OculusConnectionManager::remove_onReceivedDataEvent(System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("remove_onReceivedDataEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.get_userId
::Il2CppString* GlobalNamespace::OculusConnectionManager::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("get_userId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_userName
::Il2CppString* GlobalNamespace::OculusConnectionManager::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("get_userName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_isConnected
bool GlobalNamespace::OculusConnectionManager::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("get_isConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_isConnecting
bool GlobalNamespace::OculusConnectionManager::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("get_isConnecting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_isDisconnecting
bool GlobalNamespace::OculusConnectionManager::get_isDisconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("get_isDisconnecting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isDisconnecting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_isDisposed
bool GlobalNamespace::OculusConnectionManager::get_isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("get_isDisposed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isDisposed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_isConnectionOwner
bool GlobalNamespace::OculusConnectionManager::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("get_isConnectionOwner");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_connectionCount
int GlobalNamespace::OculusConnectionManager::get_connectionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("get_connectionCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_connectionCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.SendToAll
void GlobalNamespace::OculusConnectionManager::SendToAll(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("SendToAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer, deliveryMethod)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer, deliveryMethod);
}
// Autogenerated method: OculusConnectionManager.SendToAll
void GlobalNamespace::OculusConnectionManager::SendToAll(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod, GlobalNamespace::IConnection* excludingConnection) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("SendToAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer, deliveryMethod, excludingConnection)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer, deliveryMethod, excludingConnection);
}
// Autogenerated method: OculusConnectionManager.PollUpdate
void GlobalNamespace::OculusConnectionManager::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("PollUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.Disconnect
void GlobalNamespace::OculusConnectionManager::Disconnect(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("Disconnect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: OculusConnectionManager.Dispose
void GlobalNamespace::OculusConnectionManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void GlobalNamespace::OculusConnectionManager::System_IDisposable_Dispose() {
  GlobalNamespace::OculusConnectionManager::Dispose();
}
// Autogenerated method: OculusConnectionManager.GetConnection
GlobalNamespace::IConnection* GlobalNamespace::OculusConnectionManager::GetConnection(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusConnectionManager").WithContext("GetConnection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnection*, false>(this, ___internal__method, index);
}
