// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LobbyGameStateController
#include "GlobalNamespace/LobbyGameStateController.hpp"
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: MultiplayerLevelLoader
#include "GlobalNamespace/MultiplayerLevelLoader.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: LobbyGameState
#include "GlobalNamespace/LobbyGameState.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LobbyGameStateController.add_multiplayerGameStateChangedEvent
void GlobalNamespace::LobbyGameStateController::add_multiplayerGameStateChangedEvent(System::Action_1<GlobalNamespace::MultiplayerGameState>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_multiplayerGameStateChangedEvent", value));
}
// Autogenerated method: LobbyGameStateController.remove_multiplayerGameStateChangedEvent
void GlobalNamespace::LobbyGameStateController::remove_multiplayerGameStateChangedEvent(System::Action_1<GlobalNamespace::MultiplayerGameState>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_multiplayerGameStateChangedEvent", value));
}
// Autogenerated method: LobbyGameStateController.set_levelStartInitiated
void GlobalNamespace::LobbyGameStateController::set_levelStartInitiated(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_levelStartInitiated", value));
}
// Autogenerated method: LobbyGameStateController.set_startedBeatmapId
void GlobalNamespace::LobbyGameStateController::set_startedBeatmapId(GlobalNamespace::BeatmapIdentifierNetSerializable* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_startedBeatmapId", value));
}
// Autogenerated method: LobbyGameStateController.set_countdownStarted
void GlobalNamespace::LobbyGameStateController::set_countdownStarted(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_countdownStarted", value));
}
// Autogenerated method: LobbyGameStateController.set_countdownEndTime
void GlobalNamespace::LobbyGameStateController::set_countdownEndTime(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_countdownEndTime", value));
}
// Autogenerated method: LobbyGameStateController.set_state
void GlobalNamespace::LobbyGameStateController::set_state(GlobalNamespace::MultiplayerLobbyState value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_state", value));
}
// Autogenerated method: LobbyGameStateController.set_gameType
void GlobalNamespace::LobbyGameStateController::set_gameType(GlobalNamespace::MultiplayerGameType value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_gameType", value));
}
// Autogenerated method: LobbyGameStateController.set_isDisconnected
void GlobalNamespace::LobbyGameStateController::set_isDisconnected(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_isDisconnected", value));
}
// Autogenerated method: LobbyGameStateController.set_disconnectedReason
void GlobalNamespace::LobbyGameStateController::set_disconnectedReason(GlobalNamespace::DisconnectedReason value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_disconnectedReason", value));
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerSessionManagerDisconnected
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerSessionManagerDisconnected(GlobalNamespace::DisconnectedReason disconnectedReason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMultiplayerSessionManagerDisconnected", disconnectedReason));
}
// Autogenerated method: LobbyGameStateController.HandleGameStateDidChange
void GlobalNamespace::LobbyGameStateController::HandleGameStateDidChange(GlobalNamespace::MultiplayerGameState newGameState) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleGameStateDidChange", newGameState));
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerGetMultiplayerGameState
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerGetMultiplayerGameState(::Il2CppString* userId) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMenuRpcManagerGetMultiplayerGameState", userId));
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerSetMultiplayerGameState
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetMultiplayerGameState(::Il2CppString* userId, GlobalNamespace::MultiplayerGameState newGameState) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMenuRpcManagerSetMultiplayerGameState", userId, newGameState));
}
// Autogenerated method: LobbyGameStateController.StopListeningToGameStart
void GlobalNamespace::LobbyGameStateController::StopListeningToGameStart() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "StopListeningToGameStart"));
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerGetStartedLevel
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerGetStartedLevel(::Il2CppString* userId) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMenuRpcManagerGetStartedLevel", userId));
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerStartedLevel
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerStartedLevel(::Il2CppString* userId, GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, GlobalNamespace::GameplayModifiers* gameplayModifiers, float startTime) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMenuRpcManagerStartedLevel", userId, beatmapId, gameplayModifiers, startTime));
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerCancelledLevelStart
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerCancelledLevelStart(::Il2CppString* userId) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMenuRpcManagerCancelledLevelStart", userId));
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerSetCountdownEndTime
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetCountdownEndTime(::Il2CppString* userId, float countdownTime) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMenuRpcManagerSetCountdownEndTime", userId, countdownTime));
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerCancelCountdown
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerCancelCountdown(::Il2CppString* userId) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMenuRpcManagerCancelCountdown", userId));
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerSetStartGameTime
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetStartGameTime(::Il2CppString* userId, float startTime) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMenuRpcManagerSetStartGameTime", userId, startTime));
}
// Autogenerated method: LobbyGameStateController.HandleStartTimeChanged
void GlobalNamespace::LobbyGameStateController::HandleStartTimeChanged() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleStartTimeChanged"));
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerLevelLoaderStillDownloadingSong
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelLoaderStillDownloadingSong() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMultiplayerLevelLoaderStillDownloadingSong"));
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerLevelLoaderCountdownFinished
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelLoaderCountdownFinished(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMultiplayerLevelLoaderCountdownFinished", previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, difficultyBeatmap, gameplayModifiers));
}
// Autogenerated method: LobbyGameStateController.StartMultiplayerLevel
void GlobalNamespace::LobbyGameStateController::StartMultiplayerLevel(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::GameplayModifiers* gameplayModifiers, System::Action* beforeSceneSwitchCallback) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "StartMultiplayerLevel", previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, difficultyBeatmap, gameplayModifiers, beforeSceneSwitchCallback));
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerLevelDidFinish
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelDidFinish(GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO* multiplayerLevelScenesTransitionSetupData, GlobalNamespace::LevelCompletionResults* myCompletionResults, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>* othersCompletionResults) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMultiplayerLevelDidFinish", multiplayerLevelScenesTransitionSetupData, myCompletionResults, othersCompletionResults));
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerLevelDidDisconnect
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelDidDisconnect(GlobalNamespace::DisconnectedReason disconnectedReason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMultiplayerLevelDidDisconnect", disconnectedReason));
}
// Autogenerated method: LobbyGameStateController.StopLoading
void GlobalNamespace::LobbyGameStateController::StopLoading() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "StopLoading"));
}
// Autogenerated method: LobbyGameStateController.add_gameStartedEvent
void GlobalNamespace::LobbyGameStateController::add_gameStartedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_gameStartedEvent", value));
}
// Autogenerated method: LobbyGameStateController.remove_gameStartedEvent
void GlobalNamespace::LobbyGameStateController::remove_gameStartedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_gameStartedEvent", value));
}
// Autogenerated method: LobbyGameStateController.add_gameStartCancelledEvent
void GlobalNamespace::LobbyGameStateController::add_gameStartCancelledEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_gameStartCancelledEvent", value));
}
// Autogenerated method: LobbyGameStateController.remove_gameStartCancelledEvent
void GlobalNamespace::LobbyGameStateController::remove_gameStartCancelledEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_gameStartCancelledEvent", value));
}
// Autogenerated method: LobbyGameStateController.add_countdownStartedEvent
void GlobalNamespace::LobbyGameStateController::add_countdownStartedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_countdownStartedEvent", value));
}
// Autogenerated method: LobbyGameStateController.remove_countdownStartedEvent
void GlobalNamespace::LobbyGameStateController::remove_countdownStartedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_countdownStartedEvent", value));
}
// Autogenerated method: LobbyGameStateController.add_countdownCancelledEvent
void GlobalNamespace::LobbyGameStateController::add_countdownCancelledEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_countdownCancelledEvent", value));
}
// Autogenerated method: LobbyGameStateController.remove_countdownCancelledEvent
void GlobalNamespace::LobbyGameStateController::remove_countdownCancelledEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_countdownCancelledEvent", value));
}
// Autogenerated method: LobbyGameStateController.add_songStillDownloadingEvent
void GlobalNamespace::LobbyGameStateController::add_songStillDownloadingEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_songStillDownloadingEvent", value));
}
// Autogenerated method: LobbyGameStateController.remove_songStillDownloadingEvent
void GlobalNamespace::LobbyGameStateController::remove_songStillDownloadingEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_songStillDownloadingEvent", value));
}
// Autogenerated method: LobbyGameStateController.add_startTimeChangedEvent
void GlobalNamespace::LobbyGameStateController::add_startTimeChangedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_startTimeChangedEvent", value));
}
// Autogenerated method: LobbyGameStateController.remove_startTimeChangedEvent
void GlobalNamespace::LobbyGameStateController::remove_startTimeChangedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_startTimeChangedEvent", value));
}
// Autogenerated method: LobbyGameStateController.add_levelFinishedEvent
void GlobalNamespace::LobbyGameStateController::add_levelFinishedEvent(System::Action_3<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_levelFinishedEvent", value));
}
// Autogenerated method: LobbyGameStateController.remove_levelFinishedEvent
void GlobalNamespace::LobbyGameStateController::remove_levelFinishedEvent(System::Action_3<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_levelFinishedEvent", value));
}
// Autogenerated method: LobbyGameStateController.add_levelDidGetDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::add_levelDidGetDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_levelDidGetDisconnectedEvent", value));
}
// Autogenerated method: LobbyGameStateController.remove_levelDidGetDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::remove_levelDidGetDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_levelDidGetDisconnectedEvent", value));
}
// Autogenerated method: LobbyGameStateController.add_lobbyDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::add_lobbyDisconnectedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_lobbyDisconnectedEvent", value));
}
// Autogenerated method: LobbyGameStateController.remove_lobbyDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::remove_lobbyDisconnectedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_lobbyDisconnectedEvent", value));
}
// Autogenerated method: LobbyGameStateController.add_beforeSceneSwitchCallback
void GlobalNamespace::LobbyGameStateController::add_beforeSceneSwitchCallback(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_beforeSceneSwitchCallback", value));
}
// Autogenerated method: LobbyGameStateController.remove_beforeSceneSwitchCallback
void GlobalNamespace::LobbyGameStateController::remove_beforeSceneSwitchCallback(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_beforeSceneSwitchCallback", value));
}
// Autogenerated method: LobbyGameStateController.get_startTime
float GlobalNamespace::LobbyGameStateController::get_startTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_startTime"));
}
// Autogenerated method: LobbyGameStateController.set_startTime
void GlobalNamespace::LobbyGameStateController::set_startTime(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_startTime", value));
}
// Autogenerated method: LobbyGameStateController.get_levelStartInitiated
bool GlobalNamespace::LobbyGameStateController::get_levelStartInitiated() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_levelStartInitiated"));
}
// Autogenerated method: LobbyGameStateController.get_startedBeatmapId
GlobalNamespace::BeatmapIdentifierNetSerializable* GlobalNamespace::LobbyGameStateController::get_startedBeatmapId() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::BeatmapIdentifierNetSerializable*>(this, "get_startedBeatmapId"));
}
// Autogenerated method: LobbyGameStateController.get_countdownStarted
bool GlobalNamespace::LobbyGameStateController::get_countdownStarted() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_countdownStarted"));
}
// Autogenerated method: LobbyGameStateController.get_countdownEndTime
float GlobalNamespace::LobbyGameStateController::get_countdownEndTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_countdownEndTime"));
}
// Autogenerated method: LobbyGameStateController.get_state
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::LobbyGameStateController::get_state() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::MultiplayerLobbyState>(this, "get_state"));
}
// Autogenerated method: LobbyGameStateController.get_gameType
GlobalNamespace::MultiplayerGameType GlobalNamespace::LobbyGameStateController::get_gameType() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::MultiplayerGameType>(this, "get_gameType"));
}
// Autogenerated method: LobbyGameStateController.get_isDisconnected
bool GlobalNamespace::LobbyGameStateController::get_isDisconnected() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isDisconnected"));
}
// Autogenerated method: LobbyGameStateController.get_disconnectedReason
GlobalNamespace::DisconnectedReason GlobalNamespace::LobbyGameStateController::get_disconnectedReason() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::DisconnectedReason>(this, "get_disconnectedReason"));
}
// Autogenerated method: LobbyGameStateController.Activate
void GlobalNamespace::LobbyGameStateController::Activate() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Activate"));
}
// Autogenerated method: LobbyGameStateController.Deactivate
void GlobalNamespace::LobbyGameStateController::Deactivate() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Deactivate"));
}
// Autogenerated method: LobbyGameStateController.Dispose
void GlobalNamespace::LobbyGameStateController::Dispose() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Dispose"));
}
void GlobalNamespace::LobbyGameStateController::System_IDisposable_Dispose() {
  GlobalNamespace::LobbyGameStateController::Dispose();
}
// Autogenerated method: LobbyGameStateController.StartListeningToGameStart
void GlobalNamespace::LobbyGameStateController::StartListeningToGameStart() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "StartListeningToGameStart"));
}
// Autogenerated method: LobbyGameStateController.GetCurrentLevelIfGameStarted
void GlobalNamespace::LobbyGameStateController::GetCurrentLevelIfGameStarted() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GetCurrentLevelIfGameStarted"));
}
// Autogenerated method: LobbyGameStateController.SetMultiplayerGameType
void GlobalNamespace::LobbyGameStateController::SetMultiplayerGameType(GlobalNamespace::MultiplayerGameType multiplayerGameType) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetMultiplayerGameType", multiplayerGameType));
}
// Autogenerated method: LobbyGameStateController.ClearDisconnectedState
void GlobalNamespace::LobbyGameStateController::ClearDisconnectedState() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearDisconnectedState"));
}
// Autogenerated method: LobbyGameStateController.StartGame
void GlobalNamespace::LobbyGameStateController::StartGame() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "StartGame"));
}
// Autogenerated method: LobbyGameStateController.CancelGame
void GlobalNamespace::LobbyGameStateController::CancelGame() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "CancelGame"));
}
// Autogenerated method: LobbyGameStateController..ctor
GlobalNamespace::LobbyGameStateController* GlobalNamespace::LobbyGameStateController::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<LobbyGameStateController*>());
}
