// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLibConnectionManager
#include "GlobalNamespace/LiteNetLibConnectionManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: LiteNetLibConnectionManager/LiteNetLibConnectionParamsBase
#include "GlobalNamespace/LiteNetLibConnectionManager_LiteNetLibConnectionParamsBase.hpp"
// Including type: LiteNetLibConnectionManager/StartServerParams
#include "GlobalNamespace/LiteNetLibConnectionManager_StartServerParams.hpp"
// Including type: LiteNetLibConnectionManager/StartRelayParams
#include "GlobalNamespace/LiteNetLibConnectionManager_StartRelayParams.hpp"
// Including type: LiteNetLibConnectionManager/StartClientParams
#include "GlobalNamespace/LiteNetLibConnectionManager_StartClientParams.hpp"
// Including type: LiteNetLibConnectionManager/ConnectToServerParams
#include "GlobalNamespace/LiteNetLibConnectionManager_ConnectToServerParams.hpp"
// Including type: LiteNetLibConnectionManager/NetPeerConnectionRequest
#include "GlobalNamespace/LiteNetLibConnectionManager_NetPeerConnectionRequest.hpp"
// Including type: LiteNetLibConnectionManager/NetPeerConnection
#include "GlobalNamespace/LiteNetLibConnectionManager_NetPeerConnection.hpp"
// Including type: LiteNetLibConnectionManager/StatisticsUpdated
#include "GlobalNamespace/LiteNetLibConnectionManager_StatisticsUpdated.hpp"
// Including type: LiteNetLibConnectionManager/<>c
#include "GlobalNamespace/LiteNetLibConnectionManager_--c.hpp"
// Including type: LiteNetLibConnectionManager/<BackgroundDisconnectSentry>d__126
#include "GlobalNamespace/LiteNetLibConnectionManager_-BackgroundDisconnectSentry-d__126.hpp"
// Including type: LiteNetLibConnectionManager/<BackgroundShutdownSentry>d__127
#include "GlobalNamespace/LiteNetLibConnectionManager_-BackgroundShutdownSentry-d__127.hpp"
// Including type: LiteNetLib.NetManager
#include "LiteNetLib/NetManager.hpp"
// Including type: PacketEncryptionLayer
#include "GlobalNamespace/PacketEncryptionLayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: LiteNetLib.ConnectionRequest
#include "LiteNetLib/ConnectionRequest.hpp"
// Including type: LiteNetLib.DisconnectReason
#include "LiteNetLib/DisconnectReason.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
// Including type: System.Net.Sockets.SocketError
#include "System/Net/Sockets/SocketError.hpp"
// Including type: LiteNetLib.DisconnectInfo
#include "LiteNetLib/DisconnectInfo.hpp"
// Including type: LiteNetLib.NetPacketReader
#include "LiteNetLib/NetPacketReader.hpp"
// Including type: LiteNetLib.UnconnectedMessageType
#include "LiteNetLib/UnconnectedMessageType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 kBackgroundDisconnectTimeout
int64_t GlobalNamespace::LiteNetLibConnectionManager::_get_kBackgroundDisconnectTimeout() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("_get_kBackgroundDisconnectTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "LiteNetLibConnectionManager", "kBackgroundDisconnectTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kBackgroundDisconnectTimeout
void GlobalNamespace::LiteNetLibConnectionManager::_set_kBackgroundDisconnectTimeout(int64_t value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("_set_kBackgroundDisconnectTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager", "kBackgroundDisconnectTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kBackgroundShutdownTimeout
int64_t GlobalNamespace::LiteNetLibConnectionManager::_get_kBackgroundShutdownTimeout() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("_get_kBackgroundShutdownTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "LiteNetLibConnectionManager", "kBackgroundShutdownTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kBackgroundShutdownTimeout
void GlobalNamespace::LiteNetLibConnectionManager::_set_kBackgroundShutdownTimeout(int64_t value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("_set_kBackgroundShutdownTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager", "kBackgroundShutdownTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kStatisticsUpdateInterval
int64_t GlobalNamespace::LiteNetLibConnectionManager::_get_kStatisticsUpdateInterval() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("_get_kStatisticsUpdateInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "LiteNetLibConnectionManager", "kStatisticsUpdateInterval"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kStatisticsUpdateInterval
void GlobalNamespace::LiteNetLibConnectionManager::_set_kStatisticsUpdateInterval(int64_t value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("_set_kStatisticsUpdateInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager", "kStatisticsUpdateInterval", value));
}
// Autogenerated method: LiteNetLibConnectionManager.add_onReceiveUnconnectedDataEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onReceiveUnconnectedDataEvent(System::Action_2<System::Net::IPEndPoint*, LiteNetLib::Utils::NetDataReader*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("add_onReceiveUnconnectedDataEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onReceiveUnconnectedDataEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onReceiveUnconnectedDataEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onReceiveUnconnectedDataEvent(System::Action_2<System::Net::IPEndPoint*, LiteNetLib::Utils::NetDataReader*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("remove_onReceiveUnconnectedDataEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onReceiveUnconnectedDataEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onStatisticsUpdatedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onStatisticsUpdatedEvent(GlobalNamespace::LiteNetLibConnectionManager::StatisticsUpdated* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("add_onStatisticsUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onStatisticsUpdatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onStatisticsUpdatedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onStatisticsUpdatedEvent(GlobalNamespace::LiteNetLibConnectionManager::StatisticsUpdated* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("remove_onStatisticsUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onStatisticsUpdatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.get_hasConnectionOwner
bool GlobalNamespace::LiteNetLibConnectionManager::get_hasConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("get_hasConnectionOwner");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasConnectionOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isRelay
bool GlobalNamespace::LiteNetLibConnectionManager::get_isRelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("get_isRelay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isRelay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isServer
bool GlobalNamespace::LiteNetLibConnectionManager::get_isServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("get_isServer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isServer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isClient
bool GlobalNamespace::LiteNetLibConnectionManager::get_isClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("get_isClient");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isClient", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_secret
::Il2CppString* GlobalNamespace::LiteNetLibConnectionManager::get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("get_secret");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_secret", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_port
int GlobalNamespace::LiteNetLibConnectionManager::get_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("get_port");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_port", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_encryptionLayer
GlobalNamespace::PacketEncryptionLayer* GlobalNamespace::LiteNetLibConnectionManager::get_encryptionLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("get_encryptionLayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_encryptionLayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketEncryptionLayer*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.SendUnconnectedMessage
void GlobalNamespace::LiteNetLibConnectionManager::SendUnconnectedMessage(LiteNetLib::Utils::NetDataWriter* writer, System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("SendUnconnectedMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendUnconnectedMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer, endPoint)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer, endPoint);
}
// Autogenerated method: LiteNetLibConnectionManager.SendUnconnectedMessage
void GlobalNamespace::LiteNetLibConnectionManager::SendUnconnectedMessage(::Array<uint8_t>* message, int offset, int length, System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("SendUnconnectedMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendUnconnectedMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message, offset, length, endPoint)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message, offset, length, endPoint);
}
// Autogenerated method: LiteNetLibConnectionManager.SetSecret
void GlobalNamespace::LiteNetLibConnectionManager::SetSecret(::Il2CppString* secret) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("SetSecret");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetSecret", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(secret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, secret);
}
// Autogenerated method: LiteNetLibConnectionManager.ConnectToEndPoint
void GlobalNamespace::LiteNetLibConnectionManager::ConnectToEndPoint(System::Net::IPEndPoint* remoteEndPoint, ::Il2CppString* remoteUserId, ::Il2CppString* remoteUserName, bool remoteUserIsConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("ConnectToEndPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConnectToEndPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(remoteEndPoint, remoteUserId, remoteUserName, remoteUserIsConnectionOwner)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, remoteUserId, remoteUserName, remoteUserIsConnectionOwner);
}
// Autogenerated method: LiteNetLibConnectionManager.DisposeAsync
System::Threading::Tasks::Task* GlobalNamespace::LiteNetLibConnectionManager::DisposeAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("DisposeAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DisposeAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.DisposeInternal
void GlobalNamespace::LiteNetLibConnectionManager::DisposeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("DisposeInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DisposeInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.DisconnectInternal
void GlobalNamespace::LiteNetLibConnectionManager::DisconnectInternal(GlobalNamespace::DisconnectedReason disconnectedReason, GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("DisconnectInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DisconnectInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectedReason, connectionFailedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason, connectionFailedReason);
}
// Autogenerated method: LiteNetLibConnectionManager.TryStartNetManager
bool GlobalNamespace::LiteNetLibConnectionManager::TryStartNetManager(int port, bool enableBackgroundSentry) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("TryStartNetManager");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryStartNetManager", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(port, enableBackgroundSentry)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, port, enableBackgroundSentry);
}
// Autogenerated method: LiteNetLibConnectionManager.StartBackgroundSentry
void GlobalNamespace::LiteNetLibConnectionManager::StartBackgroundSentry() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("StartBackgroundSentry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartBackgroundSentry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.CheckSentryState
void GlobalNamespace::LiteNetLibConnectionManager::CheckSentryState() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("CheckSentryState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckSentryState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.UpdateStatistics
void GlobalNamespace::LiteNetLibConnectionManager::UpdateStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("UpdateStatistics");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateStatistics", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.IsConnectedToUser
bool GlobalNamespace::LiteNetLibConnectionManager::IsConnectedToUser(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("IsConnectedToUser");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsConnectedToUser", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, userId);
}
// Autogenerated method: LiteNetLibConnectionManager.HasConnectionToEndPoint
bool GlobalNamespace::LiteNetLibConnectionManager::HasConnectionToEndPoint(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("HasConnectionToEndPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HasConnectionToEndPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, endPoint);
}
// Autogenerated method: LiteNetLibConnectionManager.HasPendingConnectionToEndPoint
bool GlobalNamespace::LiteNetLibConnectionManager::HasPendingConnectionToEndPoint(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("HasPendingConnectionToEndPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HasPendingConnectionToEndPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, endPoint);
}
// Autogenerated method: LiteNetLibConnectionManager.GetConnection
GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection* GlobalNamespace::LiteNetLibConnectionManager::GetConnection(LiteNetLib::NetPeer* peer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("GetConnection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*, false>(this, ___internal__method, peer);
}
// Autogenerated method: LiteNetLibConnectionManager.AcceptAllPendingRequests
void GlobalNamespace::LiteNetLibConnectionManager::AcceptAllPendingRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("AcceptAllPendingRequests");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AcceptAllPendingRequests", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.TryAccept
void GlobalNamespace::LiteNetLibConnectionManager::TryAccept(LiteNetLib::ConnectionRequest* request, ::Il2CppString* userId, ::Il2CppString* userName, bool isConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("TryAccept");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryAccept", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(request, userId, userName, isConnectionOwner)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, request, userId, userName, isConnectionOwner);
}
// Autogenerated method: LiteNetLibConnectionManager.CreatePendingConnection
void GlobalNamespace::LiteNetLibConnectionManager::CreatePendingConnection(LiteNetLib::NetPeer* peer, ::Il2CppString* userId, ::Il2CppString* userName, bool isConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("CreatePendingConnection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreatePendingConnection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer, userId, userName, isConnectionOwner)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer, userId, userName, isConnectionOwner);
}
// Autogenerated method: LiteNetLibConnectionManager.RemoveConnection
void GlobalNamespace::LiteNetLibConnectionManager::RemoveConnection(LiteNetLib::NetPeer* netPeer, LiteNetLib::DisconnectReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("RemoveConnection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveConnection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(netPeer, reason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, netPeer, reason);
}
// Autogenerated method: LiteNetLibConnectionManager.TryDisconnect
void GlobalNamespace::LiteNetLibConnectionManager::TryDisconnect(LiteNetLib::DisconnectReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("TryDisconnect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryDisconnect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: LiteNetLibConnectionManager.ToDisconnectedReason
GlobalNamespace::DisconnectedReason GlobalNamespace::LiteNetLibConnectionManager::ToDisconnectedReason(LiteNetLib::DisconnectReason disconnectReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("ToDisconnectedReason");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToDisconnectedReason", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectReason)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::DisconnectedReason, false>(this, ___internal__method, disconnectReason);
}
// Autogenerated method: LiteNetLibConnectionManager.ToConnectionFailedReason
GlobalNamespace::ConnectionFailedReason GlobalNamespace::LiteNetLibConnectionManager::ToConnectionFailedReason(LiteNetLib::DisconnectReason disconnectReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("ToConnectionFailedReason");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToConnectionFailedReason", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectReason)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ConnectionFailedReason, false>(this, ___internal__method, disconnectReason);
}
// Autogenerated method: LiteNetLibConnectionManager.GetConnectionMessage
LiteNetLib::Utils::NetDataWriter* GlobalNamespace::LiteNetLibConnectionManager::GetConnectionMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("GetConnectionMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConnectionMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::Utils::NetDataWriter*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.ParseConnectionMessage
bool GlobalNamespace::LiteNetLibConnectionManager::ParseConnectionMessage(LiteNetLib::Utils::NetDataReader* reader, ::Il2CppString*& secret, ::Il2CppString*& userId, ::Il2CppString*& userName, bool& isConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("ParseConnectionMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ParseConnectionMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader, secret, userId, userName, isConnectionOwner)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, reader, secret, userId, userName, isConnectionOwner);
}
// Autogenerated method: LiteNetLibConnectionManager.BackgroundDisconnectSentry
System::Threading::Tasks::Task* GlobalNamespace::LiteNetLibConnectionManager::BackgroundDisconnectSentry() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("BackgroundDisconnectSentry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BackgroundDisconnectSentry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.BackgroundShutdownSentry
System::Threading::Tasks::Task* GlobalNamespace::LiteNetLibConnectionManager::BackgroundShutdownSentry() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("BackgroundShutdownSentry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BackgroundShutdownSentry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.Log
void GlobalNamespace::LiteNetLibConnectionManager::Log(::Il2CppString* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("Log");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(msg)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: LiteNetLibConnectionManager.LogError
void GlobalNamespace::LiteNetLibConnectionManager::LogError(::Il2CppString* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("LogError");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(msg)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: LiteNetLibConnectionManager.<DisposeAsync>b__97_0
void GlobalNamespace::LiteNetLibConnectionManager::$DisposeAsync$b__97_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("<DisposeAsync>b__97_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DisposeAsync>b__97_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onConnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onConnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("add_onConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onConnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("remove_onConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onDisconnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("add_onDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onDisconnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("remove_onDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onConnectionFailedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("add_onConnectionFailedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onConnectionFailedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("remove_onConnectionFailedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onConnectionConnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionConnectedEvent(System::Action_1<GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("add_onConnectionConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onConnectionConnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionConnectedEvent(System::Action_1<GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("remove_onConnectionConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onConnectionDisconnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionDisconnectedEvent(System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("add_onConnectionDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onConnectionDisconnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionDisconnectedEvent(System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("remove_onConnectionDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onLatencyUpdatedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onLatencyUpdatedEvent(System::Action_2<GlobalNamespace::IConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("add_onLatencyUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onLatencyUpdatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onLatencyUpdatedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onLatencyUpdatedEvent(System::Action_2<GlobalNamespace::IConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("remove_onLatencyUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onLatencyUpdatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onReceivedDataEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onReceivedDataEvent(System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("add_onReceivedDataEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onReceivedDataEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onReceivedDataEvent(System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("remove_onReceivedDataEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.get_userId
::Il2CppString* GlobalNamespace::LiteNetLibConnectionManager::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("get_userId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_userName
::Il2CppString* GlobalNamespace::LiteNetLibConnectionManager::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("get_userName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isConnected
bool GlobalNamespace::LiteNetLibConnectionManager::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("get_isConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isConnecting
bool GlobalNamespace::LiteNetLibConnectionManager::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("get_isConnecting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isDisconnecting
bool GlobalNamespace::LiteNetLibConnectionManager::get_isDisconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("get_isDisconnecting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isDisconnecting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isConnectionOwner
bool GlobalNamespace::LiteNetLibConnectionManager::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("get_isConnectionOwner");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isDisposed
bool GlobalNamespace::LiteNetLibConnectionManager::get_isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("get_isDisposed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isDisposed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_connectionCount
int GlobalNamespace::LiteNetLibConnectionManager::get_connectionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("get_connectionCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_connectionCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.SendToAll
void GlobalNamespace::LiteNetLibConnectionManager::SendToAll(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("SendToAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer, deliveryMethod)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer, deliveryMethod);
}
// Autogenerated method: LiteNetLibConnectionManager.SendToAll
void GlobalNamespace::LiteNetLibConnectionManager::SendToAll(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod, GlobalNamespace::IConnection* excludingConnection) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("SendToAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer, deliveryMethod, excludingConnection)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer, deliveryMethod, excludingConnection);
}
// Autogenerated method: LiteNetLibConnectionManager.PollUpdate
void GlobalNamespace::LiteNetLibConnectionManager::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("PollUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.Dispose
void GlobalNamespace::LiteNetLibConnectionManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void GlobalNamespace::LiteNetLibConnectionManager::System_IDisposable_Dispose() {
  GlobalNamespace::LiteNetLibConnectionManager::Dispose();
}
// Autogenerated method: LiteNetLibConnectionManager.Disconnect
void GlobalNamespace::LiteNetLibConnectionManager::Disconnect(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("Disconnect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: LiteNetLibConnectionManager.GetConnection
GlobalNamespace::IConnection* GlobalNamespace::LiteNetLibConnectionManager::GetConnection(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("GetConnection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnection*, false>(this, ___internal__method, index);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnPeerConnected
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnPeerConnected(LiteNetLib::NetPeer* peer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("LiteNetLib.INetEventListener.OnPeerConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnPeerConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnNetworkError
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnNetworkError(System::Net::IPEndPoint* endPoint, System::Net::Sockets::SocketError socketError) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("LiteNetLib.INetEventListener.OnNetworkError");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint, socketError)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPoint, socketError);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnNetworkLatencyUpdate
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnNetworkLatencyUpdate(LiteNetLib::NetPeer* peer, int latencyMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("LiteNetLib.INetEventListener.OnNetworkLatencyUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkLatencyUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer, latencyMs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer, latencyMs);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnConnectionRequest
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnConnectionRequest(LiteNetLib::ConnectionRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("LiteNetLib.INetEventListener.OnConnectionRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnConnectionRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(request)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnPeerDisconnected
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnPeerDisconnected(LiteNetLib::NetPeer* peer, LiteNetLib::DisconnectInfo disconnectInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("LiteNetLib.INetEventListener.OnPeerDisconnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnPeerDisconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer, disconnectInfo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer, disconnectInfo);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnNetworkReceive
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnNetworkReceive(LiteNetLib::NetPeer* peer, LiteNetLib::NetPacketReader* reader, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("LiteNetLib.INetEventListener.OnNetworkReceive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer, reader, deliveryMethod)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer, reader, deliveryMethod);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnNetworkReceiveUnconnected(System::Net::IPEndPoint* remoteEndPoint, LiteNetLib::NetPacketReader* reader, LiteNetLib::UnconnectedMessageType messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LiteNetLibConnectionManager").WithContext("LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(remoteEndPoint, reader, messageType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, reader, messageType);
}
