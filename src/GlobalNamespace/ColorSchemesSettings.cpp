// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ColorSchemesSettings
#include "GlobalNamespace/ColorSchemesSettings.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorSchemesSettings.set_selectedColorSchemeId
void GlobalNamespace::ColorSchemesSettings::set_selectedColorSchemeId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ColorSchemesSettings").WithContext("set_selectedColorSchemeId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_selectedColorSchemeId", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorSchemesSettings.get_selectedColorSchemeId
::Il2CppString* GlobalNamespace::ColorSchemesSettings::get_selectedColorSchemeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ColorSchemesSettings").WithContext("get_selectedColorSchemeId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "get_selectedColorSchemeId", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemesSettings..ctor
GlobalNamespace::ColorSchemesSettings* GlobalNamespace::ColorSchemesSettings::New_ctor(::Array<GlobalNamespace::ColorScheme*>* colorSchemes) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ColorSchemesSettings").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<ColorSchemesSettings*>(colorSchemes));
}
// Autogenerated method: ColorSchemesSettings..ctor
GlobalNamespace::ColorSchemesSettings* GlobalNamespace::ColorSchemesSettings::New_ctor(::Array<GlobalNamespace::ColorSchemeSO*>* colorSchemeSOs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ColorSchemesSettings").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<ColorSchemesSettings*>(colorSchemeSOs));
}
// Autogenerated method: ColorSchemesSettings.ConvertColorSchemeSOs
::Array<GlobalNamespace::ColorScheme*>* GlobalNamespace::ColorSchemesSettings::ConvertColorSchemeSOs(::Array<GlobalNamespace::ColorSchemeSO*>* colorSchemeSOs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ColorSchemesSettings").WithContext("ConvertColorSchemeSOs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "ColorSchemesSettings", il2cpp_utils::NoArgClass<::Array<GlobalNamespace::ColorScheme*>*>(), "ConvertColorSchemeSOs", {}, ::il2cpp_utils::ExtractTypes(colorSchemeSOs)));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::ColorScheme*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, colorSchemeSOs);
}
// Autogenerated method: ColorSchemesSettings.GetNumberOfColorSchemes
int GlobalNamespace::ColorSchemesSettings::GetNumberOfColorSchemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ColorSchemesSettings").WithContext("GetNumberOfColorSchemes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "GetNumberOfColorSchemes", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemesSettings.GetColorSchemeForIdx
GlobalNamespace::ColorScheme* GlobalNamespace::ColorSchemesSettings::GetColorSchemeForIdx(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ColorSchemesSettings").WithContext("GetColorSchemeForIdx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<GlobalNamespace::ColorScheme*>(), "GetColorSchemeForIdx", {}, ::il2cpp_utils::ExtractTypes(idx)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorScheme*, false>(this, ___internal__method, idx);
}
// Autogenerated method: ColorSchemesSettings.GetColorSchemeForId
GlobalNamespace::ColorScheme* GlobalNamespace::ColorSchemesSettings::GetColorSchemeForId(::Il2CppString* id) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ColorSchemesSettings").WithContext("GetColorSchemeForId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<GlobalNamespace::ColorScheme*>(), "GetColorSchemeForId", {}, ::il2cpp_utils::ExtractTypes(id)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorScheme*, false>(this, ___internal__method, id);
}
// Autogenerated method: ColorSchemesSettings.SetColorSchemeForId
void GlobalNamespace::ColorSchemesSettings::SetColorSchemeForId(GlobalNamespace::ColorScheme* colorScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ColorSchemesSettings").WithContext("SetColorSchemeForId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetColorSchemeForId", {}, ::il2cpp_utils::ExtractTypes(colorScheme)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colorScheme);
}
// Autogenerated method: ColorSchemesSettings.GetSelectedColorScheme
GlobalNamespace::ColorScheme* GlobalNamespace::ColorSchemesSettings::GetSelectedColorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ColorSchemesSettings").WithContext("GetSelectedColorScheme");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<GlobalNamespace::ColorScheme*>(), "GetSelectedColorScheme", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorScheme*, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemesSettings.GetSelectedColorSchemeIdx
int GlobalNamespace::ColorSchemesSettings::GetSelectedColorSchemeIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ColorSchemesSettings").WithContext("GetSelectedColorSchemeIdx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "GetSelectedColorSchemeIdx", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemesSettings.GetOverrideColorScheme
GlobalNamespace::ColorScheme* GlobalNamespace::ColorSchemesSettings::GetOverrideColorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ColorSchemesSettings").WithContext("GetOverrideColorScheme");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<GlobalNamespace::ColorScheme*>(), "GetOverrideColorScheme", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorScheme*, false>(this, ___internal__method);
}
