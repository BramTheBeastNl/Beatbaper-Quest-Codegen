// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerSessionManager
#include "GlobalNamespace/MultiplayerSessionManager.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: MultiplayerSessionManager/SessionType
#include "GlobalNamespace/MultiplayerSessionManager_SessionType.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: MultiplayerSessionManager/<>c__DisplayClass91_0
#include "GlobalNamespace/MultiplayerSessionManager_--c__DisplayClass91_0.hpp"
// Including type: MultiplayerSessionManager/<>c
#include "GlobalNamespace/MultiplayerSessionManager_--c.hpp"
// Including type: NetworkPacketSerializer`2
#include "GlobalNamespace/NetworkPacketSerializer_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: SynchronizedActionQueue
#include "GlobalNamespace/SynchronizedActionQueue.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: IConnectionManager
#include "GlobalNamespace/IConnectionManager.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
// Including type: UpdateConnectionStateReason
#include "GlobalNamespace/UpdateConnectionStateReason.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: INetworkPacketSubSerializer`1
#include "GlobalNamespace/INetworkPacketSubSerializer_1.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerSessionState
::Il2CppString* GlobalNamespace::MultiplayerSessionManager::_get_kMultiplayerSessionState() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerSessionManager", "kMultiplayerSessionState"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerSessionState
void GlobalNamespace::MultiplayerSessionManager::_set_kMultiplayerSessionState(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerSessionManager", "kMultiplayerSessionState", value));
}
// Autogenerated method: MultiplayerSessionManager.set_connectionOwner
void GlobalNamespace::MultiplayerSessionManager::set_connectionOwner(GlobalNamespace::IConnectedPlayer* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_connectionOwner", value));
}
// Autogenerated method: MultiplayerSessionManager.get_connectedPlayerManager
GlobalNamespace::ConnectedPlayerManager* GlobalNamespace::MultiplayerSessionManager::get_connectedPlayerManager() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::ConnectedPlayerManager*>(this, "get_connectedPlayerManager"));
}
// Autogenerated method: MultiplayerSessionManager.get_maxPlayerCount
int GlobalNamespace::MultiplayerSessionManager::get_maxPlayerCount() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_maxPlayerCount"));
}
// Autogenerated method: MultiplayerSessionManager.InitInternal
void GlobalNamespace::MultiplayerSessionManager::InitInternal(GlobalNamespace::MultiplayerSessionManager::SessionType sessionType) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "InitInternal", sessionType));
}
// Autogenerated method: MultiplayerSessionManager.DisconnectInternal
void GlobalNamespace::MultiplayerSessionManager::DisconnectInternal(GlobalNamespace::UpdateConnectionStateReason reason, GlobalNamespace::DisconnectedReason disconnectedReason, GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DisconnectInternal", reason, disconnectedReason, connectionFailedReason));
}
// Autogenerated method: MultiplayerSessionManager.UpdateSynchronizedActions
void GlobalNamespace::MultiplayerSessionManager::UpdateSynchronizedActions() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdateSynchronizedActions"));
}
// Autogenerated method: MultiplayerSessionManager.HandleReinitialized
void GlobalNamespace::MultiplayerSessionManager::HandleReinitialized() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleReinitialized"));
}
// Autogenerated method: MultiplayerSessionManager.HandleConnected
void GlobalNamespace::MultiplayerSessionManager::HandleConnected() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleConnected"));
}
// Autogenerated method: MultiplayerSessionManager.HandleDisconnected
void GlobalNamespace::MultiplayerSessionManager::HandleDisconnected(GlobalNamespace::DisconnectedReason disconnectedReason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleDisconnected", disconnectedReason));
}
// Autogenerated method: MultiplayerSessionManager.HandleConnectionFailed
void GlobalNamespace::MultiplayerSessionManager::HandleConnectionFailed(GlobalNamespace::ConnectionFailedReason reason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleConnectionFailed", reason));
}
// Autogenerated method: MultiplayerSessionManager.HandleSyncTimeInitialized
void GlobalNamespace::MultiplayerSessionManager::HandleSyncTimeInitialized() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleSyncTimeInitialized"));
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerConnected
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerConnected(GlobalNamespace::IConnectedPlayer* player) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePlayerConnected", player));
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerDisconnected
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerDisconnected(GlobalNamespace::IConnectedPlayer* player) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePlayerDisconnected", player));
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerStateChanged
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerStateChanged(GlobalNamespace::IConnectedPlayer* player) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePlayerStateChanged", player));
}
// Autogenerated method: MultiplayerSessionManager.HandlePlayerOrderChanged
void GlobalNamespace::MultiplayerSessionManager::HandlePlayerOrderChanged(GlobalNamespace::IConnectedPlayer* player) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePlayerOrderChanged", player));
}
// Autogenerated method: MultiplayerSessionManager.UpdateConnectionState
void GlobalNamespace::MultiplayerSessionManager::UpdateConnectionState(GlobalNamespace::UpdateConnectionStateReason updateReason, GlobalNamespace::DisconnectedReason disconnectedReason, GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdateConnectionState", updateReason, disconnectedReason, connectionFailedReason));
}
// Autogenerated method: MultiplayerSessionManager.TryUpdateConnectedPlayer
bool GlobalNamespace::MultiplayerSessionManager::TryUpdateConnectedPlayer(GlobalNamespace::IConnectedPlayer* player, bool isPlayerConnected) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryUpdateConnectedPlayer", player, isPlayerConnected));
}
// Autogenerated method: MultiplayerSessionManager.GetNextAvailableSortIndex
int GlobalNamespace::MultiplayerSessionManager::GetNextAvailableSortIndex() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetNextAvailableSortIndex"));
}
// Autogenerated method: MultiplayerSessionManager.add_connectedEvent
void GlobalNamespace::MultiplayerSessionManager::add_connectedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_connectedEvent", value));
}
// Autogenerated method: MultiplayerSessionManager.remove_connectedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_connectedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_connectedEvent", value));
}
// Autogenerated method: MultiplayerSessionManager.add_connectionFailedEvent
void GlobalNamespace::MultiplayerSessionManager::add_connectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_connectionFailedEvent", value));
}
// Autogenerated method: MultiplayerSessionManager.remove_connectionFailedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_connectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_connectionFailedEvent", value));
}
// Autogenerated method: MultiplayerSessionManager.add_playerConnectedEvent
void GlobalNamespace::MultiplayerSessionManager::add_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_playerConnectedEvent", value));
}
// Autogenerated method: MultiplayerSessionManager.remove_playerConnectedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_playerConnectedEvent", value));
}
// Autogenerated method: MultiplayerSessionManager.add_playerDisconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::add_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_playerDisconnectedEvent", value));
}
// Autogenerated method: MultiplayerSessionManager.remove_playerDisconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_playerDisconnectedEvent", value));
}
// Autogenerated method: MultiplayerSessionManager.add_playerStateChangedEvent
void GlobalNamespace::MultiplayerSessionManager::add_playerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_playerStateChangedEvent", value));
}
// Autogenerated method: MultiplayerSessionManager.remove_playerStateChangedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_playerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_playerStateChangedEvent", value));
}
// Autogenerated method: MultiplayerSessionManager.add_disconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::add_disconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_disconnectedEvent", value));
}
// Autogenerated method: MultiplayerSessionManager.remove_disconnectedEvent
void GlobalNamespace::MultiplayerSessionManager::remove_disconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_disconnectedEvent", value));
}
// Autogenerated method: MultiplayerSessionManager.get_isConnectionOwner
bool GlobalNamespace::MultiplayerSessionManager::get_isConnectionOwner() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isConnectionOwner"));
}
// Autogenerated method: MultiplayerSessionManager.get_connectionOwner
GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::get_connectionOwner() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::IConnectedPlayer*>(this, "get_connectionOwner"));
}
// Autogenerated method: MultiplayerSessionManager.get_isSpectating
bool GlobalNamespace::MultiplayerSessionManager::get_isSpectating() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isSpectating"));
}
// Autogenerated method: MultiplayerSessionManager.get_isConnectingOrConnected
bool GlobalNamespace::MultiplayerSessionManager::get_isConnectingOrConnected() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isConnectingOrConnected"));
}
// Autogenerated method: MultiplayerSessionManager.get_isConnected
bool GlobalNamespace::MultiplayerSessionManager::get_isConnected() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isConnected"));
}
// Autogenerated method: MultiplayerSessionManager.get_isConnecting
bool GlobalNamespace::MultiplayerSessionManager::get_isConnecting() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isConnecting"));
}
// Autogenerated method: MultiplayerSessionManager.get_connectedPlayers
System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::MultiplayerSessionManager::get_connectedPlayers() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>*>(this, "get_connectedPlayers"));
}
// Autogenerated method: MultiplayerSessionManager.get_connectedPlayerCount
int GlobalNamespace::MultiplayerSessionManager::get_connectedPlayerCount() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_connectedPlayerCount"));
}
// Autogenerated method: MultiplayerSessionManager.get_syncTime
float GlobalNamespace::MultiplayerSessionManager::get_syncTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_syncTime"));
}
// Autogenerated method: MultiplayerSessionManager.get_isSyncTimeInitialized
bool GlobalNamespace::MultiplayerSessionManager::get_isSyncTimeInitialized() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isSyncTimeInitialized"));
}
// Autogenerated method: MultiplayerSessionManager.get_syncTimeDelay
float GlobalNamespace::MultiplayerSessionManager::get_syncTimeDelay() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_syncTimeDelay"));
}
// Autogenerated method: MultiplayerSessionManager.get_localPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::get_localPlayer() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::IConnectedPlayer*>(this, "get_localPlayer"));
}
// Autogenerated method: MultiplayerSessionManager.Start
void GlobalNamespace::MultiplayerSessionManager::Start() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Start"));
}
// Autogenerated method: MultiplayerSessionManager.Update
void GlobalNamespace::MultiplayerSessionManager::Update() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Update"));
}
// Autogenerated method: MultiplayerSessionManager.OnDestroy
void GlobalNamespace::MultiplayerSessionManager::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: MultiplayerSessionManager.OnApplicationPause
void GlobalNamespace::MultiplayerSessionManager::OnApplicationPause(bool pauseStatus) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnApplicationPause", pauseStatus));
}
// Autogenerated method: MultiplayerSessionManager.RegisterSerializer
void GlobalNamespace::MultiplayerSessionManager::RegisterSerializer(GlobalNamespace::MultiplayerSessionManager::MessageType serializerType, GlobalNamespace::INetworkPacketSubSerializer_1<GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RegisterSerializer", serializerType, subSerializer));
}
// Autogenerated method: MultiplayerSessionManager.UnregisterSerializer
void GlobalNamespace::MultiplayerSessionManager::UnregisterSerializer(GlobalNamespace::MultiplayerSessionManager::MessageType serializerType, GlobalNamespace::INetworkPacketSubSerializer_1<GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UnregisterSerializer", serializerType, subSerializer));
}
// Autogenerated method: MultiplayerSessionManager.StartSession
void GlobalNamespace::MultiplayerSessionManager::StartSession(GlobalNamespace::ConnectedPlayerManager* connectedPlayerManager) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "StartSession", connectedPlayerManager));
}
// Autogenerated method: MultiplayerSessionManager.SetMaxPlayerCount
void GlobalNamespace::MultiplayerSessionManager::SetMaxPlayerCount(int maxPlayerCount) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetMaxPlayerCount", maxPlayerCount));
}
// Autogenerated method: MultiplayerSessionManager.EndSession
void GlobalNamespace::MultiplayerSessionManager::EndSession() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "EndSession"));
}
// Autogenerated method: MultiplayerSessionManager.Disconnect
void GlobalNamespace::MultiplayerSessionManager::Disconnect() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Disconnect"));
}
// Autogenerated method: MultiplayerSessionManager.PerformAtSyncTime
void GlobalNamespace::MultiplayerSessionManager::PerformAtSyncTime(float syncTime, System::Action* action) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PerformAtSyncTime", syncTime, action));
}
// Autogenerated method: MultiplayerSessionManager.GetPlayerByUserId
GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::GetPlayerByUserId(::Il2CppString* userId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::IConnectedPlayer*>(this, "GetPlayerByUserId", userId));
}
// Autogenerated method: MultiplayerSessionManager.GetConnectedPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::GetConnectedPlayer(int i) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::IConnectedPlayer*>(this, "GetConnectedPlayer", i));
}
// Autogenerated method: MultiplayerSessionManager.GetConnectedPlayerByUserId
GlobalNamespace::IConnectedPlayer* GlobalNamespace::MultiplayerSessionManager::GetConnectedPlayerByUserId(::Il2CppString* userId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::IConnectedPlayer*>(this, "GetConnectedPlayerByUserId", userId));
}
// Autogenerated method: MultiplayerSessionManager.SetLocalPlayerState
void GlobalNamespace::MultiplayerSessionManager::SetLocalPlayerState(::Il2CppString* state, bool hasState) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetLocalPlayerState", state, hasState));
}
// Autogenerated method: MultiplayerSessionManager.LocalPlayerHasState
bool GlobalNamespace::MultiplayerSessionManager::LocalPlayerHasState(::Il2CppString* state) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "LocalPlayerHasState", state));
}
// Autogenerated method: MultiplayerSessionManager..ctor
GlobalNamespace::MultiplayerSessionManager* GlobalNamespace::MultiplayerSessionManager::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<MultiplayerSessionManager*>());
}
