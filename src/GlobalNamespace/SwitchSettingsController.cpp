// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SwitchSettingsController
#include "GlobalNamespace/SwitchSettingsController.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SwitchSettingsController.GetInitValue
bool GlobalNamespace::SwitchSettingsController::GetInitValue() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "GetInitValue"));
}
// Autogenerated method: SwitchSettingsController.ApplyValue
void GlobalNamespace::SwitchSettingsController::ApplyValue(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ApplyValue", value));
}
// Autogenerated method: SwitchSettingsController.TextForValue
::CsString* GlobalNamespace::SwitchSettingsController::TextForValue(bool value) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>(this, "TextForValue", value));
}
// Autogenerated method: SwitchSettingsController.RefreshUI
void GlobalNamespace::SwitchSettingsController::RefreshUI() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RefreshUI"));
}
// Autogenerated method: SwitchSettingsController.OnEnable
void GlobalNamespace::SwitchSettingsController::OnEnable() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnEnable"));
}
// Autogenerated method: SwitchSettingsController.IncButtonPressed
void GlobalNamespace::SwitchSettingsController::IncButtonPressed() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "IncButtonPressed"));
}
// Autogenerated method: SwitchSettingsController.DecButtonPressed
void GlobalNamespace::SwitchSettingsController::DecButtonPressed() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DecButtonPressed"));
}
// Autogenerated method: SwitchSettingsController..ctor
GlobalNamespace::SwitchSettingsController* GlobalNamespace::SwitchSettingsController::New_ctor() {
  return (SwitchSettingsController*)THROW_UNLESS(il2cpp_utils::New("", "SwitchSettingsController"));
}
