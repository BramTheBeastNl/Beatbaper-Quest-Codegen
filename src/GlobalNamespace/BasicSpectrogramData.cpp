// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BasicSpectrogramData
#include "GlobalNamespace/BasicSpectrogramData.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kNumberOfSamples
int GlobalNamespace::BasicSpectrogramData::_get_kNumberOfSamples() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BasicSpectrogramData").WithContext("_get_kNumberOfSamples");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BasicSpectrogramData", "kNumberOfSamples"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kNumberOfSamples
void GlobalNamespace::BasicSpectrogramData::_set_kNumberOfSamples(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BasicSpectrogramData").WithContext("_set_kNumberOfSamples");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicSpectrogramData", "kNumberOfSamples", value));
}
// Autogenerated method: BasicSpectrogramData.get_Samples
::Array<float>* GlobalNamespace::BasicSpectrogramData::get_Samples() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BasicSpectrogramData").WithContext("get_Samples");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Samples", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<float>*, false>(this, ___internal__method);
}
// Autogenerated method: BasicSpectrogramData.get_ProcessedSamples
System::Collections::Generic::List_1<float>* GlobalNamespace::BasicSpectrogramData::get_ProcessedSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BasicSpectrogramData").WithContext("get_ProcessedSamples");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ProcessedSamples", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<float>*, false>(this, ___internal__method);
}
// Autogenerated method: BasicSpectrogramData.Awake
void GlobalNamespace::BasicSpectrogramData::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BasicSpectrogramData").WithContext("Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasicSpectrogramData.LateUpdate
void GlobalNamespace::BasicSpectrogramData::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BasicSpectrogramData").WithContext("LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasicSpectrogramData.ProcessSamples
void GlobalNamespace::BasicSpectrogramData::ProcessSamples(::Array<float>* sourceSamples, System::Collections::Generic::List_1<float>* processedSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BasicSpectrogramData").WithContext("ProcessSamples");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessSamples", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceSamples, processedSamples)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sourceSamples, processedSamples);
}
