// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutDirectionExtensions
#include "GlobalNamespace/NoteCutDirectionExtensions.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: NoteCutDirection
#include "GlobalNamespace/NoteCutDirection.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteCutDirectionExtensions.Direction
UnityEngine::Vector2 GlobalNamespace::NoteCutDirectionExtensions::Direction(GlobalNamespace::NoteCutDirection cutDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("NoteCutDirectionExtensions").WithContext("Direction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "NoteCutDirectionExtensions", il2cpp_utils::NoArgClass<UnityEngine::Vector2>(), "Direction", {}, ::il2cpp_utils::ExtractTypes(cutDirection)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cutDirection);
}
// Autogenerated method: NoteCutDirectionExtensions.RotationAngle
float GlobalNamespace::NoteCutDirectionExtensions::RotationAngle(GlobalNamespace::NoteCutDirection cutDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("NoteCutDirectionExtensions").WithContext("RotationAngle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "NoteCutDirectionExtensions", il2cpp_utils::NoArgClass<float>(), "RotationAngle", {}, ::il2cpp_utils::ExtractTypes(cutDirection)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cutDirection);
}
// Autogenerated method: NoteCutDirectionExtensions.Rotation
UnityEngine::Quaternion GlobalNamespace::NoteCutDirectionExtensions::Rotation(GlobalNamespace::NoteCutDirection cutDirection, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("NoteCutDirectionExtensions").WithContext("Rotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "NoteCutDirectionExtensions", il2cpp_utils::NoArgClass<UnityEngine::Quaternion>(), "Rotation", {}, ::il2cpp_utils::ExtractTypes(cutDirection, offset)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cutDirection, offset);
}
// Autogenerated method: NoteCutDirectionExtensions.IsMainDirection
bool GlobalNamespace::NoteCutDirectionExtensions::IsMainDirection(GlobalNamespace::NoteCutDirection cutDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("NoteCutDirectionExtensions").WithContext("IsMainDirection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "NoteCutDirectionExtensions", il2cpp_utils::NoArgClass<bool>(), "IsMainDirection", {}, ::il2cpp_utils::ExtractTypes(cutDirection)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cutDirection);
}
// Autogenerated method: NoteCutDirectionExtensions.MainNoteCutDirectionFromCutDirAngle
GlobalNamespace::NoteCutDirection GlobalNamespace::NoteCutDirectionExtensions::MainNoteCutDirectionFromCutDirAngle(float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("NoteCutDirectionExtensions").WithContext("MainNoteCutDirectionFromCutDirAngle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "NoteCutDirectionExtensions", il2cpp_utils::NoArgClass<GlobalNamespace::NoteCutDirection>(), "MainNoteCutDirectionFromCutDirAngle", {}, ::il2cpp_utils::ExtractTypes(angle)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteCutDirection, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, angle);
}
