// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: X509CertificateUtility
#include "GlobalNamespace/X509CertificateUtility.hpp"
// Including type: X509CertificateUtility/PasswordFinder
#include "GlobalNamespace/X509CertificateUtility_PasswordFinder.hpp"
// Including type: X509CertificateUtility/RSACertificateEncryptionProvider
#include "GlobalNamespace/X509CertificateUtility_RSACertificateEncryptionProvider.hpp"
// Including type: X509CertificateUtility/<>c
#include "GlobalNamespace/X509CertificateUtility_--c.hpp"
// Including type: ICertificateEncryptionProvider
#include "GlobalNamespace/ICertificateEncryptionProvider.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: X509CertificateUtility.GetCertificateEncryptionProvider
GlobalNamespace::ICertificateEncryptionProvider* GlobalNamespace::X509CertificateUtility::GetCertificateEncryptionProvider(::Il2CppString* privateKeyPem, ::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("X509CertificateUtility").WithContext("GetCertificateEncryptionProvider");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "X509CertificateUtility", "GetCertificateEncryptionProvider", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(privateKeyPem, password)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ICertificateEncryptionProvider*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, privateKeyPem, password);
}
// Autogenerated method: X509CertificateUtility.GetRSACertificateEncryptionProvider
GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider* GlobalNamespace::X509CertificateUtility::GetRSACertificateEncryptionProvider(::Il2CppString* privateKeyPem, GlobalNamespace::X509CertificateUtility::PasswordFinder* passwordFinder) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("X509CertificateUtility").WithContext("GetRSACertificateEncryptionProvider");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "X509CertificateUtility", "GetRSACertificateEncryptionProvider", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(privateKeyPem, passwordFinder)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::X509CertificateUtility::RSACertificateEncryptionProvider*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, privateKeyPem, passwordFinder);
}
// Autogenerated method: X509CertificateUtility.GetCertificateList
::Array<System::Security::Cryptography::X509Certificates::X509Certificate2*>* GlobalNamespace::X509CertificateUtility::GetCertificateList(::Il2CppString* certificatePem, ::Il2CppString* certificateChainPem) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("X509CertificateUtility").WithContext("GetCertificateList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "X509CertificateUtility", "GetCertificateList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(certificatePem, certificateChainPem)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Security::Cryptography::X509Certificates::X509Certificate2*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, certificatePem, certificateChainPem);
}
// Autogenerated method: X509CertificateUtility.ValidateCertificateChain
void GlobalNamespace::X509CertificateUtility::ValidateCertificateChain(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::Array<::Array<uint8_t>*>* certificateChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("X509CertificateUtility").WithContext("ValidateCertificateChain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "X509CertificateUtility", "ValidateCertificateChain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(certificate, certificateChain)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, certificate, certificateChain);
}
// Autogenerated method: X509CertificateUtility.ValidateCertificateChainUnity
void GlobalNamespace::X509CertificateUtility::ValidateCertificateChainUnity(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::Array<::Array<uint8_t>*>* certificateChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("X509CertificateUtility").WithContext("ValidateCertificateChainUnity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "X509CertificateUtility", "ValidateCertificateChainUnity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(certificate, certificateChain)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, certificate, certificateChain);
}
// Autogenerated method: X509CertificateUtility.ValidateCertificateChainDotNet
void GlobalNamespace::X509CertificateUtility::ValidateCertificateChainDotNet(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::Array<::Array<uint8_t>*>* certificateChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("X509CertificateUtility").WithContext("ValidateCertificateChainDotNet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "X509CertificateUtility", "ValidateCertificateChainDotNet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(certificate, certificateChain)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, certificate, certificateChain);
}
