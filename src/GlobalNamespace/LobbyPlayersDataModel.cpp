// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LobbyPlayersDataModel
#include "GlobalNamespace/LobbyPlayersDataModel.hpp"
// Including type: LobbyPlayersDataModel/<>c
#include "GlobalNamespace/LobbyPlayersDataModel_--c.hpp"
// Including type: LobbyPlayersDataModel/<SetOwnedSongPacks>d__42
#include "GlobalNamespace/LobbyPlayersDataModel_-SetOwnedSongPacks-d__42.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: ILobbyPlayerDataModel
#include "GlobalNamespace/ILobbyPlayerDataModel.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.IReadOnlyDictionary`2
#include "System/Collections/Generic/IReadOnlyDictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LobbyPlayersDataModel.GetOrCreateLobbyPlayerDataModel
GlobalNamespace::ILobbyPlayerDataModel* GlobalNamespace::LobbyPlayersDataModel::GetOrCreateLobbyPlayerDataModel(::Il2CppString* userId, bool& alreadyExists) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::ILobbyPlayerDataModel*>(this, "GetOrCreateLobbyPlayerDataModel", userId, alreadyExists));
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerBeatmapLevel
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerBeatmapLevel(::Il2CppString* userId, GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* characteristic) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetPlayerBeatmapLevel", userId, beatmapLevel, beatmapDifficulty, characteristic));
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerGameplayModifiers(::Il2CppString* userId, GlobalNamespace::GameplayModifiers* modifiers) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetPlayerGameplayModifiers", userId, modifiers));
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerIsActive
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsActive(::Il2CppString* userId, bool isActive) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetPlayerIsActive", userId, isActive));
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerIsReady
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsReady(::Il2CppString* userId, bool isReady) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetPlayerIsReady", userId, isReady));
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsInLobby(::Il2CppString* userId, bool isInLobby) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetPlayerIsInLobby", userId, isInLobby));
}
// Autogenerated method: LobbyPlayersDataModel.SetOwnedSongPacks
void GlobalNamespace::LobbyPlayersDataModel::SetOwnedSongPacks() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetOwnedSongPacks"));
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetSelectedBeatmap
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetSelectedBeatmap(::Il2CppString* userId) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMenuRpcManagerGetSelectedBeatmap", userId));
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetSelectedGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetSelectedGameplayModifiers(::Il2CppString* userId) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMenuRpcManagerGetSelectedGameplayModifiers", userId));
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetIsInLobby(::Il2CppString* userId) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMenuRpcManagerGetIsInLobby", userId));
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetIsReady
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetIsReady(::Il2CppString* userId) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMenuRpcManagerGetIsReady", userId));
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerSelectedBeatmap
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSelectedBeatmap(::Il2CppString* userId, GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMenuRpcManagerSelectedBeatmap", userId, beatmapId));
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerSelectedGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSelectedGameplayModifiers(::Il2CppString* userId, GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMenuRpcManagerSelectedGameplayModifiers", userId, gameplayModifiers));
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerClearSelectedGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerClearSelectedGameplayModifiers(::Il2CppString* userId) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMenuRpcManagerClearSelectedGameplayModifiers", userId));
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerClearBeatmap
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerClearBeatmap(::Il2CppString* userId) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMenuRpcManagerClearBeatmap", userId));
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerSetIsReady
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetIsReady(::Il2CppString* userId, bool isReady) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMenuRpcManagerSetIsReady", userId, isReady));
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerSetIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetIsInLobby(::Il2CppString* userId, bool isInLobby) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMenuRpcManagerSetIsInLobby", userId, isInLobby));
}
// Autogenerated method: LobbyPlayersDataModel.HandleMultiplayerSessionManagerPlayerStateChanged
void GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerStateChanged(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMultiplayerSessionManagerPlayerStateChanged", connectedPlayer));
}
// Autogenerated method: LobbyPlayersDataModel.HandleMultiplayerSessionManagerPlayerConnected
void GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerConnected(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMultiplayerSessionManagerPlayerConnected", connectedPlayer));
}
// Autogenerated method: LobbyPlayersDataModel.HandleMultiplayerSessionManagerPlayerDisconnected
void GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerDisconnected(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMultiplayerSessionManagerPlayerDisconnected", connectedPlayer));
}
// Autogenerated method: LobbyPlayersDataModel.NotifyModelChange
void GlobalNamespace::LobbyPlayersDataModel::NotifyModelChange(::Il2CppString* userId) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "NotifyModelChange", userId));
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetOwnedSongPacks
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetOwnedSongPacks(::Il2CppString* userId) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMenuRpcManagerGetOwnedSongPacks", userId));
}
// Autogenerated method: LobbyPlayersDataModel.get_localUserId
::Il2CppString* GlobalNamespace::LobbyPlayersDataModel::get_localUserId() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_localUserId"));
}
// Autogenerated method: LobbyPlayersDataModel.get_hostUserId
::Il2CppString* GlobalNamespace::LobbyPlayersDataModel::get_hostUserId() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_hostUserId"));
}
// Autogenerated method: LobbyPlayersDataModel.add_didChangeEvent
void GlobalNamespace::LobbyPlayersDataModel::add_didChangeEvent(System::Action_1<::Il2CppString*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_didChangeEvent", value));
}
// Autogenerated method: LobbyPlayersDataModel.remove_didChangeEvent
void GlobalNamespace::LobbyPlayersDataModel::remove_didChangeEvent(System::Action_1<::Il2CppString*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_didChangeEvent", value));
}
// Autogenerated method: LobbyPlayersDataModel.get_playersData
System::Collections::Generic::IReadOnlyDictionary_2<::Il2CppString*, GlobalNamespace::ILobbyPlayerDataModel*>* GlobalNamespace::LobbyPlayersDataModel::get_playersData() {
  return THROW_UNLESS((il2cpp_utils::RunMethod<System::Collections::Generic::IReadOnlyDictionary_2<::Il2CppString*, GlobalNamespace::ILobbyPlayerDataModel*>*>(this, "get_playersData")));
}
// Autogenerated method: LobbyPlayersDataModel.GetLobbyPlayerDataModel
GlobalNamespace::ILobbyPlayerDataModel* GlobalNamespace::LobbyPlayersDataModel::GetLobbyPlayerDataModel(::Il2CppString* userId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::ILobbyPlayerDataModel*>(this, "GetLobbyPlayerDataModel", userId));
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerBeatmapLevel
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::LobbyPlayersDataModel::GetPlayerBeatmapLevel(::Il2CppString* userId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::IPreviewBeatmapLevel*>(this, "GetPlayerBeatmapLevel", userId));
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerGameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::LobbyPlayersDataModel::GetPlayerGameplayModifiers(::Il2CppString* userId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::GameplayModifiers*>(this, "GetPlayerGameplayModifiers", userId));
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerBeatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::LobbyPlayersDataModel::GetPlayerBeatmapDifficulty(::Il2CppString* userId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::BeatmapDifficulty>(this, "GetPlayerBeatmapDifficulty", userId));
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerBeatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::LobbyPlayersDataModel::GetPlayerBeatmapCharacteristic(::Il2CppString* userId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::BeatmapCharacteristicSO*>(this, "GetPlayerBeatmapCharacteristic", userId));
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerIsActive
bool GlobalNamespace::LobbyPlayersDataModel::GetPlayerIsActive(::Il2CppString* userId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "GetPlayerIsActive", userId));
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerIsReady
bool GlobalNamespace::LobbyPlayersDataModel::GetPlayerIsReady(::Il2CppString* userId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "GetPlayerIsReady", userId));
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerIsInLobby
bool GlobalNamespace::LobbyPlayersDataModel::GetPlayerIsInLobby(::Il2CppString* userId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "GetPlayerIsInLobby", userId));
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerBeatmapLevel
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerBeatmapLevel(::Il2CppString* levelId, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* characteristic) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetLocalPlayerBeatmapLevel", levelId, beatmapDifficulty, characteristic));
}
// Autogenerated method: LobbyPlayersDataModel.ClearLocalPlayerBeatmapLevel
void GlobalNamespace::LobbyPlayersDataModel::ClearLocalPlayerBeatmapLevel() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearLocalPlayerBeatmapLevel"));
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerGameplayModifiers(GlobalNamespace::GameplayModifiers* modifiers) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetLocalPlayerGameplayModifiers", modifiers));
}
// Autogenerated method: LobbyPlayersDataModel.ClearLocalPlayerGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::ClearLocalPlayerGameplayModifiers() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearLocalPlayerGameplayModifiers"));
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsActive
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsActive(bool isActive) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetLocalPlayerIsActive", isActive));
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsReady
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsReady(bool isReady) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetLocalPlayerIsReady", isReady));
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsInLobby(bool isInLobby) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetLocalPlayerIsInLobby", isInLobby));
}
// Autogenerated method: LobbyPlayersDataModel.ClearData
void GlobalNamespace::LobbyPlayersDataModel::ClearData() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearData"));
}
// Autogenerated method: LobbyPlayersDataModel.ClearRecommendations
void GlobalNamespace::LobbyPlayersDataModel::ClearRecommendations() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearRecommendations"));
}
// Autogenerated method: LobbyPlayersDataModel.Activate
void GlobalNamespace::LobbyPlayersDataModel::Activate() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Activate"));
}
// Autogenerated method: LobbyPlayersDataModel.Deactivate
void GlobalNamespace::LobbyPlayersDataModel::Deactivate() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Deactivate"));
}
// Autogenerated method: LobbyPlayersDataModel.Dispose
void GlobalNamespace::LobbyPlayersDataModel::Dispose() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Dispose"));
}
void GlobalNamespace::LobbyPlayersDataModel::System_IDisposable_Dispose() {
  GlobalNamespace::LobbyPlayersDataModel::Dispose();
}
// Autogenerated method: LobbyPlayersDataModel..ctor
GlobalNamespace::LobbyPlayersDataModel* GlobalNamespace::LobbyPlayersDataModel::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<LobbyPlayersDataModel*>());
}
