// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseMasterServerReliableRequest
#include "GlobalNamespace/BaseMasterServerReliableRequest.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BaseMasterServerReliableRequest.set_requestId
void GlobalNamespace::BaseMasterServerReliableRequest::set_requestId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BaseMasterServerReliableRequest").WithContext("set_requestId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_requestId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseMasterServerReliableRequest.get_requestId
uint GlobalNamespace::BaseMasterServerReliableRequest::get_requestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BaseMasterServerReliableRequest").WithContext("get_requestId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_requestId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableRequest.Serialize
void GlobalNamespace::BaseMasterServerReliableRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BaseMasterServerReliableRequest").WithContext("Serialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
void GlobalNamespace::BaseMasterServerReliableRequest::LiteNetLib_Utils_INetSerializable_Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  GlobalNamespace::BaseMasterServerReliableRequest::Serialize(writer);
}
// Autogenerated method: BaseMasterServerReliableRequest.Deserialize
void GlobalNamespace::BaseMasterServerReliableRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BaseMasterServerReliableRequest").WithContext("Deserialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
void GlobalNamespace::BaseMasterServerReliableRequest::LiteNetLib_Utils_INetSerializable_Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  GlobalNamespace::BaseMasterServerReliableRequest::Deserialize(reader);
}
// Autogenerated method: BaseMasterServerReliableRequest.Release
void GlobalNamespace::BaseMasterServerReliableRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BaseMasterServerReliableRequest").WithContext("Release");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableRequest.MasterServer.IMasterServerReliableRequest.WithRequestId
MasterServer::IMasterServerReliableRequest* GlobalNamespace::BaseMasterServerReliableRequest::MasterServer_IMasterServerReliableRequest_WithRequestId(uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BaseMasterServerReliableRequest").WithContext("MasterServer.IMasterServerReliableRequest.WithRequestId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MasterServer.IMasterServerReliableRequest.WithRequestId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(requestId)));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerReliableRequest*, false>(this, ___internal__method, requestId);
}
