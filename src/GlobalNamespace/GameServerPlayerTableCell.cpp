// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerPlayerTableCell
#include "GlobalNamespace/GameServerPlayerTableCell.hpp"
// Including type: GameServerPlayerTableCell/<>c__DisplayClass26_0
#include "GlobalNamespace/GameServerPlayerTableCell_--c__DisplayClass26_0.hpp"
// Including type: GameServerPlayerTableCell/<SetBeatmapUseButtonEnabledAsync>d__32
#include "GlobalNamespace/GameServerPlayerTableCell_-SetBeatmapUseButtonEnabledAsync-d__32.hpp"
// Including type: HMUI.CurvedTextMeshPro
#include "HMUI/CurvedTextMeshPro.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: GameplayModifierInfoListItemsList
#include "GlobalNamespace/GameplayModifierInfoListItemsList.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.HoverHint
#include "HMUI/HoverHint.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: ILobbyPlayerDataModel
#include "GlobalNamespace/ILobbyPlayerDataModel.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameServerPlayerTableCell.add_kickPlayerEvent
void GlobalNamespace::GameServerPlayerTableCell::add_kickPlayerEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("GameServerPlayerTableCell").WithContext("add_kickPlayerEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "add_kickPlayerEvent", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.remove_kickPlayerEvent
void GlobalNamespace::GameServerPlayerTableCell::remove_kickPlayerEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("GameServerPlayerTableCell").WithContext("remove_kickPlayerEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "remove_kickPlayerEvent", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.add_useBeatmapEvent
void GlobalNamespace::GameServerPlayerTableCell::add_useBeatmapEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("GameServerPlayerTableCell").WithContext("add_useBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "add_useBeatmapEvent", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.remove_useBeatmapEvent
void GlobalNamespace::GameServerPlayerTableCell::remove_useBeatmapEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("GameServerPlayerTableCell").WithContext("remove_useBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "remove_useBeatmapEvent", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.add_useModifiersEvent
void GlobalNamespace::GameServerPlayerTableCell::add_useModifiersEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("GameServerPlayerTableCell").WithContext("add_useModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "add_useModifiersEvent", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.remove_useModifiersEvent
void GlobalNamespace::GameServerPlayerTableCell::remove_useModifiersEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("GameServerPlayerTableCell").WithContext("remove_useModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "remove_useModifiersEvent", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.SetData
void GlobalNamespace::GameServerPlayerTableCell::SetData(GlobalNamespace::IConnectedPlayer* connectedPlayer, GlobalNamespace::ILobbyPlayerDataModel* playerDataModel, bool isHost, System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* getLevelEntitlementTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("GameServerPlayerTableCell").WithContext("SetData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetData", {}, ::il2cpp_utils::ExtractTypes(connectedPlayer, playerDataModel, isHost, getLevelEntitlementTask)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer, playerDataModel, isHost, getLevelEntitlementTask);
}
// Autogenerated method: GameServerPlayerTableCell.Awake
void GlobalNamespace::GameServerPlayerTableCell::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("GameServerPlayerTableCell").WithContext("Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Awake", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell.HandleKickPlayerButtonPressed
void GlobalNamespace::GameServerPlayerTableCell::HandleKickPlayerButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("GameServerPlayerTableCell").WithContext("HandleKickPlayerButtonPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "HandleKickPlayerButtonPressed", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell.HandleUseBeatmapButtonPressed
void GlobalNamespace::GameServerPlayerTableCell::HandleUseBeatmapButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("GameServerPlayerTableCell").WithContext("HandleUseBeatmapButtonPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "HandleUseBeatmapButtonPressed", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell.HandleUseModifiersButtonPressed
void GlobalNamespace::GameServerPlayerTableCell::HandleUseModifiersButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("GameServerPlayerTableCell").WithContext("HandleUseModifiersButtonPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "HandleUseModifiersButtonPressed", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell.SetBeatmapUseButtonEnabledAsync
void GlobalNamespace::GameServerPlayerTableCell::SetBeatmapUseButtonEnabledAsync(System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* getLevelEntitlementTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("GameServerPlayerTableCell").WithContext("SetBeatmapUseButtonEnabledAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetBeatmapUseButtonEnabledAsync", {}, ::il2cpp_utils::ExtractTypes(getLevelEntitlementTask)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, getLevelEntitlementTask);
}
// Autogenerated method: GameServerPlayerTableCell..ctor
GlobalNamespace::GameServerPlayerTableCell* GlobalNamespace::GameServerPlayerTableCell::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("GameServerPlayerTableCell").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<GameServerPlayerTableCell*>());
}
