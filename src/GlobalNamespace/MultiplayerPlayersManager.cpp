// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerPlayersManager
#include "GlobalNamespace/MultiplayerPlayersManager.hpp"
// Including type: MultiplayerPlayersManager/<SwitchLocalPlayerToInactiveCoroutine>d__52
#include "GlobalNamespace/MultiplayerPlayersManager_-SwitchLocalPlayerToInactiveCoroutine-d__52.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: BeatmapObjectSpawnCenter
#include "GlobalNamespace/BeatmapObjectSpawnCenter.hpp"
// Including type: MultiplayerLayoutProvider
#include "GlobalNamespace/MultiplayerLayoutProvider.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
// Including type: PlayersAtGameStartModel
#include "GlobalNamespace/PlayersAtGameStartModel.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IStartSeekSongControllerProvider
#include "GlobalNamespace/IStartSeekSongControllerProvider.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: MultiplayerPlayerStartState
#include "GlobalNamespace/MultiplayerPlayerStartState.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: MultiplayerPlayerLayout
#include "GlobalNamespace/MultiplayerPlayerLayout.hpp"
// Including type: MultiplayerLocalActivePlayerFacade/Factory
#include "GlobalNamespace/MultiplayerLocalActivePlayerFacade_Factory.hpp"
// Including type: MultiplayerLocalInactivePlayerFacade/Factory
#include "GlobalNamespace/MultiplayerLocalInactivePlayerFacade_Factory.hpp"
// Including type: MultiplayerConnectedPlayerFacade/Factory
#include "GlobalNamespace/MultiplayerConnectedPlayerFacade_Factory.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerPlayersManager.get_playerSpawningFinished
bool GlobalNamespace::MultiplayerPlayersManager::get_playerSpawningFinished() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_playerSpawningFinished"));
}
// Autogenerated method: MultiplayerPlayersManager.set_playerSpawningFinished
void GlobalNamespace::MultiplayerPlayersManager::set_playerSpawningFinished(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_playerSpawningFinished", value));
}
// Autogenerated method: MultiplayerPlayersManager.get_allActivePlayers
System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::MultiplayerPlayersManager::get_allActivePlayers() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>*>(this, "get_allActivePlayers"));
}
// Autogenerated method: MultiplayerPlayersManager.get_localPlayerStartSeekSongController
GlobalNamespace::IStartSeekSongControllerProvider* GlobalNamespace::MultiplayerPlayersManager::get_localPlayerStartSeekSongController() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::IStartSeekSongControllerProvider*>(this, "get_localPlayerStartSeekSongController"));
}
// Autogenerated method: MultiplayerPlayersManager.get_activeLocalPlayerFacade
GlobalNamespace::MultiplayerLocalActivePlayerFacade* GlobalNamespace::MultiplayerPlayersManager::get_activeLocalPlayerFacade() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::MultiplayerLocalActivePlayerFacade*>(this, "get_activeLocalPlayerFacade"));
}
// Autogenerated method: MultiplayerPlayersManager.get_inactivePlayerFacade
GlobalNamespace::MultiplayerLocalInactivePlayerFacade* GlobalNamespace::MultiplayerPlayersManager::get_inactivePlayerFacade() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::MultiplayerLocalInactivePlayerFacade*>(this, "get_inactivePlayerFacade"));
}
// Autogenerated method: MultiplayerPlayersManager.get_localPlayerTransform
UnityEngine::Transform* GlobalNamespace::MultiplayerPlayersManager::get_localPlayerTransform() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Transform*>(this, "get_localPlayerTransform"));
}
// Autogenerated method: MultiplayerPlayersManager.add_playerSpawningDidFinishEvent
void GlobalNamespace::MultiplayerPlayersManager::add_playerSpawningDidFinishEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_playerSpawningDidFinishEvent", value));
}
// Autogenerated method: MultiplayerPlayersManager.remove_playerSpawningDidFinishEvent
void GlobalNamespace::MultiplayerPlayersManager::remove_playerSpawningDidFinishEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_playerSpawningDidFinishEvent", value));
}
// Autogenerated method: MultiplayerPlayersManager.add_didSwitchPlayerToInactiveEvent
void GlobalNamespace::MultiplayerPlayersManager::add_didSwitchPlayerToInactiveEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_didSwitchPlayerToInactiveEvent", value));
}
// Autogenerated method: MultiplayerPlayersManager.remove_didSwitchPlayerToInactiveEvent
void GlobalNamespace::MultiplayerPlayersManager::remove_didSwitchPlayerToInactiveEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_didSwitchPlayerToInactiveEvent", value));
}
// Autogenerated method: MultiplayerPlayersManager.SpawnPlayers
void GlobalNamespace::MultiplayerPlayersManager::SpawnPlayers(GlobalNamespace::MultiplayerPlayerStartState localPlayerStartState) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SpawnPlayers", localPlayerStartState));
}
// Autogenerated method: MultiplayerPlayersManager.TryGetConnectedPlayerController
bool GlobalNamespace::MultiplayerPlayersManager::TryGetConnectedPlayerController(::Il2CppString* userId, GlobalNamespace::MultiplayerConnectedPlayerFacade*& connectedPlayerController) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryGetConnectedPlayerController", userId, connectedPlayerController));
}
// Autogenerated method: MultiplayerPlayersManager.TryGetConnectedCenterFacingRotation
bool GlobalNamespace::MultiplayerPlayersManager::TryGetConnectedCenterFacingRotation(::Il2CppString* userId, float& centerFacingRotation) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryGetConnectedCenterFacingRotation", userId, centerFacingRotation));
}
// Autogenerated method: MultiplayerPlayersManager.SwitchLocalPlayerToInactive
void GlobalNamespace::MultiplayerPlayersManager::SwitchLocalPlayerToInactive() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SwitchLocalPlayerToInactive"));
}
// Autogenerated method: MultiplayerPlayersManager.ReportLocalPlayerNetworkDidFailed
void GlobalNamespace::MultiplayerPlayersManager::ReportLocalPlayerNetworkDidFailed(GlobalNamespace::PlayerNetworkFailReason failReason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ReportLocalPlayerNetworkDidFailed", failReason));
}
// Autogenerated method: MultiplayerPlayersManager.SwitchLocalPlayerToInactiveCoroutine
System::Collections::IEnumerator* GlobalNamespace::MultiplayerPlayersManager::SwitchLocalPlayerToInactiveCoroutine() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::IEnumerator*>(this, "SwitchLocalPlayerToInactiveCoroutine"));
}
// Autogenerated method: MultiplayerPlayersManager.BindPlayerFactories
void GlobalNamespace::MultiplayerPlayersManager::BindPlayerFactories(GlobalNamespace::MultiplayerPlayerLayout layout) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "BindPlayerFactories", layout));
}
// Autogenerated method: MultiplayerPlayersManager.HandlePlayerDidFinish
void GlobalNamespace::MultiplayerPlayersManager::HandlePlayerDidFinish(GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePlayerDidFinish", levelCompletionResults));
}
// Autogenerated method: MultiplayerPlayersManager.HandlePlayerNetworkDidFailed
void GlobalNamespace::MultiplayerPlayersManager::HandlePlayerNetworkDidFailed(GlobalNamespace::PlayerNetworkFailReason failReason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePlayerNetworkDidFailed", failReason));
}
// Autogenerated method: MultiplayerPlayersManager.add_playerDidFinishEvent
void GlobalNamespace::MultiplayerPlayersManager::add_playerDidFinishEvent(System::Action_1<GlobalNamespace::LevelCompletionResults*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_playerDidFinishEvent", value));
}
// Autogenerated method: MultiplayerPlayersManager.remove_playerDidFinishEvent
void GlobalNamespace::MultiplayerPlayersManager::remove_playerDidFinishEvent(System::Action_1<GlobalNamespace::LevelCompletionResults*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_playerDidFinishEvent", value));
}
// Autogenerated method: MultiplayerPlayersManager.add_playerNetworkDidFailedEvent
void GlobalNamespace::MultiplayerPlayersManager::add_playerNetworkDidFailedEvent(System::Action_1<GlobalNamespace::PlayerNetworkFailReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_playerNetworkDidFailedEvent", value));
}
// Autogenerated method: MultiplayerPlayersManager.remove_playerNetworkDidFailedEvent
void GlobalNamespace::MultiplayerPlayersManager::remove_playerNetworkDidFailedEvent(System::Action_1<GlobalNamespace::PlayerNetworkFailReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_playerNetworkDidFailedEvent", value));
}
// Autogenerated method: MultiplayerPlayersManager..ctor
GlobalNamespace::MultiplayerPlayersManager* GlobalNamespace::MultiplayerPlayersManager::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<MultiplayerPlayersManager*>());
}
