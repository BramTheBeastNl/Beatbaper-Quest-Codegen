// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainSystemInit
#include "GlobalNamespace/MainSystemInit.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: AudioManagerSO
#include "GlobalNamespace/AudioManagerSO.hpp"
// Including type: AvatarDataModel
#include "GlobalNamespace/AvatarDataModel.hpp"
// Including type: AvatarPartsModelSO
#include "GlobalNamespace/AvatarPartsModelSO.hpp"
// Including type: SkinColorSetSO
#include "GlobalNamespace/SkinColorSetSO.hpp"
// Including type: MirrorRendererGraphicsSettingsPresets
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets.hpp"
// Including type: MainEffectGraphicsSettingsPresetsSO
#include "GlobalNamespace/MainEffectGraphicsSettingsPresetsSO.hpp"
// Including type: BloomPrePassGraphicsSettingsPresetsSO
#include "GlobalNamespace/BloomPrePassGraphicsSettingsPresetsSO.hpp"
// Including type: MirrorRendererSO
#include "GlobalNamespace/MirrorRendererSO.hpp"
// Including type: MainEffectContainerSO
#include "GlobalNamespace/MainEffectContainerSO.hpp"
// Including type: BloomPrePassEffectContainerSO
#include "GlobalNamespace/BloomPrePassEffectContainerSO.hpp"
// Including type: LanguageSettingsPresetsSO
#include "GlobalNamespace/LanguageSettingsPresetsSO.hpp"
// Including type: AppStaticSettingsSO
#include "GlobalNamespace/AppStaticSettingsSO.hpp"
// Including type: TimeHelper
#include "GlobalNamespace/TimeHelper.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: CampaignProgressModel
#include "GlobalNamespace/CampaignProgressModel.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: CustomLevelLoader
#include "GlobalNamespace/CustomLevelLoader.hpp"
// Including type: CachedMediaAsyncLoader
#include "GlobalNamespace/CachedMediaAsyncLoader.hpp"
// Including type: ExternalCamerasManager
#include "GlobalNamespace/ExternalCamerasManager.hpp"
// Including type: MultiplayerSessionManager
#include "GlobalNamespace/MultiplayerSessionManager.hpp"
// Including type: LocalNetworkPlayerModel
#include "GlobalNamespace/LocalNetworkPlayerModel.hpp"
// Including type: UnifiedNetworkPlayerModel
#include "GlobalNamespace/UnifiedNetworkPlayerModel.hpp"
// Including type: NetworkPlayerEntitlementChecker
#include "GlobalNamespace/NetworkPlayerEntitlementChecker.hpp"
// Including type: HapticFeedbackController
#include "GlobalNamespace/HapticFeedbackController.hpp"
// Including type: Tweening.TweeningManager
#include "Tweening/TweeningManager.hpp"
// Including type: NodePoseSyncStateManager
#include "GlobalNamespace/NodePoseSyncStateManager.hpp"
// Including type: AlwaysOwnedContentContainerSO
#include "GlobalNamespace/AlwaysOwnedContentContainerSO.hpp"
// Including type: PSVRHelper
#include "GlobalNamespace/PSVRHelper.hpp"
// Including type: OculusVRHelper
#include "GlobalNamespace/OculusVRHelper.hpp"
// Including type: OpenVRHelper
#include "GlobalNamespace/OpenVRHelper.hpp"
// Including type: DevicelessVRHelper
#include "GlobalNamespace/DevicelessVRHelper.hpp"
// Including type: TestPlatformAdditionalContentModel
#include "GlobalNamespace/TestPlatformAdditionalContentModel.hpp"
// Including type: PS4PlatformAdditionalContentModel
#include "GlobalNamespace/PS4PlatformAdditionalContentModel.hpp"
// Including type: OculusPlatformAdditionalContentModel
#include "GlobalNamespace/OculusPlatformAdditionalContentModel.hpp"
// Including type: SteamPlatformAdditionalContentModel
#include "GlobalNamespace/SteamPlatformAdditionalContentModel.hpp"
// Including type: SteamLevelProductsModelSO
#include "GlobalNamespace/SteamLevelProductsModelSO.hpp"
// Including type: OculusLevelProductsModelSO
#include "GlobalNamespace/OculusLevelProductsModelSO.hpp"
// Including type: PS4LevelProductsModelSO
#include "GlobalNamespace/PS4LevelProductsModelSO.hpp"
// Including type: PS4LeaderboardIdsModelSO
#include "GlobalNamespace/PS4LeaderboardIdsModelSO.hpp"
// Including type: OnlineServices.ServerManager
#include "OnlineServices/ServerManager.hpp"
// Including type: RichPresenceManager
#include "GlobalNamespace/RichPresenceManager.hpp"
// Including type: NetworkConfigSO
#include "GlobalNamespace/NetworkConfigSO.hpp"
// Including type: MultiplayerMockSettings
#include "GlobalNamespace/MultiplayerMockSettings.hpp"
// Including type: SteamNetworkPlayerModel
#include "GlobalNamespace/SteamNetworkPlayerModel.hpp"
// Including type: OculusNetworkPlayerModel
#include "GlobalNamespace/OculusNetworkPlayerModel.hpp"
// Including type: PS4NetworkPlayerModel
#include "GlobalNamespace/PS4NetworkPlayerModel.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: LeaderboardScoreUploader
#include "GlobalNamespace/LeaderboardScoreUploader.hpp"
// Including type: PlatformLeaderboardsModel
#include "GlobalNamespace/PlatformLeaderboardsModel.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MainSystemInit.Init
void GlobalNamespace::MainSystemInit::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MainSystemInit").WithContext("Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainSystemInit.InstallBindings
void GlobalNamespace::MainSystemInit::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MainSystemInit").WithContext("InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: MainSystemInit.InstallRichPresence
void GlobalNamespace::MainSystemInit::InstallRichPresence(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MainSystemInit").WithContext("InstallRichPresence");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallRichPresence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: MainSystemInit.InstallOculusDestinationBindings
void GlobalNamespace::MainSystemInit::InstallOculusDestinationBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MainSystemInit").WithContext("InstallOculusDestinationBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallOculusDestinationBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: MainSystemInit.InstallPlatformLeaderboardsModel
void GlobalNamespace::MainSystemInit::InstallPlatformLeaderboardsModel(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MainSystemInit").WithContext("InstallPlatformLeaderboardsModel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallPlatformLeaderboardsModel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
