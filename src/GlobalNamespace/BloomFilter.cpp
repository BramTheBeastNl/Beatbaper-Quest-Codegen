// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BloomFilter
#include "GlobalNamespace/BloomFilter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kHashCount
int GlobalNamespace::BloomFilter::_get_kHashCount() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomFilter", "kHashCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kHashCount
void GlobalNamespace::BloomFilter::_set_kHashCount(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomFilter", "kHashCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 shortStringLength
int GlobalNamespace::BloomFilter::_get_shortStringLength() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomFilter", "shortStringLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 shortStringLength
void GlobalNamespace::BloomFilter::_set_shortStringLength(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomFilter", "shortStringLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 longStringLength
int GlobalNamespace::BloomFilter::_get_longStringLength() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomFilter", "longStringLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 longStringLength
void GlobalNamespace::BloomFilter::_set_longStringLength(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomFilter", "longStringLength", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char[] _tempBuffer
::Array<::Il2CppChar>* GlobalNamespace::BloomFilter::_get__tempBuffer() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("", "BloomFilter", "_tempBuffer"));
}
// Autogenerated static field setter
// Set static field: static private System.Char[] _tempBuffer
void GlobalNamespace::BloomFilter::_set__tempBuffer(::Array<::Il2CppChar>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomFilter", "_tempBuffer", value));
}
// Autogenerated method: BloomFilter.NoDomainReloadInit
void GlobalNamespace::BloomFilter::NoDomainReloadInit() {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "BloomFilter", "NoDomainReloadInit"));
}
// Autogenerated method: BloomFilter..ctor
GlobalNamespace::BloomFilter::BloomFilter(::Il2CppString* packId) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, ".ctor", packId));
}
// Autogenerated method: BloomFilter..ctor
// ABORTED elsewhere.  GlobalNamespace::BloomFilter::BloomFilter(uint64_t top, uint64_t bottom)
// Autogenerated method: BloomFilter.get_all
GlobalNamespace::BloomFilter GlobalNamespace::BloomFilter::get_all() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::BloomFilter>("", "BloomFilter", "get_all"));
}
// Autogenerated method: BloomFilter.MurmurHash2
uint GlobalNamespace::BloomFilter::MurmurHash2(::Il2CppString* key) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("", "BloomFilter", "MurmurHash2", key));
}
// Autogenerated method: BloomFilter.Contains
bool GlobalNamespace::BloomFilter::Contains(GlobalNamespace::BloomFilter other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Contains", other));
}
// Autogenerated method: BloomFilter.DifferenceFrom
int GlobalNamespace::BloomFilter::DifferenceFrom(GlobalNamespace::BloomFilter other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "DifferenceFrom", other));
}
// Autogenerated method: BloomFilter.Deserialize
GlobalNamespace::BloomFilter GlobalNamespace::BloomFilter::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::BloomFilter>("", "BloomFilter", "Deserialize", reader));
}
// Autogenerated method: BloomFilter.ToShortString
::Il2CppString* GlobalNamespace::BloomFilter::ToShortString() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(*this, "ToShortString"));
}
// Autogenerated method: BloomFilter.ToBytes
::Array<uint8_t>* GlobalNamespace::BloomFilter::ToBytes() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<uint8_t>*>(*this, "ToBytes"));
}
// Autogenerated method: BloomFilter.TryParse
bool GlobalNamespace::BloomFilter::TryParse(::Il2CppString* stringSerializedMask, GlobalNamespace::BloomFilter& bloomFilter) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "BloomFilter", "TryParse", stringSerializedMask, bloomFilter));
}
// Autogenerated method: BloomFilter.TryParse
bool GlobalNamespace::BloomFilter::TryParse(::Il2CppString* stringSerializedMask, int offset, int length, GlobalNamespace::BloomFilter& bloomFilter) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "BloomFilter", "TryParse", stringSerializedMask, offset, length, bloomFilter));
}
// Autogenerated method: BloomFilter.FromBytes
GlobalNamespace::BloomFilter GlobalNamespace::BloomFilter::FromBytes(::Array<uint8_t>* bytes, int offset) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::BloomFilter>("", "BloomFilter", "FromBytes", bytes, offset));
}
// Autogenerated method: BloomFilter.GetHexDigit
uint GlobalNamespace::BloomFilter::GetHexDigit(::Il2CppChar c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("", "BloomFilter", "GetHexDigit", c));
}
// Autogenerated method: BloomFilter.GetBase64Digit
uint GlobalNamespace::BloomFilter::GetBase64Digit(::Il2CppChar c) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>("", "BloomFilter", "GetBase64Digit", c));
}
// Autogenerated method: BloomFilter.GetBase64Char
::Il2CppChar GlobalNamespace::BloomFilter::GetBase64Char(uint64_t digit) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppChar>("", "BloomFilter", "GetBase64Char", digit));
}
// Autogenerated method: BloomFilter.Serialize
void GlobalNamespace::BloomFilter::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "Serialize", writer));
}
// Autogenerated method: BloomFilter.CreateFromSerializedData
GlobalNamespace::BloomFilter GlobalNamespace::BloomFilter::CreateFromSerializedData(LiteNetLib::Utils::NetDataReader* reader) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::BloomFilter>(*this, "CreateFromSerializedData", reader));
}
GlobalNamespace::BloomFilter GlobalNamespace::BloomFilter::LiteNetLib_Utils_INetImmutableSerializable_1_CreateFromSerializedData(LiteNetLib::Utils::NetDataReader* reader) {
  return GlobalNamespace::BloomFilter::CreateFromSerializedData(reader);
}
// Autogenerated method: BloomFilter.ToString
::Il2CppString* GlobalNamespace::BloomFilter::ToString() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(*this, "ToString"));
}
// Autogenerated method: BloomFilter.Equals
bool GlobalNamespace::BloomFilter::Equals(GlobalNamespace::BloomFilter other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", other));
}
// Autogenerated method: BloomFilter.Equals
bool GlobalNamespace::BloomFilter::Equals(::Il2CppObject* obj) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", obj));
}
// Autogenerated method: BloomFilter.GetHashCode
int GlobalNamespace::BloomFilter::GetHashCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "GetHashCode"));
}
// Autogenerated method: BloomFilter.op_BitwiseOr
GlobalNamespace::BloomFilter GlobalNamespace::operator|(const GlobalNamespace::BloomFilter& a, const GlobalNamespace::BloomFilter& b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::BloomFilter>("", "BloomFilter", "op_BitwiseOr", a, b));
}
// Autogenerated method: BloomFilter.op_BitwiseAnd
GlobalNamespace::BloomFilter GlobalNamespace::operator&(const GlobalNamespace::BloomFilter& a, const GlobalNamespace::BloomFilter& b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::BloomFilter>("", "BloomFilter", "op_BitwiseAnd", a, b));
}
// Autogenerated method: BloomFilter.op_Equality
bool GlobalNamespace::operator ==(const GlobalNamespace::BloomFilter& a, const GlobalNamespace::BloomFilter& b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "BloomFilter", "op_Equality", a, b));
}
// Autogenerated method: BloomFilter.op_Inequality
bool GlobalNamespace::operator !=(const GlobalNamespace::BloomFilter& a, const GlobalNamespace::BloomFilter& b) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "BloomFilter", "op_Inequality", a, b));
}
