// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DifficultyTableView
#include "GlobalNamespace\DifficultyTableView.hpp"
// Including type: DifficultyTableCell
#include "GlobalNamespace\DifficultyTableCell.hpp"
// Including type: System.Action`2
#include "System\Action_2.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace\IDifficultyBeatmap.hpp"
// Including type: System.String
#include "System\String.hpp"
// Including type: HMUI.TableCell
#include "HMUI\TableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellIdentifier
::Il2CppString* GlobalNamespace::DifficultyTableView::_get_kCellIdentifier() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "DifficultyTableView", "kCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellIdentifier
void GlobalNamespace::DifficultyTableView::_set_kCellIdentifier(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DifficultyTableView", "kCellIdentifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kNonSelectableCellIdentifier
::Il2CppString* GlobalNamespace::DifficultyTableView::_get_kNonSelectableCellIdentifier() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "DifficultyTableView", "kNonSelectableCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNonSelectableCellIdentifier
void GlobalNamespace::DifficultyTableView::_set_kNonSelectableCellIdentifier(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DifficultyTableView", "kNonSelectableCellIdentifier", value));
}
// Autogenerated method: DifficultyTableView.add_didSelectRow
void GlobalNamespace::DifficultyTableView::add_didSelectRow(System::Action_2<GlobalNamespace::DifficultyTableView*, int>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_didSelectRow", value));
}
// Autogenerated method: DifficultyTableView.remove_didSelectRow
void GlobalNamespace::DifficultyTableView::remove_didSelectRow(System::Action_2<GlobalNamespace::DifficultyTableView*, int>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_didSelectRow", value));
}
// Autogenerated method: DifficultyTableView.Init
void GlobalNamespace::DifficultyTableView::Init(::Array<GlobalNamespace::IDifficultyBeatmap*>* difficultyBeatmaps) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Init", difficultyBeatmaps));
}
// Autogenerated method: DifficultyTableView.SetDifficultyBeatmaps
void GlobalNamespace::DifficultyTableView::SetDifficultyBeatmaps(::Array<GlobalNamespace::IDifficultyBeatmap*>* difficultyBeatmaps) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetDifficultyBeatmaps", difficultyBeatmaps));
}
// Autogenerated method: DifficultyTableView.HandleDidSelectRowEvent
void GlobalNamespace::DifficultyTableView::HandleDidSelectRowEvent(HMUI::TableView* tableView, int row) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleDidSelectRowEvent", tableView, row));
}
// Autogenerated method: DifficultyTableView.SelectRow
void GlobalNamespace::DifficultyTableView::SelectRow(int row, bool callbackTable) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SelectRow", row, callbackTable));
}
// Autogenerated method: DifficultyTableView.SelectRow
void GlobalNamespace::DifficultyTableView::SelectRow(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, bool callbackTable) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SelectRow", difficultyBeatmap, callbackTable));
}
// Autogenerated method: DifficultyTableView.ClearSelection
void GlobalNamespace::DifficultyTableView::ClearSelection() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearSelection"));
}
// Autogenerated method: DifficultyTableView.CellSize
float GlobalNamespace::DifficultyTableView::CellSize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "CellSize"));
}
// Autogenerated method: DifficultyTableView.NumberOfCells
int GlobalNamespace::DifficultyTableView::NumberOfCells() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "NumberOfCells"));
}
// Autogenerated method: DifficultyTableView.CellForIdx
HMUI::TableCell* GlobalNamespace::DifficultyTableView::CellForIdx(HMUI::TableView* tableView, int row) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<HMUI::TableCell*>(this, "CellForIdx", tableView, row));
}
// Autogenerated method: DifficultyTableView..ctor
GlobalNamespace::DifficultyTableView* GlobalNamespace::DifficultyTableView::New_ctor() {
  return (DifficultyTableView*)THROW_UNLESS(il2cpp_utils::New("", "DifficultyTableView"));
}
