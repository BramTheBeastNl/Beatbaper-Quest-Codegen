// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetEaseArcadeFlowCoordinator
#include "GlobalNamespace/NetEaseArcadeFlowCoordinator.hpp"
// Including type: NetEaseArcadeFlowCoordinator/<LogoutAsync>d__22
#include "GlobalNamespace/NetEaseArcadeFlowCoordinator_-LogoutAsync-d__22.hpp"
// Including type: NetEaseArcadeFlowCoordinator/<>c__DisplayClass27_0
#include "GlobalNamespace/NetEaseArcadeFlowCoordinator_--c__DisplayClass27_0.hpp"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: NetEaseLeaderboardViewController
#include "GlobalNamespace/NetEaseLeaderboardViewController.hpp"
// Including type: TabBarViewController
#include "GlobalNamespace/TabBarViewController.hpp"
// Including type: NetEaseManager
#include "GlobalNamespace/NetEaseManager.hpp"
// Including type: MenuLightsManager
#include "GlobalNamespace/MenuLightsManager.hpp"
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
// Including type: LocalLeaderboardViewController
#include "GlobalNamespace/LocalLeaderboardViewController.hpp"
// Including type: LeaderboardViewController
#include "GlobalNamespace/LeaderboardViewController.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetEaseArcadeFlowCoordinator.ProcessScore
void GlobalNamespace::NetEaseArcadeFlowCoordinator::ProcessScore(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::GameplayModifiers* gameplayModifiers, bool practice) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ProcessScore", levelCompletionResults, difficultyBeatmap, gameplayModifiers, practice));
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.AddScoreToLeaderboards
void GlobalNamespace::NetEaseArcadeFlowCoordinator::AddScoreToLeaderboards(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::GameplayModifiers* gameplayModifiers, bool practice) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddScoreToLeaderboards", levelCompletionResults, difficultyBeatmap, gameplayModifiers, practice));
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.LogoutAsync
void GlobalNamespace::NetEaseArcadeFlowCoordinator::LogoutAsync() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LogoutAsync"));
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.HandleHowToPlayViewControllerDidFinish
void GlobalNamespace::NetEaseArcadeFlowCoordinator::HandleHowToPlayViewControllerDidFinish(GlobalNamespace::HowToPlayViewController::HowToPlayOptions howToPlayOptions) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleHowToPlayViewControllerDidFinish", howToPlayOptions));
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.HandleHowToPlayTabSelected
void GlobalNamespace::NetEaseArcadeFlowCoordinator::HandleHowToPlayTabSelected() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleHowToPlayTabSelected"));
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.HandleLogoutTabWasSelected
void GlobalNamespace::NetEaseArcadeFlowCoordinator::HandleLogoutTabWasSelected() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleLogoutTabWasSelected"));
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.HandleResultsViewControllerContinueButtonPressed
void GlobalNamespace::NetEaseArcadeFlowCoordinator::HandleResultsViewControllerContinueButtonPressed(GlobalNamespace::ResultsViewController* viewController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleResultsViewControllerContinueButtonPressed", viewController));
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.HandleResultsViewControllerRestartButtonPressed
void GlobalNamespace::NetEaseArcadeFlowCoordinator::HandleResultsViewControllerRestartButtonPressed(GlobalNamespace::ResultsViewController* resultsViewController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleResultsViewControllerRestartButtonPressed", resultsViewController));
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.<SinglePlayerLevelSelectionFlowCoordinatorDidActivate>b__17_0
void GlobalNamespace::NetEaseArcadeFlowCoordinator::$SinglePlayerLevelSelectionFlowCoordinatorDidActivate$b__17_0() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<SinglePlayerLevelSelectionFlowCoordinatorDidActivate>b__17_0"));
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.<HandleHowToPlayTabSelected>b__24_0
void GlobalNamespace::NetEaseArcadeFlowCoordinator::$HandleHowToPlayTabSelected$b__24_0() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<HandleHowToPlayTabSelected>b__24_0"));
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.get_gameMode
::Il2CppString* GlobalNamespace::NetEaseArcadeFlowCoordinator::get_gameMode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_gameMode"));
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.get_leaderboardViewController
GlobalNamespace::LeaderboardViewController* GlobalNamespace::NetEaseArcadeFlowCoordinator::get_leaderboardViewController() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::LeaderboardViewController*>(this, "get_leaderboardViewController"));
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.get_initialTopScreenViewController
HMUI::ViewController* GlobalNamespace::NetEaseArcadeFlowCoordinator::get_initialTopScreenViewController() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<HMUI::ViewController*>(this, "get_initialTopScreenViewController"));
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.get_showPlayerStatsInDetailView
bool GlobalNamespace::NetEaseArcadeFlowCoordinator::get_showPlayerStatsInDetailView() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_showPlayerStatsInDetailView"));
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidActivate
void GlobalNamespace::NetEaseArcadeFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate(bool firstActivation, bool addedToHierarchy) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidActivate", firstActivation, addedToHierarchy));
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate
void GlobalNamespace::NetEaseArcadeFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate(bool removedFromHierarchy) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate", removedFromHierarchy));
}
// Autogenerated method: NetEaseArcadeFlowCoordinator.ProcessLevelCompletionResultsAfterLevelDidFinish
void GlobalNamespace::NetEaseArcadeFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::GameplayModifiers* gameplayModifiers, bool practice) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ProcessLevelCompletionResultsAfterLevelDidFinish", levelCompletionResults, difficultyBeatmap, gameplayModifiers, practice));
}
// Autogenerated method: NetEaseArcadeFlowCoordinator..ctor
GlobalNamespace::NetEaseArcadeFlowCoordinator* GlobalNamespace::NetEaseArcadeFlowCoordinator::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<NetEaseArcadeFlowCoordinator*>());
}
