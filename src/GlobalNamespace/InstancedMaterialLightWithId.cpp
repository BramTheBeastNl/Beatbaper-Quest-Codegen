// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InstancedMaterialLightWithId
#include "GlobalNamespace/InstancedMaterialLightWithId.hpp"
// Including type: MaterialPropertyBlockColorSetter
#include "GlobalNamespace/MaterialPropertyBlockColorSetter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: InstancedMaterialLightWithId.OnEnable
void GlobalNamespace::InstancedMaterialLightWithId::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("InstancedMaterialLightWithId").WithContext("OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnEnable", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: InstancedMaterialLightWithId.ColorWasSet
void GlobalNamespace::InstancedMaterialLightWithId::ColorWasSet(UnityEngine::Color newColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("InstancedMaterialLightWithId").WithContext("ColorWasSet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ColorWasSet", {}, ::il2cpp_utils::ExtractTypes(newColor)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newColor);
}
// Autogenerated method: InstancedMaterialLightWithId..ctor
GlobalNamespace::InstancedMaterialLightWithId* GlobalNamespace::InstancedMaterialLightWithId::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("InstancedMaterialLightWithId").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<InstancedMaterialLightWithId*>());
}
