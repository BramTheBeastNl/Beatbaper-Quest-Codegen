// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLocalInactivePlayerSongSyncController
#include "GlobalNamespace/MultiplayerLocalInactivePlayerSongSyncController.hpp"
// Including type: MultiplayerLocalInactivePlayerSongSyncController/InitData
#include "GlobalNamespace/MultiplayerLocalInactivePlayerSongSyncController_InitData.hpp"
// Including type: CrossFadeAudioSource
#include "GlobalNamespace/CrossFadeAudioSource.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IMultiplayerObservable
#include "GlobalNamespace/IMultiplayerObservable.hpp"
// Including type: UnityEngine.WaitUntil
#include "UnityEngine/WaitUntil.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kReSyncThreshold
float GlobalNamespace::MultiplayerLocalInactivePlayerSongSyncController::_get_kReSyncThreshold() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalInactivePlayerSongSyncController").WithContext("_get_kReSyncThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MultiplayerLocalInactivePlayerSongSyncController", "kReSyncThreshold"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kReSyncThreshold
void GlobalNamespace::MultiplayerLocalInactivePlayerSongSyncController::_set_kReSyncThreshold(float value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalInactivePlayerSongSyncController").WithContext("_set_kReSyncThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLocalInactivePlayerSongSyncController", "kReSyncThreshold", value));
}
// Autogenerated method: MultiplayerLocalInactivePlayerSongSyncController.get_isAudioLoaded
bool GlobalNamespace::MultiplayerLocalInactivePlayerSongSyncController::get_isAudioLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalInactivePlayerSongSyncController").WithContext("get_isAudioLoaded");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_isAudioLoaded", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLocalInactivePlayerSongSyncController.Awake
void GlobalNamespace::MultiplayerLocalInactivePlayerSongSyncController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalInactivePlayerSongSyncController").WithContext("Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Awake", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLocalInactivePlayerSongSyncController.Update
void GlobalNamespace::MultiplayerLocalInactivePlayerSongSyncController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalInactivePlayerSongSyncController").WithContext("Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Update", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLocalInactivePlayerSongSyncController.FollowOffsetSyncTime
void GlobalNamespace::MultiplayerLocalInactivePlayerSongSyncController::FollowOffsetSyncTime(GlobalNamespace::IMultiplayerObservable* observable) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalInactivePlayerSongSyncController").WithContext("FollowOffsetSyncTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "FollowOffsetSyncTime", {}, ::il2cpp_utils::ExtractTypes(observable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, observable);
}
// Autogenerated method: MultiplayerLocalInactivePlayerSongSyncController.UpdateOffsetSyncTime
void GlobalNamespace::MultiplayerLocalInactivePlayerSongSyncController::UpdateOffsetSyncTime(float offsetSyncTime, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalInactivePlayerSongSyncController").WithContext("UpdateOffsetSyncTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "UpdateOffsetSyncTime", {}, ::il2cpp_utils::ExtractTypes(offsetSyncTime, forceUpdate)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, offsetSyncTime, forceUpdate);
}
// Autogenerated method: MultiplayerLocalInactivePlayerSongSyncController.SeekTo
void GlobalNamespace::MultiplayerLocalInactivePlayerSongSyncController::SeekTo(float offsetTime, bool crossFade, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalInactivePlayerSongSyncController").WithContext("SeekTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SeekTo", {}, ::il2cpp_utils::ExtractTypes(offsetTime, crossFade, toVolume)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, offsetTime, crossFade, toVolume);
}
// Autogenerated method: MultiplayerLocalInactivePlayerSongSyncController.<get_waitUntilIsReadyToStartTheSong>b__6_0
bool GlobalNamespace::MultiplayerLocalInactivePlayerSongSyncController::$get_waitUntilIsReadyToStartTheSong$b__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalInactivePlayerSongSyncController").WithContext("<get_waitUntilIsReadyToStartTheSong>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "<get_waitUntilIsReadyToStartTheSong>b__6_0", {}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLocalInactivePlayerSongSyncController.get_waitUntilIsReadyToStartTheSong
UnityEngine::WaitUntil* GlobalNamespace::MultiplayerLocalInactivePlayerSongSyncController::get_waitUntilIsReadyToStartTheSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalInactivePlayerSongSyncController").WithContext("get_waitUntilIsReadyToStartTheSong");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::WaitUntil*>(), "get_waitUntilIsReadyToStartTheSong", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::WaitUntil*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLocalInactivePlayerSongSyncController.StartSong
void GlobalNamespace::MultiplayerLocalInactivePlayerSongSyncController::StartSong(float offsetTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalInactivePlayerSongSyncController").WithContext("StartSong");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "StartSong", {}, ::il2cpp_utils::ExtractTypes(offsetTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, offsetTime);
}
// Autogenerated method: MultiplayerLocalInactivePlayerSongSyncController.SeekTo
void GlobalNamespace::MultiplayerLocalInactivePlayerSongSyncController::SeekTo(float offsetTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalInactivePlayerSongSyncController").WithContext("SeekTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SeekTo", {}, ::il2cpp_utils::ExtractTypes(offsetTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, offsetTime);
}
// Autogenerated method: MultiplayerLocalInactivePlayerSongSyncController..ctor
GlobalNamespace::MultiplayerLocalInactivePlayerSongSyncController* GlobalNamespace::MultiplayerLocalInactivePlayerSongSyncController::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalInactivePlayerSongSyncController").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<MultiplayerLocalInactivePlayerSongSyncController*>());
}
