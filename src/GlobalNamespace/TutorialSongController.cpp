// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TutorialSongController
#include "GlobalNamespace/TutorialSongController.hpp"
// Including type: TutorialSongController/InitData
#include "GlobalNamespace/TutorialSongController_InitData.hpp"
// Including type: TutorialSongController/TutorialObjectSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialObjectSpawnData.hpp"
// Including type: TutorialSongController/TutorialJumpingNoteSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialJumpingNoteSpawnData.hpp"
// Including type: TutorialSongController/TutorialBasicNoteSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialBasicNoteSpawnData.hpp"
// Including type: TutorialSongController/TutorialBombNoteSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialBombNoteSpawnData.hpp"
// Including type: TutorialSongController/TutorialObstacleSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialObstacleSpawnData.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: BeatmapObjectCallbackController
#include "GlobalNamespace/BeatmapObjectCallbackController.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TutorialSongController.Awake
void GlobalNamespace::TutorialSongController::Awake() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Awake"));
}
// Autogenerated method: TutorialSongController.Start
void GlobalNamespace::TutorialSongController::Start() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Start"));
}
// Autogenerated method: TutorialSongController.OnDestroy
void GlobalNamespace::TutorialSongController::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: TutorialSongController.StartSong
void GlobalNamespace::TutorialSongController::StartSong(float startTimeOffset) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "StartSong", startTimeOffset));
}
// Autogenerated method: TutorialSongController.HandleNoteWasCut
void GlobalNamespace::TutorialSongController::HandleNoteWasCut(GlobalNamespace::NoteController* noteController, GlobalNamespace::NoteCutInfo* noteCutInfo) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleNoteWasCut", noteController, noteCutInfo));
}
// Autogenerated method: TutorialSongController.HandleNoteWasMissed
void GlobalNamespace::TutorialSongController::HandleNoteWasMissed(GlobalNamespace::NoteController* noteController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleNoteWasMissed", noteController));
}
// Autogenerated method: TutorialSongController.HandleObstacleDidPassThreeQuartersOfMove2
void GlobalNamespace::TutorialSongController::HandleObstacleDidPassThreeQuartersOfMove2(GlobalNamespace::ObstacleController* obstacleController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleObstacleDidPassThreeQuartersOfMove2", obstacleController));
}
// Autogenerated method: TutorialSongController.UpdateBeatmapData
void GlobalNamespace::TutorialSongController::UpdateBeatmapData(float noteTime) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdateBeatmapData", noteTime));
}
// Autogenerated method: TutorialSongController.GetNextBeatmapObjectTime
float GlobalNamespace::TutorialSongController::GetNextBeatmapObjectTime(int beatOffset) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "GetNextBeatmapObjectTime", beatOffset));
}
// Autogenerated method: TutorialSongController.CreateObstacleData
GlobalNamespace::ObstacleData* GlobalNamespace::TutorialSongController::CreateObstacleData(float time, GlobalNamespace::TutorialSongController::TutorialObstacleSpawnData* tutorialObstacleSpawnData) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::ObstacleData*>(this, "CreateObstacleData", time, tutorialObstacleSpawnData));
}
// Autogenerated method: TutorialSongController.CreateBasicNoteData
GlobalNamespace::NoteData* GlobalNamespace::TutorialSongController::CreateBasicNoteData(float time, GlobalNamespace::TutorialSongController::TutorialBasicNoteSpawnData* tutorialBasicNoteSpawnData) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::NoteData*>(this, "CreateBasicNoteData", time, tutorialBasicNoteSpawnData));
}
// Autogenerated method: TutorialSongController.CreateBombNoteData
GlobalNamespace::NoteData* GlobalNamespace::TutorialSongController::CreateBombNoteData(float time, GlobalNamespace::TutorialSongController::TutorialBombNoteSpawnData* tutorialBombNoteSpawnData) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::NoteData*>(this, "CreateBombNoteData", time, tutorialBombNoteSpawnData));
}
// Autogenerated method: TutorialSongController.StopSong
void GlobalNamespace::TutorialSongController::StopSong() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "StopSong"));
}
// Autogenerated method: TutorialSongController.PauseSong
void GlobalNamespace::TutorialSongController::PauseSong() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PauseSong"));
}
// Autogenerated method: TutorialSongController.ResumeSong
void GlobalNamespace::TutorialSongController::ResumeSong() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ResumeSong"));
}
// Autogenerated method: TutorialSongController..ctor
GlobalNamespace::TutorialSongController* GlobalNamespace::TutorialSongController::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<TutorialSongController*>());
}
