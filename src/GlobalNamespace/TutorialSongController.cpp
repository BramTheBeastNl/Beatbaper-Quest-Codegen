// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TutorialSongController
#include "GlobalNamespace/TutorialSongController.hpp"
// Including type: TutorialSongController/InitData
#include "GlobalNamespace/TutorialSongController_InitData.hpp"
// Including type: TutorialSongController/TutorialObjectSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialObjectSpawnData.hpp"
// Including type: TutorialSongController/TutorialNoteSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialNoteSpawnData.hpp"
// Including type: TutorialSongController/TutorialObstacleSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialObstacleSpawnData.hpp"
// Including type: TutorialSongController/<StartSongCoroutine>d__37
#include "GlobalNamespace/TutorialSongController_-StartSongCoroutine-d__37.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: BeatmapObjectCallbackController
#include "GlobalNamespace/BeatmapObjectCallbackController.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: INoteController
#include "GlobalNamespace/INoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: BeatmapLineData
#include "GlobalNamespace/BeatmapLineData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TutorialSongController.get_specialTutorialMode
bool GlobalNamespace::TutorialSongController::get_specialTutorialMode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_specialTutorialMode"));
}
// Autogenerated method: TutorialSongController.set_specialTutorialMode
void GlobalNamespace::TutorialSongController::set_specialTutorialMode(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_specialTutorialMode", value));
}
// Autogenerated method: TutorialSongController.Awake
void GlobalNamespace::TutorialSongController::Awake() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Awake"));
}
// Autogenerated method: TutorialSongController.Start
void GlobalNamespace::TutorialSongController::Start() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Start"));
}
// Autogenerated method: TutorialSongController.OnDestroy
void GlobalNamespace::TutorialSongController::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: TutorialSongController.StartSongCoroutine
System::Collections::IEnumerator* GlobalNamespace::TutorialSongController::StartSongCoroutine() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::IEnumerator*>(this, "StartSongCoroutine"));
}
// Autogenerated method: TutorialSongController.HandleNoteWasCutEvent
void GlobalNamespace::TutorialSongController::HandleNoteWasCutEvent(GlobalNamespace::INoteController* noteController, GlobalNamespace::NoteCutInfo* noteCutInfo) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleNoteWasCutEvent", noteController, noteCutInfo));
}
// Autogenerated method: TutorialSongController.HandleNoteWasMissed
void GlobalNamespace::TutorialSongController::HandleNoteWasMissed(GlobalNamespace::INoteController* noteController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleNoteWasMissed", noteController));
}
// Autogenerated method: TutorialSongController.HandleObstacleDidPassThreeQuartersOfMove2
void GlobalNamespace::TutorialSongController::HandleObstacleDidPassThreeQuartersOfMove2(GlobalNamespace::ObstacleController* obstacleController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleObstacleDidPassThreeQuartersOfMove2", obstacleController));
}
// Autogenerated method: TutorialSongController.UpdateBeatmapData
void GlobalNamespace::TutorialSongController::UpdateBeatmapData(float noteTime) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdateBeatmapData", noteTime));
}
// Autogenerated method: TutorialSongController.GetNextBeatmapObjectTime
float GlobalNamespace::TutorialSongController::GetNextBeatmapObjectTime(int beatOffset) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "GetNextBeatmapObjectTime", beatOffset));
}
// Autogenerated method: TutorialSongController.CreateBeatmapLinesData
::Array<GlobalNamespace::BeatmapLineData*>* GlobalNamespace::TutorialSongController::CreateBeatmapLinesData(float time, GlobalNamespace::TutorialSongController::TutorialObstacleSpawnData* tutorialObstacleSpawnData) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<GlobalNamespace::BeatmapLineData*>*>(this, "CreateBeatmapLinesData", time, tutorialObstacleSpawnData));
}
// Autogenerated method: TutorialSongController.CreateBeatmapLinesData
::Array<GlobalNamespace::BeatmapLineData*>* GlobalNamespace::TutorialSongController::CreateBeatmapLinesData(float time, GlobalNamespace::TutorialSongController::TutorialNoteSpawnData* tutorialNoteSpawnData) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<GlobalNamespace::BeatmapLineData*>*>(this, "CreateBeatmapLinesData", time, tutorialNoteSpawnData));
}
// Autogenerated method: TutorialSongController.CreateBeatmapLines
::Array<GlobalNamespace::BeatmapLineData*>* GlobalNamespace::TutorialSongController::CreateBeatmapLines(int lineCount, int activeLineIndex) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<GlobalNamespace::BeatmapLineData*>*>(this, "CreateBeatmapLines", lineCount, activeLineIndex));
}
// Autogenerated method: TutorialSongController.StartSong
void GlobalNamespace::TutorialSongController::StartSong() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "StartSong"));
}
// Autogenerated method: TutorialSongController.StopSong
void GlobalNamespace::TutorialSongController::StopSong() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "StopSong"));
}
// Autogenerated method: TutorialSongController.PauseSong
void GlobalNamespace::TutorialSongController::PauseSong() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PauseSong"));
}
// Autogenerated method: TutorialSongController.ResumeSong
void GlobalNamespace::TutorialSongController::ResumeSong() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ResumeSong"));
}
// Autogenerated method: TutorialSongController..ctor
GlobalNamespace::TutorialSongController* GlobalNamespace::TutorialSongController::New_ctor() {
  return (TutorialSongController*)THROW_UNLESS(il2cpp_utils::New("", "TutorialSongController"));
}
