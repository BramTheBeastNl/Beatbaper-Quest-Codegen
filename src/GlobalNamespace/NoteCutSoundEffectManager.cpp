// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NoteCutSoundEffectManager
#include "GlobalNamespace/NoteCutSoundEffectManager.hpp"
// Including type: NoteCutSoundEffectManager/InitData
#include "GlobalNamespace/NoteCutSoundEffectManager_InitData.hpp"
// Including type: AudioManagerSO
#include "GlobalNamespace/AudioManagerSO.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: PlayerController
#include "GlobalNamespace/PlayerController.hpp"
// Including type: RandomObjectPicker`1
#include "GlobalNamespace/RandomObjectPicker_1.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: INoteController
#include "GlobalNamespace/INoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: NoteCutSoundEffect/Pool
#include "GlobalNamespace/NoteCutSoundEffect_Pool.hpp"
// Including type: BeatmapObjectCallbackController/BeatmapObjectCallbackData
#include "GlobalNamespace/BeatmapObjectCallbackController_BeatmapObjectCallbackData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxNumberOfEffects
int GlobalNamespace::NoteCutSoundEffectManager::_get_kMaxNumberOfEffects() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NoteCutSoundEffectManager", "kMaxNumberOfEffects"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxNumberOfEffects
void GlobalNamespace::NoteCutSoundEffectManager::_set_kMaxNumberOfEffects(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutSoundEffectManager", "kMaxNumberOfEffects", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kTwoNotesAtTheSameTimeVolumeMul
float GlobalNamespace::NoteCutSoundEffectManager::_get_kTwoNotesAtTheSameTimeVolumeMul() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "NoteCutSoundEffectManager", "kTwoNotesAtTheSameTimeVolumeMul"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kTwoNotesAtTheSameTimeVolumeMul
void GlobalNamespace::NoteCutSoundEffectManager::_set_kTwoNotesAtTheSameTimeVolumeMul(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutSoundEffectManager", "kTwoNotesAtTheSameTimeVolumeMul", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kDenseNotesVolumeMul
float GlobalNamespace::NoteCutSoundEffectManager::_get_kDenseNotesVolumeMul() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "NoteCutSoundEffectManager", "kDenseNotesVolumeMul"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kDenseNotesVolumeMul
void GlobalNamespace::NoteCutSoundEffectManager::_set_kDenseNotesVolumeMul(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutSoundEffectManager", "kDenseNotesVolumeMul", value));
}
// Autogenerated method: NoteCutSoundEffectManager.get_handleWrongSaberTypeAsGood
bool GlobalNamespace::NoteCutSoundEffectManager::get_handleWrongSaberTypeAsGood() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_handleWrongSaberTypeAsGood"));
}
// Autogenerated method: NoteCutSoundEffectManager.set_handleWrongSaberTypeAsGood
void GlobalNamespace::NoteCutSoundEffectManager::set_handleWrongSaberTypeAsGood(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_handleWrongSaberTypeAsGood", value));
}
// Autogenerated method: NoteCutSoundEffectManager.Start
void GlobalNamespace::NoteCutSoundEffectManager::Start() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Start"));
}
// Autogenerated method: NoteCutSoundEffectManager.OnDestroy
void GlobalNamespace::NoteCutSoundEffectManager::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: NoteCutSoundEffectManager.BeatmapObjectCallback
void GlobalNamespace::NoteCutSoundEffectManager::BeatmapObjectCallback(GlobalNamespace::BeatmapObjectData* beatmapObjectData) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "BeatmapObjectCallback", beatmapObjectData));
}
// Autogenerated method: NoteCutSoundEffectManager.HandleNoteWasCut
void GlobalNamespace::NoteCutSoundEffectManager::HandleNoteWasCut(GlobalNamespace::INoteController* noteController, GlobalNamespace::NoteCutInfo* noteCutInfo) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleNoteWasCut", noteController, noteCutInfo));
}
// Autogenerated method: NoteCutSoundEffectManager.HandleCutSoundEffectDidFinish
void GlobalNamespace::NoteCutSoundEffectManager::HandleCutSoundEffectDidFinish(GlobalNamespace::NoteCutSoundEffect* cutSoundEffect) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleCutSoundEffectDidFinish", cutSoundEffect));
}
// Autogenerated method: NoteCutSoundEffectManager.Pause
void GlobalNamespace::NoteCutSoundEffectManager::Pause() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Pause"));
}
// Autogenerated method: NoteCutSoundEffectManager.Resume
void GlobalNamespace::NoteCutSoundEffectManager::Resume() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Resume"));
}
// Autogenerated method: NoteCutSoundEffectManager..ctor
GlobalNamespace::NoteCutSoundEffectManager* GlobalNamespace::NoteCutSoundEffectManager::New_ctor() {
  return (NoteCutSoundEffectManager*)THROW_UNLESS(il2cpp_utils::New("", "NoteCutSoundEffectManager"));
}
