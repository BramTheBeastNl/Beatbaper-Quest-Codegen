// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRExtensions
#include "GlobalNamespace/OVRExtensions.hpp"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: OVR.OpenVR.HmdMatrix34_t
#include "OVR/OpenVR/HmdMatrix34_t.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: OVRTracker/Frustum
#include "GlobalNamespace/OVRTracker_Frustum.hpp"
// Including type: OVRPlugin/Frustumf
#include "GlobalNamespace/OVRPlugin_Frustumf.hpp"
// Including type: OVRPlugin/Colorf
#include "GlobalNamespace/OVRPlugin_Colorf.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRExtensions.ToTrackingSpacePose
GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToTrackingSpacePose(UnityEngine::Transform* transform, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("ToTrackingSpacePose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToTrackingSpacePose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform, camera)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transform, camera);
}
// Autogenerated method: OVRExtensions.ToWorldSpacePose
GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToWorldSpacePose(GlobalNamespace::OVRPose trackingSpacePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("ToWorldSpacePose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToWorldSpacePose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(trackingSpacePose)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, trackingSpacePose);
}
// Autogenerated method: OVRExtensions.ToHeadSpacePose
GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToHeadSpacePose(UnityEngine::Transform* transform, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("ToHeadSpacePose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToHeadSpacePose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform, camera)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transform, camera);
}
// Autogenerated method: OVRExtensions.ToOVRPose
GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToOVRPose(UnityEngine::Transform* t, bool isLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("ToOVRPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToOVRPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t, isLocal)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, isLocal);
}
// Autogenerated method: OVRExtensions.FromOVRPose
void GlobalNamespace::OVRExtensions::FromOVRPose(UnityEngine::Transform* t, GlobalNamespace::OVRPose pose, bool isLocal) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("FromOVRPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "FromOVRPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t, pose, isLocal)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, pose, isLocal);
}
// Autogenerated method: OVRExtensions.ToOVRPose
GlobalNamespace::OVRPose GlobalNamespace::OVRExtensions::ToOVRPose(GlobalNamespace::OVRPlugin::Posef p) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("ToOVRPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToOVRPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(p)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, p);
}
// Autogenerated method: OVRExtensions.ToFrustum
GlobalNamespace::OVRTracker::Frustum GlobalNamespace::OVRExtensions::ToFrustum(GlobalNamespace::OVRPlugin::Frustumf f) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("ToFrustum");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFrustum", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRTracker::Frustum, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: OVRExtensions.FromColorf
UnityEngine::Color GlobalNamespace::OVRExtensions::FromColorf(GlobalNamespace::OVRPlugin::Colorf c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("FromColorf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "FromColorf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: OVRExtensions.ToColorf
GlobalNamespace::OVRPlugin::Colorf GlobalNamespace::OVRExtensions::ToColorf(UnityEngine::Color c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("ToColorf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToColorf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Colorf, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: OVRExtensions.FromVector3f
UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromVector3f(GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("FromVector3f");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "FromVector3f", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromFlippedXVector3f
UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromFlippedXVector3f(GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("FromFlippedXVector3f");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedXVector3f", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromFlippedZVector3f
UnityEngine::Vector3 GlobalNamespace::OVRExtensions::FromFlippedZVector3f(GlobalNamespace::OVRPlugin::Vector3f v) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("FromFlippedZVector3f");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedZVector3f", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToVector3f
GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToVector3f(UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("ToVector3f");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToVector3f", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToFlippedXVector3f
GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToFlippedXVector3f(UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("ToFlippedXVector3f");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedXVector3f", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.ToFlippedZVector3f
GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRExtensions::ToFlippedZVector3f(UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("ToFlippedZVector3f");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedZVector3f", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v);
}
// Autogenerated method: OVRExtensions.FromQuatf
UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromQuatf(GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("FromQuatf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "FromQuatf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(q)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.FromFlippedXQuatf
UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromFlippedXQuatf(GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("FromFlippedXQuatf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedXQuatf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(q)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.FromFlippedZQuatf
UnityEngine::Quaternion GlobalNamespace::OVRExtensions::FromFlippedZQuatf(GlobalNamespace::OVRPlugin::Quatf q) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("FromFlippedZQuatf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "FromFlippedZQuatf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(q)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToQuatf
GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToQuatf(UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("ToQuatf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToQuatf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(q)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToFlippedXQuatf
GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToFlippedXQuatf(UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("ToFlippedXQuatf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedXQuatf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(q)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ToFlippedZQuatf
GlobalNamespace::OVRPlugin::Quatf GlobalNamespace::OVRExtensions::ToFlippedZQuatf(UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("ToFlippedZQuatf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ToFlippedZQuatf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(q)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Quatf, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q);
}
// Autogenerated method: OVRExtensions.ConvertToHMDMatrix34
OVR::OpenVR::HmdMatrix34_t GlobalNamespace::OVRExtensions::ConvertToHMDMatrix34(UnityEngine::Matrix4x4 m) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("ConvertToHMDMatrix34");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "ConvertToHMDMatrix34", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(m)));
  return ::il2cpp_utils::RunMethodThrow<OVR::OpenVR::HmdMatrix34_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, m);
}
// Autogenerated method: OVRExtensions.FindChildRecursive
UnityEngine::Transform* GlobalNamespace::OVRExtensions::FindChildRecursive(UnityEngine::Transform* parent, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRExtensions").WithContext("FindChildRecursive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRExtensions", "FindChildRecursive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parent, name)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parent, name);
}
