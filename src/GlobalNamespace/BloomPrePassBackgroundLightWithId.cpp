// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBackgroundLightWithId
#include "GlobalNamespace/BloomPrePassBackgroundLightWithId.hpp"
// Including type: BloomPrePassBackgroundColor
#include "GlobalNamespace/BloomPrePassBackgroundColor.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BloomPrePassBackgroundLightWithId.get_color
UnityEngine::Color GlobalNamespace::BloomPrePassBackgroundLightWithId::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BloomPrePassBackgroundLightWithId").WithContext("get_color");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassBackgroundLightWithId.ColorWasSet
void GlobalNamespace::BloomPrePassBackgroundLightWithId::ColorWasSet(UnityEngine::Color newColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BloomPrePassBackgroundLightWithId").WithContext("ColorWasSet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newColor)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newColor);
}
