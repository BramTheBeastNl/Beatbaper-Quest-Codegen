// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: QuickPlayLobbyFlowCoordinator
#include "GlobalNamespace/QuickPlayLobbyFlowCoordinator.hpp"
// Including type: QuickPlayLobbyFlowCoordinator/<>c__DisplayClass55_0
#include "GlobalNamespace/QuickPlayLobbyFlowCoordinator_--c__DisplayClass55_0.hpp"
// Including type: HMUI.ScreenModeSO
#include "HMUI/ScreenModeSO.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: MultiplayerLevelSelectionFlowCoordinator
#include "GlobalNamespace/MultiplayerLevelSelectionFlowCoordinator.hpp"
// Including type: QuickPlaySetupViewController
#include "GlobalNamespace/QuickPlaySetupViewController.hpp"
// Including type: GameplaySetupViewController
#include "GlobalNamespace/GameplaySetupViewController.hpp"
// Including type: ServerPlayerListController
#include "GlobalNamespace/ServerPlayerListController.hpp"
// Including type: MultiplayerResultsViewController
#include "GlobalNamespace/MultiplayerResultsViewController.hpp"
// Including type: SimpleDialogPromptViewController
#include "GlobalNamespace/SimpleDialogPromptViewController.hpp"
// Including type: ConnectionErrorDialogViewController
#include "GlobalNamespace/ConnectionErrorDialogViewController.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: MultiplayerLobbyController
#include "GlobalNamespace/MultiplayerLobbyController.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
// Including type: HMUI.ScreenModeController
#include "HMUI/ScreenModeController.hpp"
// Including type: ILobbyGameStateController
#include "GlobalNamespace/ILobbyGameStateController.hpp"
// Including type: ILobbyStateDataModel
#include "GlobalNamespace/ILobbyStateDataModel.hpp"
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: IUnifiedNetworkPlayerModel
#include "GlobalNamespace/IUnifiedNetworkPlayerModel.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: PlatformLeaderboardsModel
#include "GlobalNamespace/PlatformLeaderboardsModel.hpp"
// Including type: CenterStageScreenController
#include "GlobalNamespace/CenterStageScreenController.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: MultiplayerGameState
#include "GlobalNamespace/MultiplayerGameState.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
// Including type: LevelSelectionFlowCoordinator/State
#include "GlobalNamespace/LevelSelectionFlowCoordinator_State.hpp"
// Including type: HMUI.ViewController/AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: QuickPlayLobbyFlowCoordinator.add_didFinishedEvent
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::add_didFinishedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_didFinishedEvent", value));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.remove_didFinishedEvent
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::remove_didFinishedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_didFinishedEvent", value));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.HandleLobbyPlayersDataModelDidChange
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::HandleLobbyPlayersDataModelDidChange(::Il2CppString* userId) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleLobbyPlayersDataModelDidChange", userId));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.HandleQuickPlaySetupViewControllerSetPlayerReady
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::HandleQuickPlaySetupViewControllerSetPlayerReady(bool isReady) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleQuickPlaySetupViewControllerSetPlayerReady", isReady));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.HandleQuickPlaySetupViewControllerSuggestBeatmap
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::HandleQuickPlaySetupViewControllerSuggestBeatmap() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleQuickPlaySetupViewControllerSuggestBeatmap"));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.HandleMultiplayerLevelSelectionFlowCoordinatorDidSelectLevel
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::HandleMultiplayerLevelSelectionFlowCoordinatorDidSelectLevel(GlobalNamespace::LevelSelectionFlowCoordinator::State* state) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMultiplayerLevelSelectionFlowCoordinatorDidSelectLevel", state));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.HandleMultiplayerLevelSelectionFlowCoordinatorDidFinish
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::HandleMultiplayerLevelSelectionFlowCoordinatorDidFinish() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMultiplayerLevelSelectionFlowCoordinatorDidFinish"));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.HandleQuickPlaySetupViewControllerDeleteSuggestedBeatmap
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::HandleQuickPlaySetupViewControllerDeleteSuggestedBeatmap() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleQuickPlaySetupViewControllerDeleteSuggestedBeatmap"));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.HandleServerPlayerListControllerSelectSuggestedBeatmap
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::HandleServerPlayerListControllerSelectSuggestedBeatmap(::Il2CppString* levelId, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::BeatmapDifficulty beatmapDifficulty) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleServerPlayerListControllerSelectSuggestedBeatmap", levelId, beatmapCharacteristic, beatmapDifficulty));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.HandleLobbyGameStateControllerLobbyDisconnected
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::HandleLobbyGameStateControllerLobbyDisconnected() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleLobbyGameStateControllerLobbyDisconnected"));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.HandleLobbyGameStateControllerGameStarted
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::HandleLobbyGameStateControllerGameStarted() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleLobbyGameStateControllerGameStarted"));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.HandleLobbyGameStateControllerGameStartedPresentView
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::HandleLobbyGameStateControllerGameStartedPresentView() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleLobbyGameStateControllerGameStartedPresentView"));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.HandleLobbyGameStateControllerCountdownStarted
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::HandleLobbyGameStateControllerCountdownStarted() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleLobbyGameStateControllerCountdownStarted"));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.HandleLobbyGameStateControllerCountdownCancelled
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::HandleLobbyGameStateControllerCountdownCancelled() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleLobbyGameStateControllerCountdownCancelled"));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.HandleLobbyGameStateControllerSongStillDownloading
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::HandleLobbyGameStateControllerSongStillDownloading() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleLobbyGameStateControllerSongStillDownloading"));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.HandleMenuRpcManagerSetMultiplayerGameState
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::HandleMenuRpcManagerSetMultiplayerGameState(::Il2CppString* userId, GlobalNamespace::MultiplayerGameState gameState) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMenuRpcManagerSetMultiplayerGameState", userId, gameState));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.HandleLobbyGameStateControllerLevelFinished
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::HandleLobbyGameStateControllerLevelFinished(GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO* multiplayerLevelScenesTransitionSetupData, GlobalNamespace::LevelCompletionResults* myCompletionResults, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>* othersCompletionResults) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleLobbyGameStateControllerLevelFinished", multiplayerLevelScenesTransitionSetupData, myCompletionResults, othersCompletionResults));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.HandleLobbyGameStateControllerLevelDidGetDisconnected
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::HandleLobbyGameStateControllerLevelDidGetDisconnected(GlobalNamespace::DisconnectedReason disconnectedReason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleLobbyGameStateControllerLevelDidGetDisconnected", disconnectedReason));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.HandleLobbyGameStateControllerBeforeSceneSwitch
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::HandleLobbyGameStateControllerBeforeSceneSwitch() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleLobbyGameStateControllerBeforeSceneSwitch"));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.HandleMultiplayerResultsViewControllerBackToLobbyPressed
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::HandleMultiplayerResultsViewControllerBackToLobbyPressed(GlobalNamespace::MultiplayerResultsViewController* multiplayerResultsViewController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMultiplayerResultsViewControllerBackToLobbyPressed", multiplayerResultsViewController));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.SetupGameStarting
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::SetupGameStarting() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetupGameStarting"));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.SetLocalPlayerDataModelToViews
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::SetLocalPlayerDataModelToViews(::Il2CppString* userId) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetLocalPlayerDataModelToViews", userId));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.PresentBackButtonConfirmationDialog
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::PresentBackButtonConfirmationDialog() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PresentBackButtonConfirmationDialog"));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.Finish
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::Finish(System::Action* finishedCallback, bool withFadeOut) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Finish", finishedCallback, withFadeOut));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.DismissViewControllersAndCoordinators
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::DismissViewControllersAndCoordinators() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DismissViewControllersAndCoordinators"));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.ShowDisconnectDialogAndFinish
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::ShowDisconnectDialogAndFinish(GlobalNamespace::DisconnectedReason disconnectedReason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ShowDisconnectDialogAndFinish", disconnectedReason));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.<PresentBackButtonConfirmationDialog>b__54_0
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::$PresentBackButtonConfirmationDialog$b__54_0(int btnIndex) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<PresentBackButtonConfirmationDialog>b__54_0", btnIndex));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.<ShowDisconnectDialogAndFinish>b__57_0
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::$ShowDisconnectDialogAndFinish$b__57_0() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<ShowDisconnectDialogAndFinish>b__57_0"));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.DidActivate
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DidActivate", firstActivation, addedToHierarchy, screenSystemEnabling));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.DidDeactivate
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DidDeactivate", removedFromHierarchy, screenSystemDisabling));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.TopViewControllerWillChange
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::TopViewControllerWillChange(HMUI::ViewController* oldViewController, HMUI::ViewController* newViewController, HMUI::ViewController::AnimationType animationType) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "TopViewControllerWillChange", oldViewController, newViewController, animationType));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.BackButtonWasPressed
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::BackButtonWasPressed(HMUI::ViewController* topViewController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "BackButtonWasPressed", topViewController));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.InitialViewControllerWasPresented
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::InitialViewControllerWasPresented() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "InitialViewControllerWasPresented"));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.TransitionDidStart
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::TransitionDidStart() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "TransitionDidStart"));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator.TransitionDidFinish
void GlobalNamespace::QuickPlayLobbyFlowCoordinator::TransitionDidFinish() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "TransitionDidFinish"));
}
// Autogenerated method: QuickPlayLobbyFlowCoordinator..ctor
GlobalNamespace::QuickPlayLobbyFlowCoordinator* GlobalNamespace::QuickPlayLobbyFlowCoordinator::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<QuickPlayLobbyFlowCoordinator*>());
}
