// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamVR_Events
#include "GlobalNamespace/SteamVR_Events.hpp"
// Including type: SteamVR_Events/Action
#include "GlobalNamespace/SteamVR_Events_Action.hpp"
// Including type: SteamVR_Events/ActionNoArgs
#include "GlobalNamespace/SteamVR_Events_ActionNoArgs.hpp"
// Including type: SteamVR_Events/Action`1
#include "GlobalNamespace/SteamVR_Events_Action_1.hpp"
// Including type: SteamVR_Events/Action`2
#include "GlobalNamespace/SteamVR_Events_Action_2.hpp"
// Including type: SteamVR_Events/Action`3
#include "GlobalNamespace/SteamVR_Events_Action_3.hpp"
// Including type: SteamVR_Events/Event
#include "GlobalNamespace/SteamVR_Events_Event.hpp"
// Including type: SteamVR_Events/Event`1
#include "GlobalNamespace/SteamVR_Events_Event_1.hpp"
// Including type: SteamVR_Events/Event`2
#include "GlobalNamespace/SteamVR_Events_Event_2.hpp"
// Including type: SteamVR_Events/Event`3
#include "GlobalNamespace/SteamVR_Events_Event_3.hpp"
// Including type: Valve.VR.TrackedDevicePose_t
#include "Valve/VR/TrackedDevicePose_t.hpp"
// Including type: SteamVR_RenderModel
#include "GlobalNamespace/SteamVR_RenderModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
// Including type: UnityEngine.Events.UnityAction`2
#include "UnityEngine/Events/UnityAction_2.hpp"
// Including type: UnityEngine.Events.UnityAction`3
#include "UnityEngine/Events/UnityAction_3.hpp"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SteamVR_Events/Event`1<System.Boolean> Calibrating
GlobalNamespace::SteamVR_Events::Event_1<bool>* GlobalNamespace::SteamVR_Events::_get_Calibrating() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_get_Calibrating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SteamVR_Events::Event_1<bool>*>("", "SteamVR_Events", "Calibrating"));
}
// Autogenerated static field setter
// Set static field: static public SteamVR_Events/Event`1<System.Boolean> Calibrating
void GlobalNamespace::SteamVR_Events::_set_Calibrating(GlobalNamespace::SteamVR_Events::Event_1<bool>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_set_Calibrating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Events", "Calibrating", value));
}
// Autogenerated static field getter
// Get static field: static public SteamVR_Events/Event`2<System.Int32,System.Boolean> DeviceConnected
GlobalNamespace::SteamVR_Events::Event_2<int, bool>* GlobalNamespace::SteamVR_Events::_get_DeviceConnected() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_get_DeviceConnected");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::SteamVR_Events::Event_2<int, bool>*>("", "SteamVR_Events", "DeviceConnected")));
}
// Autogenerated static field setter
// Set static field: static public SteamVR_Events/Event`2<System.Int32,System.Boolean> DeviceConnected
void GlobalNamespace::SteamVR_Events::_set_DeviceConnected(GlobalNamespace::SteamVR_Events::Event_2<int, bool>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_set_DeviceConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Events", "DeviceConnected", value));
}
// Autogenerated static field getter
// Get static field: static public SteamVR_Events/Event`3<UnityEngine.Color,System.Single,System.Boolean> Fade
GlobalNamespace::SteamVR_Events::Event_3<UnityEngine::Color, float, bool>* GlobalNamespace::SteamVR_Events::_get_Fade() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_get_Fade");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::SteamVR_Events::Event_3<UnityEngine::Color, float, bool>*>("", "SteamVR_Events", "Fade")));
}
// Autogenerated static field setter
// Set static field: static public SteamVR_Events/Event`3<UnityEngine.Color,System.Single,System.Boolean> Fade
void GlobalNamespace::SteamVR_Events::_set_Fade(GlobalNamespace::SteamVR_Events::Event_3<UnityEngine::Color, float, bool>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_set_Fade");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Events", "Fade", value));
}
// Autogenerated static field getter
// Get static field: static public SteamVR_Events/Event FadeReady
GlobalNamespace::SteamVR_Events::Event* GlobalNamespace::SteamVR_Events::_get_FadeReady() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_get_FadeReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SteamVR_Events::Event*>("", "SteamVR_Events", "FadeReady"));
}
// Autogenerated static field setter
// Set static field: static public SteamVR_Events/Event FadeReady
void GlobalNamespace::SteamVR_Events::_set_FadeReady(GlobalNamespace::SteamVR_Events::Event* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_set_FadeReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Events", "FadeReady", value));
}
// Autogenerated static field getter
// Get static field: static public SteamVR_Events/Event`1<System.Boolean> HideRenderModels
GlobalNamespace::SteamVR_Events::Event_1<bool>* GlobalNamespace::SteamVR_Events::_get_HideRenderModels() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_get_HideRenderModels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SteamVR_Events::Event_1<bool>*>("", "SteamVR_Events", "HideRenderModels"));
}
// Autogenerated static field setter
// Set static field: static public SteamVR_Events/Event`1<System.Boolean> HideRenderModels
void GlobalNamespace::SteamVR_Events::_set_HideRenderModels(GlobalNamespace::SteamVR_Events::Event_1<bool>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_set_HideRenderModels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Events", "HideRenderModels", value));
}
// Autogenerated static field getter
// Get static field: static public SteamVR_Events/Event`1<System.Boolean> Initializing
GlobalNamespace::SteamVR_Events::Event_1<bool>* GlobalNamespace::SteamVR_Events::_get_Initializing() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_get_Initializing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SteamVR_Events::Event_1<bool>*>("", "SteamVR_Events", "Initializing"));
}
// Autogenerated static field setter
// Set static field: static public SteamVR_Events/Event`1<System.Boolean> Initializing
void GlobalNamespace::SteamVR_Events::_set_Initializing(GlobalNamespace::SteamVR_Events::Event_1<bool>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_set_Initializing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Events", "Initializing", value));
}
// Autogenerated static field getter
// Get static field: static public SteamVR_Events/Event`1<System.Boolean> InputFocus
GlobalNamespace::SteamVR_Events::Event_1<bool>* GlobalNamespace::SteamVR_Events::_get_InputFocus() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_get_InputFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SteamVR_Events::Event_1<bool>*>("", "SteamVR_Events", "InputFocus"));
}
// Autogenerated static field setter
// Set static field: static public SteamVR_Events/Event`1<System.Boolean> InputFocus
void GlobalNamespace::SteamVR_Events::_set_InputFocus(GlobalNamespace::SteamVR_Events::Event_1<bool>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_set_InputFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Events", "InputFocus", value));
}
// Autogenerated static field getter
// Get static field: static public SteamVR_Events/Event`1<System.Boolean> Loading
GlobalNamespace::SteamVR_Events::Event_1<bool>* GlobalNamespace::SteamVR_Events::_get_Loading() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_get_Loading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SteamVR_Events::Event_1<bool>*>("", "SteamVR_Events", "Loading"));
}
// Autogenerated static field setter
// Set static field: static public SteamVR_Events/Event`1<System.Boolean> Loading
void GlobalNamespace::SteamVR_Events::_set_Loading(GlobalNamespace::SteamVR_Events::Event_1<bool>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_set_Loading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Events", "Loading", value));
}
// Autogenerated static field getter
// Get static field: static public SteamVR_Events/Event`1<System.Single> LoadingFadeIn
GlobalNamespace::SteamVR_Events::Event_1<float>* GlobalNamespace::SteamVR_Events::_get_LoadingFadeIn() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_get_LoadingFadeIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SteamVR_Events::Event_1<float>*>("", "SteamVR_Events", "LoadingFadeIn"));
}
// Autogenerated static field setter
// Set static field: static public SteamVR_Events/Event`1<System.Single> LoadingFadeIn
void GlobalNamespace::SteamVR_Events::_set_LoadingFadeIn(GlobalNamespace::SteamVR_Events::Event_1<float>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_set_LoadingFadeIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Events", "LoadingFadeIn", value));
}
// Autogenerated static field getter
// Get static field: static public SteamVR_Events/Event`1<System.Single> LoadingFadeOut
GlobalNamespace::SteamVR_Events::Event_1<float>* GlobalNamespace::SteamVR_Events::_get_LoadingFadeOut() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_get_LoadingFadeOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SteamVR_Events::Event_1<float>*>("", "SteamVR_Events", "LoadingFadeOut"));
}
// Autogenerated static field setter
// Set static field: static public SteamVR_Events/Event`1<System.Single> LoadingFadeOut
void GlobalNamespace::SteamVR_Events::_set_LoadingFadeOut(GlobalNamespace::SteamVR_Events::Event_1<float>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_set_LoadingFadeOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Events", "LoadingFadeOut", value));
}
// Autogenerated static field getter
// Get static field: static public SteamVR_Events/Event`1<Valve.VR.TrackedDevicePose_t[]> NewPoses
GlobalNamespace::SteamVR_Events::Event_1<::Array<Valve::VR::TrackedDevicePose_t>*>* GlobalNamespace::SteamVR_Events::_get_NewPoses() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_get_NewPoses");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SteamVR_Events::Event_1<::Array<Valve::VR::TrackedDevicePose_t>*>*>("", "SteamVR_Events", "NewPoses"));
}
// Autogenerated static field setter
// Set static field: static public SteamVR_Events/Event`1<Valve.VR.TrackedDevicePose_t[]> NewPoses
void GlobalNamespace::SteamVR_Events::_set_NewPoses(GlobalNamespace::SteamVR_Events::Event_1<::Array<Valve::VR::TrackedDevicePose_t>*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_set_NewPoses");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Events", "NewPoses", value));
}
// Autogenerated static field getter
// Get static field: static public SteamVR_Events/Event NewPosesApplied
GlobalNamespace::SteamVR_Events::Event* GlobalNamespace::SteamVR_Events::_get_NewPosesApplied() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_get_NewPosesApplied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SteamVR_Events::Event*>("", "SteamVR_Events", "NewPosesApplied"));
}
// Autogenerated static field setter
// Set static field: static public SteamVR_Events/Event NewPosesApplied
void GlobalNamespace::SteamVR_Events::_set_NewPosesApplied(GlobalNamespace::SteamVR_Events::Event* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_set_NewPosesApplied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Events", "NewPosesApplied", value));
}
// Autogenerated static field getter
// Get static field: static public SteamVR_Events/Event`1<System.Boolean> OutOfRange
GlobalNamespace::SteamVR_Events::Event_1<bool>* GlobalNamespace::SteamVR_Events::_get_OutOfRange() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_get_OutOfRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SteamVR_Events::Event_1<bool>*>("", "SteamVR_Events", "OutOfRange"));
}
// Autogenerated static field setter
// Set static field: static public SteamVR_Events/Event`1<System.Boolean> OutOfRange
void GlobalNamespace::SteamVR_Events::_set_OutOfRange(GlobalNamespace::SteamVR_Events::Event_1<bool>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_set_OutOfRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Events", "OutOfRange", value));
}
// Autogenerated static field getter
// Get static field: static public SteamVR_Events/Event`2<SteamVR_RenderModel,System.Boolean> RenderModelLoaded
GlobalNamespace::SteamVR_Events::Event_2<GlobalNamespace::SteamVR_RenderModel*, bool>* GlobalNamespace::SteamVR_Events::_get_RenderModelLoaded() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_get_RenderModelLoaded");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::SteamVR_Events::Event_2<GlobalNamespace::SteamVR_RenderModel*, bool>*>("", "SteamVR_Events", "RenderModelLoaded")));
}
// Autogenerated static field setter
// Set static field: static public SteamVR_Events/Event`2<SteamVR_RenderModel,System.Boolean> RenderModelLoaded
void GlobalNamespace::SteamVR_Events::_set_RenderModelLoaded(GlobalNamespace::SteamVR_Events::Event_2<GlobalNamespace::SteamVR_RenderModel*, bool>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_set_RenderModelLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Events", "RenderModelLoaded", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<Valve.VR.EVREventType,SteamVR_Events/Event`1<Valve.VR.VREvent_t>> systemEvents
System::Collections::Generic::Dictionary_2<Valve::VR::EVREventType, GlobalNamespace::SteamVR_Events::Event_1<Valve::VR::VREvent_t>*>* GlobalNamespace::SteamVR_Events::_get_systemEvents() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_get_systemEvents");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<Valve::VR::EVREventType, GlobalNamespace::SteamVR_Events::Event_1<Valve::VR::VREvent_t>*>*>("", "SteamVR_Events", "systemEvents")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<Valve.VR.EVREventType,SteamVR_Events/Event`1<Valve.VR.VREvent_t>> systemEvents
void GlobalNamespace::SteamVR_Events::_set_systemEvents(System::Collections::Generic::Dictionary_2<Valve::VR::EVREventType, GlobalNamespace::SteamVR_Events::Event_1<Valve::VR::VREvent_t>*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("_set_systemEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Events", "systemEvents", value));
}
// Autogenerated method: SteamVR_Events.CalibratingAction
GlobalNamespace::SteamVR_Events::Action* GlobalNamespace::SteamVR_Events::CalibratingAction(UnityEngine::Events::UnityAction_1<bool>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("CalibratingAction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Events", "CalibratingAction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SteamVR_Events::Action*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, action);
}
// Autogenerated method: SteamVR_Events.DeviceConnectedAction
GlobalNamespace::SteamVR_Events::Action* GlobalNamespace::SteamVR_Events::DeviceConnectedAction(UnityEngine::Events::UnityAction_2<int, bool>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("DeviceConnectedAction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Events", "DeviceConnectedAction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SteamVR_Events::Action*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, action);
}
// Autogenerated method: SteamVR_Events.FadeAction
GlobalNamespace::SteamVR_Events::Action* GlobalNamespace::SteamVR_Events::FadeAction(UnityEngine::Events::UnityAction_3<UnityEngine::Color, float, bool>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("FadeAction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Events", "FadeAction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SteamVR_Events::Action*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, action);
}
// Autogenerated method: SteamVR_Events.FadeReadyAction
GlobalNamespace::SteamVR_Events::Action* GlobalNamespace::SteamVR_Events::FadeReadyAction(UnityEngine::Events::UnityAction* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("FadeReadyAction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Events", "FadeReadyAction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SteamVR_Events::Action*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, action);
}
// Autogenerated method: SteamVR_Events.HideRenderModelsAction
GlobalNamespace::SteamVR_Events::Action* GlobalNamespace::SteamVR_Events::HideRenderModelsAction(UnityEngine::Events::UnityAction_1<bool>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("HideRenderModelsAction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Events", "HideRenderModelsAction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SteamVR_Events::Action*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, action);
}
// Autogenerated method: SteamVR_Events.InitializingAction
GlobalNamespace::SteamVR_Events::Action* GlobalNamespace::SteamVR_Events::InitializingAction(UnityEngine::Events::UnityAction_1<bool>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("InitializingAction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Events", "InitializingAction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SteamVR_Events::Action*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, action);
}
// Autogenerated method: SteamVR_Events.InputFocusAction
GlobalNamespace::SteamVR_Events::Action* GlobalNamespace::SteamVR_Events::InputFocusAction(UnityEngine::Events::UnityAction_1<bool>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("InputFocusAction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Events", "InputFocusAction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SteamVR_Events::Action*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, action);
}
// Autogenerated method: SteamVR_Events.LoadingAction
GlobalNamespace::SteamVR_Events::Action* GlobalNamespace::SteamVR_Events::LoadingAction(UnityEngine::Events::UnityAction_1<bool>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("LoadingAction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Events", "LoadingAction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SteamVR_Events::Action*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, action);
}
// Autogenerated method: SteamVR_Events.LoadingFadeInAction
GlobalNamespace::SteamVR_Events::Action* GlobalNamespace::SteamVR_Events::LoadingFadeInAction(UnityEngine::Events::UnityAction_1<float>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("LoadingFadeInAction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Events", "LoadingFadeInAction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SteamVR_Events::Action*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, action);
}
// Autogenerated method: SteamVR_Events.LoadingFadeOutAction
GlobalNamespace::SteamVR_Events::Action* GlobalNamespace::SteamVR_Events::LoadingFadeOutAction(UnityEngine::Events::UnityAction_1<float>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("LoadingFadeOutAction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Events", "LoadingFadeOutAction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SteamVR_Events::Action*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, action);
}
// Autogenerated method: SteamVR_Events.NewPosesAction
GlobalNamespace::SteamVR_Events::Action* GlobalNamespace::SteamVR_Events::NewPosesAction(UnityEngine::Events::UnityAction_1<::Array<Valve::VR::TrackedDevicePose_t>*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("NewPosesAction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Events", "NewPosesAction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SteamVR_Events::Action*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, action);
}
// Autogenerated method: SteamVR_Events.NewPosesAppliedAction
GlobalNamespace::SteamVR_Events::Action* GlobalNamespace::SteamVR_Events::NewPosesAppliedAction(UnityEngine::Events::UnityAction* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("NewPosesAppliedAction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Events", "NewPosesAppliedAction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SteamVR_Events::Action*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, action);
}
// Autogenerated method: SteamVR_Events.OutOfRangeAction
GlobalNamespace::SteamVR_Events::Action* GlobalNamespace::SteamVR_Events::OutOfRangeAction(UnityEngine::Events::UnityAction_1<bool>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("OutOfRangeAction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Events", "OutOfRangeAction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SteamVR_Events::Action*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, action);
}
// Autogenerated method: SteamVR_Events.RenderModelLoadedAction
GlobalNamespace::SteamVR_Events::Action* GlobalNamespace::SteamVR_Events::RenderModelLoadedAction(UnityEngine::Events::UnityAction_2<GlobalNamespace::SteamVR_RenderModel*, bool>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("RenderModelLoadedAction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Events", "RenderModelLoadedAction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SteamVR_Events::Action*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, action);
}
// Autogenerated method: SteamVR_Events.System
GlobalNamespace::SteamVR_Events::Event_1<Valve::VR::VREvent_t>* GlobalNamespace::SteamVR_Events::System(Valve::VR::EVREventType eventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("System");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Events", "System", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventType)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SteamVR_Events::Event_1<Valve::VR::VREvent_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, eventType);
}
// Autogenerated method: SteamVR_Events.SystemAction
GlobalNamespace::SteamVR_Events::Action* GlobalNamespace::SteamVR_Events::SystemAction(Valve::VR::EVREventType eventType, UnityEngine::Events::UnityAction_1<Valve::VR::VREvent_t>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext("SystemAction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Events", "SystemAction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventType, action)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SteamVR_Events::Action*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, eventType, action);
}
// Autogenerated method: SteamVR_Events..cctor
void GlobalNamespace::SteamVR_Events::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Events").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_Events", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
