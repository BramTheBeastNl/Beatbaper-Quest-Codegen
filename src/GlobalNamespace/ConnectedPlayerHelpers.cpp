// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectedPlayerHelpers
#include "GlobalNamespace/ConnectedPlayerHelpers.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ConnectedPlayerHelpers.WantsToPlayNextLevel
bool GlobalNamespace::ConnectedPlayerHelpers::WantsToPlayNextLevel(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "ConnectedPlayerHelpers", "WantsToPlayNextLevel", connectedPlayer));
}
// Autogenerated method: ConnectedPlayerHelpers.WasActiveAtLevelStart
bool GlobalNamespace::ConnectedPlayerHelpers::WasActiveAtLevelStart(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "ConnectedPlayerHelpers", "WasActiveAtLevelStart", connectedPlayer));
}
// Autogenerated method: ConnectedPlayerHelpers.IsActive
bool GlobalNamespace::ConnectedPlayerHelpers::IsActive(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "ConnectedPlayerHelpers", "IsActive", connectedPlayer));
}
// Autogenerated method: ConnectedPlayerHelpers.HasFinishedLevel
bool GlobalNamespace::ConnectedPlayerHelpers::HasFinishedLevel(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "ConnectedPlayerHelpers", "HasFinishedLevel", connectedPlayer));
}
// Autogenerated method: ConnectedPlayerHelpers.IsActiveOrFinished
bool GlobalNamespace::ConnectedPlayerHelpers::IsActiveOrFinished(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "ConnectedPlayerHelpers", "IsActiveOrFinished", connectedPlayer));
}
// Autogenerated method: ConnectedPlayerHelpers.IsLeftHanded
bool GlobalNamespace::ConnectedPlayerHelpers::IsLeftHanded(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "ConnectedPlayerHelpers", "IsLeftHanded", connectedPlayer));
}
// Autogenerated method: ConnectedPlayerHelpers.IsFailed
bool GlobalNamespace::ConnectedPlayerHelpers::IsFailed(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "ConnectedPlayerHelpers", "IsFailed", connectedPlayer));
}
