// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamVR_SphericalProjection
#include "GlobalNamespace/SteamVR_SphericalProjection.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material material
UnityEngine::Material* GlobalNamespace::SteamVR_SphericalProjection::_get_material() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_SphericalProjection").WithContext("_get_material");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Material*>("", "SteamVR_SphericalProjection", "material"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material material
void GlobalNamespace::SteamVR_SphericalProjection::_set_material(UnityEngine::Material* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_SphericalProjection").WithContext("_set_material");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_SphericalProjection", "material", value));
}
// Autogenerated method: SteamVR_SphericalProjection.Set
void GlobalNamespace::SteamVR_SphericalProjection::Set(UnityEngine::Vector3 N, float phi0, float phi1, float theta0, float theta1, UnityEngine::Vector3 uAxis, UnityEngine::Vector3 uOrigin, float uScale, UnityEngine::Vector3 vAxis, UnityEngine::Vector3 vOrigin, float vScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_SphericalProjection").WithContext("Set");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Set", {}, ::il2cpp_utils::ExtractTypes(N, phi0, phi1, theta0, theta1, uAxis, uOrigin, uScale, vAxis, vOrigin, vScale)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, N, phi0, phi1, theta0, theta1, uAxis, uOrigin, uScale, vAxis, vOrigin, vScale);
}
// Autogenerated method: SteamVR_SphericalProjection.OnRenderImage
void GlobalNamespace::SteamVR_SphericalProjection::OnRenderImage(UnityEngine::RenderTexture* src, UnityEngine::RenderTexture* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_SphericalProjection").WithContext("OnRenderImage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnRenderImage", {}, ::il2cpp_utils::ExtractTypes(src, dest)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, dest);
}
// Autogenerated method: SteamVR_SphericalProjection..ctor
GlobalNamespace::SteamVR_SphericalProjection* GlobalNamespace::SteamVR_SphericalProjection::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_SphericalProjection").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<SteamVR_SphericalProjection*>());
}
