// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerDuelConnectedPlayerGameplayAnimator
#include "GlobalNamespace/MultiplayerDuelConnectedPlayerGameplayAnimator.hpp"
// Including type: ScaleAnimator
#include "GlobalNamespace/ScaleAnimator.hpp"
// Including type: MultiplayerConnectedPlayerLevelFailController
#include "GlobalNamespace/MultiplayerConnectedPlayerLevelFailController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerDuelConnectedPlayerGameplayAnimator.TransitionIntoFailedState
void GlobalNamespace::MultiplayerDuelConnectedPlayerGameplayAnimator::TransitionIntoFailedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerDuelConnectedPlayerGameplayAnimator").WithContext("TransitionIntoFailedState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "TransitionIntoFailedState", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerDuelConnectedPlayerGameplayAnimator.HandlePlayerDidFail
void GlobalNamespace::MultiplayerDuelConnectedPlayerGameplayAnimator::HandlePlayerDidFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerDuelConnectedPlayerGameplayAnimator").WithContext("HandlePlayerDidFail");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "HandlePlayerDidFail", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerDuelConnectedPlayerGameplayAnimator.OnDestroy
void GlobalNamespace::MultiplayerDuelConnectedPlayerGameplayAnimator::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerDuelConnectedPlayerGameplayAnimator").WithContext("OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnDestroy", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerDuelConnectedPlayerGameplayAnimator.AnimateNewLeaderSelected
void GlobalNamespace::MultiplayerDuelConnectedPlayerGameplayAnimator::AnimateNewLeaderSelected(bool isLeading) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerDuelConnectedPlayerGameplayAnimator").WithContext("AnimateNewLeaderSelected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "AnimateNewLeaderSelected", {}, ::il2cpp_utils::ExtractTypes(isLeading)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isLeading);
}
// Autogenerated method: MultiplayerDuelConnectedPlayerGameplayAnimator.HandleStateChanged
void GlobalNamespace::MultiplayerDuelConnectedPlayerGameplayAnimator::HandleStateChanged(GlobalNamespace::MultiplayerController::State state) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerDuelConnectedPlayerGameplayAnimator").WithContext("HandleStateChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "HandleStateChanged", {}, ::il2cpp_utils::ExtractTypes(state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: MultiplayerDuelConnectedPlayerGameplayAnimator..ctor
GlobalNamespace::MultiplayerDuelConnectedPlayerGameplayAnimator* GlobalNamespace::MultiplayerDuelConnectedPlayerGameplayAnimator::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerDuelConnectedPlayerGameplayAnimator").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<MultiplayerDuelConnectedPlayerGameplayAnimator*>());
}
