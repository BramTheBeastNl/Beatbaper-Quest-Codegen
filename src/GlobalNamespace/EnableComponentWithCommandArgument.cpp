// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EnableComponentWithCommandArgument
#include "GlobalNamespace/EnableComponentWithCommandArgument.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnableComponentWithCommandArgument.Awake
void GlobalNamespace::EnableComponentWithCommandArgument::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("EnableComponentWithCommandArgument").WithContext("Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Awake", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnableComponentWithCommandArgument..ctor
GlobalNamespace::EnableComponentWithCommandArgument* GlobalNamespace::EnableComponentWithCommandArgument::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("EnableComponentWithCommandArgument").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<EnableComponentWithCommandArgument*>());
}
