// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelListTableCell
#include "GlobalNamespace/LevelListTableCell.hpp"
// Including type: LevelListTableCell/<SetDataFromLevelAsync>d__17
#include "GlobalNamespace/LevelListTableCell_-SetDataFromLevelAsync-d__17.hpp"
// Including type: LevelListTableCell/<RefreshAvailabilityAsync>d__22
#include "GlobalNamespace/LevelListTableCell_-RefreshAvailabilityAsync-d__22.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelListTableCell.SetDataFromLevelAsync
void GlobalNamespace::LevelListTableCell::SetDataFromLevelAsync(GlobalNamespace::IPreviewBeatmapLevel* level, bool isFavorite) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetDataFromLevelAsync", level, isFavorite));
}
// Autogenerated method: LevelListTableCell.RefreshVisuals
void GlobalNamespace::LevelListTableCell::RefreshVisuals() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RefreshVisuals"));
}
// Autogenerated method: LevelListTableCell.RefreshAvailabilityAsync
void GlobalNamespace::LevelListTableCell::RefreshAvailabilityAsync(GlobalNamespace::AdditionalContentModel* contentModel, ::Il2CppString* levelID) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RefreshAvailabilityAsync", contentModel, levelID));
}
// Autogenerated method: LevelListTableCell.CancelAsyncOperations
void GlobalNamespace::LevelListTableCell::CancelAsyncOperations() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "CancelAsyncOperations"));
}
// Autogenerated method: LevelListTableCell.SelectionDidChange
void GlobalNamespace::LevelListTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SelectionDidChange", transitionType));
}
// Autogenerated method: LevelListTableCell.HighlightDidChange
void GlobalNamespace::LevelListTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HighlightDidChange", transitionType));
}
// Autogenerated method: LevelListTableCell.WasPreparedForReuse
void GlobalNamespace::LevelListTableCell::WasPreparedForReuse() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "WasPreparedForReuse"));
}
// Autogenerated method: LevelListTableCell..ctor
GlobalNamespace::LevelListTableCell* GlobalNamespace::LevelListTableCell::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<LevelListTableCell*>());
}
