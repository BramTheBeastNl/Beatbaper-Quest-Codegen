// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: INetworkPacketSubSerializer`1
#include "GlobalNamespace/INetworkPacketSubSerializer_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IMultiplayerSessionManager.get_localPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::IMultiplayerSessionManager::get_localPlayer() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::IConnectedPlayer*>(this, "get_localPlayer"));
}
// Autogenerated method: IMultiplayerSessionManager.get_isConnectionOwner
bool GlobalNamespace::IMultiplayerSessionManager::get_isConnectionOwner() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isConnectionOwner"));
}
// Autogenerated method: IMultiplayerSessionManager.get_syncTime
float GlobalNamespace::IMultiplayerSessionManager::get_syncTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_syncTime"));
}
// Autogenerated method: IMultiplayerSessionManager.get_isSyncTimeInitialized
bool GlobalNamespace::IMultiplayerSessionManager::get_isSyncTimeInitialized() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isSyncTimeInitialized"));
}
// Autogenerated method: IMultiplayerSessionManager.get_syncTimeDelay
float GlobalNamespace::IMultiplayerSessionManager::get_syncTimeDelay() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_syncTimeDelay"));
}
// Autogenerated method: IMultiplayerSessionManager.get_connectedPlayerCount
int GlobalNamespace::IMultiplayerSessionManager::get_connectedPlayerCount() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_connectedPlayerCount"));
}
// Autogenerated method: IMultiplayerSessionManager.get_isConnectingOrConnected
bool GlobalNamespace::IMultiplayerSessionManager::get_isConnectingOrConnected() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isConnectingOrConnected"));
}
// Autogenerated method: IMultiplayerSessionManager.get_isConnected
bool GlobalNamespace::IMultiplayerSessionManager::get_isConnected() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isConnected"));
}
// Autogenerated method: IMultiplayerSessionManager.get_isConnecting
bool GlobalNamespace::IMultiplayerSessionManager::get_isConnecting() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isConnecting"));
}
// Autogenerated method: IMultiplayerSessionManager.get_isSpectating
bool GlobalNamespace::IMultiplayerSessionManager::get_isSpectating() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isSpectating"));
}
// Autogenerated method: IMultiplayerSessionManager.get_connectedPlayers
System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::IMultiplayerSessionManager::get_connectedPlayers() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>*>(this, "get_connectedPlayers"));
}
// Autogenerated method: IMultiplayerSessionManager.get_connectionOwner
GlobalNamespace::IConnectedPlayer* GlobalNamespace::IMultiplayerSessionManager::get_connectionOwner() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::IConnectedPlayer*>(this, "get_connectionOwner"));
}
// Autogenerated method: IMultiplayerSessionManager.add_connectedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_connectedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_connectedEvent", value));
}
// Autogenerated method: IMultiplayerSessionManager.remove_connectedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_connectedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_connectedEvent", value));
}
// Autogenerated method: IMultiplayerSessionManager.add_connectionFailedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_connectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_connectionFailedEvent", value));
}
// Autogenerated method: IMultiplayerSessionManager.remove_connectionFailedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_connectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_connectionFailedEvent", value));
}
// Autogenerated method: IMultiplayerSessionManager.add_playerConnectedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_playerConnectedEvent", value));
}
// Autogenerated method: IMultiplayerSessionManager.remove_playerConnectedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_playerConnectedEvent", value));
}
// Autogenerated method: IMultiplayerSessionManager.add_playerDisconnectedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_playerDisconnectedEvent", value));
}
// Autogenerated method: IMultiplayerSessionManager.remove_playerDisconnectedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_playerDisconnectedEvent", value));
}
// Autogenerated method: IMultiplayerSessionManager.add_playerStateChangedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_playerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_playerStateChangedEvent", value));
}
// Autogenerated method: IMultiplayerSessionManager.remove_playerStateChangedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_playerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_playerStateChangedEvent", value));
}
// Autogenerated method: IMultiplayerSessionManager.add_disconnectedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_disconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_disconnectedEvent", value));
}
// Autogenerated method: IMultiplayerSessionManager.remove_disconnectedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_disconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_disconnectedEvent", value));
}
// Autogenerated method: IMultiplayerSessionManager.SetMaxPlayerCount
void GlobalNamespace::IMultiplayerSessionManager::SetMaxPlayerCount(int maxPlayerCount) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetMaxPlayerCount", maxPlayerCount));
}
// Autogenerated method: IMultiplayerSessionManager.StartSession
void GlobalNamespace::IMultiplayerSessionManager::StartSession(GlobalNamespace::ConnectedPlayerManager* connectedPlayerManager) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "StartSession", connectedPlayerManager));
}
// Autogenerated method: IMultiplayerSessionManager.EndSession
void GlobalNamespace::IMultiplayerSessionManager::EndSession() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "EndSession"));
}
// Autogenerated method: IMultiplayerSessionManager.GetPlayerByUserId
GlobalNamespace::IConnectedPlayer* GlobalNamespace::IMultiplayerSessionManager::GetPlayerByUserId(::Il2CppString* userId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::IConnectedPlayer*>(this, "GetPlayerByUserId", userId));
}
// Autogenerated method: IMultiplayerSessionManager.GetConnectedPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::IMultiplayerSessionManager::GetConnectedPlayer(int index) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::IConnectedPlayer*>(this, "GetConnectedPlayer", index));
}
// Autogenerated method: IMultiplayerSessionManager.GetConnectedPlayerByUserId
GlobalNamespace::IConnectedPlayer* GlobalNamespace::IMultiplayerSessionManager::GetConnectedPlayerByUserId(::Il2CppString* userId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::IConnectedPlayer*>(this, "GetConnectedPlayerByUserId", userId));
}
// Autogenerated method: IMultiplayerSessionManager.Disconnect
void GlobalNamespace::IMultiplayerSessionManager::Disconnect() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Disconnect"));
}
// Autogenerated method: IMultiplayerSessionManager.SetLocalPlayerState
void GlobalNamespace::IMultiplayerSessionManager::SetLocalPlayerState(::Il2CppString* state, bool hasState) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetLocalPlayerState", state, hasState));
}
// Autogenerated method: IMultiplayerSessionManager.LocalPlayerHasState
bool GlobalNamespace::IMultiplayerSessionManager::LocalPlayerHasState(::Il2CppString* state) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "LocalPlayerHasState", state));
}
// Autogenerated method: IMultiplayerSessionManager.RegisterSerializer
void GlobalNamespace::IMultiplayerSessionManager::RegisterSerializer(GlobalNamespace::MultiplayerSessionManager::MessageType serializerType, GlobalNamespace::INetworkPacketSubSerializer_1<GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RegisterSerializer", serializerType, subSerializer));
}
// Autogenerated method: IMultiplayerSessionManager.UnregisterSerializer
void GlobalNamespace::IMultiplayerSessionManager::UnregisterSerializer(GlobalNamespace::MultiplayerSessionManager::MessageType serializerType, GlobalNamespace::INetworkPacketSubSerializer_1<GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UnregisterSerializer", serializerType, subSerializer));
}
// Autogenerated method: IMultiplayerSessionManager.PerformAtSyncTime
void GlobalNamespace::IMultiplayerSessionManager::PerformAtSyncTime(float syncTime, System::Action* action) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PerformAtSyncTime", syncTime, action));
}
