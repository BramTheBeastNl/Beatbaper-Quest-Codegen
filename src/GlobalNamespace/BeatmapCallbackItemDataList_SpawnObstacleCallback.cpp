// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapCallbackItemDataList/SpawnObstacleCallback
#include "GlobalNamespace/BeatmapCallbackItemDataList_SpawnObstacleCallback.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapCallbackItemDataList/SpawnObstacleCallback..ctor
GlobalNamespace::BeatmapCallbackItemDataList::SpawnObstacleCallback* GlobalNamespace::BeatmapCallbackItemDataList::SpawnObstacleCallback::New_ctor(::Il2CppObject* object, System::IntPtr method) {
  return (BeatmapCallbackItemDataList::SpawnObstacleCallback*)THROW_UNLESS(il2cpp_utils::New("", "BeatmapCallbackItemDataList/SpawnObstacleCallback", object, method));
}
// Autogenerated method: BeatmapCallbackItemDataList/SpawnObstacleCallback.Invoke
void GlobalNamespace::BeatmapCallbackItemDataList::SpawnObstacleCallback::Invoke(GlobalNamespace::ObstacleData* obstacleData) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Invoke", obstacleData));
}
// Autogenerated method: BeatmapCallbackItemDataList/SpawnObstacleCallback.BeginInvoke
System::IAsyncResult* GlobalNamespace::BeatmapCallbackItemDataList::SpawnObstacleCallback::BeginInvoke(GlobalNamespace::ObstacleData* obstacleData, System::AsyncCallback* callback, ::Il2CppObject* object) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IAsyncResult*>(this, "BeginInvoke", obstacleData, callback, object));
}
// Autogenerated method: BeatmapCallbackItemDataList/SpawnObstacleCallback.EndInvoke
void GlobalNamespace::BeatmapCallbackItemDataList::SpawnObstacleCallback::EndInvoke(System::IAsyncResult* result) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "EndInvoke", result));
}
