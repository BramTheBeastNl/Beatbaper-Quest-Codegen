// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberSwingRating
#include "GlobalNamespace/SaberSwingRating.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kMaxNormalAngleDiff
float GlobalNamespace::SaberSwingRating::_get_kMaxNormalAngleDiff() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SaberSwingRating").WithContext("_get_kMaxNormalAngleDiff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kMaxNormalAngleDiff"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kMaxNormalAngleDiff
void GlobalNamespace::SaberSwingRating::_set_kMaxNormalAngleDiff(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SaberSwingRating").WithContext("_set_kMaxNormalAngleDiff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kMaxNormalAngleDiff", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kToleranceNormalAngleDiff
float GlobalNamespace::SaberSwingRating::_get_kToleranceNormalAngleDiff() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SaberSwingRating").WithContext("_get_kToleranceNormalAngleDiff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kToleranceNormalAngleDiff"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kToleranceNormalAngleDiff
void GlobalNamespace::SaberSwingRating::_set_kToleranceNormalAngleDiff(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SaberSwingRating").WithContext("_set_kToleranceNormalAngleDiff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kToleranceNormalAngleDiff", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kMaxBeforeCutSwingDuration
float GlobalNamespace::SaberSwingRating::_get_kMaxBeforeCutSwingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SaberSwingRating").WithContext("_get_kMaxBeforeCutSwingDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kMaxBeforeCutSwingDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kMaxBeforeCutSwingDuration
void GlobalNamespace::SaberSwingRating::_set_kMaxBeforeCutSwingDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SaberSwingRating").WithContext("_set_kMaxBeforeCutSwingDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kMaxBeforeCutSwingDuration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kMaxAfterCutSwingDuration
float GlobalNamespace::SaberSwingRating::_get_kMaxAfterCutSwingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SaberSwingRating").WithContext("_get_kMaxAfterCutSwingDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kMaxAfterCutSwingDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kMaxAfterCutSwingDuration
void GlobalNamespace::SaberSwingRating::_set_kMaxAfterCutSwingDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SaberSwingRating").WithContext("_set_kMaxAfterCutSwingDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kMaxAfterCutSwingDuration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kBeforeCutAngleFor1Rating
float GlobalNamespace::SaberSwingRating::_get_kBeforeCutAngleFor1Rating() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SaberSwingRating").WithContext("_get_kBeforeCutAngleFor1Rating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kBeforeCutAngleFor1Rating"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kBeforeCutAngleFor1Rating
void GlobalNamespace::SaberSwingRating::_set_kBeforeCutAngleFor1Rating(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SaberSwingRating").WithContext("_set_kBeforeCutAngleFor1Rating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kBeforeCutAngleFor1Rating", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kAfterCutAngleFor1Rating
float GlobalNamespace::SaberSwingRating::_get_kAfterCutAngleFor1Rating() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SaberSwingRating").WithContext("_get_kAfterCutAngleFor1Rating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kAfterCutAngleFor1Rating"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kAfterCutAngleFor1Rating
void GlobalNamespace::SaberSwingRating::_set_kAfterCutAngleFor1Rating(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SaberSwingRating").WithContext("_set_kAfterCutAngleFor1Rating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kAfterCutAngleFor1Rating", value));
}
// Autogenerated method: SaberSwingRating.NormalRating
float GlobalNamespace::SaberSwingRating::NormalRating(float normalDiff) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SaberSwingRating").WithContext("NormalRating");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SaberSwingRating", "NormalRating", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(normalDiff)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, normalDiff);
}
// Autogenerated method: SaberSwingRating.BeforeCutStepRating
float GlobalNamespace::SaberSwingRating::BeforeCutStepRating(float angleDiff, float normalDiff) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SaberSwingRating").WithContext("BeforeCutStepRating");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SaberSwingRating", "BeforeCutStepRating", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(angleDiff, normalDiff)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, angleDiff, normalDiff);
}
// Autogenerated method: SaberSwingRating.AfterCutStepRating
float GlobalNamespace::SaberSwingRating::AfterCutStepRating(float angleDiff, float normalDiff) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SaberSwingRating").WithContext("AfterCutStepRating");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SaberSwingRating", "AfterCutStepRating", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(angleDiff, normalDiff)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, angleDiff, normalDiff);
}
