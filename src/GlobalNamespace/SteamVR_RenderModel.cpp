// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamVR_RenderModel
#include "GlobalNamespace/SteamVR_RenderModel.hpp"
// Including type: SteamVR_RenderModel/RenderModel
#include "GlobalNamespace/SteamVR_RenderModel_RenderModel.hpp"
// Including type: SteamVR_RenderModel/RenderModelInterfaceHolder
#include "GlobalNamespace/SteamVR_RenderModel_RenderModelInterfaceHolder.hpp"
// Including type: SteamVR_RenderModel/<SetModelAsync>d__21
#include "GlobalNamespace/SteamVR_RenderModel_-SetModelAsync-d__21.hpp"
// Including type: SteamVR_RenderModel/<FreeRenderModel>d__24
#include "GlobalNamespace/SteamVR_RenderModel_-FreeRenderModel-d__24.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: Valve.VR.VREvent_t
#include "Valve/VR/VREvent_t.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Valve.VR.CVRRenderModels
#include "Valve/VR/CVRRenderModels.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Valve.VR.RenderModel_t
#include "Valve/VR/RenderModel_t.hpp"
// Including type: Valve.VR.RenderModel_TextureMap_t
#include "Valve/VR/RenderModel_TextureMap_t.hpp"
// Including type: SteamVR_Events/Action
#include "GlobalNamespace/SteamVR_Events_Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String modelOverrideWarning
::Il2CppString* GlobalNamespace::SteamVR_RenderModel::_get_modelOverrideWarning() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("_get_modelOverrideWarning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "SteamVR_RenderModel", "modelOverrideWarning"));
}
// Autogenerated static field setter
// Set static field: static public System.String modelOverrideWarning
void GlobalNamespace::SteamVR_RenderModel::_set_modelOverrideWarning(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("_set_modelOverrideWarning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_RenderModel", "modelOverrideWarning", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_localTransformName
::Il2CppString* GlobalNamespace::SteamVR_RenderModel::_get_k_localTransformName() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("_get_k_localTransformName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "SteamVR_RenderModel", "k_localTransformName"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_localTransformName
void GlobalNamespace::SteamVR_RenderModel::_set_k_localTransformName(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("_set_k_localTransformName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_RenderModel", "k_localTransformName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Hashtable models
System::Collections::Hashtable* GlobalNamespace::SteamVR_RenderModel::_get_models() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("_get_models");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("", "SteamVR_RenderModel", "models"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Hashtable models
void GlobalNamespace::SteamVR_RenderModel::_set_models(System::Collections::Hashtable* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("_set_models");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_RenderModel", "models", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Hashtable materials
System::Collections::Hashtable* GlobalNamespace::SteamVR_RenderModel::_get_materials() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("_get_materials");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("", "SteamVR_RenderModel", "materials"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Hashtable materials
void GlobalNamespace::SteamVR_RenderModel::_set_materials(System::Collections::Hashtable* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("_set_materials");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_RenderModel", "materials", value));
}
// Autogenerated method: SteamVR_RenderModel.get_renderModelName
::Il2CppString* GlobalNamespace::SteamVR_RenderModel::get_renderModelName() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("get_renderModelName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "get_renderModelName", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_RenderModel.set_renderModelName
void GlobalNamespace::SteamVR_RenderModel::set_renderModelName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("set_renderModelName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_renderModelName", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR_RenderModel.OnModelSkinSettingsHaveChanged
void GlobalNamespace::SteamVR_RenderModel::OnModelSkinSettingsHaveChanged(Valve::VR::VREvent_t vrEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("OnModelSkinSettingsHaveChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnModelSkinSettingsHaveChanged", {}, ::il2cpp_utils::ExtractTypes(vrEvent)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vrEvent);
}
// Autogenerated method: SteamVR_RenderModel.OnHideRenderModels
void GlobalNamespace::SteamVR_RenderModel::OnHideRenderModels(bool hidden) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("OnHideRenderModels");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnHideRenderModels", {}, ::il2cpp_utils::ExtractTypes(hidden)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hidden);
}
// Autogenerated method: SteamVR_RenderModel.OnDeviceConnected
void GlobalNamespace::SteamVR_RenderModel::OnDeviceConnected(int i, bool connected) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("OnDeviceConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnDeviceConnected", {}, ::il2cpp_utils::ExtractTypes(i, connected)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, i, connected);
}
// Autogenerated method: SteamVR_RenderModel.UpdateModel
void GlobalNamespace::SteamVR_RenderModel::UpdateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("UpdateModel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "UpdateModel", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_RenderModel.SetModelAsync
System::Collections::IEnumerator* GlobalNamespace::SteamVR_RenderModel::SetModelAsync(::Il2CppString* renderModelName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("SetModelAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Collections::IEnumerator*>(), "SetModelAsync", {}, ::il2cpp_utils::ExtractTypes(renderModelName)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, renderModelName);
}
// Autogenerated method: SteamVR_RenderModel.SetModel
bool GlobalNamespace::SteamVR_RenderModel::SetModel(::Il2CppString* renderModelName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("SetModel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "SetModel", {}, ::il2cpp_utils::ExtractTypes(renderModelName)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, renderModelName);
}
// Autogenerated method: SteamVR_RenderModel.LoadRenderModel
GlobalNamespace::SteamVR_RenderModel::RenderModel* GlobalNamespace::SteamVR_RenderModel::LoadRenderModel(Valve::VR::CVRRenderModels* renderModels, ::Il2CppString* renderModelName, ::Il2CppString* baseName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("LoadRenderModel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<GlobalNamespace::SteamVR_RenderModel::RenderModel*>(), "LoadRenderModel", {}, ::il2cpp_utils::ExtractTypes(renderModels, renderModelName, baseName)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SteamVR_RenderModel::RenderModel*, false>(this, ___internal__method, renderModels, renderModelName, baseName);
}
// Autogenerated method: SteamVR_RenderModel.FreeRenderModel
System::Collections::IEnumerator* GlobalNamespace::SteamVR_RenderModel::FreeRenderModel(System::IntPtr pRenderModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("FreeRenderModel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Collections::IEnumerator*>(), "FreeRenderModel", {}, ::il2cpp_utils::ExtractTypes(pRenderModel)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, pRenderModel);
}
// Autogenerated method: SteamVR_RenderModel.FindComponent
UnityEngine::Transform* GlobalNamespace::SteamVR_RenderModel::FindComponent(::Il2CppString* componentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("FindComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Transform*>(), "FindComponent", {}, ::il2cpp_utils::ExtractTypes(componentName)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method, componentName);
}
// Autogenerated method: SteamVR_RenderModel.StripMesh
void GlobalNamespace::SteamVR_RenderModel::StripMesh(UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("StripMesh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "StripMesh", {}, ::il2cpp_utils::ExtractTypes(go)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, go);
}
// Autogenerated method: SteamVR_RenderModel.LoadComponents
bool GlobalNamespace::SteamVR_RenderModel::LoadComponents(GlobalNamespace::SteamVR_RenderModel::RenderModelInterfaceHolder* holder, ::Il2CppString* renderModelName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("LoadComponents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "LoadComponents", {}, ::il2cpp_utils::ExtractTypes(holder, renderModelName)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, holder, renderModelName);
}
// Autogenerated method: SteamVR_RenderModel.OnEnable
void GlobalNamespace::SteamVR_RenderModel::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnEnable", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_RenderModel.OnDisable
void GlobalNamespace::SteamVR_RenderModel::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnDisable", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_RenderModel.Update
void GlobalNamespace::SteamVR_RenderModel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Update", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_RenderModel.UpdateComponents
void GlobalNamespace::SteamVR_RenderModel::UpdateComponents(Valve::VR::CVRRenderModels* renderModels) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("UpdateComponents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "UpdateComponents", {}, ::il2cpp_utils::ExtractTypes(renderModels)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, renderModels);
}
// Autogenerated method: SteamVR_RenderModel.SetDeviceIndex
void GlobalNamespace::SteamVR_RenderModel::SetDeviceIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("SetDeviceIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetDeviceIndex", {}, ::il2cpp_utils::ExtractTypes(index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: SteamVR_RenderModel.Sleep
void GlobalNamespace::SteamVR_RenderModel::Sleep() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("Sleep");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_RenderModel", il2cpp_utils::NoArgClass<void>(), "Sleep", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: SteamVR_RenderModel.MarshalRenderModel
Valve::VR::RenderModel_t GlobalNamespace::SteamVR_RenderModel::MarshalRenderModel(System::IntPtr pRenderModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("MarshalRenderModel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::RenderModel_t>(), "MarshalRenderModel", {}, ::il2cpp_utils::ExtractTypes(pRenderModel)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::RenderModel_t, false>(this, ___internal__method, pRenderModel);
}
// Autogenerated method: SteamVR_RenderModel.MarshalRenderModel_TextureMap
Valve::VR::RenderModel_TextureMap_t GlobalNamespace::SteamVR_RenderModel::MarshalRenderModel_TextureMap(System::IntPtr pRenderModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext("MarshalRenderModel_TextureMap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::RenderModel_TextureMap_t>(), "MarshalRenderModel_TextureMap", {}, ::il2cpp_utils::ExtractTypes(pRenderModel)));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::RenderModel_TextureMap_t, false>(this, ___internal__method, pRenderModel);
}
// Autogenerated method: SteamVR_RenderModel..ctor
GlobalNamespace::SteamVR_RenderModel* GlobalNamespace::SteamVR_RenderModel::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<SteamVR_RenderModel*>());
}
// Autogenerated method: SteamVR_RenderModel..cctor
void GlobalNamespace::SteamVR_RenderModel::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_RenderModel").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_RenderModel", il2cpp_utils::NoArgClass<void>(), ".cctor", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
