// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kToStringPrefix
::Il2CppString* GlobalNamespace::SongPackMask::_get_kToStringPrefix() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("_get_kToStringPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "SongPackMask", "kToStringPrefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String kToStringPrefix
void GlobalNamespace::SongPackMask::_set_kToStringPrefix(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("_set_kToStringPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMask", "kToStringPrefix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kToStringSuffix
::Il2CppString* GlobalNamespace::SongPackMask::_get_kToStringSuffix() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("_get_kToStringSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "SongPackMask", "kToStringSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String kToStringSuffix
void GlobalNamespace::SongPackMask::_set_kToStringSuffix(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("_set_kToStringSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMask", "kToStringSuffix", value));
}
// Autogenerated method: SongPackMask..ctor
GlobalNamespace::SongPackMask::SongPackMask(::Il2CppString* packId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext(".ctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<SongPackMask>(), ".ctor", {}, ::il2cpp_utils::ExtractTypes(packId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, packId);
}
// Autogenerated method: SongPackMask..ctor
// ABORTED elsewhere.  GlobalNamespace::SongPackMask::SongPackMask(GlobalNamespace::BloomFilter bloomFilter)
// Autogenerated method: SongPackMask.get_all
GlobalNamespace::SongPackMask GlobalNamespace::SongPackMask::get_all() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("get_all");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SongPackMask", il2cpp_utils::NoArgClass<GlobalNamespace::SongPackMask>(), "get_all", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: SongPackMask.Contains
bool GlobalNamespace::SongPackMask::Contains(GlobalNamespace::SongPackMask other) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<bool>(), "Contains", {}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: SongPackMask.DifferenceFrom
int GlobalNamespace::SongPackMask::DifferenceFrom(GlobalNamespace::SongPackMask other) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("DifferenceFrom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<int>(), "DifferenceFrom", {}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, other);
}
// Autogenerated method: SongPackMask.Deserialize
GlobalNamespace::SongPackMask GlobalNamespace::SongPackMask::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("Deserialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SongPackMask", il2cpp_utils::NoArgClass<GlobalNamespace::SongPackMask>(), "Deserialize", {}, ::il2cpp_utils::ExtractTypes(reader)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: SongPackMask.ToShortString
::Il2CppString* GlobalNamespace::SongPackMask::ToShortString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("ToShortString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "ToShortString", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: SongPackMask.ToBytes
::Array<uint8_t>* GlobalNamespace::SongPackMask::ToBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("ToBytes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<::Array<uint8_t>*>(), "ToBytes", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(*this, ___internal__method);
}
// Autogenerated method: SongPackMask.TryParse
bool GlobalNamespace::SongPackMask::TryParse(::Il2CppString* stringSerializedMask, GlobalNamespace::SongPackMask& songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("TryParse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SongPackMask", il2cpp_utils::NoArgClass<bool>(), "TryParse", {}, ::il2cpp_utils::ExtractTypes(stringSerializedMask, songPackMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stringSerializedMask, songPackMask);
}
// Autogenerated method: SongPackMask.Parse
GlobalNamespace::SongPackMask GlobalNamespace::SongPackMask::Parse(::Il2CppString* stringSerializedMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SongPackMask", il2cpp_utils::NoArgClass<GlobalNamespace::SongPackMask>(), "Parse", {}, ::il2cpp_utils::ExtractTypes(stringSerializedMask)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stringSerializedMask);
}
// Autogenerated method: SongPackMask.FromBytes
GlobalNamespace::SongPackMask GlobalNamespace::SongPackMask::FromBytes(::Array<uint8_t>* bytes, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("FromBytes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SongPackMask", il2cpp_utils::NoArgClass<GlobalNamespace::SongPackMask>(), "FromBytes", {}, ::il2cpp_utils::ExtractTypes(bytes, offset)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes, offset);
}
// Autogenerated method: SongPackMask.Serialize
void GlobalNamespace::SongPackMask::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("Serialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<void>(), "Serialize", {}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, writer);
}
// Autogenerated method: SongPackMask.CreateFromSerializedData
GlobalNamespace::SongPackMask GlobalNamespace::SongPackMask::CreateFromSerializedData(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("CreateFromSerializedData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<GlobalNamespace::SongPackMask>(), "CreateFromSerializedData", {}, ::il2cpp_utils::ExtractTypes(reader)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(*this, ___internal__method, reader);
}
GlobalNamespace::SongPackMask GlobalNamespace::SongPackMask::LiteNetLib_Utils_INetImmutableSerializable_1_CreateFromSerializedData(LiteNetLib::Utils::NetDataReader* reader) {
  return GlobalNamespace::SongPackMask::CreateFromSerializedData(reader);
}
// Autogenerated method: SongPackMask.ToString
::Il2CppString* GlobalNamespace::SongPackMask::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "ToString", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: SongPackMask.GetHashCode
int GlobalNamespace::SongPackMask::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<int>(), "GetHashCode", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: SongPackMask.Equals
bool GlobalNamespace::SongPackMask::Equals(GlobalNamespace::SongPackMask other) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<bool>(), "Equals", {}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: SongPackMask.Equals
bool GlobalNamespace::SongPackMask::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, il2cpp_utils::NoArgClass<bool>(), "Equals", {}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: SongPackMask.op_BitwiseOr
GlobalNamespace::SongPackMask GlobalNamespace::operator|(const GlobalNamespace::SongPackMask& a, const GlobalNamespace::SongPackMask& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("op_BitwiseOr");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SongPackMask", il2cpp_utils::NoArgClass<GlobalNamespace::SongPackMask>(), "op_BitwiseOr", {}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: SongPackMask.op_BitwiseAnd
GlobalNamespace::SongPackMask GlobalNamespace::operator&(const GlobalNamespace::SongPackMask& a, const GlobalNamespace::SongPackMask& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("op_BitwiseAnd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SongPackMask", il2cpp_utils::NoArgClass<GlobalNamespace::SongPackMask>(), "op_BitwiseAnd", {}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: SongPackMask.op_Equality
bool GlobalNamespace::operator ==(const GlobalNamespace::SongPackMask& a, const GlobalNamespace::SongPackMask& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SongPackMask", il2cpp_utils::NoArgClass<bool>(), "op_Equality", {}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: SongPackMask.op_Inequality
bool GlobalNamespace::operator !=(const GlobalNamespace::SongPackMask& a, const GlobalNamespace::SongPackMask& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SongPackMask").WithContext("op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SongPackMask", il2cpp_utils::NoArgClass<bool>(), "op_Inequality", {}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
