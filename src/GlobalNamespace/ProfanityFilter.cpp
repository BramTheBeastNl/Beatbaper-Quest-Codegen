// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ProfanityFilter
#include "GlobalNamespace/ProfanityFilter.hpp"
// Including type: ProfanityFilter/TrieNode
#include "GlobalNamespace/ProfanityFilter_TrieNode.hpp"
// Including type: ProfanityFilter/<GetLookalikeLetters>d__4
#include "GlobalNamespace/ProfanityFilter_-GetLookalikeLetters-d__4.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ProfanityFilter.IsProfane
bool GlobalNamespace::ProfanityFilter::IsProfane(::Il2CppString* word) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ProfanityFilter").WithContext("IsProfane");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsProfane", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(word)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, word);
}
// Autogenerated method: ProfanityFilter.GetLookalikeLetters
System::Collections::Generic::IEnumerable_1<::Il2CppChar>* GlobalNamespace::ProfanityFilter::GetLookalikeLetters(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ProfanityFilter").WithContext("GetLookalikeLetters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "ProfanityFilter", "GetLookalikeLetters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: ProfanityFilter.GetLeetEquivalent
::Il2CppChar GlobalNamespace::ProfanityFilter::GetLeetEquivalent(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ProfanityFilter").WithContext("GetLeetEquivalent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "ProfanityFilter", "GetLeetEquivalent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
