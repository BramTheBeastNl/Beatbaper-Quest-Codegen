// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AutomaticSFXVolume
#include "GlobalNamespace/AutomaticSFXVolume.hpp"
// Including type: AutomaticSFXVolume/InitData
#include "GlobalNamespace/AutomaticSFXVolume_InitData.hpp"
// Including type: AutomaticSFXVolumeParamsSO
#include "GlobalNamespace/AutomaticSFXVolumeParamsSO.hpp"
// Including type: AudioManagerSO
#include "GlobalNamespace/AudioManagerSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kBaseVolume
float GlobalNamespace::AutomaticSFXVolume::_get_kBaseVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("AutomaticSFXVolume").WithContext("_get_kBaseVolume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "AutomaticSFXVolume", "kBaseVolume"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kBaseVolume
void GlobalNamespace::AutomaticSFXVolume::_set_kBaseVolume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("AutomaticSFXVolume").WithContext("_set_kBaseVolume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AutomaticSFXVolume", "kBaseVolume", value));
}
// Autogenerated method: AutomaticSFXVolume.Start
void GlobalNamespace::AutomaticSFXVolume::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("AutomaticSFXVolume").WithContext("Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AutomaticSFXVolume.OnDisable
void GlobalNamespace::AutomaticSFXVolume::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("AutomaticSFXVolume").WithContext("OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AutomaticSFXVolume.OnValidate
void GlobalNamespace::AutomaticSFXVolume::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("AutomaticSFXVolume").WithContext("OnValidate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AutomaticSFXVolume.RecalculateParams
void GlobalNamespace::AutomaticSFXVolume::RecalculateParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("AutomaticSFXVolume").WithContext("RecalculateParams");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RecalculateParams", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AutomaticSFXVolume.OnAudioFilterRead
void GlobalNamespace::AutomaticSFXVolume::OnAudioFilterRead(::Array<float>* data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("AutomaticSFXVolume").WithContext("OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data, channels)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: AutomaticSFXVolume.Update
void GlobalNamespace::AutomaticSFXVolume::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("AutomaticSFXVolume").WithContext("Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
