// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: ConnectedPlayerManager/ConnectedPlayer
#include "GlobalNamespace/ConnectedPlayerManager_ConnectedPlayer.hpp"
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: ConnectedPlayerManager/MessageType
#include "GlobalNamespace/ConnectedPlayerManager_MessageType.hpp"
// Including type: ConnectedPlayerManager/PlayerConnectedPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerConnectedPacket.hpp"
// Including type: ConnectedPlayerManager/PlayerStatePacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerStatePacket.hpp"
// Including type: ConnectedPlayerManager/PlayerSortOrderPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerSortOrderPacket.hpp"
// Including type: ConnectedPlayerManager/PlayerDisconnectedPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerDisconnectedPacket.hpp"
// Including type: ConnectedPlayerManager/KickPlayerPacket
#include "GlobalNamespace/ConnectedPlayerManager_KickPlayerPacket.hpp"
// Including type: ConnectedPlayerManager/SyncTimePacket
#include "GlobalNamespace/ConnectedPlayerManager_SyncTimePacket.hpp"
// Including type: ConnectedPlayerManager/PlayerLatencyPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerLatencyPacket.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: RollingAverage
#include "GlobalNamespace/RollingAverage.hpp"
// Including type: IConnectionManager
#include "GlobalNamespace/IConnectionManager.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: NetworkPacketSerializer`2
#include "GlobalNamespace/NetworkPacketSerializer_2.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
// Including type: INetworkPacketSubSerializer`1
#include "GlobalNamespace/INetworkPacketSubSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.DeliveryMethod
#include "LiteNetLib/DeliveryMethod.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 invalidSortIndex
int GlobalNamespace::ConnectedPlayerManager::_get_invalidSortIndex() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("_get_invalidSortIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ConnectedPlayerManager", "invalidSortIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 invalidSortIndex
void GlobalNamespace::ConnectedPlayerManager::_set_invalidSortIndex(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("_set_invalidSortIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager", "invalidSortIndex", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte kAllConnectionsId
uint8_t GlobalNamespace::ConnectedPlayerManager::_get_kAllConnectionsId() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("_get_kAllConnectionsId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "ConnectedPlayerManager", "kAllConnectionsId"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kAllConnectionsId
void GlobalNamespace::ConnectedPlayerManager::_set_kAllConnectionsId(uint8_t value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("_set_kAllConnectionsId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager", "kAllConnectionsId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte kLocalConnectionId
uint8_t GlobalNamespace::ConnectedPlayerManager::_get_kLocalConnectionId() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("_get_kLocalConnectionId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "ConnectedPlayerManager", "kLocalConnectionId"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kLocalConnectionId
void GlobalNamespace::ConnectedPlayerManager::_set_kLocalConnectionId(uint8_t value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("_set_kLocalConnectionId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager", "kLocalConnectionId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kSyncTimeUpdateFrequency
float GlobalNamespace::ConnectedPlayerManager::_get_kSyncTimeUpdateFrequency() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("_get_kSyncTimeUpdateFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ConnectedPlayerManager", "kSyncTimeUpdateFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSyncTimeUpdateFrequency
void GlobalNamespace::ConnectedPlayerManager::_set_kSyncTimeUpdateFrequency(float value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("_set_kSyncTimeUpdateFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager", "kSyncTimeUpdateFrequency", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kSyncTimeAllowedReceiveWindow
float GlobalNamespace::ConnectedPlayerManager::_get_kSyncTimeAllowedReceiveWindow() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("_get_kSyncTimeAllowedReceiveWindow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ConnectedPlayerManager", "kSyncTimeAllowedReceiveWindow"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSyncTimeAllowedReceiveWindow
void GlobalNamespace::ConnectedPlayerManager::_set_kSyncTimeAllowedReceiveWindow(float value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("_set_kSyncTimeAllowedReceiveWindow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager", "kSyncTimeAllowedReceiveWindow", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxUnreliableMessageLength
int GlobalNamespace::ConnectedPlayerManager::_get_kMaxUnreliableMessageLength() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("_get_kMaxUnreliableMessageLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ConnectedPlayerManager", "kMaxUnreliableMessageLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxUnreliableMessageLength
void GlobalNamespace::ConnectedPlayerManager::_set_kMaxUnreliableMessageLength(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("_set_kMaxUnreliableMessageLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager", "kMaxUnreliableMessageLength", value));
}
// Autogenerated method: ConnectedPlayerManager.GetNextConnectionId
uint8_t GlobalNamespace::ConnectedPlayerManager::GetNextConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("GetNextConnectionId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNextConnectionId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.RemoveAllPlayers
void GlobalNamespace::ConnectedPlayerManager::RemoveAllPlayers(GlobalNamespace::DisconnectedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("RemoveAllPlayers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveAllPlayers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: ConnectedPlayerManager.RemovePlayer
void GlobalNamespace::ConnectedPlayerManager::RemovePlayer(GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* player, GlobalNamespace::DisconnectedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("RemovePlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemovePlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(player, reason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player, reason);
}
// Autogenerated method: ConnectedPlayerManager.AddPlayer
void GlobalNamespace::ConnectedPlayerManager::AddPlayer(GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("AddPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(player)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: ConnectedPlayerManager.GetPlayer
GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::GetPlayer(uint8_t connectionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("GetPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connectionId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*, false>(this, ___internal__method, connectionId);
}
// Autogenerated method: ConnectedPlayerManager.GetPlayer
GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::GetPlayer(GlobalNamespace::IConnection* connection, uint8_t remoteConnectionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("GetPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connection, remoteConnectionId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*, false>(this, ___internal__method, connection, remoteConnectionId);
}
// Autogenerated method: ConnectedPlayerManager.GetPlayer
GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::GetPlayer(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("GetPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated method: ConnectedPlayerManager.GetConnectedPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::GetConnectedPlayer(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("GetConnectedPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConnectedPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method, index);
}
// Autogenerated method: ConnectedPlayerManager.add_connectedEvent
void GlobalNamespace::ConnectedPlayerManager::add_connectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("add_connectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_connectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.remove_connectedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_connectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("remove_connectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_connectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.add_reinitializedEvent
void GlobalNamespace::ConnectedPlayerManager::add_reinitializedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("add_reinitializedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_reinitializedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.remove_reinitializedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_reinitializedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("remove_reinitializedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_reinitializedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.add_disconnectedEvent
void GlobalNamespace::ConnectedPlayerManager::add_disconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("add_disconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_disconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.remove_disconnectedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_disconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("remove_disconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_disconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.add_connectionFailedEvent
void GlobalNamespace::ConnectedPlayerManager::add_connectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("add_connectionFailedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.remove_connectionFailedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_connectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("remove_connectionFailedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.add_playerConnectedEvent
void GlobalNamespace::ConnectedPlayerManager::add_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("add_playerConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.remove_playerConnectedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("remove_playerConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.add_playerDisconnectedEvent
void GlobalNamespace::ConnectedPlayerManager::add_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("add_playerDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.remove_playerDisconnectedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("remove_playerDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.add_playerStateChangedEvent
void GlobalNamespace::ConnectedPlayerManager::add_playerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("add_playerStateChangedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_playerStateChangedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.remove_playerStateChangedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_playerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("remove_playerStateChangedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_playerStateChangedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.add_playerOrderChangedEvent
void GlobalNamespace::ConnectedPlayerManager::add_playerOrderChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("add_playerOrderChangedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_playerOrderChangedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.remove_playerOrderChangedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_playerOrderChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("remove_playerOrderChangedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_playerOrderChangedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.add_syncTimeInitializedEvent
void GlobalNamespace::ConnectedPlayerManager::add_syncTimeInitializedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("add_syncTimeInitializedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_syncTimeInitializedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.remove_syncTimeInitializedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_syncTimeInitializedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("remove_syncTimeInitializedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_syncTimeInitializedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.get_isConnectionOwner
bool GlobalNamespace::ConnectedPlayerManager::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("get_isConnectionOwner");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.get_isConnectedOrConnecting
bool GlobalNamespace::ConnectedPlayerManager::get_isConnectedOrConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("get_isConnectedOrConnecting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnectedOrConnecting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.get_isConnected
bool GlobalNamespace::ConnectedPlayerManager::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("get_isConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.get_isConnecting
bool GlobalNamespace::ConnectedPlayerManager::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("get_isConnecting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.get_isDisconnecting
bool GlobalNamespace::ConnectedPlayerManager::get_isDisconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("get_isDisconnecting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isDisconnecting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.get_localPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("get_localPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.get_connectedPlayerCount
int GlobalNamespace::ConnectedPlayerManager::get_connectedPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("get_connectedPlayerCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_connectedPlayerCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.get_syncTime
float GlobalNamespace::ConnectedPlayerManager::get_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("get_syncTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_syncTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.get_syncTimeDelay
float GlobalNamespace::ConnectedPlayerManager::get_syncTimeDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("get_syncTimeDelay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_syncTimeDelay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.set_syncTimeDelay
void GlobalNamespace::ConnectedPlayerManager::set_syncTimeDelay(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("set_syncTimeDelay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_syncTimeDelay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.get_syncTimeInitialized
bool GlobalNamespace::ConnectedPlayerManager::get_syncTimeInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("get_syncTimeInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_syncTimeInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.get_runTime
float GlobalNamespace::ConnectedPlayerManager::get_runTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("get_runTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_runTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.ResetLocalState
void GlobalNamespace::ConnectedPlayerManager::ResetLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("ResetLocalState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetLocalState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.PollUpdate
void GlobalNamespace::ConnectedPlayerManager::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("PollUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.RegisterSerializer
void GlobalNamespace::ConnectedPlayerManager::RegisterSerializer(GlobalNamespace::ConnectedPlayerManager::MessageType serializerType, GlobalNamespace::INetworkPacketSubSerializer_1<GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("RegisterSerializer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RegisterSerializer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serializerType, subSerializer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializerType, subSerializer);
}
// Autogenerated method: ConnectedPlayerManager.UnregisterSerializer
void GlobalNamespace::ConnectedPlayerManager::UnregisterSerializer(GlobalNamespace::ConnectedPlayerManager::MessageType serializerType, GlobalNamespace::INetworkPacketSubSerializer_1<GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("UnregisterSerializer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnregisterSerializer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serializerType, subSerializer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializerType, subSerializer);
}
// Autogenerated method: ConnectedPlayerManager.Disconnect
void GlobalNamespace::ConnectedPlayerManager::Disconnect(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("Disconnect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: ConnectedPlayerManager.KickPlayer
void GlobalNamespace::ConnectedPlayerManager::KickPlayer(::Il2CppString* userId, GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("KickPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "KickPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, disconnectedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, disconnectedReason);
}
// Autogenerated method: ConnectedPlayerManager.SetLocalPlayerState
void GlobalNamespace::ConnectedPlayerManager::SetLocalPlayerState(::Il2CppString* state, bool setState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("SetLocalPlayerState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalPlayerState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state, setState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state, setState);
}
// Autogenerated method: ConnectedPlayerManager.SetLocalPlayerAvatar
void GlobalNamespace::ConnectedPlayerManager::SetLocalPlayerAvatar(GlobalNamespace::MultiplayerAvatarData multiplayerAvatarData) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("SetLocalPlayerAvatar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalPlayerAvatar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(multiplayerAvatarData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, multiplayerAvatarData);
}
// Autogenerated method: ConnectedPlayerManager.SetLocalPlayerSortIndex
void GlobalNamespace::ConnectedPlayerManager::SetLocalPlayerSortIndex(int sortIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("SetLocalPlayerSortIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalPlayerSortIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sortIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sortIndex);
}
// Autogenerated method: ConnectedPlayerManager.SetPlayerSortIndex
void GlobalNamespace::ConnectedPlayerManager::SetPlayerSortIndex(GlobalNamespace::IConnectedPlayer* player, int sortIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("SetPlayerSortIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPlayerSortIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(player, sortIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player, sortIndex);
}
// Autogenerated method: ConnectedPlayerManager.HandleConnected
void GlobalNamespace::ConnectedPlayerManager::HandleConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("HandleConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.HandleDisconnected
void GlobalNamespace::ConnectedPlayerManager::HandleDisconnected(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("HandleDisconnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleDisconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: ConnectedPlayerManager.HandleConnectionFailed
void GlobalNamespace::ConnectedPlayerManager::HandleConnectionFailed(GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("HandleConnectionFailed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleConnectionFailed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: ConnectedPlayerManager.HandleConnectionConnected
void GlobalNamespace::ConnectedPlayerManager::HandleConnectionConnected(GlobalNamespace::IConnection* connection) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("HandleConnectionConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleConnectionConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connection)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connection);
}
// Autogenerated method: ConnectedPlayerManager.OnNetworkLatencyUpdate
void GlobalNamespace::ConnectedPlayerManager::OnNetworkLatencyUpdate(GlobalNamespace::IConnection* connection, float latency) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("OnNetworkLatencyUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnNetworkLatencyUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connection, latency)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connection, latency);
}
// Autogenerated method: ConnectedPlayerManager.HandleConnectionDisconnected
void GlobalNamespace::ConnectedPlayerManager::HandleConnectionDisconnected(GlobalNamespace::IConnection* connection, GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("HandleConnectionDisconnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleConnectionDisconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connection, disconnectedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connection, disconnectedReason);
}
// Autogenerated method: ConnectedPlayerManager.OnNetworkReceive
void GlobalNamespace::ConnectedPlayerManager::OnNetworkReceive(GlobalNamespace::IConnection* connection, LiteNetLib::Utils::NetDataReader* reader, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("OnNetworkReceive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnNetworkReceive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connection, reader, deliveryMethod)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connection, reader, deliveryMethod);
}
// Autogenerated method: ConnectedPlayerManager.SendImmediately
void GlobalNamespace::ConnectedPlayerManager::SendImmediately(LiteNetLib::Utils::INetSerializable* message, bool onlyFirstDegree) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("SendImmediately");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendImmediately", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message, onlyFirstDegree)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message, onlyFirstDegree);
}
// Autogenerated method: ConnectedPlayerManager.SendImmediatelyExcludingPlayer
void GlobalNamespace::ConnectedPlayerManager::SendImmediatelyExcludingPlayer(LiteNetLib::Utils::INetSerializable* message, GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* excludingPlayer, bool onlyFirstDegree) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("SendImmediatelyExcludingPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendImmediatelyExcludingPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message, excludingPlayer, onlyFirstDegree)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message, excludingPlayer, onlyFirstDegree);
}
// Autogenerated method: ConnectedPlayerManager.SendImmediatelyToPlayer
void GlobalNamespace::ConnectedPlayerManager::SendImmediatelyToPlayer(LiteNetLib::Utils::INetSerializable* message, GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* toPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("SendImmediatelyToPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendImmediatelyToPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message, toPlayer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message, toPlayer);
}
// Autogenerated method: ConnectedPlayerManager.SendImmediatelyFromPlayer
void GlobalNamespace::ConnectedPlayerManager::SendImmediatelyFromPlayer(LiteNetLib::Utils::INetSerializable* message, GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* fromPlayer, bool onlyFirstDegree) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("SendImmediatelyFromPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendImmediatelyFromPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message, fromPlayer, onlyFirstDegree)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message, fromPlayer, onlyFirstDegree);
}
// Autogenerated method: ConnectedPlayerManager.SendImmediatelyFromPlayerToPlayer
void GlobalNamespace::ConnectedPlayerManager::SendImmediatelyFromPlayerToPlayer(LiteNetLib::Utils::INetSerializable* message, GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* fromPlayer, GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* toPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("SendImmediatelyFromPlayerToPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendImmediatelyFromPlayerToPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message, fromPlayer, toPlayer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message, fromPlayer, toPlayer);
}
// Autogenerated method: ConnectedPlayerManager.FlushReliableQueue
void GlobalNamespace::ConnectedPlayerManager::FlushReliableQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("FlushReliableQueue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FlushReliableQueue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.FlushUnreliableQueue
void GlobalNamespace::ConnectedPlayerManager::FlushUnreliableQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("FlushUnreliableQueue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FlushUnreliableQueue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.WriteOne
LiteNetLib::Utils::NetDataWriter* GlobalNamespace::ConnectedPlayerManager::WriteOne(uint8_t senderId, uint8_t receiverId, LiteNetLib::Utils::INetSerializable* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("WriteOne");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteOne", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(senderId, receiverId, message)));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::Utils::NetDataWriter*, false>(this, ___internal__method, senderId, receiverId, message);
}
// Autogenerated method: ConnectedPlayerManager.Write
void GlobalNamespace::ConnectedPlayerManager::Write(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::Utils::INetSerializable* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer, packet)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer, packet);
}
// Autogenerated method: ConnectedPlayerManager.HandleServerPlayerConnected
void GlobalNamespace::ConnectedPlayerManager::HandleServerPlayerConnected(GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket* packet, GlobalNamespace::IConnectedPlayer* iPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("HandleServerPlayerConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleServerPlayerConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, iPlayer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, iPlayer);
}
// Autogenerated method: ConnectedPlayerManager.HandlePlayerStateUpdate
void GlobalNamespace::ConnectedPlayerManager::HandlePlayerStateUpdate(GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket* packet, GlobalNamespace::IConnectedPlayer* iPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("HandlePlayerStateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandlePlayerStateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, iPlayer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, iPlayer);
}
// Autogenerated method: ConnectedPlayerManager.HandlePlayerLatencyUpdate
void GlobalNamespace::ConnectedPlayerManager::HandlePlayerLatencyUpdate(GlobalNamespace::ConnectedPlayerManager::PlayerLatencyPacket* packet, GlobalNamespace::IConnectedPlayer* iPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("HandlePlayerLatencyUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandlePlayerLatencyUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, iPlayer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, iPlayer);
}
// Autogenerated method: ConnectedPlayerManager.HandleServerPlayerDisconnected
void GlobalNamespace::ConnectedPlayerManager::HandleServerPlayerDisconnected(GlobalNamespace::ConnectedPlayerManager::PlayerDisconnectedPacket* packet, GlobalNamespace::IConnectedPlayer* iPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("HandleServerPlayerDisconnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleServerPlayerDisconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, iPlayer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, iPlayer);
}
// Autogenerated method: ConnectedPlayerManager.HandleKickPlayerPacket
void GlobalNamespace::ConnectedPlayerManager::HandleKickPlayerPacket(GlobalNamespace::ConnectedPlayerManager::KickPlayerPacket* packet, GlobalNamespace::IConnectedPlayer* iPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("HandleKickPlayerPacket");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleKickPlayerPacket", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, iPlayer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, iPlayer);
}
// Autogenerated method: ConnectedPlayerManager.HandlePlayerSortOrderUpdate
void GlobalNamespace::ConnectedPlayerManager::HandlePlayerSortOrderUpdate(GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket* packet, GlobalNamespace::IConnectedPlayer* iPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("HandlePlayerSortOrderUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandlePlayerSortOrderUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, iPlayer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, iPlayer);
}
// Autogenerated method: ConnectedPlayerManager.HandleSyncTimePacket
void GlobalNamespace::ConnectedPlayerManager::HandleSyncTimePacket(GlobalNamespace::ConnectedPlayerManager::SyncTimePacket* packet, GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("HandleSyncTimePacket");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleSyncTimePacket", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, player)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, player);
}
// Autogenerated method: ConnectedPlayerManager.Log
void GlobalNamespace::ConnectedPlayerManager::Log(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("Log");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: ConnectedPlayerManager.Dispose
void GlobalNamespace::ConnectedPlayerManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayerManager").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void GlobalNamespace::ConnectedPlayerManager::System_IDisposable_Dispose() {
  GlobalNamespace::ConnectedPlayerManager::Dispose();
}
