// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: ConnectedPlayerManager/ConnectedPlayer
#include "GlobalNamespace/ConnectedPlayerManager_ConnectedPlayer.hpp"
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: ConnectedPlayerManager/MessageType
#include "GlobalNamespace/ConnectedPlayerManager_MessageType.hpp"
// Including type: ConnectedPlayerManager/PlayerConnectedPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerConnectedPacket.hpp"
// Including type: ConnectedPlayerManager/PlayerStatePacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerStatePacket.hpp"
// Including type: ConnectedPlayerManager/PlayerSortOrderPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerSortOrderPacket.hpp"
// Including type: ConnectedPlayerManager/PlayerDisconnectedPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerDisconnectedPacket.hpp"
// Including type: ConnectedPlayerManager/KickPlayerPacket
#include "GlobalNamespace/ConnectedPlayerManager_KickPlayerPacket.hpp"
// Including type: ConnectedPlayerManager/SyncTimePacket
#include "GlobalNamespace/ConnectedPlayerManager_SyncTimePacket.hpp"
// Including type: ConnectedPlayerManager/PlayerLatencyPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerLatencyPacket.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: RollingAverage
#include "GlobalNamespace/RollingAverage.hpp"
// Including type: IConnectionManager
#include "GlobalNamespace/IConnectionManager.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: NetworkPacketSerializer`2
#include "GlobalNamespace/NetworkPacketSerializer_2.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
// Including type: INetworkPacketSubSerializer`1
#include "GlobalNamespace/INetworkPacketSubSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.DeliveryMethod
#include "LiteNetLib/DeliveryMethod.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 invalidSortIndex
int GlobalNamespace::ConnectedPlayerManager::_get_invalidSortIndex() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ConnectedPlayerManager", "invalidSortIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 invalidSortIndex
void GlobalNamespace::ConnectedPlayerManager::_set_invalidSortIndex(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager", "invalidSortIndex", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte kAllConnectionsId
uint8_t GlobalNamespace::ConnectedPlayerManager::_get_kAllConnectionsId() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "ConnectedPlayerManager", "kAllConnectionsId"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kAllConnectionsId
void GlobalNamespace::ConnectedPlayerManager::_set_kAllConnectionsId(uint8_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager", "kAllConnectionsId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte kLocalConnectionId
uint8_t GlobalNamespace::ConnectedPlayerManager::_get_kLocalConnectionId() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "ConnectedPlayerManager", "kLocalConnectionId"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kLocalConnectionId
void GlobalNamespace::ConnectedPlayerManager::_set_kLocalConnectionId(uint8_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager", "kLocalConnectionId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kSyncTimeUpdateFrequency
float GlobalNamespace::ConnectedPlayerManager::_get_kSyncTimeUpdateFrequency() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ConnectedPlayerManager", "kSyncTimeUpdateFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSyncTimeUpdateFrequency
void GlobalNamespace::ConnectedPlayerManager::_set_kSyncTimeUpdateFrequency(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager", "kSyncTimeUpdateFrequency", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kSyncTimeAllowedReceiveWindow
float GlobalNamespace::ConnectedPlayerManager::_get_kSyncTimeAllowedReceiveWindow() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ConnectedPlayerManager", "kSyncTimeAllowedReceiveWindow"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSyncTimeAllowedReceiveWindow
void GlobalNamespace::ConnectedPlayerManager::_set_kSyncTimeAllowedReceiveWindow(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager", "kSyncTimeAllowedReceiveWindow", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxUnreliableMessageLength
int GlobalNamespace::ConnectedPlayerManager::_get_kMaxUnreliableMessageLength() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ConnectedPlayerManager", "kMaxUnreliableMessageLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxUnreliableMessageLength
void GlobalNamespace::ConnectedPlayerManager::_set_kMaxUnreliableMessageLength(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager", "kMaxUnreliableMessageLength", value));
}
// Autogenerated method: ConnectedPlayerManager.GetNextConnectionId
uint8_t GlobalNamespace::ConnectedPlayerManager::GetNextConnectionId() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint8_t>(this, "GetNextConnectionId"));
}
// Autogenerated method: ConnectedPlayerManager.RemoveAllPlayers
void GlobalNamespace::ConnectedPlayerManager::RemoveAllPlayers(GlobalNamespace::DisconnectedReason reason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RemoveAllPlayers", reason));
}
// Autogenerated method: ConnectedPlayerManager.RemovePlayer
void GlobalNamespace::ConnectedPlayerManager::RemovePlayer(GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* player, GlobalNamespace::DisconnectedReason reason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RemovePlayer", player, reason));
}
// Autogenerated method: ConnectedPlayerManager.AddPlayer
void GlobalNamespace::ConnectedPlayerManager::AddPlayer(GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* player) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddPlayer", player));
}
// Autogenerated method: ConnectedPlayerManager.GetPlayer
GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::GetPlayer(uint8_t connectionId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*>(this, "GetPlayer", connectionId));
}
// Autogenerated method: ConnectedPlayerManager.GetPlayer
GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::GetPlayer(GlobalNamespace::IConnection* connection, uint8_t remoteConnectionId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*>(this, "GetPlayer", connection, remoteConnectionId));
}
// Autogenerated method: ConnectedPlayerManager.GetPlayer
GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::GetPlayer(::Il2CppString* userId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*>(this, "GetPlayer", userId));
}
// Autogenerated method: ConnectedPlayerManager.GetConnectedPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::GetConnectedPlayer(int index) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::IConnectedPlayer*>(this, "GetConnectedPlayer", index));
}
// Autogenerated method: ConnectedPlayerManager.add_connectedEvent
void GlobalNamespace::ConnectedPlayerManager::add_connectedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_connectedEvent", value));
}
// Autogenerated method: ConnectedPlayerManager.remove_connectedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_connectedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_connectedEvent", value));
}
// Autogenerated method: ConnectedPlayerManager.add_reinitializedEvent
void GlobalNamespace::ConnectedPlayerManager::add_reinitializedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_reinitializedEvent", value));
}
// Autogenerated method: ConnectedPlayerManager.remove_reinitializedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_reinitializedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_reinitializedEvent", value));
}
// Autogenerated method: ConnectedPlayerManager.add_disconnectedEvent
void GlobalNamespace::ConnectedPlayerManager::add_disconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_disconnectedEvent", value));
}
// Autogenerated method: ConnectedPlayerManager.remove_disconnectedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_disconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_disconnectedEvent", value));
}
// Autogenerated method: ConnectedPlayerManager.add_connectionFailedEvent
void GlobalNamespace::ConnectedPlayerManager::add_connectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_connectionFailedEvent", value));
}
// Autogenerated method: ConnectedPlayerManager.remove_connectionFailedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_connectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_connectionFailedEvent", value));
}
// Autogenerated method: ConnectedPlayerManager.add_playerConnectedEvent
void GlobalNamespace::ConnectedPlayerManager::add_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_playerConnectedEvent", value));
}
// Autogenerated method: ConnectedPlayerManager.remove_playerConnectedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_playerConnectedEvent", value));
}
// Autogenerated method: ConnectedPlayerManager.add_playerDisconnectedEvent
void GlobalNamespace::ConnectedPlayerManager::add_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_playerDisconnectedEvent", value));
}
// Autogenerated method: ConnectedPlayerManager.remove_playerDisconnectedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_playerDisconnectedEvent", value));
}
// Autogenerated method: ConnectedPlayerManager.add_playerStateChangedEvent
void GlobalNamespace::ConnectedPlayerManager::add_playerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_playerStateChangedEvent", value));
}
// Autogenerated method: ConnectedPlayerManager.remove_playerStateChangedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_playerStateChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_playerStateChangedEvent", value));
}
// Autogenerated method: ConnectedPlayerManager.add_playerOrderChangedEvent
void GlobalNamespace::ConnectedPlayerManager::add_playerOrderChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_playerOrderChangedEvent", value));
}
// Autogenerated method: ConnectedPlayerManager.remove_playerOrderChangedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_playerOrderChangedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_playerOrderChangedEvent", value));
}
// Autogenerated method: ConnectedPlayerManager.add_syncTimeInitializedEvent
void GlobalNamespace::ConnectedPlayerManager::add_syncTimeInitializedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_syncTimeInitializedEvent", value));
}
// Autogenerated method: ConnectedPlayerManager.remove_syncTimeInitializedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_syncTimeInitializedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_syncTimeInitializedEvent", value));
}
// Autogenerated method: ConnectedPlayerManager.get_isConnectionOwner
bool GlobalNamespace::ConnectedPlayerManager::get_isConnectionOwner() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isConnectionOwner"));
}
// Autogenerated method: ConnectedPlayerManager.get_isConnectedOrConnecting
bool GlobalNamespace::ConnectedPlayerManager::get_isConnectedOrConnecting() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isConnectedOrConnecting"));
}
// Autogenerated method: ConnectedPlayerManager.get_isConnected
bool GlobalNamespace::ConnectedPlayerManager::get_isConnected() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isConnected"));
}
// Autogenerated method: ConnectedPlayerManager.get_isConnecting
bool GlobalNamespace::ConnectedPlayerManager::get_isConnecting() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isConnecting"));
}
// Autogenerated method: ConnectedPlayerManager.get_isDisconnecting
bool GlobalNamespace::ConnectedPlayerManager::get_isDisconnecting() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isDisconnecting"));
}
// Autogenerated method: ConnectedPlayerManager.get_localPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::get_localPlayer() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::IConnectedPlayer*>(this, "get_localPlayer"));
}
// Autogenerated method: ConnectedPlayerManager.get_connectedPlayerCount
int GlobalNamespace::ConnectedPlayerManager::get_connectedPlayerCount() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_connectedPlayerCount"));
}
// Autogenerated method: ConnectedPlayerManager.get_syncTime
float GlobalNamespace::ConnectedPlayerManager::get_syncTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_syncTime"));
}
// Autogenerated method: ConnectedPlayerManager.get_syncTimeDelay
float GlobalNamespace::ConnectedPlayerManager::get_syncTimeDelay() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_syncTimeDelay"));
}
// Autogenerated method: ConnectedPlayerManager.set_syncTimeDelay
void GlobalNamespace::ConnectedPlayerManager::set_syncTimeDelay(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_syncTimeDelay", value));
}
// Autogenerated method: ConnectedPlayerManager.get_syncTimeInitialized
bool GlobalNamespace::ConnectedPlayerManager::get_syncTimeInitialized() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_syncTimeInitialized"));
}
// Autogenerated method: ConnectedPlayerManager.get_runTime
float GlobalNamespace::ConnectedPlayerManager::get_runTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_runTime"));
}
// Autogenerated method: ConnectedPlayerManager..ctor
GlobalNamespace::ConnectedPlayerManager* GlobalNamespace::ConnectedPlayerManager::New_ctor(GlobalNamespace::IConnectionManager* connectionManager) {
  return THROW_UNLESS(il2cpp_utils::New<ConnectedPlayerManager*>(connectionManager));
}
// Autogenerated method: ConnectedPlayerManager.ResetLocalState
void GlobalNamespace::ConnectedPlayerManager::ResetLocalState() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ResetLocalState"));
}
// Autogenerated method: ConnectedPlayerManager.PollUpdate
void GlobalNamespace::ConnectedPlayerManager::PollUpdate() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PollUpdate"));
}
// Autogenerated method: ConnectedPlayerManager.RegisterSerializer
void GlobalNamespace::ConnectedPlayerManager::RegisterSerializer(GlobalNamespace::ConnectedPlayerManager::MessageType serializerType, GlobalNamespace::INetworkPacketSubSerializer_1<GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RegisterSerializer", serializerType, subSerializer));
}
// Autogenerated method: ConnectedPlayerManager.UnregisterSerializer
void GlobalNamespace::ConnectedPlayerManager::UnregisterSerializer(GlobalNamespace::ConnectedPlayerManager::MessageType serializerType, GlobalNamespace::INetworkPacketSubSerializer_1<GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UnregisterSerializer", serializerType, subSerializer));
}
// Autogenerated method: ConnectedPlayerManager.Disconnect
void GlobalNamespace::ConnectedPlayerManager::Disconnect(GlobalNamespace::DisconnectedReason disconnectedReason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Disconnect", disconnectedReason));
}
// Autogenerated method: ConnectedPlayerManager.KickPlayer
void GlobalNamespace::ConnectedPlayerManager::KickPlayer(::Il2CppString* userId, GlobalNamespace::DisconnectedReason disconnectedReason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "KickPlayer", userId, disconnectedReason));
}
// Autogenerated method: ConnectedPlayerManager.SetLocalPlayerState
void GlobalNamespace::ConnectedPlayerManager::SetLocalPlayerState(::Il2CppString* state, bool setState) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetLocalPlayerState", state, setState));
}
// Autogenerated method: ConnectedPlayerManager.SetLocalPlayerAvatar
void GlobalNamespace::ConnectedPlayerManager::SetLocalPlayerAvatar(GlobalNamespace::MultiplayerAvatarData multiplayerAvatarData) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetLocalPlayerAvatar", multiplayerAvatarData));
}
// Autogenerated method: ConnectedPlayerManager.SetLocalPlayerSortIndex
void GlobalNamespace::ConnectedPlayerManager::SetLocalPlayerSortIndex(int sortIndex) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetLocalPlayerSortIndex", sortIndex));
}
// Autogenerated method: ConnectedPlayerManager.SetPlayerSortIndex
void GlobalNamespace::ConnectedPlayerManager::SetPlayerSortIndex(GlobalNamespace::IConnectedPlayer* player, int sortIndex) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetPlayerSortIndex", player, sortIndex));
}
// Autogenerated method: ConnectedPlayerManager.HandleConnected
void GlobalNamespace::ConnectedPlayerManager::HandleConnected() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleConnected"));
}
// Autogenerated method: ConnectedPlayerManager.HandleDisconnected
void GlobalNamespace::ConnectedPlayerManager::HandleDisconnected(GlobalNamespace::DisconnectedReason disconnectedReason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleDisconnected", disconnectedReason));
}
// Autogenerated method: ConnectedPlayerManager.HandleConnectionFailed
void GlobalNamespace::ConnectedPlayerManager::HandleConnectionFailed(GlobalNamespace::ConnectionFailedReason reason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleConnectionFailed", reason));
}
// Autogenerated method: ConnectedPlayerManager.HandleConnectionConnected
void GlobalNamespace::ConnectedPlayerManager::HandleConnectionConnected(GlobalNamespace::IConnection* connection) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleConnectionConnected", connection));
}
// Autogenerated method: ConnectedPlayerManager.OnNetworkLatencyUpdate
void GlobalNamespace::ConnectedPlayerManager::OnNetworkLatencyUpdate(GlobalNamespace::IConnection* connection, float latency) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnNetworkLatencyUpdate", connection, latency));
}
// Autogenerated method: ConnectedPlayerManager.HandleConnectionDisconnected
void GlobalNamespace::ConnectedPlayerManager::HandleConnectionDisconnected(GlobalNamespace::IConnection* connection, GlobalNamespace::DisconnectedReason disconnectedReason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleConnectionDisconnected", connection, disconnectedReason));
}
// Autogenerated method: ConnectedPlayerManager.OnNetworkReceive
void GlobalNamespace::ConnectedPlayerManager::OnNetworkReceive(GlobalNamespace::IConnection* connection, LiteNetLib::Utils::NetDataReader* reader, LiteNetLib::DeliveryMethod deliveryMethod) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnNetworkReceive", connection, reader, deliveryMethod));
}
// Autogenerated method: ConnectedPlayerManager.SendImmediately
void GlobalNamespace::ConnectedPlayerManager::SendImmediately(LiteNetLib::Utils::INetSerializable* message, bool onlyFirstDegree) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SendImmediately", message, onlyFirstDegree));
}
// Autogenerated method: ConnectedPlayerManager.SendImmediatelyExcludingPlayer
void GlobalNamespace::ConnectedPlayerManager::SendImmediatelyExcludingPlayer(LiteNetLib::Utils::INetSerializable* message, GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* excludingPlayer, bool onlyFirstDegree) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SendImmediatelyExcludingPlayer", message, excludingPlayer, onlyFirstDegree));
}
// Autogenerated method: ConnectedPlayerManager.SendImmediatelyToPlayer
void GlobalNamespace::ConnectedPlayerManager::SendImmediatelyToPlayer(LiteNetLib::Utils::INetSerializable* message, GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* toPlayer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SendImmediatelyToPlayer", message, toPlayer));
}
// Autogenerated method: ConnectedPlayerManager.SendImmediatelyFromPlayer
void GlobalNamespace::ConnectedPlayerManager::SendImmediatelyFromPlayer(LiteNetLib::Utils::INetSerializable* message, GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* fromPlayer, bool onlyFirstDegree) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SendImmediatelyFromPlayer", message, fromPlayer, onlyFirstDegree));
}
// Autogenerated method: ConnectedPlayerManager.SendImmediatelyFromPlayerToPlayer
void GlobalNamespace::ConnectedPlayerManager::SendImmediatelyFromPlayerToPlayer(LiteNetLib::Utils::INetSerializable* message, GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* fromPlayer, GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* toPlayer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SendImmediatelyFromPlayerToPlayer", message, fromPlayer, toPlayer));
}
// Autogenerated method: ConnectedPlayerManager.FlushReliableQueue
void GlobalNamespace::ConnectedPlayerManager::FlushReliableQueue() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "FlushReliableQueue"));
}
// Autogenerated method: ConnectedPlayerManager.FlushUnreliableQueue
void GlobalNamespace::ConnectedPlayerManager::FlushUnreliableQueue() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "FlushUnreliableQueue"));
}
// Autogenerated method: ConnectedPlayerManager.WriteOne
LiteNetLib::Utils::NetDataWriter* GlobalNamespace::ConnectedPlayerManager::WriteOne(uint8_t senderId, uint8_t receiverId, LiteNetLib::Utils::INetSerializable* message) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<LiteNetLib::Utils::NetDataWriter*>(this, "WriteOne", senderId, receiverId, message));
}
// Autogenerated method: ConnectedPlayerManager.Write
void GlobalNamespace::ConnectedPlayerManager::Write(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::Utils::INetSerializable* packet) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Write", writer, packet));
}
// Autogenerated method: ConnectedPlayerManager.HandleServerPlayerConnected
void GlobalNamespace::ConnectedPlayerManager::HandleServerPlayerConnected(GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket* packet, GlobalNamespace::IConnectedPlayer* iPlayer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleServerPlayerConnected", packet, iPlayer));
}
// Autogenerated method: ConnectedPlayerManager.HandlePlayerStateUpdate
void GlobalNamespace::ConnectedPlayerManager::HandlePlayerStateUpdate(GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket* packet, GlobalNamespace::IConnectedPlayer* iPlayer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePlayerStateUpdate", packet, iPlayer));
}
// Autogenerated method: ConnectedPlayerManager.HandlePlayerLatencyUpdate
void GlobalNamespace::ConnectedPlayerManager::HandlePlayerLatencyUpdate(GlobalNamespace::ConnectedPlayerManager::PlayerLatencyPacket* packet, GlobalNamespace::IConnectedPlayer* iPlayer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePlayerLatencyUpdate", packet, iPlayer));
}
// Autogenerated method: ConnectedPlayerManager.HandleServerPlayerDisconnected
void GlobalNamespace::ConnectedPlayerManager::HandleServerPlayerDisconnected(GlobalNamespace::ConnectedPlayerManager::PlayerDisconnectedPacket* packet, GlobalNamespace::IConnectedPlayer* iPlayer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleServerPlayerDisconnected", packet, iPlayer));
}
// Autogenerated method: ConnectedPlayerManager.HandleKickPlayerPacket
void GlobalNamespace::ConnectedPlayerManager::HandleKickPlayerPacket(GlobalNamespace::ConnectedPlayerManager::KickPlayerPacket* packet, GlobalNamespace::IConnectedPlayer* iPlayer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleKickPlayerPacket", packet, iPlayer));
}
// Autogenerated method: ConnectedPlayerManager.HandlePlayerSortOrderUpdate
void GlobalNamespace::ConnectedPlayerManager::HandlePlayerSortOrderUpdate(GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket* packet, GlobalNamespace::IConnectedPlayer* iPlayer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePlayerSortOrderUpdate", packet, iPlayer));
}
// Autogenerated method: ConnectedPlayerManager.HandleSyncTimePacket
void GlobalNamespace::ConnectedPlayerManager::HandleSyncTimePacket(GlobalNamespace::ConnectedPlayerManager::SyncTimePacket* packet, GlobalNamespace::IConnectedPlayer* player) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleSyncTimePacket", packet, player));
}
// Autogenerated method: ConnectedPlayerManager.Log
void GlobalNamespace::ConnectedPlayerManager::Log(::Il2CppString* message) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Log", message));
}
// Autogenerated method: ConnectedPlayerManager.Dispose
void GlobalNamespace::ConnectedPlayerManager::Dispose() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Dispose"));
}
void GlobalNamespace::ConnectedPlayerManager::System_IDisposable_Dispose() {
  GlobalNamespace::ConnectedPlayerManager::Dispose();
}
