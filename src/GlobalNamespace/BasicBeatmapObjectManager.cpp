// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BasicBeatmapObjectManager
#include "GlobalNamespace/BasicBeatmapObjectManager.hpp"
// Including type: BasicBeatmapObjectManager/InitData
#include "GlobalNamespace/BasicBeatmapObjectManager_InitData.hpp"
// Including type: MonoMemoryPoolContainer`1
#include "GlobalNamespace/MonoMemoryPoolContainer_1.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: GameNoteController/Pool
#include "GlobalNamespace/GameNoteController_Pool.hpp"
// Including type: BombNoteController/Pool
#include "GlobalNamespace/BombNoteController_Pool.hpp"
// Including type: ObstacleController/Pool
#include "GlobalNamespace/ObstacleController_Pool.hpp"
// Including type: NoteRibbonController/Pool
#include "GlobalNamespace/NoteRibbonController_Pool.hpp"
// Including type: BeatmapObjectSpawnMovementData/ObstacleSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_ObstacleSpawnData.hpp"
// Including type: BeatmapObjectSpawnMovementData/NoteSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_NoteSpawnData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BasicBeatmapObjectManager..ctor
GlobalNamespace::BasicBeatmapObjectManager* GlobalNamespace::BasicBeatmapObjectManager::New_ctor(GlobalNamespace::BasicBeatmapObjectManager::InitData* initData, GlobalNamespace::GameNoteController::Pool* gameNotePool, GlobalNamespace::BombNoteController::Pool* bombNotePool, GlobalNamespace::ObstacleController::Pool* obstaclePool, GlobalNamespace::NoteRibbonController::Pool* noteRibbonPool) {
  return THROW_UNLESS(il2cpp_utils::New<BasicBeatmapObjectManager*>(initData, gameNotePool, bombNotePool, obstaclePool, noteRibbonPool));
}
// Autogenerated method: BasicBeatmapObjectManager.get_activeObstacleControllers
System::Collections::Generic::HashSet_1<GlobalNamespace::ObstacleController*>* GlobalNamespace::BasicBeatmapObjectManager::get_activeObstacleControllers() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::HashSet_1<GlobalNamespace::ObstacleController*>*>(this, "get_activeObstacleControllers"));
}
// Autogenerated method: BasicBeatmapObjectManager.get_activeNoteRibbonControllers
System::Collections::Generic::HashSet_1<GlobalNamespace::NoteRibbonController*>* GlobalNamespace::BasicBeatmapObjectManager::get_activeNoteRibbonControllers() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::HashSet_1<GlobalNamespace::NoteRibbonController*>*>(this, "get_activeNoteRibbonControllers"));
}
// Autogenerated method: BasicBeatmapObjectManager.SpawnObstacleInternal
GlobalNamespace::ObstacleController* GlobalNamespace::BasicBeatmapObjectManager::SpawnObstacleInternal(GlobalNamespace::ObstacleData* obstacleData, GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData obstacleSpawnData, float rotation) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::ObstacleController*>(this, "SpawnObstacleInternal", obstacleData, obstacleSpawnData, rotation));
}
// Autogenerated method: BasicBeatmapObjectManager.SpawnBombNoteInternal
GlobalNamespace::NoteController* GlobalNamespace::BasicBeatmapObjectManager::SpawnBombNoteInternal(GlobalNamespace::NoteData* bombNoteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::NoteController*>(this, "SpawnBombNoteInternal", bombNoteData, noteSpawnData, rotation));
}
// Autogenerated method: BasicBeatmapObjectManager.SpawnBasicNoteInternal
GlobalNamespace::NoteController* GlobalNamespace::BasicBeatmapObjectManager::SpawnBasicNoteInternal(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation, float cutDirectionAngleOffset) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::NoteController*>(this, "SpawnBasicNoteInternal", noteData, noteSpawnData, rotation, cutDirectionAngleOffset));
}
// Autogenerated method: BasicBeatmapObjectManager.SpawnNoteRibbonInternal
GlobalNamespace::NoteRibbonController* GlobalNamespace::BasicBeatmapObjectManager::SpawnNoteRibbonInternal(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, GlobalNamespace::NoteController* parentNoteController, float rotation, float cutDirectionAngleOffset) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::NoteRibbonController*>(this, "SpawnNoteRibbonInternal", noteData, noteSpawnData, parentNoteController, rotation, cutDirectionAngleOffset));
}
// Autogenerated method: BasicBeatmapObjectManager.DespawnInternal
void GlobalNamespace::BasicBeatmapObjectManager::DespawnInternal(GlobalNamespace::NoteController* noteController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DespawnInternal", noteController));
}
// Autogenerated method: BasicBeatmapObjectManager.DespawnInternal
void GlobalNamespace::BasicBeatmapObjectManager::DespawnInternal(GlobalNamespace::ObstacleController* obstacleController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DespawnInternal", obstacleController));
}
// Autogenerated method: BasicBeatmapObjectManager.DespawnInternal
void GlobalNamespace::BasicBeatmapObjectManager::DespawnInternal(GlobalNamespace::NoteRibbonController* noteRibbonController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DespawnInternal", noteRibbonController));
}
// Autogenerated method: BasicBeatmapObjectManager.DissolveAllObjects
void GlobalNamespace::BasicBeatmapObjectManager::DissolveAllObjects() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DissolveAllObjects"));
}
// Autogenerated method: BasicBeatmapObjectManager.HideAllBeatmapObjects
void GlobalNamespace::BasicBeatmapObjectManager::HideAllBeatmapObjects(bool hide) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HideAllBeatmapObjects", hide));
}
// Autogenerated method: BasicBeatmapObjectManager.PauseAllBeatmapObjects
void GlobalNamespace::BasicBeatmapObjectManager::PauseAllBeatmapObjects(bool pause) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PauseAllBeatmapObjects", pause));
}
