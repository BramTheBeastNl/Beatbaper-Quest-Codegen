// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTracker
#include "GlobalNamespace/OVRTracker.hpp"
// Including type: OVRTracker/Frustum
#include "GlobalNamespace/OVRTracker_Frustum.hpp"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRTracker.get_isPresent
bool GlobalNamespace::OVRTracker::get_isPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRTracker").WithContext("get_isPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTracker.get_isPositionTracked
bool GlobalNamespace::OVRTracker::get_isPositionTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRTracker").WithContext("get_isPositionTracked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isPositionTracked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTracker.get_isEnabled
bool GlobalNamespace::OVRTracker::get_isEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRTracker").WithContext("get_isEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTracker.set_isEnabled
void GlobalNamespace::OVRTracker::set_isEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRTracker").WithContext("set_isEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTracker.get_count
int GlobalNamespace::OVRTracker::get_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRTracker").WithContext("get_count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRTracker.GetFrustum
GlobalNamespace::OVRTracker::Frustum GlobalNamespace::OVRTracker::GetFrustum(int tracker) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRTracker").WithContext("GetFrustum");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFrustum", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tracker)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRTracker::Frustum, false>(this, ___internal__method, tracker);
}
// Autogenerated method: OVRTracker.GetPose
GlobalNamespace::OVRPose GlobalNamespace::OVRTracker::GetPose(int tracker) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRTracker").WithContext("GetPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tracker)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(this, ___internal__method, tracker);
}
// Autogenerated method: OVRTracker.GetPoseValid
bool GlobalNamespace::OVRTracker::GetPoseValid(int tracker) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRTracker").WithContext("GetPoseValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoseValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tracker)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, tracker);
}
// Autogenerated method: OVRTracker.GetPresent
bool GlobalNamespace::OVRTracker::GetPresent(int tracker) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRTracker").WithContext("GetPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tracker)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, tracker);
}
