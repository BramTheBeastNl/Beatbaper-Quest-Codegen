// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerConnectionManager
#include "GlobalNamespace/MasterServerConnectionManager.hpp"
// Including type: MasterServer.UserMessageHandler
#include "MasterServer/UserMessageHandler.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: MasterServerConnectionManager/MasterServerConnectionManagerParamsBase
#include "GlobalNamespace/MasterServerConnectionManager_MasterServerConnectionManagerParamsBase.hpp"
// Including type: MasterServerConnectionManager/StartServerParams
#include "GlobalNamespace/MasterServerConnectionManager_StartServerParams.hpp"
// Including type: MasterServerConnectionManager/ConnectToServerParams
#include "GlobalNamespace/MasterServerConnectionManager_ConnectToServerParams.hpp"
// Including type: MasterServerConnectionManager/ConnectToMatchmakingParams
#include "GlobalNamespace/MasterServerConnectionManager_ConnectToMatchmakingParams.hpp"
// Including type: MasterServerConnectionManager/StartClientParams
#include "GlobalNamespace/MasterServerConnectionManager_StartClientParams.hpp"
// Including type: LiteNetLibConnectionManager
#include "GlobalNamespace/LiteNetLibConnectionManager.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: MasterServerEndPoint
#include "GlobalNamespace/MasterServerEndPoint.hpp"
// Including type: IAuthenticationTokenProvider
#include "GlobalNamespace/IAuthenticationTokenProvider.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: GameplayServerFilter
#include "GlobalNamespace/GameplayServerFilter.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServerConnectionManager.get_port
int GlobalNamespace::MasterServerConnectionManager::get_port() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_port"));
}
// Autogenerated method: MasterServerConnectionManager.get_secret
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_secret() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_secret"));
}
// Autogenerated method: MasterServerConnectionManager.get_serverName
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_serverName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_serverName"));
}
// Autogenerated method: MasterServerConnectionManager.get_serverPassword
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_serverPassword() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_serverPassword"));
}
// Autogenerated method: MasterServerConnectionManager.get_maxPlayerCount
int GlobalNamespace::MasterServerConnectionManager::get_maxPlayerCount() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_maxPlayerCount"));
}
// Autogenerated method: MasterServerConnectionManager.get_discoveryPolicy
GlobalNamespace::DiscoveryPolicy GlobalNamespace::MasterServerConnectionManager::get_discoveryPolicy() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::DiscoveryPolicy>(this, "get_discoveryPolicy"));
}
// Autogenerated method: MasterServerConnectionManager.get_invitePolicy
GlobalNamespace::InvitePolicy GlobalNamespace::MasterServerConnectionManager::get_invitePolicy() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::InvitePolicy>(this, "get_invitePolicy"));
}
// Autogenerated method: MasterServerConnectionManager.get_configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::MasterServerConnectionManager::get_configuration() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::GameplayServerConfiguration>(this, "get_configuration"));
}
// Autogenerated method: MasterServerConnectionManager.get_code
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_code() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_code"));
}
// Autogenerated method: MasterServerConnectionManager.get_serverEndPoint
System::Net::IPEndPoint* GlobalNamespace::MasterServerConnectionManager::get_serverEndPoint() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Net::IPEndPoint*>(this, "get_serverEndPoint"));
}
// Autogenerated method: MasterServerConnectionManager.get_serverUserId
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_serverUserId() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_serverUserId"));
}
// Autogenerated method: MasterServerConnectionManager.get_serverUserName
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_serverUserName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_serverUserName"));
}
// Autogenerated method: MasterServerConnectionManager.InitMasterServerHandler
void GlobalNamespace::MasterServerConnectionManager::InitMasterServerHandler(GlobalNamespace::MasterServerEndPoint* masterServerEndPoint, GlobalNamespace::IAuthenticationTokenProvider* authenticationTokenProvider) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "InitMasterServerHandler", masterServerEndPoint, authenticationTokenProvider));
}
// Autogenerated method: MasterServerConnectionManager.DisposeMasterServerHandler
void GlobalNamespace::MasterServerConnectionManager::DisposeMasterServerHandler() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DisposeMasterServerHandler"));
}
// Autogenerated method: MasterServerConnectionManager.SetServerStatus
void GlobalNamespace::MasterServerConnectionManager::SetServerStatus(::Il2CppString* serverName, ::Il2CppString* serverPassword, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, int maxPlayerCount, GlobalNamespace::GameplayServerConfiguration configuration) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetServerStatus", serverName, serverPassword, discoveryPolicy, invitePolicy, maxPlayerCount, configuration));
}
// Autogenerated method: MasterServerConnectionManager.SetCurrentPlayerCount
void GlobalNamespace::MasterServerConnectionManager::SetCurrentPlayerCount(int currentPlayerCount) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetCurrentPlayerCount", currentPlayerCount));
}
// Autogenerated method: MasterServerConnectionManager.DisconnectInternal
void GlobalNamespace::MasterServerConnectionManager::DisconnectInternal(GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DisconnectInternal", connectionFailedReason));
}
// Autogenerated method: MasterServerConnectionManager.DisconnectInternal
void GlobalNamespace::MasterServerConnectionManager::DisconnectInternal(GlobalNamespace::DisconnectedReason disconnectedReason, GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DisconnectInternal", disconnectedReason, connectionFailedReason));
}
// Autogenerated method: MasterServerConnectionManager.HandleConnected
void GlobalNamespace::MasterServerConnectionManager::HandleConnected() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleConnected"));
}
// Autogenerated method: MasterServerConnectionManager.HandleConnectionConnected
void GlobalNamespace::MasterServerConnectionManager::HandleConnectionConnected(GlobalNamespace::IConnection* connection) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleConnectionConnected", connection));
}
// Autogenerated method: MasterServerConnectionManager.HandleConnectionDisconnected
void GlobalNamespace::MasterServerConnectionManager::HandleConnectionDisconnected(GlobalNamespace::IConnection* connection, GlobalNamespace::DisconnectedReason reason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleConnectionDisconnected", connection, reason));
}
// Autogenerated method: MasterServerConnectionManager.HandleConnectionFailed
void GlobalNamespace::MasterServerConnectionManager::HandleConnectionFailed(GlobalNamespace::ConnectionFailedReason failedReason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleConnectionFailed", failedReason));
}
// Autogenerated method: MasterServerConnectionManager.HandleLatencyUpdate
void GlobalNamespace::MasterServerConnectionManager::HandleLatencyUpdate(GlobalNamespace::IConnection* connection, float latency) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleLatencyUpdate", connection, latency));
}
// Autogenerated method: MasterServerConnectionManager.HandleReceivedData
void GlobalNamespace::MasterServerConnectionManager::HandleReceivedData(GlobalNamespace::IConnection* connection, LiteNetLib::Utils::NetDataReader* reader, LiteNetLib::DeliveryMethod deliveryMethod) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleReceivedData", connection, reader, deliveryMethod));
}
// Autogenerated method: MasterServerConnectionManager.HandleConnectToClient
void GlobalNamespace::MasterServerConnectionManager::HandleConnectToClient(::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* myRandom, ::Array<uint8_t>* remoteRandom, bool isConnectionOwner, bool isDedicatedServer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleConnectToClient", userId, userName, remoteEndPoint, preMasterSecret, myRandom, remoteRandom, isConnectionOwner, isDedicatedServer));
}
// Autogenerated method: MasterServerConnectionManager.HandleBroadcastingStopped
void GlobalNamespace::MasterServerConnectionManager::HandleBroadcastingStopped() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleBroadcastingStopped"));
}
// Autogenerated method: MasterServerConnectionManager.AttemptConnection
bool GlobalNamespace::MasterServerConnectionManager::AttemptConnection(::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* endPoint, ::Il2CppString* secret, ::Il2CppString* code, ::Il2CppString* password, ::Il2CppString* serverUserId, ::Il2CppString* serverUserName) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "AttemptConnection", userId, userName, endPoint, secret, code, password, serverUserId, serverUserName));
}
// Autogenerated method: MasterServerConnectionManager.SetConnectionAttempt
void GlobalNamespace::MasterServerConnectionManager::SetConnectionAttempt(GlobalNamespace::MasterServerConnectionManager::ConnectionAttempt connectionAttempt) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetConnectionAttempt", connectionAttempt));
}
// Autogenerated method: MasterServerConnectionManager.MasterServerConnectToMatchmaking
void GlobalNamespace::MasterServerConnectionManager::MasterServerConnectToMatchmaking(::Il2CppString* userId, ::Il2CppString* userName, GlobalNamespace::GameplayServerConfiguration configuration, ::Il2CppString* secret) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "MasterServerConnectToMatchmaking", userId, userName, configuration, secret));
}
// Autogenerated method: MasterServerConnectionManager.MasterServerConnectToServer
void GlobalNamespace::MasterServerConnectionManager::MasterServerConnectToServer(::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret, ::Il2CppString* code, ::Il2CppString* password, bool useRelay) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "MasterServerConnectToServer", userId, userName, secret, code, password, useRelay));
}
// Autogenerated method: MasterServerConnectionManager.StartBroadcastingServer
void GlobalNamespace::MasterServerConnectionManager::StartBroadcastingServer() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "StartBroadcastingServer"));
}
// Autogenerated method: MasterServerConnectionManager.HandleConnectToServerSuccess
void GlobalNamespace::MasterServerConnectionManager::HandleConnectToServerSuccess(::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* remoteEndPoint, ::Il2CppString* secret, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, int maxPlayerCount, GlobalNamespace::GameplayServerConfiguration configuration, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* myRandom, ::Array<uint8_t>* remoteRandom, bool isConnectionOwner, bool isDedicatedServer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleConnectToServerSuccess", userId, userName, remoteEndPoint, secret, discoveryPolicy, invitePolicy, maxPlayerCount, configuration, preMasterSecret, myRandom, remoteRandom, isConnectionOwner, isDedicatedServer));
}
// Autogenerated method: MasterServerConnectionManager.ConnectToEndPoint
void GlobalNamespace::MasterServerConnectionManager::ConnectToEndPoint(System::Net::IPEndPoint* remoteEndPoint, ::Il2CppString* userId, ::Il2CppString* userName, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* myRandom, ::Array<uint8_t>* remoteRandom, bool remoteUserIsConnectionOwner, bool isDedicatedServer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ConnectToEndPoint", remoteEndPoint, userId, userName, preMasterSecret, myRandom, remoteRandom, remoteUserIsConnectionOwner, isDedicatedServer));
}
// Autogenerated method: MasterServerConnectionManager.GetPublicServers
void GlobalNamespace::MasterServerConnectionManager::GetPublicServers(System::Action_1<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::PublicServerInfo>*>* onSuccess, System::Action_1<GlobalNamespace::ConnectionFailedReason>* onFailure, int offset, int count, GlobalNamespace::GameplayServerFilter filter) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GetPublicServers", onSuccess, onFailure, offset, count, filter));
}
// Autogenerated method: MasterServerConnectionManager.<StartBroadcastingServer>b__110_0
void GlobalNamespace::MasterServerConnectionManager::$StartBroadcastingServer$b__110_0(System::Net::IPEndPoint* remoteEndPoint, ::Il2CppString* code) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<StartBroadcastingServer>b__110_0", remoteEndPoint, code));
}
// Autogenerated method: MasterServerConnectionManager.<StartBroadcastingServer>b__110_1
void GlobalNamespace::MasterServerConnectionManager::$StartBroadcastingServer$b__110_1(GlobalNamespace::ConnectionFailedReason reason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<StartBroadcastingServer>b__110_1", reason));
}
// Autogenerated method: MasterServerConnectionManager.add_onConnectedEvent
void GlobalNamespace::MasterServerConnectionManager::add_onConnectedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_onConnectedEvent", value));
}
// Autogenerated method: MasterServerConnectionManager.remove_onConnectedEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onConnectedEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_onConnectedEvent", value));
}
// Autogenerated method: MasterServerConnectionManager.add_onDisconnectedEvent
void GlobalNamespace::MasterServerConnectionManager::add_onDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_onDisconnectedEvent", value));
}
// Autogenerated method: MasterServerConnectionManager.remove_onDisconnectedEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_onDisconnectedEvent", value));
}
// Autogenerated method: MasterServerConnectionManager.add_onConnectionFailedEvent
void GlobalNamespace::MasterServerConnectionManager::add_onConnectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_onConnectionFailedEvent", value));
}
// Autogenerated method: MasterServerConnectionManager.remove_onConnectionFailedEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onConnectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_onConnectionFailedEvent", value));
}
// Autogenerated method: MasterServerConnectionManager.add_onConnectionConnectedEvent
void GlobalNamespace::MasterServerConnectionManager::add_onConnectionConnectedEvent(System::Action_1<GlobalNamespace::IConnection*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_onConnectionConnectedEvent", value));
}
// Autogenerated method: MasterServerConnectionManager.remove_onConnectionConnectedEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onConnectionConnectedEvent(System::Action_1<GlobalNamespace::IConnection*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_onConnectionConnectedEvent", value));
}
// Autogenerated method: MasterServerConnectionManager.add_onConnectionDisconnectedEvent
void GlobalNamespace::MasterServerConnectionManager::add_onConnectionDisconnectedEvent(System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_onConnectionDisconnectedEvent", value));
}
// Autogenerated method: MasterServerConnectionManager.remove_onConnectionDisconnectedEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onConnectionDisconnectedEvent(System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_onConnectionDisconnectedEvent", value));
}
// Autogenerated method: MasterServerConnectionManager.add_onLatencyUpdatedEvent
void GlobalNamespace::MasterServerConnectionManager::add_onLatencyUpdatedEvent(System::Action_2<GlobalNamespace::IConnection*, float>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_onLatencyUpdatedEvent", value));
}
// Autogenerated method: MasterServerConnectionManager.remove_onLatencyUpdatedEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onLatencyUpdatedEvent(System::Action_2<GlobalNamespace::IConnection*, float>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_onLatencyUpdatedEvent", value));
}
// Autogenerated method: MasterServerConnectionManager.add_onReceivedDataEvent
void GlobalNamespace::MasterServerConnectionManager::add_onReceivedDataEvent(System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_onReceivedDataEvent", value));
}
// Autogenerated method: MasterServerConnectionManager.remove_onReceivedDataEvent
void GlobalNamespace::MasterServerConnectionManager::remove_onReceivedDataEvent(System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_onReceivedDataEvent", value));
}
// Autogenerated method: MasterServerConnectionManager.get_userId
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_userId() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_userId"));
}
// Autogenerated method: MasterServerConnectionManager.get_userName
::Il2CppString* GlobalNamespace::MasterServerConnectionManager::get_userName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_userName"));
}
// Autogenerated method: MasterServerConnectionManager.get_isConnected
bool GlobalNamespace::MasterServerConnectionManager::get_isConnected() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isConnected"));
}
// Autogenerated method: MasterServerConnectionManager.get_isConnecting
bool GlobalNamespace::MasterServerConnectionManager::get_isConnecting() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isConnecting"));
}
// Autogenerated method: MasterServerConnectionManager.get_isDisconnecting
bool GlobalNamespace::MasterServerConnectionManager::get_isDisconnecting() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isDisconnecting"));
}
// Autogenerated method: MasterServerConnectionManager.get_connectionCount
int GlobalNamespace::MasterServerConnectionManager::get_connectionCount() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_connectionCount"));
}
// Autogenerated method: MasterServerConnectionManager.get_isConnectionOwner
bool GlobalNamespace::MasterServerConnectionManager::get_isConnectionOwner() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isConnectionOwner"));
}
// Autogenerated method: MasterServerConnectionManager.get_isDisposed
bool GlobalNamespace::MasterServerConnectionManager::get_isDisposed() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isDisposed"));
}
// Autogenerated method: MasterServerConnectionManager.SendToAll
void GlobalNamespace::MasterServerConnectionManager::SendToAll(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SendToAll", writer, deliveryMethod));
}
// Autogenerated method: MasterServerConnectionManager.SendToAll
void GlobalNamespace::MasterServerConnectionManager::SendToAll(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod, GlobalNamespace::IConnection* excludingConnection) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SendToAll", writer, deliveryMethod, excludingConnection));
}
// Autogenerated method: MasterServerConnectionManager.PollUpdate
void GlobalNamespace::MasterServerConnectionManager::PollUpdate() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PollUpdate"));
}
// Autogenerated method: MasterServerConnectionManager..ctor
GlobalNamespace::MasterServerConnectionManager* GlobalNamespace::MasterServerConnectionManager::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<MasterServerConnectionManager*>());
}
// Autogenerated method: MasterServerConnectionManager.Dispose
void GlobalNamespace::MasterServerConnectionManager::Dispose() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Dispose"));
}
void GlobalNamespace::MasterServerConnectionManager::System_IDisposable_Dispose() {
  GlobalNamespace::MasterServerConnectionManager::Dispose();
}
// Autogenerated method: MasterServerConnectionManager.Disconnect
void GlobalNamespace::MasterServerConnectionManager::Disconnect(GlobalNamespace::DisconnectedReason disconnectedReason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Disconnect", disconnectedReason));
}
// Autogenerated method: MasterServerConnectionManager.GetConnection
GlobalNamespace::IConnection* GlobalNamespace::MasterServerConnectionManager::GetConnection(int index) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::IConnection*>(this, "GetConnection", index));
}
// Autogenerated method: MasterServerConnectionManager.MasterServer.MessageHandler.IMessageSender.SendMessage
void GlobalNamespace::MasterServerConnectionManager::MasterServer_MessageHandler_IMessageSender_SendMessage(LiteNetLib::Utils::NetDataWriter* writer, System::Net::IPEndPoint* endPoint) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "MasterServer.MessageHandler.IMessageSender.SendMessage", writer, endPoint));
}
