// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CountdownController
#include "GlobalNamespace/CountdownController.hpp"
// Including type: CountdownElementController
#include "GlobalNamespace/CountdownElementController.hpp"
// Including type: ITimeProvider
#include "GlobalNamespace/ITimeProvider.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CountdownController.Awake
void GlobalNamespace::CountdownController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("CountdownController").WithContext("Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Awake", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CountdownController.Update
void GlobalNamespace::CountdownController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("CountdownController").WithContext("Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Update", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CountdownController.StartCountdown
void GlobalNamespace::CountdownController::StartCountdown(float countdownEndTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("CountdownController").WithContext("StartCountdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "StartCountdown", {}, ::il2cpp_utils::ExtractTypes(countdownEndTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, countdownEndTime);
}
// Autogenerated method: CountdownController.UpdateCountdown
void GlobalNamespace::CountdownController::UpdateCountdown(float countdownEndTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("CountdownController").WithContext("UpdateCountdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "UpdateCountdown", {}, ::il2cpp_utils::ExtractTypes(countdownEndTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, countdownEndTime);
}
// Autogenerated method: CountdownController.StopCountdown
void GlobalNamespace::CountdownController::StopCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("CountdownController").WithContext("StopCountdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "StopCountdown", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CountdownController..ctor
GlobalNamespace::CountdownController* GlobalNamespace::CountdownController::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("CountdownController").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<CountdownController*>());
}
