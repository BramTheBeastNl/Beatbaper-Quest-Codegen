// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: MissionObjectiveTypeSO
#include "GlobalNamespace/MissionObjectiveTypeSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionObjective.get_type
GlobalNamespace::MissionObjectiveTypeSO* GlobalNamespace::MissionObjective::get_type() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::MissionObjectiveTypeSO*>(this, "get_type"));
}
// Autogenerated method: MissionObjective.get_referenceValueComparisonType
GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::get_referenceValueComparisonType() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::MissionObjective::ReferenceValueComparisonType>(this, "get_referenceValueComparisonType"));
}
// Autogenerated method: MissionObjective.get_referenceValue
int GlobalNamespace::MissionObjective::get_referenceValue() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_referenceValue"));
}
// Autogenerated method: MissionObjective.Equals
bool GlobalNamespace::MissionObjective::Equals(::Il2CppObject* obj) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Equals", obj));
}
// Autogenerated method: MissionObjective.GetHashCode
int GlobalNamespace::MissionObjective::GetHashCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetHashCode"));
}
// Autogenerated method: MissionObjective..ctor
GlobalNamespace::MissionObjective* GlobalNamespace::MissionObjective::New_ctor() {
  return (MissionObjective*)THROW_UNLESS(il2cpp_utils::New("", "MissionObjective"));
}
// Autogenerated method: MissionObjective.op_Equality
bool GlobalNamespace::operator ==(GlobalNamespace::MissionObjective* obj1, GlobalNamespace::MissionObjective& obj2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "MissionObjective", "op_Equality", obj1, &obj2));
}
// Autogenerated method: MissionObjective.op_Inequality
bool GlobalNamespace::operator !=(GlobalNamespace::MissionObjective* obj1, GlobalNamespace::MissionObjective& obj2) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "MissionObjective", "op_Inequality", obj1, &obj2));
}
