// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameplayServerFilter
#include "GlobalNamespace/GameplayServerFilter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameplayServerFilter..ctor
// ABORTED elsewhere.  GlobalNamespace::GameplayServerFilter::GameplayServerFilter(bool includePasswordProtected, bool includeEmpty, bool includeFull, bool filterNames, ::Il2CppString* nameFilter, bool filterDifficulties, GlobalNamespace::BeatmapDifficultyMask difficultyFilter, bool filterModifiers, GlobalNamespace::GameplayModifierMask modifierFilter, bool filterSongPacks, GlobalNamespace::SongPackMask songPackFilter)
// Autogenerated method: GameplayServerFilter.get_defaultFilter
GlobalNamespace::GameplayServerFilter GlobalNamespace::GameplayServerFilter::get_defaultFilter() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::GameplayServerFilter>("", "GameplayServerFilter", "get_defaultFilter"));
}
// Autogenerated method: GameplayServerFilter.Equals
bool GlobalNamespace::GameplayServerFilter::Equals(GlobalNamespace::GameplayServerFilter& other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", other));
}
// Autogenerated method: GameplayServerFilter.Deserialize
GlobalNamespace::GameplayServerFilter GlobalNamespace::GameplayServerFilter::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::GameplayServerFilter>("", "GameplayServerFilter", "Deserialize", reader));
}
// Autogenerated method: GameplayServerFilter.IncludesServerName
bool GlobalNamespace::GameplayServerFilter::IncludesServerName(::Il2CppString* lowerInvariantName) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "IncludesServerName", lowerInvariantName));
}
// Autogenerated method: GameplayServerFilter.IncludesPassword
bool GlobalNamespace::GameplayServerFilter::IncludesPassword(::Il2CppString* password) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "IncludesPassword", password));
}
// Autogenerated method: GameplayServerFilter.IncludesPlayerCount
bool GlobalNamespace::GameplayServerFilter::IncludesPlayerCount(int currentPlayerCount, int maxPlayerCount) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "IncludesPlayerCount", currentPlayerCount, maxPlayerCount));
}
// Autogenerated method: GameplayServerFilter.IncludesConfiguration
bool GlobalNamespace::GameplayServerFilter::IncludesConfiguration(GlobalNamespace::GameplayServerConfiguration configuration) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "IncludesConfiguration", configuration));
}
// Autogenerated method: GameplayServerFilter.Equals
bool GlobalNamespace::GameplayServerFilter::Equals(GlobalNamespace::GameplayServerFilter other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", other));
}
// Autogenerated method: GameplayServerFilter.Equals
bool GlobalNamespace::GameplayServerFilter::Equals(::Il2CppObject* obj) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", obj));
}
// Autogenerated method: GameplayServerFilter.GetHashCode
int GlobalNamespace::GameplayServerFilter::GetHashCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "GetHashCode"));
}
// Autogenerated method: GameplayServerFilter.Serialize
void GlobalNamespace::GameplayServerFilter::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "Serialize", writer));
}
// Autogenerated method: GameplayServerFilter.CreateFromSerializedData
GlobalNamespace::GameplayServerFilter GlobalNamespace::GameplayServerFilter::CreateFromSerializedData(LiteNetLib::Utils::NetDataReader* reader) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::GameplayServerFilter>(*this, "CreateFromSerializedData", reader));
}
GlobalNamespace::GameplayServerFilter GlobalNamespace::GameplayServerFilter::LiteNetLib_Utils_INetImmutableSerializable_1_CreateFromSerializedData(LiteNetLib::Utils::NetDataReader* reader) {
  return GlobalNamespace::GameplayServerFilter::CreateFromSerializedData(reader);
}
