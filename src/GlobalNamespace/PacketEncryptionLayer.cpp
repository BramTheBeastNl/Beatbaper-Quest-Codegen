// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PacketEncryptionLayer
#include "GlobalNamespace/PacketEncryptionLayer.hpp"
// Including type: PacketEncryptionLayer/EncryptionStatistics
#include "GlobalNamespace/PacketEncryptionLayer_EncryptionStatistics.hpp"
// Including type: PacketEncryptionLayer/IEncryptionState
#include "GlobalNamespace/PacketEncryptionLayer_IEncryptionState.hpp"
// Including type: PacketEncryptionLayer/EncryptionState
#include "GlobalNamespace/PacketEncryptionLayer_EncryptionState.hpp"
// Including type: PacketEncryptionLayer/PendingEncryptionStateList
#include "GlobalNamespace/PacketEncryptionLayer_PendingEncryptionStateList.hpp"
// Including type: ExpiringDictionary`2
#include "GlobalNamespace/ExpiringDictionary_2.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Security.Cryptography.AesCryptoServiceProvider
#include "System/Security/Cryptography/AesCryptoServiceProvider.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMacHashSize
int GlobalNamespace::PacketEncryptionLayer::_get_kMacHashSize() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PacketEncryptionLayer", "kMacHashSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMacHashSize
void GlobalNamespace::PacketEncryptionLayer::_set_kMacHashSize(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kMacHashSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kHeaderSize
int GlobalNamespace::PacketEncryptionLayer::_get_kHeaderSize() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PacketEncryptionLayer", "kHeaderSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kHeaderSize
void GlobalNamespace::PacketEncryptionLayer::_set_kHeaderSize(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kHeaderSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxPadding
int GlobalNamespace::PacketEncryptionLayer::_get_kMaxPadding() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PacketEncryptionLayer", "kMaxPadding"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxPadding
void GlobalNamespace::PacketEncryptionLayer::_set_kMaxPadding(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kMaxPadding", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMacKeySize
int GlobalNamespace::PacketEncryptionLayer::_get_kMacKeySize() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PacketEncryptionLayer", "kMacKeySize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMacKeySize
void GlobalNamespace::PacketEncryptionLayer::_set_kMacKeySize(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kMacKeySize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kKeySize
int GlobalNamespace::PacketEncryptionLayer::_get_kKeySize() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PacketEncryptionLayer", "kKeySize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kKeySize
void GlobalNamespace::PacketEncryptionLayer::_set_kKeySize(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kKeySize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kBlockSize
int GlobalNamespace::PacketEncryptionLayer::_get_kBlockSize() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PacketEncryptionLayer", "kBlockSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kBlockSize
void GlobalNamespace::PacketEncryptionLayer::_set_kBlockSize(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kBlockSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMasterKeySize
int GlobalNamespace::PacketEncryptionLayer::_get_kMasterKeySize() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PacketEncryptionLayer", "kMasterKeySize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMasterKeySize
void GlobalNamespace::PacketEncryptionLayer::_set_kMasterKeySize(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kMasterKeySize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte kEncryptedPacketType
uint8_t GlobalNamespace::PacketEncryptionLayer::_get_kEncryptedPacketType() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "PacketEncryptionLayer", "kEncryptedPacketType"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kEncryptedPacketType
void GlobalNamespace::PacketEncryptionLayer::_set_kEncryptedPacketType(uint8_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kEncryptedPacketType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte kPlaintextPacketType
uint8_t GlobalNamespace::PacketEncryptionLayer::_get_kPlaintextPacketType() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "PacketEncryptionLayer", "kPlaintextPacketType"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kPlaintextPacketType
void GlobalNamespace::PacketEncryptionLayer::_set_kPlaintextPacketType(uint8_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kPlaintextPacketType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kRandomBlockSize
int GlobalNamespace::PacketEncryptionLayer::_get_kRandomBlockSize() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PacketEncryptionLayer", "kRandomBlockSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kRandomBlockSize
void GlobalNamespace::PacketEncryptionLayer::_set_kRandomBlockSize(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kRandomBlockSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kEncryptionStateTimeout
int64_t GlobalNamespace::PacketEncryptionLayer::_get_kEncryptionStateTimeout() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "PacketEncryptionLayer", "kEncryptionStateTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kEncryptionStateTimeout
void GlobalNamespace::PacketEncryptionLayer::_set_kEncryptionStateTimeout(int64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kEncryptionStateTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kPendingEncryptionStateTimeout
int64_t GlobalNamespace::PacketEncryptionLayer::_get_kPendingEncryptionStateTimeout() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "PacketEncryptionLayer", "kPendingEncryptionStateTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kPendingEncryptionStateTimeout
void GlobalNamespace::PacketEncryptionLayer::_set_kPendingEncryptionStateTimeout(int64_t value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "kPendingEncryptionStateTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] _masterSecretSeed
::Array<uint8_t>* GlobalNamespace::PacketEncryptionLayer::_get__masterSecretSeed() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("", "PacketEncryptionLayer", "_masterSecretSeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _masterSecretSeed
void GlobalNamespace::PacketEncryptionLayer::_set__masterSecretSeed(::Array<uint8_t>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "_masterSecretSeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] _keyExpansionSeed
::Array<uint8_t>* GlobalNamespace::PacketEncryptionLayer::_get__keyExpansionSeed() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("", "PacketEncryptionLayer", "_keyExpansionSeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _keyExpansionSeed
void GlobalNamespace::PacketEncryptionLayer::_set__keyExpansionSeed(::Array<uint8_t>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "_keyExpansionSeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] _tempIV
::Array<uint8_t>* GlobalNamespace::PacketEncryptionLayer::_get__tempIV() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("", "PacketEncryptionLayer", "_tempIV"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _tempIV
void GlobalNamespace::PacketEncryptionLayer::_set__tempIV(::Array<uint8_t>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "_tempIV", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] _tempHash
::Array<uint8_t>* GlobalNamespace::PacketEncryptionLayer::_get__tempHash() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("", "PacketEncryptionLayer", "_tempHash"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _tempHash
void GlobalNamespace::PacketEncryptionLayer::_set__tempHash(::Array<uint8_t>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "_tempHash", value));
}
// Autogenerated static field getter
// Get static field: static private System.Diagnostics.Stopwatch _stopwatch
System::Diagnostics::Stopwatch* GlobalNamespace::PacketEncryptionLayer::_get__stopwatch() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Stopwatch*>("", "PacketEncryptionLayer", "_stopwatch"));
}
// Autogenerated static field setter
// Set static field: static private System.Diagnostics.Stopwatch _stopwatch
void GlobalNamespace::PacketEncryptionLayer::_set__stopwatch(System::Diagnostics::Stopwatch* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PacketEncryptionLayer", "_stopwatch", value));
}
// Autogenerated method: PacketEncryptionLayer.NoDomainReloadInit
void GlobalNamespace::PacketEncryptionLayer::NoDomainReloadInit() {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "PacketEncryptionLayer", "NoDomainReloadInit"));
}
// Autogenerated method: PacketEncryptionLayer..ctor
GlobalNamespace::PacketEncryptionLayer* GlobalNamespace::PacketEncryptionLayer::New_ctor(System::Security::Cryptography::AesCryptoServiceProvider* aes) {
  return THROW_UNLESS(il2cpp_utils::New<PacketEncryptionLayer*>(aes));
}
// Autogenerated method: PacketEncryptionLayer.get_filterUnencryptedTraffic
bool GlobalNamespace::PacketEncryptionLayer::get_filterUnencryptedTraffic() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_filterUnencryptedTraffic"));
}
// Autogenerated method: PacketEncryptionLayer.set_filterUnencryptedTraffic
void GlobalNamespace::PacketEncryptionLayer::set_filterUnencryptedTraffic(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_filterUnencryptedTraffic", value));
}
// Autogenerated method: PacketEncryptionLayer.get_enableStatistics
bool GlobalNamespace::PacketEncryptionLayer::get_enableStatistics() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_enableStatistics"));
}
// Autogenerated method: PacketEncryptionLayer.set_enableStatistics
void GlobalNamespace::PacketEncryptionLayer::set_enableStatistics(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_enableStatistics", value));
}
// Autogenerated method: PacketEncryptionLayer.SetUnencryptedTrafficFilter
void GlobalNamespace::PacketEncryptionLayer::SetUnencryptedTrafficFilter(::Array<uint8_t>* unencryptedTrafficFilter) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetUnencryptedTrafficFilter", unencryptedTrafficFilter));
}
// Autogenerated method: PacketEncryptionLayer.AddEncryptedEndpoint
GlobalNamespace::PacketEncryptionLayer::IEncryptionState* GlobalNamespace::PacketEncryptionLayer::AddEncryptedEndpoint(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* serverRandom, ::Array<uint8_t>* clientRandom, bool isClient) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::PacketEncryptionLayer::IEncryptionState*>(this, "AddEncryptedEndpoint", protocolVersion, endPoint, preMasterSecret, serverRandom, clientRandom, isClient));
}
// Autogenerated method: PacketEncryptionLayer.RemoveEncryptedEndpoint
bool GlobalNamespace::PacketEncryptionLayer::RemoveEncryptedEndpoint(System::Net::IPEndPoint* endPoint, GlobalNamespace::PacketEncryptionLayer::IEncryptionState* encryptedState) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "RemoveEncryptedEndpoint", endPoint, encryptedState));
}
// Autogenerated method: PacketEncryptionLayer.AddPendingEncryptedEndpoint
void GlobalNamespace::PacketEncryptionLayer::AddPendingEncryptedEndpoint(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* serverRandom, ::Array<uint8_t>* clientRandom, bool isClient) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddPendingEncryptedEndpoint", protocolVersion, endPoint, preMasterSecret, serverRandom, clientRandom, isClient));
}
// Autogenerated method: PacketEncryptionLayer.PollUpdate
void GlobalNamespace::PacketEncryptionLayer::PollUpdate() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PollUpdate"));
}
// Autogenerated method: PacketEncryptionLayer.RemoveAllEndpoints
void GlobalNamespace::PacketEncryptionLayer::RemoveAllEndpoints() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RemoveAllEndpoints"));
}
// Autogenerated method: PacketEncryptionLayer.TryGetEncryptionState
bool GlobalNamespace::PacketEncryptionLayer::TryGetEncryptionState(System::Net::IPEndPoint* endPoint, GlobalNamespace::PacketEncryptionLayer::EncryptionState*& state) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryGetEncryptionState", endPoint, state));
}
// Autogenerated method: PacketEncryptionLayer.TryGetPendingEncryptionState
bool GlobalNamespace::PacketEncryptionLayer::TryGetPendingEncryptionState(System::Net::IPEndPoint* endPoint, GlobalNamespace::PacketEncryptionLayer::EncryptionState*& state) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryGetPendingEncryptionState", endPoint, state));
}
// Autogenerated method: PacketEncryptionLayer.TryGetPotentialPendingEncryptionStates
bool GlobalNamespace::PacketEncryptionLayer::TryGetPotentialPendingEncryptionStates(System::Net::IPEndPoint* endPoint, ::Array<GlobalNamespace::PacketEncryptionLayer::EncryptionState*>*& encryptionStates) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryGetPotentialPendingEncryptionStates", endPoint, encryptionStates));
}
// Autogenerated method: PacketEncryptionLayer.PromotePendingEncryptionState
void GlobalNamespace::PacketEncryptionLayer::PromotePendingEncryptionState(System::Net::IPEndPoint* endPoint, GlobalNamespace::PacketEncryptionLayer::EncryptionState* state) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PromotePendingEncryptionState", endPoint, state));
}
// Autogenerated method: PacketEncryptionLayer.MatchesFilter
bool GlobalNamespace::PacketEncryptionLayer::MatchesFilter(::Array<uint8_t>* data, int offset, int length) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "MatchesFilter", data, offset, length));
}
// Autogenerated method: PacketEncryptionLayer.ProcessInboundPacketInternal
bool GlobalNamespace::PacketEncryptionLayer::ProcessInboundPacketInternal(System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>*& data, int& offset, int& length, bool& encrypted) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "ProcessInboundPacketInternal", remoteEndPoint, data, offset, length, encrypted));
}
// Autogenerated method: PacketEncryptionLayer.TryDecryptData
bool GlobalNamespace::PacketEncryptionLayer::TryDecryptData(::Array<uint8_t>* data, GlobalNamespace::PacketEncryptionLayer::EncryptionState* state, int startingOffset, int& offset, int& length) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryDecryptData", data, state, startingOffset, offset, length));
}
// Autogenerated method: PacketEncryptionLayer.ProcessOutBoundPacketInternal
bool GlobalNamespace::PacketEncryptionLayer::ProcessOutBoundPacketInternal(System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>*& data, int& offset, int& length, bool& encrypted) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "ProcessOutBoundPacketInternal", remoteEndPoint, data, offset, length, encrypted));
}
// Autogenerated method: PacketEncryptionLayer.FastCopyBlock
void GlobalNamespace::PacketEncryptionLayer::FastCopyBlock(::Array<uint8_t>* inArr, int inOff, ::Array<uint8_t>* outArr, int outOff) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "PacketEncryptionLayer", "FastCopyBlock", inArr, inOff, outArr, outOff));
}
// Autogenerated method: PacketEncryptionLayer.FastCopyMac
void GlobalNamespace::PacketEncryptionLayer::FastCopyMac(::Array<uint8_t>* inArr, int inOff, ::Array<uint8_t>* outArr, int outOff) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "PacketEncryptionLayer", "FastCopyMac", inArr, inOff, outArr, outOff));
}
// Autogenerated method: PacketEncryptionLayer.Log
void GlobalNamespace::PacketEncryptionLayer::Log(::Il2CppString* message) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "PacketEncryptionLayer", "Log", message));
}
// Autogenerated method: PacketEncryptionLayer.LogV
void GlobalNamespace::PacketEncryptionLayer::LogV(::Il2CppString* message) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "PacketEncryptionLayer", "LogV", message));
}
// Autogenerated method: PacketEncryptionLayer..cctor
void GlobalNamespace::PacketEncryptionLayer::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "PacketEncryptionLayer", ".cctor"));
}
// Autogenerated method: PacketEncryptionLayer..ctor
GlobalNamespace::PacketEncryptionLayer* GlobalNamespace::PacketEncryptionLayer::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<PacketEncryptionLayer*>());
}
// Autogenerated method: PacketEncryptionLayer.ProcessInboundPacket
void GlobalNamespace::PacketEncryptionLayer::ProcessInboundPacket(System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>*& data, int& offset, int& length) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ProcessInboundPacket", remoteEndPoint, data, offset, length));
}
// Autogenerated method: PacketEncryptionLayer.ProcessOutBoundPacket
void GlobalNamespace::PacketEncryptionLayer::ProcessOutBoundPacket(System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>*& data, int& offset, int& length) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ProcessOutBoundPacket", remoteEndPoint, data, offset, length));
}
