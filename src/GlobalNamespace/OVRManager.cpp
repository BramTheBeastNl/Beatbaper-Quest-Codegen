// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRManager
#include "GlobalNamespace\OVRManager.hpp"
// Including type: OVRManager/EyeTextureFormat
#include "GlobalNamespace\OVRManager_EyeTextureFormat.hpp"
// Including type: OVRManager/FixedFoveatedRenderingLevel
#include "GlobalNamespace\OVRManager_FixedFoveatedRenderingLevel.hpp"
// Including type: OVRManager/TiledMultiResLevel
#include "GlobalNamespace\OVRManager_TiledMultiResLevel.hpp"
// Including type: OVRMixedRealityCaptureSettings
#include "GlobalNamespace\OVRMixedRealityCaptureSettings.hpp"
// Including type: System.Action
#include "System\Action.hpp"
// Including type: OVRProfile
#include "GlobalNamespace\OVRProfile.hpp"
// Including type: OVRBoundary
#include "GlobalNamespace\OVRBoundary.hpp"
// Including type: OVRTracker
#include "GlobalNamespace\OVRTracker.hpp"
// Including type: OVRDisplay
#include "GlobalNamespace\OVRDisplay.hpp"
// Including type: OVRManager/<>c
#include "GlobalNamespace\OVRManager_--c.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System\Collections\Generic\IEnumerable_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine\Camera.hpp"
// Including type: System.Func`2
#include "System\Func_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine\GameObject.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine\Vector4.hpp"
// Including type: OVRPose
#include "GlobalNamespace\OVRPose.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine\XR\XRNode.hpp"
// Including type: System.Version
#include "System\Version.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVRManager <instance>k__BackingField
GlobalNamespace::OVRManager* GlobalNamespace::OVRManager::_get_$instance$k__BackingField() {
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager*>("", "OVRManager", "<instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OVRManager <instance>k__BackingField
void GlobalNamespace::OVRManager::_set_$instance$k__BackingField(GlobalNamespace::OVRManager* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "<instance>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private OVRDisplay <display>k__BackingField
GlobalNamespace::OVRDisplay* GlobalNamespace::OVRManager::_get_$display$k__BackingField() {
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRDisplay*>("", "OVRManager", "<display>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OVRDisplay <display>k__BackingField
void GlobalNamespace::OVRManager::_set_$display$k__BackingField(GlobalNamespace::OVRDisplay* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "<display>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private OVRTracker <tracker>k__BackingField
GlobalNamespace::OVRTracker* GlobalNamespace::OVRManager::_get_$tracker$k__BackingField() {
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRTracker*>("", "OVRManager", "<tracker>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OVRTracker <tracker>k__BackingField
void GlobalNamespace::OVRManager::_set_$tracker$k__BackingField(GlobalNamespace::OVRTracker* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "<tracker>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private OVRBoundary <boundary>k__BackingField
GlobalNamespace::OVRBoundary* GlobalNamespace::OVRManager::_get_$boundary$k__BackingField() {
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRBoundary*>("", "OVRManager", "<boundary>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OVRBoundary <boundary>k__BackingField
void GlobalNamespace::OVRManager::_set_$boundary$k__BackingField(GlobalNamespace::OVRBoundary* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "<boundary>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private OVRProfile _profile
GlobalNamespace::OVRProfile* GlobalNamespace::OVRManager::_get__profile() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRProfile*>("", "OVRManager", "_profile"));
}
// Autogenerated static field setter
// Set static field: static private OVRProfile _profile
void GlobalNamespace::OVRManager::_set__profile(GlobalNamespace::OVRProfile* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_profile", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action HMDAcquired
System::Action* GlobalNamespace::OVRManager::_get_HMDAcquired() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "HMDAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action HMDAcquired
void GlobalNamespace::OVRManager::_set_HMDAcquired(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "HMDAcquired", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action HMDLost
System::Action* GlobalNamespace::OVRManager::_get_HMDLost() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "HMDLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action HMDLost
void GlobalNamespace::OVRManager::_set_HMDLost(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "HMDLost", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action HMDMounted
System::Action* GlobalNamespace::OVRManager::_get_HMDMounted() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "HMDMounted"));
}
// Autogenerated static field setter
// Set static field: static private System.Action HMDMounted
void GlobalNamespace::OVRManager::_set_HMDMounted(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "HMDMounted", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action HMDUnmounted
System::Action* GlobalNamespace::OVRManager::_get_HMDUnmounted() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "HMDUnmounted"));
}
// Autogenerated static field setter
// Set static field: static private System.Action HMDUnmounted
void GlobalNamespace::OVRManager::_set_HMDUnmounted(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "HMDUnmounted", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action VrFocusAcquired
System::Action* GlobalNamespace::OVRManager::_get_VrFocusAcquired() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "VrFocusAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action VrFocusAcquired
void GlobalNamespace::OVRManager::_set_VrFocusAcquired(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "VrFocusAcquired", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action VrFocusLost
System::Action* GlobalNamespace::OVRManager::_get_VrFocusLost() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "VrFocusLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action VrFocusLost
void GlobalNamespace::OVRManager::_set_VrFocusLost(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "VrFocusLost", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action InputFocusAcquired
System::Action* GlobalNamespace::OVRManager::_get_InputFocusAcquired() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "InputFocusAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action InputFocusAcquired
void GlobalNamespace::OVRManager::_set_InputFocusAcquired(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "InputFocusAcquired", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action InputFocusLost
System::Action* GlobalNamespace::OVRManager::_get_InputFocusLost() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "InputFocusLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action InputFocusLost
void GlobalNamespace::OVRManager::_set_InputFocusLost(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "InputFocusLost", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action AudioOutChanged
System::Action* GlobalNamespace::OVRManager::_get_AudioOutChanged() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "AudioOutChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Action AudioOutChanged
void GlobalNamespace::OVRManager::_set_AudioOutChanged(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "AudioOutChanged", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action AudioInChanged
System::Action* GlobalNamespace::OVRManager::_get_AudioInChanged() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "AudioInChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Action AudioInChanged
void GlobalNamespace::OVRManager::_set_AudioInChanged(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "AudioInChanged", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action TrackingAcquired
System::Action* GlobalNamespace::OVRManager::_get_TrackingAcquired() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "TrackingAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action TrackingAcquired
void GlobalNamespace::OVRManager::_set_TrackingAcquired(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "TrackingAcquired", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action TrackingLost
System::Action* GlobalNamespace::OVRManager::_get_TrackingLost() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "TrackingLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action TrackingLost
void GlobalNamespace::OVRManager::_set_TrackingLost(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "TrackingLost", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action HSWDismissed
System::Action* GlobalNamespace::OVRManager::_get_HSWDismissed() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "HSWDismissed"));
}
// Autogenerated static field setter
// Set static field: static private System.Action HSWDismissed
void GlobalNamespace::OVRManager::_set_HSWDismissed(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "HSWDismissed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _isHmdPresentCached
bool GlobalNamespace::OVRManager::_get__isHmdPresentCached() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_isHmdPresentCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _isHmdPresentCached
void GlobalNamespace::OVRManager::_set__isHmdPresentCached(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_isHmdPresentCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _isHmdPresent
bool GlobalNamespace::OVRManager::_get__isHmdPresent() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_isHmdPresent"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _isHmdPresent
void GlobalNamespace::OVRManager::_set__isHmdPresent(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_isHmdPresent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _wasHmdPresent
bool GlobalNamespace::OVRManager::_get__wasHmdPresent() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_wasHmdPresent"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _wasHmdPresent
void GlobalNamespace::OVRManager::_set__wasHmdPresent(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_wasHmdPresent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _hasVrFocusCached
bool GlobalNamespace::OVRManager::_get__hasVrFocusCached() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_hasVrFocusCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _hasVrFocusCached
void GlobalNamespace::OVRManager::_set__hasVrFocusCached(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_hasVrFocusCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _hasVrFocus
bool GlobalNamespace::OVRManager::_get__hasVrFocus() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_hasVrFocus"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _hasVrFocus
void GlobalNamespace::OVRManager::_set__hasVrFocus(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_hasVrFocus", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _hadVrFocus
bool GlobalNamespace::OVRManager::_get__hadVrFocus() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_hadVrFocus"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _hadVrFocus
void GlobalNamespace::OVRManager::_set__hadVrFocus(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_hadVrFocus", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _hadInputFocus
bool GlobalNamespace::OVRManager::_get__hadInputFocus() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_hadInputFocus"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _hadInputFocus
void GlobalNamespace::OVRManager::_set__hadInputFocus(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_hadInputFocus", value));
}
// Autogenerated static field getter
// Get static field: static public System.String OCULUS_UNITY_NAME_STR
::Il2CppString* GlobalNamespace::OVRManager::_get_OCULUS_UNITY_NAME_STR() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRManager", "OCULUS_UNITY_NAME_STR"));
}
// Autogenerated static field setter
// Set static field: static public System.String OCULUS_UNITY_NAME_STR
void GlobalNamespace::OVRManager::_set_OCULUS_UNITY_NAME_STR(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OCULUS_UNITY_NAME_STR", value));
}
// Autogenerated static field getter
// Get static field: static public System.String OPENVR_UNITY_NAME_STR
::Il2CppString* GlobalNamespace::OVRManager::_get_OPENVR_UNITY_NAME_STR() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRManager", "OPENVR_UNITY_NAME_STR"));
}
// Autogenerated static field setter
// Set static field: static public System.String OPENVR_UNITY_NAME_STR
void GlobalNamespace::OVRManager::_set_OPENVR_UNITY_NAME_STR(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OPENVR_UNITY_NAME_STR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XRDevice loadedXRDevice
GlobalNamespace::OVRManager::XRDevice GlobalNamespace::OVRManager::_get_loadedXRDevice() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::XRDevice>("", "OVRManager", "loadedXRDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XRDevice loadedXRDevice
void GlobalNamespace::OVRManager::_set_loadedXRDevice(GlobalNamespace::OVRManager::XRDevice value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "loadedXRDevice", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 OpenVRTouchRotationOffsetEulerLeft
UnityEngine::Vector3 GlobalNamespace::OVRManager::_get_OpenVRTouchRotationOffsetEulerLeft() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "OVRManager", "OpenVRTouchRotationOffsetEulerLeft"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 OpenVRTouchRotationOffsetEulerLeft
void GlobalNamespace::OVRManager::_set_OpenVRTouchRotationOffsetEulerLeft(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OpenVRTouchRotationOffsetEulerLeft", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 OpenVRTouchRotationOffsetEulerRight
UnityEngine::Vector3 GlobalNamespace::OVRManager::_get_OpenVRTouchRotationOffsetEulerRight() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "OVRManager", "OpenVRTouchRotationOffsetEulerRight"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 OpenVRTouchRotationOffsetEulerRight
void GlobalNamespace::OVRManager::_set_OpenVRTouchRotationOffsetEulerRight(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OpenVRTouchRotationOffsetEulerRight", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 OpenVRTouchPositionOffsetLeft
UnityEngine::Vector3 GlobalNamespace::OVRManager::_get_OpenVRTouchPositionOffsetLeft() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "OVRManager", "OpenVRTouchPositionOffsetLeft"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 OpenVRTouchPositionOffsetLeft
void GlobalNamespace::OVRManager::_set_OpenVRTouchPositionOffsetLeft(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OpenVRTouchPositionOffsetLeft", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 OpenVRTouchPositionOffsetRight
UnityEngine::Vector3 GlobalNamespace::OVRManager::_get_OpenVRTouchPositionOffsetRight() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "OVRManager", "OpenVRTouchPositionOffsetRight"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 OpenVRTouchPositionOffsetRight
void GlobalNamespace::OVRManager::_set_OpenVRTouchPositionOffsetRight(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OpenVRTouchPositionOffsetRight", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _isUserPresentCached
bool GlobalNamespace::OVRManager::_get__isUserPresentCached() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_isUserPresentCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _isUserPresentCached
void GlobalNamespace::OVRManager::_set__isUserPresentCached(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_isUserPresentCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _isUserPresent
bool GlobalNamespace::OVRManager::_get__isUserPresent() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_isUserPresent"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _isUserPresent
void GlobalNamespace::OVRManager::_set__isUserPresent(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_isUserPresent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _wasUserPresent
bool GlobalNamespace::OVRManager::_get__wasUserPresent() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_wasUserPresent"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _wasUserPresent
void GlobalNamespace::OVRManager::_set__wasUserPresent(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_wasUserPresent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean prevAudioOutIdIsCached
bool GlobalNamespace::OVRManager::_get_prevAudioOutIdIsCached() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "prevAudioOutIdIsCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean prevAudioOutIdIsCached
void GlobalNamespace::OVRManager::_set_prevAudioOutIdIsCached(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "prevAudioOutIdIsCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean prevAudioInIdIsCached
bool GlobalNamespace::OVRManager::_get_prevAudioInIdIsCached() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "prevAudioInIdIsCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean prevAudioInIdIsCached
void GlobalNamespace::OVRManager::_set_prevAudioInIdIsCached(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "prevAudioInIdIsCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.String prevAudioOutId
::Il2CppString* GlobalNamespace::OVRManager::_get_prevAudioOutId() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRManager", "prevAudioOutId"));
}
// Autogenerated static field setter
// Set static field: static private System.String prevAudioOutId
void GlobalNamespace::OVRManager::_set_prevAudioOutId(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "prevAudioOutId", value));
}
// Autogenerated static field getter
// Get static field: static private System.String prevAudioInId
::Il2CppString* GlobalNamespace::OVRManager::_get_prevAudioInId() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRManager", "prevAudioInId"));
}
// Autogenerated static field setter
// Set static field: static private System.String prevAudioInId
void GlobalNamespace::OVRManager::_set_prevAudioInId(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "prevAudioInId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean wasPositionTracked
bool GlobalNamespace::OVRManager::_get_wasPositionTracked() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "wasPositionTracked"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean wasPositionTracked
void GlobalNamespace::OVRManager::_set_wasPositionTracked(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "wasPositionTracked", value));
}
// Autogenerated static field getter
// Get static field: static public System.String UnityAlphaOrBetaVersionWarningMessage
::Il2CppString* GlobalNamespace::OVRManager::_get_UnityAlphaOrBetaVersionWarningMessage() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRManager", "UnityAlphaOrBetaVersionWarningMessage"));
}
// Autogenerated static field setter
// Set static field: static public System.String UnityAlphaOrBetaVersionWarningMessage
void GlobalNamespace::OVRManager::_set_UnityAlphaOrBetaVersionWarningMessage(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "UnityAlphaOrBetaVersionWarningMessage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean OVRManagerinitialized
bool GlobalNamespace::OVRManager::_get_OVRManagerinitialized() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "OVRManagerinitialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean OVRManagerinitialized
void GlobalNamespace::OVRManager::_set_OVRManagerinitialized(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OVRManagerinitialized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean staticMixedRealityCaptureInitialized
bool GlobalNamespace::OVRManager::_get_staticMixedRealityCaptureInitialized() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "staticMixedRealityCaptureInitialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean staticMixedRealityCaptureInitialized
void GlobalNamespace::OVRManager::_set_staticMixedRealityCaptureInitialized(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "staticMixedRealityCaptureInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean staticPrevEnableMixedRealityCapture
bool GlobalNamespace::OVRManager::_get_staticPrevEnableMixedRealityCapture() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "staticPrevEnableMixedRealityCapture"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean staticPrevEnableMixedRealityCapture
void GlobalNamespace::OVRManager::_set_staticPrevEnableMixedRealityCapture(bool value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "staticPrevEnableMixedRealityCapture", value));
}
// Autogenerated static field getter
// Get static field: static public OVRMixedRealityCaptureSettings staticMrcSettings
GlobalNamespace::OVRMixedRealityCaptureSettings* GlobalNamespace::OVRManager::_get_staticMrcSettings() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMixedRealityCaptureSettings*>("", "OVRManager", "staticMrcSettings"));
}
// Autogenerated static field setter
// Set static field: static public OVRMixedRealityCaptureSettings staticMrcSettings
void GlobalNamespace::OVRManager::_set_staticMrcSettings(GlobalNamespace::OVRMixedRealityCaptureSettings* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "staticMrcSettings", value));
}
// Autogenerated method: OVRManager.get_instance
GlobalNamespace::OVRManager* GlobalNamespace::OVRManager::get_instance() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRManager*>("", "OVRManager", "get_instance"));
}
// Autogenerated method: OVRManager.set_instance
void GlobalNamespace::OVRManager::set_instance(GlobalNamespace::OVRManager* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "set_instance", value));
}
// Autogenerated method: OVRManager.get_display
GlobalNamespace::OVRDisplay* GlobalNamespace::OVRManager::get_display() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRDisplay*>("", "OVRManager", "get_display"));
}
// Autogenerated method: OVRManager.set_display
void GlobalNamespace::OVRManager::set_display(GlobalNamespace::OVRDisplay* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "set_display", value));
}
// Autogenerated method: OVRManager.get_tracker
GlobalNamespace::OVRTracker* GlobalNamespace::OVRManager::get_tracker() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRTracker*>("", "OVRManager", "get_tracker"));
}
// Autogenerated method: OVRManager.set_tracker
void GlobalNamespace::OVRManager::set_tracker(GlobalNamespace::OVRTracker* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "set_tracker", value));
}
// Autogenerated method: OVRManager.get_boundary
GlobalNamespace::OVRBoundary* GlobalNamespace::OVRManager::get_boundary() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRBoundary*>("", "OVRManager", "get_boundary"));
}
// Autogenerated method: OVRManager.set_boundary
void GlobalNamespace::OVRManager::set_boundary(GlobalNamespace::OVRBoundary* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "set_boundary", value));
}
// Autogenerated method: OVRManager.get_profile
GlobalNamespace::OVRProfile* GlobalNamespace::OVRManager::get_profile() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRProfile*>("", "OVRManager", "get_profile"));
}
// Autogenerated method: OVRManager.add_HMDAcquired
void GlobalNamespace::OVRManager::add_HMDAcquired(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "add_HMDAcquired", value));
}
// Autogenerated method: OVRManager.remove_HMDAcquired
void GlobalNamespace::OVRManager::remove_HMDAcquired(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "remove_HMDAcquired", value));
}
// Autogenerated method: OVRManager.add_HMDLost
void GlobalNamespace::OVRManager::add_HMDLost(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "add_HMDLost", value));
}
// Autogenerated method: OVRManager.remove_HMDLost
void GlobalNamespace::OVRManager::remove_HMDLost(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "remove_HMDLost", value));
}
// Autogenerated method: OVRManager.add_HMDMounted
void GlobalNamespace::OVRManager::add_HMDMounted(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "add_HMDMounted", value));
}
// Autogenerated method: OVRManager.remove_HMDMounted
void GlobalNamespace::OVRManager::remove_HMDMounted(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "remove_HMDMounted", value));
}
// Autogenerated method: OVRManager.add_HMDUnmounted
void GlobalNamespace::OVRManager::add_HMDUnmounted(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "add_HMDUnmounted", value));
}
// Autogenerated method: OVRManager.remove_HMDUnmounted
void GlobalNamespace::OVRManager::remove_HMDUnmounted(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "remove_HMDUnmounted", value));
}
// Autogenerated method: OVRManager.add_VrFocusAcquired
void GlobalNamespace::OVRManager::add_VrFocusAcquired(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "add_VrFocusAcquired", value));
}
// Autogenerated method: OVRManager.remove_VrFocusAcquired
void GlobalNamespace::OVRManager::remove_VrFocusAcquired(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "remove_VrFocusAcquired", value));
}
// Autogenerated method: OVRManager.add_VrFocusLost
void GlobalNamespace::OVRManager::add_VrFocusLost(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "add_VrFocusLost", value));
}
// Autogenerated method: OVRManager.remove_VrFocusLost
void GlobalNamespace::OVRManager::remove_VrFocusLost(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "remove_VrFocusLost", value));
}
// Autogenerated method: OVRManager.add_InputFocusAcquired
void GlobalNamespace::OVRManager::add_InputFocusAcquired(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "add_InputFocusAcquired", value));
}
// Autogenerated method: OVRManager.remove_InputFocusAcquired
void GlobalNamespace::OVRManager::remove_InputFocusAcquired(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "remove_InputFocusAcquired", value));
}
// Autogenerated method: OVRManager.add_InputFocusLost
void GlobalNamespace::OVRManager::add_InputFocusLost(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "add_InputFocusLost", value));
}
// Autogenerated method: OVRManager.remove_InputFocusLost
void GlobalNamespace::OVRManager::remove_InputFocusLost(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "remove_InputFocusLost", value));
}
// Autogenerated method: OVRManager.add_AudioOutChanged
void GlobalNamespace::OVRManager::add_AudioOutChanged(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "add_AudioOutChanged", value));
}
// Autogenerated method: OVRManager.remove_AudioOutChanged
void GlobalNamespace::OVRManager::remove_AudioOutChanged(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "remove_AudioOutChanged", value));
}
// Autogenerated method: OVRManager.add_AudioInChanged
void GlobalNamespace::OVRManager::add_AudioInChanged(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "add_AudioInChanged", value));
}
// Autogenerated method: OVRManager.remove_AudioInChanged
void GlobalNamespace::OVRManager::remove_AudioInChanged(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "remove_AudioInChanged", value));
}
// Autogenerated method: OVRManager.add_TrackingAcquired
void GlobalNamespace::OVRManager::add_TrackingAcquired(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "add_TrackingAcquired", value));
}
// Autogenerated method: OVRManager.remove_TrackingAcquired
void GlobalNamespace::OVRManager::remove_TrackingAcquired(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "remove_TrackingAcquired", value));
}
// Autogenerated method: OVRManager.add_TrackingLost
void GlobalNamespace::OVRManager::add_TrackingLost(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "add_TrackingLost", value));
}
// Autogenerated method: OVRManager.remove_TrackingLost
void GlobalNamespace::OVRManager::remove_TrackingLost(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "remove_TrackingLost", value));
}
// Autogenerated method: OVRManager.add_HSWDismissed
void GlobalNamespace::OVRManager::add_HSWDismissed(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "add_HSWDismissed", value));
}
// Autogenerated method: OVRManager.remove_HSWDismissed
void GlobalNamespace::OVRManager::remove_HSWDismissed(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "remove_HSWDismissed", value));
}
// Autogenerated method: OVRManager.get_isHmdPresent
bool GlobalNamespace::OVRManager::get_isHmdPresent() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRManager", "get_isHmdPresent"));
}
// Autogenerated method: OVRManager.set_isHmdPresent
void GlobalNamespace::OVRManager::set_isHmdPresent(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "set_isHmdPresent", value));
}
// Autogenerated method: OVRManager.get_audioOutId
::Il2CppString* GlobalNamespace::OVRManager::get_audioOutId() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("", "OVRManager", "get_audioOutId"));
}
// Autogenerated method: OVRManager.get_audioInId
::Il2CppString* GlobalNamespace::OVRManager::get_audioInId() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("", "OVRManager", "get_audioInId"));
}
// Autogenerated method: OVRManager.get_hasVrFocus
bool GlobalNamespace::OVRManager::get_hasVrFocus() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRManager", "get_hasVrFocus"));
}
// Autogenerated method: OVRManager.set_hasVrFocus
void GlobalNamespace::OVRManager::set_hasVrFocus(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "set_hasVrFocus", value));
}
// Autogenerated method: OVRManager.get_hasInputFocus
bool GlobalNamespace::OVRManager::get_hasInputFocus() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRManager", "get_hasInputFocus"));
}
// Autogenerated method: OVRManager.get_chromatic
bool GlobalNamespace::OVRManager::get_chromatic() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_chromatic"));
}
// Autogenerated method: OVRManager.set_chromatic
void GlobalNamespace::OVRManager::set_chromatic(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_chromatic", value));
}
// Autogenerated method: OVRManager.get_monoscopic
bool GlobalNamespace::OVRManager::get_monoscopic() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_monoscopic"));
}
// Autogenerated method: OVRManager.set_monoscopic
void GlobalNamespace::OVRManager::set_monoscopic(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_monoscopic", value));
}
// Autogenerated method: OVRManager.IsAdaptiveResSupportedByEngine
bool GlobalNamespace::OVRManager::IsAdaptiveResSupportedByEngine() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRManager", "IsAdaptiveResSupportedByEngine"));
}
// Autogenerated method: OVRManager.get_headPoseRelativeOffsetRotation
UnityEngine::Vector3 GlobalNamespace::OVRManager::get_headPoseRelativeOffsetRotation() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_headPoseRelativeOffsetRotation"));
}
// Autogenerated method: OVRManager.set_headPoseRelativeOffsetRotation
void GlobalNamespace::OVRManager::set_headPoseRelativeOffsetRotation(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_headPoseRelativeOffsetRotation", value));
}
// Autogenerated method: OVRManager.get_headPoseRelativeOffsetTranslation
UnityEngine::Vector3 GlobalNamespace::OVRManager::get_headPoseRelativeOffsetTranslation() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_headPoseRelativeOffsetTranslation"));
}
// Autogenerated method: OVRManager.set_headPoseRelativeOffsetTranslation
void GlobalNamespace::OVRManager::set_headPoseRelativeOffsetTranslation(UnityEngine::Vector3 value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_headPoseRelativeOffsetTranslation", value));
}
// Autogenerated method: OVRManager.get_instantiateMixedRealityBackgroundCameraGameObject
System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* GlobalNamespace::OVRManager::get_instantiateMixedRealityBackgroundCameraGameObject() {
  return THROW_UNLESS((il2cpp_utils::RunMethod<System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>*>(this, "get_instantiateMixedRealityBackgroundCameraGameObject")));
}
// Autogenerated method: OVRManager.set_instantiateMixedRealityBackgroundCameraGameObject
void GlobalNamespace::OVRManager::set_instantiateMixedRealityBackgroundCameraGameObject(System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_instantiateMixedRealityBackgroundCameraGameObject", value));
}
// Autogenerated method: OVRManager.get_instantiateMixedRealityForegroundCameraGameObject
System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* GlobalNamespace::OVRManager::get_instantiateMixedRealityForegroundCameraGameObject() {
  return THROW_UNLESS((il2cpp_utils::RunMethod<System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>*>(this, "get_instantiateMixedRealityForegroundCameraGameObject")));
}
// Autogenerated method: OVRManager.set_instantiateMixedRealityForegroundCameraGameObject
void GlobalNamespace::OVRManager::set_instantiateMixedRealityForegroundCameraGameObject(System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_instantiateMixedRealityForegroundCameraGameObject", value));
}
// Autogenerated method: OVRManager.get_vsyncCount
int GlobalNamespace::OVRManager::get_vsyncCount() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_vsyncCount"));
}
// Autogenerated method: OVRManager.set_vsyncCount
void GlobalNamespace::OVRManager::set_vsyncCount(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_vsyncCount", value));
}
// Autogenerated method: OVRManager.get_batteryLevel
float GlobalNamespace::OVRManager::get_batteryLevel() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("", "OVRManager", "get_batteryLevel"));
}
// Autogenerated method: OVRManager.get_batteryTemperature
float GlobalNamespace::OVRManager::get_batteryTemperature() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("", "OVRManager", "get_batteryTemperature"));
}
// Autogenerated method: OVRManager.get_batteryStatus
int GlobalNamespace::OVRManager::get_batteryStatus() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("", "OVRManager", "get_batteryStatus"));
}
// Autogenerated method: OVRManager.get_volumeLevel
float GlobalNamespace::OVRManager::get_volumeLevel() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("", "OVRManager", "get_volumeLevel"));
}
// Autogenerated method: OVRManager.get_cpuLevel
int GlobalNamespace::OVRManager::get_cpuLevel() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("", "OVRManager", "get_cpuLevel"));
}
// Autogenerated method: OVRManager.set_cpuLevel
void GlobalNamespace::OVRManager::set_cpuLevel(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "set_cpuLevel", value));
}
// Autogenerated method: OVRManager.get_gpuLevel
int GlobalNamespace::OVRManager::get_gpuLevel() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("", "OVRManager", "get_gpuLevel"));
}
// Autogenerated method: OVRManager.set_gpuLevel
void GlobalNamespace::OVRManager::set_gpuLevel(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "set_gpuLevel", value));
}
// Autogenerated method: OVRManager.get_isPowerSavingActive
bool GlobalNamespace::OVRManager::get_isPowerSavingActive() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRManager", "get_isPowerSavingActive"));
}
// Autogenerated method: OVRManager.get_eyeTextureFormat
GlobalNamespace::OVRManager::EyeTextureFormat GlobalNamespace::OVRManager::get_eyeTextureFormat() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRManager::EyeTextureFormat>("", "OVRManager", "get_eyeTextureFormat"));
}
// Autogenerated method: OVRManager.set_eyeTextureFormat
void GlobalNamespace::OVRManager::set_eyeTextureFormat(GlobalNamespace::OVRManager::EyeTextureFormat value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "set_eyeTextureFormat", value));
}
// Autogenerated method: OVRManager.get_fixedFoveatedRenderingSupported
bool GlobalNamespace::OVRManager::get_fixedFoveatedRenderingSupported() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRManager", "get_fixedFoveatedRenderingSupported"));
}
// Autogenerated method: OVRManager.get_fixedFoveatedRenderingLevel
GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel GlobalNamespace::OVRManager::get_fixedFoveatedRenderingLevel() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel>("", "OVRManager", "get_fixedFoveatedRenderingLevel"));
}
// Autogenerated method: OVRManager.set_fixedFoveatedRenderingLevel
void GlobalNamespace::OVRManager::set_fixedFoveatedRenderingLevel(GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "set_fixedFoveatedRenderingLevel", value));
}
// Autogenerated method: OVRManager.get_tiledMultiResSupported
bool GlobalNamespace::OVRManager::get_tiledMultiResSupported() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRManager", "get_tiledMultiResSupported"));
}
// Autogenerated method: OVRManager.get_tiledMultiResLevel
GlobalNamespace::OVRManager::TiledMultiResLevel GlobalNamespace::OVRManager::get_tiledMultiResLevel() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRManager::TiledMultiResLevel>("", "OVRManager", "get_tiledMultiResLevel"));
}
// Autogenerated method: OVRManager.set_tiledMultiResLevel
void GlobalNamespace::OVRManager::set_tiledMultiResLevel(GlobalNamespace::OVRManager::TiledMultiResLevel value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "set_tiledMultiResLevel", value));
}
// Autogenerated method: OVRManager.get_gpuUtilSupported
bool GlobalNamespace::OVRManager::get_gpuUtilSupported() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRManager", "get_gpuUtilSupported"));
}
// Autogenerated method: OVRManager.get_gpuUtilLevel
float GlobalNamespace::OVRManager::get_gpuUtilLevel() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>("", "OVRManager", "get_gpuUtilLevel"));
}
// Autogenerated method: OVRManager.SetColorScaleAndOffset
void GlobalNamespace::OVRManager::SetColorScaleAndOffset(UnityEngine::Vector4 colorScale, UnityEngine::Vector4 colorOffset, bool applyToAllLayers) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "SetColorScaleAndOffset", colorScale, colorOffset, applyToAllLayers));
}
// Autogenerated method: OVRManager.SetOpenVRLocalPose
void GlobalNamespace::OVRManager::SetOpenVRLocalPose(UnityEngine::Vector3 leftPos, UnityEngine::Vector3 rightPos, UnityEngine::Quaternion leftRot, UnityEngine::Quaternion rightRot) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "SetOpenVRLocalPose", leftPos, rightPos, leftRot, rightRot));
}
// Autogenerated method: OVRManager.GetOpenVRControllerOffset
GlobalNamespace::OVRPose GlobalNamespace::OVRManager::GetOpenVRControllerOffset(UnityEngine::XR::XRNode hand) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPose>("", "OVRManager", "GetOpenVRControllerOffset", hand));
}
// Autogenerated method: OVRManager.get_trackingOriginType
GlobalNamespace::OVRManager::TrackingOrigin GlobalNamespace::OVRManager::get_trackingOriginType() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRManager::TrackingOrigin>(this, "get_trackingOriginType"));
}
// Autogenerated method: OVRManager.set_trackingOriginType
void GlobalNamespace::OVRManager::set_trackingOriginType(GlobalNamespace::OVRManager::TrackingOrigin value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_trackingOriginType", value));
}
// Autogenerated method: OVRManager.get_reorientHMDOnControllerRecenter
bool GlobalNamespace::OVRManager::get_reorientHMDOnControllerRecenter() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_reorientHMDOnControllerRecenter"));
}
// Autogenerated method: OVRManager.set_reorientHMDOnControllerRecenter
void GlobalNamespace::OVRManager::set_reorientHMDOnControllerRecenter(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_reorientHMDOnControllerRecenter", value));
}
// Autogenerated method: OVRManager.get_isSupportedPlatform
bool GlobalNamespace::OVRManager::get_isSupportedPlatform() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isSupportedPlatform"));
}
// Autogenerated method: OVRManager.set_isSupportedPlatform
void GlobalNamespace::OVRManager::set_isSupportedPlatform(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_isSupportedPlatform", value));
}
// Autogenerated method: OVRManager.get_isUserPresent
bool GlobalNamespace::OVRManager::get_isUserPresent() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isUserPresent"));
}
// Autogenerated method: OVRManager.set_isUserPresent
void GlobalNamespace::OVRManager::set_isUserPresent(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_isUserPresent", value));
}
// Autogenerated method: OVRManager.get_utilitiesVersion
System::Version* GlobalNamespace::OVRManager::get_utilitiesVersion() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Version*>("", "OVRManager", "get_utilitiesVersion"));
}
// Autogenerated method: OVRManager.get_pluginVersion
System::Version* GlobalNamespace::OVRManager::get_pluginVersion() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Version*>("", "OVRManager", "get_pluginVersion"));
}
// Autogenerated method: OVRManager.get_sdkVersion
System::Version* GlobalNamespace::OVRManager::get_sdkVersion() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Version*>("", "OVRManager", "get_sdkVersion"));
}
// Autogenerated method: OVRManager.MixedRealityEnabledFromCmd
bool GlobalNamespace::OVRManager::MixedRealityEnabledFromCmd() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRManager", "MixedRealityEnabledFromCmd"));
}
// Autogenerated method: OVRManager.UseDirectCompositionFromCmd
bool GlobalNamespace::OVRManager::UseDirectCompositionFromCmd() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRManager", "UseDirectCompositionFromCmd"));
}
// Autogenerated method: OVRManager.UseExternalCompositionFromCmd
bool GlobalNamespace::OVRManager::UseExternalCompositionFromCmd() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRManager", "UseExternalCompositionFromCmd"));
}
// Autogenerated method: OVRManager.CreateMixedRealityCaptureConfigurationFileFromCmd
bool GlobalNamespace::OVRManager::CreateMixedRealityCaptureConfigurationFileFromCmd() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRManager", "CreateMixedRealityCaptureConfigurationFileFromCmd"));
}
// Autogenerated method: OVRManager.LoadMixedRealityCaptureConfigurationFileFromCmd
bool GlobalNamespace::OVRManager::LoadMixedRealityCaptureConfigurationFileFromCmd() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRManager", "LoadMixedRealityCaptureConfigurationFileFromCmd"));
}
// Autogenerated method: OVRManager.IsUnityAlphaOrBetaVersion
bool GlobalNamespace::OVRManager::IsUnityAlphaOrBetaVersion() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRManager", "IsUnityAlphaOrBetaVersion"));
}
// Autogenerated method: OVRManager.InitOVRManager
void GlobalNamespace::OVRManager::InitOVRManager() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "InitOVRManager"));
}
// Autogenerated method: OVRManager.Awake
void GlobalNamespace::OVRManager::Awake() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Awake"));
}
// Autogenerated method: OVRManager.SetCurrentXRDevice
void GlobalNamespace::OVRManager::SetCurrentXRDevice() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetCurrentXRDevice"));
}
// Autogenerated method: OVRManager.Initialize
void GlobalNamespace::OVRManager::Initialize() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Initialize"));
}
// Autogenerated method: OVRManager.Update
void GlobalNamespace::OVRManager::Update() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Update"));
}
// Autogenerated method: OVRManager.FindMainCamera
UnityEngine::Camera* GlobalNamespace::OVRManager::FindMainCamera() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Camera*>(this, "FindMainCamera"));
}
// Autogenerated method: OVRManager.OnDisable
void GlobalNamespace::OVRManager::OnDisable() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDisable"));
}
// Autogenerated method: OVRManager.LateUpdate
void GlobalNamespace::OVRManager::LateUpdate() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LateUpdate"));
}
// Autogenerated method: OVRManager.FixedUpdate
void GlobalNamespace::OVRManager::FixedUpdate() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "FixedUpdate"));
}
// Autogenerated method: OVRManager.OnDestroy
void GlobalNamespace::OVRManager::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: OVRManager.OnApplicationPause
void GlobalNamespace::OVRManager::OnApplicationPause(bool pause) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnApplicationPause", pause));
}
// Autogenerated method: OVRManager.OnApplicationFocus
void GlobalNamespace::OVRManager::OnApplicationFocus(bool focus) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnApplicationFocus", focus));
}
// Autogenerated method: OVRManager.OnApplicationQuit
void GlobalNamespace::OVRManager::OnApplicationQuit() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnApplicationQuit"));
}
// Autogenerated method: OVRManager.ReturnToLauncher
void GlobalNamespace::OVRManager::ReturnToLauncher() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ReturnToLauncher"));
}
// Autogenerated method: OVRManager.PlatformUIConfirmQuit
void GlobalNamespace::OVRManager::PlatformUIConfirmQuit() {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "PlatformUIConfirmQuit"));
}
// Autogenerated method: OVRManager.StaticInitializeMixedRealityCapture
void GlobalNamespace::OVRManager::StaticInitializeMixedRealityCapture(GlobalNamespace::OVRManager* instance) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "StaticInitializeMixedRealityCapture", instance));
}
// Autogenerated method: OVRManager.StaticUpdateMixedRealityCapture
void GlobalNamespace::OVRManager::StaticUpdateMixedRealityCapture(GlobalNamespace::OVRManager* instance, System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* instantiateMixedRealityBackgroundCameraGameObject, System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* instantiateMixedRealityForegroundCameraGameObject) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "StaticUpdateMixedRealityCapture", instance, instantiateMixedRealityBackgroundCameraGameObject, instantiateMixedRealityForegroundCameraGameObject));
}
// Autogenerated method: OVRManager.StaticShutdownMixedRealityCapture
void GlobalNamespace::OVRManager::StaticShutdownMixedRealityCapture(GlobalNamespace::OVRManager* instance) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", "StaticShutdownMixedRealityCapture", instance));
}
// Autogenerated method: OVRManager..ctor
GlobalNamespace::OVRManager* GlobalNamespace::OVRManager::New_ctor() {
  return (OVRManager*)THROW_UNLESS(il2cpp_utils::New("", "OVRManager"));
}
// Autogenerated method: OVRManager..cctor
void GlobalNamespace::OVRManager::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRManager", ".cctor"));
}
