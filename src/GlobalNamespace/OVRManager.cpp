// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRManager
#include "GlobalNamespace/OVRManager.hpp"
// Including type: OVRManager/EyeTextureFormat
#include "GlobalNamespace/OVRManager_EyeTextureFormat.hpp"
// Including type: OVRManager/FixedFoveatedRenderingLevel
#include "GlobalNamespace/OVRManager_FixedFoveatedRenderingLevel.hpp"
// Including type: OVRManager/TiledMultiResLevel
#include "GlobalNamespace/OVRManager_TiledMultiResLevel.hpp"
// Including type: OVRMixedRealityCaptureSettings
#include "GlobalNamespace/OVRMixedRealityCaptureSettings.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: OVRProfile
#include "GlobalNamespace/OVRProfile.hpp"
// Including type: OVRBoundary
#include "GlobalNamespace/OVRBoundary.hpp"
// Including type: OVRTracker
#include "GlobalNamespace/OVRTracker.hpp"
// Including type: OVRDisplay
#include "GlobalNamespace/OVRDisplay.hpp"
// Including type: OVRManager/<>c
#include "GlobalNamespace/OVRManager_--c.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xD85A6C
// Autogenerated static field getter
// Get static field: static private OVRManager <instance>k__BackingField
GlobalNamespace::OVRManager* GlobalNamespace::OVRManager::_get_$instance$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_$instance$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager*>("", "OVRManager", "<instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OVRManager <instance>k__BackingField
void GlobalNamespace::OVRManager::_set_$instance$k__BackingField(GlobalNamespace::OVRManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_$instance$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "<instance>k__BackingField", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD85A7C
// Autogenerated static field getter
// Get static field: static private OVRDisplay <display>k__BackingField
GlobalNamespace::OVRDisplay* GlobalNamespace::OVRManager::_get_$display$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_$display$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRDisplay*>("", "OVRManager", "<display>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OVRDisplay <display>k__BackingField
void GlobalNamespace::OVRManager::_set_$display$k__BackingField(GlobalNamespace::OVRDisplay* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_$display$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "<display>k__BackingField", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD85A8C
// Autogenerated static field getter
// Get static field: static private OVRTracker <tracker>k__BackingField
GlobalNamespace::OVRTracker* GlobalNamespace::OVRManager::_get_$tracker$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_$tracker$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRTracker*>("", "OVRManager", "<tracker>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OVRTracker <tracker>k__BackingField
void GlobalNamespace::OVRManager::_set_$tracker$k__BackingField(GlobalNamespace::OVRTracker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_$tracker$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "<tracker>k__BackingField", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD85A9C
// Autogenerated static field getter
// Get static field: static private OVRBoundary <boundary>k__BackingField
GlobalNamespace::OVRBoundary* GlobalNamespace::OVRManager::_get_$boundary$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_$boundary$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRBoundary*>("", "OVRManager", "<boundary>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private OVRBoundary <boundary>k__BackingField
void GlobalNamespace::OVRManager::_set_$boundary$k__BackingField(GlobalNamespace::OVRBoundary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_$boundary$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "<boundary>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private OVRProfile _profile
GlobalNamespace::OVRProfile* GlobalNamespace::OVRManager::_get__profile() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get__profile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRProfile*>("", "OVRManager", "_profile"));
}
// Autogenerated static field setter
// Set static field: static private OVRProfile _profile
void GlobalNamespace::OVRManager::_set__profile(GlobalNamespace::OVRProfile* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set__profile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_profile", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD85AAC
// Autogenerated static field getter
// Get static field: static private System.Action HMDAcquired
System::Action* GlobalNamespace::OVRManager::_get_HMDAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_HMDAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "HMDAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action HMDAcquired
void GlobalNamespace::OVRManager::_set_HMDAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_HMDAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "HMDAcquired", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD85ABC
// Autogenerated static field getter
// Get static field: static private System.Action HMDLost
System::Action* GlobalNamespace::OVRManager::_get_HMDLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_HMDLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "HMDLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action HMDLost
void GlobalNamespace::OVRManager::_set_HMDLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_HMDLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "HMDLost", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD85ACC
// Autogenerated static field getter
// Get static field: static private System.Action HMDMounted
System::Action* GlobalNamespace::OVRManager::_get_HMDMounted() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_HMDMounted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "HMDMounted"));
}
// Autogenerated static field setter
// Set static field: static private System.Action HMDMounted
void GlobalNamespace::OVRManager::_set_HMDMounted(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_HMDMounted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "HMDMounted", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD85ADC
// Autogenerated static field getter
// Get static field: static private System.Action HMDUnmounted
System::Action* GlobalNamespace::OVRManager::_get_HMDUnmounted() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_HMDUnmounted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "HMDUnmounted"));
}
// Autogenerated static field setter
// Set static field: static private System.Action HMDUnmounted
void GlobalNamespace::OVRManager::_set_HMDUnmounted(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_HMDUnmounted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "HMDUnmounted", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD85AEC
// Autogenerated static field getter
// Get static field: static private System.Action VrFocusAcquired
System::Action* GlobalNamespace::OVRManager::_get_VrFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_VrFocusAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "VrFocusAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action VrFocusAcquired
void GlobalNamespace::OVRManager::_set_VrFocusAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_VrFocusAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "VrFocusAcquired", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD85AFC
// Autogenerated static field getter
// Get static field: static private System.Action VrFocusLost
System::Action* GlobalNamespace::OVRManager::_get_VrFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_VrFocusLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "VrFocusLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action VrFocusLost
void GlobalNamespace::OVRManager::_set_VrFocusLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_VrFocusLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "VrFocusLost", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD85B0C
// Autogenerated static field getter
// Get static field: static private System.Action InputFocusAcquired
System::Action* GlobalNamespace::OVRManager::_get_InputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_InputFocusAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "InputFocusAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action InputFocusAcquired
void GlobalNamespace::OVRManager::_set_InputFocusAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_InputFocusAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "InputFocusAcquired", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD85B1C
// Autogenerated static field getter
// Get static field: static private System.Action InputFocusLost
System::Action* GlobalNamespace::OVRManager::_get_InputFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_InputFocusLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "InputFocusLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action InputFocusLost
void GlobalNamespace::OVRManager::_set_InputFocusLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_InputFocusLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "InputFocusLost", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD85B2C
// Autogenerated static field getter
// Get static field: static private System.Action AudioOutChanged
System::Action* GlobalNamespace::OVRManager::_get_AudioOutChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_AudioOutChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "AudioOutChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Action AudioOutChanged
void GlobalNamespace::OVRManager::_set_AudioOutChanged(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_AudioOutChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "AudioOutChanged", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD85B3C
// Autogenerated static field getter
// Get static field: static private System.Action AudioInChanged
System::Action* GlobalNamespace::OVRManager::_get_AudioInChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_AudioInChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "AudioInChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Action AudioInChanged
void GlobalNamespace::OVRManager::_set_AudioInChanged(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_AudioInChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "AudioInChanged", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD85B4C
// Autogenerated static field getter
// Get static field: static private System.Action TrackingAcquired
System::Action* GlobalNamespace::OVRManager::_get_TrackingAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_TrackingAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "TrackingAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action TrackingAcquired
void GlobalNamespace::OVRManager::_set_TrackingAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_TrackingAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "TrackingAcquired", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD85B5C
// Autogenerated static field getter
// Get static field: static private System.Action TrackingLost
System::Action* GlobalNamespace::OVRManager::_get_TrackingLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_TrackingLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "TrackingLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action TrackingLost
void GlobalNamespace::OVRManager::_set_TrackingLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_TrackingLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "TrackingLost", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD85B6C
// Autogenerated static field getter
// Get static field: static private System.Action HSWDismissed
System::Action* GlobalNamespace::OVRManager::_get_HSWDismissed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_HSWDismissed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>("", "OVRManager", "HSWDismissed"));
}
// Autogenerated static field setter
// Set static field: static private System.Action HSWDismissed
void GlobalNamespace::OVRManager::_set_HSWDismissed(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_HSWDismissed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "HSWDismissed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _isHmdPresentCached
bool GlobalNamespace::OVRManager::_get__isHmdPresentCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get__isHmdPresentCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_isHmdPresentCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _isHmdPresentCached
void GlobalNamespace::OVRManager::_set__isHmdPresentCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set__isHmdPresentCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_isHmdPresentCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _isHmdPresent
bool GlobalNamespace::OVRManager::_get__isHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get__isHmdPresent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_isHmdPresent"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _isHmdPresent
void GlobalNamespace::OVRManager::_set__isHmdPresent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set__isHmdPresent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_isHmdPresent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _wasHmdPresent
bool GlobalNamespace::OVRManager::_get__wasHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get__wasHmdPresent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_wasHmdPresent"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _wasHmdPresent
void GlobalNamespace::OVRManager::_set__wasHmdPresent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set__wasHmdPresent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_wasHmdPresent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _hasVrFocusCached
bool GlobalNamespace::OVRManager::_get__hasVrFocusCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get__hasVrFocusCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_hasVrFocusCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _hasVrFocusCached
void GlobalNamespace::OVRManager::_set__hasVrFocusCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set__hasVrFocusCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_hasVrFocusCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _hasVrFocus
bool GlobalNamespace::OVRManager::_get__hasVrFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get__hasVrFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_hasVrFocus"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _hasVrFocus
void GlobalNamespace::OVRManager::_set__hasVrFocus(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set__hasVrFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_hasVrFocus", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _hadVrFocus
bool GlobalNamespace::OVRManager::_get__hadVrFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get__hadVrFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_hadVrFocus"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _hadVrFocus
void GlobalNamespace::OVRManager::_set__hadVrFocus(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set__hadVrFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_hadVrFocus", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _hadInputFocus
bool GlobalNamespace::OVRManager::_get__hadInputFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get__hadInputFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_hadInputFocus"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _hadInputFocus
void GlobalNamespace::OVRManager::_set__hadInputFocus(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set__hadInputFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_hadInputFocus", value));
}
// Autogenerated static field getter
// Get static field: static public System.String OCULUS_UNITY_NAME_STR
::Il2CppString* GlobalNamespace::OVRManager::_get_OCULUS_UNITY_NAME_STR() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_OCULUS_UNITY_NAME_STR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRManager", "OCULUS_UNITY_NAME_STR"));
}
// Autogenerated static field setter
// Set static field: static public System.String OCULUS_UNITY_NAME_STR
void GlobalNamespace::OVRManager::_set_OCULUS_UNITY_NAME_STR(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_OCULUS_UNITY_NAME_STR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OCULUS_UNITY_NAME_STR", value));
}
// Autogenerated static field getter
// Get static field: static public System.String OPENVR_UNITY_NAME_STR
::Il2CppString* GlobalNamespace::OVRManager::_get_OPENVR_UNITY_NAME_STR() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_OPENVR_UNITY_NAME_STR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRManager", "OPENVR_UNITY_NAME_STR"));
}
// Autogenerated static field setter
// Set static field: static public System.String OPENVR_UNITY_NAME_STR
void GlobalNamespace::OVRManager::_set_OPENVR_UNITY_NAME_STR(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_OPENVR_UNITY_NAME_STR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OPENVR_UNITY_NAME_STR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XRDevice loadedXRDevice
GlobalNamespace::OVRManager::XRDevice GlobalNamespace::OVRManager::_get_loadedXRDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_loadedXRDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRManager::XRDevice>("", "OVRManager", "loadedXRDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XRDevice loadedXRDevice
void GlobalNamespace::OVRManager::_set_loadedXRDevice(GlobalNamespace::OVRManager::XRDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_loadedXRDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "loadedXRDevice", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 OpenVRTouchRotationOffsetEulerLeft
UnityEngine::Vector3 GlobalNamespace::OVRManager::_get_OpenVRTouchRotationOffsetEulerLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_OpenVRTouchRotationOffsetEulerLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "OVRManager", "OpenVRTouchRotationOffsetEulerLeft"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 OpenVRTouchRotationOffsetEulerLeft
void GlobalNamespace::OVRManager::_set_OpenVRTouchRotationOffsetEulerLeft(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_OpenVRTouchRotationOffsetEulerLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OpenVRTouchRotationOffsetEulerLeft", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 OpenVRTouchRotationOffsetEulerRight
UnityEngine::Vector3 GlobalNamespace::OVRManager::_get_OpenVRTouchRotationOffsetEulerRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_OpenVRTouchRotationOffsetEulerRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "OVRManager", "OpenVRTouchRotationOffsetEulerRight"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 OpenVRTouchRotationOffsetEulerRight
void GlobalNamespace::OVRManager::_set_OpenVRTouchRotationOffsetEulerRight(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_OpenVRTouchRotationOffsetEulerRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OpenVRTouchRotationOffsetEulerRight", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 OpenVRTouchPositionOffsetLeft
UnityEngine::Vector3 GlobalNamespace::OVRManager::_get_OpenVRTouchPositionOffsetLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_OpenVRTouchPositionOffsetLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "OVRManager", "OpenVRTouchPositionOffsetLeft"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 OpenVRTouchPositionOffsetLeft
void GlobalNamespace::OVRManager::_set_OpenVRTouchPositionOffsetLeft(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_OpenVRTouchPositionOffsetLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OpenVRTouchPositionOffsetLeft", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 OpenVRTouchPositionOffsetRight
UnityEngine::Vector3 GlobalNamespace::OVRManager::_get_OpenVRTouchPositionOffsetRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_OpenVRTouchPositionOffsetRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "OVRManager", "OpenVRTouchPositionOffsetRight"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 OpenVRTouchPositionOffsetRight
void GlobalNamespace::OVRManager::_set_OpenVRTouchPositionOffsetRight(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_OpenVRTouchPositionOffsetRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OpenVRTouchPositionOffsetRight", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _isUserPresentCached
bool GlobalNamespace::OVRManager::_get__isUserPresentCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get__isUserPresentCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_isUserPresentCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _isUserPresentCached
void GlobalNamespace::OVRManager::_set__isUserPresentCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set__isUserPresentCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_isUserPresentCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _isUserPresent
bool GlobalNamespace::OVRManager::_get__isUserPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get__isUserPresent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_isUserPresent"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _isUserPresent
void GlobalNamespace::OVRManager::_set__isUserPresent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set__isUserPresent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_isUserPresent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _wasUserPresent
bool GlobalNamespace::OVRManager::_get__wasUserPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get__wasUserPresent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "_wasUserPresent"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _wasUserPresent
void GlobalNamespace::OVRManager::_set__wasUserPresent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set__wasUserPresent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "_wasUserPresent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean prevAudioOutIdIsCached
bool GlobalNamespace::OVRManager::_get_prevAudioOutIdIsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_prevAudioOutIdIsCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "prevAudioOutIdIsCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean prevAudioOutIdIsCached
void GlobalNamespace::OVRManager::_set_prevAudioOutIdIsCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_prevAudioOutIdIsCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "prevAudioOutIdIsCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean prevAudioInIdIsCached
bool GlobalNamespace::OVRManager::_get_prevAudioInIdIsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_prevAudioInIdIsCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "prevAudioInIdIsCached"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean prevAudioInIdIsCached
void GlobalNamespace::OVRManager::_set_prevAudioInIdIsCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_prevAudioInIdIsCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "prevAudioInIdIsCached", value));
}
// Autogenerated static field getter
// Get static field: static private System.String prevAudioOutId
::Il2CppString* GlobalNamespace::OVRManager::_get_prevAudioOutId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_prevAudioOutId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRManager", "prevAudioOutId"));
}
// Autogenerated static field setter
// Set static field: static private System.String prevAudioOutId
void GlobalNamespace::OVRManager::_set_prevAudioOutId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_prevAudioOutId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "prevAudioOutId", value));
}
// Autogenerated static field getter
// Get static field: static private System.String prevAudioInId
::Il2CppString* GlobalNamespace::OVRManager::_get_prevAudioInId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_prevAudioInId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRManager", "prevAudioInId"));
}
// Autogenerated static field setter
// Set static field: static private System.String prevAudioInId
void GlobalNamespace::OVRManager::_set_prevAudioInId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_prevAudioInId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "prevAudioInId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean wasPositionTracked
bool GlobalNamespace::OVRManager::_get_wasPositionTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_wasPositionTracked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "wasPositionTracked"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean wasPositionTracked
void GlobalNamespace::OVRManager::_set_wasPositionTracked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_wasPositionTracked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "wasPositionTracked", value));
}
// Autogenerated static field getter
// Get static field: static public System.String UnityAlphaOrBetaVersionWarningMessage
::Il2CppString* GlobalNamespace::OVRManager::_get_UnityAlphaOrBetaVersionWarningMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_UnityAlphaOrBetaVersionWarningMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRManager", "UnityAlphaOrBetaVersionWarningMessage"));
}
// Autogenerated static field setter
// Set static field: static public System.String UnityAlphaOrBetaVersionWarningMessage
void GlobalNamespace::OVRManager::_set_UnityAlphaOrBetaVersionWarningMessage(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_UnityAlphaOrBetaVersionWarningMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "UnityAlphaOrBetaVersionWarningMessage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean OVRManagerinitialized
bool GlobalNamespace::OVRManager::_get_OVRManagerinitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_OVRManagerinitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "OVRManagerinitialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean OVRManagerinitialized
void GlobalNamespace::OVRManager::_set_OVRManagerinitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_OVRManagerinitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "OVRManagerinitialized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean staticMixedRealityCaptureInitialized
bool GlobalNamespace::OVRManager::_get_staticMixedRealityCaptureInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_staticMixedRealityCaptureInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "staticMixedRealityCaptureInitialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean staticMixedRealityCaptureInitialized
void GlobalNamespace::OVRManager::_set_staticMixedRealityCaptureInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_staticMixedRealityCaptureInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "staticMixedRealityCaptureInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean staticPrevEnableMixedRealityCapture
bool GlobalNamespace::OVRManager::_get_staticPrevEnableMixedRealityCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_staticPrevEnableMixedRealityCapture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "OVRManager", "staticPrevEnableMixedRealityCapture"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean staticPrevEnableMixedRealityCapture
void GlobalNamespace::OVRManager::_set_staticPrevEnableMixedRealityCapture(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_staticPrevEnableMixedRealityCapture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "staticPrevEnableMixedRealityCapture", value));
}
// Autogenerated static field getter
// Get static field: static public OVRMixedRealityCaptureSettings staticMrcSettings
GlobalNamespace::OVRMixedRealityCaptureSettings* GlobalNamespace::OVRManager::_get_staticMrcSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_get_staticMrcSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMixedRealityCaptureSettings*>("", "OVRManager", "staticMrcSettings"));
}
// Autogenerated static field setter
// Set static field: static public OVRMixedRealityCaptureSettings staticMrcSettings
void GlobalNamespace::OVRManager::_set_staticMrcSettings(GlobalNamespace::OVRMixedRealityCaptureSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("_set_staticMrcSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager", "staticMrcSettings", value));
}
// Autogenerated method: OVRManager.get_instance
GlobalNamespace::OVRManager* GlobalNamespace::OVRManager::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_instance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_instance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_instance
void GlobalNamespace::OVRManager::set_instance(GlobalNamespace::OVRManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_instance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_instance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_display
GlobalNamespace::OVRDisplay* GlobalNamespace::OVRManager::get_display() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_display");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_display", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRDisplay*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_display
void GlobalNamespace::OVRManager::set_display(GlobalNamespace::OVRDisplay* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_display");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_display", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_tracker
GlobalNamespace::OVRTracker* GlobalNamespace::OVRManager::get_tracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_tracker");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_tracker", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRTracker*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_tracker
void GlobalNamespace::OVRManager::set_tracker(GlobalNamespace::OVRTracker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_tracker");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_tracker", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_boundary
GlobalNamespace::OVRBoundary* GlobalNamespace::OVRManager::get_boundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_boundary");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_boundary", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRBoundary*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_boundary
void GlobalNamespace::OVRManager::set_boundary(GlobalNamespace::OVRBoundary* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_boundary");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_boundary", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_profile
GlobalNamespace::OVRProfile* GlobalNamespace::OVRManager::get_profile() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_profile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_profile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRProfile*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.add_HMDAcquired
void GlobalNamespace::OVRManager::add_HMDAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("add_HMDAcquired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_HMDAcquired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_HMDAcquired
void GlobalNamespace::OVRManager::remove_HMDAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("remove_HMDAcquired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_HMDAcquired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_HMDLost
void GlobalNamespace::OVRManager::add_HMDLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("add_HMDLost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_HMDLost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_HMDLost
void GlobalNamespace::OVRManager::remove_HMDLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("remove_HMDLost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_HMDLost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_HMDMounted
void GlobalNamespace::OVRManager::add_HMDMounted(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("add_HMDMounted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_HMDMounted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_HMDMounted
void GlobalNamespace::OVRManager::remove_HMDMounted(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("remove_HMDMounted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_HMDMounted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_HMDUnmounted
void GlobalNamespace::OVRManager::add_HMDUnmounted(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("add_HMDUnmounted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_HMDUnmounted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_HMDUnmounted
void GlobalNamespace::OVRManager::remove_HMDUnmounted(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("remove_HMDUnmounted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_HMDUnmounted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_VrFocusAcquired
void GlobalNamespace::OVRManager::add_VrFocusAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("add_VrFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_VrFocusAcquired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_VrFocusAcquired
void GlobalNamespace::OVRManager::remove_VrFocusAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("remove_VrFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_VrFocusAcquired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_VrFocusLost
void GlobalNamespace::OVRManager::add_VrFocusLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("add_VrFocusLost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_VrFocusLost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_VrFocusLost
void GlobalNamespace::OVRManager::remove_VrFocusLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("remove_VrFocusLost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_VrFocusLost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_InputFocusAcquired
void GlobalNamespace::OVRManager::add_InputFocusAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("add_InputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_InputFocusAcquired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_InputFocusAcquired
void GlobalNamespace::OVRManager::remove_InputFocusAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("remove_InputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_InputFocusAcquired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_InputFocusLost
void GlobalNamespace::OVRManager::add_InputFocusLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("add_InputFocusLost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_InputFocusLost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_InputFocusLost
void GlobalNamespace::OVRManager::remove_InputFocusLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("remove_InputFocusLost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_InputFocusLost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_AudioOutChanged
void GlobalNamespace::OVRManager::add_AudioOutChanged(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("add_AudioOutChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_AudioOutChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_AudioOutChanged
void GlobalNamespace::OVRManager::remove_AudioOutChanged(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("remove_AudioOutChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_AudioOutChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_AudioInChanged
void GlobalNamespace::OVRManager::add_AudioInChanged(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("add_AudioInChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_AudioInChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_AudioInChanged
void GlobalNamespace::OVRManager::remove_AudioInChanged(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("remove_AudioInChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_AudioInChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_TrackingAcquired
void GlobalNamespace::OVRManager::add_TrackingAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("add_TrackingAcquired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_TrackingAcquired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_TrackingAcquired
void GlobalNamespace::OVRManager::remove_TrackingAcquired(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("remove_TrackingAcquired");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_TrackingAcquired", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_TrackingLost
void GlobalNamespace::OVRManager::add_TrackingLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("add_TrackingLost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_TrackingLost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_TrackingLost
void GlobalNamespace::OVRManager::remove_TrackingLost(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("remove_TrackingLost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_TrackingLost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.add_HSWDismissed
void GlobalNamespace::OVRManager::add_HSWDismissed(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("add_HSWDismissed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "add_HSWDismissed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.remove_HSWDismissed
void GlobalNamespace::OVRManager::remove_HSWDismissed(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("remove_HSWDismissed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "remove_HSWDismissed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_isHmdPresent
bool GlobalNamespace::OVRManager::get_isHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_isHmdPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_isHmdPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_isHmdPresent
void GlobalNamespace::OVRManager::set_isHmdPresent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_isHmdPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_isHmdPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_audioOutId
::Il2CppString* GlobalNamespace::OVRManager::get_audioOutId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_audioOutId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_audioOutId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_audioInId
::Il2CppString* GlobalNamespace::OVRManager::get_audioInId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_audioInId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_audioInId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_hasVrFocus
bool GlobalNamespace::OVRManager::get_hasVrFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_hasVrFocus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_hasVrFocus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_hasVrFocus
void GlobalNamespace::OVRManager::set_hasVrFocus(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_hasVrFocus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_hasVrFocus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_hasInputFocus
bool GlobalNamespace::OVRManager::get_hasInputFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_hasInputFocus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_hasInputFocus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_chromatic
bool GlobalNamespace::OVRManager::get_chromatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_chromatic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_chromatic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_chromatic
void GlobalNamespace::OVRManager::set_chromatic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_chromatic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_chromatic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_monoscopic
bool GlobalNamespace::OVRManager::get_monoscopic() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_monoscopic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_monoscopic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_monoscopic
void GlobalNamespace::OVRManager::set_monoscopic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_monoscopic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_monoscopic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.IsAdaptiveResSupportedByEngine
bool GlobalNamespace::OVRManager::IsAdaptiveResSupportedByEngine() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("IsAdaptiveResSupportedByEngine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "IsAdaptiveResSupportedByEngine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_headPoseRelativeOffsetRotation
UnityEngine::Vector3 GlobalNamespace::OVRManager::get_headPoseRelativeOffsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_headPoseRelativeOffsetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_headPoseRelativeOffsetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_headPoseRelativeOffsetRotation
void GlobalNamespace::OVRManager::set_headPoseRelativeOffsetRotation(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_headPoseRelativeOffsetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_headPoseRelativeOffsetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_headPoseRelativeOffsetTranslation
UnityEngine::Vector3 GlobalNamespace::OVRManager::get_headPoseRelativeOffsetTranslation() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_headPoseRelativeOffsetTranslation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_headPoseRelativeOffsetTranslation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_headPoseRelativeOffsetTranslation
void GlobalNamespace::OVRManager::set_headPoseRelativeOffsetTranslation(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_headPoseRelativeOffsetTranslation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_headPoseRelativeOffsetTranslation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_instantiateMixedRealityBackgroundCameraGameObject
System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* GlobalNamespace::OVRManager::get_instantiateMixedRealityBackgroundCameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_instantiateMixedRealityBackgroundCameraGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_instantiateMixedRealityBackgroundCameraGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_instantiateMixedRealityBackgroundCameraGameObject
void GlobalNamespace::OVRManager::set_instantiateMixedRealityBackgroundCameraGameObject(System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_instantiateMixedRealityBackgroundCameraGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_instantiateMixedRealityBackgroundCameraGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_instantiateMixedRealityForegroundCameraGameObject
System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* GlobalNamespace::OVRManager::get_instantiateMixedRealityForegroundCameraGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_instantiateMixedRealityForegroundCameraGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_instantiateMixedRealityForegroundCameraGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_instantiateMixedRealityForegroundCameraGameObject
void GlobalNamespace::OVRManager::set_instantiateMixedRealityForegroundCameraGameObject(System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_instantiateMixedRealityForegroundCameraGameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_instantiateMixedRealityForegroundCameraGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_vsyncCount
int GlobalNamespace::OVRManager::get_vsyncCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_vsyncCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_vsyncCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_vsyncCount
void GlobalNamespace::OVRManager::set_vsyncCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_vsyncCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_vsyncCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_batteryLevel
float GlobalNamespace::OVRManager::get_batteryLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_batteryLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_batteryLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_batteryTemperature
float GlobalNamespace::OVRManager::get_batteryTemperature() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_batteryTemperature");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_batteryTemperature", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_batteryStatus
int GlobalNamespace::OVRManager::get_batteryStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_batteryStatus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_batteryStatus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_volumeLevel
float GlobalNamespace::OVRManager::get_volumeLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_volumeLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_volumeLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_cpuLevel
int GlobalNamespace::OVRManager::get_cpuLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_cpuLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_cpuLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_cpuLevel
void GlobalNamespace::OVRManager::set_cpuLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_cpuLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_cpuLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_gpuLevel
int GlobalNamespace::OVRManager::get_gpuLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_gpuLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_gpuLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_gpuLevel
void GlobalNamespace::OVRManager::set_gpuLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_gpuLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_gpuLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_isPowerSavingActive
bool GlobalNamespace::OVRManager::get_isPowerSavingActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_isPowerSavingActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_isPowerSavingActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_eyeTextureFormat
GlobalNamespace::OVRManager::EyeTextureFormat GlobalNamespace::OVRManager::get_eyeTextureFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_eyeTextureFormat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_eyeTextureFormat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager::EyeTextureFormat, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_eyeTextureFormat
void GlobalNamespace::OVRManager::set_eyeTextureFormat(GlobalNamespace::OVRManager::EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_eyeTextureFormat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_eyeTextureFormat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_fixedFoveatedRenderingSupported
bool GlobalNamespace::OVRManager::get_fixedFoveatedRenderingSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_fixedFoveatedRenderingSupported");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_fixedFoveatedRenderingSupported", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_fixedFoveatedRenderingLevel
GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel GlobalNamespace::OVRManager::get_fixedFoveatedRenderingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_fixedFoveatedRenderingLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_fixedFoveatedRenderingLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_fixedFoveatedRenderingLevel
void GlobalNamespace::OVRManager::set_fixedFoveatedRenderingLevel(GlobalNamespace::OVRManager::FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_fixedFoveatedRenderingLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_fixedFoveatedRenderingLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_tiledMultiResSupported
bool GlobalNamespace::OVRManager::get_tiledMultiResSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_tiledMultiResSupported");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_tiledMultiResSupported", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_tiledMultiResLevel
GlobalNamespace::OVRManager::TiledMultiResLevel GlobalNamespace::OVRManager::get_tiledMultiResLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_tiledMultiResLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_tiledMultiResLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager::TiledMultiResLevel, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.set_tiledMultiResLevel
void GlobalNamespace::OVRManager::set_tiledMultiResLevel(GlobalNamespace::OVRManager::TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_tiledMultiResLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "set_tiledMultiResLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRManager.get_gpuUtilSupported
bool GlobalNamespace::OVRManager::get_gpuUtilSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_gpuUtilSupported");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_gpuUtilSupported", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_gpuUtilLevel
float GlobalNamespace::OVRManager::get_gpuUtilLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_gpuUtilLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_gpuUtilLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.SetColorScaleAndOffset
void GlobalNamespace::OVRManager::SetColorScaleAndOffset(UnityEngine::Vector4 colorScale, UnityEngine::Vector4 colorOffset, bool applyToAllLayers) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("SetColorScaleAndOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "SetColorScaleAndOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(colorScale, colorOffset, applyToAllLayers)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, colorScale, colorOffset, applyToAllLayers);
}
// Autogenerated method: OVRManager.SetOpenVRLocalPose
void GlobalNamespace::OVRManager::SetOpenVRLocalPose(UnityEngine::Vector3 leftPos, UnityEngine::Vector3 rightPos, UnityEngine::Quaternion leftRot, UnityEngine::Quaternion rightRot) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("SetOpenVRLocalPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "SetOpenVRLocalPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(leftPos, rightPos, leftRot, rightRot)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leftPos, rightPos, leftRot, rightRot);
}
// Autogenerated method: OVRManager.GetOpenVRControllerOffset
GlobalNamespace::OVRPose GlobalNamespace::OVRManager::GetOpenVRControllerOffset(UnityEngine::XR::XRNode hand) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("GetOpenVRControllerOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "GetOpenVRControllerOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hand)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hand);
}
// Autogenerated method: OVRManager.get_trackingOriginType
GlobalNamespace::OVRManager::TrackingOrigin GlobalNamespace::OVRManager::get_trackingOriginType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_trackingOriginType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_trackingOriginType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRManager::TrackingOrigin, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_trackingOriginType
void GlobalNamespace::OVRManager::set_trackingOriginType(GlobalNamespace::OVRManager::TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_trackingOriginType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_trackingOriginType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_reorientHMDOnControllerRecenter
bool GlobalNamespace::OVRManager::get_reorientHMDOnControllerRecenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_reorientHMDOnControllerRecenter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_reorientHMDOnControllerRecenter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_reorientHMDOnControllerRecenter
void GlobalNamespace::OVRManager::set_reorientHMDOnControllerRecenter(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_reorientHMDOnControllerRecenter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_reorientHMDOnControllerRecenter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_isSupportedPlatform
bool GlobalNamespace::OVRManager::get_isSupportedPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_isSupportedPlatform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isSupportedPlatform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_isSupportedPlatform
void GlobalNamespace::OVRManager::set_isSupportedPlatform(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_isSupportedPlatform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isSupportedPlatform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_isUserPresent
bool GlobalNamespace::OVRManager::get_isUserPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_isUserPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isUserPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.set_isUserPresent
void GlobalNamespace::OVRManager::set_isUserPresent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("set_isUserPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isUserPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRManager.get_utilitiesVersion
System::Version* GlobalNamespace::OVRManager::get_utilitiesVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_utilitiesVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_utilitiesVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Version*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_pluginVersion
System::Version* GlobalNamespace::OVRManager::get_pluginVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_pluginVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_pluginVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Version*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.get_sdkVersion
System::Version* GlobalNamespace::OVRManager::get_sdkVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("get_sdkVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "get_sdkVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Version*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.MixedRealityEnabledFromCmd
bool GlobalNamespace::OVRManager::MixedRealityEnabledFromCmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("MixedRealityEnabledFromCmd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "MixedRealityEnabledFromCmd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.UseDirectCompositionFromCmd
bool GlobalNamespace::OVRManager::UseDirectCompositionFromCmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("UseDirectCompositionFromCmd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "UseDirectCompositionFromCmd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.UseExternalCompositionFromCmd
bool GlobalNamespace::OVRManager::UseExternalCompositionFromCmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("UseExternalCompositionFromCmd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "UseExternalCompositionFromCmd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.CreateMixedRealityCaptureConfigurationFileFromCmd
bool GlobalNamespace::OVRManager::CreateMixedRealityCaptureConfigurationFileFromCmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("CreateMixedRealityCaptureConfigurationFileFromCmd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "CreateMixedRealityCaptureConfigurationFileFromCmd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.LoadMixedRealityCaptureConfigurationFileFromCmd
bool GlobalNamespace::OVRManager::LoadMixedRealityCaptureConfigurationFileFromCmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("LoadMixedRealityCaptureConfigurationFileFromCmd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "LoadMixedRealityCaptureConfigurationFileFromCmd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.IsUnityAlphaOrBetaVersion
bool GlobalNamespace::OVRManager::IsUnityAlphaOrBetaVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("IsUnityAlphaOrBetaVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "IsUnityAlphaOrBetaVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.InitOVRManager
void GlobalNamespace::OVRManager::InitOVRManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("InitOVRManager");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitOVRManager", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.Awake
void GlobalNamespace::OVRManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.SetCurrentXRDevice
void GlobalNamespace::OVRManager::SetCurrentXRDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("SetCurrentXRDevice");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCurrentXRDevice", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.Initialize
void GlobalNamespace::OVRManager::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.Update
void GlobalNamespace::OVRManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.FindMainCamera
UnityEngine::Camera* GlobalNamespace::OVRManager::FindMainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("FindMainCamera");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FindMainCamera", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OnDisable
void GlobalNamespace::OVRManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.LateUpdate
void GlobalNamespace::OVRManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.FixedUpdate
void GlobalNamespace::OVRManager::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OnDestroy
void GlobalNamespace::OVRManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.OnApplicationPause
void GlobalNamespace::OVRManager::OnApplicationPause(bool pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pause)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pause);
}
// Autogenerated method: OVRManager.OnApplicationFocus
void GlobalNamespace::OVRManager::OnApplicationFocus(bool focus) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("OnApplicationFocus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnApplicationFocus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(focus)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, focus);
}
// Autogenerated method: OVRManager.OnApplicationQuit
void GlobalNamespace::OVRManager::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.ReturnToLauncher
void GlobalNamespace::OVRManager::ReturnToLauncher() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("ReturnToLauncher");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReturnToLauncher", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRManager.PlatformUIConfirmQuit
void GlobalNamespace::OVRManager::PlatformUIConfirmQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("PlatformUIConfirmQuit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "PlatformUIConfirmQuit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager.StaticInitializeMixedRealityCapture
void GlobalNamespace::OVRManager::StaticInitializeMixedRealityCapture(GlobalNamespace::OVRManager* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("StaticInitializeMixedRealityCapture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "StaticInitializeMixedRealityCapture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(instance)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, instance);
}
// Autogenerated method: OVRManager.StaticUpdateMixedRealityCapture
void GlobalNamespace::OVRManager::StaticUpdateMixedRealityCapture(GlobalNamespace::OVRManager* instance, System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* instantiateMixedRealityBackgroundCameraGameObject, System::Func_2<UnityEngine::Camera*, UnityEngine::GameObject*>* instantiateMixedRealityForegroundCameraGameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("StaticUpdateMixedRealityCapture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "StaticUpdateMixedRealityCapture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(instance, instantiateMixedRealityBackgroundCameraGameObject, instantiateMixedRealityForegroundCameraGameObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, instance, instantiateMixedRealityBackgroundCameraGameObject, instantiateMixedRealityForegroundCameraGameObject);
}
// Autogenerated method: OVRManager.StaticShutdownMixedRealityCapture
void GlobalNamespace::OVRManager::StaticShutdownMixedRealityCapture(GlobalNamespace::OVRManager* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext("StaticShutdownMixedRealityCapture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", "StaticShutdownMixedRealityCapture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(instance)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, instance);
}
// Autogenerated method: OVRManager..cctor
void GlobalNamespace::OVRManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRManager").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRManager", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
