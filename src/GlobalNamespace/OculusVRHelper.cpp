// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusVRHelper
#include "GlobalNamespace/OculusVRHelper.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: VRPlatformSDK
#include "GlobalNamespace/VRPlatformSDK.hpp"
// Including type: XRDeviceModel
#include "GlobalNamespace/XRDeviceModel.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusVRHelper.get__isOVRManagerPresent
bool GlobalNamespace::OculusVRHelper::get__isOVRManagerPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("get__isOVRManagerPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get__isOVRManagerPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusVRHelper.Update
void GlobalNamespace::OculusVRHelper::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusVRHelper.FixedUpdate
void GlobalNamespace::OculusVRHelper::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusVRHelper.LateUpdate
void GlobalNamespace::OculusVRHelper::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusVRHelper.add_inputFocusWasCapturedEvent
void GlobalNamespace::OculusVRHelper::add_inputFocusWasCapturedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("add_inputFocusWasCapturedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_inputFocusWasCapturedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusVRHelper.remove_inputFocusWasCapturedEvent
void GlobalNamespace::OculusVRHelper::remove_inputFocusWasCapturedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("remove_inputFocusWasCapturedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_inputFocusWasCapturedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusVRHelper.add_inputFocusWasReleasedEvent
void GlobalNamespace::OculusVRHelper::add_inputFocusWasReleasedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("add_inputFocusWasReleasedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_inputFocusWasReleasedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusVRHelper.remove_inputFocusWasReleasedEvent
void GlobalNamespace::OculusVRHelper::remove_inputFocusWasReleasedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("remove_inputFocusWasReleasedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_inputFocusWasReleasedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusVRHelper.add_hmdUnmountedEvent
void GlobalNamespace::OculusVRHelper::add_hmdUnmountedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("add_hmdUnmountedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_hmdUnmountedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusVRHelper.remove_hmdUnmountedEvent
void GlobalNamespace::OculusVRHelper::remove_hmdUnmountedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("remove_hmdUnmountedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_hmdUnmountedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusVRHelper.add_hmdMountedEvent
void GlobalNamespace::OculusVRHelper::add_hmdMountedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("add_hmdMountedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_hmdMountedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusVRHelper.remove_hmdMountedEvent
void GlobalNamespace::OculusVRHelper::remove_hmdMountedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("remove_hmdMountedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_hmdMountedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusVRHelper.add_joystickWasCenteredThisFrameEvent
void GlobalNamespace::OculusVRHelper::add_joystickWasCenteredThisFrameEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("add_joystickWasCenteredThisFrameEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_joystickWasCenteredThisFrameEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusVRHelper.remove_joystickWasCenteredThisFrameEvent
void GlobalNamespace::OculusVRHelper::remove_joystickWasCenteredThisFrameEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("remove_joystickWasCenteredThisFrameEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_joystickWasCenteredThisFrameEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusVRHelper.add_joystickWasNotCenteredThisFrameEvent
void GlobalNamespace::OculusVRHelper::add_joystickWasNotCenteredThisFrameEvent(System::Action_1<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("add_joystickWasNotCenteredThisFrameEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_joystickWasNotCenteredThisFrameEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusVRHelper.remove_joystickWasNotCenteredThisFrameEvent
void GlobalNamespace::OculusVRHelper::remove_joystickWasNotCenteredThisFrameEvent(System::Action_1<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("remove_joystickWasNotCenteredThisFrameEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_joystickWasNotCenteredThisFrameEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusVRHelper.get_isAlwaysWireless
bool GlobalNamespace::OculusVRHelper::get_isAlwaysWireless() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("get_isAlwaysWireless");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isAlwaysWireless", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusVRHelper.get_vrPlatformSDK
GlobalNamespace::VRPlatformSDK GlobalNamespace::OculusVRHelper::get_vrPlatformSDK() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("get_vrPlatformSDK");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_vrPlatformSDK", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRPlatformSDK, false>(this, ___internal__method);
}
// Autogenerated method: OculusVRHelper.get_currentXRDeviceModel
GlobalNamespace::XRDeviceModel GlobalNamespace::OculusVRHelper::get_currentXRDeviceModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("get_currentXRDeviceModel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_currentXRDeviceModel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::XRDeviceModel, false>(this, ___internal__method);
}
// Autogenerated method: OculusVRHelper.TriggerHapticPulse
void GlobalNamespace::OculusVRHelper::TriggerHapticPulse(UnityEngine::XR::XRNode node, float duration, float strength, float frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("TriggerHapticPulse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TriggerHapticPulse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(node, duration, strength, frequency)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, node, duration, strength, frequency);
}
// Autogenerated method: OculusVRHelper.StopHaptics
void GlobalNamespace::OculusVRHelper::StopHaptics(UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("StopHaptics");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StopHaptics", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(node)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: OculusVRHelper.AdjustControllerTransform
void GlobalNamespace::OculusVRHelper::AdjustControllerTransform(UnityEngine::XR::XRNode node, UnityEngine::Transform* transform, UnityEngine::Vector3 position, UnityEngine::Vector3 rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("AdjustControllerTransform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AdjustControllerTransform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(node, transform, position, rotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, node, transform, position, rotation);
}
// Autogenerated method: OculusVRHelper.GetNodePose
bool GlobalNamespace::OculusVRHelper::GetNodePose(UnityEngine::XR::XRNode nodeType, int idx, UnityEngine::Vector3& pos, UnityEngine::Quaternion& rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OculusVRHelper").WithContext("GetNodePose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNodePose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeType, idx, pos, rot)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, nodeType, idx, pos, rot);
}
