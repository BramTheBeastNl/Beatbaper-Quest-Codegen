// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MovementHistoryRecorder
#include "GlobalNamespace/MovementHistoryRecorder.hpp"
// Including type: AveragingValueRecorder
#include "GlobalNamespace/AveragingValueRecorder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MovementHistoryRecorder.get_averagingValueRecorer
GlobalNamespace::AveragingValueRecorder* GlobalNamespace::MovementHistoryRecorder::get_averagingValueRecorer() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MovementHistoryRecorder").WithContext("get_averagingValueRecorer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_averagingValueRecorer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::AveragingValueRecorder*, false>(this, ___internal__method);
}
// Autogenerated method: MovementHistoryRecorder.AddMovement
void GlobalNamespace::MovementHistoryRecorder::AddMovement(float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MovementHistoryRecorder").WithContext("AddMovement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddMovement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(distance)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, distance);
}
// Autogenerated method: MovementHistoryRecorder.ManualUpdate
void GlobalNamespace::MovementHistoryRecorder::ManualUpdate(float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MovementHistoryRecorder").WithContext("ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(deltaTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, deltaTime);
}
