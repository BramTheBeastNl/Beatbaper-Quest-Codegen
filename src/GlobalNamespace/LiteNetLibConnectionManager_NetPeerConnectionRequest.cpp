// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLibConnectionManager/NetPeerConnectionRequest
#include "GlobalNamespace/LiteNetLibConnectionManager_NetPeerConnectionRequest.hpp"
// Including type: LiteNetLib.ConnectionRequest
#include "LiteNetLib/ConnectionRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnectionRequest.get_userId
::Il2CppString* GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("NetPeerConnectionRequest").WithContext("get_userId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnectionRequest.get_userName
::Il2CppString* GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("NetPeerConnectionRequest").WithContext("get_userName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnectionRequest.get_isConnectionOwner
bool GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("NetPeerConnectionRequest").WithContext("get_isConnectionOwner");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnectionRequest.get_endPoint
System::Net::IPEndPoint* GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("NetPeerConnectionRequest").WithContext("get_endPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_endPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnectionRequest.Accept
LiteNetLib::NetPeer* GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::Accept() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("NetPeerConnectionRequest").WithContext("Accept");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::NetPeer*, false>(this, ___internal__method);
}
