// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_8_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_8_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/BoundaryTestResult
#include "GlobalNamespace/OVRPlugin_BoundaryTestResult.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/BoundaryType
#include "GlobalNamespace/OVRPlugin_BoundaryType.hpp"
// Including type: OVRPlugin/Vector3f
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/BoundaryGeometry
#include "GlobalNamespace/OVRPlugin_BoundaryGeometry.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_8_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_8_0").WithContext("_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_8_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_8_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_8_0").WithContext("_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_8_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetBoundaryConfigured
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetBoundaryConfigured() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_8_0").WithContext("ovrp_GetBoundaryConfigured");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetBoundaryConfigured", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_TestBoundaryNode
GlobalNamespace::OVRPlugin::BoundaryTestResult GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_TestBoundaryNode(GlobalNamespace::OVRPlugin::Node nodeId, GlobalNamespace::OVRPlugin::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_8_0").WithContext("ovrp_TestBoundaryNode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_TestBoundaryNode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeId, boundaryType)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::BoundaryTestResult, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeId, boundaryType);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_TestBoundaryPoint
GlobalNamespace::OVRPlugin::BoundaryTestResult GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_TestBoundaryPoint(GlobalNamespace::OVRPlugin::Vector3f point, GlobalNamespace::OVRPlugin::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_8_0").WithContext("ovrp_TestBoundaryPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_TestBoundaryPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(point, boundaryType)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::BoundaryTestResult, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, point, boundaryType);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetBoundaryGeometry
GlobalNamespace::OVRPlugin::BoundaryGeometry GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetBoundaryGeometry(GlobalNamespace::OVRPlugin::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_8_0").WithContext("ovrp_GetBoundaryGeometry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetBoundaryGeometry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boundaryType)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::BoundaryGeometry, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boundaryType);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetBoundaryDimensions
GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetBoundaryDimensions(GlobalNamespace::OVRPlugin::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_8_0").WithContext("ovrp_GetBoundaryDimensions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetBoundaryDimensions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boundaryType)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boundaryType);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetBoundaryVisible
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetBoundaryVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_8_0").WithContext("ovrp_GetBoundaryVisible");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetBoundaryVisible", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_SetBoundaryVisible
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_SetBoundaryVisible(GlobalNamespace::OVRPlugin::Bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_8_0").WithContext("ovrp_SetBoundaryVisible");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_SetBoundaryVisible", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_Update2
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_Update2(int stateId, int frameIndex, double predictionSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_8_0").WithContext("ovrp_Update2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_Update2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateId, frameIndex, predictionSeconds)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stateId, frameIndex, predictionSeconds);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetNodePose2
GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetNodePose2(int stateId, GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_8_0").WithContext("ovrp_GetNodePose2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetNodePose2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateId, nodeId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stateId, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetNodeVelocity2
GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetNodeVelocity2(int stateId, GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_8_0").WithContext("ovrp_GetNodeVelocity2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetNodeVelocity2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateId, nodeId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stateId, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetNodeAcceleration2
GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetNodeAcceleration2(int stateId, GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_8_0").WithContext("ovrp_GetNodeAcceleration2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetNodeAcceleration2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateId, nodeId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stateId, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_8_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_8_0").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
