// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ConnectedPlayerManager/ConnectedPlayer
#include "GlobalNamespace/ConnectedPlayerManager_ConnectedPlayer.hpp"
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: RollingAverage
#include "GlobalNamespace/RollingAverage.hpp"
// Including type: ConnectedPlayerManager/PlayerConnectedPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerConnectedPacket.hpp"
// Including type: ConnectedPlayerManager/PlayerStatePacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerStatePacket.hpp"
// Including type: ConnectedPlayerManager/PlayerSortOrderPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerSortOrderPacket.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kFixedOffset
float GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::_get_kFixedOffset() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ConnectedPlayerManager/ConnectedPlayer", "kFixedOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kFixedOffset
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::_set_kFixedOffset(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager/ConnectedPlayer", "kFixedOffset", value));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_connection
GlobalNamespace::IConnection* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_connection() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::IConnection*>(this, "get_connection"));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_connectionId
uint8_t GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_connectionId() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint8_t>(this, "get_connectionId"));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_remoteConnectionId
uint8_t GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_remoteConnectionId() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint8_t>(this, "get_remoteConnectionId"));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_isDirectConnection
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_isDirectConnection() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isDirectConnection"));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer..ctor
GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::New_ctor(GlobalNamespace::ConnectedPlayerManager* manager, uint8_t connectionId, uint8_t remoteConnectionId, GlobalNamespace::IConnection* connection, GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* parent, ::Il2CppString* userId, ::Il2CppString* userName, bool isConnectionOwner, bool isMe) {
  return THROW_UNLESS(il2cpp_utils::New<ConnectedPlayerManager::ConnectedPlayer*>(manager, connectionId, remoteConnectionId, connection, parent, userId, userName, isConnectionOwner, isMe));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.CreateLocalPlayer
GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::CreateLocalPlayer(GlobalNamespace::ConnectedPlayerManager* manager, ::Il2CppString* userId, ::Il2CppString* userName, bool isConnectionOwner) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*>("", "ConnectedPlayerManager/ConnectedPlayer", "CreateLocalPlayer", manager, userId, userName, isConnectionOwner));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.CreateDirectlyConnectedPlayer
GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::CreateDirectlyConnectedPlayer(GlobalNamespace::ConnectedPlayerManager* manager, uint8_t connectionId, GlobalNamespace::IConnection* connection) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*>("", "ConnectedPlayerManager/ConnectedPlayer", "CreateDirectlyConnectedPlayer", manager, connectionId, connection));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.CreateRemoteConnectedPlayer
GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::CreateRemoteConnectedPlayer(GlobalNamespace::ConnectedPlayerManager* manager, uint8_t connectionId, GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket* packet, GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* parent) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*>("", "ConnectedPlayerManager/ConnectedPlayer", "CreateRemoteConnectedPlayer", manager, connectionId, packet, parent));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.GetPlayerConnectedPacket
GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::GetPlayerConnectedPacket() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket*>(this, "GetPlayerConnectedPacket"));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.GetPlayerStatePacket
GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::GetPlayerStatePacket() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket*>(this, "GetPlayerStatePacket"));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.GetPlayerSortOrderPacket
GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::GetPlayerSortOrderPacket() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket*>(this, "GetPlayerSortOrderPacket"));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.Disconnect
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::Disconnect() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Disconnect"));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.UpdateLatency
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::UpdateLatency(float latency) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdateLatency", latency));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.UpdateSortIndex
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::UpdateSortIndex(int index) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "UpdateSortIndex", index));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.SetKicked
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::SetKicked() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetKicked"));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.UpdateState
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::UpdateState(GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket* packet) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdateState", packet));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.SetPlayerState
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::SetPlayerState(GlobalNamespace::BloomFilter bloomFilter) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetPlayerState", bloomFilter));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.SetPlayerAvatar
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::SetPlayerAvatar(GlobalNamespace::MultiplayerAvatarData avatarData) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetPlayerAvatar", avatarData));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_isConnected
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_isConnected() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isConnected"));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_isConnectionOwner
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_isConnectionOwner() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isConnectionOwner"));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_isKicked
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_isKicked() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isKicked"));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_sortIndex
int GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_sortIndex() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_sortIndex"));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_userId
::Il2CppString* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_userId() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_userId"));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_userName
::Il2CppString* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_userName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_userName"));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_isMe
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_isMe() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isMe"));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_currentLatency
float GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_currentLatency() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_currentLatency"));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_offsetSyncTime
float GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_offsetSyncTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_offsetSyncTime"));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_multiplayerAvatarData
GlobalNamespace::MultiplayerAvatarData GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_multiplayerAvatarData() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::MultiplayerAvatarData>(this, "get_multiplayerAvatarData"));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.HasState
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::HasState(::Il2CppString* state) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "HasState", state));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.ToString
::Il2CppString* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::ToString() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "ToString"));
}
