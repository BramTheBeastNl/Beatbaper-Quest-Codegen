// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ConnectedPlayerManager/ConnectedPlayer
#include "GlobalNamespace/ConnectedPlayerManager_ConnectedPlayer.hpp"
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: RollingAverage
#include "GlobalNamespace/RollingAverage.hpp"
// Including type: ConnectedPlayerManager/PlayerConnectedPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerConnectedPacket.hpp"
// Including type: ConnectedPlayerManager/PlayerStatePacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerStatePacket.hpp"
// Including type: ConnectedPlayerManager/PlayerSortOrderPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerSortOrderPacket.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kFixedOffset
float GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::_get_kFixedOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("_get_kFixedOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ConnectedPlayerManager/ConnectedPlayer", "kFixedOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kFixedOffset
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::_set_kFixedOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("_set_kFixedOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager/ConnectedPlayer", "kFixedOffset", value));
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_connection
GlobalNamespace::IConnection* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_connection() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("get_connection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_connection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnection*, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_connectionId
uint8_t GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_connectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("get_connectionId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_connectionId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_remoteConnectionId
uint8_t GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_remoteConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("get_remoteConnectionId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_remoteConnectionId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_isDirectConnection
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_isDirectConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("get_isDirectConnection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isDirectConnection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.CreateLocalPlayer
GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::CreateLocalPlayer(GlobalNamespace::ConnectedPlayerManager* manager, ::Il2CppString* userId, ::Il2CppString* userName, bool isConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("CreateLocalPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "ConnectedPlayerManager/ConnectedPlayer", "CreateLocalPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(manager, userId, userName, isConnectionOwner)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, manager, userId, userName, isConnectionOwner);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.CreateDirectlyConnectedPlayer
GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::CreateDirectlyConnectedPlayer(GlobalNamespace::ConnectedPlayerManager* manager, uint8_t connectionId, GlobalNamespace::IConnection* connection) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("CreateDirectlyConnectedPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "ConnectedPlayerManager/ConnectedPlayer", "CreateDirectlyConnectedPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(manager, connectionId, connection)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, manager, connectionId, connection);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.CreateRemoteConnectedPlayer
GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::CreateRemoteConnectedPlayer(GlobalNamespace::ConnectedPlayerManager* manager, uint8_t connectionId, GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket* packet, GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("CreateRemoteConnectedPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "ConnectedPlayerManager/ConnectedPlayer", "CreateRemoteConnectedPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(manager, connectionId, packet, parent)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, manager, connectionId, packet, parent);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.GetPlayerConnectedPacket
GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::GetPlayerConnectedPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("GetPlayerConnectedPacket");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayerConnectedPacket", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket*, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.GetPlayerStatePacket
GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::GetPlayerStatePacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("GetPlayerStatePacket");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayerStatePacket", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket*, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.GetPlayerSortOrderPacket
GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::GetPlayerSortOrderPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("GetPlayerSortOrderPacket");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayerSortOrderPacket", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket*, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.Disconnect
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::Disconnect(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("Disconnect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.UpdateLatency
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::UpdateLatency(float latency) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("UpdateLatency");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateLatency", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(latency)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, latency);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.UpdateSortIndex
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::UpdateSortIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("UpdateSortIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateSortIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.SetKicked
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::SetKicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("SetKicked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetKicked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.UpdateState
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::UpdateState(GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("UpdateState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.SetPlayerState
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::SetPlayerState(GlobalNamespace::BloomFilter bloomFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("SetPlayerState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPlayerState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bloomFilter)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bloomFilter);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.SetPlayerAvatar
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::SetPlayerAvatar(GlobalNamespace::MultiplayerAvatarData avatarData) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("SetPlayerAvatar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPlayerAvatar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(avatarData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, avatarData);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_isConnected
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("get_isConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_isConnectionOwner
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("get_isConnectionOwner");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_isKicked
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_isKicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("get_isKicked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isKicked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_disconnectedReason
GlobalNamespace::DisconnectedReason GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_disconnectedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("get_disconnectedReason");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_disconnectedReason", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::DisconnectedReason, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_sortIndex
int GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_sortIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("get_sortIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_sortIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_userId
::Il2CppString* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("get_userId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_userName
::Il2CppString* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("get_userName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_isMe
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("get_isMe");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isMe", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_currentLatency
float GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_currentLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("get_currentLatency");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_currentLatency", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_offsetSyncTime
float GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_offsetSyncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("get_offsetSyncTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_offsetSyncTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_multiplayerAvatarData
GlobalNamespace::MultiplayerAvatarData GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_multiplayerAvatarData() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("get_multiplayerAvatarData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_multiplayerAvatarData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerAvatarData, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.HasState
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::HasState(::Il2CppString* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("HasState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HasState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, state);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.ToString
::Il2CppString* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ConnectedPlayer").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
