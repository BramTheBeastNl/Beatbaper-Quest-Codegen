// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: X509CertificateUtility/PasswordFinder
#include "GlobalNamespace/X509CertificateUtility_PasswordFinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: X509CertificateUtility/PasswordFinder..ctor
GlobalNamespace::X509CertificateUtility::PasswordFinder* GlobalNamespace::X509CertificateUtility::PasswordFinder::New_ctor(::Array<uint8_t>* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("PasswordFinder").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<X509CertificateUtility::PasswordFinder*>(password));
}
// Autogenerated method: X509CertificateUtility/PasswordFinder..ctor
GlobalNamespace::X509CertificateUtility::PasswordFinder* GlobalNamespace::X509CertificateUtility::PasswordFinder::New_ctor(::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("PasswordFinder").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<X509CertificateUtility::PasswordFinder*>(password));
}
// Autogenerated method: X509CertificateUtility/PasswordFinder.GetPassword
::Array<::Il2CppChar>* GlobalNamespace::X509CertificateUtility::PasswordFinder::GetPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("PasswordFinder").WithContext("GetPassword");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Array<::Il2CppChar>*>(), "GetPassword", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(this, ___internal__method);
}
