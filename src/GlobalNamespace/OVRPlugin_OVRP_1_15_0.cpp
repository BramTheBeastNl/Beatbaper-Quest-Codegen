// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/OVRP_1_15_0
#include "GlobalNamespace\OVRPlugin_OVRP_1_15_0.hpp"
// Including type: System.Version
#include "System\Version.hpp"
// Including type: System.IntPtr
#include "System\IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace\OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace\OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/CameraIntrinsics
#include "GlobalNamespace\OVRPlugin_CameraIntrinsics.hpp"
// Including type: OVRPlugin/CameraExtrinsics
#include "GlobalNamespace\OVRPlugin_CameraExtrinsics.hpp"
// Including type: OVRPlugin/OverlayShape
#include "GlobalNamespace\OVRPlugin_OverlayShape.hpp"
// Including type: OVRPlugin/LayerLayout
#include "GlobalNamespace\OVRPlugin_LayerLayout.hpp"
// Including type: OVRPlugin/Sizei
#include "GlobalNamespace\OVRPlugin_Sizei.hpp"
// Including type: OVRPlugin/EyeTextureFormat
#include "GlobalNamespace\OVRPlugin_EyeTextureFormat.hpp"
// Including type: OVRPlugin/LayerDesc
#include "GlobalNamespace\OVRPlugin_LayerDesc.hpp"
// Including type: OVRPlugin/Eye
#include "GlobalNamespace\OVRPlugin_Eye.hpp"
// Including type: OVRPlugin/Vector3f
#include "GlobalNamespace\OVRPlugin.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace\OVRPlugin_Node.hpp"
// Including type: OVRPlugin/Frustumf2
#include "GlobalNamespace\OVRPlugin_Frustumf2.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_15_0::_get_version() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_15_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_15_0::_set_version(System::Version* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_15_0", "version", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 OVRP_EXTERNAL_CAMERA_NAME_SIZE
int GlobalNamespace::OVRPlugin::OVRP_1_15_0::_get_OVRP_EXTERNAL_CAMERA_NAME_SIZE() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin/OVRP_1_15_0", "OVRP_EXTERNAL_CAMERA_NAME_SIZE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OVRP_EXTERNAL_CAMERA_NAME_SIZE
void GlobalNamespace::OVRPlugin::OVRP_1_15_0::_set_OVRP_EXTERNAL_CAMERA_NAME_SIZE(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_15_0", "OVRP_EXTERNAL_CAMERA_NAME_SIZE", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_InitializeMixedReality
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_InitializeMixedReality() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/OVRP_1_15_0", "ovrp_InitializeMixedReality"));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_ShutdownMixedReality
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_ShutdownMixedReality() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/OVRP_1_15_0", "ovrp_ShutdownMixedReality"));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetMixedRealityInitialized
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetMixedRealityInitialized() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPlugin::Bool>("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetMixedRealityInitialized"));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_UpdateExternalCamera
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_UpdateExternalCamera() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/OVRP_1_15_0", "ovrp_UpdateExternalCamera"));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetExternalCameraCount
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraCount(int& cameraCount) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetExternalCameraCount", cameraCount));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetExternalCameraName
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraName(int cameraId, ::Array<::Il2CppChar>* cameraName) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetExternalCameraName", cameraId, cameraName));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetExternalCameraIntrinsics
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraIntrinsics(int cameraId, GlobalNamespace::OVRPlugin::CameraIntrinsics& cameraIntrinsics) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetExternalCameraIntrinsics", cameraId, cameraIntrinsics));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetExternalCameraExtrinsics
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraExtrinsics(int cameraId, GlobalNamespace::OVRPlugin::CameraExtrinsics& cameraExtrinsics) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetExternalCameraExtrinsics", cameraId, cameraExtrinsics));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_CalculateLayerDesc
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_CalculateLayerDesc(GlobalNamespace::OVRPlugin::OverlayShape shape, GlobalNamespace::OVRPlugin::LayerLayout layout, GlobalNamespace::OVRPlugin::Sizei& textureSize, int mipLevels, int sampleCount, GlobalNamespace::OVRPlugin::EyeTextureFormat format, int layerFlags, GlobalNamespace::OVRPlugin::LayerDesc& layerDesc) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/OVRP_1_15_0", "ovrp_CalculateLayerDesc", shape, layout, textureSize, mipLevels, sampleCount, format, layerFlags, layerDesc));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_EnqueueSetupLayer
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_EnqueueSetupLayer(GlobalNamespace::OVRPlugin::LayerDesc& desc, System::IntPtr layerId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/OVRP_1_15_0", "ovrp_EnqueueSetupLayer", desc, layerId));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_EnqueueDestroyLayer
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_EnqueueDestroyLayer(System::IntPtr layerId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/OVRP_1_15_0", "ovrp_EnqueueDestroyLayer", layerId));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetLayerTextureStageCount
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetLayerTextureStageCount(int layerId, int& layerTextureStageCount) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetLayerTextureStageCount", layerId, layerTextureStageCount));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetLayerTexturePtr
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetLayerTexturePtr(int layerId, int stage, GlobalNamespace::OVRPlugin::Eye eyeId, System::IntPtr& textureHandle) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetLayerTexturePtr", layerId, stage, eyeId, textureHandle));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_EnqueueSubmitLayer
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_EnqueueSubmitLayer(uint flags, System::IntPtr textureLeft, System::IntPtr textureRight, int layerId, int frameIndex, GlobalNamespace::OVRPlugin::Posef& pose, GlobalNamespace::OVRPlugin::Vector3f& scale, int layerIndex) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/OVRP_1_15_0", "ovrp_EnqueueSubmitLayer", flags, textureLeft, textureRight, layerId, frameIndex, pose, scale, layerIndex));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetNodeFrustum2
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetNodeFrustum2(GlobalNamespace::OVRPlugin::Node nodeId, GlobalNamespace::OVRPlugin::Frustumf2& nodeFrustum) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPlugin::Result>("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetNodeFrustum2", nodeId, nodeFrustum));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetEyeTextureArrayEnabled
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetEyeTextureArrayEnabled() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPlugin::Bool>("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetEyeTextureArrayEnabled"));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_15_0::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRPlugin/OVRP_1_15_0", ".cctor"));
}
