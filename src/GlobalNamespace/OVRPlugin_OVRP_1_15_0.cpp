// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/OVRP_1_15_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_15_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/CameraIntrinsics
#include "GlobalNamespace/OVRPlugin_CameraIntrinsics.hpp"
// Including type: OVRPlugin/CameraExtrinsics
#include "GlobalNamespace/OVRPlugin_CameraExtrinsics.hpp"
// Including type: OVRPlugin/OverlayShape
#include "GlobalNamespace/OVRPlugin_OverlayShape.hpp"
// Including type: OVRPlugin/LayerLayout
#include "GlobalNamespace/OVRPlugin_LayerLayout.hpp"
// Including type: OVRPlugin/Sizei
#include "GlobalNamespace/OVRPlugin_Sizei.hpp"
// Including type: OVRPlugin/EyeTextureFormat
#include "GlobalNamespace/OVRPlugin_EyeTextureFormat.hpp"
// Including type: OVRPlugin/LayerDesc
#include "GlobalNamespace/OVRPlugin_LayerDesc.hpp"
// Including type: OVRPlugin/Eye
#include "GlobalNamespace/OVRPlugin_Eye.hpp"
// Including type: OVRPlugin/Vector3f
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/Frustumf2
#include "GlobalNamespace/OVRPlugin_Frustumf2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_15_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext("_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_15_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_15_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext("_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_15_0", "version", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 OVRP_EXTERNAL_CAMERA_NAME_SIZE
int GlobalNamespace::OVRPlugin::OVRP_1_15_0::_get_OVRP_EXTERNAL_CAMERA_NAME_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext("_get_OVRP_EXTERNAL_CAMERA_NAME_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin/OVRP_1_15_0", "OVRP_EXTERNAL_CAMERA_NAME_SIZE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OVRP_EXTERNAL_CAMERA_NAME_SIZE
void GlobalNamespace::OVRPlugin::OVRP_1_15_0::_set_OVRP_EXTERNAL_CAMERA_NAME_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext("_set_OVRP_EXTERNAL_CAMERA_NAME_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_15_0", "OVRP_EXTERNAL_CAMERA_NAME_SIZE", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_InitializeMixedReality
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_InitializeMixedReality() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext("ovrp_InitializeMixedReality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_InitializeMixedReality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_ShutdownMixedReality
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_ShutdownMixedReality() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext("ovrp_ShutdownMixedReality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_ShutdownMixedReality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetMixedRealityInitialized
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetMixedRealityInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext("ovrp_GetMixedRealityInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetMixedRealityInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_UpdateExternalCamera
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_UpdateExternalCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext("ovrp_UpdateExternalCamera");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_UpdateExternalCamera", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetExternalCameraCount
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraCount(int& cameraCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext("ovrp_GetExternalCameraCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetExternalCameraCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraCount)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraCount);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetExternalCameraName
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraName(int cameraId, ::Array<::Il2CppChar>* cameraName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext("ovrp_GetExternalCameraName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetExternalCameraName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraId, cameraName)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraId, cameraName);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetExternalCameraIntrinsics
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraIntrinsics(int cameraId, GlobalNamespace::OVRPlugin::CameraIntrinsics& cameraIntrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext("ovrp_GetExternalCameraIntrinsics");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetExternalCameraIntrinsics", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraId, cameraIntrinsics)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraId, cameraIntrinsics);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetExternalCameraExtrinsics
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraExtrinsics(int cameraId, GlobalNamespace::OVRPlugin::CameraExtrinsics& cameraExtrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext("ovrp_GetExternalCameraExtrinsics");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetExternalCameraExtrinsics", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraId, cameraExtrinsics)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraId, cameraExtrinsics);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_CalculateLayerDesc
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_CalculateLayerDesc(GlobalNamespace::OVRPlugin::OverlayShape shape, GlobalNamespace::OVRPlugin::LayerLayout layout, GlobalNamespace::OVRPlugin::Sizei& textureSize, int mipLevels, int sampleCount, GlobalNamespace::OVRPlugin::EyeTextureFormat format, int layerFlags, GlobalNamespace::OVRPlugin::LayerDesc& layerDesc) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext("ovrp_CalculateLayerDesc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_CalculateLayerDesc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(shape, layout, textureSize, mipLevels, sampleCount, format, layerFlags, layerDesc)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, shape, layout, textureSize, mipLevels, sampleCount, format, layerFlags, layerDesc);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_EnqueueSetupLayer
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_EnqueueSetupLayer(GlobalNamespace::OVRPlugin::LayerDesc& desc, System::IntPtr layerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext("ovrp_EnqueueSetupLayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_EnqueueSetupLayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(desc, layerId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, desc, layerId);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_EnqueueDestroyLayer
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_EnqueueDestroyLayer(System::IntPtr layerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext("ovrp_EnqueueDestroyLayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_EnqueueDestroyLayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(layerId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, layerId);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetLayerTextureStageCount
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetLayerTextureStageCount(int layerId, int& layerTextureStageCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext("ovrp_GetLayerTextureStageCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetLayerTextureStageCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(layerId, layerTextureStageCount)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, layerId, layerTextureStageCount);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetLayerTexturePtr
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetLayerTexturePtr(int layerId, int stage, GlobalNamespace::OVRPlugin::Eye eyeId, System::IntPtr& textureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext("ovrp_GetLayerTexturePtr");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetLayerTexturePtr", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(layerId, stage, eyeId, textureHandle)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, layerId, stage, eyeId, textureHandle);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_EnqueueSubmitLayer
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_EnqueueSubmitLayer(uint flags, System::IntPtr textureLeft, System::IntPtr textureRight, int layerId, int frameIndex, GlobalNamespace::OVRPlugin::Posef& pose, GlobalNamespace::OVRPlugin::Vector3f& scale, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext("ovrp_EnqueueSubmitLayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_EnqueueSubmitLayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags, textureLeft, textureRight, layerId, frameIndex, pose, scale, layerIndex)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, flags, textureLeft, textureRight, layerId, frameIndex, pose, scale, layerIndex);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetNodeFrustum2
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetNodeFrustum2(GlobalNamespace::OVRPlugin::Node nodeId, GlobalNamespace::OVRPlugin::Frustumf2& nodeFrustum) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext("ovrp_GetNodeFrustum2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetNodeFrustum2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeId, nodeFrustum)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeId, nodeFrustum);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetEyeTextureArrayEnabled
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetEyeTextureArrayEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext("ovrp_GetEyeTextureArrayEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetEyeTextureArrayEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_15_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRP_1_15_0").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
