// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerModeSelectionFlowCoordinator
#include "GlobalNamespace/MultiplayerModeSelectionFlowCoordinator.hpp"
// Including type: MultiplayerModeSelectionFlowCoordinator/<TryShowModeSelection>d__42
#include "GlobalNamespace/MultiplayerModeSelectionFlowCoordinator_-TryShowModeSelection-d__42.hpp"
// Including type: GameServerBrowserFlowCoordinator
#include "GlobalNamespace/GameServerBrowserFlowCoordinator.hpp"
// Including type: HostGameServerLobbyFlowCoordinator
#include "GlobalNamespace/HostGameServerLobbyFlowCoordinator.hpp"
// Including type: ClientGameServerLobbyFlowCoordinator
#include "GlobalNamespace/ClientGameServerLobbyFlowCoordinator.hpp"
// Including type: QuickPlayLobbyFlowCoordinator
#include "GlobalNamespace/QuickPlayLobbyFlowCoordinator.hpp"
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
// Including type: CreateServerViewController
#include "GlobalNamespace/CreateServerViewController.hpp"
// Including type: JoinQuickPlayViewController
#include "GlobalNamespace/JoinQuickPlayViewController.hpp"
// Including type: ServerCodeEntryViewController
#include "GlobalNamespace/ServerCodeEntryViewController.hpp"
// Including type: SimpleDialogPromptViewController
#include "GlobalNamespace/SimpleDialogPromptViewController.hpp"
// Including type: JoiningLobbyViewController
#include "GlobalNamespace/JoiningLobbyViewController.hpp"
// Including type: IUnifiedNetworkPlayerModel
#include "GlobalNamespace/IUnifiedNetworkPlayerModel.hpp"
// Including type: AvatarDataModel
#include "GlobalNamespace/AvatarDataModel.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
// Including type: LobbyDataModelsManager
#include "GlobalNamespace/LobbyDataModelsManager.hpp"
// Including type: MultiplayerLobbyConnectionController
#include "GlobalNamespace/MultiplayerLobbyConnectionController.hpp"
// Including type: IMasterServerAvailabilityModel
#include "GlobalNamespace/IMasterServerAvailabilityModel.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
// Including type: MultiplayerUnavailableReason
#include "GlobalNamespace/MultiplayerUnavailableReason.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: MultiplayerModeSelectionViewController/MenuButton
#include "GlobalNamespace/MultiplayerModeSelectionViewController.hpp"
// Including type: UnifiedNetworkPlayerModel/CreatePartyConfig
#include "GlobalNamespace/UnifiedNetworkPlayerModel_CreatePartyConfig.hpp"
// Including type: HMUI.ViewController/AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.add_didFinishEvent
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::add_didFinishEvent(System::Action_1<GlobalNamespace::MultiplayerModeSelectionFlowCoordinator*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_didFinishEvent", value));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.remove_didFinishEvent
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::remove_didFinishEvent(System::Action_1<GlobalNamespace::MultiplayerModeSelectionFlowCoordinator*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_didFinishEvent", value));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleMultiplayerLobbyConnectionControllerConnectionSuccessActivateModel
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleMultiplayerLobbyConnectionControllerConnectionSuccessActivateModel() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMultiplayerLobbyConnectionControllerConnectionSuccessActivateModel"));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleMultiplayerLobbyConnectionControllerConnectionSuccess
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleMultiplayerLobbyConnectionControllerConnectionSuccess() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMultiplayerLobbyConnectionControllerConnectionSuccess"));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleMultiplayerLobbyConnectionControllerConnectionFailed
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleMultiplayerLobbyConnectionControllerConnectionFailed(GlobalNamespace::ConnectionFailedReason reason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMultiplayerLobbyConnectionControllerConnectionFailed", reason));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleMultiplayerLobbyControllerDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleMultiplayerLobbyControllerDidFinish(GlobalNamespace::MultiplayerModeSelectionViewController* viewController, GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton menuButton) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleMultiplayerLobbyControllerDidFinish", viewController, menuButton));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleGameServerBrowserFlowCoordinatorDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleGameServerBrowserFlowCoordinatorDidFinish(GlobalNamespace::GameServerBrowserFlowCoordinator* flowCoordinator) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleGameServerBrowserFlowCoordinatorDidFinish", flowCoordinator));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleJoiningLobbyViewControllerDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleJoiningLobbyViewControllerDidFinish() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleJoiningLobbyViewControllerDidFinish"));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleJoinQuickPlayViewControllerDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleJoinQuickPlayViewControllerDidFinish(bool success) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleJoinQuickPlayViewControllerDidFinish", success));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleServerCodeEntryViewControllerDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleServerCodeEntryViewControllerDidFinish(bool success, ::Il2CppString* code) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleServerCodeEntryViewControllerDidFinish", success, code));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleCreateServerViewControllerDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleCreateServerViewControllerDidFinish(bool success, GlobalNamespace::UnifiedNetworkPlayerModel::CreatePartyConfig* createPartyConfig) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleCreateServerViewControllerDidFinish", success, createPartyConfig));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleClientGameServerLobbyFlowCoordinatorDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleClientGameServerLobbyFlowCoordinatorDidFinish(GlobalNamespace::ClientGameServerLobbyFlowCoordinator* obj) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleClientGameServerLobbyFlowCoordinatorDidFinish", obj));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleQuickPlayLobbyFlowCoordinatorDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleQuickPlayLobbyFlowCoordinatorDidFinish() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleQuickPlayLobbyFlowCoordinatorDidFinish"));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleHostGameServerLobbyFlowCoordinatorDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleHostGameServerLobbyFlowCoordinatorDidFinish(GlobalNamespace::HostGameServerLobbyFlowCoordinator* flowCoordinator) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleHostGameServerLobbyFlowCoordinatorDidFinish", flowCoordinator));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleConnectedPlayerManagerCreated
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleConnectedPlayerManagerCreated(GlobalNamespace::INetworkPlayerModel* networkPlayerModel) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleConnectedPlayerManagerCreated", networkPlayerModel));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.TryShowModeSelection
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::TryShowModeSelection(bool shouldProvideInitialViewControllers) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "TryShowModeSelection", shouldProvideInitialViewControllers));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.ResolveAndPresentNextFlowCoordinator
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::ResolveAndPresentNextFlowCoordinator() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ResolveAndPresentNextFlowCoordinator"));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.PresentConnectionErrorDialog
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::PresentConnectionErrorDialog(GlobalNamespace::ConnectionFailedReason reason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PresentConnectionErrorDialog", reason));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.PresentMasterServerUnavailableErrorDialog
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::PresentMasterServerUnavailableErrorDialog(GlobalNamespace::MultiplayerUnavailableReason reason, System::Nullable_1<int64_t> maintenanceWindowEndTime, ::Il2CppString* remoteLocalizedMessage) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PresentMasterServerUnavailableErrorDialog", reason, maintenanceWindowEndTime, remoteLocalizedMessage));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.<ResolveAndPresentNextFlowCoordinator>b__43_0
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$b__43_0() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<ResolveAndPresentNextFlowCoordinator>b__43_0"));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.<PresentConnectionErrorDialog>b__44_0
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$PresentConnectionErrorDialog$b__44_0(int btnId) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<PresentConnectionErrorDialog>b__44_0", btnId));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.<PresentConnectionErrorDialog>b__44_1
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$PresentConnectionErrorDialog$b__44_1(int btnId) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<PresentConnectionErrorDialog>b__44_1", btnId));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.<PresentMasterServerUnavailableErrorDialog>b__45_0
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$PresentMasterServerUnavailableErrorDialog$b__45_0(int btnId) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<PresentMasterServerUnavailableErrorDialog>b__45_0", btnId));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.DidActivate
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DidActivate", firstActivation, addedToHierarchy, screenSystemEnabling));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.DidDeactivate
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DidDeactivate", removedFromHierarchy, screenSystemDisabling));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.BackButtonWasPressed
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::BackButtonWasPressed(HMUI::ViewController* topViewController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "BackButtonWasPressed", topViewController));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.TopViewControllerWillChange
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::TopViewControllerWillChange(HMUI::ViewController* oldViewController, HMUI::ViewController* newViewController, HMUI::ViewController::AnimationType animationType) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "TopViewControllerWillChange", oldViewController, newViewController, animationType));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.TransitionDidStart
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::TransitionDidStart() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "TransitionDidStart"));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.TransitionDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::TransitionDidFinish() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "TransitionDidFinish"));
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator..ctor
GlobalNamespace::MultiplayerModeSelectionFlowCoordinator* GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<MultiplayerModeSelectionFlowCoordinator*>());
}
