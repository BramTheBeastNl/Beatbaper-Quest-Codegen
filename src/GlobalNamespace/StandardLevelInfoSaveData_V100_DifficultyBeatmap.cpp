// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData_V100/DifficultyBeatmap
#include "GlobalNamespace\StandardLevelInfoSaveData_V100_DifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_difficulty
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_difficulty() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_difficulty"));
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_difficultyRank
int GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_difficultyRank() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_difficultyRank"));
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_beatmapFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_beatmapFilename() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_beatmapFilename"));
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_noteJumpMovementSpeed
float GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_noteJumpMovementSpeed() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_noteJumpMovementSpeed"));
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_noteJumpStartBeatOffset
int GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_noteJumpStartBeatOffset() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_noteJumpStartBeatOffset"));
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap..ctor
GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap* GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::New_ctor(::Il2CppString* difficultyName, int difficultyRank, ::Il2CppString* beatmapFilename, float noteJumpMovementSpeed, int noteJumpStartBeatOffset) {
  return (StandardLevelInfoSaveData_V100::DifficultyBeatmap*)THROW_UNLESS(il2cpp_utils::New("", "StandardLevelInfoSaveData_V100/DifficultyBeatmap", difficultyName, difficultyRank, beatmapFilename, noteJumpMovementSpeed, noteJumpStartBeatOffset));
}
