// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerConnectedPlayerNoteEventManager
#include "GlobalNamespace/MultiplayerConnectedPlayerNoteEventManager.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: MultiplayerConnectedPlayerSongTimeSyncController
#include "GlobalNamespace/MultiplayerConnectedPlayerSongTimeSyncController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NoteCutInfoNetSerializable
#include "GlobalNamespace/NoteCutInfoNetSerializable.hpp"
// Including type: NoteMissInfoNetSerializable
#include "GlobalNamespace/NoteMissInfoNetSerializable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerConnectedPlayerNoteEventManager.Start
void GlobalNamespace::MultiplayerConnectedPlayerNoteEventManager::Start() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Start"));
}
// Autogenerated method: MultiplayerConnectedPlayerNoteEventManager.Update
void GlobalNamespace::MultiplayerConnectedPlayerNoteEventManager::Update() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Update"));
}
// Autogenerated method: MultiplayerConnectedPlayerNoteEventManager.HandleNoteWasCut
void GlobalNamespace::MultiplayerConnectedPlayerNoteEventManager::HandleNoteWasCut(::Il2CppString* userId, float syncTime, float songTime, GlobalNamespace::NoteCutInfoNetSerializable* noteCutInfo) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleNoteWasCut", userId, syncTime, songTime, noteCutInfo));
}
// Autogenerated method: MultiplayerConnectedPlayerNoteEventManager.HandleNoteWasMissed
void GlobalNamespace::MultiplayerConnectedPlayerNoteEventManager::HandleNoteWasMissed(::Il2CppString* userId, float syncTime, float songTime, GlobalNamespace::NoteMissInfoNetSerializable* noteMissInfo) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleNoteWasMissed", userId, syncTime, songTime, noteMissInfo));
}
// Autogenerated method: MultiplayerConnectedPlayerNoteEventManager.add_connectedPlayerNoteWasCutEvent
void GlobalNamespace::MultiplayerConnectedPlayerNoteEventManager::add_connectedPlayerNoteWasCutEvent(System::Action_1<GlobalNamespace::NoteCutInfoNetSerializable*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_connectedPlayerNoteWasCutEvent", value));
}
// Autogenerated method: MultiplayerConnectedPlayerNoteEventManager.remove_connectedPlayerNoteWasCutEvent
void GlobalNamespace::MultiplayerConnectedPlayerNoteEventManager::remove_connectedPlayerNoteWasCutEvent(System::Action_1<GlobalNamespace::NoteCutInfoNetSerializable*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_connectedPlayerNoteWasCutEvent", value));
}
// Autogenerated method: MultiplayerConnectedPlayerNoteEventManager.add_connectedPlayerNoteWasMissedEvent
void GlobalNamespace::MultiplayerConnectedPlayerNoteEventManager::add_connectedPlayerNoteWasMissedEvent(System::Action_1<GlobalNamespace::NoteMissInfoNetSerializable*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_connectedPlayerNoteWasMissedEvent", value));
}
// Autogenerated method: MultiplayerConnectedPlayerNoteEventManager.remove_connectedPlayerNoteWasMissedEvent
void GlobalNamespace::MultiplayerConnectedPlayerNoteEventManager::remove_connectedPlayerNoteWasMissedEvent(System::Action_1<GlobalNamespace::NoteMissInfoNetSerializable*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_connectedPlayerNoteWasMissedEvent", value));
}
// Autogenerated method: MultiplayerConnectedPlayerNoteEventManager..ctor
GlobalNamespace::MultiplayerConnectedPlayerNoteEventManager* GlobalNamespace::MultiplayerConnectedPlayerNoteEventManager::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<MultiplayerConnectedPlayerNoteEventManager*>());
}
