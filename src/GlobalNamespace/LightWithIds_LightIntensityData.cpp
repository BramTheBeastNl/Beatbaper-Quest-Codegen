// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightWithIds/LightIntensityData
#include "GlobalNamespace/LightWithIds_LightIntensityData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LightWithIds/LightIntensityData.get_intensity
float GlobalNamespace::LightWithIds::LightIntensityData::get_intensity() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_intensity"));
}
// Autogenerated method: LightWithIds/LightIntensityData.get_color
UnityEngine::Color GlobalNamespace::LightWithIds::LightIntensityData::get_color() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>(this, "get_color"));
}
// Autogenerated method: LightWithIds/LightIntensityData.get_lightId
int GlobalNamespace::LightWithIds::LightIntensityData::get_lightId() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_lightId"));
}
// Autogenerated method: LightWithIds/LightIntensityData.get_isRegistered
bool GlobalNamespace::LightWithIds::LightIntensityData::get_isRegistered() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isRegistered"));
}
// Autogenerated method: LightWithIds/LightIntensityData.__SetIsRegistered
void GlobalNamespace::LightWithIds::LightIntensityData::__SetIsRegistered() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "__SetIsRegistered"));
}
// Autogenerated method: LightWithIds/LightIntensityData.__SetIsUnRegistered
void GlobalNamespace::LightWithIds::LightIntensityData::__SetIsUnRegistered() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "__SetIsUnRegistered"));
}
// Autogenerated method: LightWithIds/LightIntensityData.ColorWasSet
void GlobalNamespace::LightWithIds::LightIntensityData::ColorWasSet(UnityEngine::Color newColor) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ColorWasSet", newColor));
}
// Autogenerated method: LightWithIds/LightIntensityData..ctor
GlobalNamespace::LightWithIds::LightIntensityData* GlobalNamespace::LightWithIds::LightIntensityData::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<LightWithIds::LightIntensityData*>());
}
