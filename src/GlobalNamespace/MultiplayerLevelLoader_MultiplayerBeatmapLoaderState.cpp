// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelLoader/MultiplayerBeatmapLoaderState
#include "GlobalNamespace/MultiplayerLevelLoader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState NotLoading
GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_NotLoading() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerBeatmapLoaderState").WithContext("_get_NotLoading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState>("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "NotLoading"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState NotLoading
void GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_NotLoading(GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerBeatmapLoaderState").WithContext("_set_NotLoading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "NotLoading", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState LoadingBeatmap
GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_LoadingBeatmap() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerBeatmapLoaderState").WithContext("_get_LoadingBeatmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState>("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "LoadingBeatmap"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState LoadingBeatmap
void GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_LoadingBeatmap(GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerBeatmapLoaderState").WithContext("_set_LoadingBeatmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "LoadingBeatmap", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState WaitingForCountdown
GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_get_WaitingForCountdown() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerBeatmapLoaderState").WithContext("_get_WaitingForCountdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState>("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "WaitingForCountdown"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLevelLoader/MultiplayerBeatmapLoaderState WaitingForCountdown
void GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState::_set_WaitingForCountdown(GlobalNamespace::MultiplayerLevelLoader::MultiplayerBeatmapLoaderState value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerBeatmapLoaderState").WithContext("_set_WaitingForCountdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLevelLoader/MultiplayerBeatmapLoaderState", "WaitingForCountdown", value));
}
