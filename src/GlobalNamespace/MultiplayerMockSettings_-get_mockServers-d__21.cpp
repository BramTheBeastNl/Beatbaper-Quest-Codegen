// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerMockSettings/<get_mockServers>d__21
#include "GlobalNamespace/MultiplayerMockSettings_-get_mockServers-d__21.hpp"
// Including type: MockServer
#include "GlobalNamespace/MockServer.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerMockSettings/<get_mockServers>d__21..ctor
GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21* GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21::New_ctor(int $$1__state) {
  return THROW_UNLESS(il2cpp_utils::New<MultiplayerMockSettings::$get_mockServers$d__21*>($$1__state));
}
// Autogenerated method: MultiplayerMockSettings/<get_mockServers>d__21.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21::System_IDisposable_Dispose() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "System.IDisposable.Dispose"));
}
// Autogenerated method: MultiplayerMockSettings/<get_mockServers>d__21.MoveNext
bool GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21::MoveNext() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "MoveNext"));
}
bool GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21::System_Collections_IEnumerator_MoveNext() {
  return GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21::MoveNext();
}
// Autogenerated method: MultiplayerMockSettings/<get_mockServers>d__21.System.Collections.Generic.IEnumerator<MockServer>.get_Current
GlobalNamespace::MockServer* GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21::System_Collections_Generic_IEnumerator_1_get_Current() {
  return THROW_UNLESS((il2cpp_utils::RunMethod<GlobalNamespace::MockServer*>(this, "System.Collections.Generic.IEnumerator<MockServer>.get_Current")));
}
// Autogenerated method: MultiplayerMockSettings/<get_mockServers>d__21.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21::System_Collections_IEnumerator_Reset() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "System.Collections.IEnumerator.Reset"));
}
// Autogenerated method: MultiplayerMockSettings/<get_mockServers>d__21.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21::System_Collections_IEnumerator_get_Current() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppObject*>(this, "System.Collections.IEnumerator.get_Current"));
}
// Autogenerated method: MultiplayerMockSettings/<get_mockServers>d__21.System.Collections.Generic.IEnumerable<MockServer>.GetEnumerator
System::Collections::Generic::IEnumerator_1<GlobalNamespace::MockServer*>* GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21::System_Collections_Generic_IEnumerable_1_GetEnumerator() {
  return THROW_UNLESS((il2cpp_utils::RunMethod<System::Collections::Generic::IEnumerator_1<GlobalNamespace::MockServer*>*>(this, "System.Collections.Generic.IEnumerable<MockServer>.GetEnumerator")));
}
// Autogenerated method: MultiplayerMockSettings/<get_mockServers>d__21.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21::System_Collections_IEnumerable_GetEnumerator() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::IEnumerator*>(this, "System.Collections.IEnumerable.GetEnumerator"));
}
