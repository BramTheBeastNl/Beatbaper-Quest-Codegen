// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerMockSettings/<get_mockServers>d__21
#include "GlobalNamespace/MultiplayerMockSettings_-get_mockServers-d__21.hpp"
// Including type: MockServer
#include "GlobalNamespace/MockServer.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerMockSettings/<get_mockServers>d__21..ctor
GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21* GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21::New_ctor(int $$1__state) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("$get_mockServers$d__21").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<MultiplayerMockSettings::$get_mockServers$d__21*>($$1__state));
}
// Autogenerated method: MultiplayerMockSettings/<get_mockServers>d__21.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("$get_mockServers$d__21").WithContext("System.IDisposable.Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "System.IDisposable.Dispose", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerMockSettings/<get_mockServers>d__21.MoveNext
bool GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("$get_mockServers$d__21").WithContext("MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "MoveNext", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21::System_Collections_IEnumerator_MoveNext() {
  return GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21::MoveNext();
}
// Autogenerated method: MultiplayerMockSettings/<get_mockServers>d__21.System.Collections.Generic.IEnumerator<MockServer>.get_Current
GlobalNamespace::MockServer* GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21::System_Collections_Generic_IEnumerator_1_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("$get_mockServers$d__21").WithContext("System.Collections.Generic.IEnumerator<MockServer>.get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<GlobalNamespace::MockServer*>(), "System.Collections.Generic.IEnumerator<MockServer>.get_Current", {}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MockServer*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerMockSettings/<get_mockServers>d__21.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("$get_mockServers$d__21").WithContext("System.Collections.IEnumerator.Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "System.Collections.IEnumerator.Reset", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerMockSettings/<get_mockServers>d__21.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("$get_mockServers$d__21").WithContext("System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppObject*>(), "System.Collections.IEnumerator.get_Current", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerMockSettings/<get_mockServers>d__21.System.Collections.Generic.IEnumerable<MockServer>.GetEnumerator
System::Collections::Generic::IEnumerator_1<GlobalNamespace::MockServer*>* GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21::System_Collections_Generic_IEnumerable_1_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("$get_mockServers$d__21").WithContext("System.Collections.Generic.IEnumerable<MockServer>.GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Collections::Generic::IEnumerator_1<GlobalNamespace::MockServer*>*>(), "System.Collections.Generic.IEnumerable<MockServer>.GetEnumerator", {}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<GlobalNamespace::MockServer*>*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerMockSettings/<get_mockServers>d__21.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* GlobalNamespace::MultiplayerMockSettings::$get_mockServers$d__21::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("$get_mockServers$d__21").WithContext("System.Collections.IEnumerable.GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Collections::IEnumerator*>(), "System.Collections.IEnumerable.GetEnumerator", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
