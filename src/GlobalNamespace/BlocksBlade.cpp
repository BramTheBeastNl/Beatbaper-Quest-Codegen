// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BlocksBlade
#include "GlobalNamespace/BlocksBlade.hpp"
// Including type: BlocksBlade/Element
#include "GlobalNamespace/BlocksBlade_Element.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _positionPropertyID
int GlobalNamespace::BlocksBlade::_get__positionPropertyID() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BlocksBlade", "_positionPropertyID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _positionPropertyID
void GlobalNamespace::BlocksBlade::_set__positionPropertyID(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BlocksBlade", "_positionPropertyID", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _sizePropertyID
int GlobalNamespace::BlocksBlade::_get__sizePropertyID() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BlocksBlade", "_sizePropertyID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _sizePropertyID
void GlobalNamespace::BlocksBlade::_set__sizePropertyID(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BlocksBlade", "_sizePropertyID", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _colorPropertyID
int GlobalNamespace::BlocksBlade::_get__colorPropertyID() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BlocksBlade", "_colorPropertyID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _colorPropertyID
void GlobalNamespace::BlocksBlade::_set__colorPropertyID(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BlocksBlade", "_colorPropertyID", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _zClipPropertyID
int GlobalNamespace::BlocksBlade::_get__zClipPropertyID() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BlocksBlade", "_zClipPropertyID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _zClipPropertyID
void GlobalNamespace::BlocksBlade::_set__zClipPropertyID(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BlocksBlade", "_zClipPropertyID", value));
}
// Autogenerated method: BlocksBlade.get_color
UnityEngine::Color GlobalNamespace::BlocksBlade::get_color() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>(this, "get_color"));
}
// Autogenerated method: BlocksBlade.set_color
void GlobalNamespace::BlocksBlade::set_color(UnityEngine::Color value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_color", value));
}
// Autogenerated method: BlocksBlade.Start
void GlobalNamespace::BlocksBlade::Start() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Start"));
}
// Autogenerated method: BlocksBlade.Update
void GlobalNamespace::BlocksBlade::Update() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Update"));
}
// Autogenerated method: BlocksBlade.SetUpElement
void GlobalNamespace::BlocksBlade::SetUpElement(GlobalNamespace::BlocksBlade::Element* element, float velocity, UnityEngine::Color color) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetUpElement", element, velocity, color));
}
// Autogenerated method: BlocksBlade.RandomPointOnCircle
UnityEngine::Vector2 GlobalNamespace::BlocksBlade::RandomPointOnCircle(float radius) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector2>(this, "RandomPointOnCircle", radius));
}
// Autogenerated method: BlocksBlade..ctor
GlobalNamespace::BlocksBlade* GlobalNamespace::BlocksBlade::New_ctor() {
  return (BlocksBlade*)THROW_UNLESS(il2cpp_utils::New("", "BlocksBlade"));
}
// Autogenerated method: BlocksBlade..cctor
void GlobalNamespace::BlocksBlade::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "BlocksBlade", ".cctor"));
}
