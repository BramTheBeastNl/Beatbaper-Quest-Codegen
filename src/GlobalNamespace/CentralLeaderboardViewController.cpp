// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CentralLeaderboardViewController
#include "GlobalNamespace/CentralLeaderboardViewController.hpp"
// Including type: CentralLeaderboardViewController/LeaderboardPanel
#include "GlobalNamespace/CentralLeaderboardViewController_LeaderboardPanel.hpp"
// Including type: CentralLeaderboardViewController/ScoreScopeInfo
#include "GlobalNamespace/CentralLeaderboardViewController_ScoreScopeInfo.hpp"
// Including type: CentralLeaderboardViewController/<>c
#include "GlobalNamespace/CentralLeaderboardViewController_--c.hpp"
// Including type: CentralLeaderboardViewController/<RefreshDelayed>d__27
#include "GlobalNamespace/CentralLeaderboardViewController_-RefreshDelayed-d__27.hpp"
// Including type: CentralLeaderboardViewController/<LoadScoresAsync>d__28
#include "GlobalNamespace/CentralLeaderboardViewController_-LoadScoresAsync-d__28.hpp"
// Including type: OnlineServices.ServerManager
#include "OnlineServices/ServerManager.hpp"
// Including type: HMUI.IconSegmentedControl
#include "HMUI/IconSegmentedControl.hpp"
// Including type: LoadingControl
#include "GlobalNamespace/LoadingControl.hpp"
// Including type: HMUI.TextSegmentedControl
#include "HMUI/TextSegmentedControl.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: OnlineServices.PlatformServicesAvailabilityInfo
#include "OnlineServices/PlatformServicesAvailabilityInfo.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: LeaderboardTableView/ScoreData
#include "GlobalNamespace/LeaderboardTableView_ScoreData.hpp"
// Including type: HMUI.ViewController/ActivationType
#include "HMUI/ViewController_ActivationType.hpp"
// Including type: HMUI.ViewController/DeactivationType
#include "HMUI/ViewController_DeactivationType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CentralLeaderboardViewController.get__hasScoresData
bool GlobalNamespace::CentralLeaderboardViewController::get__hasScoresData() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get__hasScoresData"));
}
// Autogenerated method: CentralLeaderboardViewController.HandleDidPressRefreshButton
void GlobalNamespace::CentralLeaderboardViewController::HandleDidPressRefreshButton() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleDidPressRefreshButton"));
}
// Autogenerated method: CentralLeaderboardViewController.HandlelatformServicesAvailabilityInfoChanged
void GlobalNamespace::CentralLeaderboardViewController::HandlelatformServicesAvailabilityInfoChanged(OnlineServices::PlatformServicesAvailabilityInfo* availabilityInfo) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlelatformServicesAvailabilityInfoChanged", availabilityInfo));
}
// Autogenerated method: CentralLeaderboardViewController.HanldeLeaderboardTypeSegmentedControlDidSelectCell
void GlobalNamespace::CentralLeaderboardViewController::HanldeLeaderboardTypeSegmentedControlDidSelectCell(HMUI::SegmentedControl* control, int index) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HanldeLeaderboardTypeSegmentedControlDidSelectCell", control, index));
}
// Autogenerated method: CentralLeaderboardViewController.HandleScopeSegmentedControlDidSelectCell
void GlobalNamespace::CentralLeaderboardViewController::HandleScopeSegmentedControlDidSelectCell(HMUI::SegmentedControl* segmentedControl, int cellNumber) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleScopeSegmentedControlDidSelectCell", segmentedControl, cellNumber));
}
// Autogenerated method: CentralLeaderboardViewController.HandleScoreForLeaderboardDidUpload
void GlobalNamespace::CentralLeaderboardViewController::HandleScoreForLeaderboardDidUpload(::CsString* leaderboardId) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleScoreForLeaderboardDidUpload", leaderboardId));
}
// Autogenerated method: CentralLeaderboardViewController.Refresh
void GlobalNamespace::CentralLeaderboardViewController::Refresh(bool showLoadingIndicator, bool clear) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Refresh", showLoadingIndicator, clear));
}
// Autogenerated method: CentralLeaderboardViewController.RefreshDelayed
System::Collections::IEnumerator* GlobalNamespace::CentralLeaderboardViewController::RefreshDelayed(bool showLoadingIndicator, bool clear) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::IEnumerator*>(this, "RefreshDelayed", showLoadingIndicator, clear));
}
// Autogenerated method: CentralLeaderboardViewController.LoadScoresAsync
void GlobalNamespace::CentralLeaderboardViewController::LoadScoresAsync() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LoadScoresAsync"));
}
// Autogenerated method: CentralLeaderboardViewController.ClearContent
void GlobalNamespace::CentralLeaderboardViewController::ClearContent() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearContent"));
}
// Autogenerated method: CentralLeaderboardViewController.SetData
void GlobalNamespace::CentralLeaderboardViewController::SetData(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetData", difficultyBeatmap));
}
// Autogenerated method: CentralLeaderboardViewController.DidActivate
void GlobalNamespace::CentralLeaderboardViewController::DidActivate(bool firstActivation, HMUI::ViewController::ActivationType activationType) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DidActivate", firstActivation, activationType));
}
// Autogenerated method: CentralLeaderboardViewController.DidDeactivate
void GlobalNamespace::CentralLeaderboardViewController::DidDeactivate(HMUI::ViewController::DeactivationType deactivationType) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DidDeactivate", deactivationType));
}
// Autogenerated method: CentralLeaderboardViewController.OnDestroy
void GlobalNamespace::CentralLeaderboardViewController::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: CentralLeaderboardViewController..ctor
GlobalNamespace::CentralLeaderboardViewController* GlobalNamespace::CentralLeaderboardViewController::New_ctor() {
  return (CentralLeaderboardViewController*)THROW_UNLESS(il2cpp_utils::New("", "CentralLeaderboardViewController"));
}
