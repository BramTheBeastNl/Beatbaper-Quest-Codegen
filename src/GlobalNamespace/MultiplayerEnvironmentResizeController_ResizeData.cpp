// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerEnvironmentResizeController/ResizeData
#include "GlobalNamespace/MultiplayerEnvironmentResizeController_ResizeData.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerEnvironmentResizeController/ResizeData.get_resizeType
GlobalNamespace::MultiplayerEnvironmentResizeController::ResizeType GlobalNamespace::MultiplayerEnvironmentResizeController::ResizeData::get_resizeType() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::MultiplayerEnvironmentResizeController::ResizeType>(this, "get_resizeType"));
}
// Autogenerated method: MultiplayerEnvironmentResizeController/ResizeData.get_offset
float GlobalNamespace::MultiplayerEnvironmentResizeController::ResizeData::get_offset() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_offset"));
}
// Autogenerated method: MultiplayerEnvironmentResizeController/ResizeData.get_lights
::Array<GlobalNamespace::TubeBloomPrePassLight*>* GlobalNamespace::MultiplayerEnvironmentResizeController::ResizeData::get_lights() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<GlobalNamespace::TubeBloomPrePassLight*>*>(this, "get_lights"));
}
// Autogenerated method: MultiplayerEnvironmentResizeController/ResizeData.get_otherTransforms
::Array<UnityEngine::Transform*>* GlobalNamespace::MultiplayerEnvironmentResizeController::ResizeData::get_otherTransforms() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<UnityEngine::Transform*>*>(this, "get_otherTransforms"));
}
// Autogenerated method: MultiplayerEnvironmentResizeController/ResizeData..ctor
GlobalNamespace::MultiplayerEnvironmentResizeController::ResizeData* GlobalNamespace::MultiplayerEnvironmentResizeController::ResizeData::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<MultiplayerEnvironmentResizeController::ResizeData*>());
}
