// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShadowFollowController
#include "GlobalNamespace/ShadowFollowController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ShadowFollowController.SetTargetTransform
void GlobalNamespace::ShadowFollowController::SetTargetTransform(UnityEngine::Transform* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ShadowFollowController").WithContext("SetTargetTransform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetTargetTransform", {}, ::il2cpp_utils::ExtractTypes(target)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: ShadowFollowController.Update
void GlobalNamespace::ShadowFollowController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ShadowFollowController").WithContext("Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Update", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ShadowFollowController..ctor
GlobalNamespace::ShadowFollowController* GlobalNamespace::ShadowFollowController::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ShadowFollowController").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<ShadowFollowController*>());
}
