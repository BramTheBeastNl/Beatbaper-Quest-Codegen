// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StringBuilderExtension
#include "GlobalNamespace/StringBuilderExtension.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Char[] charToInt
::Array<::Il2CppChar>* GlobalNamespace::StringBuilderExtension::_get_charToInt() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("", "StringBuilderExtension", "charToInt"));
}
// Autogenerated static field setter
// Set static field: static private System.Char[] charToInt
void GlobalNamespace::StringBuilderExtension::_set_charToInt(::Array<::Il2CppChar>* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StringBuilderExtension", "charToInt", value));
}
// Autogenerated method: StringBuilderExtension.Swap
void GlobalNamespace::StringBuilderExtension::Swap(System::Text::StringBuilder* sb, int startIndex, int endIndex) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "StringBuilderExtension", "Swap", sb, startIndex, endIndex));
}
// Autogenerated method: StringBuilderExtension.AppendNumber
void GlobalNamespace::StringBuilderExtension::AppendNumber(System::Text::StringBuilder* sb, int number) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "StringBuilderExtension", "AppendNumber", sb, number));
}
// Autogenerated method: StringBuilderExtension.AppendNumber
void GlobalNamespace::StringBuilderExtension::AppendNumber(System::Text::StringBuilder* sb, uint unumber) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "StringBuilderExtension", "AppendNumber", sb, unumber));
}
// Autogenerated method: StringBuilderExtension..cctor
void GlobalNamespace::StringBuilderExtension::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "StringBuilderExtension", ".cctor"));
}
