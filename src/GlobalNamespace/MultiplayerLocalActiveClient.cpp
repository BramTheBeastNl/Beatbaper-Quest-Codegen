// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLocalActiveClient
#include "GlobalNamespace/MultiplayerLocalActiveClient.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: IScoreSyncStateManager
#include "GlobalNamespace/IScoreSyncStateManager.hpp"
// Including type: INodePoseSyncStateManager
#include "GlobalNamespace/INodePoseSyncStateManager.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: ScoreController
#include "GlobalNamespace/ScoreController.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLocalActiveClient.get_beatmapObjectManager
GlobalNamespace::BeatmapObjectManager* GlobalNamespace::MultiplayerLocalActiveClient::get_beatmapObjectManager() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::BeatmapObjectManager*>(this, "get_beatmapObjectManager"));
}
// Autogenerated method: MultiplayerLocalActiveClient.Start
void GlobalNamespace::MultiplayerLocalActiveClient::Start() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Start"));
}
// Autogenerated method: MultiplayerLocalActiveClient.OnDestroy
void GlobalNamespace::MultiplayerLocalActiveClient::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: MultiplayerLocalActiveClient.LateUpdate
void GlobalNamespace::MultiplayerLocalActiveClient::LateUpdate() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LateUpdate"));
}
// Autogenerated method: MultiplayerLocalActiveClient.HandleNoteWasMissed
void GlobalNamespace::MultiplayerLocalActiveClient::HandleNoteWasMissed(GlobalNamespace::NoteController* noteController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleNoteWasMissed", noteController));
}
// Autogenerated method: MultiplayerLocalActiveClient.HandleNoteWasCut
void GlobalNamespace::MultiplayerLocalActiveClient::HandleNoteWasCut(GlobalNamespace::NoteController* noteController, GlobalNamespace::NoteCutInfo* noteCutInfo) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleNoteWasCut", noteController, noteCutInfo));
}
// Autogenerated method: MultiplayerLocalActiveClient.ScoreControllerHandleComboDidChange
void GlobalNamespace::MultiplayerLocalActiveClient::ScoreControllerHandleComboDidChange(int combo) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ScoreControllerHandleComboDidChange", combo));
}
// Autogenerated method: MultiplayerLocalActiveClient.ScoreControllerHandleMultiplierDidChange
void GlobalNamespace::MultiplayerLocalActiveClient::ScoreControllerHandleMultiplierDidChange(int multiplier, float multiplierProgress) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ScoreControllerHandleMultiplierDidChange", multiplier, multiplierProgress));
}
// Autogenerated method: MultiplayerLocalActiveClient.ScoreControllerHandleImmediateMaxPossibleScoreDidChange
void GlobalNamespace::MultiplayerLocalActiveClient::ScoreControllerHandleImmediateMaxPossibleScoreDidChange(int immediateMaxPossibleRawScore, int immediateMaxPossibleModifiedScore) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ScoreControllerHandleImmediateMaxPossibleScoreDidChange", immediateMaxPossibleRawScore, immediateMaxPossibleModifiedScore));
}
// Autogenerated method: MultiplayerLocalActiveClient.ScoreControllerHandleScoreDidChange
void GlobalNamespace::MultiplayerLocalActiveClient::ScoreControllerHandleScoreDidChange(int rawScore, int modifiedScore) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ScoreControllerHandleScoreDidChange", rawScore, modifiedScore));
}
// Autogenerated method: MultiplayerLocalActiveClient..ctor
GlobalNamespace::MultiplayerLocalActiveClient* GlobalNamespace::MultiplayerLocalActiveClient::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<MultiplayerLocalActiveClient*>());
}
