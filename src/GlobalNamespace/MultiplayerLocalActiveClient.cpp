// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLocalActiveClient
#include "GlobalNamespace/MultiplayerLocalActiveClient.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: IScoreSyncStateManager
#include "GlobalNamespace/IScoreSyncStateManager.hpp"
// Including type: INodePoseSyncStateManager
#include "GlobalNamespace/INodePoseSyncStateManager.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: ScoreController
#include "GlobalNamespace/ScoreController.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLocalActiveClient.get_beatmapObjectManager
GlobalNamespace::BeatmapObjectManager* GlobalNamespace::MultiplayerLocalActiveClient::get_beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalActiveClient").WithContext("get_beatmapObjectManager");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<GlobalNamespace::BeatmapObjectManager*>(), "get_beatmapObjectManager", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapObjectManager*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActiveClient.Start
void GlobalNamespace::MultiplayerLocalActiveClient::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalActiveClient").WithContext("Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Start", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActiveClient.OnDestroy
void GlobalNamespace::MultiplayerLocalActiveClient::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalActiveClient").WithContext("OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnDestroy", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActiveClient.LateUpdate
void GlobalNamespace::MultiplayerLocalActiveClient::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalActiveClient").WithContext("LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "LateUpdate", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLocalActiveClient.HandleNoteWasMissed
void GlobalNamespace::MultiplayerLocalActiveClient::HandleNoteWasMissed(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalActiveClient").WithContext("HandleNoteWasMissed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "HandleNoteWasMissed", {}, ::il2cpp_utils::ExtractTypes(noteController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: MultiplayerLocalActiveClient.HandleNoteWasCut
void GlobalNamespace::MultiplayerLocalActiveClient::HandleNoteWasCut(GlobalNamespace::NoteController* noteController, GlobalNamespace::NoteCutInfo* noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalActiveClient").WithContext("HandleNoteWasCut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "HandleNoteWasCut", {}, ::il2cpp_utils::ExtractTypes(noteController, noteCutInfo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController, noteCutInfo);
}
// Autogenerated method: MultiplayerLocalActiveClient.ScoreControllerHandleComboDidChange
void GlobalNamespace::MultiplayerLocalActiveClient::ScoreControllerHandleComboDidChange(int combo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalActiveClient").WithContext("ScoreControllerHandleComboDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ScoreControllerHandleComboDidChange", {}, ::il2cpp_utils::ExtractTypes(combo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, combo);
}
// Autogenerated method: MultiplayerLocalActiveClient.ScoreControllerHandleMultiplierDidChange
void GlobalNamespace::MultiplayerLocalActiveClient::ScoreControllerHandleMultiplierDidChange(int multiplier, float multiplierProgress) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalActiveClient").WithContext("ScoreControllerHandleMultiplierDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ScoreControllerHandleMultiplierDidChange", {}, ::il2cpp_utils::ExtractTypes(multiplier, multiplierProgress)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, multiplier, multiplierProgress);
}
// Autogenerated method: MultiplayerLocalActiveClient.ScoreControllerHandleImmediateMaxPossibleScoreDidChange
void GlobalNamespace::MultiplayerLocalActiveClient::ScoreControllerHandleImmediateMaxPossibleScoreDidChange(int immediateMaxPossibleRawScore, int immediateMaxPossibleModifiedScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalActiveClient").WithContext("ScoreControllerHandleImmediateMaxPossibleScoreDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ScoreControllerHandleImmediateMaxPossibleScoreDidChange", {}, ::il2cpp_utils::ExtractTypes(immediateMaxPossibleRawScore, immediateMaxPossibleModifiedScore)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, immediateMaxPossibleRawScore, immediateMaxPossibleModifiedScore);
}
// Autogenerated method: MultiplayerLocalActiveClient.ScoreControllerHandleScoreDidChange
void GlobalNamespace::MultiplayerLocalActiveClient::ScoreControllerHandleScoreDidChange(int rawScore, int modifiedScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalActiveClient").WithContext("ScoreControllerHandleScoreDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ScoreControllerHandleScoreDidChange", {}, ::il2cpp_utils::ExtractTypes(rawScore, modifiedScore)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rawScore, modifiedScore);
}
// Autogenerated method: MultiplayerLocalActiveClient..ctor
GlobalNamespace::MultiplayerLocalActiveClient* GlobalNamespace::MultiplayerLocalActiveClient::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLocalActiveClient").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<MultiplayerLocalActiveClient*>());
}
