// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SmoothCameraController
#include "GlobalNamespace/SmoothCameraController.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: SmoothCamera
#include "GlobalNamespace/SmoothCamera.hpp"
// Including type: LIV.SDK.Unity.LIV
#include "LIV/SDK/Unity/LIV.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SmoothCameraController.Start
void GlobalNamespace::SmoothCameraController::Start() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Start"));
}
// Autogenerated method: SmoothCameraController.OnDestroy
void GlobalNamespace::SmoothCameraController::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: SmoothCameraController.HandleLIVDidActivate
void GlobalNamespace::SmoothCameraController::HandleLIVDidActivate() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleLIVDidActivate"));
}
// Autogenerated method: SmoothCameraController.HandleLIVDidDeactivate
void GlobalNamespace::SmoothCameraController::HandleLIVDidDeactivate() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleLIVDidDeactivate"));
}
// Autogenerated method: SmoothCameraController.ActivateSmoothCameraIfNeeded
void GlobalNamespace::SmoothCameraController::ActivateSmoothCameraIfNeeded() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ActivateSmoothCameraIfNeeded"));
}
// Autogenerated method: SmoothCameraController..ctor
GlobalNamespace::SmoothCameraController* GlobalNamespace::SmoothCameraController::New_ctor() {
  return (SmoothCameraController*)THROW_UNLESS(il2cpp_utils::New("", "SmoothCameraController"));
}
