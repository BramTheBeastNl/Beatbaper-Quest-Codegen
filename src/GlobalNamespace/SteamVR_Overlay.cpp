// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamVR_Overlay
#include "GlobalNamespace/SteamVR_Overlay.hpp"
// Including type: SteamVR_Overlay/IntersectionResults
#include "GlobalNamespace/SteamVR_Overlay_IntersectionResults.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: Valve.VR.VREvent_t
#include "Valve/VR/VREvent_t.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private SteamVR_Overlay <instance>k__BackingField
GlobalNamespace::SteamVR_Overlay* GlobalNamespace::SteamVR_Overlay::_get_$instance$k__BackingField() {
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::SteamVR_Overlay*>("", "SteamVR_Overlay", "<instance>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private SteamVR_Overlay <instance>k__BackingField
void GlobalNamespace::SteamVR_Overlay::_set_$instance$k__BackingField(GlobalNamespace::SteamVR_Overlay* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_Overlay", "<instance>k__BackingField", value));
}
// Autogenerated method: SteamVR_Overlay.get_instance
GlobalNamespace::SteamVR_Overlay* GlobalNamespace::SteamVR_Overlay::get_instance() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::SteamVR_Overlay*>("", "SteamVR_Overlay", "get_instance"));
}
// Autogenerated method: SteamVR_Overlay.set_instance
void GlobalNamespace::SteamVR_Overlay::set_instance(GlobalNamespace::SteamVR_Overlay* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "SteamVR_Overlay", "set_instance", value));
}
// Autogenerated method: SteamVR_Overlay.get_key
::CsString* GlobalNamespace::SteamVR_Overlay::get_key() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>("", "SteamVR_Overlay", "get_key"));
}
// Autogenerated method: SteamVR_Overlay.OnEnable
void GlobalNamespace::SteamVR_Overlay::OnEnable() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnEnable"));
}
// Autogenerated method: SteamVR_Overlay.OnDisable
void GlobalNamespace::SteamVR_Overlay::OnDisable() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDisable"));
}
// Autogenerated method: SteamVR_Overlay.UpdateOverlay
void GlobalNamespace::SteamVR_Overlay::UpdateOverlay() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdateOverlay"));
}
// Autogenerated method: SteamVR_Overlay.PollNextEvent
bool GlobalNamespace::SteamVR_Overlay::PollNextEvent(Valve::VR::VREvent_t& pEvent) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "PollNextEvent", pEvent));
}
// Autogenerated method: SteamVR_Overlay.ComputeIntersection
bool GlobalNamespace::SteamVR_Overlay::ComputeIntersection(UnityEngine::Vector3 source, UnityEngine::Vector3 direction, GlobalNamespace::SteamVR_Overlay::IntersectionResults& results) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "ComputeIntersection", source, direction, results));
}
// Autogenerated method: SteamVR_Overlay..ctor
GlobalNamespace::SteamVR_Overlay* GlobalNamespace::SteamVR_Overlay::New_ctor() {
  return (SteamVR_Overlay*)THROW_UNLESS(il2cpp_utils::New("", "SteamVR_Overlay"));
}
