// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: BeatmapObjectType
#include "GlobalNamespace/BeatmapObjectType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ObstacleData.get_obstacleType
GlobalNamespace::ObstacleType GlobalNamespace::ObstacleData::get_obstacleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleData").WithContext("get_obstacleType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<GlobalNamespace::ObstacleType>(), "get_obstacleType", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ObstacleType, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleData.set_obstacleType
void GlobalNamespace::ObstacleData::set_obstacleType(GlobalNamespace::ObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleData").WithContext("set_obstacleType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_obstacleType", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleData.get_duration
float GlobalNamespace::ObstacleData::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleData").WithContext("get_duration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<float>(), "get_duration", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleData.set_duration
void GlobalNamespace::ObstacleData::set_duration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleData").WithContext("set_duration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_duration", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleData.get_width
int GlobalNamespace::ObstacleData::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleData").WithContext("get_width");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "get_width", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleData.set_width
void GlobalNamespace::ObstacleData::set_width(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleData").WithContext("set_width");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_width", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleData..ctor
GlobalNamespace::ObstacleData* GlobalNamespace::ObstacleData::New_ctor(float time, int lineIndex, GlobalNamespace::ObstacleType obstacleType, float duration, int width) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleData").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<ObstacleData*>(time, lineIndex, obstacleType, duration, width));
}
// Autogenerated method: ObstacleData.UpdateDuration
void GlobalNamespace::ObstacleData::UpdateDuration(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleData").WithContext("UpdateDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "UpdateDuration", {}, ::il2cpp_utils::ExtractTypes(duration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, duration);
}
// Autogenerated method: ObstacleData.get_beatmapObjectType
GlobalNamespace::BeatmapObjectType GlobalNamespace::ObstacleData::get_beatmapObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleData").WithContext("get_beatmapObjectType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<GlobalNamespace::BeatmapObjectType>(), "get_beatmapObjectType", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapObjectType, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleData.GetCopy
GlobalNamespace::BeatmapObjectData* GlobalNamespace::ObstacleData::GetCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleData").WithContext("GetCopy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<GlobalNamespace::BeatmapObjectData*>(), "GetCopy", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapObjectData*, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleData.MirrorLineIndex
void GlobalNamespace::ObstacleData::MirrorLineIndex(int lineCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleData").WithContext("MirrorLineIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "MirrorLineIndex", {}, ::il2cpp_utils::ExtractTypes(lineCount)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lineCount);
}
