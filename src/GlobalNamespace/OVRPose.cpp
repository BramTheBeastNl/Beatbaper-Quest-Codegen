// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRPose.get_identity
GlobalNamespace::OVRPose GlobalNamespace::OVRPose::get_identity() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPose>("", "OVRPose", "get_identity"));
}
// Autogenerated method: OVRPose.Inverse
GlobalNamespace::OVRPose GlobalNamespace::OVRPose::Inverse() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPose>(*this, "Inverse"));
}
// Autogenerated method: OVRPose.flipZ
GlobalNamespace::OVRPose GlobalNamespace::OVRPose::flipZ() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPose>(*this, "flipZ"));
}
// Autogenerated method: OVRPose.ToPosef_Legacy
GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPose::ToPosef_Legacy() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPlugin::Posef>(*this, "ToPosef_Legacy"));
}
// Autogenerated method: OVRPose.ToPosef
GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPose::ToPosef() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPlugin::Posef>(*this, "ToPosef"));
}
// Autogenerated method: OVRPose.Equals
bool GlobalNamespace::OVRPose::Equals(::Il2CppObject* obj) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", obj));
}
// Autogenerated method: OVRPose.GetHashCode
int GlobalNamespace::OVRPose::GetHashCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "GetHashCode"));
}
// Autogenerated method: OVRPose.op_Equality
bool GlobalNamespace::operator ==(const GlobalNamespace::OVRPose& x, const GlobalNamespace::OVRPose& y) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRPose", "op_Equality", x, y));
}
// Autogenerated method: OVRPose.op_Inequality
bool GlobalNamespace::operator !=(const GlobalNamespace::OVRPose& x, const GlobalNamespace::OVRPose& y) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRPose", "op_Inequality", x, y));
}
// Autogenerated method: OVRPose.op_Multiply
GlobalNamespace::OVRPose GlobalNamespace::operator*(const GlobalNamespace::OVRPose& lhs, const GlobalNamespace::OVRPose& rhs) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPose>("", "OVRPose", "op_Multiply", lhs, rhs));
}
