// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapIdentifierNetSerializable.get_levelID
::Il2CppString* GlobalNamespace::BeatmapIdentifierNetSerializable::get_levelID() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_levelID"));
}
// Autogenerated method: BeatmapIdentifierNetSerializable.set_levelID
void GlobalNamespace::BeatmapIdentifierNetSerializable::set_levelID(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_levelID", value));
}
// Autogenerated method: BeatmapIdentifierNetSerializable.get_beatmapCharacteristicSerializedName
::Il2CppString* GlobalNamespace::BeatmapIdentifierNetSerializable::get_beatmapCharacteristicSerializedName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_beatmapCharacteristicSerializedName"));
}
// Autogenerated method: BeatmapIdentifierNetSerializable.set_beatmapCharacteristicSerializedName
void GlobalNamespace::BeatmapIdentifierNetSerializable::set_beatmapCharacteristicSerializedName(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_beatmapCharacteristicSerializedName", value));
}
// Autogenerated method: BeatmapIdentifierNetSerializable.get_difficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::BeatmapIdentifierNetSerializable::get_difficulty() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::BeatmapDifficulty>(this, "get_difficulty"));
}
// Autogenerated method: BeatmapIdentifierNetSerializable.set_difficulty
void GlobalNamespace::BeatmapIdentifierNetSerializable::set_difficulty(GlobalNamespace::BeatmapDifficulty value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_difficulty", value));
}
// Autogenerated method: BeatmapIdentifierNetSerializable..ctor
GlobalNamespace::BeatmapIdentifierNetSerializable* GlobalNamespace::BeatmapIdentifierNetSerializable::New_ctor(::Il2CppString* levelID, ::Il2CppString* beatmapCharacteristicSerializedName, GlobalNamespace::BeatmapDifficulty difficulty) {
  return THROW_UNLESS(il2cpp_utils::New<BeatmapIdentifierNetSerializable*>(levelID, beatmapCharacteristicSerializedName, difficulty));
}
// Autogenerated method: BeatmapIdentifierNetSerializable..ctor
GlobalNamespace::BeatmapIdentifierNetSerializable* GlobalNamespace::BeatmapIdentifierNetSerializable::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<BeatmapIdentifierNetSerializable*>());
}
// Autogenerated method: BeatmapIdentifierNetSerializable.LiteNetLib.Utils.INetSerializable.Deserialize
void GlobalNamespace::BeatmapIdentifierNetSerializable::LiteNetLib_Utils_INetSerializable_Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LiteNetLib.Utils.INetSerializable.Deserialize", reader));
}
// Autogenerated method: BeatmapIdentifierNetSerializable.LiteNetLib.Utils.INetSerializable.Serialize
void GlobalNamespace::BeatmapIdentifierNetSerializable::LiteNetLib_Utils_INetSerializable_Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LiteNetLib.Utils.INetSerializable.Serialize", writer));
}
// Autogenerated method: BeatmapIdentifierNetSerializable.Equals
bool GlobalNamespace::BeatmapIdentifierNetSerializable::Equals(GlobalNamespace::BeatmapIdentifierNetSerializable* other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Equals", other));
}
// Autogenerated method: BeatmapIdentifierNetSerializable.Equals
bool GlobalNamespace::BeatmapIdentifierNetSerializable::Equals(::Il2CppObject* obj) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Equals", obj));
}
// Autogenerated method: BeatmapIdentifierNetSerializable.GetHashCode
int GlobalNamespace::BeatmapIdentifierNetSerializable::GetHashCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "GetHashCode"));
}
// Autogenerated method: BeatmapIdentifierNetSerializable.ToString
::Il2CppString* GlobalNamespace::BeatmapIdentifierNetSerializable::ToString() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "ToString"));
}
