// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusPlatformAdditionalContentModel
#include "GlobalNamespace/OculusPlatformAdditionalContentModel.hpp"
// Including type: OculusPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__5.hpp"
// Including type: OculusPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__6.hpp"
// Including type: OculusPlatformAdditionalContentModel/<DataIsValidAsync>d__7
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-DataIsValidAsync-d__7.hpp"
// Including type: OculusPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__8.hpp"
// Including type: OculusPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__9
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__9.hpp"
// Including type: OculusPlatformAdditionalContentModel/<>c__DisplayClass10_0
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_--c__DisplayClass10_0.hpp"
// Including type: OculusPlatformAdditionalContentModel/<LaunchCheckoutFlow>d__10
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-LaunchCheckoutFlow-d__10.hpp"
// Including type: OculusPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__11
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-IsPackBetterBuyThanLevelAsync-d__11.hpp"
// Including type: OculusPlatformAdditionalContentModel/<>c__DisplayClass12_0
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_--c__DisplayClass12_0.hpp"
// Including type: OculusPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__12
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-CheckForNewEntitlementsAsync-d__12.hpp"
// Including type: OculusLevelProductsModelSO
#include "GlobalNamespace/OculusLevelProductsModelSO.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformAdditionalContentModel.DataIsValidAsync
System::Threading::Tasks::Task_1<bool>* GlobalNamespace::OculusPlatformAdditionalContentModel::DataIsValidAsync(System::Threading::CancellationToken cancellationToken) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<bool>*>(this, "DataIsValidAsync", cancellationToken));
}
// Autogenerated method: OculusPlatformAdditionalContentModel.LaunchCheckoutFlow
System::Threading::Tasks::Task_1<Oculus::Platform::Message_1<Oculus::Platform::Models::Purchase*>*>* GlobalNamespace::OculusPlatformAdditionalContentModel::LaunchCheckoutFlow(::Il2CppString* sku) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<Oculus::Platform::Message_1<Oculus::Platform::Models::Purchase*>*>*>(this, "LaunchCheckoutFlow", sku));
}
// Autogenerated method: OculusPlatformAdditionalContentModel.CheckForNewEntitlementsAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>* GlobalNamespace::OculusPlatformAdditionalContentModel::CheckForNewEntitlementsAsync(System::Threading::CancellationToken cancellationToken) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*>(this, "CheckForNewEntitlementsAsync", cancellationToken));
}
// Autogenerated method: OculusPlatformAdditionalContentModel.HasLevelEntitlement
bool GlobalNamespace::OculusPlatformAdditionalContentModel::HasLevelEntitlement(::Il2CppString* levelId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "HasLevelEntitlement", levelId));
}
// Autogenerated method: OculusPlatformAdditionalContentModel.HasLevelPackEntitlement
bool GlobalNamespace::OculusPlatformAdditionalContentModel::HasLevelPackEntitlement(::Il2CppString* levelPackId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "HasLevelPackEntitlement", levelPackId));
}
// Autogenerated method: OculusPlatformAdditionalContentModel.InvalidateDataInternal
void GlobalNamespace::OculusPlatformAdditionalContentModel::InvalidateDataInternal() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "InvalidateDataInternal"));
}
// Autogenerated method: OculusPlatformAdditionalContentModel.GetLevelEntitlementStatusInternalAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::OculusPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync(::Il2CppString* levelId, System::Threading::CancellationToken cancellationToken) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(this, "GetLevelEntitlementStatusInternalAsync", levelId, cancellationToken));
}
// Autogenerated method: OculusPlatformAdditionalContentModel.GetPackEntitlementStatusInternalAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::OculusPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync(::Il2CppString* packId, System::Threading::CancellationToken cancellationToken) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(this, "GetPackEntitlementStatusInternalAsync", packId, cancellationToken));
}
// Autogenerated method: OculusPlatformAdditionalContentModel.OpenLevelProductStoreAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::OculusPlatformAdditionalContentModel::OpenLevelProductStoreAsync(::Il2CppString* levelId, System::Threading::CancellationToken cancellationToken) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(this, "OpenLevelProductStoreAsync", levelId, cancellationToken));
}
// Autogenerated method: OculusPlatformAdditionalContentModel.OpenLevelPackProductStoreAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::OculusPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken cancellationToken) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(this, "OpenLevelPackProductStoreAsync", levelPackId, cancellationToken));
}
// Autogenerated method: OculusPlatformAdditionalContentModel.IsPackBetterBuyThanLevelAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>* GlobalNamespace::OculusPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken token) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*>(this, "IsPackBetterBuyThanLevelAsync", levelPackId, token));
}
// Autogenerated method: OculusPlatformAdditionalContentModel..ctor
GlobalNamespace::OculusPlatformAdditionalContentModel* GlobalNamespace::OculusPlatformAdditionalContentModel::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<OculusPlatformAdditionalContentModel*>());
}
