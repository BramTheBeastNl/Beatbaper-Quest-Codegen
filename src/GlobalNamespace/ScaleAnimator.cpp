// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScaleAnimator
#include "GlobalNamespace/ScaleAnimator.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Tweening.TweeningManager
#include "Tweening/TweeningManager.hpp"
// Including type: Tweening.Tween`1
#include "Tweening/Tween_1.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: Tweening.EaseType
#include "Tweening/EaseType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ScaleAnimator.OnDestroy
void GlobalNamespace::ScaleAnimator::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ScaleAnimator").WithContext("OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnDestroy", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScaleAnimator.InitIfNeeded
void GlobalNamespace::ScaleAnimator::InitIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ScaleAnimator").WithContext("InitIfNeeded");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "InitIfNeeded", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScaleAnimator.SetPositionAndRotation
void GlobalNamespace::ScaleAnimator::SetPositionAndRotation(UnityEngine::Vector3 position, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ScaleAnimator").WithContext("SetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetPositionAndRotation", {}, ::il2cpp_utils::ExtractTypes(position, rotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: ScaleAnimator.HideInstant
void GlobalNamespace::ScaleAnimator::HideInstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ScaleAnimator").WithContext("HideInstant");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "HideInstant", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScaleAnimator.ShowInstant
void GlobalNamespace::ScaleAnimator::ShowInstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ScaleAnimator").WithContext("ShowInstant");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ShowInstant", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScaleAnimator.Animate
void GlobalNamespace::ScaleAnimator::Animate(bool show, float duration, Tweening::EaseType easeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ScaleAnimator").WithContext("Animate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Animate", {}, ::il2cpp_utils::ExtractTypes(show, duration, easeType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, show, duration, easeType);
}
// Autogenerated method: ScaleAnimator.<InitIfNeeded>b__7_0
void GlobalNamespace::ScaleAnimator::$InitIfNeeded$b__7_0(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ScaleAnimator").WithContext("<InitIfNeeded>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "<InitIfNeeded>b__7_0", {}, ::il2cpp_utils::ExtractTypes(val))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: ScaleAnimator.<InitIfNeeded>b__7_1
void GlobalNamespace::ScaleAnimator::$InitIfNeeded$b__7_1(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ScaleAnimator").WithContext("<InitIfNeeded>b__7_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "<InitIfNeeded>b__7_1", {}, ::il2cpp_utils::ExtractTypes(val))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: ScaleAnimator.<InitIfNeeded>b__7_2
void GlobalNamespace::ScaleAnimator::$InitIfNeeded$b__7_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ScaleAnimator").WithContext("<InitIfNeeded>b__7_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "<InitIfNeeded>b__7_2", {}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScaleAnimator..ctor
GlobalNamespace::ScaleAnimator* GlobalNamespace::ScaleAnimator::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ScaleAnimator").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<ScaleAnimator*>());
}
