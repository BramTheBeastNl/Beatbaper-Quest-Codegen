// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelFilterModel
#include "GlobalNamespace/BeatmapLevelFilterModel.hpp"
// Including type: BeatmapLevelFilterModel/<>c__DisplayClass0_0
#include "GlobalNamespace/BeatmapLevelFilterModel_--c__DisplayClass0_0.hpp"
// Including type: BeatmapLevelFilterModel/<FilerBeatmapLevelPackCollectionAsync>d__0
#include "GlobalNamespace/BeatmapLevelFilterModel_-FilerBeatmapLevelPackCollectionAsync-d__0.hpp"
// Including type: BeatmapLevelFilterModel/<GetAllBeatmapLevelsAsync>d__2
#include "GlobalNamespace/BeatmapLevelFilterModel_-GetAllBeatmapLevelsAsync-d__2.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: LevelFilterParams
#include "GlobalNamespace/LevelFilterParams.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelFilterModel.FilerBeatmapLevelPackCollectionAsync
System::Threading::Tasks::Task_1<GlobalNamespace::IBeatmapLevelCollection*>* GlobalNamespace::BeatmapLevelFilterModel::FilerBeatmapLevelPackCollectionAsync(::Array<GlobalNamespace::IBeatmapLevelPack*>* beatmapLevelPacks, GlobalNamespace::LevelFilterParams* levelFilterParams, GlobalNamespace::PlayerDataModel* playerDataModel, GlobalNamespace::AdditionalContentModel* additionalContentModel, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapLevelFilterModel").WithContext("FilerBeatmapLevelPackCollectionAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapLevelFilterModel", "FilerBeatmapLevelPackCollectionAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapLevelPacks, levelFilterParams, playerDataModel, additionalContentModel, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::IBeatmapLevelCollection*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapLevelPacks, levelFilterParams, playerDataModel, additionalContentModel, cancellationToken);
}
// Autogenerated method: BeatmapLevelFilterModel.LevelContainsText
bool GlobalNamespace::BeatmapLevelFilterModel::LevelContainsText(GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel, ::Array<::Il2CppString*>* searchTexts) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapLevelFilterModel").WithContext("LevelContainsText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapLevelFilterModel", "LevelContainsText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapLevel, searchTexts)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapLevel, searchTexts);
}
// Autogenerated method: BeatmapLevelFilterModel.GetAllBeatmapLevelsAsync
System::Threading::Tasks::Task_1<System::Collections::Generic::List_1<GlobalNamespace::IPreviewBeatmapLevel*>*>* GlobalNamespace::BeatmapLevelFilterModel::GetAllBeatmapLevelsAsync(::Array<GlobalNamespace::IBeatmapLevelPack*>* beatmapLevelPacks, GlobalNamespace::SongPackMask songPackMask, bool onlyOwned, GlobalNamespace::AdditionalContentModel* additionalContentModel, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapLevelFilterModel").WithContext("GetAllBeatmapLevelsAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapLevelFilterModel", "GetAllBeatmapLevelsAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapLevelPacks, songPackMask, onlyOwned, additionalContentModel, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Collections::Generic::List_1<GlobalNamespace::IPreviewBeatmapLevel*>*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapLevelPacks, songPackMask, onlyOwned, additionalContentModel, cancellationToken);
}
