// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerConnectedPlayerLevelFailController
#include "GlobalNamespace/MultiplayerConnectedPlayerLevelFailController.hpp"
// Including type: VFXController
#include "GlobalNamespace/VFXController.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: BeatmapObjectSpawnController
#include "GlobalNamespace/BeatmapObjectSpawnController.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerConnectedPlayerLevelFailController.add_playerDidFailEvent
void GlobalNamespace::MultiplayerConnectedPlayerLevelFailController::add_playerDidFailEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_playerDidFailEvent", value));
}
// Autogenerated method: MultiplayerConnectedPlayerLevelFailController.remove_playerDidFailEvent
void GlobalNamespace::MultiplayerConnectedPlayerLevelFailController::remove_playerDidFailEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_playerDidFailEvent", value));
}
// Autogenerated method: MultiplayerConnectedPlayerLevelFailController.Start
void GlobalNamespace::MultiplayerConnectedPlayerLevelFailController::Start() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Start"));
}
// Autogenerated method: MultiplayerConnectedPlayerLevelFailController.OnDestroy
void GlobalNamespace::MultiplayerConnectedPlayerLevelFailController::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: MultiplayerConnectedPlayerLevelFailController.CheckIfPlayerFailed
void GlobalNamespace::MultiplayerConnectedPlayerLevelFailController::CheckIfPlayerFailed(GlobalNamespace::IConnectedPlayer* player) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "CheckIfPlayerFailed", player));
}
// Autogenerated method: MultiplayerConnectedPlayerLevelFailController.HandlePlayerDisconnected
void GlobalNamespace::MultiplayerConnectedPlayerLevelFailController::HandlePlayerDisconnected(GlobalNamespace::IConnectedPlayer* player) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePlayerDisconnected", player));
}
// Autogenerated method: MultiplayerConnectedPlayerLevelFailController.HandlePlayerStateChanged
void GlobalNamespace::MultiplayerConnectedPlayerLevelFailController::HandlePlayerStateChanged(GlobalNamespace::IConnectedPlayer* player) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePlayerStateChanged", player));
}
// Autogenerated method: MultiplayerConnectedPlayerLevelFailController..ctor
GlobalNamespace::MultiplayerConnectedPlayerLevelFailController* GlobalNamespace::MultiplayerConnectedPlayerLevelFailController::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<MultiplayerConnectedPlayerLevelFailController*>());
}
