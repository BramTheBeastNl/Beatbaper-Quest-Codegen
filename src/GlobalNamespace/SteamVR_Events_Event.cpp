// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamVR_Events/Event
#include "GlobalNamespace/SteamVR_Events_Event.hpp"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamVR_Events/Event.Listen
void GlobalNamespace::SteamVR_Events::Event::Listen(UnityEngine::Events::UnityAction* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("Event").WithContext("Listen");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Listen", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: SteamVR_Events/Event.Remove
void GlobalNamespace::SteamVR_Events::Event::Remove(UnityEngine::Events::UnityAction* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("Event").WithContext("Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(action)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: SteamVR_Events/Event.Send
void GlobalNamespace::SteamVR_Events::Event::Send() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("Event").WithContext("Send");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
