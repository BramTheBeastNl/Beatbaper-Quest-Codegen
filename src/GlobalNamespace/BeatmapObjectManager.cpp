// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: NoteRibbonController
#include "GlobalNamespace/NoteRibbonController.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: BeatmapObjectSpawnMovementData/ObstacleSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_ObstacleSpawnData.hpp"
// Including type: BeatmapObjectSpawnMovementData/NoteSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_NoteSpawnData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapObjectManager.add_noteWasSpawnedEvent
void GlobalNamespace::BeatmapObjectManager::add_noteWasSpawnedEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_noteWasSpawnedEvent", value));
}
// Autogenerated method: BeatmapObjectManager.remove_noteWasSpawnedEvent
void GlobalNamespace::BeatmapObjectManager::remove_noteWasSpawnedEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_noteWasSpawnedEvent", value));
}
// Autogenerated method: BeatmapObjectManager.add_noteWasMissedEvent
void GlobalNamespace::BeatmapObjectManager::add_noteWasMissedEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_noteWasMissedEvent", value));
}
// Autogenerated method: BeatmapObjectManager.remove_noteWasMissedEvent
void GlobalNamespace::BeatmapObjectManager::remove_noteWasMissedEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_noteWasMissedEvent", value));
}
// Autogenerated method: BeatmapObjectManager.add_noteWasCutEvent
void GlobalNamespace::BeatmapObjectManager::add_noteWasCutEvent(System::Action_2<GlobalNamespace::NoteController*, GlobalNamespace::NoteCutInfo*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_noteWasCutEvent", value));
}
// Autogenerated method: BeatmapObjectManager.remove_noteWasCutEvent
void GlobalNamespace::BeatmapObjectManager::remove_noteWasCutEvent(System::Action_2<GlobalNamespace::NoteController*, GlobalNamespace::NoteCutInfo*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_noteWasCutEvent", value));
}
// Autogenerated method: BeatmapObjectManager.add_noteDidStartJumpEvent
void GlobalNamespace::BeatmapObjectManager::add_noteDidStartJumpEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_noteDidStartJumpEvent", value));
}
// Autogenerated method: BeatmapObjectManager.remove_noteDidStartJumpEvent
void GlobalNamespace::BeatmapObjectManager::remove_noteDidStartJumpEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_noteDidStartJumpEvent", value));
}
// Autogenerated method: BeatmapObjectManager.add_obstacleWasSpawnedEvent
void GlobalNamespace::BeatmapObjectManager::add_obstacleWasSpawnedEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_obstacleWasSpawnedEvent", value));
}
// Autogenerated method: BeatmapObjectManager.remove_obstacleWasSpawnedEvent
void GlobalNamespace::BeatmapObjectManager::remove_obstacleWasSpawnedEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_obstacleWasSpawnedEvent", value));
}
// Autogenerated method: BeatmapObjectManager.add_obstacleDidPassThreeQuartersOfMove2Event
void GlobalNamespace::BeatmapObjectManager::add_obstacleDidPassThreeQuartersOfMove2Event(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_obstacleDidPassThreeQuartersOfMove2Event", value));
}
// Autogenerated method: BeatmapObjectManager.remove_obstacleDidPassThreeQuartersOfMove2Event
void GlobalNamespace::BeatmapObjectManager::remove_obstacleDidPassThreeQuartersOfMove2Event(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_obstacleDidPassThreeQuartersOfMove2Event", value));
}
// Autogenerated method: BeatmapObjectManager.add_obstacleDidPassAvoidedMarkEvent
void GlobalNamespace::BeatmapObjectManager::add_obstacleDidPassAvoidedMarkEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_obstacleDidPassAvoidedMarkEvent", value));
}
// Autogenerated method: BeatmapObjectManager.remove_obstacleDidPassAvoidedMarkEvent
void GlobalNamespace::BeatmapObjectManager::remove_obstacleDidPassAvoidedMarkEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_obstacleDidPassAvoidedMarkEvent", value));
}
// Autogenerated method: BeatmapObjectManager.get_activeObstacleControllers
System::Collections::Generic::HashSet_1<GlobalNamespace::ObstacleController*>* GlobalNamespace::BeatmapObjectManager::get_activeObstacleControllers() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::HashSet_1<GlobalNamespace::ObstacleController*>*>(this, "get_activeObstacleControllers"));
}
// Autogenerated method: BeatmapObjectManager.get_activeNoteRibbonControllers
System::Collections::Generic::HashSet_1<GlobalNamespace::NoteRibbonController*>* GlobalNamespace::BeatmapObjectManager::get_activeNoteRibbonControllers() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::HashSet_1<GlobalNamespace::NoteRibbonController*>*>(this, "get_activeNoteRibbonControllers"));
}
// Autogenerated method: BeatmapObjectManager.SpawnObstacleInternal
GlobalNamespace::ObstacleController* GlobalNamespace::BeatmapObjectManager::SpawnObstacleInternal(GlobalNamespace::ObstacleData* obstacleData, GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData obstacleSpawnData, float rotation) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::ObstacleController*>(this, "SpawnObstacleInternal", obstacleData, obstacleSpawnData, rotation));
}
// Autogenerated method: BeatmapObjectManager.SpawnBombNoteInternal
GlobalNamespace::NoteController* GlobalNamespace::BeatmapObjectManager::SpawnBombNoteInternal(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::NoteController*>(this, "SpawnBombNoteInternal", noteData, noteSpawnData, rotation));
}
// Autogenerated method: BeatmapObjectManager.SpawnBasicNoteInternal
GlobalNamespace::NoteController* GlobalNamespace::BeatmapObjectManager::SpawnBasicNoteInternal(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation, float cutDirectionAngleOffset) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::NoteController*>(this, "SpawnBasicNoteInternal", noteData, noteSpawnData, rotation, cutDirectionAngleOffset));
}
// Autogenerated method: BeatmapObjectManager.SpawnNoteRibbonInternal
GlobalNamespace::NoteRibbonController* GlobalNamespace::BeatmapObjectManager::SpawnNoteRibbonInternal(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, GlobalNamespace::NoteController* parentNoteController, float rotation, float cutDirectionAngleOffset) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::NoteRibbonController*>(this, "SpawnNoteRibbonInternal", noteData, noteSpawnData, parentNoteController, rotation, cutDirectionAngleOffset));
}
// Autogenerated method: BeatmapObjectManager.DespawnInternal
void GlobalNamespace::BeatmapObjectManager::DespawnInternal(GlobalNamespace::NoteController* noteController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DespawnInternal", noteController));
}
// Autogenerated method: BeatmapObjectManager.DespawnInternal
void GlobalNamespace::BeatmapObjectManager::DespawnInternal(GlobalNamespace::ObstacleController* obstacleController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DespawnInternal", obstacleController));
}
// Autogenerated method: BeatmapObjectManager.DespawnInternal
void GlobalNamespace::BeatmapObjectManager::DespawnInternal(GlobalNamespace::NoteRibbonController* noteRibbonController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DespawnInternal", noteRibbonController));
}
// Autogenerated method: BeatmapObjectManager.get_spawnHidden
bool GlobalNamespace::BeatmapObjectManager::get_spawnHidden() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_spawnHidden"));
}
// Autogenerated method: BeatmapObjectManager.set_spawnHidden
void GlobalNamespace::BeatmapObjectManager::set_spawnHidden(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_spawnHidden", value));
}
// Autogenerated method: BeatmapObjectManager.SetNoteControllerEventCallbacks
void GlobalNamespace::BeatmapObjectManager::SetNoteControllerEventCallbacks(GlobalNamespace::NoteController* noteController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetNoteControllerEventCallbacks", noteController));
}
// Autogenerated method: BeatmapObjectManager.RemoveNoteControllerEventCallbacks
void GlobalNamespace::BeatmapObjectManager::RemoveNoteControllerEventCallbacks(GlobalNamespace::NoteController* noteController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RemoveNoteControllerEventCallbacks", noteController));
}
// Autogenerated method: BeatmapObjectManager.SetNoteRibbonControllerEventCallbacks
void GlobalNamespace::BeatmapObjectManager::SetNoteRibbonControllerEventCallbacks(GlobalNamespace::NoteRibbonController* noteRibbonController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetNoteRibbonControllerEventCallbacks", noteRibbonController));
}
// Autogenerated method: BeatmapObjectManager.RemoveNoteRibbonControllerEventCallbacks
void GlobalNamespace::BeatmapObjectManager::RemoveNoteRibbonControllerEventCallbacks(GlobalNamespace::NoteRibbonController* noteRibbonController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RemoveNoteRibbonControllerEventCallbacks", noteRibbonController));
}
// Autogenerated method: BeatmapObjectManager.SetObstacleEventCallbacks
void GlobalNamespace::BeatmapObjectManager::SetObstacleEventCallbacks(GlobalNamespace::ObstacleController* obstacleController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetObstacleEventCallbacks", obstacleController));
}
// Autogenerated method: BeatmapObjectManager.RemoveObstacleEventCallbacks
void GlobalNamespace::BeatmapObjectManager::RemoveObstacleEventCallbacks(GlobalNamespace::ObstacleController* obstacleController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RemoveObstacleEventCallbacks", obstacleController));
}
// Autogenerated method: BeatmapObjectManager.Despawn
void GlobalNamespace::BeatmapObjectManager::Despawn(GlobalNamespace::NoteController* noteController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Despawn", noteController));
}
// Autogenerated method: BeatmapObjectManager.Despawn
void GlobalNamespace::BeatmapObjectManager::Despawn(GlobalNamespace::ObstacleController* obstacleController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Despawn", obstacleController));
}
// Autogenerated method: BeatmapObjectManager.Despawn
void GlobalNamespace::BeatmapObjectManager::Despawn(GlobalNamespace::NoteRibbonController* noteRibbonController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Despawn", noteRibbonController));
}
// Autogenerated method: BeatmapObjectManager.HandleNoteDidStartJump
void GlobalNamespace::BeatmapObjectManager::HandleNoteDidStartJump(GlobalNamespace::NoteController* noteController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleNoteDidStartJump", noteController));
}
// Autogenerated method: BeatmapObjectManager.HandleNoteWasMissed
void GlobalNamespace::BeatmapObjectManager::HandleNoteWasMissed(GlobalNamespace::NoteController* noteController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleNoteWasMissed", noteController));
}
// Autogenerated method: BeatmapObjectManager.HandleNoteDidFinishJump
void GlobalNamespace::BeatmapObjectManager::HandleNoteDidFinishJump(GlobalNamespace::NoteController* noteController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleNoteDidFinishJump", noteController));
}
// Autogenerated method: BeatmapObjectManager.HandleNoteDidDissolve
void GlobalNamespace::BeatmapObjectManager::HandleNoteDidDissolve(GlobalNamespace::NoteController* noteController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleNoteDidDissolve", noteController));
}
// Autogenerated method: BeatmapObjectManager.HandleNoteWasCut
void GlobalNamespace::BeatmapObjectManager::HandleNoteWasCut(GlobalNamespace::NoteController* noteController, GlobalNamespace::NoteCutInfo* noteCutInfo) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleNoteWasCut", noteController, noteCutInfo));
}
// Autogenerated method: BeatmapObjectManager.HandleNoteRibbonDidFinishMovement
void GlobalNamespace::BeatmapObjectManager::HandleNoteRibbonDidFinishMovement(GlobalNamespace::NoteRibbonController* noteRibbonController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleNoteRibbonDidFinishMovement", noteRibbonController));
}
// Autogenerated method: BeatmapObjectManager.HandleNoteRibbonDidDissolve
void GlobalNamespace::BeatmapObjectManager::HandleNoteRibbonDidDissolve(GlobalNamespace::NoteRibbonController* noteRibbonController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleNoteRibbonDidDissolve", noteRibbonController));
}
// Autogenerated method: BeatmapObjectManager.HandleObstaclePassedThreeQuartersOfMove2
void GlobalNamespace::BeatmapObjectManager::HandleObstaclePassedThreeQuartersOfMove2(GlobalNamespace::ObstacleController* obstacleController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleObstaclePassedThreeQuartersOfMove2", obstacleController));
}
// Autogenerated method: BeatmapObjectManager.HandleObstaclePassedAvoidedMark
void GlobalNamespace::BeatmapObjectManager::HandleObstaclePassedAvoidedMark(GlobalNamespace::ObstacleController* obstacleController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleObstaclePassedAvoidedMark", obstacleController));
}
// Autogenerated method: BeatmapObjectManager.HandleObstacleFinishedMovement
void GlobalNamespace::BeatmapObjectManager::HandleObstacleFinishedMovement(GlobalNamespace::ObstacleController* obstacleController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleObstacleFinishedMovement", obstacleController));
}
// Autogenerated method: BeatmapObjectManager.HandleObstacleDidDissolve
void GlobalNamespace::BeatmapObjectManager::HandleObstacleDidDissolve(GlobalNamespace::ObstacleController* obstacleController) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleObstacleDidDissolve", obstacleController));
}
// Autogenerated method: BeatmapObjectManager.DissolveAllObjects
void GlobalNamespace::BeatmapObjectManager::DissolveAllObjects() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DissolveAllObjects"));
}
// Autogenerated method: BeatmapObjectManager.HideAllBeatmapObjects
void GlobalNamespace::BeatmapObjectManager::HideAllBeatmapObjects(bool hide) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HideAllBeatmapObjects", hide));
}
// Autogenerated method: BeatmapObjectManager.PauseAllBeatmapObjects
void GlobalNamespace::BeatmapObjectManager::PauseAllBeatmapObjects(bool pause) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PauseAllBeatmapObjects", pause));
}
// Autogenerated method: BeatmapObjectManager.SpawnObstacle
GlobalNamespace::ObstacleController* GlobalNamespace::BeatmapObjectManager::SpawnObstacle(GlobalNamespace::ObstacleData* obstacleData, GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData obstacleSpawnData, float rotation) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::ObstacleController*>(this, "SpawnObstacle", obstacleData, obstacleSpawnData, rotation));
}
// Autogenerated method: BeatmapObjectManager.SpawnBombNote
GlobalNamespace::NoteController* GlobalNamespace::BeatmapObjectManager::SpawnBombNote(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::NoteController*>(this, "SpawnBombNote", noteData, noteSpawnData, rotation));
}
// Autogenerated method: BeatmapObjectManager.SpawnBasicNote
GlobalNamespace::NoteController* GlobalNamespace::BeatmapObjectManager::SpawnBasicNote(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation, float cutDirectionAngleOffset) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::NoteController*>(this, "SpawnBasicNote", noteData, noteSpawnData, rotation, cutDirectionAngleOffset));
}
// Autogenerated method: BeatmapObjectManager.SpawnNoteRibbon
GlobalNamespace::NoteRibbonController* GlobalNamespace::BeatmapObjectManager::SpawnNoteRibbon(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, GlobalNamespace::NoteController* parentNoteController, float rotation, float cutDirectionAngleOffset) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::NoteRibbonController*>(this, "SpawnNoteRibbon", noteData, noteSpawnData, parentNoteController, rotation, cutDirectionAngleOffset));
}
// Autogenerated method: BeatmapObjectManager..ctor
GlobalNamespace::BeatmapObjectManager* GlobalNamespace::BeatmapObjectManager::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<BeatmapObjectManager*>());
}
