// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerVerticalPlayerMovementManager
#include "GlobalNamespace/MultiplayerVerticalPlayerMovementManager.hpp"
// Including type: MultiplayerPlayersManager
#include "GlobalNamespace/MultiplayerPlayersManager.hpp"
// Including type: MultiplayerLayoutProvider
#include "GlobalNamespace/MultiplayerLayoutProvider.hpp"
// Including type: MultiplayerScoreProvider/RankedPlayer
#include "GlobalNamespace/MultiplayerScoreProvider_RankedPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerVerticalPlayerMovementManager.Start
void GlobalNamespace::MultiplayerVerticalPlayerMovementManager::Start() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Start"));
}
// Autogenerated method: MultiplayerVerticalPlayerMovementManager.OnDestroy
void GlobalNamespace::MultiplayerVerticalPlayerMovementManager::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: MultiplayerVerticalPlayerMovementManager.Update
void GlobalNamespace::MultiplayerVerticalPlayerMovementManager::Update() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Update"));
}
// Autogenerated method: MultiplayerVerticalPlayerMovementManager.HandleStateChanged
void GlobalNamespace::MultiplayerVerticalPlayerMovementManager::HandleStateChanged(GlobalNamespace::MultiplayerController::State state) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleStateChanged", state));
}
// Autogenerated method: MultiplayerVerticalPlayerMovementManager..ctor
GlobalNamespace::MultiplayerVerticalPlayerMovementManager* GlobalNamespace::MultiplayerVerticalPlayerMovementManager::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<MultiplayerVerticalPlayerMovementManager*>());
}
