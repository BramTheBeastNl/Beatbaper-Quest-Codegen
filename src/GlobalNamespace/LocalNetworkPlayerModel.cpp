// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkPlayerModel
#include "GlobalNamespace/LocalNetworkPlayerModel.hpp"
// Including type: LocalNetworkPlayerModel/LocalNetworkFlags
#include "GlobalNamespace/LocalNetworkPlayerModel_LocalNetworkFlags.hpp"
// Including type: LocalNetworkPlayerModel/LocalNetworkPlayer
#include "GlobalNamespace/LocalNetworkPlayerModel_LocalNetworkPlayer.hpp"
// Including type: LocalNetworkPlayerModel/CreatePartyConfig
#include "GlobalNamespace/LocalNetworkPlayerModel_CreatePartyConfig.hpp"
// Including type: LocalNetworkPlayerModel/<Start>d__44
#include "GlobalNamespace/LocalNetworkPlayerModel_-Start-d__44.hpp"
// Including type: LocalNetworkDiscoveryManager
#include "GlobalNamespace/LocalNetworkDiscoveryManager.hpp"
// Including type: IPlatformUserModel
#include "GlobalNamespace/IPlatformUserModel.hpp"
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: LiteNetLibConnectionManager
#include "GlobalNamespace/LiteNetLibConnectionManager.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
// Including type: INetworkPlayerModelPartyConfig`1
#include "GlobalNamespace/INetworkPlayerModelPartyConfig_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalNetworkPlayerModel.get_canInvitePlayers
bool GlobalNamespace::LocalNetworkPlayerModel::get_canInvitePlayers() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_canInvitePlayers"));
}
// Autogenerated method: LocalNetworkPlayerModel.get_hasConnectedPeers
bool GlobalNamespace::LocalNetworkPlayerModel::get_hasConnectedPeers() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_hasConnectedPeers"));
}
// Autogenerated method: LocalNetworkPlayerModel.get_hasNetworkingFailed
bool GlobalNamespace::LocalNetworkPlayerModel::get_hasNetworkingFailed() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_hasNetworkingFailed"));
}
// Autogenerated method: LocalNetworkPlayerModel.get_liteNetLibConnectionManager
GlobalNamespace::LiteNetLibConnectionManager* GlobalNamespace::LocalNetworkPlayerModel::get_liteNetLibConnectionManager() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::LiteNetLibConnectionManager*>(this, "get_liteNetLibConnectionManager"));
}
// Autogenerated method: LocalNetworkPlayerModel.TryGetPlayer
bool GlobalNamespace::LocalNetworkPlayerModel::TryGetPlayer(::Il2CppString* userId, GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*& player) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "TryGetPlayer", userId, player));
}
// Autogenerated method: LocalNetworkPlayerModel.GetPlayer
GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* GlobalNamespace::LocalNetworkPlayerModel::GetPlayer(::Il2CppString* userId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*>(this, "GetPlayer", userId));
}
// Autogenerated method: LocalNetworkPlayerModel.RefreshLocalPlayer
void GlobalNamespace::LocalNetworkPlayerModel::RefreshLocalPlayer(bool forcePlayersChanged) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RefreshLocalPlayer", forcePlayersChanged));
}
// Autogenerated method: LocalNetworkPlayerModel.HandlePeerUpdate
void GlobalNamespace::LocalNetworkPlayerModel::HandlePeerUpdate(::Il2CppString* userId, System::Net::IPAddress* ipAddress, ::Il2CppString* encryptedUserName, int currentPartySize, int maxPartySize, uint8_t flags, GlobalNamespace::GameplayServerConfiguration configuration) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePeerUpdate", userId, ipAddress, encryptedUserName, currentPartySize, maxPartySize, flags, configuration));
}
// Autogenerated method: LocalNetworkPlayerModel.SendJoinRequest
void GlobalNamespace::LocalNetworkPlayerModel::SendJoinRequest(GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SendJoinRequest", player));
}
// Autogenerated method: LocalNetworkPlayerModel.HandleJoinRequest
void GlobalNamespace::LocalNetworkPlayerModel::HandleJoinRequest(::Il2CppString* userId, System::Net::IPAddress* ipAddress, ::Il2CppString* encryptedUserName, uint8_t flags) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleJoinRequest", userId, ipAddress, encryptedUserName, flags));
}
// Autogenerated method: LocalNetworkPlayerModel.SendJoinResponse
void GlobalNamespace::LocalNetworkPlayerModel::SendJoinResponse(GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player, bool allowJoin) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SendJoinResponse", player, allowJoin));
}
// Autogenerated method: LocalNetworkPlayerModel.HandleJoinResponse
void GlobalNamespace::LocalNetworkPlayerModel::HandleJoinResponse(::Il2CppString* id, ::Il2CppString* secret, int multiplayerPort, bool blocked) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleJoinResponse", id, secret, multiplayerPort, blocked));
}
// Autogenerated method: LocalNetworkPlayerModel.SendInviteRequest
void GlobalNamespace::LocalNetworkPlayerModel::SendInviteRequest(GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SendInviteRequest", player));
}
// Autogenerated method: LocalNetworkPlayerModel.HandleInviteRequest
void GlobalNamespace::LocalNetworkPlayerModel::HandleInviteRequest(::Il2CppString* userId, System::Net::IPAddress* ipAddress, ::Il2CppString* encryptedUserName, ::Il2CppString* secret, int multiplayerPort, uint8_t flags) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleInviteRequest", userId, ipAddress, encryptedUserName, secret, multiplayerPort, flags));
}
// Autogenerated method: LocalNetworkPlayerModel.SendInviteResponse
void GlobalNamespace::LocalNetworkPlayerModel::SendInviteResponse(GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player, bool acceptInvite) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SendInviteResponse", player, acceptInvite));
}
// Autogenerated method: LocalNetworkPlayerModel.HandleInviteResponse
void GlobalNamespace::LocalNetworkPlayerModel::HandleInviteResponse(::Il2CppString* userId, bool accepted, bool blocked) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleInviteResponse", userId, accepted, blocked));
}
// Autogenerated method: LocalNetworkPlayerModel.ConnectToPeer
void GlobalNamespace::LocalNetworkPlayerModel::ConnectToPeer(GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ConnectToPeer", player));
}
// Autogenerated method: LocalNetworkPlayerModel.DisconnectPeer
void GlobalNamespace::LocalNetworkPlayerModel::DisconnectPeer(GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DisconnectPeer", player));
}
// Autogenerated method: LocalNetworkPlayerModel.HandlePlayersChanged
void GlobalNamespace::LocalNetworkPlayerModel::HandlePlayersChanged() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandlePlayersChanged"));
}
// Autogenerated method: LocalNetworkPlayerModel.TryStartServer
void GlobalNamespace::LocalNetworkPlayerModel::TryStartServer() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "TryStartServer"));
}
// Autogenerated method: LocalNetworkPlayerModel.get_currentPartySize
int GlobalNamespace::LocalNetworkPlayerModel::get_currentPartySize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_currentPartySize"));
}
// Autogenerated method: LocalNetworkPlayerModel.get_discoveryEnabled
bool GlobalNamespace::LocalNetworkPlayerModel::get_discoveryEnabled() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_discoveryEnabled"));
}
// Autogenerated method: LocalNetworkPlayerModel.set_discoveryEnabled
void GlobalNamespace::LocalNetworkPlayerModel::set_discoveryEnabled(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_discoveryEnabled", value));
}
// Autogenerated method: LocalNetworkPlayerModel.add_partySizeChangedEvent
void GlobalNamespace::LocalNetworkPlayerModel::add_partySizeChangedEvent(System::Action_1<int>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_partySizeChangedEvent", value));
}
// Autogenerated method: LocalNetworkPlayerModel.remove_partySizeChangedEvent
void GlobalNamespace::LocalNetworkPlayerModel::remove_partySizeChangedEvent(System::Action_1<int>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_partySizeChangedEvent", value));
}
// Autogenerated method: LocalNetworkPlayerModel.add_partyChangedEvent
void GlobalNamespace::LocalNetworkPlayerModel::add_partyChangedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_partyChangedEvent", value));
}
// Autogenerated method: LocalNetworkPlayerModel.remove_partyChangedEvent
void GlobalNamespace::LocalNetworkPlayerModel::remove_partyChangedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_partyChangedEvent", value));
}
// Autogenerated method: LocalNetworkPlayerModel.add_joinRequestedEvent
void GlobalNamespace::LocalNetworkPlayerModel::add_joinRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_joinRequestedEvent", value));
}
// Autogenerated method: LocalNetworkPlayerModel.remove_joinRequestedEvent
void GlobalNamespace::LocalNetworkPlayerModel::remove_joinRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_joinRequestedEvent", value));
}
// Autogenerated method: LocalNetworkPlayerModel.add_inviteRequestedEvent
void GlobalNamespace::LocalNetworkPlayerModel::add_inviteRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_inviteRequestedEvent", value));
}
// Autogenerated method: LocalNetworkPlayerModel.remove_inviteRequestedEvent
void GlobalNamespace::LocalNetworkPlayerModel::remove_inviteRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_inviteRequestedEvent", value));
}
// Autogenerated method: LocalNetworkPlayerModel.get_localPlayerIsPartyOwner
bool GlobalNamespace::LocalNetworkPlayerModel::get_localPlayerIsPartyOwner() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_localPlayerIsPartyOwner"));
}
// Autogenerated method: LocalNetworkPlayerModel.get_localPlayer
GlobalNamespace::INetworkPlayer* GlobalNamespace::LocalNetworkPlayerModel::get_localPlayer() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::INetworkPlayer*>(this, "get_localPlayer"));
}
// Autogenerated method: LocalNetworkPlayerModel.get_otherPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::LocalNetworkPlayerModel::get_otherPlayers() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*>(this, "get_otherPlayers"));
}
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::LocalNetworkPlayerModel::GlobalNamespace_INetworkPlayerModel_get_otherPlayers() {
  return GlobalNamespace::LocalNetworkPlayerModel::get_otherPlayers();
}
// Redundant proxy method!
// ABORTED: conflicts with another method. System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::LocalNetworkPlayerModel::GlobalNamespace_INetworkPlayerModel_get_otherPlayers()
// Autogenerated method: LocalNetworkPlayerModel.Start
void GlobalNamespace::LocalNetworkPlayerModel::Start() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Start"));
}
// Autogenerated method: LocalNetworkPlayerModel.Update
void GlobalNamespace::LocalNetworkPlayerModel::Update() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Update"));
}
// Autogenerated method: LocalNetworkPlayerModel.OnDestroy
void GlobalNamespace::LocalNetworkPlayerModel::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: LocalNetworkPlayerModel.GetPartyPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::LocalNetworkPlayerModel::GetPartyPlayers() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*>(this, "GetPartyPlayers"));
}
// Autogenerated method: LocalNetworkPlayerModel.GetOtherPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::LocalNetworkPlayerModel::GetOtherPlayers() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*>(this, "GetOtherPlayers"));
}
// Autogenerated method: LocalNetworkPlayerModel.PlayerConnected
void GlobalNamespace::LocalNetworkPlayerModel::PlayerConnected(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PlayerConnected", connectedPlayer));
}
// Autogenerated method: LocalNetworkPlayerModel.ConnectionFailed
void GlobalNamespace::LocalNetworkPlayerModel::ConnectionFailed(GlobalNamespace::ConnectionFailedReason reason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ConnectionFailed", reason));
}
// Autogenerated method: LocalNetworkPlayerModel.PlayerDisconnected
void GlobalNamespace::LocalNetworkPlayerModel::PlayerDisconnected(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PlayerDisconnected", connectedPlayer));
}
// Autogenerated method: LocalNetworkPlayerModel.PlayerStateChanged
void GlobalNamespace::LocalNetworkPlayerModel::PlayerStateChanged(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PlayerStateChanged", connectedPlayer));
}
// Autogenerated method: LocalNetworkPlayerModel.PartySizeChanged
void GlobalNamespace::LocalNetworkPlayerModel::PartySizeChanged(int currentPartySize) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PartySizeChanged", currentPartySize));
}
// Autogenerated method: LocalNetworkPlayerModel.DestroyParty
void GlobalNamespace::LocalNetworkPlayerModel::DestroyParty() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DestroyParty"));
}
// Autogenerated method: LocalNetworkPlayerModel.Disconnect
void GlobalNamespace::LocalNetworkPlayerModel::Disconnect() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Disconnect"));
}
// Autogenerated method: LocalNetworkPlayerModel.ConnectedPlayerManagerChanged
void GlobalNamespace::LocalNetworkPlayerModel::ConnectedPlayerManagerChanged() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ConnectedPlayerManagerChanged"));
}
// Autogenerated method: LocalNetworkPlayerModel..ctor
GlobalNamespace::LocalNetworkPlayerModel* GlobalNamespace::LocalNetworkPlayerModel::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<LocalNetworkPlayerModel*>());
}
