// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamVR_Frustum
#include "GlobalNamespace/SteamVR_Frustum.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamVR_Frustum.UpdateModel
void GlobalNamespace::SteamVR_Frustum::UpdateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Frustum").WithContext("UpdateModel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateModel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Frustum.OnDeviceConnected
void GlobalNamespace::SteamVR_Frustum::OnDeviceConnected(int i, bool connected) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Frustum").WithContext("OnDeviceConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDeviceConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i, connected)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, i, connected);
}
// Autogenerated method: SteamVR_Frustum.OnEnable
void GlobalNamespace::SteamVR_Frustum::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Frustum").WithContext("OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_Frustum.OnDisable
void GlobalNamespace::SteamVR_Frustum::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_Frustum").WithContext("OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
