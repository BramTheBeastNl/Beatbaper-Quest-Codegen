// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDifficultyMask
#include "GlobalNamespace/BeatmapDifficultyMask.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapDifficultyMask Easy
GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::BeatmapDifficultyMask::_get_Easy() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDifficultyMask").WithContext("_get_Easy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapDifficultyMask>("", "BeatmapDifficultyMask", "Easy"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapDifficultyMask Easy
void GlobalNamespace::BeatmapDifficultyMask::_set_Easy(GlobalNamespace::BeatmapDifficultyMask value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDifficultyMask").WithContext("_set_Easy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficultyMask", "Easy", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapDifficultyMask Normal
GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::BeatmapDifficultyMask::_get_Normal() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDifficultyMask").WithContext("_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapDifficultyMask>("", "BeatmapDifficultyMask", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapDifficultyMask Normal
void GlobalNamespace::BeatmapDifficultyMask::_set_Normal(GlobalNamespace::BeatmapDifficultyMask value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDifficultyMask").WithContext("_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficultyMask", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapDifficultyMask Hard
GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::BeatmapDifficultyMask::_get_Hard() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDifficultyMask").WithContext("_get_Hard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapDifficultyMask>("", "BeatmapDifficultyMask", "Hard"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapDifficultyMask Hard
void GlobalNamespace::BeatmapDifficultyMask::_set_Hard(GlobalNamespace::BeatmapDifficultyMask value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDifficultyMask").WithContext("_set_Hard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficultyMask", "Hard", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapDifficultyMask Expert
GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::BeatmapDifficultyMask::_get_Expert() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDifficultyMask").WithContext("_get_Expert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapDifficultyMask>("", "BeatmapDifficultyMask", "Expert"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapDifficultyMask Expert
void GlobalNamespace::BeatmapDifficultyMask::_set_Expert(GlobalNamespace::BeatmapDifficultyMask value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDifficultyMask").WithContext("_set_Expert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficultyMask", "Expert", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapDifficultyMask ExpertPlus
GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::BeatmapDifficultyMask::_get_ExpertPlus() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDifficultyMask").WithContext("_get_ExpertPlus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapDifficultyMask>("", "BeatmapDifficultyMask", "ExpertPlus"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapDifficultyMask ExpertPlus
void GlobalNamespace::BeatmapDifficultyMask::_set_ExpertPlus(GlobalNamespace::BeatmapDifficultyMask value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDifficultyMask").WithContext("_set_ExpertPlus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficultyMask", "ExpertPlus", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapDifficultyMask All
GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::BeatmapDifficultyMask::_get_All() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDifficultyMask").WithContext("_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapDifficultyMask>("", "BeatmapDifficultyMask", "All"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapDifficultyMask All
void GlobalNamespace::BeatmapDifficultyMask::_set_All(GlobalNamespace::BeatmapDifficultyMask value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDifficultyMask").WithContext("_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficultyMask", "All", value));
}
