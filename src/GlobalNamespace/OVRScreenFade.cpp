// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRScreenFade
#include "GlobalNamespace/OVRScreenFade.hpp"
// Including type: OVRScreenFade/<Fade>d__20
#include "GlobalNamespace/OVRScreenFade_-Fade-d__20.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRScreenFade.get_currentAlpha
float GlobalNamespace::OVRScreenFade::get_currentAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRScreenFade").WithContext("get_currentAlpha");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_currentAlpha", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRScreenFade.set_currentAlpha
void GlobalNamespace::OVRScreenFade::set_currentAlpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRScreenFade").WithContext("set_currentAlpha");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_currentAlpha", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRScreenFade.Start
void GlobalNamespace::OVRScreenFade::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRScreenFade").WithContext("Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScreenFade.FadeOut
void GlobalNamespace::OVRScreenFade::FadeOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRScreenFade").WithContext("FadeOut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FadeOut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScreenFade.OnLevelFinishedLoading
void GlobalNamespace::OVRScreenFade::OnLevelFinishedLoading(int level) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRScreenFade").WithContext("OnLevelFinishedLoading");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnLevelFinishedLoading", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(level)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level);
}
// Autogenerated method: OVRScreenFade.OnEnable
void GlobalNamespace::OVRScreenFade::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRScreenFade").WithContext("OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScreenFade.OnDestroy
void GlobalNamespace::OVRScreenFade::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRScreenFade").WithContext("OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRScreenFade.SetUIFade
void GlobalNamespace::OVRScreenFade::SetUIFade(float level) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRScreenFade").WithContext("SetUIFade");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetUIFade", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(level)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level);
}
// Autogenerated method: OVRScreenFade.SetFadeLevel
void GlobalNamespace::OVRScreenFade::SetFadeLevel(float level) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRScreenFade").WithContext("SetFadeLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetFadeLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(level)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level);
}
// Autogenerated method: OVRScreenFade.Fade
System::Collections::IEnumerator* GlobalNamespace::OVRScreenFade::Fade(float startAlpha, float endAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRScreenFade").WithContext("Fade");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Fade", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(startAlpha, endAlpha)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, startAlpha, endAlpha);
}
// Autogenerated method: OVRScreenFade.SetMaterialAlpha
void GlobalNamespace::OVRScreenFade::SetMaterialAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRScreenFade").WithContext("SetMaterialAlpha");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetMaterialAlpha", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
