// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MockScoreSyncStateManager
#include "GlobalNamespace/MockScoreSyncStateManager.hpp"
// Including type: MultiplayerMockSettings
#include "GlobalNamespace/MultiplayerMockSettings.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: MockStandardScoreSyncState
#include "GlobalNamespace/MockStandardScoreSyncState.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: LocalMultiplayerSyncState`3
#include "GlobalNamespace/LocalMultiplayerSyncState_3.hpp"
// Including type: MockPlayer
#include "GlobalNamespace/MockPlayer.hpp"
// Including type: MultiplayerSyncState`3
#include "GlobalNamespace/MultiplayerSyncState_3.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MockScoreSyncStateManager.get_localState
GlobalNamespace::LocalMultiplayerSyncState_3<GlobalNamespace::StandardScoreSyncState, GlobalNamespace::StandardScoreSyncState::Score, int>* GlobalNamespace::MockScoreSyncStateManager::get_localState() {
  return THROW_UNLESS((il2cpp_utils::RunMethod<GlobalNamespace::LocalMultiplayerSyncState_3<GlobalNamespace::StandardScoreSyncState, GlobalNamespace::StandardScoreSyncState::Score, int>*>(this, "get_localState")));
}
// Autogenerated method: MockScoreSyncStateManager.Init
void GlobalNamespace::MockScoreSyncStateManager::Init() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Init"));
}
// Autogenerated method: MockScoreSyncStateManager.SetAudioTimeSource
void GlobalNamespace::MockScoreSyncStateManager::SetAudioTimeSource(GlobalNamespace::IAudioTimeSource* audioTimeSource) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetAudioTimeSource", audioTimeSource));
}
// Autogenerated method: MockScoreSyncStateManager.Update
void GlobalNamespace::MockScoreSyncStateManager::Update() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Update"));
}
// Autogenerated method: MockScoreSyncStateManager.UpdatePlayer
void GlobalNamespace::MockScoreSyncStateManager::UpdatePlayer(GlobalNamespace::MockPlayer* connectedPlayer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdatePlayer", connectedPlayer));
}
// Autogenerated method: MockScoreSyncStateManager.GetSyncStateForPlayer
GlobalNamespace::MultiplayerSyncState_3<GlobalNamespace::StandardScoreSyncState, GlobalNamespace::StandardScoreSyncState::Score, int>* GlobalNamespace::MockScoreSyncStateManager::GetSyncStateForPlayer(GlobalNamespace::IConnectedPlayer* player) {
  return THROW_UNLESS((il2cpp_utils::RunMethod<GlobalNamespace::MultiplayerSyncState_3<GlobalNamespace::StandardScoreSyncState, GlobalNamespace::StandardScoreSyncState::Score, int>*>(this, "GetSyncStateForPlayer", player)));
}
// Autogenerated method: MockScoreSyncStateManager.GetSyncState
GlobalNamespace::MultiplayerSyncState_3<GlobalNamespace::StandardScoreSyncState, GlobalNamespace::StandardScoreSyncState::Score, int>* GlobalNamespace::MockScoreSyncStateManager::GetSyncState(int i) {
  return THROW_UNLESS((il2cpp_utils::RunMethod<GlobalNamespace::MultiplayerSyncState_3<GlobalNamespace::StandardScoreSyncState, GlobalNamespace::StandardScoreSyncState::Score, int>*>(this, "GetSyncState", i)));
}
// Autogenerated method: MockScoreSyncStateManager.Interpolate
int GlobalNamespace::MockScoreSyncStateManager::Interpolate(int prev, float pt, int curr, float ct, float t) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "Interpolate", prev, pt, curr, ct, t));
}
// Autogenerated method: MockScoreSyncStateManager.Smooth
int GlobalNamespace::MockScoreSyncStateManager::Smooth(int prev, int curr, float t) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "Smooth", prev, curr, t));
}
// Autogenerated method: MockScoreSyncStateManager.HandleStateChanged
void GlobalNamespace::MockScoreSyncStateManager::HandleStateChanged(GlobalNamespace::MultiplayerController::State state) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleStateChanged", state));
}
// Autogenerated method: MockScoreSyncStateManager.get_syncTime
float GlobalNamespace::MockScoreSyncStateManager::get_syncTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_syncTime"));
}
// Autogenerated method: MockScoreSyncStateManager.get_connectedPlayerCount
int GlobalNamespace::MockScoreSyncStateManager::get_connectedPlayerCount() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_connectedPlayerCount"));
}
// Autogenerated method: MockScoreSyncStateManager..ctor
GlobalNamespace::MockScoreSyncStateManager* GlobalNamespace::MockScoreSyncStateManager::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<MockScoreSyncStateManager*>());
}
