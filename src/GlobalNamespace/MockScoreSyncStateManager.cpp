// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MockScoreSyncStateManager
#include "GlobalNamespace/MockScoreSyncStateManager.hpp"
// Including type: MultiplayerMockSettings
#include "GlobalNamespace/MultiplayerMockSettings.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: MockStandardScoreSyncState
#include "GlobalNamespace/MockStandardScoreSyncState.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: LocalMultiplayerSyncState`3
#include "GlobalNamespace/LocalMultiplayerSyncState_3.hpp"
// Including type: MockPlayer
#include "GlobalNamespace/MockPlayer.hpp"
// Including type: MultiplayerSyncState`3
#include "GlobalNamespace/MultiplayerSyncState_3.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MockScoreSyncStateManager.get_localState
GlobalNamespace::LocalMultiplayerSyncState_3<GlobalNamespace::StandardScoreSyncState, GlobalNamespace::StandardScoreSyncState_Score, int>* GlobalNamespace::MockScoreSyncStateManager::get_localState() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MockScoreSyncStateManager").WithContext("get_localState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LocalMultiplayerSyncState_3<GlobalNamespace::StandardScoreSyncState, GlobalNamespace::StandardScoreSyncState_Score, int>*, false>(this, ___internal__method);
}
// Autogenerated method: MockScoreSyncStateManager.Init
void GlobalNamespace::MockScoreSyncStateManager::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MockScoreSyncStateManager").WithContext("Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MockScoreSyncStateManager.SetAudioTimeSource
void GlobalNamespace::MockScoreSyncStateManager::SetAudioTimeSource(GlobalNamespace::IAudioTimeSource* audioTimeSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MockScoreSyncStateManager").WithContext("SetAudioTimeSource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetAudioTimeSource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(audioTimeSource)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, audioTimeSource);
}
// Autogenerated method: MockScoreSyncStateManager.Update
void GlobalNamespace::MockScoreSyncStateManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MockScoreSyncStateManager").WithContext("Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MockScoreSyncStateManager.UpdatePlayer
void GlobalNamespace::MockScoreSyncStateManager::UpdatePlayer(GlobalNamespace::MockPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MockScoreSyncStateManager").WithContext("UpdatePlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdatePlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connectedPlayer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: MockScoreSyncStateManager.GetSyncStateForPlayer
GlobalNamespace::MultiplayerSyncState_3<GlobalNamespace::StandardScoreSyncState, GlobalNamespace::StandardScoreSyncState_Score, int>* GlobalNamespace::MockScoreSyncStateManager::GetSyncStateForPlayer(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MockScoreSyncStateManager").WithContext("GetSyncStateForPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSyncStateForPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(player)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerSyncState_3<GlobalNamespace::StandardScoreSyncState, GlobalNamespace::StandardScoreSyncState_Score, int>*, false>(this, ___internal__method, player);
}
// Autogenerated method: MockScoreSyncStateManager.GetSyncState
GlobalNamespace::MultiplayerSyncState_3<GlobalNamespace::StandardScoreSyncState, GlobalNamespace::StandardScoreSyncState_Score, int>* GlobalNamespace::MockScoreSyncStateManager::GetSyncState(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MockScoreSyncStateManager").WithContext("GetSyncState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSyncState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerSyncState_3<GlobalNamespace::StandardScoreSyncState, GlobalNamespace::StandardScoreSyncState_Score, int>*, false>(this, ___internal__method, i);
}
// Autogenerated method: MockScoreSyncStateManager.Interpolate
int GlobalNamespace::MockScoreSyncStateManager::Interpolate(int prev, float pt, int curr, float ct, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MockScoreSyncStateManager").WithContext("Interpolate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Interpolate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prev, pt, curr, ct, t)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, prev, pt, curr, ct, t);
}
// Autogenerated method: MockScoreSyncStateManager.Smooth
int GlobalNamespace::MockScoreSyncStateManager::Smooth(int prev, int curr, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MockScoreSyncStateManager").WithContext("Smooth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Smooth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prev, curr, t)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, prev, curr, t);
}
// Autogenerated method: MockScoreSyncStateManager.HandleStateChanged
void GlobalNamespace::MockScoreSyncStateManager::HandleStateChanged(GlobalNamespace::MultiplayerController::State state) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MockScoreSyncStateManager").WithContext("HandleStateChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleStateChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: MockScoreSyncStateManager.get_syncTime
float GlobalNamespace::MockScoreSyncStateManager::get_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MockScoreSyncStateManager").WithContext("get_syncTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_syncTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MockScoreSyncStateManager.get_connectedPlayerCount
int GlobalNamespace::MockScoreSyncStateManager::get_connectedPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MockScoreSyncStateManager").WithContext("get_connectedPlayerCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_connectedPlayerCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
