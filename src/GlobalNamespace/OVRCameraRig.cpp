// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRCameraRig
#include "GlobalNamespace\OVRCameraRig.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine\Transform.hpp"
// Including type: System.Action`1
#include "System\Action_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine\Camera.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine\Matrix4x4.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRCameraRig.get_leftEyeCamera
UnityEngine::Camera* GlobalNamespace::OVRCameraRig::get_leftEyeCamera() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Camera*>(this, "get_leftEyeCamera"));
}
// Autogenerated method: OVRCameraRig.get_rightEyeCamera
UnityEngine::Camera* GlobalNamespace::OVRCameraRig::get_rightEyeCamera() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Camera*>(this, "get_rightEyeCamera"));
}
// Autogenerated method: OVRCameraRig.get_trackingSpace
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_trackingSpace() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Transform*>(this, "get_trackingSpace"));
}
// Autogenerated method: OVRCameraRig.set_trackingSpace
void GlobalNamespace::OVRCameraRig::set_trackingSpace(UnityEngine::Transform* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_trackingSpace", value));
}
// Autogenerated method: OVRCameraRig.get_leftEyeAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftEyeAnchor() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Transform*>(this, "get_leftEyeAnchor"));
}
// Autogenerated method: OVRCameraRig.set_leftEyeAnchor
void GlobalNamespace::OVRCameraRig::set_leftEyeAnchor(UnityEngine::Transform* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_leftEyeAnchor", value));
}
// Autogenerated method: OVRCameraRig.get_centerEyeAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_centerEyeAnchor() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Transform*>(this, "get_centerEyeAnchor"));
}
// Autogenerated method: OVRCameraRig.set_centerEyeAnchor
void GlobalNamespace::OVRCameraRig::set_centerEyeAnchor(UnityEngine::Transform* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_centerEyeAnchor", value));
}
// Autogenerated method: OVRCameraRig.get_rightEyeAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightEyeAnchor() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Transform*>(this, "get_rightEyeAnchor"));
}
// Autogenerated method: OVRCameraRig.set_rightEyeAnchor
void GlobalNamespace::OVRCameraRig::set_rightEyeAnchor(UnityEngine::Transform* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_rightEyeAnchor", value));
}
// Autogenerated method: OVRCameraRig.get_leftHandAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftHandAnchor() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Transform*>(this, "get_leftHandAnchor"));
}
// Autogenerated method: OVRCameraRig.set_leftHandAnchor
void GlobalNamespace::OVRCameraRig::set_leftHandAnchor(UnityEngine::Transform* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_leftHandAnchor", value));
}
// Autogenerated method: OVRCameraRig.get_rightHandAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightHandAnchor() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Transform*>(this, "get_rightHandAnchor"));
}
// Autogenerated method: OVRCameraRig.set_rightHandAnchor
void GlobalNamespace::OVRCameraRig::set_rightHandAnchor(UnityEngine::Transform* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_rightHandAnchor", value));
}
// Autogenerated method: OVRCameraRig.get_leftControllerAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftControllerAnchor() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Transform*>(this, "get_leftControllerAnchor"));
}
// Autogenerated method: OVRCameraRig.set_leftControllerAnchor
void GlobalNamespace::OVRCameraRig::set_leftControllerAnchor(UnityEngine::Transform* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_leftControllerAnchor", value));
}
// Autogenerated method: OVRCameraRig.get_rightControllerAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightControllerAnchor() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Transform*>(this, "get_rightControllerAnchor"));
}
// Autogenerated method: OVRCameraRig.set_rightControllerAnchor
void GlobalNamespace::OVRCameraRig::set_rightControllerAnchor(UnityEngine::Transform* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_rightControllerAnchor", value));
}
// Autogenerated method: OVRCameraRig.get_trackerAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_trackerAnchor() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Transform*>(this, "get_trackerAnchor"));
}
// Autogenerated method: OVRCameraRig.set_trackerAnchor
void GlobalNamespace::OVRCameraRig::set_trackerAnchor(UnityEngine::Transform* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_trackerAnchor", value));
}
// Autogenerated method: OVRCameraRig.add_UpdatedAnchors
void GlobalNamespace::OVRCameraRig::add_UpdatedAnchors(System::Action_1<GlobalNamespace::OVRCameraRig*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_UpdatedAnchors", value));
}
// Autogenerated method: OVRCameraRig.remove_UpdatedAnchors
void GlobalNamespace::OVRCameraRig::remove_UpdatedAnchors(System::Action_1<GlobalNamespace::OVRCameraRig*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_UpdatedAnchors", value));
}
// Autogenerated method: OVRCameraRig.Awake
void GlobalNamespace::OVRCameraRig::Awake() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Awake"));
}
// Autogenerated method: OVRCameraRig.Start
void GlobalNamespace::OVRCameraRig::Start() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Start"));
}
// Autogenerated method: OVRCameraRig.FixedUpdate
void GlobalNamespace::OVRCameraRig::FixedUpdate() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "FixedUpdate"));
}
// Autogenerated method: OVRCameraRig.Update
void GlobalNamespace::OVRCameraRig::Update() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Update"));
}
// Autogenerated method: OVRCameraRig.OnDestroy
void GlobalNamespace::OVRCameraRig::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: OVRCameraRig.UpdateAnchors
void GlobalNamespace::OVRCameraRig::UpdateAnchors(bool updateEyeAnchors, bool updateHandAnchors) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdateAnchors", updateEyeAnchors, updateHandAnchors));
}
// Autogenerated method: OVRCameraRig.OnBeforeRenderCallback
void GlobalNamespace::OVRCameraRig::OnBeforeRenderCallback() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnBeforeRenderCallback"));
}
// Autogenerated method: OVRCameraRig.RaiseUpdatedAnchorsEvent
void GlobalNamespace::OVRCameraRig::RaiseUpdatedAnchorsEvent() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RaiseUpdatedAnchorsEvent"));
}
// Autogenerated method: OVRCameraRig.EnsureGameObjectIntegrity
void GlobalNamespace::OVRCameraRig::EnsureGameObjectIntegrity() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "EnsureGameObjectIntegrity"));
}
// Autogenerated method: OVRCameraRig.ConfigureAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::ConfigureAnchor(UnityEngine::Transform* root, ::Il2CppString* name) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Transform*>(this, "ConfigureAnchor", root, name));
}
// Autogenerated method: OVRCameraRig.ComputeTrackReferenceMatrix
UnityEngine::Matrix4x4 GlobalNamespace::OVRCameraRig::ComputeTrackReferenceMatrix() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Matrix4x4>(this, "ComputeTrackReferenceMatrix"));
}
// Autogenerated method: OVRCameraRig..ctor
GlobalNamespace::OVRCameraRig* GlobalNamespace::OVRCameraRig::New_ctor() {
  return (OVRCameraRig*)THROW_UNLESS(il2cpp_utils::New("", "OVRCameraRig"));
}
