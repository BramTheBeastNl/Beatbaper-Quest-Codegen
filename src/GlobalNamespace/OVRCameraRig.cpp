// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRCameraRig.get_leftEyeCamera
UnityEngine::Camera* GlobalNamespace::OVRCameraRig::get_leftEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("get_leftEyeCamera");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftEyeCamera", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.get_rightEyeCamera
UnityEngine::Camera* GlobalNamespace::OVRCameraRig::get_rightEyeCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("get_rightEyeCamera");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightEyeCamera", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.get_trackingSpace
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_trackingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("get_trackingSpace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_trackingSpace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_trackingSpace
void GlobalNamespace::OVRCameraRig::set_trackingSpace(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("set_trackingSpace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_trackingSpace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftEyeAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("get_leftEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftEyeAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftEyeAnchor
void GlobalNamespace::OVRCameraRig::set_leftEyeAnchor(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("set_leftEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_leftEyeAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_centerEyeAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_centerEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("get_centerEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_centerEyeAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_centerEyeAnchor
void GlobalNamespace::OVRCameraRig::set_centerEyeAnchor(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("set_centerEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_centerEyeAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightEyeAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightEyeAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("get_rightEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightEyeAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightEyeAnchor
void GlobalNamespace::OVRCameraRig::set_rightEyeAnchor(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("set_rightEyeAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_rightEyeAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftHandAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftHandAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("get_leftHandAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftHandAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftHandAnchor
void GlobalNamespace::OVRCameraRig::set_leftHandAnchor(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("set_leftHandAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_leftHandAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightHandAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightHandAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("get_rightHandAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightHandAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightHandAnchor
void GlobalNamespace::OVRCameraRig::set_rightHandAnchor(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("set_rightHandAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_rightHandAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_leftControllerAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_leftControllerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("get_leftControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leftControllerAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_leftControllerAnchor
void GlobalNamespace::OVRCameraRig::set_leftControllerAnchor(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("set_leftControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_leftControllerAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_rightControllerAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_rightControllerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("get_rightControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rightControllerAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_rightControllerAnchor
void GlobalNamespace::OVRCameraRig::set_rightControllerAnchor(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("set_rightControllerAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_rightControllerAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.get_trackerAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::get_trackerAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("get_trackerAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_trackerAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.set_trackerAnchor
void GlobalNamespace::OVRCameraRig::set_trackerAnchor(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("set_trackerAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_trackerAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.add_UpdatedAnchors
void GlobalNamespace::OVRCameraRig::add_UpdatedAnchors(System::Action_1<GlobalNamespace::OVRCameraRig*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("add_UpdatedAnchors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_UpdatedAnchors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.remove_UpdatedAnchors
void GlobalNamespace::OVRCameraRig::remove_UpdatedAnchors(System::Action_1<GlobalNamespace::OVRCameraRig*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("remove_UpdatedAnchors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_UpdatedAnchors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRCameraRig.Awake
void GlobalNamespace::OVRCameraRig::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.Start
void GlobalNamespace::OVRCameraRig::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.FixedUpdate
void GlobalNamespace::OVRCameraRig::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.Update
void GlobalNamespace::OVRCameraRig::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.OnDestroy
void GlobalNamespace::OVRCameraRig::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.UpdateAnchors
void GlobalNamespace::OVRCameraRig::UpdateAnchors(bool updateEyeAnchors, bool updateHandAnchors) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("UpdateAnchors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateAnchors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(updateEyeAnchors, updateHandAnchors)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, updateEyeAnchors, updateHandAnchors);
}
// Autogenerated method: OVRCameraRig.OnBeforeRenderCallback
void GlobalNamespace::OVRCameraRig::OnBeforeRenderCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("OnBeforeRenderCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnBeforeRenderCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.RaiseUpdatedAnchorsEvent
void GlobalNamespace::OVRCameraRig::RaiseUpdatedAnchorsEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("RaiseUpdatedAnchorsEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RaiseUpdatedAnchorsEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.EnsureGameObjectIntegrity
void GlobalNamespace::OVRCameraRig::EnsureGameObjectIntegrity() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("EnsureGameObjectIntegrity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureGameObjectIntegrity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCameraRig.ConfigureAnchor
UnityEngine::Transform* GlobalNamespace::OVRCameraRig::ConfigureAnchor(UnityEngine::Transform* root, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("ConfigureAnchor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureAnchor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(root, name)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method, root, name);
}
// Autogenerated method: OVRCameraRig.ComputeTrackReferenceMatrix
UnityEngine::Matrix4x4 GlobalNamespace::OVRCameraRig::ComputeTrackReferenceMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("OVRCameraRig").WithContext("ComputeTrackReferenceMatrix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ComputeTrackReferenceMatrix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
