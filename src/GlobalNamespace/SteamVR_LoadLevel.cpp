// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamVR_LoadLevel
#include "GlobalNamespace/SteamVR_LoadLevel.hpp"
// Including type: SteamVR_LoadLevel/<LoadLevel>d__45
#include "GlobalNamespace/SteamVR_LoadLevel_-LoadLevel-d__45.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private SteamVR_LoadLevel _active
GlobalNamespace::SteamVR_LoadLevel* GlobalNamespace::SteamVR_LoadLevel::_get__active() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_LoadLevel").WithContext("_get__active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SteamVR_LoadLevel*>("", "SteamVR_LoadLevel", "_active"));
}
// Autogenerated static field setter
// Set static field: static private SteamVR_LoadLevel _active
void GlobalNamespace::SteamVR_LoadLevel::_set__active(GlobalNamespace::SteamVR_LoadLevel* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_LoadLevel").WithContext("_set__active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SteamVR_LoadLevel", "_active", value));
}
// Autogenerated method: SteamVR_LoadLevel.get_loading
bool GlobalNamespace::SteamVR_LoadLevel::get_loading() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_LoadLevel").WithContext("get_loading");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_LoadLevel", il2cpp_utils::NoArgClass<bool>(), "get_loading", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: SteamVR_LoadLevel.get_progress
float GlobalNamespace::SteamVR_LoadLevel::get_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_LoadLevel").WithContext("get_progress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_LoadLevel", il2cpp_utils::NoArgClass<float>(), "get_progress", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: SteamVR_LoadLevel.get_progressTexture
UnityEngine::Texture* GlobalNamespace::SteamVR_LoadLevel::get_progressTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_LoadLevel").WithContext("get_progressTexture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_LoadLevel", il2cpp_utils::NoArgClass<UnityEngine::Texture*>(), "get_progressTexture", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: SteamVR_LoadLevel.OnEnable
void GlobalNamespace::SteamVR_LoadLevel::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_LoadLevel").WithContext("OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnEnable", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_LoadLevel.Trigger
void GlobalNamespace::SteamVR_LoadLevel::Trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_LoadLevel").WithContext("Trigger");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Trigger", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_LoadLevel.Begin
void GlobalNamespace::SteamVR_LoadLevel::Begin(::Il2CppString* levelName, bool showGrid, float fadeOutTime, float r, float g, float b, float a) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_LoadLevel").WithContext("Begin");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_LoadLevel", il2cpp_utils::NoArgClass<void>(), "Begin", {}, ::il2cpp_utils::ExtractTypes(levelName, showGrid, fadeOutTime, r, g, b, a)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, levelName, showGrid, fadeOutTime, r, g, b, a);
}
// Autogenerated method: SteamVR_LoadLevel.OnGUI
void GlobalNamespace::SteamVR_LoadLevel::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_LoadLevel").WithContext("OnGUI");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnGUI", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_LoadLevel.Update
void GlobalNamespace::SteamVR_LoadLevel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_LoadLevel").WithContext("Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Update", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_LoadLevel.LoadLevel
System::Collections::IEnumerator* GlobalNamespace::SteamVR_LoadLevel::LoadLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_LoadLevel").WithContext("LoadLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Collections::IEnumerator*>(), "LoadLevel", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_LoadLevel.GetOverlayHandle
uint64_t GlobalNamespace::SteamVR_LoadLevel::GetOverlayHandle(::Il2CppString* overlayName, UnityEngine::Transform* transform, float widthInMeters) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_LoadLevel").WithContext("GetOverlayHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<uint64_t>(), "GetOverlayHandle", {}, ::il2cpp_utils::ExtractTypes(overlayName, transform, widthInMeters)));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method, overlayName, transform, widthInMeters);
}
// Autogenerated method: SteamVR_LoadLevel..ctor
GlobalNamespace::SteamVR_LoadLevel* GlobalNamespace::SteamVR_LoadLevel::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_LoadLevel").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<SteamVR_LoadLevel*>());
}
// Autogenerated method: SteamVR_LoadLevel..cctor
void GlobalNamespace::SteamVR_LoadLevel::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SteamVR_LoadLevel").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SteamVR_LoadLevel", il2cpp_utils::NoArgClass<void>(), ".cctor", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
