// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiers/EnabledObstacleType
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/EnabledObstacleType All
GlobalNamespace::GameplayModifiers::EnabledObstacleType GlobalNamespace::GameplayModifiers::EnabledObstacleType::_get_All() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("EnabledObstacleType").WithContext("_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiers::EnabledObstacleType>("", "GameplayModifiers/EnabledObstacleType", "All"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/EnabledObstacleType All
void GlobalNamespace::GameplayModifiers::EnabledObstacleType::_set_All(GlobalNamespace::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("EnabledObstacleType").WithContext("_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/EnabledObstacleType", "All", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/EnabledObstacleType FullHeightOnly
GlobalNamespace::GameplayModifiers::EnabledObstacleType GlobalNamespace::GameplayModifiers::EnabledObstacleType::_get_FullHeightOnly() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("EnabledObstacleType").WithContext("_get_FullHeightOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiers::EnabledObstacleType>("", "GameplayModifiers/EnabledObstacleType", "FullHeightOnly"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/EnabledObstacleType FullHeightOnly
void GlobalNamespace::GameplayModifiers::EnabledObstacleType::_set_FullHeightOnly(GlobalNamespace::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("EnabledObstacleType").WithContext("_set_FullHeightOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/EnabledObstacleType", "FullHeightOnly", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/EnabledObstacleType NoObstacles
GlobalNamespace::GameplayModifiers::EnabledObstacleType GlobalNamespace::GameplayModifiers::EnabledObstacleType::_get_NoObstacles() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("EnabledObstacleType").WithContext("_get_NoObstacles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiers::EnabledObstacleType>("", "GameplayModifiers/EnabledObstacleType", "NoObstacles"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/EnabledObstacleType NoObstacles
void GlobalNamespace::GameplayModifiers::EnabledObstacleType::_set_NoObstacles(GlobalNamespace::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("EnabledObstacleType").WithContext("_set_NoObstacles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/EnabledObstacleType", "NoObstacles", value));
}
