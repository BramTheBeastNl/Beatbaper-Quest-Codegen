// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEventTypeExtensions
#include "GlobalNamespace/BeatmapEventTypeExtensions.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapEventType kEarlyRotationEvent
GlobalNamespace::BeatmapEventType GlobalNamespace::BeatmapEventTypeExtensions::_get_kEarlyRotationEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapEventTypeExtensions").WithContext("_get_kEarlyRotationEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapEventType>("", "BeatmapEventTypeExtensions", "kEarlyRotationEvent"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapEventType kEarlyRotationEvent
void GlobalNamespace::BeatmapEventTypeExtensions::_set_kEarlyRotationEvent(GlobalNamespace::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapEventTypeExtensions").WithContext("_set_kEarlyRotationEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventTypeExtensions", "kEarlyRotationEvent", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapEventType kLateRotationEvent
GlobalNamespace::BeatmapEventType GlobalNamespace::BeatmapEventTypeExtensions::_get_kLateRotationEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapEventTypeExtensions").WithContext("_get_kLateRotationEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapEventType>("", "BeatmapEventTypeExtensions", "kLateRotationEvent"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapEventType kLateRotationEvent
void GlobalNamespace::BeatmapEventTypeExtensions::_set_kLateRotationEvent(GlobalNamespace::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapEventTypeExtensions").WithContext("_set_kLateRotationEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventTypeExtensions", "kLateRotationEvent", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapEventType kBPMChangeEvent
GlobalNamespace::BeatmapEventType GlobalNamespace::BeatmapEventTypeExtensions::_get_kBPMChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapEventTypeExtensions").WithContext("_get_kBPMChangeEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapEventType>("", "BeatmapEventTypeExtensions", "kBPMChangeEvent"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapEventType kBPMChangeEvent
void GlobalNamespace::BeatmapEventTypeExtensions::_set_kBPMChangeEvent(GlobalNamespace::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapEventTypeExtensions").WithContext("_set_kBPMChangeEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventTypeExtensions", "kBPMChangeEvent", value));
}
// Autogenerated method: BeatmapEventTypeExtensions.GetEventsValidForAllBeatmaps
System::Collections::Generic::HashSet_1<GlobalNamespace::BeatmapEventType>* GlobalNamespace::BeatmapEventTypeExtensions::GetEventsValidForAllBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapEventTypeExtensions").WithContext("GetEventsValidForAllBeatmaps");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapEventTypeExtensions", "GetEventsValidForAllBeatmaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::HashSet_1<GlobalNamespace::BeatmapEventType>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapEventTypeExtensions.IsBPMChangeEvent
bool GlobalNamespace::BeatmapEventTypeExtensions::IsBPMChangeEvent(GlobalNamespace::BeatmapEventType beatmapEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapEventTypeExtensions").WithContext("IsBPMChangeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapEventTypeExtensions", "IsBPMChangeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapEventType);
}
// Autogenerated method: BeatmapEventTypeExtensions.IsRotationEvent
bool GlobalNamespace::BeatmapEventTypeExtensions::IsRotationEvent(GlobalNamespace::BeatmapEventType beatmapEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapEventTypeExtensions").WithContext("IsRotationEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapEventTypeExtensions", "IsRotationEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapEventType);
}
// Autogenerated method: BeatmapEventTypeExtensions.IsEarlyRotationEvent
bool GlobalNamespace::BeatmapEventTypeExtensions::IsEarlyRotationEvent(GlobalNamespace::BeatmapEventType beatmapEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapEventTypeExtensions").WithContext("IsEarlyRotationEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapEventTypeExtensions", "IsEarlyRotationEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapEventType);
}
// Autogenerated method: BeatmapEventTypeExtensions.IsLateRotationEvent
bool GlobalNamespace::BeatmapEventTypeExtensions::IsLateRotationEvent(GlobalNamespace::BeatmapEventType beatmapEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapEventTypeExtensions").WithContext("IsLateRotationEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapEventTypeExtensions", "IsLateRotationEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapEventType);
}
// Autogenerated method: BeatmapEventTypeExtensions.IsEarlyEvent
bool GlobalNamespace::BeatmapEventTypeExtensions::IsEarlyEvent(GlobalNamespace::BeatmapEventType beatmapEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapEventTypeExtensions").WithContext("IsEarlyEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapEventTypeExtensions", "IsEarlyEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapEventType);
}
// Autogenerated method: BeatmapEventTypeExtensions.IsSpawnAffectingEvent
bool GlobalNamespace::BeatmapEventTypeExtensions::IsSpawnAffectingEvent(GlobalNamespace::BeatmapEventType beatmapEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapEventTypeExtensions").WithContext("IsSpawnAffectingEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapEventTypeExtensions", "IsSpawnAffectingEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapEventType);
}
