// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SaberSwingRatingCounter/DidFinishDelegate
#include "GlobalNamespace/SaberSwingRatingCounter_DidFinishDelegate.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SaberSwingRatingCounter/DidFinishDelegate..ctor
GlobalNamespace::SaberSwingRatingCounter::DidFinishDelegate* GlobalNamespace::SaberSwingRatingCounter::DidFinishDelegate::New_ctor(::CsObject* object, System::IntPtr method) {
  return (SaberSwingRatingCounter::DidFinishDelegate*)THROW_UNLESS(il2cpp_utils::New("", "SaberSwingRatingCounter/DidFinishDelegate", object, method));
}
// Autogenerated method: SaberSwingRatingCounter/DidFinishDelegate.Invoke
void GlobalNamespace::SaberSwingRatingCounter::DidFinishDelegate::Invoke(GlobalNamespace::SaberSwingRatingCounter* afterCutRating) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Invoke", afterCutRating));
}
// Autogenerated method: SaberSwingRatingCounter/DidFinishDelegate.BeginInvoke
System::IAsyncResult* GlobalNamespace::SaberSwingRatingCounter::DidFinishDelegate::BeginInvoke(GlobalNamespace::SaberSwingRatingCounter* afterCutRating, System::AsyncCallback* callback, ::CsObject* object) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IAsyncResult*>(this, "BeginInvoke", afterCutRating, callback, object));
}
// Autogenerated method: SaberSwingRatingCounter/DidFinishDelegate.EndInvoke
void GlobalNamespace::SaberSwingRatingCounter::DidFinishDelegate::EndInvoke(System::IAsyncResult* result) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "EndInvoke", result));
}
