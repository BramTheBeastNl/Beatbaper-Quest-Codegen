// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SaberMovementData
#include "GlobalNamespace\SaberMovementData.hpp"
// Including type: SaberMovementData/Data
#include "GlobalNamespace\SaberMovementData_Data.hpp"
// Including type: System.Collections.Generic.List`1
#include "System\Collections\Generic\List_1.hpp"
// Including type: ISaberMovementDataProcessor
#include "GlobalNamespace\ISaberMovementDataProcessor.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine\Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kOutOfRangeBladeSpeed
float GlobalNamespace::SaberMovementData::_get_kOutOfRangeBladeSpeed() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberMovementData", "kOutOfRangeBladeSpeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kOutOfRangeBladeSpeed
void GlobalNamespace::SaberMovementData::_set_kOutOfRangeBladeSpeed(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberMovementData", "kOutOfRangeBladeSpeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kSmoothUpBladeSpeedCoef
float GlobalNamespace::SaberMovementData::_get_kSmoothUpBladeSpeedCoef() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberMovementData", "kSmoothUpBladeSpeedCoef"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSmoothUpBladeSpeedCoef
void GlobalNamespace::SaberMovementData::_set_kSmoothUpBladeSpeedCoef(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberMovementData", "kSmoothUpBladeSpeedCoef", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kSmoothDownBladeSpeedCoef
float GlobalNamespace::SaberMovementData::_get_kSmoothDownBladeSpeedCoef() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberMovementData", "kSmoothDownBladeSpeedCoef"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSmoothDownBladeSpeedCoef
void GlobalNamespace::SaberMovementData::_set_kSmoothDownBladeSpeedCoef(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberMovementData", "kSmoothDownBladeSpeedCoef", value));
}
// Autogenerated method: SaberMovementData.get_bladeSpeed
float GlobalNamespace::SaberMovementData::get_bladeSpeed() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_bladeSpeed"));
}
// Autogenerated method: SaberMovementData.get_lastAddedData
GlobalNamespace::SaberMovementData::Data GlobalNamespace::SaberMovementData::get_lastAddedData() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::SaberMovementData::Data>(this, "get_lastAddedData"));
}
// Autogenerated method: SaberMovementData.AddDataProcessor
void GlobalNamespace::SaberMovementData::AddDataProcessor(GlobalNamespace::ISaberMovementDataProcessor* dataProcessor) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddDataProcessor", dataProcessor));
}
// Autogenerated method: SaberMovementData.RemoveDataProcessor
void GlobalNamespace::SaberMovementData::RemoveDataProcessor(GlobalNamespace::ISaberMovementDataProcessor* dataProcessor) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RemoveDataProcessor", dataProcessor));
}
// Autogenerated method: SaberMovementData.RequestLastDataProcessing
void GlobalNamespace::SaberMovementData::RequestLastDataProcessing(GlobalNamespace::ISaberMovementDataProcessor* dataProcessor) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RequestLastDataProcessing", dataProcessor));
}
// Autogenerated method: SaberMovementData.AddNewData
void GlobalNamespace::SaberMovementData::AddNewData(UnityEngine::Vector3 topPos, UnityEngine::Vector3 bottomPos, float time) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddNewData", topPos, bottomPos, time));
}
// Autogenerated method: SaberMovementData.ComputeAdditionalData
void GlobalNamespace::SaberMovementData::ComputeAdditionalData(UnityEngine::Vector3 topPos, UnityEngine::Vector3 bottomPos, int idxOffset, UnityEngine::Vector3& segmentNormal, float& segmentAngle) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ComputeAdditionalData", topPos, bottomPos, idxOffset, segmentNormal, segmentAngle));
}
// Autogenerated method: SaberMovementData.ComputePlaneNormal
UnityEngine::Vector3 GlobalNamespace::SaberMovementData::ComputePlaneNormal(UnityEngine::Vector3 tp0, UnityEngine::Vector3 bp0, UnityEngine::Vector3 tp1, UnityEngine::Vector3 bp1) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "ComputePlaneNormal", tp0, bp0, tp1, bp1));
}
// Autogenerated method: SaberMovementData.ComputeCutPlaneNormal
UnityEngine::Vector3 GlobalNamespace::SaberMovementData::ComputeCutPlaneNormal() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "ComputeCutPlaneNormal"));
}
// Autogenerated method: SaberMovementData.ComputeSwingRating
float GlobalNamespace::SaberMovementData::ComputeSwingRating(float overrideSegmentAngle) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "ComputeSwingRating", overrideSegmentAngle));
}
// Autogenerated method: SaberMovementData.ComputeSwingRating
float GlobalNamespace::SaberMovementData::ComputeSwingRating() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "ComputeSwingRating"));
}
// Autogenerated method: SaberMovementData.ComputeSwingRating
float GlobalNamespace::SaberMovementData::ComputeSwingRating(bool overrideSegmenAngle, float overrideValue) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "ComputeSwingRating", overrideSegmenAngle, overrideValue));
}
// Autogenerated method: SaberMovementData..ctor
GlobalNamespace::SaberMovementData* GlobalNamespace::SaberMovementData::New_ctor() {
  return (SaberMovementData*)THROW_UNLESS(il2cpp_utils::New("", "SaberMovementData"));
}
