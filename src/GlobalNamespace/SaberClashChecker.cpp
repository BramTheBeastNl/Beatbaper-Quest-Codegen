// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberClashChecker
#include "GlobalNamespace/SaberClashChecker.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kMinDistanceToClash
float GlobalNamespace::SaberClashChecker::_get_kMinDistanceToClash() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberClashChecker", "kMinDistanceToClash"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMinDistanceToClash
void GlobalNamespace::SaberClashChecker::_set_kMinDistanceToClash(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberClashChecker", "kMinDistanceToClash", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kIgnoredTime
float GlobalNamespace::SaberClashChecker::_get_kIgnoredTime() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberClashChecker", "kIgnoredTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kIgnoredTime
void GlobalNamespace::SaberClashChecker::_set_kIgnoredTime(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberClashChecker", "kIgnoredTime", value));
}
// Autogenerated method: SaberClashChecker.Init
void GlobalNamespace::SaberClashChecker::Init(GlobalNamespace::SaberManager* saberManager) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Init", saberManager));
}
// Autogenerated method: SaberClashChecker.AreSabersClashing
bool GlobalNamespace::SaberClashChecker::AreSabersClashing(UnityEngine::Vector3& clashingPoint) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "AreSabersClashing", clashingPoint));
}
// Autogenerated method: SaberClashChecker.SegmentToSegmentDist
float GlobalNamespace::SaberClashChecker::SegmentToSegmentDist(UnityEngine::Vector3 fromA, UnityEngine::Vector3 toA, UnityEngine::Vector3 fromB, UnityEngine::Vector3 toB, UnityEngine::Vector3& inbetweenPoint) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "SegmentToSegmentDist", fromA, toA, fromB, toB, inbetweenPoint));
}
// Autogenerated method: SaberClashChecker..ctor
GlobalNamespace::SaberClashChecker* GlobalNamespace::SaberClashChecker::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<SaberClashChecker*>());
}
