// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerCenterTextAnimator
#include "GlobalNamespace/MultiplayerCenterTextAnimator.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Tweening.TweeningManager
#include "Tweening/TweeningManager.hpp"
// Including type: Tweening.Tween`1
#include "Tweening/Tween_1.hpp"
// Including type: Tweening.EaseType
#include "Tweening/EaseType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerCenterTextAnimator.Awake
void GlobalNamespace::MultiplayerCenterTextAnimator::Awake() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Awake"));
}
// Autogenerated method: MultiplayerCenterTextAnimator.OnDestroy
void GlobalNamespace::MultiplayerCenterTextAnimator::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: MultiplayerCenterTextAnimator.AnimateTextColor
void GlobalNamespace::MultiplayerCenterTextAnimator::AnimateTextColor(UnityEngine::Color color, float duration, Tweening::EaseType easeType) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AnimateTextColor", color, duration, easeType));
}
// Autogenerated method: MultiplayerCenterTextAnimator.AnimateFontSize
void GlobalNamespace::MultiplayerCenterTextAnimator::AnimateFontSize(float fontSize, float duration, Tweening::EaseType easeType) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AnimateFontSize", fontSize, duration, easeType));
}
// Autogenerated method: MultiplayerCenterTextAnimator.AnimatePositionOffsetSize
void GlobalNamespace::MultiplayerCenterTextAnimator::AnimatePositionOffsetSize(UnityEngine::Vector3 offset, float duration, Tweening::EaseType easeType) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AnimatePositionOffsetSize", offset, duration, easeType));
}
// Autogenerated method: MultiplayerCenterTextAnimator.AnimateEnabled
void GlobalNamespace::MultiplayerCenterTextAnimator::AnimateEnabled(bool isEnabled, float duration, Tweening::EaseType easeType) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AnimateEnabled", isEnabled, duration, easeType));
}
// Autogenerated method: MultiplayerCenterTextAnimator.SetText
void GlobalNamespace::MultiplayerCenterTextAnimator::SetText(::Il2CppString* text) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetText", text));
}
// Autogenerated method: MultiplayerCenterTextAnimator.<Awake>b__8_0
void GlobalNamespace::MultiplayerCenterTextAnimator::$Awake$b__8_0(float val) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<Awake>b__8_0", val));
}
// Autogenerated method: MultiplayerCenterTextAnimator.<Awake>b__8_1
void GlobalNamespace::MultiplayerCenterTextAnimator::$Awake$b__8_1(float val) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<Awake>b__8_1", val));
}
// Autogenerated method: MultiplayerCenterTextAnimator.<Awake>b__8_5
void GlobalNamespace::MultiplayerCenterTextAnimator::$Awake$b__8_5() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<Awake>b__8_5"));
}
// Autogenerated method: MultiplayerCenterTextAnimator.<Awake>b__8_2
void GlobalNamespace::MultiplayerCenterTextAnimator::$Awake$b__8_2(float val) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<Awake>b__8_2", val));
}
// Autogenerated method: MultiplayerCenterTextAnimator.<Awake>b__8_3
void GlobalNamespace::MultiplayerCenterTextAnimator::$Awake$b__8_3(UnityEngine::Color val) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<Awake>b__8_3", val));
}
// Autogenerated method: MultiplayerCenterTextAnimator.<Awake>b__8_4
void GlobalNamespace::MultiplayerCenterTextAnimator::$Awake$b__8_4(UnityEngine::Vector3 val) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "<Awake>b__8_4", val));
}
// Autogenerated method: MultiplayerCenterTextAnimator..ctor
GlobalNamespace::MultiplayerCenterTextAnimator* GlobalNamespace::MultiplayerCenterTextAnimator::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<MultiplayerCenterTextAnimator*>());
}
