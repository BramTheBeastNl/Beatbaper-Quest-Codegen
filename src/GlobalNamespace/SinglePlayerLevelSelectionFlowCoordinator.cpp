// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SinglePlayerLevelSelectionFlowCoordinator
#include "GlobalNamespace/SinglePlayerLevelSelectionFlowCoordinator.hpp"
// Including type: SinglePlayerLevelSelectionFlowCoordinator/<>c__DisplayClass37_0
#include "GlobalNamespace/SinglePlayerLevelSelectionFlowCoordinator_--c__DisplayClass37_0.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: PracticeViewController
#include "GlobalNamespace/PracticeViewController.hpp"
// Including type: GameplaySetupViewController
#include "GlobalNamespace/GameplaySetupViewController.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: AppStaticSettingsSO
#include "GlobalNamespace/AppStaticSettingsSO.hpp"
// Including type: SimpleDialogPromptViewController
#include "GlobalNamespace/SimpleDialogPromptViewController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ViewController/AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: LeaderboardViewController
#include "GlobalNamespace/LeaderboardViewController.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_gameMode
::Il2CppString* GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("get_gameMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_isInPracticeView
bool GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_isInPracticeView() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("get_isInPracticeView");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isInPracticeView", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_playerSettings
GlobalNamespace::PlayerSpecificSettings* GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_playerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("get_playerSettings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_playerSettings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerSpecificSettings*, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_hideGameplaySetup
bool GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_hideGameplaySetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("get_hideGameplaySetup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hideGameplaySetup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_leaderboardViewController
GlobalNamespace::LeaderboardViewController* GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_leaderboardViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("get_leaderboardViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_leaderboardViewController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LeaderboardViewController*, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidActivate
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("SinglePlayerLevelSelectionFlowCoordinatorDidActivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidActivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(firstActivation, addedToHierarchy)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate(bool removedFromHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(removedFromHierarchy)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.ProcessLevelCompletionResultsAfterLevelDidFinish
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::GameplayModifiers* gameplayModifiers, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("ProcessLevelCompletionResultsAfterLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessLevelCompletionResultsAfterLevelDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelCompletionResults, difficultyBeatmap, gameplayModifiers, practice)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelCompletionResults, difficultyBeatmap, gameplayModifiers, practice);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.add_didFinishEvent
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::add_didFinishEvent(System::Action_1<GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.remove_didFinishEvent
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::remove_didFinishEvent(System::Action_1<GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.StartLevelOrShow360Prompt
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::StartLevelOrShow360Prompt(System::Action* beforeSceneSwitchCallback, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("StartLevelOrShow360Prompt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartLevelOrShow360Prompt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beforeSceneSwitchCallback, practice)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beforeSceneSwitchCallback, practice);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.StartLevel
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::StartLevel(System::Action* beforeSceneSwitchCallback, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("StartLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beforeSceneSwitchCallback, practice)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beforeSceneSwitchCallback, practice);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.HandlePracticeViewControllerDidPressPlayButton
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::HandlePracticeViewControllerDidPressPlayButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("HandlePracticeViewControllerDidPressPlayButton");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandlePracticeViewControllerDidPressPlayButton", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.HandleStandardLevelDidFinish
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::HandleStandardLevelDidFinish(GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* standardLevelScenesTransitionSetupData, GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("HandleStandardLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleStandardLevelDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(standardLevelScenesTransitionSetupData, levelCompletionResults)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, standardLevelScenesTransitionSetupData, levelCompletionResults);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.SetupGameplaySetupViewController
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::SetupGameplaySetupViewController(bool showModifiers, bool showEnvironmentOverrideSettings, bool showColorSchemesSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("SetupGameplaySetupViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetupGameplaySetupViewController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(showModifiers, showEnvironmentOverrideSettings, showColorSchemesSettings)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, showModifiers, showEnvironmentOverrideSettings, showColorSchemesSettings);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.HandleBasicLevelCompletionResults
bool GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::HandleBasicLevelCompletionResults(GlobalNamespace::LevelCompletionResults* levelCompletionResults, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("HandleBasicLevelCompletionResults");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBasicLevelCompletionResults", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelCompletionResults, practice)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, levelCompletionResults, practice);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.DismissPracticeViewController
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::DismissPracticeViewController(System::Action* finishedCallback, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("DismissPracticeViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DismissPracticeViewController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(finishedCallback, immediately)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, finishedCallback, immediately);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_enableCustomLevels
bool GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_enableCustomLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("get_enableCustomLevels");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_enableCustomLevels", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_initialTopScreenViewController
HMUI::ViewController* GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_initialTopScreenViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("get_initialTopScreenViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_initialTopScreenViewController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<HMUI::ViewController*, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_initialLeftScreenViewController
HMUI::ViewController* GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_initialLeftScreenViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("get_initialLeftScreenViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_initialLeftScreenViewController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<HMUI::ViewController*, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.LevelSelectionFlowCoordinatorDidActivate
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("LevelSelectionFlowCoordinatorDidActivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LevelSelectionFlowCoordinatorDidActivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(firstActivation, addedToHierarchy)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.LevelSelectionFlowCoordinatorDidDeactivate
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorDidDeactivate(bool removedFromHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("LevelSelectionFlowCoordinatorDidDeactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LevelSelectionFlowCoordinatorDidDeactivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(removedFromHierarchy)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.LevelSelectionFlowCoordinatorTopViewControllerWillChange
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorTopViewControllerWillChange(HMUI::ViewController* oldViewController, HMUI::ViewController* newViewController, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("LevelSelectionFlowCoordinatorTopViewControllerWillChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LevelSelectionFlowCoordinatorTopViewControllerWillChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(oldViewController, newViewController, animationType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.ActionButtonWasPressed
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::ActionButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("ActionButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ActionButtonWasPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.PracticeButtonWasPressed
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::PracticeButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("PracticeButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PracticeButtonWasPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.SelectionDidChange
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::SelectionDidChange(GlobalNamespace::IBeatmapLevelPack* pack, GlobalNamespace::IDifficultyBeatmap* beatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("SelectionDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pack, beatmap)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pack, beatmap);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.BackButtonWasPressed
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::BackButtonWasPressed(HMUI::ViewController* topViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SinglePlayerLevelSelectionFlowCoordinator").WithContext("BackButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BackButtonWasPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(topViewController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, topViewController);
}
