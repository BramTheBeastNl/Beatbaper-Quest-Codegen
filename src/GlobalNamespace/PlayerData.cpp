// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayerData
#include "GlobalNamespace/PlayerData.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerAllOverallStatsData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayerLevelStatsData
#include "GlobalNamespace/PlayerLevelStatsData.hpp"
// Including type: PlayerMissionStatsData
#include "GlobalNamespace/PlayerMissionStatsData.hpp"
// Including type: ColorSchemesSettings
#include "GlobalNamespace/ColorSchemesSettings.hpp"
// Including type: OverrideEnvironmentSettings
#include "GlobalNamespace/OverrideEnvironmentSettings.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: MultiplayerModeSettings
#include "GlobalNamespace/MultiplayerModeSettings.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: MissionHelpSO
#include "GlobalNamespace/MissionHelpSO.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxGuestPlayers
int GlobalNamespace::PlayerData::_get_kMaxGuestPlayers() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PlayerData", "kMaxGuestPlayers"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxGuestPlayers
void GlobalNamespace::PlayerData::_set_kMaxGuestPlayers(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerData", "kMaxGuestPlayers", value));
}
// Autogenerated method: PlayerData.get_playerId
::Il2CppString* GlobalNamespace::PlayerData::get_playerId() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_playerId"));
}
// Autogenerated method: PlayerData.set_playerId
void GlobalNamespace::PlayerData::set_playerId(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_playerId", value));
}
// Autogenerated method: PlayerData.get_playerName
::Il2CppString* GlobalNamespace::PlayerData::get_playerName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_playerName"));
}
// Autogenerated method: PlayerData.set_playerName
void GlobalNamespace::PlayerData::set_playerName(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_playerName", value));
}
// Autogenerated method: PlayerData.get_shouldShowTutorialPrompt
bool GlobalNamespace::PlayerData::get_shouldShowTutorialPrompt() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_shouldShowTutorialPrompt"));
}
// Autogenerated method: PlayerData.set_shouldShowTutorialPrompt
void GlobalNamespace::PlayerData::set_shouldShowTutorialPrompt(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_shouldShowTutorialPrompt", value));
}
// Autogenerated method: PlayerData.get_shouldShow360Warning
bool GlobalNamespace::PlayerData::get_shouldShow360Warning() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_shouldShow360Warning"));
}
// Autogenerated method: PlayerData.set_shouldShow360Warning
void GlobalNamespace::PlayerData::set_shouldShow360Warning(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_shouldShow360Warning", value));
}
// Autogenerated method: PlayerData.get_agreedToEula
bool GlobalNamespace::PlayerData::get_agreedToEula() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_agreedToEula"));
}
// Autogenerated method: PlayerData.set_agreedToEula
void GlobalNamespace::PlayerData::set_agreedToEula(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_agreedToEula", value));
}
// Autogenerated method: PlayerData.get_agreedToMultiplayerDisclaimer
bool GlobalNamespace::PlayerData::get_agreedToMultiplayerDisclaimer() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_agreedToMultiplayerDisclaimer"));
}
// Autogenerated method: PlayerData.set_agreedToMultiplayerDisclaimer
void GlobalNamespace::PlayerData::set_agreedToMultiplayerDisclaimer(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_agreedToMultiplayerDisclaimer", value));
}
// Autogenerated method: PlayerData.get_avatarCreated
bool GlobalNamespace::PlayerData::get_avatarCreated() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_avatarCreated"));
}
// Autogenerated method: PlayerData.set_avatarCreated
void GlobalNamespace::PlayerData::set_avatarCreated(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_avatarCreated", value));
}
// Autogenerated method: PlayerData.get_lastSelectedBeatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::PlayerData::get_lastSelectedBeatmapDifficulty() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::BeatmapDifficulty>(this, "get_lastSelectedBeatmapDifficulty"));
}
// Autogenerated method: PlayerData.set_lastSelectedBeatmapDifficulty
void GlobalNamespace::PlayerData::set_lastSelectedBeatmapDifficulty(GlobalNamespace::BeatmapDifficulty value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_lastSelectedBeatmapDifficulty", value));
}
// Autogenerated method: PlayerData.get_lastSelectedBeatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::PlayerData::get_lastSelectedBeatmapCharacteristic() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::BeatmapCharacteristicSO*>(this, "get_lastSelectedBeatmapCharacteristic"));
}
// Autogenerated method: PlayerData.set_lastSelectedBeatmapCharacteristic
void GlobalNamespace::PlayerData::set_lastSelectedBeatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_lastSelectedBeatmapCharacteristic", value));
}
// Autogenerated method: PlayerData.get_gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::PlayerData::get_gameplayModifiers() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::GameplayModifiers*>(this, "get_gameplayModifiers"));
}
// Autogenerated method: PlayerData.set_gameplayModifiers
void GlobalNamespace::PlayerData::set_gameplayModifiers(GlobalNamespace::GameplayModifiers* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_gameplayModifiers", value));
}
// Autogenerated method: PlayerData.get_playerSpecificSettings
GlobalNamespace::PlayerSpecificSettings* GlobalNamespace::PlayerData::get_playerSpecificSettings() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::PlayerSpecificSettings*>(this, "get_playerSpecificSettings"));
}
// Autogenerated method: PlayerData.set_playerSpecificSettings
void GlobalNamespace::PlayerData::set_playerSpecificSettings(GlobalNamespace::PlayerSpecificSettings* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_playerSpecificSettings", value));
}
// Autogenerated method: PlayerData.get_practiceSettings
GlobalNamespace::PracticeSettings* GlobalNamespace::PlayerData::get_practiceSettings() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::PracticeSettings*>(this, "get_practiceSettings"));
}
// Autogenerated method: PlayerData.set_practiceSettings
void GlobalNamespace::PlayerData::set_practiceSettings(GlobalNamespace::PracticeSettings* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_practiceSettings", value));
}
// Autogenerated method: PlayerData.get_playerAllOverallStatsData
GlobalNamespace::PlayerAllOverallStatsData* GlobalNamespace::PlayerData::get_playerAllOverallStatsData() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::PlayerAllOverallStatsData*>(this, "get_playerAllOverallStatsData"));
}
// Autogenerated method: PlayerData.set_playerAllOverallStatsData
void GlobalNamespace::PlayerData::set_playerAllOverallStatsData(GlobalNamespace::PlayerAllOverallStatsData* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_playerAllOverallStatsData", value));
}
// Autogenerated method: PlayerData.get_levelsStatsData
System::Collections::Generic::List_1<GlobalNamespace::PlayerLevelStatsData*>* GlobalNamespace::PlayerData::get_levelsStatsData() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::List_1<GlobalNamespace::PlayerLevelStatsData*>*>(this, "get_levelsStatsData"));
}
// Autogenerated method: PlayerData.set_levelsStatsData
void GlobalNamespace::PlayerData::set_levelsStatsData(System::Collections::Generic::List_1<GlobalNamespace::PlayerLevelStatsData*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_levelsStatsData", value));
}
// Autogenerated method: PlayerData.get_missionsStatsData
System::Collections::Generic::List_1<GlobalNamespace::PlayerMissionStatsData*>* GlobalNamespace::PlayerData::get_missionsStatsData() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::List_1<GlobalNamespace::PlayerMissionStatsData*>*>(this, "get_missionsStatsData"));
}
// Autogenerated method: PlayerData.set_missionsStatsData
void GlobalNamespace::PlayerData::set_missionsStatsData(System::Collections::Generic::List_1<GlobalNamespace::PlayerMissionStatsData*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_missionsStatsData", value));
}
// Autogenerated method: PlayerData.get_showedMissionHelpIds
System::Collections::Generic::List_1<::Il2CppString*>* GlobalNamespace::PlayerData::get_showedMissionHelpIds() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::List_1<::Il2CppString*>*>(this, "get_showedMissionHelpIds"));
}
// Autogenerated method: PlayerData.set_showedMissionHelpIds
void GlobalNamespace::PlayerData::set_showedMissionHelpIds(System::Collections::Generic::List_1<::Il2CppString*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_showedMissionHelpIds", value));
}
// Autogenerated method: PlayerData.get_guestPlayerNames
System::Collections::Generic::List_1<::Il2CppString*>* GlobalNamespace::PlayerData::get_guestPlayerNames() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::List_1<::Il2CppString*>*>(this, "get_guestPlayerNames"));
}
// Autogenerated method: PlayerData.set_guestPlayerNames
void GlobalNamespace::PlayerData::set_guestPlayerNames(System::Collections::Generic::List_1<::Il2CppString*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_guestPlayerNames", value));
}
// Autogenerated method: PlayerData.get_colorSchemesSettings
GlobalNamespace::ColorSchemesSettings* GlobalNamespace::PlayerData::get_colorSchemesSettings() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::ColorSchemesSettings*>(this, "get_colorSchemesSettings"));
}
// Autogenerated method: PlayerData.set_colorSchemesSettings
void GlobalNamespace::PlayerData::set_colorSchemesSettings(GlobalNamespace::ColorSchemesSettings* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_colorSchemesSettings", value));
}
// Autogenerated method: PlayerData.get_overrideEnvironmentSettings
GlobalNamespace::OverrideEnvironmentSettings* GlobalNamespace::PlayerData::get_overrideEnvironmentSettings() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OverrideEnvironmentSettings*>(this, "get_overrideEnvironmentSettings"));
}
// Autogenerated method: PlayerData.set_overrideEnvironmentSettings
void GlobalNamespace::PlayerData::set_overrideEnvironmentSettings(GlobalNamespace::OverrideEnvironmentSettings* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_overrideEnvironmentSettings", value));
}
// Autogenerated method: PlayerData.get_favoritesLevelIds
System::Collections::Generic::HashSet_1<::Il2CppString*>* GlobalNamespace::PlayerData::get_favoritesLevelIds() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::Generic::HashSet_1<::Il2CppString*>*>(this, "get_favoritesLevelIds"));
}
// Autogenerated method: PlayerData.set_favoritesLevelIds
void GlobalNamespace::PlayerData::set_favoritesLevelIds(System::Collections::Generic::HashSet_1<::Il2CppString*>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_favoritesLevelIds", value));
}
// Autogenerated method: PlayerData.get_multiplayerModeSettings
GlobalNamespace::MultiplayerModeSettings* GlobalNamespace::PlayerData::get_multiplayerModeSettings() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::MultiplayerModeSettings*>(this, "get_multiplayerModeSettings"));
}
// Autogenerated method: PlayerData.set_multiplayerModeSettings
void GlobalNamespace::PlayerData::set_multiplayerModeSettings(GlobalNamespace::MultiplayerModeSettings* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_multiplayerModeSettings", value));
}
// Autogenerated method: PlayerData.add_favoriteLevelsSetDidChangeEvent
void GlobalNamespace::PlayerData::add_favoriteLevelsSetDidChangeEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_favoriteLevelsSetDidChangeEvent", value));
}
// Autogenerated method: PlayerData.remove_favoriteLevelsSetDidChangeEvent
void GlobalNamespace::PlayerData::remove_favoriteLevelsSetDidChangeEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_favoriteLevelsSetDidChangeEvent", value));
}
// Autogenerated method: PlayerData.add_didIncreaseNumberOfGameplaysEvent
void GlobalNamespace::PlayerData::add_didIncreaseNumberOfGameplaysEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_didIncreaseNumberOfGameplaysEvent", value));
}
// Autogenerated method: PlayerData.remove_didIncreaseNumberOfGameplaysEvent
void GlobalNamespace::PlayerData::remove_didIncreaseNumberOfGameplaysEvent(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_didIncreaseNumberOfGameplaysEvent", value));
}
// Autogenerated method: PlayerData..ctor
GlobalNamespace::PlayerData* GlobalNamespace::PlayerData::New_ctor(::Il2CppString* playerId, ::Il2CppString* playerName, GlobalNamespace::BeatmapCharacteristicSO* lastSelectedBeatmapCharacteristic, GlobalNamespace::ColorSchemesSettings* colorSchemesSettings, GlobalNamespace::OverrideEnvironmentSettings* overrideEnvironmentSettings) {
  return THROW_UNLESS(il2cpp_utils::New<PlayerData*>(playerId, playerName, lastSelectedBeatmapCharacteristic, colorSchemesSettings, overrideEnvironmentSettings));
}
// Autogenerated method: PlayerData..ctor
GlobalNamespace::PlayerData* GlobalNamespace::PlayerData::New_ctor(::Il2CppString* playerId, ::Il2CppString* playerName, bool shouldShowTutorialPrompt, bool shouldShow360Warning, bool agreedToEula, bool agreedToMultiplayerDisclaimer, bool avatarCreated, GlobalNamespace::BeatmapDifficulty lastSelectedBeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* lastSelectedBeatmapCharacteristic, GlobalNamespace::GameplayModifiers* gameplayModifiers, GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, GlobalNamespace::PracticeSettings* practiceSettings, GlobalNamespace::PlayerAllOverallStatsData* playerAllOverallStatsData, System::Collections::Generic::List_1<GlobalNamespace::PlayerLevelStatsData*>* levelsStatsData, System::Collections::Generic::List_1<GlobalNamespace::PlayerMissionStatsData*>* missionsStatsData, System::Collections::Generic::List_1<::Il2CppString*>* showedMissionHelpIds, System::Collections::Generic::List_1<::Il2CppString*>* guestPlayerNames, GlobalNamespace::ColorSchemesSettings* colorSchemesSettings, GlobalNamespace::OverrideEnvironmentSettings* overrideEnvironmentSettings, System::Collections::Generic::List_1<::Il2CppString*>* favoritesLevelIds, GlobalNamespace::MultiplayerModeSettings* multiplayerModeSettings) {
  return THROW_UNLESS(il2cpp_utils::New<PlayerData*>(playerId, playerName, shouldShowTutorialPrompt, shouldShow360Warning, agreedToEula, agreedToMultiplayerDisclaimer, avatarCreated, lastSelectedBeatmapDifficulty, lastSelectedBeatmapCharacteristic, gameplayModifiers, playerSpecificSettings, practiceSettings, playerAllOverallStatsData, levelsStatsData, missionsStatsData, showedMissionHelpIds, guestPlayerNames, colorSchemesSettings, overrideEnvironmentSettings, favoritesLevelIds, multiplayerModeSettings));
}
// Autogenerated method: PlayerData.GetPlayerLevelStatsData
GlobalNamespace::PlayerLevelStatsData* GlobalNamespace::PlayerData::GetPlayerLevelStatsData(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::PlayerLevelStatsData*>(this, "GetPlayerLevelStatsData", difficultyBeatmap));
}
// Autogenerated method: PlayerData.GetPlayerLevelStatsData
GlobalNamespace::PlayerLevelStatsData* GlobalNamespace::PlayerData::GetPlayerLevelStatsData(::Il2CppString* levelId, GlobalNamespace::BeatmapDifficulty difficulty, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::PlayerLevelStatsData*>(this, "GetPlayerLevelStatsData", levelId, difficulty, beatmapCharacteristic));
}
// Autogenerated method: PlayerData.GetPlayerMissionStatsData
GlobalNamespace::PlayerMissionStatsData* GlobalNamespace::PlayerData::GetPlayerMissionStatsData(::Il2CppString* missionId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::PlayerMissionStatsData*>(this, "GetPlayerMissionStatsData", missionId));
}
// Autogenerated method: PlayerData.WasMissionHelpShowed
bool GlobalNamespace::PlayerData::WasMissionHelpShowed(GlobalNamespace::MissionHelpSO* missionHelp) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "WasMissionHelpShowed", missionHelp));
}
// Autogenerated method: PlayerData.MissionHelpWasShowed
void GlobalNamespace::PlayerData::MissionHelpWasShowed(GlobalNamespace::MissionHelpSO* missionHelp) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "MissionHelpWasShowed", missionHelp));
}
// Autogenerated method: PlayerData.IncreaseNumberOfGameplays
void GlobalNamespace::PlayerData::IncreaseNumberOfGameplays(GlobalNamespace::PlayerLevelStatsData* playerLevelStats) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "IncreaseNumberOfGameplays", playerLevelStats));
}
// Autogenerated method: PlayerData.IsLevelUserFavorite
bool GlobalNamespace::PlayerData::IsLevelUserFavorite(GlobalNamespace::IPreviewBeatmapLevel* level) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "IsLevelUserFavorite", level));
}
// Autogenerated method: PlayerData.AddLevelToFavorites
void GlobalNamespace::PlayerData::AddLevelToFavorites(GlobalNamespace::IPreviewBeatmapLevel* level) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddLevelToFavorites", level));
}
// Autogenerated method: PlayerData.RemoveLevelFromFavorites
void GlobalNamespace::PlayerData::RemoveLevelFromFavorites(GlobalNamespace::IPreviewBeatmapLevel* level) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RemoveLevelFromFavorites", level));
}
// Autogenerated method: PlayerData.MarkTutorialAsShown
void GlobalNamespace::PlayerData::MarkTutorialAsShown() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "MarkTutorialAsShown"));
}
// Autogenerated method: PlayerData.Mark360WarningAsShown
void GlobalNamespace::PlayerData::Mark360WarningAsShown() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Mark360WarningAsShown"));
}
// Autogenerated method: PlayerData.MarkEulaAsAgreed
void GlobalNamespace::PlayerData::MarkEulaAsAgreed() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "MarkEulaAsAgreed"));
}
// Autogenerated method: PlayerData.MarkMultiplayerDisclaimerAsAgreed
void GlobalNamespace::PlayerData::MarkMultiplayerDisclaimerAsAgreed() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "MarkMultiplayerDisclaimerAsAgreed"));
}
// Autogenerated method: PlayerData.MarkAvatarCreated
void GlobalNamespace::PlayerData::MarkAvatarCreated() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "MarkAvatarCreated"));
}
// Autogenerated method: PlayerData.AddGuestPlayerName
void GlobalNamespace::PlayerData::AddGuestPlayerName(::Il2CppString* guestPlayerName) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AddGuestPlayerName", guestPlayerName));
}
// Autogenerated method: PlayerData.DeleteAllGuestPlayers
void GlobalNamespace::PlayerData::DeleteAllGuestPlayers() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DeleteAllGuestPlayers"));
}
// Autogenerated method: PlayerData.SetLastSelectedBeatmapDifficulty
void GlobalNamespace::PlayerData::SetLastSelectedBeatmapDifficulty(GlobalNamespace::BeatmapDifficulty beatmapDifficulty) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetLastSelectedBeatmapDifficulty", beatmapDifficulty));
}
// Autogenerated method: PlayerData.SetLastSelectedBeatmapCharacteristic
void GlobalNamespace::PlayerData::SetLastSelectedBeatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetLastSelectedBeatmapCharacteristic", beatmapCharacteristic));
}
// Autogenerated method: PlayerData.SetGameplayModifiers
void GlobalNamespace::PlayerData::SetGameplayModifiers(GlobalNamespace::GameplayModifiers* newGameplayModifiers) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetGameplayModifiers", newGameplayModifiers));
}
// Autogenerated method: PlayerData.SetPlayerSpecificSettings
void GlobalNamespace::PlayerData::SetPlayerSpecificSettings(GlobalNamespace::PlayerSpecificSettings* newPlayerSpecificSettings) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetPlayerSpecificSettings", newPlayerSpecificSettings));
}
// Autogenerated method: PlayerData.SetMultiplayerModeSettings
void GlobalNamespace::PlayerData::SetMultiplayerModeSettings(GlobalNamespace::MultiplayerModeSettings* multiplayerModeSettings) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetMultiplayerModeSettings", multiplayerModeSettings));
}
