// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BGNetLogger
#include "GlobalNamespace/BGNetLogger.hpp"
// Including type: Microsoft.Extensions.Logging.ILogger
#include "Microsoft/Extensions/Logging/ILogger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BGNetLogger.LogError
void GlobalNamespace::BGNetLogger::LogError(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BGNetLogger").WithContext("LogError");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: BGNetLogger.LogInfo
void GlobalNamespace::BGNetLogger::LogInfo(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BGNetLogger").WithContext("LogInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LogInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: BGNetLogger.LogWarning
void GlobalNamespace::BGNetLogger::LogWarning(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BGNetLogger").WithContext("LogWarning");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
