// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerUnavailableReasonMethods
#include "GlobalNamespace/MultiplayerUnavailableReasonMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: MultiplayerUnavailableReason
#include "GlobalNamespace/MultiplayerUnavailableReason.hpp"
// Including type: MasterServerAvailabilityData
#include "GlobalNamespace/MasterServerAvailabilityData.hpp"
// Including type: Polyglot.Language
#include "Polyglot/Language.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableNetworkUnreachable
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableNetworkUnreachable() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableNetworkUnreachable"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableNetworkUnreachable
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableNetworkUnreachable(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableNetworkUnreachable", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableServerOffline
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableServerOffline() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableServerOffline"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableServerOffline
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableServerOffline(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableServerOffline", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableUpdateRequired
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableUpdateRequired() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableUpdateRequired"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableUpdateRequired
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableUpdateRequired(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableUpdateRequired", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableMaintenanceMode
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableMaintenanceMode() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableMaintenanceMode"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableMaintenanceMode
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableMaintenanceMode(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableMaintenanceMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableUnknown
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableUnknown() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableUnknown"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableUnknown
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableUnknown(::Il2CppString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableUnknown", value));
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.LocalizedKey
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::LocalizedKey(GlobalNamespace::MultiplayerUnavailableReason multiplayerUnavailableReason) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "LocalizedKey", multiplayerUnavailableReason));
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.ErrorCode
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::ErrorCode(GlobalNamespace::MultiplayerUnavailableReason multiplayerUnavailableReason) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "ErrorCode", multiplayerUnavailableReason));
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.TryGetMultiplayerUnavailableReason
bool GlobalNamespace::MultiplayerUnavailableReasonMethods::TryGetMultiplayerUnavailableReason(GlobalNamespace::MasterServerAvailabilityData* data, GlobalNamespace::MultiplayerUnavailableReason& reason) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "MultiplayerUnavailableReasonMethods", "TryGetMultiplayerUnavailableReason", data, reason));
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.GetLocalizedMessage
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::GetLocalizedMessage(GlobalNamespace::MasterServerAvailabilityData* data, Polyglot::Language language) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "GetLocalizedMessage", data, language));
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.VersionLessThan
bool GlobalNamespace::MultiplayerUnavailableReasonMethods::VersionLessThan(::Il2CppString* currentVersion, ::Il2CppString* minVersion) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "MultiplayerUnavailableReasonMethods", "VersionLessThan", currentVersion, minVersion));
}
