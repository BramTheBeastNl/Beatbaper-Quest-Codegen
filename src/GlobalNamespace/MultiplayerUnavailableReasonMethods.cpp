// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerUnavailableReasonMethods
#include "GlobalNamespace/MultiplayerUnavailableReasonMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: MultiplayerUnavailableReason
#include "GlobalNamespace/MultiplayerUnavailableReason.hpp"
// Including type: MasterServerAvailabilityData
#include "GlobalNamespace/MasterServerAvailabilityData.hpp"
// Including type: Polyglot.Language
#include "Polyglot/Language.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableNetworkUnreachable
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableNetworkUnreachable() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerUnavailableReasonMethods").WithContext("_get_kMultiplayerUnavailableNetworkUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableNetworkUnreachable"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableNetworkUnreachable
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableNetworkUnreachable(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerUnavailableReasonMethods").WithContext("_set_kMultiplayerUnavailableNetworkUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableNetworkUnreachable", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableServerOffline
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableServerOffline() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerUnavailableReasonMethods").WithContext("_get_kMultiplayerUnavailableServerOffline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableServerOffline"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableServerOffline
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableServerOffline(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerUnavailableReasonMethods").WithContext("_set_kMultiplayerUnavailableServerOffline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableServerOffline", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableUpdateRequired
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableUpdateRequired() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerUnavailableReasonMethods").WithContext("_get_kMultiplayerUnavailableUpdateRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableUpdateRequired"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableUpdateRequired
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableUpdateRequired(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerUnavailableReasonMethods").WithContext("_set_kMultiplayerUnavailableUpdateRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableUpdateRequired", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableMaintenanceMode
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableMaintenanceMode() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerUnavailableReasonMethods").WithContext("_get_kMultiplayerUnavailableMaintenanceMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableMaintenanceMode"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableMaintenanceMode
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableMaintenanceMode(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerUnavailableReasonMethods").WithContext("_set_kMultiplayerUnavailableMaintenanceMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableMaintenanceMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableUnknown
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableUnknown() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerUnavailableReasonMethods").WithContext("_get_kMultiplayerUnavailableUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableUnknown"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableUnknown
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableUnknown(::Il2CppString* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerUnavailableReasonMethods").WithContext("_set_kMultiplayerUnavailableUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableUnknown", value));
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.LocalizedKey
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::LocalizedKey(GlobalNamespace::MultiplayerUnavailableReason multiplayerUnavailableReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerUnavailableReasonMethods").WithContext("LocalizedKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", il2cpp_utils::NoArgClass<::Il2CppString*>(), "LocalizedKey", {}, ::il2cpp_utils::ExtractTypes(multiplayerUnavailableReason)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, multiplayerUnavailableReason);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.ErrorCode
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::ErrorCode(GlobalNamespace::MultiplayerUnavailableReason multiplayerUnavailableReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerUnavailableReasonMethods").WithContext("ErrorCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", il2cpp_utils::NoArgClass<::Il2CppString*>(), "ErrorCode", {}, ::il2cpp_utils::ExtractTypes(multiplayerUnavailableReason)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, multiplayerUnavailableReason);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.TryGetMultiplayerUnavailableReason
bool GlobalNamespace::MultiplayerUnavailableReasonMethods::TryGetMultiplayerUnavailableReason(GlobalNamespace::MasterServerAvailabilityData* data, GlobalNamespace::MultiplayerUnavailableReason& reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerUnavailableReasonMethods").WithContext("TryGetMultiplayerUnavailableReason");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", il2cpp_utils::NoArgClass<bool>(), "TryGetMultiplayerUnavailableReason", {}, ::il2cpp_utils::ExtractTypes(data, reason)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data, reason);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.GetLocalizedMessage
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::GetLocalizedMessage(GlobalNamespace::MasterServerAvailabilityData* data, Polyglot::Language language) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerUnavailableReasonMethods").WithContext("GetLocalizedMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", il2cpp_utils::NoArgClass<::Il2CppString*>(), "GetLocalizedMessage", {}, ::il2cpp_utils::ExtractTypes(data, language)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data, language);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.VersionLessThan
bool GlobalNamespace::MultiplayerUnavailableReasonMethods::VersionLessThan(::Il2CppString* currentVersion, ::Il2CppString* minVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerUnavailableReasonMethods").WithContext("VersionLessThan");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", il2cpp_utils::NoArgClass<bool>(), "VersionLessThan", {}, ::il2cpp_utils::ExtractTypes(currentVersion, minVersion)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, currentVersion, minVersion);
}
