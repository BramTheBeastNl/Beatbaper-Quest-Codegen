// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRDisplay
#include "GlobalNamespace/OVRDisplay.hpp"
// Including type: OVRDisplay/EyeFov
#include "GlobalNamespace/OVRDisplay_EyeFov.hpp"
// Including type: OVRDisplay/EyeRenderDesc
#include "GlobalNamespace/OVRDisplay_EyeRenderDesc.hpp"
// Including type: OVRDisplay/LatencyData
#include "GlobalNamespace/OVRDisplay_LatencyData.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRDisplay.Update
void GlobalNamespace::OVRDisplay::Update() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Update"));
}
// Autogenerated method: OVRDisplay.add_RecenteredPose
void GlobalNamespace::OVRDisplay::add_RecenteredPose(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_RecenteredPose", value));
}
// Autogenerated method: OVRDisplay.remove_RecenteredPose
void GlobalNamespace::OVRDisplay::remove_RecenteredPose(System::Action* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_RecenteredPose", value));
}
// Autogenerated method: OVRDisplay.RecenterPose
void GlobalNamespace::OVRDisplay::RecenterPose() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RecenterPose"));
}
// Autogenerated method: OVRDisplay.get_acceleration
UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_acceleration() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_acceleration"));
}
// Autogenerated method: OVRDisplay.get_angularAcceleration
UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_angularAcceleration() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_angularAcceleration"));
}
// Autogenerated method: OVRDisplay.get_velocity
UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_velocity() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_velocity"));
}
// Autogenerated method: OVRDisplay.get_angularVelocity
UnityEngine::Vector3 GlobalNamespace::OVRDisplay::get_angularVelocity() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_angularVelocity"));
}
// Autogenerated method: OVRDisplay.GetEyeRenderDesc
GlobalNamespace::OVRDisplay::EyeRenderDesc GlobalNamespace::OVRDisplay::GetEyeRenderDesc(UnityEngine::XR::XRNode eye) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRDisplay::EyeRenderDesc>(this, "GetEyeRenderDesc", eye));
}
// Autogenerated method: OVRDisplay.get_latency
GlobalNamespace::OVRDisplay::LatencyData GlobalNamespace::OVRDisplay::get_latency() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRDisplay::LatencyData>(this, "get_latency"));
}
// Autogenerated method: OVRDisplay.get_appFramerate
float GlobalNamespace::OVRDisplay::get_appFramerate() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_appFramerate"));
}
// Autogenerated method: OVRDisplay.get_recommendedMSAALevel
int GlobalNamespace::OVRDisplay::get_recommendedMSAALevel() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_recommendedMSAALevel"));
}
// Autogenerated method: OVRDisplay.get_displayFrequenciesAvailable
::Array<float>* GlobalNamespace::OVRDisplay::get_displayFrequenciesAvailable() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<float>*>(this, "get_displayFrequenciesAvailable"));
}
// Autogenerated method: OVRDisplay.get_displayFrequency
float GlobalNamespace::OVRDisplay::get_displayFrequency() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_displayFrequency"));
}
// Autogenerated method: OVRDisplay.set_displayFrequency
void GlobalNamespace::OVRDisplay::set_displayFrequency(float value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_displayFrequency", value));
}
// Autogenerated method: OVRDisplay.UpdateTextures
void GlobalNamespace::OVRDisplay::UpdateTextures() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdateTextures"));
}
// Autogenerated method: OVRDisplay.ConfigureEyeDesc
void GlobalNamespace::OVRDisplay::ConfigureEyeDesc(UnityEngine::XR::XRNode eye) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ConfigureEyeDesc", eye));
}
// Autogenerated method: OVRDisplay..ctor
GlobalNamespace::OVRDisplay* GlobalNamespace::OVRDisplay::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<OVRDisplay*>());
}
