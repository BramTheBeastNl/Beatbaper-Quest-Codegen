// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServerAvailabilityModel
#include "GlobalNamespace/MasterServerAvailabilityModel.hpp"
// Including type: MasterServerAvailabilityModel/<GetAvailabilityAsyncInternal>d__9
#include "GlobalNamespace/MasterServerAvailabilityModel_-GetAvailabilityAsyncInternal-d__9.hpp"
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: System.Net.Http.HttpClient
#include "System/Net/Http/HttpClient.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: MasterServerAvailabilityData
#include "GlobalNamespace/MasterServerAvailabilityData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kRequestCacheTimeHours
float GlobalNamespace::MasterServerAvailabilityModel::_get_kRequestCacheTimeHours() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MasterServerAvailabilityModel", "kRequestCacheTimeHours"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kRequestCacheTimeHours
void GlobalNamespace::MasterServerAvailabilityModel::_set_kRequestCacheTimeHours(float value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerAvailabilityModel", "kRequestCacheTimeHours", value));
}
// Autogenerated method: MasterServerAvailabilityModel.Init
void GlobalNamespace::MasterServerAvailabilityModel::Init() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Init"));
}
// Autogenerated method: MasterServerAvailabilityModel.IsAvailabilityTaskValid
bool GlobalNamespace::MasterServerAvailabilityModel::IsAvailabilityTaskValid() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "IsAvailabilityTaskValid"));
}
// Autogenerated method: MasterServerAvailabilityModel.StartRequest
void GlobalNamespace::MasterServerAvailabilityModel::StartRequest() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "StartRequest"));
}
// Autogenerated method: MasterServerAvailabilityModel.GetAvailabilityAsyncInternal
System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerAvailabilityData*>* GlobalNamespace::MasterServerAvailabilityModel::GetAvailabilityAsyncInternal() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerAvailabilityData*>*>(this, "GetAvailabilityAsyncInternal"));
}
// Autogenerated method: MasterServerAvailabilityModel.GetAvailabilityAsync
System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerAvailabilityData*>* GlobalNamespace::MasterServerAvailabilityModel::GetAvailabilityAsync(System::Threading::CancellationToken cancellationToken) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerAvailabilityData*>*>(this, "GetAvailabilityAsync", cancellationToken));
}
// Autogenerated method: MasterServerAvailabilityModel..ctor
GlobalNamespace::MasterServerAvailabilityModel* GlobalNamespace::MasterServerAvailabilityModel::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<MasterServerAvailabilityModel*>());
}
