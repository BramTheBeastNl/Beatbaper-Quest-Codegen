// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/Media
#include "GlobalNamespace/OVRPlugin_Media.hpp"
// Including type: OVRPlugin/Media/MrcActivationMode
#include "GlobalNamespace/OVRPlugin_Media_MrcActivationMode.hpp"
// Including type: OVRPlugin/Media/InputVideoBufferType
#include "GlobalNamespace/OVRPlugin_Media_InputVideoBufferType.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Texture2D cachedTexture
UnityEngine::Texture2D* GlobalNamespace::OVRPlugin::Media::_get_cachedTexture() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Texture2D*>("", "OVRPlugin/Media", "cachedTexture"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Texture2D cachedTexture
void GlobalNamespace::OVRPlugin::Media::_set_cachedTexture(UnityEngine::Texture2D* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media", "cachedTexture", value));
}
// Autogenerated method: OVRPlugin/Media.Initialize
bool GlobalNamespace::OVRPlugin::Media::Initialize() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRPlugin/Media", "Initialize"));
}
// Autogenerated method: OVRPlugin/Media.Shutdown
bool GlobalNamespace::OVRPlugin::Media::Shutdown() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRPlugin/Media", "Shutdown"));
}
// Autogenerated method: OVRPlugin/Media.GetInitialized
bool GlobalNamespace::OVRPlugin::Media::GetInitialized() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRPlugin/Media", "GetInitialized"));
}
// Autogenerated method: OVRPlugin/Media.Update
bool GlobalNamespace::OVRPlugin::Media::Update() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRPlugin/Media", "Update"));
}
// Autogenerated method: OVRPlugin/Media.GetMrcActivationMode
GlobalNamespace::OVRPlugin::Media::MrcActivationMode GlobalNamespace::OVRPlugin::Media::GetMrcActivationMode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPlugin::Media::MrcActivationMode>("", "OVRPlugin/Media", "GetMrcActivationMode"));
}
// Autogenerated method: OVRPlugin/Media.SetMrcActivationMode
bool GlobalNamespace::OVRPlugin::Media::SetMrcActivationMode(GlobalNamespace::OVRPlugin::Media::MrcActivationMode mode) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRPlugin/Media", "SetMrcActivationMode", mode));
}
// Autogenerated method: OVRPlugin/Media.IsMrcEnabled
bool GlobalNamespace::OVRPlugin::Media::IsMrcEnabled() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRPlugin/Media", "IsMrcEnabled"));
}
// Autogenerated method: OVRPlugin/Media.IsMrcActivated
bool GlobalNamespace::OVRPlugin::Media::IsMrcActivated() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRPlugin/Media", "IsMrcActivated"));
}
// Autogenerated method: OVRPlugin/Media.UseMrcDebugCamera
bool GlobalNamespace::OVRPlugin::Media::UseMrcDebugCamera() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRPlugin/Media", "UseMrcDebugCamera"));
}
// Autogenerated method: OVRPlugin/Media.SetMrcInputVideoBufferType
bool GlobalNamespace::OVRPlugin::Media::SetMrcInputVideoBufferType(GlobalNamespace::OVRPlugin::Media::InputVideoBufferType videoBufferType) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRPlugin/Media", "SetMrcInputVideoBufferType", videoBufferType));
}
// Autogenerated method: OVRPlugin/Media.GetMrcInputVideoBufferType
GlobalNamespace::OVRPlugin::Media::InputVideoBufferType GlobalNamespace::OVRPlugin::Media::GetMrcInputVideoBufferType() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::OVRPlugin::Media::InputVideoBufferType>("", "OVRPlugin/Media", "GetMrcInputVideoBufferType"));
}
// Autogenerated method: OVRPlugin/Media.SetMrcFrameSize
bool GlobalNamespace::OVRPlugin::Media::SetMrcFrameSize(int frameWidth, int frameHeight) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRPlugin/Media", "SetMrcFrameSize", frameWidth, frameHeight));
}
// Autogenerated method: OVRPlugin/Media.GetMrcFrameSize
void GlobalNamespace::OVRPlugin::Media::GetMrcFrameSize(int& frameWidth, int& frameHeight) {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRPlugin/Media", "GetMrcFrameSize", frameWidth, frameHeight));
}
// Autogenerated method: OVRPlugin/Media.SetMrcAudioSampleRate
bool GlobalNamespace::OVRPlugin::Media::SetMrcAudioSampleRate(int sampleRate) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRPlugin/Media", "SetMrcAudioSampleRate", sampleRate));
}
// Autogenerated method: OVRPlugin/Media.GetMrcAudioSampleRate
int GlobalNamespace::OVRPlugin::Media::GetMrcAudioSampleRate() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("", "OVRPlugin/Media", "GetMrcAudioSampleRate"));
}
// Autogenerated method: OVRPlugin/Media.SetMrcFrameImageFlipped
bool GlobalNamespace::OVRPlugin::Media::SetMrcFrameImageFlipped(bool imageFlipped) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRPlugin/Media", "SetMrcFrameImageFlipped", imageFlipped));
}
// Autogenerated method: OVRPlugin/Media.GetMrcFrameImageFlipped
bool GlobalNamespace::OVRPlugin::Media::GetMrcFrameImageFlipped() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRPlugin/Media", "GetMrcFrameImageFlipped"));
}
// Autogenerated method: OVRPlugin/Media.EncodeMrcFrame
bool GlobalNamespace::OVRPlugin::Media::EncodeMrcFrame(System::IntPtr textureHandle, ::Array<float>* audioData, int audioFrames, int audioChannels, double timestamp, int& outSyncId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRPlugin/Media", "EncodeMrcFrame", textureHandle, audioData, audioFrames, audioChannels, timestamp, outSyncId));
}
// Autogenerated method: OVRPlugin/Media.EncodeMrcFrame
bool GlobalNamespace::OVRPlugin::Media::EncodeMrcFrame(UnityEngine::RenderTexture* frame, ::Array<float>* audioData, int audioFrames, int audioChannels, double timestamp, int& outSyncId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRPlugin/Media", "EncodeMrcFrame", frame, audioData, audioFrames, audioChannels, timestamp, outSyncId));
}
// Autogenerated method: OVRPlugin/Media.SyncMrcFrame
bool GlobalNamespace::OVRPlugin::Media::SyncMrcFrame(int syncId) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "OVRPlugin/Media", "SyncMrcFrame", syncId));
}
// Autogenerated method: OVRPlugin/Media..cctor
void GlobalNamespace::OVRPlugin::Media::_cctor() {
  THROW_UNLESS(il2cpp_utils::RunMethod("", "OVRPlugin/Media", ".cctor"));
}
// Autogenerated method: OVRPlugin/Media..ctor
GlobalNamespace::OVRPlugin::Media* GlobalNamespace::OVRPlugin::Media::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<OVRPlugin::Media*>());
}
