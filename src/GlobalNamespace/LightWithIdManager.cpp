// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LightWithIdManager
#include "GlobalNamespace/LightWithIdManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ILightWithId
#include "GlobalNamespace/ILightWithId.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxLightId
int GlobalNamespace::LightWithIdManager::_get_kMaxLightId() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LightWithIdManager").WithContext("_get_kMaxLightId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LightWithIdManager", "kMaxLightId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxLightId
void GlobalNamespace::LightWithIdManager::_set_kMaxLightId(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LightWithIdManager").WithContext("_set_kMaxLightId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightWithIdManager", "kMaxLightId", value));
}
// Autogenerated method: LightWithIdManager.add_didChangeSomeColorsThisFrameEvent
void GlobalNamespace::LightWithIdManager::add_didChangeSomeColorsThisFrameEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LightWithIdManager").WithContext("add_didChangeSomeColorsThisFrameEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "add_didChangeSomeColorsThisFrameEvent", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightWithIdManager.remove_didChangeSomeColorsThisFrameEvent
void GlobalNamespace::LightWithIdManager::remove_didChangeSomeColorsThisFrameEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LightWithIdManager").WithContext("remove_didChangeSomeColorsThisFrameEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "remove_didChangeSomeColorsThisFrameEvent", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightWithIdManager.add_didSetColorForIdEvent
void GlobalNamespace::LightWithIdManager::add_didSetColorForIdEvent(System::Action_2<int, UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LightWithIdManager").WithContext("add_didSetColorForIdEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "add_didSetColorForIdEvent", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightWithIdManager.remove_didSetColorForIdEvent
void GlobalNamespace::LightWithIdManager::remove_didSetColorForIdEvent(System::Action_2<int, UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LightWithIdManager").WithContext("remove_didSetColorForIdEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "remove_didSetColorForIdEvent", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightWithIdManager.get_colors
::Array<System::Nullable_1<UnityEngine::Color>>* GlobalNamespace::LightWithIdManager::get_colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LightWithIdManager").WithContext("get_colors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Array<System::Nullable_1<UnityEngine::Color>>*>(), "get_colors", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Nullable_1<UnityEngine::Color>>*, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIdManager.LateUpdate
void GlobalNamespace::LightWithIdManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LightWithIdManager").WithContext("LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "LateUpdate", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIdManager.RegisterLight
void GlobalNamespace::LightWithIdManager::RegisterLight(GlobalNamespace::ILightWithId* lightWithId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LightWithIdManager").WithContext("RegisterLight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "RegisterLight", {}, ::il2cpp_utils::ExtractTypes(lightWithId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lightWithId);
}
// Autogenerated method: LightWithIdManager.UnregisterLight
void GlobalNamespace::LightWithIdManager::UnregisterLight(GlobalNamespace::ILightWithId* lightWithId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LightWithIdManager").WithContext("UnregisterLight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "UnregisterLight", {}, ::il2cpp_utils::ExtractTypes(lightWithId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lightWithId);
}
// Autogenerated method: LightWithIdManager.SetColorForId
void GlobalNamespace::LightWithIdManager::SetColorForId(int lightId, UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LightWithIdManager").WithContext("SetColorForId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetColorForId", {}, ::il2cpp_utils::ExtractTypes(lightId, color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lightId, color);
}
// Autogenerated method: LightWithIdManager.GetColorForId
UnityEngine::Color GlobalNamespace::LightWithIdManager::GetColorForId(int lightId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LightWithIdManager").WithContext("GetColorForId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Color>(), "GetColorForId", {}, ::il2cpp_utils::ExtractTypes(lightId)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, lightId);
}
// Autogenerated method: LightWithIdManager..ctor
GlobalNamespace::LightWithIdManager* GlobalNamespace::LightWithIdManager::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("LightWithIdManager").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<LightWithIdManager*>());
}
