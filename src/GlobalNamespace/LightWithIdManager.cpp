// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LightWithIdManager
#include "GlobalNamespace\LightWithIdManager.hpp"
// Including type: System.Action`2
#include "System\Action_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System\Collections\Generic\List_1.hpp"
// Including type: LightWithId
#include "GlobalNamespace\LightWithId.hpp"
// Including type: System.Nullable`1
#include "System\Nullable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxLightId
int GlobalNamespace::LightWithIdManager::_get_kMaxLightId() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LightWithIdManager", "kMaxLightId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxLightId
void GlobalNamespace::LightWithIdManager::_set_kMaxLightId(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightWithIdManager", "kMaxLightId", value));
}
// Autogenerated method: LightWithIdManager.add_didSetColorForIdEvent
void GlobalNamespace::LightWithIdManager::add_didSetColorForIdEvent(System::Action_2<int, UnityEngine::Color>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_didSetColorForIdEvent", value));
}
// Autogenerated method: LightWithIdManager.remove_didSetColorForIdEvent
void GlobalNamespace::LightWithIdManager::remove_didSetColorForIdEvent(System::Action_2<int, UnityEngine::Color>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_didSetColorForIdEvent", value));
}
// Autogenerated method: LightWithIdManager.get_colors
::Array<System::Nullable_1<UnityEngine::Color>>* GlobalNamespace::LightWithIdManager::get_colors() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<System::Nullable_1<UnityEngine::Color>>*>(this, "get_colors"));
}
// Autogenerated method: LightWithIdManager.get_lastColorChangeFrameNum
int GlobalNamespace::LightWithIdManager::get_lastColorChangeFrameNum() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_lastColorChangeFrameNum"));
}
// Autogenerated method: LightWithIdManager.RegisterLight
void GlobalNamespace::LightWithIdManager::RegisterLight(GlobalNamespace::LightWithId* light) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RegisterLight", light));
}
// Autogenerated method: LightWithIdManager.UnregisterLight
void GlobalNamespace::LightWithIdManager::UnregisterLight(GlobalNamespace::LightWithId* light) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UnregisterLight", light));
}
// Autogenerated method: LightWithIdManager.SetColorForId
void GlobalNamespace::LightWithIdManager::SetColorForId(int id, UnityEngine::Color color) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetColorForId", id, color));
}
// Autogenerated method: LightWithIdManager.GetColorForId
UnityEngine::Color GlobalNamespace::LightWithIdManager::GetColorForId(int id) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>(this, "GetColorForId", id));
}
// Autogenerated method: LightWithIdManager..ctor
GlobalNamespace::LightWithIdManager* GlobalNamespace::LightWithIdManager::New_ctor() {
  return (LightWithIdManager*)THROW_UNLESS(il2cpp_utils::New("", "LightWithIdManager"));
}
