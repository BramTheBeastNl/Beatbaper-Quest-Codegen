// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxLights
int GlobalNamespace::DirectionalLight::_get_kMaxLights() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("DirectionalLight").WithContext("_get_kMaxLights");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "DirectionalLight", "kMaxLights"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxLights
void GlobalNamespace::DirectionalLight::_set_kMaxLights(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("DirectionalLight").WithContext("_set_kMaxLights");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DirectionalLight", "kMaxLights", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<DirectionalLight> _lights
System::Collections::Generic::List_1<GlobalNamespace::DirectionalLight*>* GlobalNamespace::DirectionalLight::_get__lights() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("DirectionalLight").WithContext("_get__lights");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::DirectionalLight*>*>("", "DirectionalLight", "_lights"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<DirectionalLight> _lights
void GlobalNamespace::DirectionalLight::_set__lights(System::Collections::Generic::List_1<GlobalNamespace::DirectionalLight*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("DirectionalLight").WithContext("_set__lights");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DirectionalLight", "_lights", value));
}
// Autogenerated static field getter
// Get static field: static private DirectionalLight _mainLight
GlobalNamespace::DirectionalLight* GlobalNamespace::DirectionalLight::_get__mainLight() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("DirectionalLight").WithContext("_get__mainLight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DirectionalLight*>("", "DirectionalLight", "_mainLight"));
}
// Autogenerated static field setter
// Set static field: static private DirectionalLight _mainLight
void GlobalNamespace::DirectionalLight::_set__mainLight(GlobalNamespace::DirectionalLight* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("DirectionalLight").WithContext("_set__mainLight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DirectionalLight", "_mainLight", value));
}
// Autogenerated method: DirectionalLight.get_lights
System::Collections::Generic::List_1<GlobalNamespace::DirectionalLight*>* GlobalNamespace::DirectionalLight::get_lights() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("DirectionalLight").WithContext("get_lights");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "DirectionalLight", il2cpp_utils::NoArgClass<System::Collections::Generic::List_1<GlobalNamespace::DirectionalLight*>*>(), "get_lights", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::DirectionalLight*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: DirectionalLight.NoDomainReloadInit
void GlobalNamespace::DirectionalLight::NoDomainReloadInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("DirectionalLight").WithContext("NoDomainReloadInit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "DirectionalLight", il2cpp_utils::NoArgClass<void>(), "NoDomainReloadInit", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: DirectionalLight.OnEnable
void GlobalNamespace::DirectionalLight::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("DirectionalLight").WithContext("OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnEnable", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DirectionalLight.OnDisable
void GlobalNamespace::DirectionalLight::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("DirectionalLight").WithContext("OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "OnDisable", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DirectionalLight..ctor
GlobalNamespace::DirectionalLight* GlobalNamespace::DirectionalLight::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("DirectionalLight").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<DirectionalLight*>());
}
// Autogenerated method: DirectionalLight..cctor
void GlobalNamespace::DirectionalLight::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("DirectionalLight").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "DirectionalLight", il2cpp_utils::NoArgClass<void>(), ".cctor", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
