// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandaloneThreadContext
#include "GlobalNamespace/StandaloneThreadContext.hpp"
// Including type: StandaloneThreadContext/StandaloneSynchronizationContext
#include "GlobalNamespace/StandaloneThreadContext_StandaloneSynchronizationContext.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandaloneThreadContext.get_task
System::Threading::Tasks::Task* GlobalNamespace::StandaloneThreadContext::get_task() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task*>(this, "get_task"));
}
// Autogenerated method: StandaloneThreadContext..ctor
GlobalNamespace::StandaloneThreadContext* GlobalNamespace::StandaloneThreadContext::New_ctor(System::Func_2<System::Threading::CancellationToken, System::Threading::Tasks::Task*>* taskRunner, System::Threading::CancellationToken cancellationToken) {
  return THROW_UNLESS(il2cpp_utils::New<StandaloneThreadContext*>(taskRunner, cancellationToken));
}
// Autogenerated method: StandaloneThreadContext.RunInternal
void GlobalNamespace::StandaloneThreadContext::RunInternal() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "RunInternal"));
}
// Autogenerated method: StandaloneThreadContext.Run
System::Threading::Tasks::Task* GlobalNamespace::StandaloneThreadContext::Run(System::Func_2<System::Threading::CancellationToken, System::Threading::Tasks::Task*>* taskRunner, System::Threading::CancellationToken cancellationToken) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task*>("", "StandaloneThreadContext", "Run", taskRunner, cancellationToken));
}
