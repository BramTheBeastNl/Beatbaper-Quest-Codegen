// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerConnectedPlayerBeatmapObjectManager
#include "GlobalNamespace/MultiplayerConnectedPlayerBeatmapObjectManager.hpp"
// Including type: MultiplayerConnectedPlayerBeatmapObjectManager/InitData
#include "GlobalNamespace/MultiplayerConnectedPlayerBeatmapObjectManager_InitData.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: MonoMemoryPoolContainer`1
#include "GlobalNamespace/MonoMemoryPoolContainer_1.hpp"
// Including type: NoteCutInfoNetSerializable
#include "GlobalNamespace/NoteCutInfoNetSerializable.hpp"
// Including type: IConnectedPlayerNoteEventManager
#include "GlobalNamespace/IConnectedPlayerNoteEventManager.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: MultiplayerConnectedPlayerGameNoteController/Pool
#include "GlobalNamespace/MultiplayerConnectedPlayerGameNoteController_Pool.hpp"
// Including type: MultiplayerConnectedPlayerBombNoteController/Pool
#include "GlobalNamespace/MultiplayerConnectedPlayerBombNoteController_Pool.hpp"
// Including type: BeatmapObjectSpawnMovementData/ObstacleSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_ObstacleSpawnData.hpp"
// Including type: BeatmapObjectSpawnMovementData/NoteSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_NoteSpawnData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerConnectedPlayerBeatmapObjectManager.HandleMultiplayerNoteEventManagerNoteWasCut
void GlobalNamespace::MultiplayerConnectedPlayerBeatmapObjectManager::HandleMultiplayerNoteEventManagerNoteWasCut(GlobalNamespace::NoteCutInfoNetSerializable* noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerConnectedPlayerBeatmapObjectManager").WithContext("HandleMultiplayerNoteEventManagerNoteWasCut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMultiplayerNoteEventManagerNoteWasCut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteCutInfo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteCutInfo);
}
// Autogenerated method: MultiplayerConnectedPlayerBeatmapObjectManager.AreNotesSame
bool GlobalNamespace::MultiplayerConnectedPlayerBeatmapObjectManager::AreNotesSame(GlobalNamespace::NoteController* noteController, GlobalNamespace::NoteCutInfoNetSerializable* noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerConnectedPlayerBeatmapObjectManager").WithContext("AreNotesSame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MultiplayerConnectedPlayerBeatmapObjectManager", "AreNotesSame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController, noteCutInfo)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, noteController, noteCutInfo);
}
// Autogenerated method: MultiplayerConnectedPlayerBeatmapObjectManager.get_activeObstacleControllers
System::Collections::Generic::HashSet_1<GlobalNamespace::ObstacleController*>* GlobalNamespace::MultiplayerConnectedPlayerBeatmapObjectManager::get_activeObstacleControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerConnectedPlayerBeatmapObjectManager").WithContext("get_activeObstacleControllers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_activeObstacleControllers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::HashSet_1<GlobalNamespace::ObstacleController*>*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerConnectedPlayerBeatmapObjectManager.Dispose
void GlobalNamespace::MultiplayerConnectedPlayerBeatmapObjectManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerConnectedPlayerBeatmapObjectManager").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void GlobalNamespace::MultiplayerConnectedPlayerBeatmapObjectManager::System_IDisposable_Dispose() {
  GlobalNamespace::MultiplayerConnectedPlayerBeatmapObjectManager::Dispose();
}
// Autogenerated method: MultiplayerConnectedPlayerBeatmapObjectManager.SpawnObstacleInternal
GlobalNamespace::ObstacleController* GlobalNamespace::MultiplayerConnectedPlayerBeatmapObjectManager::SpawnObstacleInternal(GlobalNamespace::ObstacleData* obstacleData, GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData obstacleSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerConnectedPlayerBeatmapObjectManager").WithContext("SpawnObstacleInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnObstacleInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleData, obstacleSpawnData, rotation)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ObstacleController*, false>(this, ___internal__method, obstacleData, obstacleSpawnData, rotation);
}
// Autogenerated method: MultiplayerConnectedPlayerBeatmapObjectManager.SpawnBombNoteInternal
GlobalNamespace::NoteController* GlobalNamespace::MultiplayerConnectedPlayerBeatmapObjectManager::SpawnBombNoteInternal(GlobalNamespace::NoteData* bombNoteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerConnectedPlayerBeatmapObjectManager").WithContext("SpawnBombNoteInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnBombNoteInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bombNoteData, noteSpawnData, rotation)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteController*, false>(this, ___internal__method, bombNoteData, noteSpawnData, rotation);
}
// Autogenerated method: MultiplayerConnectedPlayerBeatmapObjectManager.SpawnBasicNoteInternal
GlobalNamespace::NoteController* GlobalNamespace::MultiplayerConnectedPlayerBeatmapObjectManager::SpawnBasicNoteInternal(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation, float cutDirectionAngleOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerConnectedPlayerBeatmapObjectManager").WithContext("SpawnBasicNoteInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnBasicNoteInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, noteSpawnData, rotation, cutDirectionAngleOffset)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteController*, false>(this, ___internal__method, noteData, noteSpawnData, rotation, cutDirectionAngleOffset);
}
// Autogenerated method: MultiplayerConnectedPlayerBeatmapObjectManager.DespawnInternal
void GlobalNamespace::MultiplayerConnectedPlayerBeatmapObjectManager::DespawnInternal(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerConnectedPlayerBeatmapObjectManager").WithContext("DespawnInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: MultiplayerConnectedPlayerBeatmapObjectManager.DespawnInternal
void GlobalNamespace::MultiplayerConnectedPlayerBeatmapObjectManager::DespawnInternal(GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerConnectedPlayerBeatmapObjectManager").WithContext("DespawnInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: MultiplayerConnectedPlayerBeatmapObjectManager.DissolveAllObjects
void GlobalNamespace::MultiplayerConnectedPlayerBeatmapObjectManager::DissolveAllObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerConnectedPlayerBeatmapObjectManager").WithContext("DissolveAllObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DissolveAllObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerConnectedPlayerBeatmapObjectManager.HideAllBeatmapObjects
void GlobalNamespace::MultiplayerConnectedPlayerBeatmapObjectManager::HideAllBeatmapObjects(bool hide) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerConnectedPlayerBeatmapObjectManager").WithContext("HideAllBeatmapObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HideAllBeatmapObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hide)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hide);
}
// Autogenerated method: MultiplayerConnectedPlayerBeatmapObjectManager.PauseAllBeatmapObjects
void GlobalNamespace::MultiplayerConnectedPlayerBeatmapObjectManager::PauseAllBeatmapObjects(bool pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerConnectedPlayerBeatmapObjectManager").WithContext("PauseAllBeatmapObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PauseAllBeatmapObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pause)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pause);
}
