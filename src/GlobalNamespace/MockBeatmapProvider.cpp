// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MockBeatmapProvider
#include "GlobalNamespace/MockBeatmapProvider.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MockBeatmapProvider.Dispose
void GlobalNamespace::MockBeatmapProvider::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MockBeatmapProvider").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Dispose", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MockBeatmapProvider.VerifyBeatmapForConfiguration
bool GlobalNamespace::MockBeatmapProvider::VerifyBeatmapForConfiguration(GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MockBeatmapProvider").WithContext("VerifyBeatmapForConfiguration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "VerifyBeatmapForConfiguration", {}, ::il2cpp_utils::ExtractTypes(beatmapId, configuration)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, beatmapId, configuration);
}
// Autogenerated method: MockBeatmapProvider.SelectBeatmapFromSuggestionsConfigurationAndOwnedSongPacks
GlobalNamespace::BeatmapIdentifierNetSerializable* GlobalNamespace::MockBeatmapProvider::SelectBeatmapFromSuggestionsConfigurationAndOwnedSongPacks(int playerCount, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* suggestedBeatmaps, GlobalNamespace::GameplayServerConfiguration configuration, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::SongPackMask>* ownedSongPacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MockBeatmapProvider").WithContext("SelectBeatmapFromSuggestionsConfigurationAndOwnedSongPacks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<GlobalNamespace::BeatmapIdentifierNetSerializable*>(), "SelectBeatmapFromSuggestionsConfigurationAndOwnedSongPacks", {}, ::il2cpp_utils::ExtractTypes(playerCount, suggestedBeatmaps, configuration, ownedSongPacks)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapIdentifierNetSerializable*, false>(this, ___internal__method, playerCount, suggestedBeatmaps, configuration, ownedSongPacks);
}
// Autogenerated method: MockBeatmapProvider..ctor
GlobalNamespace::MockBeatmapProvider* GlobalNamespace::MockBeatmapProvider::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MockBeatmapProvider").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<MockBeatmapProvider*>());
}
