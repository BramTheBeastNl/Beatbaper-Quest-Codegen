// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerScoreProvider/RankedPlayer
#include "GlobalNamespace/MultiplayerScoreProvider_RankedPlayer.hpp"
// Including type: MultiplayerSyncState`3
#include "GlobalNamespace/MultiplayerSyncState_3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerScoreProvider/RankedPlayer.get_offsetSyncTime
float GlobalNamespace::MultiplayerScoreProvider::RankedPlayer::get_offsetSyncTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_offsetSyncTime"));
}
// Autogenerated method: MultiplayerScoreProvider/RankedPlayer.get_lastScoreTime
float GlobalNamespace::MultiplayerScoreProvider::RankedPlayer::get_lastScoreTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_lastScoreTime"));
}
// Autogenerated method: MultiplayerScoreProvider/RankedPlayer.get_score
int GlobalNamespace::MultiplayerScoreProvider::RankedPlayer::get_score() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_score"));
}
// Autogenerated method: MultiplayerScoreProvider/RankedPlayer.get_isConnected
bool GlobalNamespace::MultiplayerScoreProvider::RankedPlayer::get_isConnected() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isConnected"));
}
// Autogenerated method: MultiplayerScoreProvider/RankedPlayer.get_isActiveOrFinished
bool GlobalNamespace::MultiplayerScoreProvider::RankedPlayer::get_isActiveOrFinished() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isActiveOrFinished"));
}
// Autogenerated method: MultiplayerScoreProvider/RankedPlayer.get_isFailed
bool GlobalNamespace::MultiplayerScoreProvider::RankedPlayer::get_isFailed() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isFailed"));
}
// Autogenerated method: MultiplayerScoreProvider/RankedPlayer.get_wasActiveAtLevelStart
bool GlobalNamespace::MultiplayerScoreProvider::RankedPlayer::get_wasActiveAtLevelStart() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_wasActiveAtLevelStart"));
}
// Autogenerated method: MultiplayerScoreProvider/RankedPlayer.get_isMe
bool GlobalNamespace::MultiplayerScoreProvider::RankedPlayer::get_isMe() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isMe"));
}
// Autogenerated method: MultiplayerScoreProvider/RankedPlayer.get_userId
::Il2CppString* GlobalNamespace::MultiplayerScoreProvider::RankedPlayer::get_userId() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_userId"));
}
// Autogenerated method: MultiplayerScoreProvider/RankedPlayer.get_userName
::Il2CppString* GlobalNamespace::MultiplayerScoreProvider::RankedPlayer::get_userName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_userName"));
}
// Autogenerated method: MultiplayerScoreProvider/RankedPlayer..ctor
GlobalNamespace::MultiplayerScoreProvider::RankedPlayer* GlobalNamespace::MultiplayerScoreProvider::RankedPlayer::New_ctor(GlobalNamespace::MultiplayerSyncState_3<GlobalNamespace::StandardScoreSyncState, GlobalNamespace::StandardScoreSyncState::Score, int>* multiplayerSyncState, GlobalNamespace::MultiplayerScoreProvider* scoreSyncManager) {
  return THROW_UNLESS(il2cpp_utils::New<MultiplayerScoreProvider::RankedPlayer*>(multiplayerSyncState, scoreSyncManager));
}
// Autogenerated method: MultiplayerScoreProvider/RankedPlayer.CompareTo
int GlobalNamespace::MultiplayerScoreProvider::RankedPlayer::CompareTo(GlobalNamespace::MultiplayerScoreProvider::RankedPlayer* other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "CompareTo", other));
}
