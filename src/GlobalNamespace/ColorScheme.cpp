// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorScheme.get_colorSchemeId
::Il2CppString* GlobalNamespace::ColorScheme::get_colorSchemeId() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_colorSchemeId"));
}
// Autogenerated method: ColorScheme.get_colorSchemeName
::Il2CppString* GlobalNamespace::ColorScheme::get_colorSchemeName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_colorSchemeName"));
}
// Autogenerated method: ColorScheme.get_isEditable
bool GlobalNamespace::ColorScheme::get_isEditable() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isEditable"));
}
// Autogenerated method: ColorScheme.get_saberAColor
UnityEngine::Color GlobalNamespace::ColorScheme::get_saberAColor() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>(this, "get_saberAColor"));
}
// Autogenerated method: ColorScheme.get_saberBColor
UnityEngine::Color GlobalNamespace::ColorScheme::get_saberBColor() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>(this, "get_saberBColor"));
}
// Autogenerated method: ColorScheme.get_environmentColor0
UnityEngine::Color GlobalNamespace::ColorScheme::get_environmentColor0() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>(this, "get_environmentColor0"));
}
// Autogenerated method: ColorScheme.get_environmentColor1
UnityEngine::Color GlobalNamespace::ColorScheme::get_environmentColor1() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>(this, "get_environmentColor1"));
}
// Autogenerated method: ColorScheme.get_supportsEnvironmentColorBoost
bool GlobalNamespace::ColorScheme::get_supportsEnvironmentColorBoost() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_supportsEnvironmentColorBoost"));
}
// Autogenerated method: ColorScheme.get_environmentColor0Boost
UnityEngine::Color GlobalNamespace::ColorScheme::get_environmentColor0Boost() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>(this, "get_environmentColor0Boost"));
}
// Autogenerated method: ColorScheme.get_environmentColor1Boost
UnityEngine::Color GlobalNamespace::ColorScheme::get_environmentColor1Boost() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>(this, "get_environmentColor1Boost"));
}
// Autogenerated method: ColorScheme.get_obstaclesColor
UnityEngine::Color GlobalNamespace::ColorScheme::get_obstaclesColor() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Color>(this, "get_obstaclesColor"));
}
// Autogenerated method: ColorScheme..ctor
GlobalNamespace::ColorScheme* GlobalNamespace::ColorScheme::New_ctor(::Il2CppString* colorSchemeId, ::Il2CppString* colorSchemeName, bool isEditable, UnityEngine::Color saberAColor, UnityEngine::Color saberBColor, UnityEngine::Color environmentColor0, UnityEngine::Color environmentColor1, bool supportsEnvironmentColorBoost, UnityEngine::Color environmentColor0Boost, UnityEngine::Color environmentColor1Boost, UnityEngine::Color obstaclesColor) {
  return THROW_UNLESS(il2cpp_utils::New<ColorScheme*>(colorSchemeId, colorSchemeName, isEditable, saberAColor, saberBColor, environmentColor0, environmentColor1, supportsEnvironmentColorBoost, environmentColor0Boost, environmentColor1Boost, obstaclesColor));
}
// Autogenerated method: ColorScheme..ctor
GlobalNamespace::ColorScheme* GlobalNamespace::ColorScheme::New_ctor(GlobalNamespace::ColorScheme* colorScheme, UnityEngine::Color saberAColor, UnityEngine::Color saberBColor, UnityEngine::Color environmentColor0, UnityEngine::Color environmentColor1, bool supportsEnvironmentColorBoost, UnityEngine::Color environmentColor0Boost, UnityEngine::Color environmentColor1Boost, UnityEngine::Color obstaclesColor) {
  return THROW_UNLESS(il2cpp_utils::New<ColorScheme*>(colorScheme, saberAColor, saberBColor, environmentColor0, environmentColor1, supportsEnvironmentColorBoost, environmentColor0Boost, environmentColor1Boost, obstaclesColor));
}
// Autogenerated method: ColorScheme..ctor
GlobalNamespace::ColorScheme* GlobalNamespace::ColorScheme::New_ctor(GlobalNamespace::ColorScheme* colorScheme) {
  return THROW_UNLESS(il2cpp_utils::New<ColorScheme*>(colorScheme));
}
// Autogenerated method: ColorScheme..ctor
GlobalNamespace::ColorScheme* GlobalNamespace::ColorScheme::New_ctor(GlobalNamespace::ColorSchemeSO* colorScheme) {
  return THROW_UNLESS(il2cpp_utils::New<ColorScheme*>(colorScheme));
}
