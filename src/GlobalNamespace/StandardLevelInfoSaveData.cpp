// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData
#include "GlobalNamespace/StandardLevelInfoSaveData.hpp"
// Including type: StandardLevelInfoSaveData/DifficultyBeatmapSet
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmapSet.hpp"
// Including type: StandardLevelInfoSaveData/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmap.hpp"
// Including type: StandardLevelInfoSaveData/VersionCheck
#include "GlobalNamespace/StandardLevelInfoSaveData_VersionCheck.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCurrentVersion
::CsString* GlobalNamespace::StandardLevelInfoSaveData::_get_kCurrentVersion() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CsString*>("", "StandardLevelInfoSaveData", "kCurrentVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCurrentVersion
void GlobalNamespace::StandardLevelInfoSaveData::_set_kCurrentVersion(::CsString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelInfoSaveData", "kCurrentVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDefaultBeatmapCharacteristicName
::CsString* GlobalNamespace::StandardLevelInfoSaveData::_get_kDefaultBeatmapCharacteristicName() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CsString*>("", "StandardLevelInfoSaveData", "kDefaultBeatmapCharacteristicName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDefaultBeatmapCharacteristicName
void GlobalNamespace::StandardLevelInfoSaveData::_set_kDefaultBeatmapCharacteristicName(::CsString* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelInfoSaveData", "kDefaultBeatmapCharacteristicName", value));
}
// Autogenerated method: StandardLevelInfoSaveData.get_version
::CsString* GlobalNamespace::StandardLevelInfoSaveData::get_version() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>(this, "get_version"));
}
// Autogenerated method: StandardLevelInfoSaveData.get_songName
::CsString* GlobalNamespace::StandardLevelInfoSaveData::get_songName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>(this, "get_songName"));
}
// Autogenerated method: StandardLevelInfoSaveData.get_songSubName
::CsString* GlobalNamespace::StandardLevelInfoSaveData::get_songSubName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>(this, "get_songSubName"));
}
// Autogenerated method: StandardLevelInfoSaveData.get_songAuthorName
::CsString* GlobalNamespace::StandardLevelInfoSaveData::get_songAuthorName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>(this, "get_songAuthorName"));
}
// Autogenerated method: StandardLevelInfoSaveData.get_levelAuthorName
::CsString* GlobalNamespace::StandardLevelInfoSaveData::get_levelAuthorName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>(this, "get_levelAuthorName"));
}
// Autogenerated method: StandardLevelInfoSaveData.get_beatsPerMinute
float GlobalNamespace::StandardLevelInfoSaveData::get_beatsPerMinute() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_beatsPerMinute"));
}
// Autogenerated method: StandardLevelInfoSaveData.get_songTimeOffset
float GlobalNamespace::StandardLevelInfoSaveData::get_songTimeOffset() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_songTimeOffset"));
}
// Autogenerated method: StandardLevelInfoSaveData.get_shuffle
float GlobalNamespace::StandardLevelInfoSaveData::get_shuffle() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_shuffle"));
}
// Autogenerated method: StandardLevelInfoSaveData.get_shufflePeriod
float GlobalNamespace::StandardLevelInfoSaveData::get_shufflePeriod() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_shufflePeriod"));
}
// Autogenerated method: StandardLevelInfoSaveData.get_previewStartTime
float GlobalNamespace::StandardLevelInfoSaveData::get_previewStartTime() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_previewStartTime"));
}
// Autogenerated method: StandardLevelInfoSaveData.get_previewDuration
float GlobalNamespace::StandardLevelInfoSaveData::get_previewDuration() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_previewDuration"));
}
// Autogenerated method: StandardLevelInfoSaveData.get_songFilename
::CsString* GlobalNamespace::StandardLevelInfoSaveData::get_songFilename() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>(this, "get_songFilename"));
}
// Autogenerated method: StandardLevelInfoSaveData.get_coverImageFilename
::CsString* GlobalNamespace::StandardLevelInfoSaveData::get_coverImageFilename() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>(this, "get_coverImageFilename"));
}
// Autogenerated method: StandardLevelInfoSaveData.get_environmentName
::CsString* GlobalNamespace::StandardLevelInfoSaveData::get_environmentName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>(this, "get_environmentName"));
}
// Autogenerated method: StandardLevelInfoSaveData.get_allDirectionsEnvironmentName
::CsString* GlobalNamespace::StandardLevelInfoSaveData::get_allDirectionsEnvironmentName() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>(this, "get_allDirectionsEnvironmentName"));
}
// Autogenerated method: StandardLevelInfoSaveData.get_difficultyBeatmapSets
::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet*>* GlobalNamespace::StandardLevelInfoSaveData::get_difficultyBeatmapSets() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet*>*>(this, "get_difficultyBeatmapSets"));
}
// Autogenerated method: StandardLevelInfoSaveData..ctor
GlobalNamespace::StandardLevelInfoSaveData* GlobalNamespace::StandardLevelInfoSaveData::New_ctor(::CsString* songName, ::CsString* songSubName, ::CsString* songAuthorName, ::CsString* levelAuthorName, float beatsPerMinute, float songTimeOffset, float shuffle, float shufflePeriod, float previewStartTime, float previewDuration, ::CsString* songFilename, ::CsString* coverImageFilename, ::CsString* environmentName, ::CsString* allDirectionsEnvironmentName, ::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet*>* difficultyBeatmapSets) {
  return (StandardLevelInfoSaveData*)THROW_UNLESS(il2cpp_utils::New("", "StandardLevelInfoSaveData", songName, songSubName, songAuthorName, levelAuthorName, beatsPerMinute, songTimeOffset, shuffle, shufflePeriod, previewStartTime, previewDuration, songFilename, coverImageFilename, environmentName, allDirectionsEnvironmentName, difficultyBeatmapSets));
}
// Autogenerated method: StandardLevelInfoSaveData.get_hasAllData
bool GlobalNamespace::StandardLevelInfoSaveData::get_hasAllData() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_hasAllData"));
}
// Autogenerated method: StandardLevelInfoSaveData.SetSongFilename
void GlobalNamespace::StandardLevelInfoSaveData::SetSongFilename(::CsString* songFilename) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetSongFilename", songFilename));
}
// Autogenerated method: StandardLevelInfoSaveData.SerializeToJSONString
::CsString* GlobalNamespace::StandardLevelInfoSaveData::SerializeToJSONString() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::CsString*>(this, "SerializeToJSONString"));
}
// Autogenerated method: StandardLevelInfoSaveData.DeserializeFromJSONString
GlobalNamespace::StandardLevelInfoSaveData* GlobalNamespace::StandardLevelInfoSaveData::DeserializeFromJSONString(::CsString* stringData) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::StandardLevelInfoSaveData*>("", "StandardLevelInfoSaveData", "DeserializeFromJSONString", stringData));
}
