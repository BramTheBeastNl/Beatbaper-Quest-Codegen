// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseMasterServerReliableResponse
#include "GlobalNamespace/BaseMasterServerReliableResponse.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BaseMasterServerReliableResponse.set_requestId
void GlobalNamespace::BaseMasterServerReliableResponse::set_requestId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BaseMasterServerReliableResponse").WithContext("set_requestId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_requestId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseMasterServerReliableResponse.set_responseId
void GlobalNamespace::BaseMasterServerReliableResponse::set_responseId(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BaseMasterServerReliableResponse").WithContext("set_responseId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_responseId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseMasterServerReliableResponse.get_requestId
uint GlobalNamespace::BaseMasterServerReliableResponse::get_requestId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BaseMasterServerReliableResponse").WithContext("get_requestId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_requestId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableResponse.get_responseId
uint GlobalNamespace::BaseMasterServerReliableResponse::get_responseId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BaseMasterServerReliableResponse").WithContext("get_responseId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_responseId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableResponse.get_resultCode
uint8_t GlobalNamespace::BaseMasterServerReliableResponse::get_resultCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BaseMasterServerReliableResponse").WithContext("get_resultCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_resultCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableResponse.get_resultCodeString
::Il2CppString* GlobalNamespace::BaseMasterServerReliableResponse::get_resultCodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BaseMasterServerReliableResponse").WithContext("get_resultCodeString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_resultCodeString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableResponse.Serialize
void GlobalNamespace::BaseMasterServerReliableResponse::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BaseMasterServerReliableResponse").WithContext("Serialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
void GlobalNamespace::BaseMasterServerReliableResponse::LiteNetLib_Utils_INetSerializable_Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  GlobalNamespace::BaseMasterServerReliableResponse::Serialize(writer);
}
// Autogenerated method: BaseMasterServerReliableResponse.Deserialize
void GlobalNamespace::BaseMasterServerReliableResponse::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BaseMasterServerReliableResponse").WithContext("Deserialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
void GlobalNamespace::BaseMasterServerReliableResponse::LiteNetLib_Utils_INetSerializable_Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  GlobalNamespace::BaseMasterServerReliableResponse::Deserialize(reader);
}
// Autogenerated method: BaseMasterServerReliableResponse.Release
void GlobalNamespace::BaseMasterServerReliableResponse::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BaseMasterServerReliableResponse").WithContext("Release");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseMasterServerReliableResponse.MasterServer.IMasterServerReliableRequest.WithRequestId
MasterServer::IMasterServerReliableRequest* GlobalNamespace::BaseMasterServerReliableResponse::MasterServer_IMasterServerReliableRequest_WithRequestId(uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BaseMasterServerReliableResponse").WithContext("MasterServer.IMasterServerReliableRequest.WithRequestId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MasterServer.IMasterServerReliableRequest.WithRequestId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(requestId)));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerReliableRequest*, false>(this, ___internal__method, requestId);
}
// Autogenerated method: BaseMasterServerReliableResponse.MasterServer.IMasterServerResponse.WithResponseId
MasterServer::IMasterServerResponse* GlobalNamespace::BaseMasterServerReliableResponse::MasterServer_IMasterServerResponse_WithResponseId(uint responseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BaseMasterServerReliableResponse").WithContext("MasterServer.IMasterServerResponse.WithResponseId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MasterServer.IMasterServerResponse.WithResponseId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(responseId)));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerResponse*, false>(this, ___internal__method, responseId);
}
// Autogenerated method: BaseMasterServerReliableResponse.MasterServer.IMasterServerReliableResponse.WithRequestAndResponseId
MasterServer::IMasterServerReliableResponse* GlobalNamespace::BaseMasterServerReliableResponse::MasterServer_IMasterServerReliableResponse_WithRequestAndResponseId(uint requestId, uint responseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BaseMasterServerReliableResponse").WithContext("MasterServer.IMasterServerReliableResponse.WithRequestAndResponseId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MasterServer.IMasterServerReliableResponse.WithRequestAndResponseId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(requestId, responseId)));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::IMasterServerReliableResponse*, false>(this, ___internal__method, requestId, responseId);
}
