// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLevelSelectionFlowCoordinator
#include "GlobalNamespace/MultiplayerLevelSelectionFlowCoordinator.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ILobbyGameStateController
#include "GlobalNamespace/ILobbyGameStateController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: LevelSelectionFlowCoordinator/State
#include "GlobalNamespace/LevelSelectionFlowCoordinator_State.hpp"
// Including type: HMUI.ViewController/AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.add_didSelectLevelEvent
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::add_didSelectLevelEvent(System::Action_1<GlobalNamespace::LevelSelectionFlowCoordinator::State*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext("add_didSelectLevelEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "add_didSelectLevelEvent", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.remove_didSelectLevelEvent
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::remove_didSelectLevelEvent(System::Action_1<GlobalNamespace::LevelSelectionFlowCoordinator::State*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext("remove_didSelectLevelEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "remove_didSelectLevelEvent", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.add_didFinishedEvent
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::add_didFinishedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext("add_didFinishedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "add_didFinishedEvent", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.remove_didFinishedEvent
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::remove_didFinishedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext("remove_didFinishedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "remove_didFinishedEvent", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.Setup
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::Setup(GlobalNamespace::LevelSelectionFlowCoordinator::State* state, GlobalNamespace::SongPackMask songPackMask, GlobalNamespace::BeatmapDifficultyMask allowedBeatmapDifficultyMask, ::Il2CppString* actionText, ::Il2CppString* titleText) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext("Setup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Setup", {}, ::il2cpp_utils::ExtractTypes(state, songPackMask, allowedBeatmapDifficultyMask, actionText, titleText)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state, songPackMask, allowedBeatmapDifficultyMask, actionText, titleText);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.HandleLobbyGameStateControllerGameStarted
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::HandleLobbyGameStateControllerGameStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext("HandleLobbyGameStateControllerGameStarted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "HandleLobbyGameStateControllerGameStarted", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_hidePracticeButton
bool GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_hidePracticeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext("get_hidePracticeButton");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_hidePracticeButton", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_hidePacksIfOneOrNone
bool GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_hidePacksIfOneOrNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext("get_hidePacksIfOneOrNone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_hidePacksIfOneOrNone", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_actionButtonText
::Il2CppString* GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_actionButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext("get_actionButtonText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "get_actionButtonText", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_showBackButtonForMainViewController
bool GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_showBackButtonForMainViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext("get_showBackButtonForMainViewController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_showBackButtonForMainViewController", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_songPackMask
GlobalNamespace::SongPackMask GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_songPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext("get_songPackMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<GlobalNamespace::SongPackMask>(), "get_songPackMask", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_enableCustomLevels
bool GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_enableCustomLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext("get_enableCustomLevels");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_enableCustomLevels", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_allowedBeatmapDifficultyMask
GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_allowedBeatmapDifficultyMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext("get_allowedBeatmapDifficultyMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<GlobalNamespace::BeatmapDifficultyMask>(), "get_allowedBeatmapDifficultyMask", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficultyMask, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_notAllowedCharacteristics
::Array<GlobalNamespace::BeatmapCharacteristicSO*>* GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_notAllowedCharacteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext("get_notAllowedCharacteristics");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Array<GlobalNamespace::BeatmapCharacteristicSO*>*>(), "get_notAllowedCharacteristics", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::BeatmapCharacteristicSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_mainTitle
::Il2CppString* GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_mainTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext("get_mainTitle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "get_mainTitle", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.ActionButtonWasPressed
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::ActionButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext("ActionButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ActionButtonWasPressed", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.BackButtonWasPressed
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::BackButtonWasPressed(HMUI::ViewController* topViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext("BackButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "BackButtonWasPressed", {}, ::il2cpp_utils::ExtractTypes(topViewController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, topViewController);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.LevelSelectionFlowCoordinatorTopViewControllerWillChange
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorTopViewControllerWillChange(HMUI::ViewController* oldViewController, HMUI::ViewController* newViewController, HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext("LevelSelectionFlowCoordinatorTopViewControllerWillChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "LevelSelectionFlowCoordinatorTopViewControllerWillChange", {}, ::il2cpp_utils::ExtractTypes(oldViewController, newViewController, animationType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.TransitionDidStart
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::TransitionDidStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext("TransitionDidStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "TransitionDidStart", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.TransitionDidFinish
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::TransitionDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext("TransitionDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "TransitionDidFinish", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator..ctor
GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator* GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("MultiplayerLevelSelectionFlowCoordinator").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<MultiplayerLevelSelectionFlowCoordinator*>());
}
