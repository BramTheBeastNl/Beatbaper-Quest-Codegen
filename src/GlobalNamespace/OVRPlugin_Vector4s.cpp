// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/Vector4s
#include "GlobalNamespace/OVRPlugin_Vector4s.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRPlugin/Vector4s zero
GlobalNamespace::OVRPlugin::Vector4s GlobalNamespace::OVRPlugin::Vector4s::_get_zero() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("Vector4s").WithContext("_get_zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::Vector4s>("", "OVRPlugin/Vector4s", "zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRPlugin/Vector4s zero
void GlobalNamespace::OVRPlugin::Vector4s::_set_zero(GlobalNamespace::OVRPlugin::Vector4s value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("Vector4s").WithContext("_set_zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Vector4s", "zero", value));
}
// Autogenerated method: OVRPlugin/Vector4s..cctor
void GlobalNamespace::OVRPlugin::Vector4s::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("Vector4s").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Vector4s", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Vector4s.ToString
::Il2CppString* GlobalNamespace::OVRPlugin::Vector4s::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("Vector4s").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
