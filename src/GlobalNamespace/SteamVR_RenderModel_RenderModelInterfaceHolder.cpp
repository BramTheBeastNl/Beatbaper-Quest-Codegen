// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamVR_RenderModel/RenderModelInterfaceHolder
#include "GlobalNamespace/SteamVR_RenderModel_RenderModelInterfaceHolder.hpp"
// Including type: Valve.VR.CVRRenderModels
#include "Valve/VR/CVRRenderModels.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamVR_RenderModel/RenderModelInterfaceHolder.get_instance
Valve::VR::CVRRenderModels* GlobalNamespace::SteamVR_RenderModel::RenderModelInterfaceHolder::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("RenderModelInterfaceHolder").WithContext("get_instance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Valve::VR::CVRRenderModels*>(), "get_instance", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::CVRRenderModels*, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_RenderModel/RenderModelInterfaceHolder.Dispose
void GlobalNamespace::SteamVR_RenderModel::RenderModelInterfaceHolder::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("RenderModelInterfaceHolder").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Dispose", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void GlobalNamespace::SteamVR_RenderModel::RenderModelInterfaceHolder::System_IDisposable_Dispose() {
  GlobalNamespace::SteamVR_RenderModel::RenderModelInterfaceHolder::Dispose();
}
// Autogenerated method: SteamVR_RenderModel/RenderModelInterfaceHolder..ctor
GlobalNamespace::SteamVR_RenderModel::RenderModelInterfaceHolder* GlobalNamespace::SteamVR_RenderModel::RenderModelInterfaceHolder::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("RenderModelInterfaceHolder").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<SteamVR_RenderModel::RenderModelInterfaceHolder*>());
}
