// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassNonLightPass
#include "GlobalNamespace/BloomPrePassNonLightPass.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<BloomPrePassNonLightPass> _bloomPrePassAfterBlurList
System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassNonLightPass*>* GlobalNamespace::BloomPrePassNonLightPass::_get__bloomPrePassAfterBlurList() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BloomPrePassNonLightPass").WithContext("_get__bloomPrePassAfterBlurList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassNonLightPass*>*>("", "BloomPrePassNonLightPass", "_bloomPrePassAfterBlurList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<BloomPrePassNonLightPass> _bloomPrePassAfterBlurList
void GlobalNamespace::BloomPrePassNonLightPass::_set__bloomPrePassAfterBlurList(System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassNonLightPass*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BloomPrePassNonLightPass").WithContext("_set__bloomPrePassAfterBlurList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassNonLightPass", "_bloomPrePassAfterBlurList", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<BloomPrePassNonLightPass> _bloomPrePassBeforeBlurList
System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassNonLightPass*>* GlobalNamespace::BloomPrePassNonLightPass::_get__bloomPrePassBeforeBlurList() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BloomPrePassNonLightPass").WithContext("_get__bloomPrePassBeforeBlurList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassNonLightPass*>*>("", "BloomPrePassNonLightPass", "_bloomPrePassBeforeBlurList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<BloomPrePassNonLightPass> _bloomPrePassBeforeBlurList
void GlobalNamespace::BloomPrePassNonLightPass::_set__bloomPrePassBeforeBlurList(System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassNonLightPass*>* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BloomPrePassNonLightPass").WithContext("_set__bloomPrePassBeforeBlurList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassNonLightPass", "_bloomPrePassBeforeBlurList", value));
}
// Autogenerated method: BloomPrePassNonLightPass.get_bloomPrePassAfterBlurList
System::Collections::Generic::IEnumerable_1<GlobalNamespace::BloomPrePassNonLightPass*>* GlobalNamespace::BloomPrePassNonLightPass::get_bloomPrePassAfterBlurList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BloomPrePassNonLightPass").WithContext("get_bloomPrePassAfterBlurList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BloomPrePassNonLightPass", "get_bloomPrePassAfterBlurList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::BloomPrePassNonLightPass*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: BloomPrePassNonLightPass.get_bloomPrePassBeforeBlurList
System::Collections::Generic::IEnumerable_1<GlobalNamespace::BloomPrePassNonLightPass*>* GlobalNamespace::BloomPrePassNonLightPass::get_bloomPrePassBeforeBlurList() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BloomPrePassNonLightPass").WithContext("get_bloomPrePassBeforeBlurList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BloomPrePassNonLightPass", "get_bloomPrePassBeforeBlurList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::BloomPrePassNonLightPass*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: BloomPrePassNonLightPass.NoDomainReloadInit
void GlobalNamespace::BloomPrePassNonLightPass::NoDomainReloadInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BloomPrePassNonLightPass").WithContext("NoDomainReloadInit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BloomPrePassNonLightPass", "NoDomainReloadInit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: BloomPrePassNonLightPass.OnEnable
void GlobalNamespace::BloomPrePassNonLightPass::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BloomPrePassNonLightPass").WithContext("OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassNonLightPass.OnDisable
void GlobalNamespace::BloomPrePassNonLightPass::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BloomPrePassNonLightPass").WithContext("OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassNonLightPass.Register
void GlobalNamespace::BloomPrePassNonLightPass::Register() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BloomPrePassNonLightPass").WithContext("Register");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Register", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassNonLightPass.Unregister
void GlobalNamespace::BloomPrePassNonLightPass::Unregister() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BloomPrePassNonLightPass").WithContext("Unregister");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Unregister", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassNonLightPass.OnValidate
void GlobalNamespace::BloomPrePassNonLightPass::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BloomPrePassNonLightPass").WithContext("OnValidate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassNonLightPass.Render
void GlobalNamespace::BloomPrePassNonLightPass::Render(UnityEngine::RenderTexture* dest, UnityEngine::Matrix4x4 viewMatrix, UnityEngine::Matrix4x4 projectionMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BloomPrePassNonLightPass").WithContext("Render");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, viewMatrix, projectionMatrix)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dest, viewMatrix, projectionMatrix);
}
// Autogenerated method: BloomPrePassNonLightPass..cctor
void GlobalNamespace::BloomPrePassNonLightPass::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BloomPrePassNonLightPass").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BloomPrePassNonLightPass", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
