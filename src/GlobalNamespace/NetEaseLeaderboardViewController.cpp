// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetEaseLeaderboardViewController
#include "GlobalNamespace/NetEaseLeaderboardViewController.hpp"
// Including type: NetEaseLeaderboardViewController/<RefreshDelayed>d__14
#include "GlobalNamespace/NetEaseLeaderboardViewController_-RefreshDelayed-d__14.hpp"
// Including type: NetEaseLeaderboardViewController/<LoadScoresAsync>d__15
#include "GlobalNamespace/NetEaseLeaderboardViewController_-LoadScoresAsync-d__15.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: LoadingControl
#include "GlobalNamespace/LoadingControl.hpp"
// Including type: NetEaseManager
#include "GlobalNamespace/NetEaseManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: LeaderboardTableView/ScoreData
#include "GlobalNamespace/LeaderboardTableView_ScoreData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetEaseLeaderboardViewController.HandleLoadingControlDidPressRefreshButton
void GlobalNamespace::NetEaseLeaderboardViewController::HandleLoadingControlDidPressRefreshButton() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandleLoadingControlDidPressRefreshButton"));
}
// Autogenerated method: NetEaseLeaderboardViewController.Refresh
void GlobalNamespace::NetEaseLeaderboardViewController::Refresh() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Refresh"));
}
// Autogenerated method: NetEaseLeaderboardViewController.Refresh
void GlobalNamespace::NetEaseLeaderboardViewController::Refresh(bool showLoadingIndicator, bool clear) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Refresh", showLoadingIndicator, clear));
}
// Autogenerated method: NetEaseLeaderboardViewController.RefreshDelayed
System::Collections::IEnumerator* GlobalNamespace::NetEaseLeaderboardViewController::RefreshDelayed(bool showLoadingIndicator, bool clear) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Collections::IEnumerator*>(this, "RefreshDelayed", showLoadingIndicator, clear));
}
// Autogenerated method: NetEaseLeaderboardViewController.LoadScoresAsync
void GlobalNamespace::NetEaseLeaderboardViewController::LoadScoresAsync() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "LoadScoresAsync"));
}
// Autogenerated method: NetEaseLeaderboardViewController.ClearContent
void GlobalNamespace::NetEaseLeaderboardViewController::ClearContent() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearContent"));
}
// Autogenerated method: NetEaseLeaderboardViewController.SetData
void GlobalNamespace::NetEaseLeaderboardViewController::SetData(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SetData", difficultyBeatmap));
}
// Autogenerated method: NetEaseLeaderboardViewController.DidActivate
void GlobalNamespace::NetEaseLeaderboardViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DidActivate", firstActivation, addedToHierarchy, screenSystemEnabling));
}
// Autogenerated method: NetEaseLeaderboardViewController.DidDeactivate
void GlobalNamespace::NetEaseLeaderboardViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DidDeactivate", removedFromHierarchy, screenSystemDisabling));
}
// Autogenerated method: NetEaseLeaderboardViewController.OnDestroy
void GlobalNamespace::NetEaseLeaderboardViewController::OnDestroy() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDestroy"));
}
// Autogenerated method: NetEaseLeaderboardViewController..ctor
GlobalNamespace::NetEaseLeaderboardViewController* GlobalNamespace::NetEaseLeaderboardViewController::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<NetEaseLeaderboardViewController*>());
}
