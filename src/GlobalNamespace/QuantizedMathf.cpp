// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuantizedMathf
#include "GlobalNamespace/QuantizedMathf.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kEpsilon
float GlobalNamespace::QuantizedMathf::_get_kEpsilon() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("QuantizedMathf").WithContext("_get_kEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "QuantizedMathf", "kEpsilon"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kEpsilon
void GlobalNamespace::QuantizedMathf::_set_kEpsilon(float value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("QuantizedMathf").WithContext("_set_kEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuantizedMathf", "kEpsilon", value));
}
// Autogenerated method: QuantizedMathf.Approximately
bool GlobalNamespace::QuantizedMathf::Approximately(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("QuantizedMathf").WithContext("Approximately");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "QuantizedMathf", il2cpp_utils::NoArgClass<bool>(), "Approximately", {}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: QuantizedMathf.RoughlyApproximately
bool GlobalNamespace::QuantizedMathf::RoughlyApproximately(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("QuantizedMathf").WithContext("RoughlyApproximately");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "QuantizedMathf", il2cpp_utils::NoArgClass<bool>(), "RoughlyApproximately", {}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
