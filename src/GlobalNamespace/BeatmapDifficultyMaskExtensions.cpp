// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapDifficultyMaskExtensions
#include "GlobalNamespace/BeatmapDifficultyMaskExtensions.hpp"
// Including type: BeatmapDifficultyMask
#include "GlobalNamespace/BeatmapDifficultyMask.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDifficultyMaskExtensions.ToMask
GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::BeatmapDifficultyMaskExtensions::ToMask(GlobalNamespace::BeatmapDifficulty difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDifficultyMaskExtensions").WithContext("ToMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapDifficultyMaskExtensions", il2cpp_utils::NoArgClass<GlobalNamespace::BeatmapDifficultyMask>(), "ToMask", {}, ::il2cpp_utils::ExtractTypes(difficulty)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficultyMask, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, difficulty);
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.FromMask
GlobalNamespace::BeatmapDifficulty GlobalNamespace::BeatmapDifficultyMaskExtensions::FromMask(GlobalNamespace::BeatmapDifficultyMask mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDifficultyMaskExtensions").WithContext("FromMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapDifficultyMaskExtensions", il2cpp_utils::NoArgClass<GlobalNamespace::BeatmapDifficulty>(), "FromMask", {}, ::il2cpp_utils::ExtractTypes(mask)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mask);
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.LocalizedKey
::Il2CppString* GlobalNamespace::BeatmapDifficultyMaskExtensions::LocalizedKey(GlobalNamespace::BeatmapDifficultyMask mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDifficultyMaskExtensions").WithContext("LocalizedKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapDifficultyMaskExtensions", il2cpp_utils::NoArgClass<::Il2CppString*>(), "LocalizedKey", {}, ::il2cpp_utils::ExtractTypes(mask)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mask);
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.ShortLocalizedKey
::Il2CppString* GlobalNamespace::BeatmapDifficultyMaskExtensions::ShortLocalizedKey(GlobalNamespace::BeatmapDifficultyMask mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDifficultyMaskExtensions").WithContext("ShortLocalizedKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapDifficultyMaskExtensions", il2cpp_utils::NoArgClass<::Il2CppString*>(), "ShortLocalizedKey", {}, ::il2cpp_utils::ExtractTypes(mask)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mask);
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.Contains
bool GlobalNamespace::BeatmapDifficultyMaskExtensions::Contains(GlobalNamespace::BeatmapDifficultyMask mask, GlobalNamespace::BeatmapDifficulty difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDifficultyMaskExtensions").WithContext("Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapDifficultyMaskExtensions", il2cpp_utils::NoArgClass<bool>(), "Contains", {}, ::il2cpp_utils::ExtractTypes(mask, difficulty)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mask, difficulty);
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.Contains
bool GlobalNamespace::BeatmapDifficultyMaskExtensions::Contains(GlobalNamespace::BeatmapDifficultyMask mask, GlobalNamespace::BeatmapDifficultyMask other) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDifficultyMaskExtensions").WithContext("Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapDifficultyMaskExtensions", il2cpp_utils::NoArgClass<bool>(), "Contains", {}, ::il2cpp_utils::ExtractTypes(mask, other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mask, other);
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.DifferenceFrom
int GlobalNamespace::BeatmapDifficultyMaskExtensions::DifferenceFrom(GlobalNamespace::BeatmapDifficultyMask mask, GlobalNamespace::BeatmapDifficultyMask other) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDifficultyMaskExtensions").WithContext("DifferenceFrom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapDifficultyMaskExtensions", il2cpp_utils::NoArgClass<int>(), "DifferenceFrom", {}, ::il2cpp_utils::ExtractTypes(mask, other)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mask, other);
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.ToHexString
::Il2CppString* GlobalNamespace::BeatmapDifficultyMaskExtensions::ToHexString(GlobalNamespace::BeatmapDifficultyMask mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDifficultyMaskExtensions").WithContext("ToHexString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapDifficultyMaskExtensions", il2cpp_utils::NoArgClass<::Il2CppString*>(), "ToHexString", {}, ::il2cpp_utils::ExtractTypes(mask)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mask);
}
