// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapDifficultyMaskExtensions
#include "GlobalNamespace/BeatmapDifficultyMaskExtensions.hpp"
// Including type: BeatmapDifficultyMask
#include "GlobalNamespace/BeatmapDifficultyMask.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDifficultyMaskExtensions.ToMask
GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::BeatmapDifficultyMaskExtensions::ToMask(GlobalNamespace::BeatmapDifficulty difficulty) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::BeatmapDifficultyMask>("", "BeatmapDifficultyMaskExtensions", "ToMask", difficulty));
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.FromMask
GlobalNamespace::BeatmapDifficulty GlobalNamespace::BeatmapDifficultyMaskExtensions::FromMask(GlobalNamespace::BeatmapDifficultyMask mask) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::BeatmapDifficulty>("", "BeatmapDifficultyMaskExtensions", "FromMask", mask));
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.LocalizedKey
::Il2CppString* GlobalNamespace::BeatmapDifficultyMaskExtensions::LocalizedKey(GlobalNamespace::BeatmapDifficultyMask mask) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("", "BeatmapDifficultyMaskExtensions", "LocalizedKey", mask));
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.ShortLocalizedKey
::Il2CppString* GlobalNamespace::BeatmapDifficultyMaskExtensions::ShortLocalizedKey(GlobalNamespace::BeatmapDifficultyMask mask) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("", "BeatmapDifficultyMaskExtensions", "ShortLocalizedKey", mask));
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.Contains
bool GlobalNamespace::BeatmapDifficultyMaskExtensions::Contains(GlobalNamespace::BeatmapDifficultyMask mask, GlobalNamespace::BeatmapDifficulty difficulty) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "BeatmapDifficultyMaskExtensions", "Contains", mask, difficulty));
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.Contains
bool GlobalNamespace::BeatmapDifficultyMaskExtensions::Contains(GlobalNamespace::BeatmapDifficultyMask mask, GlobalNamespace::BeatmapDifficultyMask other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "BeatmapDifficultyMaskExtensions", "Contains", mask, other));
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.DifferenceFrom
int GlobalNamespace::BeatmapDifficultyMaskExtensions::DifferenceFrom(GlobalNamespace::BeatmapDifficultyMask mask, GlobalNamespace::BeatmapDifficultyMask other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>("", "BeatmapDifficultyMaskExtensions", "DifferenceFrom", mask, other));
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.ToHexString
::Il2CppString* GlobalNamespace::BeatmapDifficultyMaskExtensions::ToHexString(GlobalNamespace::BeatmapDifficultyMask mask) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>("", "BeatmapDifficultyMaskExtensions", "ToHexString", mask));
}
