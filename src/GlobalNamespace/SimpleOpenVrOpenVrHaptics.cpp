// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleOpenVrOpenVrHaptics
#include "GlobalNamespace/SimpleOpenVrOpenVrHaptics.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SimpleOpenVrOpenVrHaptics.TriggerHapticPulse
void GlobalNamespace::SimpleOpenVrOpenVrHaptics::TriggerHapticPulse(UnityEngine::XR::XRNode node, float duration, float strength, float frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SimpleOpenVrOpenVrHaptics").WithContext("TriggerHapticPulse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "TriggerHapticPulse", {}, ::il2cpp_utils::ExtractTypes(node, duration, strength, frequency)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, node, duration, strength, frequency);
}
// Autogenerated method: SimpleOpenVrOpenVrHaptics.Destroy
void GlobalNamespace::SimpleOpenVrOpenVrHaptics::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SimpleOpenVrOpenVrHaptics").WithContext("Destroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Destroy", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleOpenVrOpenVrHaptics..ctor
GlobalNamespace::SimpleOpenVrOpenVrHaptics* GlobalNamespace::SimpleOpenVrOpenVrHaptics::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("SimpleOpenVrOpenVrHaptics").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<SimpleOpenVrOpenVrHaptics*>());
}
