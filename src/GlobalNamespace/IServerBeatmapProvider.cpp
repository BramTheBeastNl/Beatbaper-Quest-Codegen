// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IServerBeatmapProvider
#include "GlobalNamespace/IServerBeatmapProvider.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IServerBeatmapProvider.VerifyBeatmapForConfiguration
bool GlobalNamespace::IServerBeatmapProvider::VerifyBeatmapForConfiguration(GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("IServerBeatmapProvider").WithContext("VerifyBeatmapForConfiguration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "VerifyBeatmapForConfiguration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapId, configuration)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, beatmapId, configuration);
}
// Autogenerated method: IServerBeatmapProvider.SelectBeatmapFromSuggestionsConfigurationAndOwnedSongPacks
GlobalNamespace::BeatmapIdentifierNetSerializable* GlobalNamespace::IServerBeatmapProvider::SelectBeatmapFromSuggestionsConfigurationAndOwnedSongPacks(int playerCount, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::BeatmapIdentifierNetSerializable*>* beatmapsSuggestedByPlayers, GlobalNamespace::GameplayServerConfiguration configuration, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::SongPackMask>* playerOwnedSongPacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("IServerBeatmapProvider").WithContext("SelectBeatmapFromSuggestionsConfigurationAndOwnedSongPacks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SelectBeatmapFromSuggestionsConfigurationAndOwnedSongPacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playerCount, beatmapsSuggestedByPlayers, configuration, playerOwnedSongPacks)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapIdentifierNetSerializable*, false>(this, ___internal__method, playerCount, beatmapsSuggestedByPlayers, configuration, playerOwnedSongPacks);
}
