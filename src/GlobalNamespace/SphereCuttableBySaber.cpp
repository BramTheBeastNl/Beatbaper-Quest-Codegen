// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SphereCuttableBySaber
#include "GlobalNamespace/SphereCuttableBySaber.hpp"
// Including type: UnityEngine.SphereCollider
#include "UnityEngine/SphereCollider.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SphereCuttableBySaber.Awake
void GlobalNamespace::SphereCuttableBySaber::Awake() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Awake"));
}
// Autogenerated method: SphereCuttableBySaber.get_radius
float GlobalNamespace::SphereCuttableBySaber::get_radius() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<float>(this, "get_radius"));
}
// Autogenerated method: SphereCuttableBySaber.set_canBeCut
void GlobalNamespace::SphereCuttableBySaber::set_canBeCut(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_canBeCut", value));
}
// Autogenerated method: SphereCuttableBySaber.get_canBeCut
bool GlobalNamespace::SphereCuttableBySaber::get_canBeCut() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_canBeCut"));
}
// Autogenerated method: SphereCuttableBySaber.Cut
void GlobalNamespace::SphereCuttableBySaber::Cut(GlobalNamespace::Saber* saber, UnityEngine::Vector3 cutPoint, UnityEngine::Quaternion orientation, UnityEngine::Vector3 cutDirVec) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Cut", saber, cutPoint, orientation, cutDirVec));
}
// Autogenerated method: SphereCuttableBySaber..ctor
GlobalNamespace::SphereCuttableBySaber* GlobalNamespace::SphereCuttableBySaber::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<SphereCuttableBySaber*>());
}
