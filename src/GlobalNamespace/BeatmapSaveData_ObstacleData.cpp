// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveData/ObstacleData
#include "GlobalNamespace/BeatmapSaveData_ObstacleData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapSaveData/ObstacleData.get_lineIndex
int GlobalNamespace::BeatmapSaveData::ObstacleData::get_lineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleData").WithContext("get_lineIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "get_lineIndex", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveData/ObstacleData.get_type
GlobalNamespace::ObstacleType GlobalNamespace::BeatmapSaveData::ObstacleData::get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleData").WithContext("get_type");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<GlobalNamespace::ObstacleType>(), "get_type", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ObstacleType, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveData/ObstacleData.get_duration
float GlobalNamespace::BeatmapSaveData::ObstacleData::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleData").WithContext("get_duration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<float>(), "get_duration", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveData/ObstacleData.get_width
int GlobalNamespace::BeatmapSaveData::ObstacleData::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleData").WithContext("get_width");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<int>(), "get_width", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveData/ObstacleData..ctor
GlobalNamespace::BeatmapSaveData::ObstacleData* GlobalNamespace::BeatmapSaveData::ObstacleData::New_ctor(float time, int lineIndex, GlobalNamespace::ObstacleType type, float duration, int width) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleData").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<BeatmapSaveData::ObstacleData*>(time, lineIndex, type, duration, width));
}
// Autogenerated method: BeatmapSaveData/ObstacleData.get_time
float GlobalNamespace::BeatmapSaveData::ObstacleData::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleData").WithContext("get_time");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<float>(), "get_time", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveData/ObstacleData.MoveTime
void GlobalNamespace::BeatmapSaveData::ObstacleData::MoveTime(float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("ObstacleData").WithContext("MoveTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "MoveTime", {}, ::il2cpp_utils::ExtractTypes(offset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, offset);
}
