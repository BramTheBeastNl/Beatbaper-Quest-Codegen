// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ObstacleSaberSparkleEffectManager
#include "GlobalNamespace/ObstacleSaberSparkleEffectManager.hpp"
// Including type: ObstacleSaberSparkleEffect
#include "GlobalNamespace/ObstacleSaberSparkleEffect.hpp"
// Including type: PlayerController
#include "GlobalNamespace/PlayerController.hpp"
// Including type: HapticFeedbackController
#include "GlobalNamespace/HapticFeedbackController.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: ObstacleController/Pool
#include "GlobalNamespace/ObstacleController_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ObstacleSaberSparkleEffectManager.add_sparkleEffectDidStartEvent
void GlobalNamespace::ObstacleSaberSparkleEffectManager::add_sparkleEffectDidStartEvent(System::Action_1<GlobalNamespace::SaberType>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_sparkleEffectDidStartEvent", value));
}
// Autogenerated method: ObstacleSaberSparkleEffectManager.remove_sparkleEffectDidStartEvent
void GlobalNamespace::ObstacleSaberSparkleEffectManager::remove_sparkleEffectDidStartEvent(System::Action_1<GlobalNamespace::SaberType>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_sparkleEffectDidStartEvent", value));
}
// Autogenerated method: ObstacleSaberSparkleEffectManager.add_sparkleEffectDidEndEvent
void GlobalNamespace::ObstacleSaberSparkleEffectManager::add_sparkleEffectDidEndEvent(System::Action_1<GlobalNamespace::SaberType>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "add_sparkleEffectDidEndEvent", value));
}
// Autogenerated method: ObstacleSaberSparkleEffectManager.remove_sparkleEffectDidEndEvent
void GlobalNamespace::ObstacleSaberSparkleEffectManager::remove_sparkleEffectDidEndEvent(System::Action_1<GlobalNamespace::SaberType>* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "remove_sparkleEffectDidEndEvent", value));
}
// Autogenerated method: ObstacleSaberSparkleEffectManager.Start
void GlobalNamespace::ObstacleSaberSparkleEffectManager::Start() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Start"));
}
// Autogenerated method: ObstacleSaberSparkleEffectManager.OnDisable
void GlobalNamespace::ObstacleSaberSparkleEffectManager::OnDisable() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "OnDisable"));
}
// Autogenerated method: ObstacleSaberSparkleEffectManager.Update
void GlobalNamespace::ObstacleSaberSparkleEffectManager::Update() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Update"));
}
// Autogenerated method: ObstacleSaberSparkleEffectManager.GetEffectRotation
UnityEngine::Quaternion GlobalNamespace::ObstacleSaberSparkleEffectManager::GetEffectRotation(UnityEngine::Vector3 pos, UnityEngine::Transform* transform, UnityEngine::Bounds bounds) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Quaternion>(this, "GetEffectRotation", pos, transform, bounds));
}
// Autogenerated method: ObstacleSaberSparkleEffectManager.BurnMarkPosForSaberType
UnityEngine::Vector3 GlobalNamespace::ObstacleSaberSparkleEffectManager::BurnMarkPosForSaberType(GlobalNamespace::SaberType saberType) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "BurnMarkPosForSaberType", saberType));
}
// Autogenerated method: ObstacleSaberSparkleEffectManager.GetBurnMarkPos
bool GlobalNamespace::ObstacleSaberSparkleEffectManager::GetBurnMarkPos(UnityEngine::Bounds bounds, UnityEngine::Transform* transform, UnityEngine::Vector3 bladeBottomPos, UnityEngine::Vector3 bladeTopPos, UnityEngine::Vector3& burnMarkPos) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "GetBurnMarkPos", bounds, transform, bladeBottomPos, bladeTopPos, burnMarkPos));
}
// Autogenerated method: ObstacleSaberSparkleEffectManager..ctor
GlobalNamespace::ObstacleSaberSparkleEffectManager* GlobalNamespace::ObstacleSaberSparkleEffectManager::New_ctor() {
  return (ObstacleSaberSparkleEffectManager*)THROW_UNLESS(il2cpp_utils::New("", "ObstacleSaberSparkleEffectManager"));
}
