// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataObstaclesAndBombsTransform
#include "GlobalNamespace/BeatmapDataObstaclesAndBombsTransform.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataObstaclesAndBombsTransform.CreateTransformedData
GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::CreateTransformedData(GlobalNamespace::IReadonlyBeatmapData* beatmapData, GlobalNamespace::GameplayModifiers::EnabledObstacleType enabledObstaclesType, bool noBombs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDataObstaclesAndBombsTransform").WithContext("CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapDataObstaclesAndBombsTransform", il2cpp_utils::NoArgClass<GlobalNamespace::IReadonlyBeatmapData*>(), "CreateTransformedData", {}, ::il2cpp_utils::ExtractTypes(beatmapData, enabledObstaclesType, noBombs)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapData, enabledObstaclesType, noBombs);
}
// Autogenerated method: BeatmapDataObstaclesAndBombsTransform.ShouldUseBeatmapObject
bool GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::ShouldUseBeatmapObject(GlobalNamespace::BeatmapObjectData* beatmapObjectData, GlobalNamespace::GameplayModifiers::EnabledObstacleType enabledObstaclesType, bool noBombs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDataObstaclesAndBombsTransform").WithContext("ShouldUseBeatmapObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapDataObstaclesAndBombsTransform", il2cpp_utils::NoArgClass<bool>(), "ShouldUseBeatmapObject", {}, ::il2cpp_utils::ExtractTypes(beatmapObjectData, enabledObstaclesType, noBombs)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapObjectData, enabledObstaclesType, noBombs);
}
// Autogenerated method: BeatmapDataObstaclesAndBombsTransform..ctor
GlobalNamespace::BeatmapDataObstaclesAndBombsTransform* GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("BeatmapDataObstaclesAndBombsTransform").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<BeatmapDataObstaclesAndBombsTransform*>());
}
