// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionObjectiveResult
#include "GlobalNamespace/MissionObjectiveResult.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionObjectiveResult.get_missionObjective
GlobalNamespace::MissionObjective* GlobalNamespace::MissionObjectiveResult::get_missionObjective() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::MissionObjective*>(this, "get_missionObjective"));
}
// Autogenerated method: MissionObjectiveResult.set_missionObjective
void GlobalNamespace::MissionObjectiveResult::set_missionObjective(GlobalNamespace::MissionObjective* value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_missionObjective", value));
}
// Autogenerated method: MissionObjectiveResult.get_cleared
bool GlobalNamespace::MissionObjectiveResult::get_cleared() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_cleared"));
}
// Autogenerated method: MissionObjectiveResult.set_cleared
void GlobalNamespace::MissionObjectiveResult::set_cleared(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_cleared", value));
}
// Autogenerated method: MissionObjectiveResult.get_value
int GlobalNamespace::MissionObjectiveResult::get_value() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_value"));
}
// Autogenerated method: MissionObjectiveResult.set_value
void GlobalNamespace::MissionObjectiveResult::set_value(int value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_value", value));
}
// Autogenerated method: MissionObjectiveResult..ctor
GlobalNamespace::MissionObjectiveResult* GlobalNamespace::MissionObjectiveResult::New_ctor(GlobalNamespace::MissionObjective* missionObjective, bool cleared, int value) {
  return (MissionObjectiveResult*)THROW_UNLESS(il2cpp_utils::New("", "MissionObjectiveResult", missionObjective, cleared, value));
}
