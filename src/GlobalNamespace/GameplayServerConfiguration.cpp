// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameplayServerConfiguration..ctor
// ABORTED elsewhere.  GlobalNamespace::GameplayServerConfiguration::GameplayServerConfiguration(GlobalNamespace::BeatmapDifficultyMask difficulties, GlobalNamespace::GameplayModifierMask modifiers, GlobalNamespace::SongPackMask songPacks)
// Autogenerated method: GameplayServerConfiguration.Deserialize
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::GameplayServerConfiguration::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::GameplayServerConfiguration>("", "GameplayServerConfiguration", "Deserialize", reader));
}
// Autogenerated method: GameplayServerConfiguration.Equals
bool GlobalNamespace::GameplayServerConfiguration::Equals(::Il2CppObject* obj) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", obj));
}
// Autogenerated method: GameplayServerConfiguration.Equals
bool GlobalNamespace::GameplayServerConfiguration::Equals(GlobalNamespace::GameplayServerConfiguration other) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(*this, "Equals", other));
}
// Autogenerated method: GameplayServerConfiguration.GetHashCode
int GlobalNamespace::GameplayServerConfiguration::GetHashCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(*this, "GetHashCode"));
}
// Autogenerated method: GameplayServerConfiguration.Serialize
void GlobalNamespace::GameplayServerConfiguration::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(*this, "Serialize", writer));
}
// Autogenerated method: GameplayServerConfiguration.CreateFromSerializedData
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::GameplayServerConfiguration::CreateFromSerializedData(LiteNetLib::Utils::NetDataReader* reader) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::GameplayServerConfiguration>(*this, "CreateFromSerializedData", reader));
}
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::GameplayServerConfiguration::LiteNetLib_Utils_INetImmutableSerializable_1_CreateFromSerializedData(LiteNetLib::Utils::NetDataReader* reader) {
  return GlobalNamespace::GameplayServerConfiguration::CreateFromSerializedData(reader);
}
// Autogenerated method: GameplayServerConfiguration.op_Equality
bool GlobalNamespace::operator ==(const GlobalNamespace::GameplayServerConfiguration& l, const GlobalNamespace::GameplayServerConfiguration& r) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "GameplayServerConfiguration", "op_Equality", l, r));
}
// Autogenerated method: GameplayServerConfiguration.op_Inequality
bool GlobalNamespace::operator !=(const GlobalNamespace::GameplayServerConfiguration& l, const GlobalNamespace::GameplayServerConfiguration& r) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>("", "GameplayServerConfiguration", "op_Inequality", l, r));
}
