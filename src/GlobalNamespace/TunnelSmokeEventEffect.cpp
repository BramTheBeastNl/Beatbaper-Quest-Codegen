// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TunnelSmokeEventEffect
#include "GlobalNamespace/TunnelSmokeEventEffect.hpp"
// Including type: BeatmapObjectCallbackController
#include "GlobalNamespace/BeatmapObjectCallbackController.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kSpeedMultiplier
float GlobalNamespace::TunnelSmokeEventEffect::_get_kSpeedMultiplier() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TunnelSmokeEventEffect").WithContext("_get_kSpeedMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "TunnelSmokeEventEffect", "kSpeedMultiplier"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSpeedMultiplier
void GlobalNamespace::TunnelSmokeEventEffect::_set_kSpeedMultiplier(float value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TunnelSmokeEventEffect").WithContext("_set_kSpeedMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TunnelSmokeEventEffect", "kSpeedMultiplier", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxParticles
int GlobalNamespace::TunnelSmokeEventEffect::_get_kMaxParticles() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TunnelSmokeEventEffect").WithContext("_get_kMaxParticles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "TunnelSmokeEventEffect", "kMaxParticles"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxParticles
void GlobalNamespace::TunnelSmokeEventEffect::_set_kMaxParticles(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TunnelSmokeEventEffect").WithContext("_set_kMaxParticles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TunnelSmokeEventEffect", "kMaxParticles", value));
}
// Autogenerated method: TunnelSmokeEventEffect.Start
void GlobalNamespace::TunnelSmokeEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TunnelSmokeEventEffect").WithContext("Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TunnelSmokeEventEffect.OnDestroy
void GlobalNamespace::TunnelSmokeEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TunnelSmokeEventEffect").WithContext("OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TunnelSmokeEventEffect.HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger
void GlobalNamespace::TunnelSmokeEventEffect::HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("TunnelSmokeEventEffect").WithContext("HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallbackControllerBeatmapEventDidTrigger", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventData);
}
