// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamVR_TrackedCamera/VideoStreamTexture
#include "GlobalNamespace/SteamVR_TrackedCamera_VideoStreamTexture.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: SteamVR_TrackedCamera/VideoStream
#include "GlobalNamespace/SteamVR_TrackedCamera_VideoStream.hpp"
// Including type: SteamVR_Utils/RigidTransform
#include "GlobalNamespace/SteamVR_Utils_RigidTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_undistorted
bool GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_undistorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("VideoStreamTexture").WithContext("get_undistorted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_undistorted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.set_undistorted
void GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::set_undistorted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("VideoStreamTexture").WithContext("set_undistorted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_undistorted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_deviceIndex
uint GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_deviceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("VideoStreamTexture").WithContext("get_deviceIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_deviceIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_hasCamera
bool GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_hasCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("VideoStreamTexture").WithContext("get_hasCamera");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasCamera", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_hasTracking
bool GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_hasTracking() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("VideoStreamTexture").WithContext("get_hasTracking");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasTracking", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_frameId
uint GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_frameId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("VideoStreamTexture").WithContext("get_frameId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_frameId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_frameBounds
Valve::VR::VRTextureBounds_t GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_frameBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("VideoStreamTexture").WithContext("get_frameBounds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_frameBounds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::VRTextureBounds_t, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.set_frameBounds
void GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::set_frameBounds(Valve::VR::VRTextureBounds_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("VideoStreamTexture").WithContext("set_frameBounds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_frameBounds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_frameType
Valve::VR::EVRTrackedCameraFrameType GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_frameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("VideoStreamTexture").WithContext("get_frameType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_frameType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::EVRTrackedCameraFrameType, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_texture
UnityEngine::Texture2D* GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("VideoStreamTexture").WithContext("get_texture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_texture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_transform
GlobalNamespace::SteamVR_Utils::RigidTransform GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("VideoStreamTexture").WithContext("get_transform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SteamVR_Utils::RigidTransform, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_velocity
UnityEngine::Vector3 GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("VideoStreamTexture").WithContext("get_velocity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_angularVelocity
UnityEngine::Vector3 GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_angularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("VideoStreamTexture").WithContext("get_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_angularVelocity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.GetPose
Valve::VR::TrackedDevicePose_t GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::GetPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("VideoStreamTexture").WithContext("GetPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Valve::VR::TrackedDevicePose_t, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.Acquire
uint64_t GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::Acquire() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("VideoStreamTexture").WithContext("Acquire");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Acquire", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.Release
uint64_t GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("VideoStreamTexture").WithContext("Release");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.Update
void GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("VideoStreamTexture").WithContext("Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
