// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamVR_TrackedCamera/VideoStreamTexture
#include "GlobalNamespace/SteamVR_TrackedCamera_VideoStreamTexture.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: SteamVR_TrackedCamera/VideoStream
#include "GlobalNamespace/SteamVR_TrackedCamera_VideoStream.hpp"
// Including type: SteamVR_Utils/RigidTransform
#include "GlobalNamespace/SteamVR_Utils_RigidTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture..ctor
GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture* GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::New_ctor(uint deviceIndex, bool undistorted) {
  return THROW_UNLESS(il2cpp_utils::New<SteamVR_TrackedCamera::VideoStreamTexture*>(deviceIndex, undistorted));
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_undistorted
bool GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_undistorted() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_undistorted"));
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.set_undistorted
void GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::set_undistorted(bool value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_undistorted", value));
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_deviceIndex
uint GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_deviceIndex() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>(this, "get_deviceIndex"));
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_hasCamera
bool GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_hasCamera() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_hasCamera"));
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_hasTracking
bool GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_hasTracking() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_hasTracking"));
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_frameId
uint GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_frameId() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint>(this, "get_frameId"));
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_frameBounds
Valve::VR::VRTextureBounds_t GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_frameBounds() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Valve::VR::VRTextureBounds_t>(this, "get_frameBounds"));
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.set_frameBounds
void GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::set_frameBounds(Valve::VR::VRTextureBounds_t value) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "set_frameBounds", value));
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_frameType
Valve::VR::EVRTrackedCameraFrameType GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_frameType() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Valve::VR::EVRTrackedCameraFrameType>(this, "get_frameType"));
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_texture
UnityEngine::Texture2D* GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_texture() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Texture2D*>(this, "get_texture"));
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_transform
GlobalNamespace::SteamVR_Utils::RigidTransform GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_transform() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::SteamVR_Utils::RigidTransform>(this, "get_transform"));
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_velocity
UnityEngine::Vector3 GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_velocity() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_velocity"));
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.get_angularVelocity
UnityEngine::Vector3 GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::get_angularVelocity() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::Vector3>(this, "get_angularVelocity"));
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.GetPose
Valve::VR::TrackedDevicePose_t GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::GetPose() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Valve::VR::TrackedDevicePose_t>(this, "GetPose"));
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.Acquire
uint64_t GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::Acquire() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint64_t>(this, "Acquire"));
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.Release
uint64_t GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::Release() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint64_t>(this, "Release"));
}
// Autogenerated method: SteamVR_TrackedCamera/VideoStreamTexture.Update
void GlobalNamespace::SteamVR_TrackedCamera::VideoStreamTexture::Update() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Update"));
}
