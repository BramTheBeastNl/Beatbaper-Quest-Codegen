// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ShaderVariantsSO/ShaderVariant/Variant
#include "GlobalNamespace/ShaderVariantsSO_ShaderVariant_Variant.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ShaderVariantsSO/ShaderVariant/Variant.get_passType
UnityEngine::Rendering::PassType GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant::get_passType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("Variant").WithContext("get_passType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<UnityEngine::Rendering::PassType>(), "get_passType", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::PassType, false>(this, ___internal__method);
}
// Autogenerated method: ShaderVariantsSO/ShaderVariant/Variant.get_keywords
::Il2CppString* GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant::get_keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("Variant").WithContext("get_keywords");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<::Il2CppString*>(), "get_keywords", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: ShaderVariantsSO/ShaderVariant/Variant..ctor
GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant* GlobalNamespace::ShaderVariantsSO::ShaderVariant::Variant::New_ctor(UnityEngine::Rendering::PassType passType, ::Il2CppString* keywords) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("GlobalNamespace").WithContext("Variant").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<ShaderVariantsSO::ShaderVariant::Variant*>(passType, keywords));
}
