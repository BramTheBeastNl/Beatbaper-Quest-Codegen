// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Hand
#include "GlobalNamespace/OVRPlugin_Hand.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Hand None
GlobalNamespace::OVRPlugin::Hand GlobalNamespace::OVRPlugin::Hand::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Hand::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::Hand>("", "OVRPlugin/Hand", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Hand None
void GlobalNamespace::OVRPlugin::Hand::_set_None(GlobalNamespace::OVRPlugin::Hand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Hand::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Hand", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Hand HandLeft
GlobalNamespace::OVRPlugin::Hand GlobalNamespace::OVRPlugin::Hand::_get_HandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Hand::_get_HandLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::Hand>("", "OVRPlugin/Hand", "HandLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Hand HandLeft
void GlobalNamespace::OVRPlugin::Hand::_set_HandLeft(GlobalNamespace::OVRPlugin::Hand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Hand::_set_HandLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Hand", "HandLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Hand HandRight
GlobalNamespace::OVRPlugin::Hand GlobalNamespace::OVRPlugin::Hand::_get_HandRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Hand::_get_HandRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::Hand>("", "OVRPlugin/Hand", "HandRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Hand HandRight
void GlobalNamespace::OVRPlugin::Hand::_set_HandRight(GlobalNamespace::OVRPlugin::Hand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Hand::_set_HandRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Hand", "HandRight", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/HandStatus
#include "GlobalNamespace/OVRPlugin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandStatus HandTracked
GlobalNamespace::OVRPlugin::HandStatus GlobalNamespace::OVRPlugin::HandStatus::_get_HandTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandStatus::_get_HandTracked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::HandStatus>("", "OVRPlugin/HandStatus", "HandTracked"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandStatus HandTracked
void GlobalNamespace::OVRPlugin::HandStatus::_set_HandTracked(GlobalNamespace::OVRPlugin::HandStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandStatus::_set_HandTracked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandStatus", "HandTracked", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandStatus InputStateValid
GlobalNamespace::OVRPlugin::HandStatus GlobalNamespace::OVRPlugin::HandStatus::_get_InputStateValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandStatus::_get_InputStateValid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::HandStatus>("", "OVRPlugin/HandStatus", "InputStateValid"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandStatus InputStateValid
void GlobalNamespace::OVRPlugin::HandStatus::_set_InputStateValid(GlobalNamespace::OVRPlugin::HandStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandStatus::_set_InputStateValid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandStatus", "InputStateValid", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandStatus SystemGestureInProgress
GlobalNamespace::OVRPlugin::HandStatus GlobalNamespace::OVRPlugin::HandStatus::_get_SystemGestureInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandStatus::_get_SystemGestureInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::HandStatus>("", "OVRPlugin/HandStatus", "SystemGestureInProgress"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandStatus SystemGestureInProgress
void GlobalNamespace::OVRPlugin::HandStatus::_set_SystemGestureInProgress(GlobalNamespace::OVRPlugin::HandStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandStatus::_set_SystemGestureInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandStatus", "SystemGestureInProgress", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/BoneId
#include "GlobalNamespace/OVRPlugin_BoneId.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Invalid
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Invalid
void GlobalNamespace::OVRPlugin::BoneId::_set_Invalid(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Start
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Start"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Start
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Start(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_WristRoot
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_WristRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_WristRoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_WristRoot"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_WristRoot
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_WristRoot(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_WristRoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_WristRoot", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_ForearmStub
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_ForearmStub() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_ForearmStub");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_ForearmStub"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_ForearmStub
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_ForearmStub(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_ForearmStub");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_ForearmStub", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Thumb0
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Thumb0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Thumb0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Thumb0"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Thumb0
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Thumb0(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Thumb0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Thumb0", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Thumb1
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Thumb1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Thumb1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Thumb1"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Thumb1
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Thumb1(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Thumb1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Thumb1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Thumb2
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Thumb2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Thumb2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Thumb2"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Thumb2
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Thumb2(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Thumb2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Thumb2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Thumb3
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Thumb3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Thumb3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Thumb3"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Thumb3
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Thumb3(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Thumb3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Thumb3", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Index1
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Index1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Index1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Index1"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Index1
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Index1(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Index1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Index1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Index2
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Index2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Index2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Index2"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Index2
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Index2(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Index2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Index2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Index3
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Index3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Index3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Index3"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Index3
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Index3(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Index3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Index3", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Middle1
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Middle1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Middle1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Middle1"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Middle1
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Middle1(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Middle1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Middle1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Middle2
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Middle2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Middle2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Middle2"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Middle2
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Middle2(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Middle2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Middle2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Middle3
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Middle3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Middle3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Middle3"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Middle3
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Middle3(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Middle3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Middle3", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Ring1
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Ring1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Ring1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Ring1"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Ring1
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Ring1(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Ring1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Ring1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Ring2
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Ring2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Ring2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Ring2"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Ring2
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Ring2(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Ring2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Ring2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Ring3
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Ring3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Ring3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Ring3"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Ring3
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Ring3(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Ring3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Ring3", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Pinky0
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Pinky0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Pinky0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Pinky0"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Pinky0
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Pinky0(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Pinky0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Pinky0", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Pinky1
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Pinky1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Pinky1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Pinky1"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Pinky1
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Pinky1(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Pinky1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Pinky1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Pinky2
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Pinky2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Pinky2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Pinky2"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Pinky2
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Pinky2(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Pinky2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Pinky2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_Pinky3
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Pinky3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_Pinky3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_Pinky3"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_Pinky3
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Pinky3(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_Pinky3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_Pinky3", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_MaxSkinnable
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_MaxSkinnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_MaxSkinnable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_MaxSkinnable"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_MaxSkinnable
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_MaxSkinnable(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_MaxSkinnable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_MaxSkinnable", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_ThumbTip
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_ThumbTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_ThumbTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_ThumbTip"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_ThumbTip
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_ThumbTip(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_ThumbTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_ThumbTip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_IndexTip
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_IndexTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_IndexTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_IndexTip"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_IndexTip
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_IndexTip(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_IndexTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_IndexTip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_MiddleTip
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_MiddleTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_MiddleTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_MiddleTip"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_MiddleTip
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_MiddleTip(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_MiddleTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_MiddleTip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_RingTip
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_RingTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_RingTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_RingTip"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_RingTip
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_RingTip(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_RingTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_RingTip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_PinkyTip
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_PinkyTip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_PinkyTip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_PinkyTip"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_PinkyTip
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_PinkyTip(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_PinkyTip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_PinkyTip", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Hand_End
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Hand_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Hand_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Hand_End"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Hand_End
void GlobalNamespace::OVRPlugin::BoneId::_set_Hand_End(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Hand_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Hand_End", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/BoneId Max
GlobalNamespace::OVRPlugin::BoneId GlobalNamespace::OVRPlugin::BoneId::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::BoneId>("", "OVRPlugin/BoneId", "Max"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/BoneId Max
void GlobalNamespace::OVRPlugin::BoneId::_set_Max(GlobalNamespace::OVRPlugin::BoneId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::BoneId::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/BoneId", "Max", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/HandFinger
#include "GlobalNamespace/OVRPlugin_HandFinger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFinger Thumb
GlobalNamespace::OVRPlugin::HandFinger GlobalNamespace::OVRPlugin::HandFinger::_get_Thumb() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFinger::_get_Thumb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::HandFinger>("", "OVRPlugin/HandFinger", "Thumb"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFinger Thumb
void GlobalNamespace::OVRPlugin::HandFinger::_set_Thumb(GlobalNamespace::OVRPlugin::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFinger::_set_Thumb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFinger", "Thumb", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFinger Index
GlobalNamespace::OVRPlugin::HandFinger GlobalNamespace::OVRPlugin::HandFinger::_get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFinger::_get_Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::HandFinger>("", "OVRPlugin/HandFinger", "Index"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFinger Index
void GlobalNamespace::OVRPlugin::HandFinger::_set_Index(GlobalNamespace::OVRPlugin::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFinger::_set_Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFinger", "Index", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFinger Middle
GlobalNamespace::OVRPlugin::HandFinger GlobalNamespace::OVRPlugin::HandFinger::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFinger::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::HandFinger>("", "OVRPlugin/HandFinger", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFinger Middle
void GlobalNamespace::OVRPlugin::HandFinger::_set_Middle(GlobalNamespace::OVRPlugin::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFinger::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFinger", "Middle", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFinger Ring
GlobalNamespace::OVRPlugin::HandFinger GlobalNamespace::OVRPlugin::HandFinger::_get_Ring() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFinger::_get_Ring");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::HandFinger>("", "OVRPlugin/HandFinger", "Ring"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFinger Ring
void GlobalNamespace::OVRPlugin::HandFinger::_set_Ring(GlobalNamespace::OVRPlugin::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFinger::_set_Ring");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFinger", "Ring", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFinger Pinky
GlobalNamespace::OVRPlugin::HandFinger GlobalNamespace::OVRPlugin::HandFinger::_get_Pinky() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFinger::_get_Pinky");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::HandFinger>("", "OVRPlugin/HandFinger", "Pinky"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFinger Pinky
void GlobalNamespace::OVRPlugin::HandFinger::_set_Pinky(GlobalNamespace::OVRPlugin::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFinger::_set_Pinky");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFinger", "Pinky", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFinger Max
GlobalNamespace::OVRPlugin::HandFinger GlobalNamespace::OVRPlugin::HandFinger::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFinger::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::HandFinger>("", "OVRPlugin/HandFinger", "Max"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFinger Max
void GlobalNamespace::OVRPlugin::HandFinger::_set_Max(GlobalNamespace::OVRPlugin::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFinger::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFinger", "Max", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/HandFingerPinch
#include "GlobalNamespace/OVRPlugin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFingerPinch Thumb
GlobalNamespace::OVRPlugin::HandFingerPinch GlobalNamespace::OVRPlugin::HandFingerPinch::_get_Thumb() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFingerPinch::_get_Thumb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::HandFingerPinch>("", "OVRPlugin/HandFingerPinch", "Thumb"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFingerPinch Thumb
void GlobalNamespace::OVRPlugin::HandFingerPinch::_set_Thumb(GlobalNamespace::OVRPlugin::HandFingerPinch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFingerPinch::_set_Thumb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFingerPinch", "Thumb", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFingerPinch Index
GlobalNamespace::OVRPlugin::HandFingerPinch GlobalNamespace::OVRPlugin::HandFingerPinch::_get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFingerPinch::_get_Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::HandFingerPinch>("", "OVRPlugin/HandFingerPinch", "Index"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFingerPinch Index
void GlobalNamespace::OVRPlugin::HandFingerPinch::_set_Index(GlobalNamespace::OVRPlugin::HandFingerPinch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFingerPinch::_set_Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFingerPinch", "Index", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFingerPinch Middle
GlobalNamespace::OVRPlugin::HandFingerPinch GlobalNamespace::OVRPlugin::HandFingerPinch::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFingerPinch::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::HandFingerPinch>("", "OVRPlugin/HandFingerPinch", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFingerPinch Middle
void GlobalNamespace::OVRPlugin::HandFingerPinch::_set_Middle(GlobalNamespace::OVRPlugin::HandFingerPinch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFingerPinch::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFingerPinch", "Middle", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFingerPinch Ring
GlobalNamespace::OVRPlugin::HandFingerPinch GlobalNamespace::OVRPlugin::HandFingerPinch::_get_Ring() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFingerPinch::_get_Ring");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::HandFingerPinch>("", "OVRPlugin/HandFingerPinch", "Ring"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFingerPinch Ring
void GlobalNamespace::OVRPlugin::HandFingerPinch::_set_Ring(GlobalNamespace::OVRPlugin::HandFingerPinch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFingerPinch::_set_Ring");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFingerPinch", "Ring", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/HandFingerPinch Pinky
GlobalNamespace::OVRPlugin::HandFingerPinch GlobalNamespace::OVRPlugin::HandFingerPinch::_get_Pinky() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFingerPinch::_get_Pinky");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::HandFingerPinch>("", "OVRPlugin/HandFingerPinch", "Pinky"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/HandFingerPinch Pinky
void GlobalNamespace::OVRPlugin::HandFingerPinch::_set_Pinky(GlobalNamespace::OVRPlugin::HandFingerPinch value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::HandFingerPinch::_set_Pinky");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/HandFingerPinch", "Pinky", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/SkeletonConstants
#include "GlobalNamespace/OVRPlugin_SkeletonConstants.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SkeletonConstants MaxBones
GlobalNamespace::OVRPlugin::SkeletonConstants GlobalNamespace::OVRPlugin::SkeletonConstants::_get_MaxBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::SkeletonConstants::_get_MaxBones");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::SkeletonConstants>("", "OVRPlugin/SkeletonConstants", "MaxBones"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SkeletonConstants MaxBones
void GlobalNamespace::OVRPlugin::SkeletonConstants::_set_MaxBones(GlobalNamespace::OVRPlugin::SkeletonConstants value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::SkeletonConstants::_set_MaxBones");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SkeletonConstants", "MaxBones", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SkeletonConstants MaxBoneCapsules
GlobalNamespace::OVRPlugin::SkeletonConstants GlobalNamespace::OVRPlugin::SkeletonConstants::_get_MaxBoneCapsules() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::SkeletonConstants::_get_MaxBoneCapsules");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::SkeletonConstants>("", "OVRPlugin/SkeletonConstants", "MaxBoneCapsules"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SkeletonConstants MaxBoneCapsules
void GlobalNamespace::OVRPlugin::SkeletonConstants::_set_MaxBoneCapsules(GlobalNamespace::OVRPlugin::SkeletonConstants value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::SkeletonConstants::_set_MaxBoneCapsules");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SkeletonConstants", "MaxBoneCapsules", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/SkeletonType
#include "GlobalNamespace/OVRPlugin_SkeletonType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SkeletonType None
GlobalNamespace::OVRPlugin::SkeletonType GlobalNamespace::OVRPlugin::SkeletonType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::SkeletonType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::SkeletonType>("", "OVRPlugin/SkeletonType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SkeletonType None
void GlobalNamespace::OVRPlugin::SkeletonType::_set_None(GlobalNamespace::OVRPlugin::SkeletonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::SkeletonType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SkeletonType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SkeletonType HandLeft
GlobalNamespace::OVRPlugin::SkeletonType GlobalNamespace::OVRPlugin::SkeletonType::_get_HandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::SkeletonType::_get_HandLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::SkeletonType>("", "OVRPlugin/SkeletonType", "HandLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SkeletonType HandLeft
void GlobalNamespace::OVRPlugin::SkeletonType::_set_HandLeft(GlobalNamespace::OVRPlugin::SkeletonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::SkeletonType::_set_HandLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SkeletonType", "HandLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/SkeletonType HandRight
GlobalNamespace::OVRPlugin::SkeletonType GlobalNamespace::OVRPlugin::SkeletonType::_get_HandRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::SkeletonType::_get_HandRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::SkeletonType>("", "OVRPlugin/SkeletonType", "HandRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/SkeletonType HandRight
void GlobalNamespace::OVRPlugin::SkeletonType::_set_HandRight(GlobalNamespace::OVRPlugin::SkeletonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::SkeletonType::_set_HandRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/SkeletonType", "HandRight", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/MeshConstants
#include "GlobalNamespace/OVRPlugin_MeshConstants.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/MeshConstants MaxVertices
GlobalNamespace::OVRPlugin::MeshConstants GlobalNamespace::OVRPlugin::MeshConstants::_get_MaxVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::MeshConstants::_get_MaxVertices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::MeshConstants>("", "OVRPlugin/MeshConstants", "MaxVertices"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/MeshConstants MaxVertices
void GlobalNamespace::OVRPlugin::MeshConstants::_set_MaxVertices(GlobalNamespace::OVRPlugin::MeshConstants value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::MeshConstants::_set_MaxVertices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/MeshConstants", "MaxVertices", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/MeshConstants MaxIndices
GlobalNamespace::OVRPlugin::MeshConstants GlobalNamespace::OVRPlugin::MeshConstants::_get_MaxIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::MeshConstants::_get_MaxIndices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::MeshConstants>("", "OVRPlugin/MeshConstants", "MaxIndices"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/MeshConstants MaxIndices
void GlobalNamespace::OVRPlugin::MeshConstants::_set_MaxIndices(GlobalNamespace::OVRPlugin::MeshConstants value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::MeshConstants::_set_MaxIndices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/MeshConstants", "MaxIndices", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/MeshType
#include "GlobalNamespace/OVRPlugin_MeshType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/MeshType None
GlobalNamespace::OVRPlugin::MeshType GlobalNamespace::OVRPlugin::MeshType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::MeshType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::MeshType>("", "OVRPlugin/MeshType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/MeshType None
void GlobalNamespace::OVRPlugin::MeshType::_set_None(GlobalNamespace::OVRPlugin::MeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::MeshType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/MeshType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/MeshType HandLeft
GlobalNamespace::OVRPlugin::MeshType GlobalNamespace::OVRPlugin::MeshType::_get_HandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::MeshType::_get_HandLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::MeshType>("", "OVRPlugin/MeshType", "HandLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/MeshType HandLeft
void GlobalNamespace::OVRPlugin::MeshType::_set_HandLeft(GlobalNamespace::OVRPlugin::MeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::MeshType::_set_HandLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/MeshType", "HandLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/MeshType HandRight
GlobalNamespace::OVRPlugin::MeshType GlobalNamespace::OVRPlugin::MeshType::_get_HandRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::MeshType::_get_HandRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::MeshType>("", "OVRPlugin/MeshType", "HandRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/MeshType HandRight
void GlobalNamespace::OVRPlugin::MeshType::_set_HandRight(GlobalNamespace::OVRPlugin::MeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::MeshType::_set_HandRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/MeshType", "HandRight", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/Mesh
#include "GlobalNamespace/OVRPlugin_Mesh.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/Media
#include "GlobalNamespace/OVRPlugin_Media.hpp"
// Including type: OVRPlugin/Media/MrcActivationMode
#include "GlobalNamespace/OVRPlugin_Media_MrcActivationMode.hpp"
// Including type: OVRPlugin/Media/InputVideoBufferType
#include "GlobalNamespace/OVRPlugin_Media_InputVideoBufferType.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Texture2D cachedTexture
UnityEngine::Texture2D* GlobalNamespace::OVRPlugin::Media::_get_cachedTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::_get_cachedTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Texture2D*>("", "OVRPlugin/Media", "cachedTexture"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Texture2D cachedTexture
void GlobalNamespace::OVRPlugin::Media::_set_cachedTexture(UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::_set_cachedTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media", "cachedTexture", value));
}
// Autogenerated method: OVRPlugin/Media.Initialize
bool GlobalNamespace::OVRPlugin::Media::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.Shutdown
bool GlobalNamespace::OVRPlugin::Media::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::Shutdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "Shutdown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.GetInitialized
bool GlobalNamespace::OVRPlugin::Media::GetInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::GetInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "GetInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.Update
bool GlobalNamespace::OVRPlugin::Media::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.GetMrcActivationMode
GlobalNamespace::OVRPlugin::Media::MrcActivationMode GlobalNamespace::OVRPlugin::Media::GetMrcActivationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::GetMrcActivationMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "GetMrcActivationMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Media::MrcActivationMode, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.SetMrcActivationMode
bool GlobalNamespace::OVRPlugin::Media::SetMrcActivationMode(GlobalNamespace::OVRPlugin::Media::MrcActivationMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::SetMrcActivationMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetMrcActivationMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mode);
}
// Autogenerated method: OVRPlugin/Media.IsMrcEnabled
bool GlobalNamespace::OVRPlugin::Media::IsMrcEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::IsMrcEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "IsMrcEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.IsMrcActivated
bool GlobalNamespace::OVRPlugin::Media::IsMrcActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::IsMrcActivated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "IsMrcActivated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.UseMrcDebugCamera
bool GlobalNamespace::OVRPlugin::Media::UseMrcDebugCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::UseMrcDebugCamera");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "UseMrcDebugCamera", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.SetMrcInputVideoBufferType
bool GlobalNamespace::OVRPlugin::Media::SetMrcInputVideoBufferType(GlobalNamespace::OVRPlugin::Media::InputVideoBufferType videoBufferType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::SetMrcInputVideoBufferType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetMrcInputVideoBufferType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(videoBufferType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, videoBufferType);
}
// Autogenerated method: OVRPlugin/Media.GetMrcInputVideoBufferType
GlobalNamespace::OVRPlugin::Media::InputVideoBufferType GlobalNamespace::OVRPlugin::Media::GetMrcInputVideoBufferType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::GetMrcInputVideoBufferType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "GetMrcInputVideoBufferType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Media::InputVideoBufferType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.SetMrcFrameSize
bool GlobalNamespace::OVRPlugin::Media::SetMrcFrameSize(int frameWidth, int frameHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::SetMrcFrameSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetMrcFrameSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(frameWidth, frameHeight)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, frameWidth, frameHeight);
}
// Autogenerated method: OVRPlugin/Media.GetMrcFrameSize
void GlobalNamespace::OVRPlugin::Media::GetMrcFrameSize(int& frameWidth, int& frameHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::GetMrcFrameSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "GetMrcFrameSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(frameWidth, frameHeight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, frameWidth, frameHeight);
}
// Autogenerated method: OVRPlugin/Media.SetMrcAudioSampleRate
bool GlobalNamespace::OVRPlugin::Media::SetMrcAudioSampleRate(int sampleRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::SetMrcAudioSampleRate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetMrcAudioSampleRate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sampleRate)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sampleRate);
}
// Autogenerated method: OVRPlugin/Media.GetMrcAudioSampleRate
int GlobalNamespace::OVRPlugin::Media::GetMrcAudioSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::GetMrcAudioSampleRate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "GetMrcAudioSampleRate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.SetMrcFrameImageFlipped
bool GlobalNamespace::OVRPlugin::Media::SetMrcFrameImageFlipped(bool imageFlipped) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::SetMrcFrameImageFlipped");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SetMrcFrameImageFlipped", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(imageFlipped)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, imageFlipped);
}
// Autogenerated method: OVRPlugin/Media.GetMrcFrameImageFlipped
bool GlobalNamespace::OVRPlugin::Media::GetMrcFrameImageFlipped() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::GetMrcFrameImageFlipped");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "GetMrcFrameImageFlipped", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/Media.EncodeMrcFrame
bool GlobalNamespace::OVRPlugin::Media::EncodeMrcFrame(System::IntPtr textureHandle, ::Array<float>* audioData, int audioFrames, int audioChannels, double timestamp, int& outSyncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::EncodeMrcFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "EncodeMrcFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(textureHandle, audioData, audioFrames, audioChannels, timestamp, outSyncId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textureHandle, audioData, audioFrames, audioChannels, timestamp, outSyncId);
}
// Autogenerated method: OVRPlugin/Media.EncodeMrcFrame
bool GlobalNamespace::OVRPlugin::Media::EncodeMrcFrame(UnityEngine::RenderTexture* frame, ::Array<float>* audioData, int audioFrames, int audioChannels, double timestamp, int& outSyncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::EncodeMrcFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "EncodeMrcFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(frame, audioData, audioFrames, audioChannels, timestamp, outSyncId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, frame, audioData, audioFrames, audioChannels, timestamp, outSyncId);
}
// Autogenerated method: OVRPlugin/Media.SyncMrcFrame
bool GlobalNamespace::OVRPlugin::Media::SyncMrcFrame(int syncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::SyncMrcFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", "SyncMrcFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(syncId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, syncId);
}
// Autogenerated method: OVRPlugin/Media..cctor
void GlobalNamespace::OVRPlugin::Media::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/Media", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Media/MrcActivationMode
#include "GlobalNamespace/OVRPlugin_Media_MrcActivationMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/MrcActivationMode Automatic
GlobalNamespace::OVRPlugin::Media::MrcActivationMode GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_get_Automatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_get_Automatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::Media::MrcActivationMode>("", "OVRPlugin/Media/MrcActivationMode", "Automatic"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/MrcActivationMode Automatic
void GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_set_Automatic(GlobalNamespace::OVRPlugin::Media::MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_set_Automatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/MrcActivationMode", "Automatic", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/MrcActivationMode Disabled
GlobalNamespace::OVRPlugin::Media::MrcActivationMode GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::Media::MrcActivationMode>("", "OVRPlugin/Media/MrcActivationMode", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/MrcActivationMode Disabled
void GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_set_Disabled(GlobalNamespace::OVRPlugin::Media::MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/MrcActivationMode", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/MrcActivationMode EnumSize
GlobalNamespace::OVRPlugin::Media::MrcActivationMode GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_get_EnumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_get_EnumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::Media::MrcActivationMode>("", "OVRPlugin/Media/MrcActivationMode", "EnumSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/MrcActivationMode EnumSize
void GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_set_EnumSize(GlobalNamespace::OVRPlugin::Media::MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::MrcActivationMode::_set_EnumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/MrcActivationMode", "EnumSize", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/Media/InputVideoBufferType
#include "GlobalNamespace/OVRPlugin_Media_InputVideoBufferType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/InputVideoBufferType Memory
GlobalNamespace::OVRPlugin::Media::InputVideoBufferType GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_get_Memory() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_get_Memory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::Media::InputVideoBufferType>("", "OVRPlugin/Media/InputVideoBufferType", "Memory"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/InputVideoBufferType Memory
void GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_set_Memory(GlobalNamespace::OVRPlugin::Media::InputVideoBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_set_Memory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/InputVideoBufferType", "Memory", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/InputVideoBufferType TextureHandle
GlobalNamespace::OVRPlugin::Media::InputVideoBufferType GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_get_TextureHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_get_TextureHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::Media::InputVideoBufferType>("", "OVRPlugin/Media/InputVideoBufferType", "TextureHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/InputVideoBufferType TextureHandle
void GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_set_TextureHandle(GlobalNamespace::OVRPlugin::Media::InputVideoBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_set_TextureHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/InputVideoBufferType", "TextureHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVRPlugin/Media/InputVideoBufferType EnumSize
GlobalNamespace::OVRPlugin::Media::InputVideoBufferType GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_get_EnumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_get_EnumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRPlugin::Media::InputVideoBufferType>("", "OVRPlugin/Media/InputVideoBufferType", "EnumSize"));
}
// Autogenerated static field setter
// Set static field: static public OVRPlugin/Media/InputVideoBufferType EnumSize
void GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_set_EnumSize(GlobalNamespace::OVRPlugin::Media::InputVideoBufferType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::Media::InputVideoBufferType::_set_EnumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/Media/InputVideoBufferType", "EnumSize", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_0_1_0
#include "GlobalNamespace/OVRPlugin_OVRP_0_1_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Sizei
#include "GlobalNamespace/OVRPlugin_Sizei.hpp"
// Including type: OVRPlugin/Eye
#include "GlobalNamespace/OVRPlugin_Eye.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_0_1_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_1_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_0_1_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_0_1_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_1_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_0_1_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_0_1_0.ovrp_GetEyeTextureSize
GlobalNamespace::OVRPlugin::Sizei GlobalNamespace::OVRPlugin::OVRP_0_1_0::ovrp_GetEyeTextureSize(GlobalNamespace::OVRPlugin::Eye eyeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_1_0::ovrp_GetEyeTextureSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_0", "ovrp_GetEyeTextureSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eyeId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Sizei, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, eyeId);
}
// Autogenerated method: OVRPlugin/OVRP_0_1_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_0_1_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_1_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_0_1_1
#include "GlobalNamespace/OVRPlugin_OVRP_0_1_1.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/Vector3f
#include "GlobalNamespace/OVRPlugin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_0_1_1::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_1_1::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_0_1_1", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_0_1_1::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_1_1::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_0_1_1", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_0_1_1.ovrp_SetOverlayQuad2
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_0_1_1::ovrp_SetOverlayQuad2(GlobalNamespace::OVRPlugin::Bool onTop, GlobalNamespace::OVRPlugin::Bool headLocked, System::IntPtr texture, System::IntPtr device, GlobalNamespace::OVRPlugin::Posef pose, GlobalNamespace::OVRPlugin::Vector3f scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_1_1::ovrp_SetOverlayQuad2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_1", "ovrp_SetOverlayQuad2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(onTop, headLocked, texture, device, pose, scale)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, onTop, headLocked, texture, device, pose, scale);
}
// Autogenerated method: OVRPlugin/OVRP_0_1_1..cctor
void GlobalNamespace::OVRPlugin::OVRP_0_1_1::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_1_1::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_1", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_0_1_2
#include "GlobalNamespace/OVRPlugin_OVRP_0_1_2.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_0_1_2::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_1_2::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_0_1_2", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_0_1_2::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_1_2::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_0_1_2", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_0_1_2.ovrp_GetNodePose
GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_0_1_2::ovrp_GetNodePose(GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_1_2::ovrp_GetNodePose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_2", "ovrp_GetNodePose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_0_1_2.ovrp_SetControllerVibration
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_0_1_2::ovrp_SetControllerVibration(uint controllerMask, float frequency, float amplitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_1_2::ovrp_SetControllerVibration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_2", "ovrp_SetControllerVibration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerMask, frequency, amplitude)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controllerMask, frequency, amplitude);
}
// Autogenerated method: OVRPlugin/OVRP_0_1_2..cctor
void GlobalNamespace::OVRPlugin::OVRP_0_1_2::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_1_2::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_2", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_0_1_3
#include "GlobalNamespace/OVRPlugin_OVRP_0_1_3.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_0_1_3::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_1_3::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_0_1_3", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_0_1_3::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_1_3::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_0_1_3", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_0_1_3.ovrp_GetNodeVelocity
GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_0_1_3::ovrp_GetNodeVelocity(GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_1_3::ovrp_GetNodeVelocity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_3", "ovrp_GetNodeVelocity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_0_1_3.ovrp_GetNodeAcceleration
GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_0_1_3::ovrp_GetNodeAcceleration(GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_1_3::ovrp_GetNodeAcceleration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_3", "ovrp_GetNodeAcceleration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_0_1_3..cctor
void GlobalNamespace::OVRPlugin::OVRP_0_1_3::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_1_3::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_1_3", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_0_5_0
#include "GlobalNamespace/OVRPlugin_OVRP_0_5_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_0_5_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_5_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_0_5_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_0_5_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_5_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_0_5_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_0_5_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_0_5_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_0_5_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_0_5_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_0_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_0_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/TrackingOrigin
#include "GlobalNamespace/OVRPlugin_TrackingOrigin.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_0_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_0_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_0_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_0_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_0_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_0_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_0_0.ovrp_GetTrackingOriginType
GlobalNamespace::OVRPlugin::TrackingOrigin GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_GetTrackingOriginType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_GetTrackingOriginType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_0_0", "ovrp_GetTrackingOriginType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::TrackingOrigin, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_0_0.ovrp_SetTrackingOriginType
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_SetTrackingOriginType(GlobalNamespace::OVRPlugin::TrackingOrigin originType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_SetTrackingOriginType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_0_0", "ovrp_SetTrackingOriginType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(originType)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, originType);
}
// Autogenerated method: OVRPlugin/OVRP_1_0_0.ovrp_GetTrackingCalibratedOrigin
GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_GetTrackingCalibratedOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_GetTrackingCalibratedOrigin");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_0_0", "ovrp_GetTrackingCalibratedOrigin", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_0_0.ovrp_RecenterTrackingOrigin
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_RecenterTrackingOrigin(uint flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_0_0::ovrp_RecenterTrackingOrigin");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_0_0", "ovrp_RecenterTrackingOrigin", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, flags);
}
// Autogenerated method: OVRPlugin/OVRP_1_0_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_0_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_0_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_0_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/OVRP_1_1_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_1_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/Frustumf
#include "GlobalNamespace/OVRPlugin_Frustumf.hpp"
// Including type: OVRPlugin/ControllerState
#include "GlobalNamespace/OVRPlugin_ControllerState.hpp"
// Including type: OVRPlugin/BatteryStatus
#include "GlobalNamespace/OVRPlugin_BatteryStatus.hpp"
// Including type: OVRPlugin/PlatformUI
#include "GlobalNamespace/OVRPlugin_PlatformUI.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_1_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_1_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_1_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_1_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetInitialized
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0._ovrp_GetVersion
System::IntPtr GlobalNamespace::OVRPlugin::OVRP_1_1_0::_ovrp_GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::_ovrp_GetVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "_ovrp_GetVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetVersion
::Il2CppString* GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0._ovrp_GetNativeSDKVersion
System::IntPtr GlobalNamespace::OVRPlugin::OVRP_1_1_0::_ovrp_GetNativeSDKVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::_ovrp_GetNativeSDKVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "_ovrp_GetNativeSDKVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetNativeSDKVersion
::Il2CppString* GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetNativeSDKVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetNativeSDKVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetNativeSDKVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetAudioOutId
System::IntPtr GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAudioOutId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAudioOutId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetAudioOutId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetAudioInId
System::IntPtr GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAudioInId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAudioInId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetAudioInId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetEyeTextureScale
float GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetEyeTextureScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetEyeTextureScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetEyeTextureScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_SetEyeTextureScale
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetEyeTextureScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetEyeTextureScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_SetEyeTextureScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetTrackingOrientationSupported
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetTrackingOrientationSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetTrackingOrientationSupported");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetTrackingOrientationSupported", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetTrackingOrientationEnabled
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetTrackingOrientationEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetTrackingOrientationEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetTrackingOrientationEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_SetTrackingOrientationEnabled
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetTrackingOrientationEnabled(GlobalNamespace::OVRPlugin::Bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetTrackingOrientationEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_SetTrackingOrientationEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetTrackingPositionSupported
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetTrackingPositionSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetTrackingPositionSupported");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetTrackingPositionSupported", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetTrackingPositionEnabled
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetTrackingPositionEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetTrackingPositionEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetTrackingPositionEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_SetTrackingPositionEnabled
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetTrackingPositionEnabled(GlobalNamespace::OVRPlugin::Bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetTrackingPositionEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_SetTrackingPositionEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetNodePresent
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetNodePresent(GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetNodePresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetNodePresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetNodeOrientationTracked
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetNodeOrientationTracked(GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetNodeOrientationTracked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetNodeOrientationTracked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetNodePositionTracked
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetNodePositionTracked(GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetNodePositionTracked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetNodePositionTracked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetNodeFrustum
GlobalNamespace::OVRPlugin::Frustumf GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetNodeFrustum(GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetNodeFrustum");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetNodeFrustum", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Frustumf, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetControllerState
GlobalNamespace::OVRPlugin::ControllerState GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetControllerState(uint controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetControllerState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetControllerState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::ControllerState, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetSystemCpuLevel
int GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemCpuLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemCpuLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetSystemCpuLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_SetSystemCpuLevel
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetSystemCpuLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetSystemCpuLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_SetSystemCpuLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetSystemGpuLevel
int GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemGpuLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemGpuLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetSystemGpuLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_SetSystemGpuLevel
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetSystemGpuLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetSystemGpuLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_SetSystemGpuLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetSystemPowerSavingMode
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemPowerSavingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemPowerSavingMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetSystemPowerSavingMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetSystemDisplayFrequency
float GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemDisplayFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemDisplayFrequency");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetSystemDisplayFrequency", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetSystemVSyncCount
int GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemVSyncCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemVSyncCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetSystemVSyncCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetSystemVolume
float GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemVolume");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetSystemVolume", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetSystemBatteryStatus
GlobalNamespace::OVRPlugin::BatteryStatus GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemBatteryStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemBatteryStatus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetSystemBatteryStatus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::BatteryStatus, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetSystemBatteryLevel
float GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemBatteryLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemBatteryLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetSystemBatteryLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetSystemBatteryTemperature
float GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemBatteryTemperature() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemBatteryTemperature");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetSystemBatteryTemperature", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0._ovrp_GetSystemProductName
System::IntPtr GlobalNamespace::OVRPlugin::OVRP_1_1_0::_ovrp_GetSystemProductName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::_ovrp_GetSystemProductName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "_ovrp_GetSystemProductName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetSystemProductName
::Il2CppString* GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemProductName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetSystemProductName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetSystemProductName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_ShowSystemUI
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_ShowSystemUI(GlobalNamespace::OVRPlugin::PlatformUI ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_ShowSystemUI");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_ShowSystemUI", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ui)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ui);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetAppMonoscopic
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAppMonoscopic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAppMonoscopic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetAppMonoscopic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_SetAppMonoscopic
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetAppMonoscopic(GlobalNamespace::OVRPlugin::Bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetAppMonoscopic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_SetAppMonoscopic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetAppHasVrFocus
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAppHasVrFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAppHasVrFocus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetAppHasVrFocus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetAppShouldQuit
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAppShouldQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAppShouldQuit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetAppShouldQuit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetAppShouldRecenter
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAppShouldRecenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAppShouldRecenter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetAppShouldRecenter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0._ovrp_GetAppLatencyTimings
System::IntPtr GlobalNamespace::OVRPlugin::OVRP_1_1_0::_ovrp_GetAppLatencyTimings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::_ovrp_GetAppLatencyTimings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "_ovrp_GetAppLatencyTimings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetAppLatencyTimings
::Il2CppString* GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAppLatencyTimings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetAppLatencyTimings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetAppLatencyTimings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetUserPresent
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetUserPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetUserPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetUserPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetUserIPD
float GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetUserIPD() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetUserIPD");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetUserIPD", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_SetUserIPD
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetUserIPD(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetUserIPD");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_SetUserIPD", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetUserEyeDepth
float GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetUserEyeDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetUserEyeDepth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetUserEyeDepth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_SetUserEyeDepth
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetUserEyeDepth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetUserEyeDepth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_SetUserEyeDepth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_GetUserEyeHeight
float GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetUserEyeHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_GetUserEyeHeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_GetUserEyeHeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0.ovrp_SetUserEyeHeight
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetUserEyeHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::ovrp_SetUserEyeHeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", "ovrp_SetUserEyeHeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_1_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_1_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_1_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_1_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_2_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_2_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_2_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_2_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_2_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_2_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_2_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_2_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_2_0.ovrp_SetSystemVSyncCount
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_2_0::ovrp_SetSystemVSyncCount(int vsyncCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_2_0::ovrp_SetSystemVSyncCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_2_0", "ovrp_SetSystemVSyncCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(vsyncCount)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, vsyncCount);
}
// Autogenerated method: OVRPlugin/OVRP_1_2_0.ovrpi_SetTrackingCalibratedOrigin
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_2_0::ovrpi_SetTrackingCalibratedOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_2_0::ovrpi_SetTrackingCalibratedOrigin");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_2_0", "ovrpi_SetTrackingCalibratedOrigin", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_2_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_2_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_2_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_2_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_3_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_3_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_3_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_3_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_3_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_3_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_3_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_3_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_3_0.ovrp_GetEyeOcclusionMeshEnabled
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_3_0::ovrp_GetEyeOcclusionMeshEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_3_0::ovrp_GetEyeOcclusionMeshEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_3_0", "ovrp_GetEyeOcclusionMeshEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_3_0.ovrp_SetEyeOcclusionMeshEnabled
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_3_0::ovrp_SetEyeOcclusionMeshEnabled(GlobalNamespace::OVRPlugin::Bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_3_0::ovrp_SetEyeOcclusionMeshEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_3_0", "ovrp_SetEyeOcclusionMeshEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_3_0.ovrp_GetSystemHeadphonesPresent
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_3_0::ovrp_GetSystemHeadphonesPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_3_0::ovrp_GetSystemHeadphonesPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_3_0", "ovrp_GetSystemHeadphonesPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_3_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_3_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_3_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_3_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_5_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_5_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/SystemRegion
#include "GlobalNamespace/OVRPlugin_SystemRegion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_5_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_5_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_5_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_5_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_5_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_5_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_5_0.ovrp_GetSystemRegion
GlobalNamespace::OVRPlugin::SystemRegion GlobalNamespace::OVRPlugin::OVRP_1_5_0::ovrp_GetSystemRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_5_0::ovrp_GetSystemRegion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_5_0", "ovrp_GetSystemRegion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::SystemRegion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_5_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_5_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_5_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_5_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_6_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_6_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/HapticsDesc
#include "GlobalNamespace/OVRPlugin_HapticsDesc.hpp"
// Including type: OVRPlugin/HapticsState
#include "GlobalNamespace/OVRPlugin_HapticsState.hpp"
// Including type: OVRPlugin/HapticsBuffer
#include "GlobalNamespace/OVRPlugin_HapticsBuffer.hpp"
// Including type: OVRPlugin/Vector3f
#include "GlobalNamespace/OVRPlugin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_6_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_6_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_6_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_6_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_6_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_6_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_6_0.ovrp_GetTrackingIPDEnabled
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetTrackingIPDEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetTrackingIPDEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_6_0", "ovrp_GetTrackingIPDEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_6_0.ovrp_SetTrackingIPDEnabled
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_SetTrackingIPDEnabled(GlobalNamespace::OVRPlugin::Bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_SetTrackingIPDEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_6_0", "ovrp_SetTrackingIPDEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_6_0.ovrp_GetControllerHapticsDesc
GlobalNamespace::OVRPlugin::HapticsDesc GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetControllerHapticsDesc(uint controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetControllerHapticsDesc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_6_0", "ovrp_GetControllerHapticsDesc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::HapticsDesc, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRPlugin/OVRP_1_6_0.ovrp_GetControllerHapticsState
GlobalNamespace::OVRPlugin::HapticsState GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetControllerHapticsState(uint controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetControllerHapticsState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_6_0", "ovrp_GetControllerHapticsState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::HapticsState, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRPlugin/OVRP_1_6_0.ovrp_SetControllerHaptics
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_SetControllerHaptics(uint controllerMask, GlobalNamespace::OVRPlugin::HapticsBuffer hapticsBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_SetControllerHaptics");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_6_0", "ovrp_SetControllerHaptics", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerMask, hapticsBuffer)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controllerMask, hapticsBuffer);
}
// Autogenerated method: OVRPlugin/OVRP_1_6_0.ovrp_SetOverlayQuad3
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_SetOverlayQuad3(uint flags, System::IntPtr textureLeft, System::IntPtr textureRight, System::IntPtr device, GlobalNamespace::OVRPlugin::Posef pose, GlobalNamespace::OVRPlugin::Vector3f scale, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_SetOverlayQuad3");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_6_0", "ovrp_SetOverlayQuad3", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags, textureLeft, textureRight, device, pose, scale, layerIndex)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, flags, textureLeft, textureRight, device, pose, scale, layerIndex);
}
// Autogenerated method: OVRPlugin/OVRP_1_6_0.ovrp_GetEyeRecommendedResolutionScale
float GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetEyeRecommendedResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetEyeRecommendedResolutionScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_6_0", "ovrp_GetEyeRecommendedResolutionScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_6_0.ovrp_GetAppCpuStartToGpuEndTime
float GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetAppCpuStartToGpuEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetAppCpuStartToGpuEndTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_6_0", "ovrp_GetAppCpuStartToGpuEndTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_6_0.ovrp_GetSystemRecommendedMSAALevel
int GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetSystemRecommendedMSAALevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_6_0::ovrp_GetSystemRecommendedMSAALevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_6_0", "ovrp_GetSystemRecommendedMSAALevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_6_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_6_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_6_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_6_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_7_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_7_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_7_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_7_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_7_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_7_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_7_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_7_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_7_0.ovrp_GetAppChromaticCorrection
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_7_0::ovrp_GetAppChromaticCorrection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_7_0::ovrp_GetAppChromaticCorrection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_7_0", "ovrp_GetAppChromaticCorrection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_7_0.ovrp_SetAppChromaticCorrection
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_7_0::ovrp_SetAppChromaticCorrection(GlobalNamespace::OVRPlugin::Bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_7_0::ovrp_SetAppChromaticCorrection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_7_0", "ovrp_SetAppChromaticCorrection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_7_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_7_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_7_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_7_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_8_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_8_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/BoundaryTestResult
#include "GlobalNamespace/OVRPlugin_BoundaryTestResult.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/BoundaryType
#include "GlobalNamespace/OVRPlugin_BoundaryType.hpp"
// Including type: OVRPlugin/Vector3f
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/BoundaryGeometry
#include "GlobalNamespace/OVRPlugin_BoundaryGeometry.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_8_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_8_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_8_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_8_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_8_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_8_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetBoundaryConfigured
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetBoundaryConfigured() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetBoundaryConfigured");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetBoundaryConfigured", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_TestBoundaryNode
GlobalNamespace::OVRPlugin::BoundaryTestResult GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_TestBoundaryNode(GlobalNamespace::OVRPlugin::Node nodeId, GlobalNamespace::OVRPlugin::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_TestBoundaryNode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_TestBoundaryNode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeId, boundaryType)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::BoundaryTestResult, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeId, boundaryType);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_TestBoundaryPoint
GlobalNamespace::OVRPlugin::BoundaryTestResult GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_TestBoundaryPoint(GlobalNamespace::OVRPlugin::Vector3f point, GlobalNamespace::OVRPlugin::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_TestBoundaryPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_TestBoundaryPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(point, boundaryType)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::BoundaryTestResult, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, point, boundaryType);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetBoundaryGeometry
GlobalNamespace::OVRPlugin::BoundaryGeometry GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetBoundaryGeometry(GlobalNamespace::OVRPlugin::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetBoundaryGeometry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetBoundaryGeometry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boundaryType)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::BoundaryGeometry, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boundaryType);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetBoundaryDimensions
GlobalNamespace::OVRPlugin::Vector3f GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetBoundaryDimensions(GlobalNamespace::OVRPlugin::BoundaryType boundaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetBoundaryDimensions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetBoundaryDimensions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boundaryType)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Vector3f, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boundaryType);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetBoundaryVisible
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetBoundaryVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetBoundaryVisible");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetBoundaryVisible", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_SetBoundaryVisible
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_SetBoundaryVisible(GlobalNamespace::OVRPlugin::Bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_SetBoundaryVisible");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_SetBoundaryVisible", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_Update2
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_Update2(int stateId, int frameIndex, double predictionSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_Update2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_Update2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateId, frameIndex, predictionSeconds)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stateId, frameIndex, predictionSeconds);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetNodePose2
GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetNodePose2(int stateId, GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetNodePose2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetNodePose2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateId, nodeId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stateId, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetNodeVelocity2
GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetNodeVelocity2(int stateId, GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetNodeVelocity2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetNodeVelocity2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateId, nodeId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stateId, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0.ovrp_GetNodeAcceleration2
GlobalNamespace::OVRPlugin::Posef GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetNodeAcceleration2(int stateId, GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_8_0::ovrp_GetNodeAcceleration2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", "ovrp_GetNodeAcceleration2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateId, nodeId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Posef, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stateId, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_1_8_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_8_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_8_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_8_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_9_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_9_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/SystemHeadset
#include "GlobalNamespace/OVRPlugin_SystemHeadset.hpp"
// Including type: OVRPlugin/Controller
#include "GlobalNamespace/OVRPlugin_Controller.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/BoundaryType
#include "GlobalNamespace/OVRPlugin_BoundaryType.hpp"
// Including type: OVRPlugin/AppPerfStats
#include "GlobalNamespace/OVRPlugin_AppPerfStats.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_9_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_9_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_9_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_9_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_9_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_9_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_9_0.ovrp_GetSystemHeadsetType
GlobalNamespace::OVRPlugin::SystemHeadset GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_GetSystemHeadsetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_GetSystemHeadsetType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_9_0", "ovrp_GetSystemHeadsetType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::SystemHeadset, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_9_0.ovrp_GetActiveController
GlobalNamespace::OVRPlugin::Controller GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_GetActiveController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_GetActiveController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_9_0", "ovrp_GetActiveController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Controller, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_9_0.ovrp_GetConnectedControllers
GlobalNamespace::OVRPlugin::Controller GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_GetConnectedControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_GetConnectedControllers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_9_0", "ovrp_GetConnectedControllers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Controller, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_9_0.ovrp_GetBoundaryGeometry2
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_GetBoundaryGeometry2(GlobalNamespace::OVRPlugin::BoundaryType boundaryType, System::IntPtr points, int& pointsCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_GetBoundaryGeometry2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_9_0", "ovrp_GetBoundaryGeometry2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(boundaryType, points, pointsCount)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, boundaryType, points, pointsCount);
}
// Autogenerated method: OVRPlugin/OVRP_1_9_0.ovrp_GetAppPerfStats
GlobalNamespace::OVRPlugin::AppPerfStats GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_GetAppPerfStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_GetAppPerfStats");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_9_0", "ovrp_GetAppPerfStats", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::AppPerfStats, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_9_0.ovrp_ResetAppPerfStats
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_ResetAppPerfStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_9_0::ovrp_ResetAppPerfStats");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_9_0", "ovrp_ResetAppPerfStats", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_9_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_9_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_9_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_9_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_10_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_10_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_10_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_10_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_10_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_10_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_10_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_10_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_10_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_10_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_10_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_10_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_11_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_11_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/EyeTextureFormat
#include "GlobalNamespace/OVRPlugin_EyeTextureFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_11_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_11_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_11_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_11_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_11_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_11_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_11_0.ovrp_SetDesiredEyeTextureFormat
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_11_0::ovrp_SetDesiredEyeTextureFormat(GlobalNamespace::OVRPlugin::EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_11_0::ovrp_SetDesiredEyeTextureFormat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_11_0", "ovrp_SetDesiredEyeTextureFormat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_11_0.ovrp_GetDesiredEyeTextureFormat
GlobalNamespace::OVRPlugin::EyeTextureFormat GlobalNamespace::OVRPlugin::OVRP_1_11_0::ovrp_GetDesiredEyeTextureFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_11_0::ovrp_GetDesiredEyeTextureFormat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_11_0", "ovrp_GetDesiredEyeTextureFormat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::EyeTextureFormat, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_11_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_11_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_11_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_11_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_12_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_12_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/PoseStatef
#include "GlobalNamespace/OVRPlugin_PoseStatef.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/ControllerState2
#include "GlobalNamespace/OVRPlugin_ControllerState2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_12_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_12_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_12_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_12_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_12_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_12_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_12_0.ovrp_GetAppFramerate
float GlobalNamespace::OVRPlugin::OVRP_1_12_0::ovrp_GetAppFramerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_12_0::ovrp_GetAppFramerate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_12_0", "ovrp_GetAppFramerate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_12_0.ovrp_GetNodePoseState
GlobalNamespace::OVRPlugin::PoseStatef GlobalNamespace::OVRPlugin::OVRP_1_12_0::ovrp_GetNodePoseState(GlobalNamespace::OVRPlugin::Step stepId, GlobalNamespace::OVRPlugin::Node nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_12_0::ovrp_GetNodePoseState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_12_0", "ovrp_GetNodePoseState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stepId, nodeId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::PoseStatef, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stepId, nodeId);
}
// Autogenerated method: OVRPlugin/OVRP_1_12_0.ovrp_GetControllerState2
GlobalNamespace::OVRPlugin::ControllerState2 GlobalNamespace::OVRPlugin::OVRP_1_12_0::ovrp_GetControllerState2(uint controllerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_12_0::ovrp_GetControllerState2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_12_0", "ovrp_GetControllerState2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerMask)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::ControllerState2, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controllerMask);
}
// Autogenerated method: OVRPlugin/OVRP_1_12_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_12_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_12_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_12_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/OVRP_1_15_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_15_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/CameraIntrinsics
#include "GlobalNamespace/OVRPlugin_CameraIntrinsics.hpp"
// Including type: OVRPlugin/CameraExtrinsics
#include "GlobalNamespace/OVRPlugin_CameraExtrinsics.hpp"
// Including type: OVRPlugin/OverlayShape
#include "GlobalNamespace/OVRPlugin_OverlayShape.hpp"
// Including type: OVRPlugin/LayerLayout
#include "GlobalNamespace/OVRPlugin_LayerLayout.hpp"
// Including type: OVRPlugin/Sizei
#include "GlobalNamespace/OVRPlugin_Sizei.hpp"
// Including type: OVRPlugin/EyeTextureFormat
#include "GlobalNamespace/OVRPlugin_EyeTextureFormat.hpp"
// Including type: OVRPlugin/LayerDesc
#include "GlobalNamespace/OVRPlugin_LayerDesc.hpp"
// Including type: OVRPlugin/Eye
#include "GlobalNamespace/OVRPlugin_Eye.hpp"
// Including type: OVRPlugin/Vector3f
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/Frustumf2
#include "GlobalNamespace/OVRPlugin_Frustumf2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_15_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_15_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_15_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_15_0", "version", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 OVRP_EXTERNAL_CAMERA_NAME_SIZE
int GlobalNamespace::OVRPlugin::OVRP_1_15_0::_get_OVRP_EXTERNAL_CAMERA_NAME_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::_get_OVRP_EXTERNAL_CAMERA_NAME_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRPlugin/OVRP_1_15_0", "OVRP_EXTERNAL_CAMERA_NAME_SIZE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OVRP_EXTERNAL_CAMERA_NAME_SIZE
void GlobalNamespace::OVRPlugin::OVRP_1_15_0::_set_OVRP_EXTERNAL_CAMERA_NAME_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::_set_OVRP_EXTERNAL_CAMERA_NAME_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_15_0", "OVRP_EXTERNAL_CAMERA_NAME_SIZE", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_InitializeMixedReality
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_InitializeMixedReality() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_InitializeMixedReality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_InitializeMixedReality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_ShutdownMixedReality
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_ShutdownMixedReality() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_ShutdownMixedReality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_ShutdownMixedReality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetMixedRealityInitialized
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetMixedRealityInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetMixedRealityInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetMixedRealityInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_UpdateExternalCamera
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_UpdateExternalCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_UpdateExternalCamera");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_UpdateExternalCamera", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetExternalCameraCount
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraCount(int& cameraCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetExternalCameraCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraCount)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraCount);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetExternalCameraName
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraName(int cameraId, ::Array<::Il2CppChar>* cameraName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetExternalCameraName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraId, cameraName)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraId, cameraName);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetExternalCameraIntrinsics
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraIntrinsics(int cameraId, GlobalNamespace::OVRPlugin::CameraIntrinsics& cameraIntrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraIntrinsics");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetExternalCameraIntrinsics", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraId, cameraIntrinsics)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraId, cameraIntrinsics);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetExternalCameraExtrinsics
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraExtrinsics(int cameraId, GlobalNamespace::OVRPlugin::CameraExtrinsics& cameraExtrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetExternalCameraExtrinsics");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetExternalCameraExtrinsics", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraId, cameraExtrinsics)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraId, cameraExtrinsics);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_CalculateLayerDesc
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_CalculateLayerDesc(GlobalNamespace::OVRPlugin::OverlayShape shape, GlobalNamespace::OVRPlugin::LayerLayout layout, GlobalNamespace::OVRPlugin::Sizei& textureSize, int mipLevels, int sampleCount, GlobalNamespace::OVRPlugin::EyeTextureFormat format, int layerFlags, GlobalNamespace::OVRPlugin::LayerDesc& layerDesc) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_CalculateLayerDesc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_CalculateLayerDesc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(shape, layout, textureSize, mipLevels, sampleCount, format, layerFlags, layerDesc)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, shape, layout, textureSize, mipLevels, sampleCount, format, layerFlags, layerDesc);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_EnqueueSetupLayer
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_EnqueueSetupLayer(GlobalNamespace::OVRPlugin::LayerDesc& desc, System::IntPtr layerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_EnqueueSetupLayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_EnqueueSetupLayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(desc, layerId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, desc, layerId);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_EnqueueDestroyLayer
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_EnqueueDestroyLayer(System::IntPtr layerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_EnqueueDestroyLayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_EnqueueDestroyLayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(layerId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, layerId);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetLayerTextureStageCount
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetLayerTextureStageCount(int layerId, int& layerTextureStageCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetLayerTextureStageCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetLayerTextureStageCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(layerId, layerTextureStageCount)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, layerId, layerTextureStageCount);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetLayerTexturePtr
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetLayerTexturePtr(int layerId, int stage, GlobalNamespace::OVRPlugin::Eye eyeId, System::IntPtr& textureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetLayerTexturePtr");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetLayerTexturePtr", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(layerId, stage, eyeId, textureHandle)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, layerId, stage, eyeId, textureHandle);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_EnqueueSubmitLayer
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_EnqueueSubmitLayer(uint flags, System::IntPtr textureLeft, System::IntPtr textureRight, int layerId, int frameIndex, GlobalNamespace::OVRPlugin::Posef& pose, GlobalNamespace::OVRPlugin::Vector3f& scale, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_EnqueueSubmitLayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_EnqueueSubmitLayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags, textureLeft, textureRight, layerId, frameIndex, pose, scale, layerIndex)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, flags, textureLeft, textureRight, layerId, frameIndex, pose, scale, layerIndex);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetNodeFrustum2
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetNodeFrustum2(GlobalNamespace::OVRPlugin::Node nodeId, GlobalNamespace::OVRPlugin::Frustumf2& nodeFrustum) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetNodeFrustum2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetNodeFrustum2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeId, nodeFrustum)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeId, nodeFrustum);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0.ovrp_GetEyeTextureArrayEnabled
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetEyeTextureArrayEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::ovrp_GetEyeTextureArrayEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", "ovrp_GetEyeTextureArrayEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_15_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_15_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_15_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_15_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_16_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_16_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/CameraDevice
#include "GlobalNamespace/OVRPlugin_CameraDevice.hpp"
// Including type: OVRPlugin/Sizei
#include "GlobalNamespace/OVRPlugin_Sizei.hpp"
// Including type: OVRPlugin/ControllerState4
#include "GlobalNamespace/OVRPlugin_ControllerState4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_16_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_16_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_16_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_16_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_16_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_16_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0.ovrp_UpdateCameraDevices
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_UpdateCameraDevices() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_UpdateCameraDevices");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", "ovrp_UpdateCameraDevices", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0.ovrp_IsCameraDeviceAvailable
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_IsCameraDeviceAvailable(GlobalNamespace::OVRPlugin::CameraDevice cameraDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_IsCameraDeviceAvailable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", "ovrp_IsCameraDeviceAvailable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraDevice)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraDevice);
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0.ovrp_SetCameraDevicePreferredColorFrameSize
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_SetCameraDevicePreferredColorFrameSize(GlobalNamespace::OVRPlugin::CameraDevice cameraDevice, GlobalNamespace::OVRPlugin::Sizei preferredColorFrameSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_SetCameraDevicePreferredColorFrameSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", "ovrp_SetCameraDevicePreferredColorFrameSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraDevice, preferredColorFrameSize)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraDevice, preferredColorFrameSize);
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0.ovrp_OpenCameraDevice
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_OpenCameraDevice(GlobalNamespace::OVRPlugin::CameraDevice cameraDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_OpenCameraDevice");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", "ovrp_OpenCameraDevice", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraDevice)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraDevice);
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0.ovrp_CloseCameraDevice
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_CloseCameraDevice(GlobalNamespace::OVRPlugin::CameraDevice cameraDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_CloseCameraDevice");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", "ovrp_CloseCameraDevice", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraDevice)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraDevice);
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0.ovrp_HasCameraDeviceOpened
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_HasCameraDeviceOpened(GlobalNamespace::OVRPlugin::CameraDevice cameraDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_HasCameraDeviceOpened");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", "ovrp_HasCameraDeviceOpened", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraDevice)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraDevice);
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0.ovrp_IsCameraDeviceColorFrameAvailable
GlobalNamespace::OVRPlugin::Bool GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_IsCameraDeviceColorFrameAvailable(GlobalNamespace::OVRPlugin::CameraDevice cameraDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_IsCameraDeviceColorFrameAvailable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", "ovrp_IsCameraDeviceColorFrameAvailable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraDevice)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraDevice);
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0.ovrp_GetCameraDeviceColorFrameSize
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_GetCameraDeviceColorFrameSize(GlobalNamespace::OVRPlugin::CameraDevice cameraDevice, GlobalNamespace::OVRPlugin::Sizei& colorFrameSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_GetCameraDeviceColorFrameSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", "ovrp_GetCameraDeviceColorFrameSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraDevice, colorFrameSize)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraDevice, colorFrameSize);
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0.ovrp_GetCameraDeviceColorFrameBgraPixels
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_GetCameraDeviceColorFrameBgraPixels(GlobalNamespace::OVRPlugin::CameraDevice cameraDevice, System::IntPtr& colorFrameBgraPixels, int& colorFrameRowPitch) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_GetCameraDeviceColorFrameBgraPixels");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", "ovrp_GetCameraDeviceColorFrameBgraPixels", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraDevice, colorFrameBgraPixels, colorFrameRowPitch)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraDevice, colorFrameBgraPixels, colorFrameRowPitch);
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0.ovrp_GetControllerState4
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_GetControllerState4(uint controllerMask, GlobalNamespace::OVRPlugin::ControllerState4& controllerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_16_0::ovrp_GetControllerState4");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", "ovrp_GetControllerState4", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerMask, controllerState)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controllerMask, controllerState);
}
// Autogenerated method: OVRPlugin/OVRP_1_16_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_16_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_16_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_16_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_17_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_17_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_17_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_17_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_17_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_17_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_17_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_17_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_17_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_17_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_17_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_17_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_18_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_18_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_18_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_18_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_18_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_18_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_18_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_18_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_18_0.ovrp_SetHandNodePoseStateLatency
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_18_0::ovrp_SetHandNodePoseStateLatency(double latencyInSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_18_0::ovrp_SetHandNodePoseStateLatency");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_18_0", "ovrp_SetHandNodePoseStateLatency", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(latencyInSeconds)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, latencyInSeconds);
}
// Autogenerated method: OVRPlugin/OVRP_1_18_0.ovrp_GetHandNodePoseStateLatency
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_18_0::ovrp_GetHandNodePoseStateLatency(double& latencyInSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_18_0::ovrp_GetHandNodePoseStateLatency");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_18_0", "ovrp_GetHandNodePoseStateLatency", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(latencyInSeconds)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, latencyInSeconds);
}
// Autogenerated method: OVRPlugin/OVRP_1_18_0.ovrp_GetAppHasInputFocus
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_18_0::ovrp_GetAppHasInputFocus(GlobalNamespace::OVRPlugin::Bool& appHasInputFocus) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_18_0::ovrp_GetAppHasInputFocus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_18_0", "ovrp_GetAppHasInputFocus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(appHasInputFocus)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appHasInputFocus);
}
// Autogenerated method: OVRPlugin/OVRP_1_18_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_18_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_18_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_18_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_19_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_19_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_19_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_19_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_19_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_19_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_19_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_19_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_19_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_19_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_19_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_19_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_21_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_21_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/FixedFoveatedRenderingLevel
#include "GlobalNamespace/OVRPlugin_FixedFoveatedRenderingLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_21_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_21_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_21_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_21_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_21_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_21_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetTiledMultiResSupported
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetTiledMultiResSupported(GlobalNamespace::OVRPlugin::Bool& foveationSupported) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetTiledMultiResSupported");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetTiledMultiResSupported", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(foveationSupported)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, foveationSupported);
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetTiledMultiResLevel
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetTiledMultiResLevel(GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel& level) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetTiledMultiResLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetTiledMultiResLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(level)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, level);
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_SetTiledMultiResLevel
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_SetTiledMultiResLevel(GlobalNamespace::OVRPlugin::FixedFoveatedRenderingLevel level) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_SetTiledMultiResLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_SetTiledMultiResLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(level)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, level);
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetGPUUtilSupported
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetGPUUtilSupported(GlobalNamespace::OVRPlugin::Bool& gpuUtilSupported) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetGPUUtilSupported");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetGPUUtilSupported", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gpuUtilSupported)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gpuUtilSupported);
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetGPUUtilLevel
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetGPUUtilLevel(float& gpuUtil) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetGPUUtilLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetGPUUtilLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gpuUtil)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gpuUtil);
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetSystemDisplayFrequency2
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetSystemDisplayFrequency2(float& systemDisplayFrequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetSystemDisplayFrequency2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetSystemDisplayFrequency2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(systemDisplayFrequency)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, systemDisplayFrequency);
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetSystemDisplayAvailableFrequencies
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetSystemDisplayAvailableFrequencies(System::IntPtr systemDisplayAvailableFrequencies, int& numFrequencies) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetSystemDisplayAvailableFrequencies");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetSystemDisplayAvailableFrequencies", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(systemDisplayAvailableFrequencies, numFrequencies)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, systemDisplayAvailableFrequencies, numFrequencies);
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_SetSystemDisplayFrequency
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_SetSystemDisplayFrequency(float requestedFrequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_SetSystemDisplayFrequency");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_SetSystemDisplayFrequency", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(requestedFrequency)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, requestedFrequency);
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0.ovrp_GetAppAsymmetricFov
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetAppAsymmetricFov(GlobalNamespace::OVRPlugin::Bool& useAsymmetricFov) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_21_0::ovrp_GetAppAsymmetricFov");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", "ovrp_GetAppAsymmetricFov", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(useAsymmetricFov)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, useAsymmetricFov);
}
// Autogenerated method: OVRPlugin/OVRP_1_21_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_21_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_21_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_21_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/OVRP_1_28_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_28_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Handedness
#include "GlobalNamespace/OVRPlugin_Handedness.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/LayerDesc
#include "GlobalNamespace/OVRPlugin_LayerDesc.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_28_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_28_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_28_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_28_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_28_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_28_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_28_0.ovrp_GetDominantHand
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_GetDominantHand(GlobalNamespace::OVRPlugin::Handedness& dominantHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_GetDominantHand");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_28_0", "ovrp_GetDominantHand", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dominantHand)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dominantHand);
}
// Autogenerated method: OVRPlugin/OVRP_1_28_0.ovrp_GetReorientHMDOnControllerRecenter
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_GetReorientHMDOnControllerRecenter(GlobalNamespace::OVRPlugin::Bool& recenter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_GetReorientHMDOnControllerRecenter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_28_0", "ovrp_GetReorientHMDOnControllerRecenter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(recenter)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, recenter);
}
// Autogenerated method: OVRPlugin/OVRP_1_28_0.ovrp_SetReorientHMDOnControllerRecenter
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_SetReorientHMDOnControllerRecenter(GlobalNamespace::OVRPlugin::Bool recenter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_SetReorientHMDOnControllerRecenter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_28_0", "ovrp_SetReorientHMDOnControllerRecenter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(recenter)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, recenter);
}
// Autogenerated method: OVRPlugin/OVRP_1_28_0.ovrp_SendEvent
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_SendEvent(::Il2CppString* name, ::Il2CppString* param) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_SendEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_28_0", "ovrp_SendEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, param)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, param);
}
// Autogenerated method: OVRPlugin/OVRP_1_28_0.ovrp_EnqueueSetupLayer2
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_EnqueueSetupLayer2(GlobalNamespace::OVRPlugin::LayerDesc& desc, int compositionDepth, System::IntPtr layerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_28_0::ovrp_EnqueueSetupLayer2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_28_0", "ovrp_EnqueueSetupLayer2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(desc, compositionDepth, layerId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, desc, compositionDepth, layerId);
}
// Autogenerated method: OVRPlugin/OVRP_1_28_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_28_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_28_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_28_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_29_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_29_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Vector3f
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
// Including type: OVRPlugin/PoseStatef
#include "GlobalNamespace/OVRPlugin_PoseStatef.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_29_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_29_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_29_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_29_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_29_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_29_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_29_0.ovrp_GetLayerAndroidSurfaceObject
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_GetLayerAndroidSurfaceObject(int layerId, System::IntPtr& surfaceObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_GetLayerAndroidSurfaceObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_29_0", "ovrp_GetLayerAndroidSurfaceObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(layerId, surfaceObject)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, layerId, surfaceObject);
}
// Autogenerated method: OVRPlugin/OVRP_1_29_0.ovrp_SetHeadPoseModifier
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_SetHeadPoseModifier(GlobalNamespace::OVRPlugin::Quatf& relativeRotation, GlobalNamespace::OVRPlugin::Vector3f& relativeTranslation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_SetHeadPoseModifier");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_29_0", "ovrp_SetHeadPoseModifier", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(relativeRotation, relativeTranslation)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, relativeRotation, relativeTranslation);
}
// Autogenerated method: OVRPlugin/OVRP_1_29_0.ovrp_GetHeadPoseModifier
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_GetHeadPoseModifier(GlobalNamespace::OVRPlugin::Quatf& relativeRotation, GlobalNamespace::OVRPlugin::Vector3f& relativeTranslation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_GetHeadPoseModifier");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_29_0", "ovrp_GetHeadPoseModifier", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(relativeRotation, relativeTranslation)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, relativeRotation, relativeTranslation);
}
// Autogenerated method: OVRPlugin/OVRP_1_29_0.ovrp_GetNodePoseStateRaw
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_GetNodePoseStateRaw(GlobalNamespace::OVRPlugin::Step stepId, int frameIndex, GlobalNamespace::OVRPlugin::Node nodeId, GlobalNamespace::OVRPlugin::PoseStatef& nodePoseState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_29_0::ovrp_GetNodePoseStateRaw");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_29_0", "ovrp_GetNodePoseStateRaw", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stepId, frameIndex, nodeId, nodePoseState)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stepId, frameIndex, nodeId, nodePoseState);
}
// Autogenerated method: OVRPlugin/OVRP_1_29_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_29_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_29_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_29_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/OVRP_1_30_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_30_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/PerfMetrics
#include "GlobalNamespace/OVRPlugin_PerfMetrics.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_30_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_30_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_30_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_30_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_30_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_30_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0.ovrp_GetCurrentTrackingTransformPose
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetCurrentTrackingTransformPose(GlobalNamespace::OVRPlugin::Posef& trackingTransformPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetCurrentTrackingTransformPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", "ovrp_GetCurrentTrackingTransformPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(trackingTransformPose)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, trackingTransformPose);
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0.ovrp_GetTrackingTransformRawPose
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetTrackingTransformRawPose(GlobalNamespace::OVRPlugin::Posef& trackingTransformRawPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetTrackingTransformRawPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", "ovrp_GetTrackingTransformRawPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(trackingTransformRawPose)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, trackingTransformRawPose);
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0.ovrp_SendEvent2
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_SendEvent2(::Il2CppString* name, ::Il2CppString* param, ::Il2CppString* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_SendEvent2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", "ovrp_SendEvent2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, param, source)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, param, source);
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0.ovrp_IsPerfMetricsSupported
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_IsPerfMetricsSupported(GlobalNamespace::OVRPlugin::PerfMetrics perfMetrics, GlobalNamespace::OVRPlugin::Bool& isSupported) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_IsPerfMetricsSupported");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", "ovrp_IsPerfMetricsSupported", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(perfMetrics, isSupported)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, perfMetrics, isSupported);
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0.ovrp_GetPerfMetricsFloat
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetPerfMetricsFloat(GlobalNamespace::OVRPlugin::PerfMetrics perfMetrics, float& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetPerfMetricsFloat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", "ovrp_GetPerfMetricsFloat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(perfMetrics, value)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, perfMetrics, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0.ovrp_GetPerfMetricsInt
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetPerfMetricsInt(GlobalNamespace::OVRPlugin::PerfMetrics perfMetrics, int& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_30_0::ovrp_GetPerfMetricsInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", "ovrp_GetPerfMetricsInt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(perfMetrics, value)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, perfMetrics, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_30_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_30_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_30_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_30_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_31_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_31_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_31_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_31_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_31_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_31_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_31_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_31_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_31_0.ovrp_GetTimeInSeconds
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_31_0::ovrp_GetTimeInSeconds(double& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_31_0::ovrp_GetTimeInSeconds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_31_0", "ovrp_GetTimeInSeconds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: OVRPlugin/OVRP_1_31_0.ovrp_SetColorScaleAndOffset
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_31_0::ovrp_SetColorScaleAndOffset(UnityEngine::Vector4 colorScale, UnityEngine::Vector4 colorOffset, GlobalNamespace::OVRPlugin::Bool applyToAllLayers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_31_0::ovrp_SetColorScaleAndOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_31_0", "ovrp_SetColorScaleAndOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(colorScale, colorOffset, applyToAllLayers)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, colorScale, colorOffset, applyToAllLayers);
}
// Autogenerated method: OVRPlugin/OVRP_1_31_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_31_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_31_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_31_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/OVRP_1_32_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_32_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_32_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_32_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_32_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_32_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_32_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_32_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_32_0.ovrp_AddCustomMetadata
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_32_0::ovrp_AddCustomMetadata(::Il2CppString* name, ::Il2CppString* param) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_32_0::ovrp_AddCustomMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_32_0", "ovrp_AddCustomMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, param)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, param);
}
// Autogenerated method: OVRPlugin/OVRP_1_32_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_32_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_32_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_32_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_34_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_34_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Vector3f
#include "GlobalNamespace/OVRPlugin.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/TextureRectMatrixf
#include "GlobalNamespace/OVRPlugin_TextureRectMatrixf.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_34_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_34_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_34_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_34_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_34_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_34_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_34_0.ovrp_EnqueueSubmitLayer2
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_34_0::ovrp_EnqueueSubmitLayer2(uint flags, System::IntPtr textureLeft, System::IntPtr textureRight, int layerId, int frameIndex, GlobalNamespace::OVRPlugin::Posef& pose, GlobalNamespace::OVRPlugin::Vector3f& scale, int layerIndex, GlobalNamespace::OVRPlugin::Bool overrideTextureRectMatrix, GlobalNamespace::OVRPlugin::TextureRectMatrixf& textureRectMatrix, GlobalNamespace::OVRPlugin::Bool overridePerLayerColorScaleAndOffset, UnityEngine::Vector4& colorScale, UnityEngine::Vector4& colorOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_34_0::ovrp_EnqueueSubmitLayer2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_34_0", "ovrp_EnqueueSubmitLayer2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags, textureLeft, textureRight, layerId, frameIndex, pose, scale, layerIndex, overrideTextureRectMatrix, textureRectMatrix, overridePerLayerColorScaleAndOffset, colorScale, colorOffset)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, flags, textureLeft, textureRight, layerId, frameIndex, pose, scale, layerIndex, overrideTextureRectMatrix, textureRectMatrix, overridePerLayerColorScaleAndOffset, colorScale, colorOffset);
}
// Autogenerated method: OVRPlugin/OVRP_1_34_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_34_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_34_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_34_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_35_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_35_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_35_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_35_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_35_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_35_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_35_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_35_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_35_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_35_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_35_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_35_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_36_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_36_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_36_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_36_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_36_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_36_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_36_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_36_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_36_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_36_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_36_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_36_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_37_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_37_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_37_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_37_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_37_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_37_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_37_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_37_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_37_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_37_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_37_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_37_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_38_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_38_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/TrackingOrigin
#include "GlobalNamespace/OVRPlugin_TrackingOrigin.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/Media/MrcActivationMode
#include "GlobalNamespace/OVRPlugin_Media_MrcActivationMode.hpp"
// Including type: OVRPlugin/Media/InputVideoBufferType
#include "GlobalNamespace/OVRPlugin_Media_InputVideoBufferType.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_38_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_38_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_38_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_38_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_GetTrackingTransformRelativePose
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_GetTrackingTransformRelativePose(GlobalNamespace::OVRPlugin::Posef& trackingTransformRelativePose, GlobalNamespace::OVRPlugin::TrackingOrigin trackingOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_GetTrackingTransformRelativePose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_GetTrackingTransformRelativePose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(trackingTransformRelativePose, trackingOrigin)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, trackingTransformRelativePose, trackingOrigin);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_Initialize
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_Shutdown
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_Shutdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_Shutdown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_GetInitialized
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetInitialized(GlobalNamespace::OVRPlugin::Bool& initialized) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_GetInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(initialized)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, initialized);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_Update
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_GetMrcActivationMode
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcActivationMode(GlobalNamespace::OVRPlugin::Media::MrcActivationMode& activationMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcActivationMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_GetMrcActivationMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(activationMode)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, activationMode);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_SetMrcActivationMode
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcActivationMode(GlobalNamespace::OVRPlugin::Media::MrcActivationMode activationMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcActivationMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_SetMrcActivationMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(activationMode)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, activationMode);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_IsMrcEnabled
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_IsMrcEnabled(GlobalNamespace::OVRPlugin::Bool& mrcEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_IsMrcEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_IsMrcEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mrcEnabled)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mrcEnabled);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_IsMrcActivated
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_IsMrcActivated(GlobalNamespace::OVRPlugin::Bool& mrcActivated) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_IsMrcActivated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_IsMrcActivated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mrcActivated)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mrcActivated);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_UseMrcDebugCamera
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_UseMrcDebugCamera(GlobalNamespace::OVRPlugin::Bool& useMrcDebugCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_UseMrcDebugCamera");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_UseMrcDebugCamera", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(useMrcDebugCamera)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, useMrcDebugCamera);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_SetMrcInputVideoBufferType
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcInputVideoBufferType(GlobalNamespace::OVRPlugin::Media::InputVideoBufferType inputVideoBufferType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcInputVideoBufferType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_SetMrcInputVideoBufferType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inputVideoBufferType)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, inputVideoBufferType);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_GetMrcInputVideoBufferType
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcInputVideoBufferType(GlobalNamespace::OVRPlugin::Media::InputVideoBufferType& inputVideoBufferType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcInputVideoBufferType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_GetMrcInputVideoBufferType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inputVideoBufferType)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, inputVideoBufferType);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_SetMrcFrameSize
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcFrameSize(int frameWidth, int frameHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcFrameSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_SetMrcFrameSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(frameWidth, frameHeight)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, frameWidth, frameHeight);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_GetMrcFrameSize
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcFrameSize(int& frameWidth, int& frameHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcFrameSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_GetMrcFrameSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(frameWidth, frameHeight)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, frameWidth, frameHeight);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_SetMrcAudioSampleRate
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcAudioSampleRate(int sampleRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcAudioSampleRate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_SetMrcAudioSampleRate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sampleRate)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sampleRate);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_GetMrcAudioSampleRate
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcAudioSampleRate(int& sampleRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcAudioSampleRate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_GetMrcAudioSampleRate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sampleRate)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sampleRate);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_SetMrcFrameImageFlipped
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcFrameImageFlipped(GlobalNamespace::OVRPlugin::Bool flipped) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SetMrcFrameImageFlipped");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_SetMrcFrameImageFlipped", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flipped)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, flipped);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_GetMrcFrameImageFlipped
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcFrameImageFlipped(GlobalNamespace::OVRPlugin::Bool& flipped) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_GetMrcFrameImageFlipped");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_GetMrcFrameImageFlipped", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flipped)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, flipped);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_EncodeMrcFrame
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_EncodeMrcFrame(System::IntPtr rawBuffer, System::IntPtr audioDataPtr, int audioDataLen, int audioChannels, double timestamp, int& outSyncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_EncodeMrcFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_EncodeMrcFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rawBuffer, audioDataPtr, audioDataLen, audioChannels, timestamp, outSyncId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawBuffer, audioDataPtr, audioDataLen, audioChannels, timestamp, outSyncId);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_EncodeMrcFrameWithDualTextures
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_EncodeMrcFrameWithDualTextures(System::IntPtr backgroundTextureHandle, System::IntPtr foregroundTextureHandle, System::IntPtr audioData, int audioDataLen, int audioChannels, double timestamp, int& outSyncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_EncodeMrcFrameWithDualTextures");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_EncodeMrcFrameWithDualTextures", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(backgroundTextureHandle, foregroundTextureHandle, audioData, audioDataLen, audioChannels, timestamp, outSyncId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, backgroundTextureHandle, foregroundTextureHandle, audioData, audioDataLen, audioChannels, timestamp, outSyncId);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_Media_SyncMrcFrame
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SyncMrcFrame(int syncId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_Media_SyncMrcFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_Media_SyncMrcFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(syncId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, syncId);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_GetExternalCameraCalibrationRawPose
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_GetExternalCameraCalibrationRawPose(int cameraId, GlobalNamespace::OVRPlugin::Posef& rawPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_GetExternalCameraCalibrationRawPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_GetExternalCameraCalibrationRawPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraId, rawPose)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraId, rawPose);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_SetDeveloperMode
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_SetDeveloperMode(GlobalNamespace::OVRPlugin::Bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_SetDeveloperMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_SetDeveloperMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(active)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, active);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_GetNodeOrientationValid
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_GetNodeOrientationValid(GlobalNamespace::OVRPlugin::Node nodeId, GlobalNamespace::OVRPlugin::Bool& nodeOrientationValid) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_GetNodeOrientationValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_GetNodeOrientationValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeId, nodeOrientationValid)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeId, nodeOrientationValid);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0.ovrp_GetNodePositionValid
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_GetNodePositionValid(GlobalNamespace::OVRPlugin::Node nodeId, GlobalNamespace::OVRPlugin::Bool& nodePositionValid) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::ovrp_GetNodePositionValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", "ovrp_GetNodePositionValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nodeId, nodePositionValid)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, nodeId, nodePositionValid);
}
// Autogenerated method: OVRPlugin/OVRP_1_38_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_38_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_38_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_38_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_39_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_39_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_39_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_39_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_39_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_39_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_39_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_39_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_39_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_39_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_39_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_39_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_40_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_40_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_40_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_40_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_40_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_40_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_40_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_40_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_40_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_40_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_40_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_40_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_41_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_41_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_41_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_41_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_41_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_41_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_41_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_41_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_41_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_41_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_41_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_41_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_42_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_42_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_42_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_42_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_42_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_42_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_42_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_42_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_42_0.ovrp_GetAdaptiveGpuPerformanceScale2
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_42_0::ovrp_GetAdaptiveGpuPerformanceScale2(float& adaptiveGpuPerformanceScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_42_0::ovrp_GetAdaptiveGpuPerformanceScale2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_42_0", "ovrp_GetAdaptiveGpuPerformanceScale2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(adaptiveGpuPerformanceScale)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, adaptiveGpuPerformanceScale);
}
// Autogenerated method: OVRPlugin/OVRP_1_42_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_42_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_42_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_42_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_43_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_43_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_43_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_43_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_43_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_43_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_43_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_43_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_43_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_43_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_43_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_43_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRPlugin/OVRP_1_44_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_44_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
// Including type: OVRPlugin/Hand
#include "GlobalNamespace/OVRPlugin_Hand.hpp"
// Including type: OVRPlugin/SkeletonType
#include "GlobalNamespace/OVRPlugin_SkeletonType.hpp"
// Including type: OVRPlugin/Skeleton
#include "GlobalNamespace/OVRPlugin_Skeleton.hpp"
// Including type: OVRPlugin/MeshType
#include "GlobalNamespace/OVRPlugin_MeshType.hpp"
// Including type: OVRPlugin/Fovf
#include "GlobalNamespace/OVRPlugin_Fovf.hpp"
// Including type: OVRPlugin/CameraIntrinsics
#include "GlobalNamespace/OVRPlugin_CameraIntrinsics.hpp"
// Including type: OVRPlugin/CameraExtrinsics
#include "GlobalNamespace/OVRPlugin_CameraExtrinsics.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_44_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_44_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_44_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_44_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_GetHandTrackingEnabled
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetHandTrackingEnabled(GlobalNamespace::OVRPlugin::Bool& handTrackingEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetHandTrackingEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_GetHandTrackingEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handTrackingEnabled)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handTrackingEnabled);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_GetHandState
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetHandState(GlobalNamespace::OVRPlugin::Step stepId, GlobalNamespace::OVRPlugin::Hand hand, GlobalNamespace::OVRPlugin::HandStateInternal& handState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetHandState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_GetHandState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stepId, hand, handState)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stepId, hand, handState);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_GetSkeleton
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetSkeleton(GlobalNamespace::OVRPlugin::SkeletonType skeletonType, GlobalNamespace::OVRPlugin::Skeleton& skeleton) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetSkeleton");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_GetSkeleton", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(skeletonType, skeleton)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, skeletonType, skeleton);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_GetMesh
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetMesh(GlobalNamespace::OVRPlugin::MeshType meshType, System::IntPtr meshPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetMesh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_GetMesh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(meshType, meshPtr)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, meshType, meshPtr);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_OverrideExternalCameraFov
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_OverrideExternalCameraFov(int cameraId, GlobalNamespace::OVRPlugin::Bool useOverriddenFov, GlobalNamespace::OVRPlugin::Fovf& fov) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_OverrideExternalCameraFov");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_OverrideExternalCameraFov", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraId, useOverriddenFov, fov)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraId, useOverriddenFov, fov);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_GetUseOverriddenExternalCameraFov
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetUseOverriddenExternalCameraFov(int cameraId, GlobalNamespace::OVRPlugin::Bool& useOverriddenFov) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetUseOverriddenExternalCameraFov");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_GetUseOverriddenExternalCameraFov", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraId, useOverriddenFov)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraId, useOverriddenFov);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_OverrideExternalCameraStaticPose
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_OverrideExternalCameraStaticPose(int cameraId, GlobalNamespace::OVRPlugin::Bool useOverriddenPose, GlobalNamespace::OVRPlugin::Posef& pose) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_OverrideExternalCameraStaticPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_OverrideExternalCameraStaticPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraId, useOverriddenPose, pose)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraId, useOverriddenPose, pose);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_GetUseOverriddenExternalCameraStaticPose
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetUseOverriddenExternalCameraStaticPose(int cameraId, GlobalNamespace::OVRPlugin::Bool& useOverriddenStaticPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_GetUseOverriddenExternalCameraStaticPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_GetUseOverriddenExternalCameraStaticPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraId, useOverriddenStaticPose)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraId, useOverriddenStaticPose);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_ResetDefaultExternalCamera
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_ResetDefaultExternalCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_ResetDefaultExternalCamera");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_ResetDefaultExternalCamera", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0.ovrp_SetDefaultExternalCamera
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_SetDefaultExternalCamera(::Il2CppString* cameraName, GlobalNamespace::OVRPlugin::CameraIntrinsics& cameraIntrinsics, GlobalNamespace::OVRPlugin::CameraExtrinsics& cameraExtrinsics) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::ovrp_SetDefaultExternalCamera");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", "ovrp_SetDefaultExternalCamera", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraName, cameraIntrinsics, cameraExtrinsics)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cameraName, cameraIntrinsics, cameraExtrinsics);
}
// Autogenerated method: OVRPlugin/OVRP_1_44_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_44_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_44_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_44_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRPlugin/OVRP_1_45_0
#include "GlobalNamespace/OVRPlugin_OVRP_1_45_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: OVRPlugin/Result
#include "GlobalNamespace/OVRPlugin_Result.hpp"
// Including type: OVRPlugin/Bool
#include "GlobalNamespace/OVRPlugin_Bool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
System::Version* GlobalNamespace::OVRPlugin::OVRP_1_45_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_45_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version*>("", "OVRPlugin/OVRP_1_45_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void GlobalNamespace::OVRPlugin::OVRP_1_45_0::_set_version(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_45_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRPlugin/OVRP_1_45_0", "version", value));
}
// Autogenerated method: OVRPlugin/OVRP_1_45_0.ovrp_GetSystemHmd3DofModeEnabled
GlobalNamespace::OVRPlugin::Result GlobalNamespace::OVRPlugin::OVRP_1_45_0::ovrp_GetSystemHmd3DofModeEnabled(GlobalNamespace::OVRPlugin::Bool& enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_45_0::ovrp_GetSystemHmd3DofModeEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_45_0", "ovrp_GetSystemHmd3DofModeEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(enabled)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enabled);
}
// Autogenerated method: OVRPlugin/OVRP_1_45_0..cctor
void GlobalNamespace::OVRPlugin::OVRP_1_45_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRPlugin::OVRP_1_45_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRPlugin/OVRP_1_45_0", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRProfile
#include "GlobalNamespace/OVRProfile.hpp"
// Including type: OVRProfile/State
#include "GlobalNamespace/OVRProfile_State.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRProfile.get_id
::Il2CppString* GlobalNamespace::OVRProfile::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::get_id");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_userName
::Il2CppString* GlobalNamespace::OVRProfile::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::get_userName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_locale
::Il2CppString* GlobalNamespace::OVRProfile::get_locale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::get_locale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_locale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_ipd
float GlobalNamespace::OVRProfile::get_ipd() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::get_ipd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ipd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_eyeHeight
float GlobalNamespace::OVRProfile::get_eyeHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::get_eyeHeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_eyeHeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_eyeDepth
float GlobalNamespace::OVRProfile::get_eyeDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::get_eyeDepth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_eyeDepth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_neckHeight
float GlobalNamespace::OVRProfile::get_neckHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::get_neckHeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_neckHeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRProfile.get_state
GlobalNamespace::OVRProfile::State GlobalNamespace::OVRProfile::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::get_state");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRProfile::State, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRProfile/State
#include "GlobalNamespace/OVRProfile_State.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRProfile/State NOT_TRIGGERED
GlobalNamespace::OVRProfile::State GlobalNamespace::OVRProfile::State::_get_NOT_TRIGGERED() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::State::_get_NOT_TRIGGERED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRProfile::State>("", "OVRProfile/State", "NOT_TRIGGERED"));
}
// Autogenerated static field setter
// Set static field: static public OVRProfile/State NOT_TRIGGERED
void GlobalNamespace::OVRProfile::State::_set_NOT_TRIGGERED(GlobalNamespace::OVRProfile::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::State::_set_NOT_TRIGGERED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRProfile/State", "NOT_TRIGGERED", value));
}
// Autogenerated static field getter
// Get static field: static public OVRProfile/State LOADING
GlobalNamespace::OVRProfile::State GlobalNamespace::OVRProfile::State::_get_LOADING() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::State::_get_LOADING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRProfile::State>("", "OVRProfile/State", "LOADING"));
}
// Autogenerated static field setter
// Set static field: static public OVRProfile/State LOADING
void GlobalNamespace::OVRProfile::State::_set_LOADING(GlobalNamespace::OVRProfile::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::State::_set_LOADING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRProfile/State", "LOADING", value));
}
// Autogenerated static field getter
// Get static field: static public OVRProfile/State READY
GlobalNamespace::OVRProfile::State GlobalNamespace::OVRProfile::State::_get_READY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::State::_get_READY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRProfile::State>("", "OVRProfile/State", "READY"));
}
// Autogenerated static field setter
// Set static field: static public OVRProfile/State READY
void GlobalNamespace::OVRProfile::State::_set_READY(GlobalNamespace::OVRProfile::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::State::_set_READY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRProfile/State", "READY", value));
}
// Autogenerated static field getter
// Get static field: static public OVRProfile/State ERROR
GlobalNamespace::OVRProfile::State GlobalNamespace::OVRProfile::State::_get_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::State::_get_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRProfile::State>("", "OVRProfile/State", "ERROR"));
}
// Autogenerated static field setter
// Set static field: static public OVRProfile/State ERROR
void GlobalNamespace::OVRProfile::State::_set_ERROR(GlobalNamespace::OVRProfile::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRProfile::State::_set_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRProfile/State", "ERROR", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRResources
#include "GlobalNamespace/OVRResources.hpp"
// Including type: OVRResources/<>c__DisplayClass2_0
#include "GlobalNamespace/OVRResources_--c__DisplayClass2_0.hpp"
// Including type: OVRResources/<>c__DisplayClass3_0`1
#include "GlobalNamespace/OVRResources_--c__DisplayClass3_0_1.hpp"
// Including type: UnityEngine.AssetBundle
#include "UnityEngine/AssetBundle.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.AssetBundle resourceBundle
UnityEngine::AssetBundle* GlobalNamespace::OVRResources::_get_resourceBundle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRResources::_get_resourceBundle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AssetBundle*>("", "OVRResources", "resourceBundle"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AssetBundle resourceBundle
void GlobalNamespace::OVRResources::_set_resourceBundle(UnityEngine::AssetBundle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRResources::_set_resourceBundle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRResources", "resourceBundle", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.String> assetNames
System::Collections::Generic::List_1<::Il2CppString*>* GlobalNamespace::OVRResources::_get_assetNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRResources::_get_assetNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<::Il2CppString*>*>("", "OVRResources", "assetNames"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.String> assetNames
void GlobalNamespace::OVRResources::_set_assetNames(System::Collections::Generic::List_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRResources::_set_assetNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRResources", "assetNames", value));
}
// Autogenerated method: OVRResources.Load
UnityEngine::Object* GlobalNamespace::OVRResources::Load(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRResources::Load");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRResources", "Load", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: OVRResources.SetResourceBundle
void GlobalNamespace::OVRResources::SetResourceBundle(UnityEngine::AssetBundle* bundle) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRResources::SetResourceBundle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRResources", "SetResourceBundle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bundle)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bundle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRResources/<>c__DisplayClass2_0
#include "GlobalNamespace/OVRResources_--c__DisplayClass2_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRResources/<>c__DisplayClass2_0.<Load>b__0
bool GlobalNamespace::OVRResources::$$c__DisplayClass2_0::$Load$b__0(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRResources::$$c__DisplayClass2_0::<Load>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Load>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSceneLoader
#include "GlobalNamespace/OVRSceneLoader.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: OVRSceneLoader/<DelayCanvasPosUpdate>d__24
#include "GlobalNamespace/OVRSceneLoader_-DelayCanvasPosUpdate-d__24.hpp"
// Including type: OVRSceneLoader/<onCheckSceneCoroutine>d__25
#include "GlobalNamespace/OVRSceneLoader_-onCheckSceneCoroutine-d__25.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AssetBundle
#include "UnityEngine/AssetBundle.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String externalStoragePath
::Il2CppString* GlobalNamespace::OVRSceneLoader::_get_externalStoragePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_get_externalStoragePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRSceneLoader", "externalStoragePath"));
}
// Autogenerated static field setter
// Set static field: static public System.String externalStoragePath
void GlobalNamespace::OVRSceneLoader::_set_externalStoragePath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_set_externalStoragePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneLoader", "externalStoragePath", value));
}
// Autogenerated static field getter
// Get static field: static public System.String sceneLoadDataName
::Il2CppString* GlobalNamespace::OVRSceneLoader::_get_sceneLoadDataName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_get_sceneLoadDataName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRSceneLoader", "sceneLoadDataName"));
}
// Autogenerated static field setter
// Set static field: static public System.String sceneLoadDataName
void GlobalNamespace::OVRSceneLoader::_set_sceneLoadDataName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_set_sceneLoadDataName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneLoader", "sceneLoadDataName", value));
}
// Autogenerated static field getter
// Get static field: static public System.String resourceBundleName
::Il2CppString* GlobalNamespace::OVRSceneLoader::_get_resourceBundleName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_get_resourceBundleName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRSceneLoader", "resourceBundleName"));
}
// Autogenerated static field setter
// Set static field: static public System.String resourceBundleName
void GlobalNamespace::OVRSceneLoader::_set_resourceBundleName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::_set_resourceBundleName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRSceneLoader", "resourceBundleName", value));
}
// Autogenerated method: OVRSceneLoader.Awake
void GlobalNamespace::OVRSceneLoader::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.Start
void GlobalNamespace::OVRSceneLoader::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.LoadScene
void GlobalNamespace::OVRSceneLoader::LoadScene(GlobalNamespace::OVRSceneLoader::SceneInfo sceneInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::LoadScene");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadScene", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sceneInfo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sceneInfo);
}
// Autogenerated method: OVRSceneLoader.LoadSceneOperation_completed
void GlobalNamespace::OVRSceneLoader::LoadSceneOperation_completed(UnityEngine::AsyncOperation* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::LoadSceneOperation_completed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadSceneOperation_completed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: OVRSceneLoader.Update
void GlobalNamespace::OVRSceneLoader::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.UpdateCanvasPosition
void GlobalNamespace::OVRSceneLoader::UpdateCanvasPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::UpdateCanvasPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateCanvasPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.GetSceneInfo
GlobalNamespace::OVRSceneLoader::SceneInfo GlobalNamespace::OVRSceneLoader::GetSceneInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::GetSceneInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSceneInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRSceneLoader::SceneInfo, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.DelayCanvasPosUpdate
System::Collections::IEnumerator* GlobalNamespace::OVRSceneLoader::DelayCanvasPosUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::DelayCanvasPosUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DelayCanvasPosUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.onCheckSceneCoroutine
System::Collections::IEnumerator* GlobalNamespace::OVRSceneLoader::onCheckSceneCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::onCheckSceneCoroutine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "onCheckSceneCoroutine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader.DestroyAllGameObjects
void GlobalNamespace::OVRSceneLoader::DestroyAllGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::DestroyAllGameObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DestroyAllGameObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSceneLoader/SceneInfo
#include "GlobalNamespace/OVRSceneLoader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSceneLoader/<DelayCanvasPosUpdate>d__24
#include "GlobalNamespace/OVRSceneLoader_-DelayCanvasPosUpdate-d__24.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRSceneLoader/<DelayCanvasPosUpdate>d__24.System.IDisposable.Dispose
void GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System.IDisposable.Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<DelayCanvasPosUpdate>d__24.MoveNext
bool GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System_Collections_IEnumerator_MoveNext() {
  return GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::MoveNext();
}
// Autogenerated method: OVRSceneLoader/<DelayCanvasPosUpdate>d__24.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System_Collections_Generic_IEnumerator_1_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<DelayCanvasPosUpdate>d__24.System.Collections.IEnumerator.Reset
void GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System.Collections.IEnumerator.Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<DelayCanvasPosUpdate>d__24.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$DelayCanvasPosUpdate$d__24::System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRSceneLoader/<onCheckSceneCoroutine>d__25
#include "GlobalNamespace/OVRSceneLoader_-onCheckSceneCoroutine-d__25.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRSceneLoader/<onCheckSceneCoroutine>d__25.System.IDisposable.Dispose
void GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System.IDisposable.Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<onCheckSceneCoroutine>d__25.MoveNext
bool GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System_Collections_IEnumerator_MoveNext() {
  return GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::MoveNext();
}
// Autogenerated method: OVRSceneLoader/<onCheckSceneCoroutine>d__25.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System_Collections_Generic_IEnumerator_1_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<onCheckSceneCoroutine>d__25.System.Collections.IEnumerator.Reset
void GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System.Collections.IEnumerator.Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRSceneLoader/<onCheckSceneCoroutine>d__25.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRSceneLoader::$onCheckSceneCoroutine$d__25::System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTracker
#include "GlobalNamespace/OVRTracker.hpp"
// Including type: OVRTracker/Frustum
#include "GlobalNamespace/OVRTracker_Frustum.hpp"
// Including type: OVRPose
#include "GlobalNamespace/OVRPose.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRTracker.get_isPresent
bool GlobalNamespace::OVRTracker::get_isPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRTracker::get_isPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTracker.get_isPositionTracked
bool GlobalNamespace::OVRTracker::get_isPositionTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRTracker::get_isPositionTracked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isPositionTracked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTracker.get_isEnabled
bool GlobalNamespace::OVRTracker::get_isEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRTracker::get_isEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRTracker.set_isEnabled
void GlobalNamespace::OVRTracker::set_isEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRTracker::set_isEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRTracker.get_count
int GlobalNamespace::OVRTracker::get_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRTracker::get_count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRTracker.GetFrustum
GlobalNamespace::OVRTracker::Frustum GlobalNamespace::OVRTracker::GetFrustum(int tracker) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRTracker::GetFrustum");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFrustum", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tracker)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRTracker::Frustum, false>(this, ___internal__method, tracker);
}
// Autogenerated method: OVRTracker.GetPose
GlobalNamespace::OVRPose GlobalNamespace::OVRTracker::GetPose(int tracker) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRTracker::GetPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tracker)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPose, false>(this, ___internal__method, tracker);
}
// Autogenerated method: OVRTracker.GetPoseValid
bool GlobalNamespace::OVRTracker::GetPoseValid(int tracker) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRTracker::GetPoseValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPoseValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tracker)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, tracker);
}
// Autogenerated method: OVRTracker.GetPresent
bool GlobalNamespace::OVRTracker::GetPresent(int tracker) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRTracker::GetPresent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPresent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tracker)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, tracker);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRAudioSourceTest
#include "GlobalNamespace/OVRAudioSourceTest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRAudioSourceTest.Start
void GlobalNamespace::OVRAudioSourceTest::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRAudioSourceTest::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRAudioSourceTest.Update
void GlobalNamespace::OVRAudioSourceTest::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRAudioSourceTest::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRAutoDestroyInMRC
#include "GlobalNamespace/OVRAutoDestroyInMRC.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRAutoDestroyInMRC.Start
void GlobalNamespace::OVRAutoDestroyInMRC::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRAutoDestroyInMRC::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRAutoDestroyInMRC.Update
void GlobalNamespace::OVRAutoDestroyInMRC::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRAutoDestroyInMRC::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRChromaticAberration
#include "GlobalNamespace/OVRChromaticAberration.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRChromaticAberration.Start
void GlobalNamespace::OVRChromaticAberration::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRChromaticAberration::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRChromaticAberration.Update
void GlobalNamespace::OVRChromaticAberration::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRChromaticAberration::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRControllerHelper
#include "GlobalNamespace/OVRControllerHelper.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRControllerHelper.Start
void GlobalNamespace::OVRControllerHelper::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRControllerHelper.Update
void GlobalNamespace::OVRControllerHelper::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRControllerHelper/ControllerType
#include "GlobalNamespace/OVRControllerHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRControllerHelper/ControllerType GearVR
GlobalNamespace::OVRControllerHelper::ControllerType GlobalNamespace::OVRControllerHelper::ControllerType::_get_GearVR() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::ControllerType::_get_GearVR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerHelper::ControllerType>("", "OVRControllerHelper/ControllerType", "GearVR"));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerHelper/ControllerType GearVR
void GlobalNamespace::OVRControllerHelper::ControllerType::_set_GearVR(GlobalNamespace::OVRControllerHelper::ControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::ControllerType::_set_GearVR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRControllerHelper/ControllerType", "GearVR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerHelper/ControllerType Go
GlobalNamespace::OVRControllerHelper::ControllerType GlobalNamespace::OVRControllerHelper::ControllerType::_get_Go() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::ControllerType::_get_Go");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerHelper::ControllerType>("", "OVRControllerHelper/ControllerType", "Go"));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerHelper/ControllerType Go
void GlobalNamespace::OVRControllerHelper::ControllerType::_set_Go(GlobalNamespace::OVRControllerHelper::ControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::ControllerType::_set_Go");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRControllerHelper/ControllerType", "Go", value));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerHelper/ControllerType QuestAndRiftS
GlobalNamespace::OVRControllerHelper::ControllerType GlobalNamespace::OVRControllerHelper::ControllerType::_get_QuestAndRiftS() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::ControllerType::_get_QuestAndRiftS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerHelper::ControllerType>("", "OVRControllerHelper/ControllerType", "QuestAndRiftS"));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerHelper/ControllerType QuestAndRiftS
void GlobalNamespace::OVRControllerHelper::ControllerType::_set_QuestAndRiftS(GlobalNamespace::OVRControllerHelper::ControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::ControllerType::_set_QuestAndRiftS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRControllerHelper/ControllerType", "QuestAndRiftS", value));
}
// Autogenerated static field getter
// Get static field: static public OVRControllerHelper/ControllerType Rift
GlobalNamespace::OVRControllerHelper::ControllerType GlobalNamespace::OVRControllerHelper::ControllerType::_get_Rift() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::ControllerType::_get_Rift");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRControllerHelper::ControllerType>("", "OVRControllerHelper/ControllerType", "Rift"));
}
// Autogenerated static field setter
// Set static field: static public OVRControllerHelper/ControllerType Rift
void GlobalNamespace::OVRControllerHelper::ControllerType::_set_Rift(GlobalNamespace::OVRControllerHelper::ControllerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRControllerHelper::ControllerType::_set_Rift");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRControllerHelper/ControllerType", "Rift", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRCubemapCapture
#include "GlobalNamespace/OVRCubemapCapture.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Cubemap
#include "UnityEngine/Cubemap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRCubemapCapture.Update
void GlobalNamespace::OVRCubemapCapture::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCubemapCapture::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRCubemapCapture.TriggerCubemapCapture
void GlobalNamespace::OVRCubemapCapture::TriggerCubemapCapture(UnityEngine::Vector3 capturePos, int cubemapSize, ::Il2CppString* pathName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCubemapCapture::TriggerCubemapCapture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRCubemapCapture", "TriggerCubemapCapture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(capturePos, cubemapSize, pathName)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, capturePos, cubemapSize, pathName);
}
// Autogenerated method: OVRCubemapCapture.RenderIntoCubemap
void GlobalNamespace::OVRCubemapCapture::RenderIntoCubemap(UnityEngine::Camera* ownerCamera, UnityEngine::Cubemap* outCubemap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCubemapCapture::RenderIntoCubemap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRCubemapCapture", "RenderIntoCubemap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ownerCamera, outCubemap)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ownerCamera, outCubemap);
}
// Autogenerated method: OVRCubemapCapture.SaveCubemapCapture
bool GlobalNamespace::OVRCubemapCapture::SaveCubemapCapture(UnityEngine::Cubemap* cubemap, ::Il2CppString* pathName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCubemapCapture::SaveCubemapCapture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRCubemapCapture", "SaveCubemapCapture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cubemap, pathName)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cubemap, pathName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRCursor
#include "GlobalNamespace/OVRCursor.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRCursor.SetCursorRay
void GlobalNamespace::OVRCursor::SetCursorRay(UnityEngine::Transform* ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCursor::SetCursorRay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCursorRay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ray)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ray);
}
// Autogenerated method: OVRCursor.SetCursorStartDest
void GlobalNamespace::OVRCursor::SetCursorStartDest(UnityEngine::Vector3 start, UnityEngine::Vector3 dest, UnityEngine::Vector3 normal) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCursor::SetCursorStartDest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCursorStartDest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(start, dest, normal)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, start, dest, normal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRCustomSkeleton
#include "GlobalNamespace/OVRCustomSkeleton.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OVRPlugin/Skeleton
#include "GlobalNamespace/OVRPlugin_Skeleton.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRCustomSkeleton.get_CustomBones
System::Collections::Generic::List_1<UnityEngine::Transform*>* GlobalNamespace::OVRCustomSkeleton::get_CustomBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCustomSkeleton::get_CustomBones");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CustomBones", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::Transform*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRCustomSkeleton.InitializeBones
void GlobalNamespace::OVRCustomSkeleton::InitializeBones(GlobalNamespace::OVRPlugin::Skeleton skeleton) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRCustomSkeleton::InitializeBones");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitializeBones", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(skeleton)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, skeleton);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRDebugInfo
#include "GlobalNamespace/OVRDebugInfo.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRDebugInfo.Awake
void GlobalNamespace::OVRDebugInfo::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.Update
void GlobalNamespace::OVRDebugInfo::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.OnDestroy
void GlobalNamespace::OVRDebugInfo::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.InitUIComponents
void GlobalNamespace::OVRDebugInfo::InitUIComponents() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::InitUIComponents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitUIComponents", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.UpdateVariable
void GlobalNamespace::OVRDebugInfo::UpdateVariable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::UpdateVariable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateVariable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.UpdateStrings
void GlobalNamespace::OVRDebugInfo::UpdateStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::UpdateStrings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateStrings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.RiftPresentGUI
void GlobalNamespace::OVRDebugInfo::RiftPresentGUI(UnityEngine::GameObject* guiMainOBj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::RiftPresentGUI");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RiftPresentGUI", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(guiMainOBj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, guiMainOBj);
}
// Autogenerated method: OVRDebugInfo.UpdateDeviceDetection
void GlobalNamespace::OVRDebugInfo::UpdateDeviceDetection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::UpdateDeviceDetection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateDeviceDetection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.VariableObjectManager
UnityEngine::GameObject* GlobalNamespace::OVRDebugInfo::VariableObjectManager(UnityEngine::GameObject* gameObject, ::Il2CppString* name, float posY, ::Il2CppString* str, int fontSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::VariableObjectManager");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "VariableObjectManager", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameObject, name, posY, str, fontSize)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, gameObject, name, posY, str, fontSize);
}
// Autogenerated method: OVRDebugInfo.ComponentComposition
UnityEngine::GameObject* GlobalNamespace::OVRDebugInfo::ComponentComposition(UnityEngine::GameObject* GO) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::ComponentComposition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ComponentComposition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(GO)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, GO);
}
// Autogenerated method: OVRDebugInfo.UpdateIPD
void GlobalNamespace::OVRDebugInfo::UpdateIPD() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::UpdateIPD");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateIPD", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.UpdateEyeHeightOffset
void GlobalNamespace::OVRDebugInfo::UpdateEyeHeightOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::UpdateEyeHeightOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateEyeHeightOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.UpdateEyeDepthOffset
void GlobalNamespace::OVRDebugInfo::UpdateEyeDepthOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::UpdateEyeDepthOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateEyeDepthOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.UpdateFOV
void GlobalNamespace::OVRDebugInfo::UpdateFOV() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::UpdateFOV");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateFOV", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.UpdateResolutionEyeTexture
void GlobalNamespace::OVRDebugInfo::UpdateResolutionEyeTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::UpdateResolutionEyeTexture");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateResolutionEyeTexture", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.UpdateLatencyValues
void GlobalNamespace::OVRDebugInfo::UpdateLatencyValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::UpdateLatencyValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateLatencyValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRDebugInfo.UpdateFPS
void GlobalNamespace::OVRDebugInfo::UpdateFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRDebugInfo::UpdateFPS");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateFPS", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRGazePointer
#include "GlobalNamespace/OVRGazePointer.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OVRProgressIndicator
#include "GlobalNamespace/OVRProgressIndicator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVRGazePointer _instance
GlobalNamespace::OVRGazePointer* GlobalNamespace::OVRGazePointer::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGazePointer*>("", "OVRGazePointer", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private OVRGazePointer _instance
void GlobalNamespace::OVRGazePointer::_set__instance(GlobalNamespace::OVRGazePointer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGazePointer", "_instance", value));
}
// Autogenerated method: OVRGazePointer.get_hidden
bool GlobalNamespace::OVRGazePointer::get_hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::get_hidden");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hidden", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.set_hidden
void GlobalNamespace::OVRGazePointer::set_hidden(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::set_hidden");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_hidden", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRGazePointer.get_currentScale
float GlobalNamespace::OVRGazePointer::get_currentScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::get_currentScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_currentScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.set_currentScale
void GlobalNamespace::OVRGazePointer::set_currentScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::set_currentScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_currentScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRGazePointer.get_instance
GlobalNamespace::OVRGazePointer* GlobalNamespace::OVRGazePointer::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::get_instance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRGazePointer", "get_instance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRGazePointer*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRGazePointer.get_visibilityStrength
float GlobalNamespace::OVRGazePointer::get_visibilityStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::get_visibilityStrength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_visibilityStrength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.get_SelectionProgress
float GlobalNamespace::OVRGazePointer::get_SelectionProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::get_SelectionProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SelectionProgress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.set_SelectionProgress
void GlobalNamespace::OVRGazePointer::set_SelectionProgress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::set_SelectionProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_SelectionProgress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRGazePointer.Awake
void GlobalNamespace::OVRGazePointer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.Update
void GlobalNamespace::OVRGazePointer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.LateUpdate
void GlobalNamespace::OVRGazePointer::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.RequestHide
void GlobalNamespace::OVRGazePointer::RequestHide() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::RequestHide");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RequestHide", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.RequestShow
void GlobalNamespace::OVRGazePointer::RequestShow() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::RequestShow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RequestShow", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.Hide
void GlobalNamespace::OVRGazePointer::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::Hide");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.Show
void GlobalNamespace::OVRGazePointer::Show() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::Show");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGazePointer.SetCursorStartDest
void GlobalNamespace::OVRGazePointer::SetCursorStartDest(UnityEngine::Vector3 _, UnityEngine::Vector3 pos, UnityEngine::Vector3 normal) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::SetCursorStartDest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCursorStartDest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(_, pos, normal)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, _, pos, normal);
}
// Autogenerated method: OVRGazePointer.SetCursorRay
void GlobalNamespace::OVRGazePointer::SetCursorRay(UnityEngine::Transform* ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGazePointer::SetCursorRay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCursorRay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ray)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ray);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRGearVrControllerTest
#include "GlobalNamespace/OVRGearVrControllerTest.hpp"
// Including type: OVRGearVrControllerTest/BoolMonitor
#include "GlobalNamespace/OVRGearVrControllerTest_BoolMonitor.hpp"
// Including type: OVRGearVrControllerTest/<>c
#include "GlobalNamespace/OVRGearVrControllerTest_--c.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String prevConnected
::Il2CppString* GlobalNamespace::OVRGearVrControllerTest::_get_prevConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::_get_prevConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRGearVrControllerTest", "prevConnected"));
}
// Autogenerated static field setter
// Set static field: static private System.String prevConnected
void GlobalNamespace::OVRGearVrControllerTest::_set_prevConnected(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::_set_prevConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest", "prevConnected", value));
}
// Autogenerated static field getter
// Get static field: static private OVRGearVrControllerTest/BoolMonitor controllers
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor* GlobalNamespace::OVRGearVrControllerTest::_get_controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::_get_controllers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor*>("", "OVRGearVrControllerTest", "controllers"));
}
// Autogenerated static field setter
// Set static field: static private OVRGearVrControllerTest/BoolMonitor controllers
void GlobalNamespace::OVRGearVrControllerTest::_set_controllers(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::_set_controllers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest", "controllers", value));
}
// Autogenerated method: OVRGearVrControllerTest.Start
void GlobalNamespace::OVRGearVrControllerTest::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest.Update
void GlobalNamespace::OVRGearVrControllerTest::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest..cctor
void GlobalNamespace::OVRGearVrControllerTest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRGearVrControllerTest", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRGearVrControllerTest/BoolMonitor
#include "GlobalNamespace/OVRGearVrControllerTest_BoolMonitor.hpp"
// Including type: OVRGearVrControllerTest/BoolMonitor/BoolGenerator
#include "GlobalNamespace/OVRGearVrControllerTest_BoolMonitor_BoolGenerator.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRGearVrControllerTest/BoolMonitor.Update
void GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/BoolMonitor.AppendToStringBuilder
void GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::AppendToStringBuilder(System::Text::StringBuilder*& sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::AppendToStringBuilder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AppendToStringBuilder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sb)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRGearVrControllerTest/BoolMonitor/BoolGenerator
#include "GlobalNamespace/OVRGearVrControllerTest_BoolMonitor_BoolGenerator.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRGearVrControllerTest/BoolMonitor/BoolGenerator.Invoke
bool GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator::Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/BoolMonitor/BoolGenerator.BeginInvoke
System::IAsyncResult* GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator::BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVRGearVrControllerTest/BoolMonitor/BoolGenerator.EndInvoke
bool GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator::EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRGearVrControllerTest/<>c
#include "GlobalNamespace/OVRGearVrControllerTest_--c.hpp"
// Including type: OVRGearVrControllerTest/BoolMonitor/BoolGenerator
#include "GlobalNamespace/OVRGearVrControllerTest_BoolMonitor_BoolGenerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRGearVrControllerTest/<>c <>9
GlobalNamespace::OVRGearVrControllerTest::$$c* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::$$c*>("", "OVRGearVrControllerTest/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRGearVrControllerTest/<>c <>9
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9(GlobalNamespace::OVRGearVrControllerTest::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_0
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_0")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_0
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_0(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_0", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_1
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_1")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_1
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_1(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_1", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_2
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_2")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_2
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_2(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_2", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_3
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_3")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_3
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_3(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_3", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_4
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_4")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_4
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_4(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_4", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_5
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_5");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_5")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_5
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_5(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_5");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_5", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_6
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_6");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_6")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_6
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_6(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_6");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_6", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_7
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_7");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_7")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_7
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_7(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_7");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_7", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_8
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_8");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_8")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_8
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_8(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_8");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_8", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_9
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_9")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_9
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_9(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_9", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_10
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_10");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_10")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_10
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_10(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_10");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_10", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_11
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_11");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_11")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_11
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_11(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_11");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_11", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_12
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_12");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_12")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_12
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_12(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_12");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_12", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_13
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_13");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_13")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_13
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_13(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_13");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_13", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_14
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_14");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_14")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_14
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_14(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_14");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_14", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_15
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_15() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_15");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_15")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_15
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_15(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_15");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_15", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_16
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_16() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_16");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_16")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_16
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_16(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_16");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_16", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_17
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_17() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_17");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_17")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_17
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_17(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_17");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_17", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_18
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_18() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_18");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_18")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_18
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_18(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_18");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_18", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_19
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_19() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_19");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_19")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_19
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_19(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_19");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_19", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_20
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_20() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_20");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_20")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_20
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_20(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_20");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_20", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_21
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_21() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_21");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_21")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_21
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_21(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_21");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_21", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_22
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_22() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_22");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_22")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_22
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_22(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_22");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_22", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_23
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_23() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_23");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_23")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_23
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_23(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_23");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_23", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_24
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_24() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_24");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_24")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_24
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_24(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_24");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_24", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_25
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_25() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_25");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_25")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_25
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_25(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_25");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_25", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_26
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_26() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_26");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_26")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_26
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_26(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_26");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_26", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_27
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_27() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_27");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_27")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_27
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_27(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_27");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_27", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_28
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_28() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_28");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_28")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_28
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_28(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_28");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_28", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_29
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_29() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_29");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_29")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_29
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_29(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_29");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_29", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_30
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_30() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_30");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_30")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_30
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_30(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_30");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_30", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_31
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_31() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_31");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_31")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_31
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_31(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_31");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_31", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_32
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_32() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_32");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_32")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_32
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_32(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_32");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_32", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_33
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_33() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_33");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_33")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_33
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_33(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_33");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_33", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_34
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_34() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_34");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_34")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_34
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_34(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_34");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_34", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_35
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_35() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_35");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_35")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_35
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_35(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_35");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_35", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_36
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_36() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_36");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_36")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_36
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_36(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_36");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_36", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_37
GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_37() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_get_$$9__4_37");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator*>("", "OVRGearVrControllerTest/<>c", "<>9__4_37")));
}
// Autogenerated static field setter
// Set static field: static public OVRGearVrControllerTest/BoolMonitor/BoolGenerator <>9__4_37
void GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_37(GlobalNamespace::OVRGearVrControllerTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::_set_$$9__4_37");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRGearVrControllerTest/<>c", "<>9__4_37", value)));
}
// Autogenerated method: OVRGearVrControllerTest/<>c..cctor
void GlobalNamespace::OVRGearVrControllerTest::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRGearVrControllerTest/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_0
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_1
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_2
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_3
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_3", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_4
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_4", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_5
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_5", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_6
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_6", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_7
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_7", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_8
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_8", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_9
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_9", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_10
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_10", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_11
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_11", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_12
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_12", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_13
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_13");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_13", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_14
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_14");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_14", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_15
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_15() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_15", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_16
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_16() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_16", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_17
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_17() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_17");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_17", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_18
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_18() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_18");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_18", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_19
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_19() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_19");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_19", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_20
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_20() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_20");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_20", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_21
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_21() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_21");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_21", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_22
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_22() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_22");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_22", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_23
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_23() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_23");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_23", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_24
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_24() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_24");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_24", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_25
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_25() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_25");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_25", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_26
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_26() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_26");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_26", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_27
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_27() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_27");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_27", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_28
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_28() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_28");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_28", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_29
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_29() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_29");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_29", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_30
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_30() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_30");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_30", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_31
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_31() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_31");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_31", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_32
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_32() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_33
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_33() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_33");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_33", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_34
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_34() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_34");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_34", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_35
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_35() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_35");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_35", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_36
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_36() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_36");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_36", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<Start>b__4_37
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$Start$b__4_37() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<Start>b__4_37");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__4_37", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGearVrControllerTest/<>c.<.cctor>b__9_0
bool GlobalNamespace::OVRGearVrControllerTest::$$c::$_cctor$b__9_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGearVrControllerTest::$$c::<.cctor>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__9_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRGrabbable
#include "GlobalNamespace/OVRGrabbable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: OVRGrabber
#include "GlobalNamespace/OVRGrabber.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRGrabbable.get_allowOffhandGrab
bool GlobalNamespace::OVRGrabbable::get_allowOffhandGrab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::get_allowOffhandGrab");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_allowOffhandGrab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.get_isGrabbed
bool GlobalNamespace::OVRGrabbable::get_isGrabbed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::get_isGrabbed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isGrabbed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.get_snapPosition
bool GlobalNamespace::OVRGrabbable::get_snapPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::get_snapPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_snapPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.get_snapOrientation
bool GlobalNamespace::OVRGrabbable::get_snapOrientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::get_snapOrientation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_snapOrientation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.get_snapOffset
UnityEngine::Transform* GlobalNamespace::OVRGrabbable::get_snapOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::get_snapOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_snapOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.get_grabbedBy
GlobalNamespace::OVRGrabber* GlobalNamespace::OVRGrabbable::get_grabbedBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::get_grabbedBy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_grabbedBy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRGrabber*, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.get_grabbedTransform
UnityEngine::Transform* GlobalNamespace::OVRGrabbable::get_grabbedTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::get_grabbedTransform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_grabbedTransform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.get_grabbedRigidbody
UnityEngine::Rigidbody* GlobalNamespace::OVRGrabbable::get_grabbedRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::get_grabbedRigidbody");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_grabbedRigidbody", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.get_grabPoints
::Array<UnityEngine::Collider*>* GlobalNamespace::OVRGrabbable::get_grabPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::get_grabPoints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_grabPoints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Collider*>*, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.GrabBegin
void GlobalNamespace::OVRGrabbable::GrabBegin(GlobalNamespace::OVRGrabber* hand, UnityEngine::Collider* grabPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::GrabBegin");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GrabBegin", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hand, grabPoint)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hand, grabPoint);
}
// Autogenerated method: OVRGrabbable.GrabEnd
void GlobalNamespace::OVRGrabbable::GrabEnd(UnityEngine::Vector3 linearVelocity, UnityEngine::Vector3 angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::GrabEnd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GrabEnd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(linearVelocity, angularVelocity)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, linearVelocity, angularVelocity);
}
// Autogenerated method: OVRGrabbable.Awake
void GlobalNamespace::OVRGrabbable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.Start
void GlobalNamespace::OVRGrabbable::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabbable.OnDestroy
void GlobalNamespace::OVRGrabbable::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabbable::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRGrabber
#include "GlobalNamespace/OVRGrabber.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRGrabbable
#include "GlobalNamespace/OVRGrabbable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRGrabber.get_grabbedObject
GlobalNamespace::OVRGrabbable* GlobalNamespace::OVRGrabber::get_grabbedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::get_grabbedObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_grabbedObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRGrabbable*, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.ForceRelease
void GlobalNamespace::OVRGrabber::ForceRelease(GlobalNamespace::OVRGrabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::ForceRelease");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ForceRelease", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(grabbable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated method: OVRGrabber.Awake
void GlobalNamespace::OVRGrabber::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.Start
void GlobalNamespace::OVRGrabber::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.Update
void GlobalNamespace::OVRGrabber::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.FixedUpdate
void GlobalNamespace::OVRGrabber::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.OnUpdatedAnchors
void GlobalNamespace::OVRGrabber::OnUpdatedAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::OnUpdatedAnchors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnUpdatedAnchors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.OnDestroy
void GlobalNamespace::OVRGrabber::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.OnTriggerEnter
void GlobalNamespace::OVRGrabber::OnTriggerEnter(UnityEngine::Collider* otherCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(otherCollider)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, otherCollider);
}
// Autogenerated method: OVRGrabber.OnTriggerExit
void GlobalNamespace::OVRGrabber::OnTriggerExit(UnityEngine::Collider* otherCollider) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(otherCollider)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, otherCollider);
}
// Autogenerated method: OVRGrabber.CheckForGrabOrRelease
void GlobalNamespace::OVRGrabber::CheckForGrabOrRelease(float prevFlex) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::CheckForGrabOrRelease");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckForGrabOrRelease", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prevFlex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prevFlex);
}
// Autogenerated method: OVRGrabber.GrabBegin
void GlobalNamespace::OVRGrabber::GrabBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::GrabBegin");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GrabBegin", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.MoveGrabbedObject
void GlobalNamespace::OVRGrabber::MoveGrabbedObject(UnityEngine::Vector3 pos, UnityEngine::Quaternion rot, bool forceTeleport) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::MoveGrabbedObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveGrabbedObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pos, rot, forceTeleport)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos, rot, forceTeleport);
}
// Autogenerated method: OVRGrabber.GrabEnd
void GlobalNamespace::OVRGrabber::GrabEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::GrabEnd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GrabEnd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGrabber.GrabbableRelease
void GlobalNamespace::OVRGrabber::GrabbableRelease(UnityEngine::Vector3 linearVelocity, UnityEngine::Vector3 angularVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::GrabbableRelease");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GrabbableRelease", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(linearVelocity, angularVelocity)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, linearVelocity, angularVelocity);
}
// Autogenerated method: OVRGrabber.GrabVolumeEnable
void GlobalNamespace::OVRGrabber::GrabVolumeEnable(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::GrabVolumeEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GrabVolumeEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(enabled)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated method: OVRGrabber.OffhandGrabbed
void GlobalNamespace::OVRGrabber::OffhandGrabbed(GlobalNamespace::OVRGrabbable* grabbable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::OffhandGrabbed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OffhandGrabbed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(grabbable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, grabbable);
}
// Autogenerated method: OVRGrabber.SetPlayerIgnoreCollision
void GlobalNamespace::OVRGrabber::SetPlayerIgnoreCollision(UnityEngine::GameObject* grabbable, bool ignore) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::SetPlayerIgnoreCollision");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPlayerIgnoreCollision", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(grabbable, ignore)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, grabbable, ignore);
}
// Autogenerated method: OVRGrabber.<Awake>b__24_0
void GlobalNamespace::OVRGrabber::$Awake$b__24_0(GlobalNamespace::OVRCameraRig* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGrabber::<Awake>b__24_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__24_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(r))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, r);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRGridCube
#include "GlobalNamespace/OVRGridCube.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRCameraRig
#include "GlobalNamespace/OVRCameraRig.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRGridCube.Update
void GlobalNamespace::OVRGridCube::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGridCube.SetOVRCameraController
void GlobalNamespace::OVRGridCube::SetOVRCameraController(GlobalNamespace::OVRCameraRig*& cameraController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::SetOVRCameraController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetOVRCameraController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cameraController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cameraController);
}
// Autogenerated method: OVRGridCube.UpdateCubeGrid
void GlobalNamespace::OVRGridCube::UpdateCubeGrid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::UpdateCubeGrid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateCubeGrid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGridCube.CreateCubeGrid
void GlobalNamespace::OVRGridCube::CreateCubeGrid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::CreateCubeGrid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateCubeGrid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRGridCube.CubeGridSwitchColor
void GlobalNamespace::OVRGridCube::CubeGridSwitchColor(bool CubeSwitchColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRGridCube::CubeGridSwitchColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CubeGridSwitchColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(CubeSwitchColor)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, CubeSwitchColor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHand
#include "GlobalNamespace/OVRHand.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: OVRHand/HandFinger
#include "GlobalNamespace/OVRHand_HandFinger.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRPlugin/Step
#include "GlobalNamespace/OVRPlugin_Step.hpp"
// Including type: OVRSkeleton/SkeletonPoseData
#include "GlobalNamespace/OVRSkeleton_SkeletonPoseData.hpp"
// Including type: OVRSkeletonRenderer/SkeletonRendererData
#include "GlobalNamespace/OVRSkeletonRenderer_SkeletonRendererData.hpp"
// Including type: OVRMeshRenderer/MeshRendererData
#include "GlobalNamespace/OVRMeshRenderer_MeshRendererData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRHand.get_IsDataValid
bool GlobalNamespace::OVRHand::get_IsDataValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::get_IsDataValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsDataValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.set_IsDataValid
void GlobalNamespace::OVRHand::set_IsDataValid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::set_IsDataValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_IsDataValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHand.get_IsDataHighConfidence
bool GlobalNamespace::OVRHand::get_IsDataHighConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::get_IsDataHighConfidence");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsDataHighConfidence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.set_IsDataHighConfidence
void GlobalNamespace::OVRHand::set_IsDataHighConfidence(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::set_IsDataHighConfidence");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_IsDataHighConfidence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHand.get_IsTracked
bool GlobalNamespace::OVRHand::get_IsTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::get_IsTracked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsTracked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.set_IsTracked
void GlobalNamespace::OVRHand::set_IsTracked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::set_IsTracked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_IsTracked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHand.get_IsSystemGestureInProgress
bool GlobalNamespace::OVRHand::get_IsSystemGestureInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::get_IsSystemGestureInProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsSystemGestureInProgress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.set_IsSystemGestureInProgress
void GlobalNamespace::OVRHand::set_IsSystemGestureInProgress(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::set_IsSystemGestureInProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_IsSystemGestureInProgress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHand.get_IsPointerPoseValid
bool GlobalNamespace::OVRHand::get_IsPointerPoseValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::get_IsPointerPoseValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsPointerPoseValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.set_IsPointerPoseValid
void GlobalNamespace::OVRHand::set_IsPointerPoseValid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::set_IsPointerPoseValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_IsPointerPoseValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHand.get_PointerPose
UnityEngine::Transform* GlobalNamespace::OVRHand::get_PointerPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::get_PointerPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_PointerPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.set_PointerPose
void GlobalNamespace::OVRHand::set_PointerPose(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::set_PointerPose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_PointerPose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHand.get_HandScale
float GlobalNamespace::OVRHand::get_HandScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::get_HandScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HandScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.set_HandScale
void GlobalNamespace::OVRHand::set_HandScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::set_HandScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_HandScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHand.get_HandConfidence
GlobalNamespace::OVRHand::TrackingConfidence GlobalNamespace::OVRHand::get_HandConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::get_HandConfidence");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HandConfidence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRHand::TrackingConfidence, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.set_HandConfidence
void GlobalNamespace::OVRHand::set_HandConfidence(GlobalNamespace::OVRHand::TrackingConfidence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::set_HandConfidence");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_HandConfidence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRHand.Awake
void GlobalNamespace::OVRHand::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.Update
void GlobalNamespace::OVRHand::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.FixedUpdate
void GlobalNamespace::OVRHand::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.GetHandState
void GlobalNamespace::OVRHand::GetHandState(GlobalNamespace::OVRPlugin::Step step) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::GetHandState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHandState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(step)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, step);
}
// Autogenerated method: OVRHand.GetFingerIsPinching
bool GlobalNamespace::OVRHand::GetFingerIsPinching(GlobalNamespace::OVRHand::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::GetFingerIsPinching");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFingerIsPinching", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(finger)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, finger);
}
// Autogenerated method: OVRHand.GetFingerPinchStrength
float GlobalNamespace::OVRHand::GetFingerPinchStrength(GlobalNamespace::OVRHand::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::GetFingerPinchStrength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFingerPinchStrength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(finger)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, finger);
}
// Autogenerated method: OVRHand.GetFingerConfidence
GlobalNamespace::OVRHand::TrackingConfidence GlobalNamespace::OVRHand::GetFingerConfidence(GlobalNamespace::OVRHand::HandFinger finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::GetFingerConfidence");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFingerConfidence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(finger)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRHand::TrackingConfidence, false>(this, ___internal__method, finger);
}
// Autogenerated method: OVRHand.OVRSkeleton.IOVRSkeletonDataProvider.GetSkeletonType
GlobalNamespace::OVRSkeleton::SkeletonType GlobalNamespace::OVRHand::GlobalNamespace_OVRSkeleton_IOVRSkeletonDataProvider_GetSkeletonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::OVRSkeleton.IOVRSkeletonDataProvider.GetSkeletonType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OVRSkeleton.IOVRSkeletonDataProvider.GetSkeletonType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRSkeleton::SkeletonType, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.OVRSkeleton.IOVRSkeletonDataProvider.GetSkeletonPoseData
GlobalNamespace::OVRSkeleton::SkeletonPoseData GlobalNamespace::OVRHand::GlobalNamespace_OVRSkeleton_IOVRSkeletonDataProvider_GetSkeletonPoseData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::OVRSkeleton.IOVRSkeletonDataProvider.GetSkeletonPoseData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OVRSkeleton.IOVRSkeletonDataProvider.GetSkeletonPoseData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRSkeleton::SkeletonPoseData, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.OVRSkeletonRenderer.IOVRSkeletonRendererDataProvider.GetSkeletonRendererData
GlobalNamespace::OVRSkeletonRenderer::SkeletonRendererData GlobalNamespace::OVRHand::GlobalNamespace_OVRSkeletonRenderer_IOVRSkeletonRendererDataProvider_GetSkeletonRendererData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::OVRSkeletonRenderer.IOVRSkeletonRendererDataProvider.GetSkeletonRendererData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OVRSkeletonRenderer.IOVRSkeletonRendererDataProvider.GetSkeletonRendererData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRSkeletonRenderer::SkeletonRendererData, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.OVRMesh.IOVRMeshDataProvider.GetMeshType
GlobalNamespace::OVRMesh::MeshType GlobalNamespace::OVRHand::GlobalNamespace_OVRMesh_IOVRMeshDataProvider_GetMeshType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::OVRMesh.IOVRMeshDataProvider.GetMeshType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OVRMesh.IOVRMeshDataProvider.GetMeshType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRMesh::MeshType, false>(this, ___internal__method);
}
// Autogenerated method: OVRHand.OVRMeshRenderer.IOVRMeshRendererDataProvider.GetMeshRendererData
GlobalNamespace::OVRMeshRenderer::MeshRendererData GlobalNamespace::OVRHand::GlobalNamespace_OVRMeshRenderer_IOVRMeshRendererDataProvider_GetMeshRendererData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::OVRMeshRenderer.IOVRMeshRendererDataProvider.GetMeshRendererData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OVRMeshRenderer.IOVRMeshRendererDataProvider.GetMeshRendererData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRMeshRenderer::MeshRendererData, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHand/Hand
#include "GlobalNamespace/OVRHand.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRHand/Hand None
GlobalNamespace::OVRHand::Hand GlobalNamespace::OVRHand::Hand::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::Hand::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::Hand>("", "OVRHand/Hand", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/Hand None
void GlobalNamespace::OVRHand::Hand::_set_None(GlobalNamespace::OVRHand::Hand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::Hand::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/Hand", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHand/Hand HandLeft
GlobalNamespace::OVRHand::Hand GlobalNamespace::OVRHand::Hand::_get_HandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::Hand::_get_HandLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::Hand>("", "OVRHand/Hand", "HandLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/Hand HandLeft
void GlobalNamespace::OVRHand::Hand::_set_HandLeft(GlobalNamespace::OVRHand::Hand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::Hand::_set_HandLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/Hand", "HandLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHand/Hand HandRight
GlobalNamespace::OVRHand::Hand GlobalNamespace::OVRHand::Hand::_get_HandRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::Hand::_get_HandRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::Hand>("", "OVRHand/Hand", "HandRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/Hand HandRight
void GlobalNamespace::OVRHand::Hand::_set_HandRight(GlobalNamespace::OVRHand::Hand value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::Hand::_set_HandRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/Hand", "HandRight", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHand/HandFinger
#include "GlobalNamespace/OVRHand_HandFinger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRHand/HandFinger Thumb
GlobalNamespace::OVRHand::HandFinger GlobalNamespace::OVRHand::HandFinger::_get_Thumb() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_get_Thumb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::HandFinger>("", "OVRHand/HandFinger", "Thumb"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/HandFinger Thumb
void GlobalNamespace::OVRHand::HandFinger::_set_Thumb(GlobalNamespace::OVRHand::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_set_Thumb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/HandFinger", "Thumb", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHand/HandFinger Index
GlobalNamespace::OVRHand::HandFinger GlobalNamespace::OVRHand::HandFinger::_get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_get_Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::HandFinger>("", "OVRHand/HandFinger", "Index"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/HandFinger Index
void GlobalNamespace::OVRHand::HandFinger::_set_Index(GlobalNamespace::OVRHand::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_set_Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/HandFinger", "Index", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHand/HandFinger Middle
GlobalNamespace::OVRHand::HandFinger GlobalNamespace::OVRHand::HandFinger::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::HandFinger>("", "OVRHand/HandFinger", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/HandFinger Middle
void GlobalNamespace::OVRHand::HandFinger::_set_Middle(GlobalNamespace::OVRHand::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/HandFinger", "Middle", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHand/HandFinger Ring
GlobalNamespace::OVRHand::HandFinger GlobalNamespace::OVRHand::HandFinger::_get_Ring() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_get_Ring");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::HandFinger>("", "OVRHand/HandFinger", "Ring"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/HandFinger Ring
void GlobalNamespace::OVRHand::HandFinger::_set_Ring(GlobalNamespace::OVRHand::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_set_Ring");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/HandFinger", "Ring", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHand/HandFinger Pinky
GlobalNamespace::OVRHand::HandFinger GlobalNamespace::OVRHand::HandFinger::_get_Pinky() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_get_Pinky");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::HandFinger>("", "OVRHand/HandFinger", "Pinky"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/HandFinger Pinky
void GlobalNamespace::OVRHand::HandFinger::_set_Pinky(GlobalNamespace::OVRHand::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_set_Pinky");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/HandFinger", "Pinky", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHand/HandFinger Max
GlobalNamespace::OVRHand::HandFinger GlobalNamespace::OVRHand::HandFinger::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::HandFinger>("", "OVRHand/HandFinger", "Max"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/HandFinger Max
void GlobalNamespace::OVRHand::HandFinger::_set_Max(GlobalNamespace::OVRHand::HandFinger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::HandFinger::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/HandFinger", "Max", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHand/TrackingConfidence
#include "GlobalNamespace/OVRHand.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRHand/TrackingConfidence Low
GlobalNamespace::OVRHand::TrackingConfidence GlobalNamespace::OVRHand::TrackingConfidence::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::TrackingConfidence::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::TrackingConfidence>("", "OVRHand/TrackingConfidence", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/TrackingConfidence Low
void GlobalNamespace::OVRHand::TrackingConfidence::_set_Low(GlobalNamespace::OVRHand::TrackingConfidence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::TrackingConfidence::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/TrackingConfidence", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVRHand/TrackingConfidence High
GlobalNamespace::OVRHand::TrackingConfidence GlobalNamespace::OVRHand::TrackingConfidence::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::TrackingConfidence::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHand::TrackingConfidence>("", "OVRHand/TrackingConfidence", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVRHand/TrackingConfidence High
void GlobalNamespace::OVRHand::TrackingConfidence::_set_High(GlobalNamespace::OVRHand::TrackingConfidence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHand::TrackingConfidence::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHand/TrackingConfidence", "High", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRHandTest
#include "GlobalNamespace/OVRHandTest.hpp"
// Including type: OVRHandTest/BoolMonitor
#include "GlobalNamespace/OVRHandTest_BoolMonitor.hpp"
// Including type: OVRHandTest/<>c
#include "GlobalNamespace/OVRHandTest_--c.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVRPlugin/Mesh
#include "GlobalNamespace/OVRPlugin_Mesh.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String prevConnected
::Il2CppString* GlobalNamespace::OVRHandTest::_get_prevConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_get_prevConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OVRHandTest", "prevConnected"));
}
// Autogenerated static field setter
// Set static field: static private System.String prevConnected
void GlobalNamespace::OVRHandTest::_set_prevConnected(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_set_prevConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHandTest", "prevConnected", value));
}
// Autogenerated static field getter
// Get static field: static private OVRHandTest/BoolMonitor controllers
GlobalNamespace::OVRHandTest::BoolMonitor* GlobalNamespace::OVRHandTest::_get_controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_get_controllers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHandTest::BoolMonitor*>("", "OVRHandTest", "controllers"));
}
// Autogenerated static field setter
// Set static field: static private OVRHandTest/BoolMonitor controllers
void GlobalNamespace::OVRHandTest::_set_controllers(GlobalNamespace::OVRHandTest::BoolMonitor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::_set_controllers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRHandTest", "controllers", value));
}
// Autogenerated method: OVRHandTest.Start
void GlobalNamespace::OVRHandTest::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHandTest.Update
void GlobalNamespace::OVRHandTest::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHandTest..cctor
void GlobalNamespace::OVRHandTest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "OVRHandTest", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRHandTest/BoolMonitor
#include "GlobalNamespace/OVRHandTest_BoolMonitor.hpp"
// Including type: OVRHandTest/BoolMonitor/BoolGenerator
#include "GlobalNamespace/OVRHandTest_BoolMonitor_BoolGenerator.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRHandTest/BoolMonitor.Update
void GlobalNamespace::OVRHandTest::BoolMonitor::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRHandTest/BoolMonitor.AppendToStringBuilder
void GlobalNamespace::OVRHandTest::BoolMonitor::AppendToStringBuilder(System::Text::StringBuilder*& sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::AppendToStringBuilder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AppendToStringBuilder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sb)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRHandTest/BoolMonitor/BoolGenerator
#include "GlobalNamespace/OVRHandTest_BoolMonitor_BoolGenerator.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRHandTest/BoolMonitor/BoolGenerator.Invoke
bool GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator::Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHandTest/BoolMonitor/BoolGenerator.BeginInvoke
System::IAsyncResult* GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator::BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: OVRHandTest/BoolMonitor/BoolGenerator.EndInvoke
bool GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator::EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRHandTest/<>c
#include "GlobalNamespace/OVRHandTest_--c.hpp"
// Including type: OVRHandTest/BoolMonitor/BoolGenerator
#include "GlobalNamespace/OVRHandTest_BoolMonitor_BoolGenerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRHandTest/<>c <>9
GlobalNamespace::OVRHandTest::$$c* GlobalNamespace::OVRHandTest::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHandTest::$$c*>("", "OVRHandTest/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRHandTest/<>c <>9
void GlobalNamespace::OVRHandTest::$$c::_set_$$9(GlobalNamespace::OVRHandTest::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRHandTest/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRHandTest/BoolMonitor/BoolGenerator <>9__14_0
GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRHandTest::$$c::_get_$$9__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::$$c::_get_$$9__14_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator*>("", "OVRHandTest/<>c", "<>9__14_0")));
}
// Autogenerated static field setter
// Set static field: static public OVRHandTest/BoolMonitor/BoolGenerator <>9__14_0
void GlobalNamespace::OVRHandTest::$$c::_set_$$9__14_0(GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::$$c::_set_$$9__14_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRHandTest/<>c", "<>9__14_0", value)));
}
// Autogenerated static field getter
// Get static field: static public OVRHandTest/BoolMonitor/BoolGenerator <>9__14_1
GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator* GlobalNamespace::OVRHandTest::$$c::_get_$$9__14_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::$$c::_get_$$9__14_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator*>("", "OVRHandTest/<>c", "<>9__14_1")));
}
// Autogenerated static field setter
// Set static field: static public OVRHandTest/BoolMonitor/BoolGenerator <>9__14_1
void GlobalNamespace::OVRHandTest::$$c::_set_$$9__14_1(GlobalNamespace::OVRHandTest::BoolMonitor::BoolGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::$$c::_set_$$9__14_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRHandTest/<>c", "<>9__14_1", value)));
}
// Autogenerated method: OVRHandTest/<>c..cctor
void GlobalNamespace::OVRHandTest::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRHandTest/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRHandTest/<>c.<Start>b__14_0
bool GlobalNamespace::OVRHandTest::$$c::$Start$b__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::$$c::<Start>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__14_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHandTest/<>c.<Start>b__14_1
bool GlobalNamespace::OVRHandTest::$$c::$Start$b__14_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::$$c::<Start>b__14_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__14_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRHandTest/<>c.<.cctor>b__19_0
bool GlobalNamespace::OVRHandTest::$$c::$_cctor$b__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRHandTest::$$c::<.cctor>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__19_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMesh
#include "GlobalNamespace/OVRMesh.hpp"
// Including type: OVRMesh/IOVRMeshDataProvider
#include "GlobalNamespace/OVRMesh_IOVRMeshDataProvider.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRMesh.get_IsInitialized
bool GlobalNamespace::OVRMesh::get_IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::get_IsInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMesh.set_IsInitialized
void GlobalNamespace::OVRMesh::set_IsInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::set_IsInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_IsInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMesh.get_Mesh
UnityEngine::Mesh* GlobalNamespace::OVRMesh::get_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::get_Mesh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Mesh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: OVRMesh.Awake
void GlobalNamespace::OVRMesh::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMesh.Initialize
void GlobalNamespace::OVRMesh::Initialize(GlobalNamespace::OVRMesh::MeshType meshType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(meshType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, meshType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMesh/IOVRMeshDataProvider
#include "GlobalNamespace/OVRMesh_IOVRMeshDataProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRMesh/IOVRMeshDataProvider.GetMeshType
GlobalNamespace::OVRMesh::MeshType GlobalNamespace::OVRMesh::IOVRMeshDataProvider::GlobalNamespace_OVRMesh_IOVRMeshDataProvider_GetMeshType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::IOVRMeshDataProvider::GetMeshType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMeshType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRMesh::MeshType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMesh/MeshType
#include "GlobalNamespace/OVRMesh.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRMesh/MeshType None
GlobalNamespace::OVRMesh::MeshType GlobalNamespace::OVRMesh::MeshType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::MeshType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMesh::MeshType>("", "OVRMesh/MeshType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRMesh/MeshType None
void GlobalNamespace::OVRMesh::MeshType::_set_None(GlobalNamespace::OVRMesh::MeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::MeshType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMesh/MeshType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRMesh/MeshType HandLeft
GlobalNamespace::OVRMesh::MeshType GlobalNamespace::OVRMesh::MeshType::_get_HandLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::MeshType::_get_HandLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMesh::MeshType>("", "OVRMesh/MeshType", "HandLeft"));
}
// Autogenerated static field setter
// Set static field: static public OVRMesh/MeshType HandLeft
void GlobalNamespace::OVRMesh::MeshType::_set_HandLeft(GlobalNamespace::OVRMesh::MeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::MeshType::_set_HandLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMesh/MeshType", "HandLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OVRMesh/MeshType HandRight
GlobalNamespace::OVRMesh::MeshType GlobalNamespace::OVRMesh::MeshType::_get_HandRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::MeshType::_get_HandRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OVRMesh::MeshType>("", "OVRMesh/MeshType", "HandRight"));
}
// Autogenerated static field setter
// Set static field: static public OVRMesh/MeshType HandRight
void GlobalNamespace::OVRMesh::MeshType::_set_HandRight(GlobalNamespace::OVRMesh::MeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMesh::MeshType::_set_HandRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRMesh/MeshType", "HandRight", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMeshRenderer
#include "GlobalNamespace/OVRMeshRenderer.hpp"
// Including type: OVRMeshRenderer/IOVRMeshRendererDataProvider
#include "GlobalNamespace/OVRMeshRenderer_IOVRMeshRendererDataProvider.hpp"
// Including type: OVRMeshRenderer/MeshRendererData
#include "GlobalNamespace/OVRMeshRenderer_MeshRendererData.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: OVRMesh
#include "GlobalNamespace/OVRMesh.hpp"
// Including type: OVRSkeleton
#include "GlobalNamespace/OVRSkeleton.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRMeshRenderer.get_IsInitialized
bool GlobalNamespace::OVRMeshRenderer::get_IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::get_IsInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer.set_IsInitialized
void GlobalNamespace::OVRMeshRenderer::set_IsInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::set_IsInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_IsInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMeshRenderer.get_IsDataValid
bool GlobalNamespace::OVRMeshRenderer::get_IsDataValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::get_IsDataValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsDataValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer.set_IsDataValid
void GlobalNamespace::OVRMeshRenderer::set_IsDataValid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::set_IsDataValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_IsDataValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMeshRenderer.get_IsDataHighConfidence
bool GlobalNamespace::OVRMeshRenderer::get_IsDataHighConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::get_IsDataHighConfidence");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsDataHighConfidence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer.set_IsDataHighConfidence
void GlobalNamespace::OVRMeshRenderer::set_IsDataHighConfidence(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::set_IsDataHighConfidence");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_IsDataHighConfidence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMeshRenderer.get_ShouldUseSystemGestureMaterial
bool GlobalNamespace::OVRMeshRenderer::get_ShouldUseSystemGestureMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::get_ShouldUseSystemGestureMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ShouldUseSystemGestureMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer.set_ShouldUseSystemGestureMaterial
void GlobalNamespace::OVRMeshRenderer::set_ShouldUseSystemGestureMaterial(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::set_ShouldUseSystemGestureMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_ShouldUseSystemGestureMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRMeshRenderer.Awake
void GlobalNamespace::OVRMeshRenderer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer.Start
void GlobalNamespace::OVRMeshRenderer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer.Initialize
void GlobalNamespace::OVRMeshRenderer::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer.Update
void GlobalNamespace::OVRMeshRenderer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMeshRenderer/IOVRMeshRendererDataProvider
#include "GlobalNamespace/OVRMeshRenderer_IOVRMeshRendererDataProvider.hpp"
// Including type: OVRMeshRenderer/MeshRendererData
#include "GlobalNamespace/OVRMeshRenderer_MeshRendererData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRMeshRenderer/IOVRMeshRendererDataProvider.GetMeshRendererData
GlobalNamespace::OVRMeshRenderer::MeshRendererData GlobalNamespace::OVRMeshRenderer::IOVRMeshRendererDataProvider::GlobalNamespace_OVRMeshRenderer_IOVRMeshRendererDataProvider_GetMeshRendererData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::IOVRMeshRendererDataProvider::GetMeshRendererData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMeshRendererData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRMeshRenderer::MeshRendererData, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRMeshRenderer/MeshRendererData
#include "GlobalNamespace/OVRMeshRenderer_MeshRendererData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRMeshRenderer/MeshRendererData.get_IsDataValid
bool GlobalNamespace::OVRMeshRenderer::MeshRendererData::get_IsDataValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::MeshRendererData::get_IsDataValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_IsDataValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer/MeshRendererData.set_IsDataValid
void GlobalNamespace::OVRMeshRenderer::MeshRendererData::set_IsDataValid(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::MeshRendererData::set_IsDataValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_IsDataValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: OVRMeshRenderer/MeshRendererData.get_IsDataHighConfidence
bool GlobalNamespace::OVRMeshRenderer::MeshRendererData::get_IsDataHighConfidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::MeshRendererData::get_IsDataHighConfidence");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_IsDataHighConfidence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer/MeshRendererData.set_IsDataHighConfidence
void GlobalNamespace::OVRMeshRenderer::MeshRendererData::set_IsDataHighConfidence(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::MeshRendererData::set_IsDataHighConfidence");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_IsDataHighConfidence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: OVRMeshRenderer/MeshRendererData.get_ShouldUseSystemGestureMaterial
bool GlobalNamespace::OVRMeshRenderer::MeshRendererData::get_ShouldUseSystemGestureMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::MeshRendererData::get_ShouldUseSystemGestureMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_ShouldUseSystemGestureMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: OVRMeshRenderer/MeshRendererData.set_ShouldUseSystemGestureMaterial
void GlobalNamespace::OVRMeshRenderer::MeshRendererData::set_ShouldUseSystemGestureMaterial(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OVRMeshRenderer::MeshRendererData::set_ShouldUseSystemGestureMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_ShouldUseSystemGestureMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
