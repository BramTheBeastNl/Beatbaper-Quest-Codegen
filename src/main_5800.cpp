// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Constraints.MsgUtils/<>c__DisplayClass14_9
#include "NUnit/Framework/Constraints/MsgUtils_--c__DisplayClass14_9.hpp"
// Including type: NUnit.Framework.Constraints.ValueFormatter
#include "NUnit/Framework/Constraints/ValueFormatter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Constraints.MsgUtils/<>c__DisplayClass14_9.<.cctor>b__20
::Il2CppString* NUnit::Framework::Constraints::MsgUtils::$$c__DisplayClass14_9::$_cctor$b__20(::Il2CppObject* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::MsgUtils::$$c__DisplayClass14_9::<.cctor>b__20");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__20", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, val);
}
// Writing MetadataGetter for method: MsgUtils::$$c__DisplayClass14_9::$_cctor$b__20
// Il2CppName: <.cctor>b__20
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (MsgUtils::$$c__DisplayClass14_9::*)(::Il2CppObject*)>(&MsgUtils::$$c__DisplayClass14_9::$_cctor$b__20)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MsgUtils::$$c__DisplayClass14_9*), "<.cctor>b__20", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: MsgUtils::$$c__DisplayClass14_9::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MsgUtils::$$c__DisplayClass14_9::*)()>(&MsgUtils::$$c__DisplayClass14_9::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MsgUtils::$$c__DisplayClass14_9*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MsgUtils::$$c__DisplayClass14_9::*)()>(&MsgUtils::$$c__DisplayClass14_9::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MsgUtils::$$c__DisplayClass14_9*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Constraints.MsgUtils/<>c
#include "NUnit/Framework/Constraints/MsgUtils_--c.hpp"
// Including type: NUnit.Framework.Constraints.ValueFormatter
#include "NUnit/Framework/Constraints/ValueFormatter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly NUnit.Framework.Constraints.MsgUtils/<>c <>9
NUnit::Framework::Constraints::MsgUtils::$$c* NUnit::Framework::Constraints::MsgUtils::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::MsgUtils::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<NUnit::Framework::Constraints::MsgUtils::$$c*>("NUnit.Framework.Constraints", "MsgUtils/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly NUnit.Framework.Constraints.MsgUtils/<>c <>9
void NUnit::Framework::Constraints::MsgUtils::$$c::_set_$$9(NUnit::Framework::Constraints::MsgUtils::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::MsgUtils::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("NUnit.Framework.Constraints", "MsgUtils/<>c", "<>9", value)));
}
// Autogenerated method: NUnit.Framework.Constraints.MsgUtils/<>c..cctor
void NUnit::Framework::Constraints::MsgUtils::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::MsgUtils::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "MsgUtils/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Constraints.MsgUtils/<>c.<.cctor>b__14_0
::Il2CppString* NUnit::Framework::Constraints::MsgUtils::$$c::$_cctor$b__14_0(::Il2CppObject* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::MsgUtils::$$c::<.cctor>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, val);
}
// Autogenerated method: NUnit.Framework.Constraints.MsgUtils/<>c.<.cctor>b__14_1
NUnit::Framework::Constraints::ValueFormatter* NUnit::Framework::Constraints::MsgUtils::$$c::$_cctor$b__14_1(NUnit::Framework::Constraints::ValueFormatter* next) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::MsgUtils::$$c::<.cctor>b__14_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__14_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(next)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::ValueFormatter*, false>(this, ___internal__method, next);
}
// Autogenerated method: NUnit.Framework.Constraints.MsgUtils/<>c.<.cctor>b__14_2
NUnit::Framework::Constraints::ValueFormatter* NUnit::Framework::Constraints::MsgUtils::$$c::$_cctor$b__14_2(NUnit::Framework::Constraints::ValueFormatter* next) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::MsgUtils::$$c::<.cctor>b__14_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__14_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(next)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::ValueFormatter*, false>(this, ___internal__method, next);
}
// Autogenerated method: NUnit.Framework.Constraints.MsgUtils/<>c.<.cctor>b__14_3
NUnit::Framework::Constraints::ValueFormatter* NUnit::Framework::Constraints::MsgUtils::$$c::$_cctor$b__14_3(NUnit::Framework::Constraints::ValueFormatter* next) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::MsgUtils::$$c::<.cctor>b__14_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__14_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(next)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::ValueFormatter*, false>(this, ___internal__method, next);
}
// Autogenerated method: NUnit.Framework.Constraints.MsgUtils/<>c.<.cctor>b__14_4
NUnit::Framework::Constraints::ValueFormatter* NUnit::Framework::Constraints::MsgUtils::$$c::$_cctor$b__14_4(NUnit::Framework::Constraints::ValueFormatter* next) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::MsgUtils::$$c::<.cctor>b__14_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__14_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(next)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::ValueFormatter*, false>(this, ___internal__method, next);
}
// Autogenerated method: NUnit.Framework.Constraints.MsgUtils/<>c.<.cctor>b__14_5
NUnit::Framework::Constraints::ValueFormatter* NUnit::Framework::Constraints::MsgUtils::$$c::$_cctor$b__14_5(NUnit::Framework::Constraints::ValueFormatter* next) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::MsgUtils::$$c::<.cctor>b__14_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__14_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(next)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::ValueFormatter*, false>(this, ___internal__method, next);
}
// Autogenerated method: NUnit.Framework.Constraints.MsgUtils/<>c.<.cctor>b__14_6
NUnit::Framework::Constraints::ValueFormatter* NUnit::Framework::Constraints::MsgUtils::$$c::$_cctor$b__14_6(NUnit::Framework::Constraints::ValueFormatter* next) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::MsgUtils::$$c::<.cctor>b__14_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__14_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(next)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::ValueFormatter*, false>(this, ___internal__method, next);
}
// Autogenerated method: NUnit.Framework.Constraints.MsgUtils/<>c.<.cctor>b__14_7
NUnit::Framework::Constraints::ValueFormatter* NUnit::Framework::Constraints::MsgUtils::$$c::$_cctor$b__14_7(NUnit::Framework::Constraints::ValueFormatter* next) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::MsgUtils::$$c::<.cctor>b__14_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__14_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(next)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::ValueFormatter*, false>(this, ___internal__method, next);
}
// Autogenerated method: NUnit.Framework.Constraints.MsgUtils/<>c.<.cctor>b__14_8
NUnit::Framework::Constraints::ValueFormatter* NUnit::Framework::Constraints::MsgUtils::$$c::$_cctor$b__14_8(NUnit::Framework::Constraints::ValueFormatter* next) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::MsgUtils::$$c::<.cctor>b__14_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__14_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(next)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::ValueFormatter*, false>(this, ___internal__method, next);
}
// Autogenerated method: NUnit.Framework.Constraints.MsgUtils/<>c.<.cctor>b__14_9
NUnit::Framework::Constraints::ValueFormatter* NUnit::Framework::Constraints::MsgUtils::$$c::$_cctor$b__14_9(NUnit::Framework::Constraints::ValueFormatter* next) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::MsgUtils::$$c::<.cctor>b__14_9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__14_9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(next)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::ValueFormatter*, false>(this, ___internal__method, next);
}
// Autogenerated method: NUnit.Framework.Constraints.MsgUtils/<>c.<.cctor>b__14_10
NUnit::Framework::Constraints::ValueFormatter* NUnit::Framework::Constraints::MsgUtils::$$c::$_cctor$b__14_10(NUnit::Framework::Constraints::ValueFormatter* next) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::MsgUtils::$$c::<.cctor>b__14_10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__14_10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(next)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::ValueFormatter*, false>(this, ___internal__method, next);
}
// Writing MetadataGetter for method: MsgUtils::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&MsgUtils::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MsgUtils::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MsgUtils::$$c::$_cctor$b__14_0
// Il2CppName: <.cctor>b__14_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (MsgUtils::$$c::*)(::Il2CppObject*)>(&MsgUtils::$$c::$_cctor$b__14_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MsgUtils::$$c*), "<.cctor>b__14_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: MsgUtils::$$c::$_cctor$b__14_1
// Il2CppName: <.cctor>b__14_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Constraints::ValueFormatter* (MsgUtils::$$c::*)(NUnit::Framework::Constraints::ValueFormatter*)>(&MsgUtils::$$c::$_cctor$b__14_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MsgUtils::$$c*), "<.cctor>b__14_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::ValueFormatter*>()});
  }
};
// Writing MetadataGetter for method: MsgUtils::$$c::$_cctor$b__14_2
// Il2CppName: <.cctor>b__14_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Constraints::ValueFormatter* (MsgUtils::$$c::*)(NUnit::Framework::Constraints::ValueFormatter*)>(&MsgUtils::$$c::$_cctor$b__14_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MsgUtils::$$c*), "<.cctor>b__14_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::ValueFormatter*>()});
  }
};
// Writing MetadataGetter for method: MsgUtils::$$c::$_cctor$b__14_3
// Il2CppName: <.cctor>b__14_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Constraints::ValueFormatter* (MsgUtils::$$c::*)(NUnit::Framework::Constraints::ValueFormatter*)>(&MsgUtils::$$c::$_cctor$b__14_3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MsgUtils::$$c*), "<.cctor>b__14_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::ValueFormatter*>()});
  }
};
// Writing MetadataGetter for method: MsgUtils::$$c::$_cctor$b__14_4
// Il2CppName: <.cctor>b__14_4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Constraints::ValueFormatter* (MsgUtils::$$c::*)(NUnit::Framework::Constraints::ValueFormatter*)>(&MsgUtils::$$c::$_cctor$b__14_4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MsgUtils::$$c*), "<.cctor>b__14_4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::ValueFormatter*>()});
  }
};
// Writing MetadataGetter for method: MsgUtils::$$c::$_cctor$b__14_5
// Il2CppName: <.cctor>b__14_5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Constraints::ValueFormatter* (MsgUtils::$$c::*)(NUnit::Framework::Constraints::ValueFormatter*)>(&MsgUtils::$$c::$_cctor$b__14_5)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MsgUtils::$$c*), "<.cctor>b__14_5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::ValueFormatter*>()});
  }
};
// Writing MetadataGetter for method: MsgUtils::$$c::$_cctor$b__14_6
// Il2CppName: <.cctor>b__14_6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Constraints::ValueFormatter* (MsgUtils::$$c::*)(NUnit::Framework::Constraints::ValueFormatter*)>(&MsgUtils::$$c::$_cctor$b__14_6)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MsgUtils::$$c*), "<.cctor>b__14_6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::ValueFormatter*>()});
  }
};
// Writing MetadataGetter for method: MsgUtils::$$c::$_cctor$b__14_7
// Il2CppName: <.cctor>b__14_7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Constraints::ValueFormatter* (MsgUtils::$$c::*)(NUnit::Framework::Constraints::ValueFormatter*)>(&MsgUtils::$$c::$_cctor$b__14_7)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MsgUtils::$$c*), "<.cctor>b__14_7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::ValueFormatter*>()});
  }
};
// Writing MetadataGetter for method: MsgUtils::$$c::$_cctor$b__14_8
// Il2CppName: <.cctor>b__14_8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Constraints::ValueFormatter* (MsgUtils::$$c::*)(NUnit::Framework::Constraints::ValueFormatter*)>(&MsgUtils::$$c::$_cctor$b__14_8)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MsgUtils::$$c*), "<.cctor>b__14_8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::ValueFormatter*>()});
  }
};
// Writing MetadataGetter for method: MsgUtils::$$c::$_cctor$b__14_9
// Il2CppName: <.cctor>b__14_9
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Constraints::ValueFormatter* (MsgUtils::$$c::*)(NUnit::Framework::Constraints::ValueFormatter*)>(&MsgUtils::$$c::$_cctor$b__14_9)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MsgUtils::$$c*), "<.cctor>b__14_9", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::ValueFormatter*>()});
  }
};
// Writing MetadataGetter for method: MsgUtils::$$c::$_cctor$b__14_10
// Il2CppName: <.cctor>b__14_10
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Constraints::ValueFormatter* (MsgUtils::$$c::*)(NUnit::Framework::Constraints::ValueFormatter*)>(&MsgUtils::$$c::$_cctor$b__14_10)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MsgUtils::$$c*), "<.cctor>b__14_10", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::ValueFormatter*>()});
  }
};
// Writing MetadataGetter for method: MsgUtils::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MsgUtils::$$c::*)()>(&MsgUtils::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MsgUtils::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MsgUtils::$$c::*)()>(&MsgUtils::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MsgUtils::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Constraints.Numerics
#include "NUnit/Framework/Constraints/Numerics.hpp"
// Including type: NUnit.Framework.Constraints.Tolerance
#include "NUnit/Framework/Constraints/Tolerance.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Constraints.Numerics.IsNumericType
bool NUnit::Framework::Constraints::Numerics::IsNumericType(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::Numerics::IsNumericType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "Numerics", "IsNumericType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: NUnit.Framework.Constraints.Numerics.IsFloatingPointNumeric
bool NUnit::Framework::Constraints::Numerics::IsFloatingPointNumeric(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::Numerics::IsFloatingPointNumeric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "Numerics", "IsFloatingPointNumeric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: NUnit.Framework.Constraints.Numerics.IsFixedPointNumeric
bool NUnit::Framework::Constraints::Numerics::IsFixedPointNumeric(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::Numerics::IsFixedPointNumeric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "Numerics", "IsFixedPointNumeric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: NUnit.Framework.Constraints.Numerics.AreEqual
bool NUnit::Framework::Constraints::Numerics::AreEqual(::Il2CppObject* expected, ::Il2CppObject* actual, NUnit::Framework::Constraints::Tolerance*& tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::Numerics::AreEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "Numerics", "AreEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(actual), ::il2cpp_utils::ExtractType(tolerance)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, expected, actual, tolerance);
}
// Autogenerated method: NUnit.Framework.Constraints.Numerics.AreEqual
bool NUnit::Framework::Constraints::Numerics::AreEqual(double expected, double actual, NUnit::Framework::Constraints::Tolerance*& tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::Numerics::AreEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "Numerics", "AreEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(actual), ::il2cpp_utils::ExtractType(tolerance)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, expected, actual, tolerance);
}
// Autogenerated method: NUnit.Framework.Constraints.Numerics.AreEqual
bool NUnit::Framework::Constraints::Numerics::AreEqual(float expected, float actual, NUnit::Framework::Constraints::Tolerance*& tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::Numerics::AreEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "Numerics", "AreEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(actual), ::il2cpp_utils::ExtractType(tolerance)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, expected, actual, tolerance);
}
// Autogenerated method: NUnit.Framework.Constraints.Numerics.AreEqual
bool NUnit::Framework::Constraints::Numerics::AreEqual(System::Decimal expected, System::Decimal actual, NUnit::Framework::Constraints::Tolerance* tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::Numerics::AreEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "Numerics", "AreEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(actual), ::il2cpp_utils::ExtractType(tolerance)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, expected, actual, tolerance);
}
// Autogenerated method: NUnit.Framework.Constraints.Numerics.AreEqual
bool NUnit::Framework::Constraints::Numerics::AreEqual(uint64_t expected, uint64_t actual, NUnit::Framework::Constraints::Tolerance* tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::Numerics::AreEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "Numerics", "AreEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(actual), ::il2cpp_utils::ExtractType(tolerance)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, expected, actual, tolerance);
}
// Autogenerated method: NUnit.Framework.Constraints.Numerics.AreEqual
bool NUnit::Framework::Constraints::Numerics::AreEqual(int64_t expected, int64_t actual, NUnit::Framework::Constraints::Tolerance* tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::Numerics::AreEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "Numerics", "AreEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(actual), ::il2cpp_utils::ExtractType(tolerance)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, expected, actual, tolerance);
}
// Autogenerated method: NUnit.Framework.Constraints.Numerics.AreEqual
bool NUnit::Framework::Constraints::Numerics::AreEqual(uint expected, uint actual, NUnit::Framework::Constraints::Tolerance* tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::Numerics::AreEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "Numerics", "AreEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(actual), ::il2cpp_utils::ExtractType(tolerance)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, expected, actual, tolerance);
}
// Autogenerated method: NUnit.Framework.Constraints.Numerics.AreEqual
bool NUnit::Framework::Constraints::Numerics::AreEqual(int expected, int actual, NUnit::Framework::Constraints::Tolerance* tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::Numerics::AreEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "Numerics", "AreEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(actual), ::il2cpp_utils::ExtractType(tolerance)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, expected, actual, tolerance);
}
// Autogenerated method: NUnit.Framework.Constraints.Numerics.Compare
int NUnit::Framework::Constraints::Numerics::Compare(::Il2CppObject* expected, ::Il2CppObject* actual) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::Numerics::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "Numerics", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(actual)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, expected, actual);
}
// Writing MetadataGetter for method: Numerics::IsNumericType
// Il2CppName: IsNumericType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppObject*)>(&Numerics::IsNumericType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Numerics*), "IsNumericType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Numerics::IsFloatingPointNumeric
// Il2CppName: IsFloatingPointNumeric
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppObject*)>(&Numerics::IsFloatingPointNumeric)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Numerics*), "IsFloatingPointNumeric", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Numerics::IsFixedPointNumeric
// Il2CppName: IsFixedPointNumeric
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppObject*)>(&Numerics::IsFixedPointNumeric)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Numerics*), "IsFixedPointNumeric", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Numerics::AreEqual
// Il2CppName: AreEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppObject*, ::Il2CppObject*, NUnit::Framework::Constraints::Tolerance*&)>(&Numerics::AreEqual)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Numerics*), "AreEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::Tolerance*&>()});
  }
};
// Writing MetadataGetter for method: Numerics::AreEqual
// Il2CppName: AreEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(double, double, NUnit::Framework::Constraints::Tolerance*&)>(&Numerics::AreEqual)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Numerics*), "AreEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<double>(), ::il2cpp_utils::ExtractIndependentType<double>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::Tolerance*&>()});
  }
};
// Writing MetadataGetter for method: Numerics::AreEqual
// Il2CppName: AreEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(float, float, NUnit::Framework::Constraints::Tolerance*&)>(&Numerics::AreEqual)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Numerics*), "AreEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::Tolerance*&>()});
  }
};
// Writing MetadataGetter for method: Numerics::AreEqual
// Il2CppName: AreEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Decimal, System::Decimal, NUnit::Framework::Constraints::Tolerance*)>(&Numerics::AreEqual)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Numerics*), "AreEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Decimal>(), ::il2cpp_utils::ExtractIndependentType<System::Decimal>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::Tolerance*>()});
  }
};
// Writing MetadataGetter for method: Numerics::AreEqual
// Il2CppName: AreEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, uint64_t, NUnit::Framework::Constraints::Tolerance*)>(&Numerics::AreEqual)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Numerics*), "AreEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::Tolerance*>()});
  }
};
// Writing MetadataGetter for method: Numerics::AreEqual
// Il2CppName: AreEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int64_t, int64_t, NUnit::Framework::Constraints::Tolerance*)>(&Numerics::AreEqual)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Numerics*), "AreEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::Tolerance*>()});
  }
};
// Writing MetadataGetter for method: Numerics::AreEqual
// Il2CppName: AreEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint, uint, NUnit::Framework::Constraints::Tolerance*)>(&Numerics::AreEqual)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Numerics*), "AreEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::Tolerance*>()});
  }
};
// Writing MetadataGetter for method: Numerics::AreEqual
// Il2CppName: AreEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int, int, NUnit::Framework::Constraints::Tolerance*)>(&Numerics::AreEqual)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Numerics*), "AreEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::Tolerance*>()});
  }
};
// Writing MetadataGetter for method: Numerics::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Il2CppObject*, ::Il2CppObject*)>(&Numerics::Compare)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Numerics*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Constraints.NUnitComparer
#include "NUnit/Framework/Constraints/NUnitComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Constraints.NUnitComparer.get_Default
NUnit::Framework::Constraints::NUnitComparer* NUnit::Framework::Constraints::NUnitComparer::get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitComparer::get_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "NUnitComparer", "get_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::NUnitComparer*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitComparer.Compare
int NUnit::Framework::Constraints::NUnitComparer::Compare(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Writing MetadataGetter for method: NUnitComparer::get_Default
// Il2CppName: get_Default
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Constraints::NUnitComparer* (*)()>(&NUnitComparer::get_Default)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitComparer*), "get_Default", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NUnitComparer::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (NUnitComparer::*)(::Il2CppObject*, ::Il2CppObject*)>(&NUnitComparer::Compare)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitComparer*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: NUnitComparer::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NUnitComparer::*)()>(&NUnitComparer::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitComparer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NUnitComparer::*)()>(&NUnitComparer::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitComparer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Constraints.NUnitEqualityComparer
#include "NUnit/Framework/Constraints/NUnitEqualityComparer.hpp"
// Including type: NUnit.Framework.Constraints.NUnitEqualityComparer/FailurePoint
#include "NUnit/Framework/Constraints/NUnitEqualityComparer_FailurePoint.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NUnit.Framework.Constraints.EqualityAdapter
#include "NUnit/Framework/Constraints/EqualityAdapter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: NUnit.Framework.Constraints.Tolerance
#include "NUnit/Framework/Constraints/Tolerance.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: System.IO.DirectoryInfo
#include "System/IO/DirectoryInfo.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 BUFFER_SIZE
int NUnit::Framework::Constraints::NUnitEqualityComparer::_get_BUFFER_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::_get_BUFFER_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("NUnit.Framework.Constraints", "NUnitEqualityComparer", "BUFFER_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 BUFFER_SIZE
void NUnit::Framework::Constraints::NUnitEqualityComparer::_set_BUFFER_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::_set_BUFFER_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Constraints", "NUnitEqualityComparer", "BUFFER_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type GameObjectType
System::Type* NUnit::Framework::Constraints::NUnitEqualityComparer::_get_GameObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::_get_GameObjectType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("NUnit.Framework.Constraints", "NUnitEqualityComparer", "GameObjectType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type GameObjectType
void NUnit::Framework::Constraints::NUnitEqualityComparer::_set_GameObjectType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::_set_GameObjectType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Constraints", "NUnitEqualityComparer", "GameObjectType", value));
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.get_IgnoreCase
bool NUnit::Framework::Constraints::NUnitEqualityComparer::get_IgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::get_IgnoreCase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IgnoreCase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.get_FailurePoints
System::Collections::Generic::IList_1<NUnit::Framework::Constraints::NUnitEqualityComparer::FailurePoint*>* NUnit::Framework::Constraints::NUnitEqualityComparer::get_FailurePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::get_FailurePoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FailurePoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<NUnit::Framework::Constraints::NUnitEqualityComparer::FailurePoint*>*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.get_WithSameOffset
bool NUnit::Framework::Constraints::NUnitEqualityComparer::get_WithSameOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::get_WithSameOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WithSameOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.AreEqual
bool NUnit::Framework::Constraints::NUnitEqualityComparer::AreEqual(::Il2CppObject* x, ::Il2CppObject* y, NUnit::Framework::Constraints::Tolerance*& tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::AreEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AreEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(tolerance)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y, tolerance);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.FirstImplementsIEquatableOfSecond
System::Reflection::MethodInfo* NUnit::Framework::Constraints::NUnitEqualityComparer::FirstImplementsIEquatableOfSecond(System::Type* first, System::Type* second) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::FirstImplementsIEquatableOfSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "NUnitEqualityComparer", "FirstImplementsIEquatableOfSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(second)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, first, second);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.GetEquatableGenericArguments
System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<System::Type*, System::Reflection::MethodInfo*>>* NUnit::Framework::Constraints::NUnitEqualityComparer::GetEquatableGenericArguments(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::GetEquatableGenericArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "NUnitEqualityComparer", "GetEquatableGenericArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<System::Type*, System::Reflection::MethodInfo*>>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.InvokeFirstIEquatableEqualsSecond
bool NUnit::Framework::Constraints::NUnitEqualityComparer::InvokeFirstIEquatableEqualsSecond(::Il2CppObject* first, ::Il2CppObject* second, System::Reflection::MethodInfo* equals) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::InvokeFirstIEquatableEqualsSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "NUnitEqualityComparer", "InvokeFirstIEquatableEqualsSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(equals)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, first, second, equals);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.GetExternalComparer
NUnit::Framework::Constraints::EqualityAdapter* NUnit::Framework::Constraints::NUnitEqualityComparer::GetExternalComparer(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::GetExternalComparer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExternalComparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::EqualityAdapter*, false>(this, ___internal__method, x, y);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.ArraysEqual
bool NUnit::Framework::Constraints::NUnitEqualityComparer::ArraysEqual(System::Array* x, System::Array* y, NUnit::Framework::Constraints::Tolerance*& tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::ArraysEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ArraysEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(tolerance)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y, tolerance);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.DictionariesEqual
bool NUnit::Framework::Constraints::NUnitEqualityComparer::DictionariesEqual(System::Collections::IDictionary* x, System::Collections::IDictionary* y, NUnit::Framework::Constraints::Tolerance*& tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::DictionariesEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DictionariesEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(tolerance)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y, tolerance);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.DictionaryEntriesEqual
bool NUnit::Framework::Constraints::NUnitEqualityComparer::DictionaryEntriesEqual(System::Collections::DictionaryEntry x, System::Collections::DictionaryEntry y, NUnit::Framework::Constraints::Tolerance*& tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::DictionaryEntriesEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DictionaryEntriesEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(tolerance)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y, tolerance);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.StringsEqual
bool NUnit::Framework::Constraints::NUnitEqualityComparer::StringsEqual(::Il2CppString* x, ::Il2CppString* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::StringsEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StringsEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.CharsEqual
bool NUnit::Framework::Constraints::NUnitEqualityComparer::CharsEqual(::Il2CppChar x, ::Il2CppChar y) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::CharsEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CharsEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.EnumerablesEqual
bool NUnit::Framework::Constraints::NUnitEqualityComparer::EnumerablesEqual(System::Collections::IEnumerable* x, System::Collections::IEnumerable* y, NUnit::Framework::Constraints::Tolerance*& tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::EnumerablesEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnumerablesEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(tolerance)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y, tolerance);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.DirectoriesEqual
bool NUnit::Framework::Constraints::NUnitEqualityComparer::DirectoriesEqual(System::IO::DirectoryInfo* x, System::IO::DirectoryInfo* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::DirectoriesEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "NUnitEqualityComparer", "DirectoriesEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer.StreamsEqual
bool NUnit::Framework::Constraints::NUnitEqualityComparer::StreamsEqual(System::IO::Stream* x, System::IO::Stream* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::StreamsEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StreamsEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: NUnit.Framework.Constraints.NUnitEqualityComparer..cctor
void NUnit::Framework::Constraints::NUnitEqualityComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::NUnitEqualityComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "NUnitEqualityComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: NUnitEqualityComparer::get_IgnoreCase
// Il2CppName: get_IgnoreCase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NUnitEqualityComparer::*)()>(&NUnitEqualityComparer::get_IgnoreCase)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer*), "get_IgnoreCase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NUnitEqualityComparer::get_FailurePoints
// Il2CppName: get_FailurePoints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IList_1<NUnit::Framework::Constraints::NUnitEqualityComparer::FailurePoint*>* (NUnitEqualityComparer::*)()>(&NUnitEqualityComparer::get_FailurePoints)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer*), "get_FailurePoints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NUnitEqualityComparer::get_WithSameOffset
// Il2CppName: get_WithSameOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NUnitEqualityComparer::*)()>(&NUnitEqualityComparer::get_WithSameOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer*), "get_WithSameOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NUnitEqualityComparer::AreEqual
// Il2CppName: AreEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NUnitEqualityComparer::*)(::Il2CppObject*, ::Il2CppObject*, NUnit::Framework::Constraints::Tolerance*&)>(&NUnitEqualityComparer::AreEqual)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer*), "AreEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::Tolerance*&>()});
  }
};
// Writing MetadataGetter for method: NUnitEqualityComparer::FirstImplementsIEquatableOfSecond
// Il2CppName: FirstImplementsIEquatableOfSecond
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodInfo* (*)(System::Type*, System::Type*)>(&NUnitEqualityComparer::FirstImplementsIEquatableOfSecond)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer*), "FirstImplementsIEquatableOfSecond", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: NUnitEqualityComparer::GetEquatableGenericArguments
// Il2CppName: GetEquatableGenericArguments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<System::Type*, System::Reflection::MethodInfo*>>* (*)(System::Type*)>(&NUnitEqualityComparer::GetEquatableGenericArguments)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer*), "GetEquatableGenericArguments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: NUnitEqualityComparer::InvokeFirstIEquatableEqualsSecond
// Il2CppName: InvokeFirstIEquatableEqualsSecond
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppObject*, ::Il2CppObject*, System::Reflection::MethodInfo*)>(&NUnitEqualityComparer::InvokeFirstIEquatableEqualsSecond)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer*), "InvokeFirstIEquatableEqualsSecond", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>()});
  }
};
// Writing MetadataGetter for method: NUnitEqualityComparer::GetExternalComparer
// Il2CppName: GetExternalComparer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Constraints::EqualityAdapter* (NUnitEqualityComparer::*)(::Il2CppObject*, ::Il2CppObject*)>(&NUnitEqualityComparer::GetExternalComparer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer*), "GetExternalComparer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: NUnitEqualityComparer::ArraysEqual
// Il2CppName: ArraysEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NUnitEqualityComparer::*)(System::Array*, System::Array*, NUnit::Framework::Constraints::Tolerance*&)>(&NUnitEqualityComparer::ArraysEqual)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer*), "ArraysEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Array*>(), ::il2cpp_utils::ExtractIndependentType<System::Array*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::Tolerance*&>()});
  }
};
// Writing MetadataGetter for method: NUnitEqualityComparer::DictionariesEqual
// Il2CppName: DictionariesEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NUnitEqualityComparer::*)(System::Collections::IDictionary*, System::Collections::IDictionary*, NUnit::Framework::Constraints::Tolerance*&)>(&NUnitEqualityComparer::DictionariesEqual)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer*), "DictionariesEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::IDictionary*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::IDictionary*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::Tolerance*&>()});
  }
};
// Writing MetadataGetter for method: NUnitEqualityComparer::DictionaryEntriesEqual
// Il2CppName: DictionaryEntriesEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NUnitEqualityComparer::*)(System::Collections::DictionaryEntry, System::Collections::DictionaryEntry, NUnit::Framework::Constraints::Tolerance*&)>(&NUnitEqualityComparer::DictionaryEntriesEqual)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer*), "DictionaryEntriesEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::DictionaryEntry>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::DictionaryEntry>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::Tolerance*&>()});
  }
};
// Writing MetadataGetter for method: NUnitEqualityComparer::StringsEqual
// Il2CppName: StringsEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NUnitEqualityComparer::*)(::Il2CppString*, ::Il2CppString*)>(&NUnitEqualityComparer::StringsEqual)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer*), "StringsEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NUnitEqualityComparer::CharsEqual
// Il2CppName: CharsEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NUnitEqualityComparer::*)(::Il2CppChar, ::Il2CppChar)>(&NUnitEqualityComparer::CharsEqual)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer*), "CharsEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
  }
};
// Writing MetadataGetter for method: NUnitEqualityComparer::EnumerablesEqual
// Il2CppName: EnumerablesEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NUnitEqualityComparer::*)(System::Collections::IEnumerable*, System::Collections::IEnumerable*, NUnit::Framework::Constraints::Tolerance*&)>(&NUnitEqualityComparer::EnumerablesEqual)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer*), "EnumerablesEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::IEnumerable*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::IEnumerable*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::Tolerance*&>()});
  }
};
// Writing MetadataGetter for method: NUnitEqualityComparer::DirectoriesEqual
// Il2CppName: DirectoriesEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IO::DirectoryInfo*, System::IO::DirectoryInfo*)>(&NUnitEqualityComparer::DirectoriesEqual)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer*), "DirectoriesEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::DirectoryInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::IO::DirectoryInfo*>()});
  }
};
// Writing MetadataGetter for method: NUnitEqualityComparer::StreamsEqual
// Il2CppName: StreamsEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NUnitEqualityComparer::*)(System::IO::Stream*, System::IO::Stream*)>(&NUnitEqualityComparer::StreamsEqual)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer*), "StreamsEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
// Writing MetadataGetter for method: NUnitEqualityComparer::CheckGameObjectReference
// Il2CppName: CheckGameObjectReference
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: NUnitEqualityComparer::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&NUnitEqualityComparer::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NUnitEqualityComparer::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NUnitEqualityComparer::*)()>(&NUnitEqualityComparer::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NUnitEqualityComparer::*)()>(&NUnitEqualityComparer::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Constraints.NUnitEqualityComparer/FailurePoint
#include "NUnit/Framework/Constraints/NUnitEqualityComparer_FailurePoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: NUnitEqualityComparer::FailurePoint::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NUnitEqualityComparer::FailurePoint::*)()>(&NUnitEqualityComparer::FailurePoint::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer::FailurePoint*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NUnitEqualityComparer::FailurePoint::*)()>(&NUnitEqualityComparer::FailurePoint::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NUnitEqualityComparer::FailurePoint*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Constraints.ConstraintOperator
#include "NUnit/Framework/Constraints/ConstraintOperator.hpp"
// Including type: NUnit.Framework.Constraints.ConstraintBuilder/ConstraintStack
#include "NUnit/Framework/Constraints/ConstraintBuilder_ConstraintStack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Constraints.ConstraintOperator.Reduce
void NUnit::Framework::Constraints::ConstraintOperator::Reduce(NUnit::Framework::Constraints::ConstraintBuilder::ConstraintStack* stack) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::ConstraintOperator::Reduce");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reduce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stack)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stack);
}
// Writing MetadataGetter for method: ConstraintOperator::Reduce
// Il2CppName: Reduce
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ConstraintOperator::*)(NUnit::Framework::Constraints::ConstraintBuilder::ConstraintStack*)>(&ConstraintOperator::Reduce)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConstraintOperator*), "Reduce", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::ConstraintBuilder::ConstraintStack*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Constraints.PathConstraint
#include "NUnit/Framework/Constraints/PathConstraint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] DirectorySeparatorChars
::Array<::Il2CppChar>* NUnit::Framework::Constraints::PathConstraint::_get_DirectorySeparatorChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::PathConstraint::_get_DirectorySeparatorChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("NUnit.Framework.Constraints", "PathConstraint", "DirectorySeparatorChars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] DirectorySeparatorChars
void NUnit::Framework::Constraints::PathConstraint::_set_DirectorySeparatorChars(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::PathConstraint::_set_DirectorySeparatorChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Constraints", "PathConstraint", "DirectorySeparatorChars", value));
}
// Autogenerated method: NUnit.Framework.Constraints.PathConstraint.Canonicalize
::Il2CppString* NUnit::Framework::Constraints::PathConstraint::Canonicalize(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::PathConstraint::Canonicalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Canonicalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, path);
}
// Autogenerated method: NUnit.Framework.Constraints.PathConstraint..cctor
void NUnit::Framework::Constraints::PathConstraint::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::PathConstraint::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "PathConstraint", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Constraints.PathConstraint.GetStringRepresentation
::Il2CppString* NUnit::Framework::Constraints::PathConstraint::GetStringRepresentation() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::PathConstraint::GetStringRepresentation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringRepresentation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PathConstraint::Canonicalize
// Il2CppName: Canonicalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PathConstraint::*)(::Il2CppString*)>(&PathConstraint::Canonicalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PathConstraint*), "Canonicalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PathConstraint::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PathConstraint::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PathConstraint*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PathConstraint::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PathConstraint::*)(::Il2CppString*)>(&PathConstraint::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PathConstraint*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PathConstraint::*)(::Il2CppString*)>(&PathConstraint::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PathConstraint*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PathConstraint::GetStringRepresentation
// Il2CppName: GetStringRepresentation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PathConstraint::*)()>(&PathConstraint::GetStringRepresentation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PathConstraint*), "GetStringRepresentation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Constraints.SamePathConstraint
#include "NUnit/Framework/Constraints/SamePathConstraint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Constraints.SamePathConstraint.get_Description
::Il2CppString* NUnit::Framework::Constraints::SamePathConstraint::get_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::SamePathConstraint::get_Description");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Description", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Constraints.SamePathConstraint.Matches
bool NUnit::Framework::Constraints::SamePathConstraint::Matches(::Il2CppString* actual) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::SamePathConstraint::Matches");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Matches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actual)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, actual);
}
// Writing MetadataGetter for method: SamePathConstraint::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SamePathConstraint::*)(::Il2CppString*)>(&SamePathConstraint::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SamePathConstraint*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SamePathConstraint::*)(::Il2CppString*)>(&SamePathConstraint::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SamePathConstraint*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SamePathConstraint::get_Description
// Il2CppName: get_Description
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (SamePathConstraint::*)()>(&SamePathConstraint::get_Description)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SamePathConstraint*), "get_Description", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SamePathConstraint::Matches
// Il2CppName: Matches
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SamePathConstraint::*)(::Il2CppString*)>(&SamePathConstraint::Matches)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SamePathConstraint*), "Matches", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Constraints.StringConstraint
#include "NUnit/Framework/Constraints/StringConstraint.hpp"
// Including type: NUnit.Framework.Constraints.ConstraintResult
#include "NUnit/Framework/Constraints/ConstraintResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Constraints.StringConstraint.Matches
bool NUnit::Framework::Constraints::StringConstraint::Matches(::Il2CppString* actual) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::StringConstraint::Matches");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Matches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actual)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, actual);
}
// Autogenerated method: NUnit.Framework.Constraints.StringConstraint.get_Description
::Il2CppString* NUnit::Framework::Constraints::StringConstraint::get_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::StringConstraint::get_Description");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Description", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Constraints.StringConstraint.ApplyTo
NUnit::Framework::Constraints::ConstraintResult* NUnit::Framework::Constraints::StringConstraint::ApplyTo(::Il2CppObject* actual) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::StringConstraint::ApplyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actual)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::ConstraintResult*, false>(this, ___internal__method, actual);
}
// Writing MetadataGetter for method: StringConstraint::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringConstraint::*)(::Il2CppString*)>(&StringConstraint::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringConstraint*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringConstraint::*)(::Il2CppString*)>(&StringConstraint::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringConstraint*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StringConstraint::Matches
// Il2CppName: Matches
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (StringConstraint::*)(::Il2CppString*)>(&StringConstraint::Matches)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringConstraint*), "Matches", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StringConstraint::get_Description
// Il2CppName: get_Description
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (StringConstraint::*)()>(&StringConstraint::get_Description)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringConstraint*), "get_Description", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StringConstraint::ApplyTo
// Il2CppName: ApplyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Constraints::ConstraintResult* (StringConstraint::*)(::Il2CppObject*)>(&StringConstraint::ApplyTo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringConstraint*), "ApplyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Constraints.Tolerance
#include "NUnit/Framework/Constraints/Tolerance.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Constraints.Tolerance.get_Default
NUnit::Framework::Constraints::Tolerance* NUnit::Framework::Constraints::Tolerance::get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::Tolerance::get_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "Tolerance", "get_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::Tolerance*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Constraints.Tolerance.get_Exact
NUnit::Framework::Constraints::Tolerance* NUnit::Framework::Constraints::Tolerance::get_Exact() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::Tolerance::get_Exact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Constraints", "Tolerance", "get_Exact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::Tolerance*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Constraints.Tolerance.get_Mode
NUnit::Framework::Constraints::ToleranceMode NUnit::Framework::Constraints::Tolerance::get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::Tolerance::get_Mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::ToleranceMode, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Constraints.Tolerance.get_Value
::Il2CppObject* NUnit::Framework::Constraints::Tolerance::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::Tolerance::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Constraints.Tolerance.get_IsUnsetOrDefault
bool NUnit::Framework::Constraints::Tolerance::get_IsUnsetOrDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::Tolerance::get_IsUnsetOrDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUnsetOrDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Tolerance::get_Default
// Il2CppName: get_Default
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Constraints::Tolerance* (*)()>(&Tolerance::get_Default)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tolerance*), "get_Default", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tolerance::get_Exact
// Il2CppName: get_Exact
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Constraints::Tolerance* (*)()>(&Tolerance::get_Exact)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tolerance*), "get_Exact", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tolerance::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tolerance::*)(::Il2CppObject*)>(&Tolerance::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tolerance*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tolerance::*)(::Il2CppObject*)>(&Tolerance::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tolerance*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Tolerance::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tolerance::*)(::Il2CppObject*, NUnit::Framework::Constraints::ToleranceMode)>(&Tolerance::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tolerance*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::ToleranceMode>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tolerance::*)(::Il2CppObject*, NUnit::Framework::Constraints::ToleranceMode)>(&Tolerance::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tolerance*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Constraints::ToleranceMode>()});
  }
};
// Writing MetadataGetter for method: Tolerance::get_Mode
// Il2CppName: get_Mode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Constraints::ToleranceMode (Tolerance::*)()>(&Tolerance::get_Mode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tolerance*), "get_Mode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tolerance::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Tolerance::*)()>(&Tolerance::get_Value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tolerance*), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tolerance::get_IsUnsetOrDefault
// Il2CppName: get_IsUnsetOrDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Tolerance::*)()>(&Tolerance::get_IsUnsetOrDefault)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tolerance*), "get_IsUnsetOrDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Constraints.ToleranceMode
#include "NUnit/Framework/Constraints/ToleranceMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Constraints.ToleranceMode Unset
NUnit::Framework::Constraints::ToleranceMode NUnit::Framework::Constraints::ToleranceMode::_get_Unset() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::ToleranceMode::_get_Unset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::Constraints::ToleranceMode>("NUnit.Framework.Constraints", "ToleranceMode", "Unset"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Constraints.ToleranceMode Unset
void NUnit::Framework::Constraints::ToleranceMode::_set_Unset(NUnit::Framework::Constraints::ToleranceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::ToleranceMode::_set_Unset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Constraints", "ToleranceMode", "Unset", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Constraints.ToleranceMode Linear
NUnit::Framework::Constraints::ToleranceMode NUnit::Framework::Constraints::ToleranceMode::_get_Linear() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::ToleranceMode::_get_Linear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::Constraints::ToleranceMode>("NUnit.Framework.Constraints", "ToleranceMode", "Linear"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Constraints.ToleranceMode Linear
void NUnit::Framework::Constraints::ToleranceMode::_set_Linear(NUnit::Framework::Constraints::ToleranceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::ToleranceMode::_set_Linear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Constraints", "ToleranceMode", "Linear", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Constraints.ToleranceMode Percent
NUnit::Framework::Constraints::ToleranceMode NUnit::Framework::Constraints::ToleranceMode::_get_Percent() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::ToleranceMode::_get_Percent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::Constraints::ToleranceMode>("NUnit.Framework.Constraints", "ToleranceMode", "Percent"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Constraints.ToleranceMode Percent
void NUnit::Framework::Constraints::ToleranceMode::_set_Percent(NUnit::Framework::Constraints::ToleranceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::ToleranceMode::_set_Percent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Constraints", "ToleranceMode", "Percent", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Constraints.ToleranceMode Ulps
NUnit::Framework::Constraints::ToleranceMode NUnit::Framework::Constraints::ToleranceMode::_get_Ulps() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::ToleranceMode::_get_Ulps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::Constraints::ToleranceMode>("NUnit.Framework.Constraints", "ToleranceMode", "Ulps"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Constraints.ToleranceMode Ulps
void NUnit::Framework::Constraints::ToleranceMode::_set_Ulps(NUnit::Framework::Constraints::ToleranceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::ToleranceMode::_set_Ulps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Constraints", "ToleranceMode", "Ulps", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Constraints.TrueConstraint
#include "NUnit/Framework/Constraints/TrueConstraint.hpp"
// Including type: NUnit.Framework.Constraints.ConstraintResult
#include "NUnit/Framework/Constraints/ConstraintResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Constraints.TrueConstraint.ApplyTo
NUnit::Framework::Constraints::ConstraintResult* NUnit::Framework::Constraints::TrueConstraint::ApplyTo(::Il2CppObject* actual) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Constraints::TrueConstraint::ApplyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actual)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Constraints::ConstraintResult*, false>(this, ___internal__method, actual);
}
// Writing MetadataGetter for method: TrueConstraint::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TrueConstraint::*)()>(&TrueConstraint::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TrueConstraint*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TrueConstraint::*)()>(&TrueConstraint::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TrueConstraint*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TrueConstraint::ApplyTo
// Il2CppName: ApplyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Constraints::ConstraintResult* (TrueConstraint::*)(::Il2CppObject*)>(&TrueConstraint::ApplyTo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TrueConstraint*), "ApplyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Api.DefaultTestAssemblyBuilder
#include "NUnit/Framework/Api/DefaultTestAssemblyBuilder.hpp"
// Including type: NUnit.Framework.Interfaces.ISuiteBuilder
#include "NUnit/Framework/Interfaces/ISuiteBuilder.hpp"
// Including type: NUnit.Framework.Internal.Logger
#include "NUnit/Framework/Internal/Logger.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: NUnit.Framework.Internal.TestSuite
#include "NUnit/Framework/Internal/TestSuite.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private NUnit.Framework.Internal.Logger log
NUnit::Framework::Internal::Logger* NUnit::Framework::Api::DefaultTestAssemblyBuilder::_get_log() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Api::DefaultTestAssemblyBuilder::_get_log");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<NUnit::Framework::Internal::Logger*>("NUnit.Framework.Api", "DefaultTestAssemblyBuilder", "log"));
}
// Autogenerated static field setter
// Set static field: static private NUnit.Framework.Internal.Logger log
void NUnit::Framework::Api::DefaultTestAssemblyBuilder::_set_log(NUnit::Framework::Internal::Logger* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Api::DefaultTestAssemblyBuilder::_set_log");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Api", "DefaultTestAssemblyBuilder", "log", value));
}
// Autogenerated method: NUnit.Framework.Api.DefaultTestAssemblyBuilder.Build
NUnit::Framework::Interfaces::ITest* NUnit::Framework::Api::DefaultTestAssemblyBuilder::Build(System::Reflection::Assembly* assembly, System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppObject*>* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Api::DefaultTestAssemblyBuilder::Build");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Build", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ITest*, false>(this, ___internal__method, assembly, options);
}
// Autogenerated method: NUnit.Framework.Api.DefaultTestAssemblyBuilder.Build
NUnit::Framework::Internal::TestSuite* NUnit::Framework::Api::DefaultTestAssemblyBuilder::Build(System::Reflection::Assembly* assembly, ::Il2CppString* assemblyPath, System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppObject*>* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Api::DefaultTestAssemblyBuilder::Build");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Build", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly), ::il2cpp_utils::ExtractType(assemblyPath), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::TestSuite*, false>(this, ___internal__method, assembly, assemblyPath, options);
}
// Autogenerated method: NUnit.Framework.Api.DefaultTestAssemblyBuilder.GetFixtures
System::Collections::Generic::IList_1<NUnit::Framework::Internal::Test*>* NUnit::Framework::Api::DefaultTestAssemblyBuilder::GetFixtures(System::Reflection::Assembly* assembly, System::Collections::IList* names) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Api::DefaultTestAssemblyBuilder::GetFixtures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFixtures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly), ::il2cpp_utils::ExtractType(names)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<NUnit::Framework::Internal::Test*>*, false>(this, ___internal__method, assembly, names);
}
// Autogenerated method: NUnit.Framework.Api.DefaultTestAssemblyBuilder.GetCandidateFixtureTypes
System::Collections::Generic::IList_1<System::Type*>* NUnit::Framework::Api::DefaultTestAssemblyBuilder::GetCandidateFixtureTypes(System::Reflection::Assembly* assembly, System::Collections::IList* names) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Api::DefaultTestAssemblyBuilder::GetCandidateFixtureTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCandidateFixtureTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly), ::il2cpp_utils::ExtractType(names)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<System::Type*>*, false>(this, ___internal__method, assembly, names);
}
// Autogenerated method: NUnit.Framework.Api.DefaultTestAssemblyBuilder.BuildTestAssembly
NUnit::Framework::Internal::TestSuite* NUnit::Framework::Api::DefaultTestAssemblyBuilder::BuildTestAssembly(System::Reflection::Assembly* assembly, ::Il2CppString* assemblyName, System::Collections::Generic::IList_1<NUnit::Framework::Internal::Test*>* fixtures) {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Api::DefaultTestAssemblyBuilder::BuildTestAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildTestAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly), ::il2cpp_utils::ExtractType(assemblyName), ::il2cpp_utils::ExtractType(fixtures)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::TestSuite*, false>(this, ___internal__method, assembly, assemblyName, fixtures);
}
// Autogenerated method: NUnit.Framework.Api.DefaultTestAssemblyBuilder..cctor
void NUnit::Framework::Api::DefaultTestAssemblyBuilder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("NUnit::Framework::Api::DefaultTestAssemblyBuilder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Api", "DefaultTestAssemblyBuilder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: DefaultTestAssemblyBuilder::Build
// Il2CppName: Build
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Interfaces::ITest* (DefaultTestAssemblyBuilder::*)(System::Reflection::Assembly*, System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppObject*>*)>(&DefaultTestAssemblyBuilder::Build)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestAssemblyBuilder*), "Build", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: DefaultTestAssemblyBuilder::Build
// Il2CppName: Build
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Internal::TestSuite* (DefaultTestAssemblyBuilder::*)(System::Reflection::Assembly*, ::Il2CppString*, System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppObject*>*)>(&DefaultTestAssemblyBuilder::Build)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestAssemblyBuilder*), "Build", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: DefaultTestAssemblyBuilder::GetFixtures
// Il2CppName: GetFixtures
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IList_1<NUnit::Framework::Internal::Test*>* (DefaultTestAssemblyBuilder::*)(System::Reflection::Assembly*, System::Collections::IList*)>(&DefaultTestAssemblyBuilder::GetFixtures)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestAssemblyBuilder*), "GetFixtures", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::IList*>()});
  }
};
// Writing MetadataGetter for method: DefaultTestAssemblyBuilder::GetCandidateFixtureTypes
// Il2CppName: GetCandidateFixtureTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IList_1<System::Type*>* (DefaultTestAssemblyBuilder::*)(System::Reflection::Assembly*, System::Collections::IList*)>(&DefaultTestAssemblyBuilder::GetCandidateFixtureTypes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestAssemblyBuilder*), "GetCandidateFixtureTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::IList*>()});
  }
};
// Writing MetadataGetter for method: DefaultTestAssemblyBuilder::BuildTestAssembly
// Il2CppName: BuildTestAssembly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Internal::TestSuite* (DefaultTestAssemblyBuilder::*)(System::Reflection::Assembly*, ::Il2CppString*, System::Collections::Generic::IList_1<NUnit::Framework::Internal::Test*>*)>(&DefaultTestAssemblyBuilder::BuildTestAssembly)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestAssemblyBuilder*), "BuildTestAssembly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IList_1<NUnit::Framework::Internal::Test*>*>()});
  }
};
// Writing MetadataGetter for method: DefaultTestAssemblyBuilder::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DefaultTestAssemblyBuilder::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestAssemblyBuilder*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefaultTestAssemblyBuilder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefaultTestAssemblyBuilder::*)()>(&DefaultTestAssemblyBuilder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestAssemblyBuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefaultTestAssemblyBuilder::*)()>(&DefaultTestAssemblyBuilder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultTestAssemblyBuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BufferedAudioStream
#include "GlobalNamespace/BufferedAudioStream.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean VerboseLogging
bool GlobalNamespace::BufferedAudioStream::_get_VerboseLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BufferedAudioStream::_get_VerboseLogging");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "BufferedAudioStream", "VerboseLogging"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean VerboseLogging
void GlobalNamespace::BufferedAudioStream::_set_VerboseLogging(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BufferedAudioStream::_set_VerboseLogging");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "VerboseLogging", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single bufferLengthSeconds
float GlobalNamespace::BufferedAudioStream::_get_bufferLengthSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BufferedAudioStream::_get_bufferLengthSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BufferedAudioStream", "bufferLengthSeconds"));
}
// Autogenerated static field setter
// Set static field: static private System.Single bufferLengthSeconds
void GlobalNamespace::BufferedAudioStream::_set_bufferLengthSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BufferedAudioStream::_set_bufferLengthSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "bufferLengthSeconds", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 sampleRate
int GlobalNamespace::BufferedAudioStream::_get_sampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BufferedAudioStream::_get_sampleRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BufferedAudioStream", "sampleRate"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 sampleRate
void GlobalNamespace::BufferedAudioStream::_set_sampleRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BufferedAudioStream::_set_sampleRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "sampleRate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 bufferSize
int GlobalNamespace::BufferedAudioStream::_get_bufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BufferedAudioStream::_get_bufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BufferedAudioStream", "bufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 bufferSize
void GlobalNamespace::BufferedAudioStream::_set_bufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BufferedAudioStream::_set_bufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "bufferSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single playbackDelayTimeSeconds
float GlobalNamespace::BufferedAudioStream::_get_playbackDelayTimeSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BufferedAudioStream::_get_playbackDelayTimeSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BufferedAudioStream", "playbackDelayTimeSeconds"));
}
// Autogenerated static field setter
// Set static field: static private System.Single playbackDelayTimeSeconds
void GlobalNamespace::BufferedAudioStream::_set_playbackDelayTimeSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BufferedAudioStream::_set_playbackDelayTimeSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "playbackDelayTimeSeconds", value));
}
// Autogenerated method: BufferedAudioStream.Update
void GlobalNamespace::BufferedAudioStream::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BufferedAudioStream::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BufferedAudioStream.Stop
void GlobalNamespace::BufferedAudioStream::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BufferedAudioStream::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BufferedAudioStream.AddData
void GlobalNamespace::BufferedAudioStream::AddData(::Array<float>* samples) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BufferedAudioStream::AddData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samples)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, samples);
}
// Writing MetadataGetter for method: BufferedAudioStream::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BufferedAudioStream::*)(UnityEngine::AudioSource*)>(&BufferedAudioStream::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BufferedAudioStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::AudioSource*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BufferedAudioStream::*)(UnityEngine::AudioSource*)>(&BufferedAudioStream::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BufferedAudioStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::AudioSource*>()});
  }
};
// Writing MetadataGetter for method: BufferedAudioStream::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BufferedAudioStream::*)()>(&BufferedAudioStream::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BufferedAudioStream*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BufferedAudioStream::Stop
// Il2CppName: Stop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BufferedAudioStream::*)()>(&BufferedAudioStream::Stop)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BufferedAudioStream*), "Stop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BufferedAudioStream::AddData
// Il2CppName: AddData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BufferedAudioStream::*)(::Array<float>*)>(&BufferedAudioStream::AddData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BufferedAudioStream*), "AddData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<float>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AbuseReportOptions
#include "Oculus/Platform/AbuseReportOptions.hpp"
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.AbuseReportOptions.SetPreventPeopleChooser
void Oculus::Platform::AbuseReportOptions::SetPreventPeopleChooser(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AbuseReportOptions::SetPreventPeopleChooser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPreventPeopleChooser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AbuseReportOptions.SetReportType
void Oculus::Platform::AbuseReportOptions::SetReportType(Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AbuseReportOptions::SetReportType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReportType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AbuseReportOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::AbuseReportOptions::operator System::IntPtr()
// Autogenerated method: Oculus.Platform.AbuseReportOptions.Finalize
void Oculus::Platform::AbuseReportOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AbuseReportOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: AbuseReportOptions::SetPreventPeopleChooser
// Il2CppName: SetPreventPeopleChooser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AbuseReportOptions::*)(bool)>(&AbuseReportOptions::SetPreventPeopleChooser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AbuseReportOptions*), "SetPreventPeopleChooser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: AbuseReportOptions::SetReportType
// Il2CppName: SetReportType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AbuseReportOptions::*)(Oculus::Platform::AbuseReportType)>(&AbuseReportOptions::SetReportType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AbuseReportOptions*), "SetReportType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::AbuseReportType>()});
  }
};
// Writing MetadataGetter for method: AbuseReportOptions::operator System::IntPtr
// Il2CppName: op_Explicit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&AbuseReportOptions::operator System::IntPtr)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AbuseReportOptions*), "op_Explicit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AbuseReportOptions::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AbuseReportOptions::*)()>(&AbuseReportOptions::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AbuseReportOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AbuseReportOptions::*)()>(&AbuseReportOptions::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AbuseReportOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AbuseReportOptions::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AbuseReportOptions::*)()>(&AbuseReportOptions::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AbuseReportOptions*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFE6CC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportType Unknown
Oculus::Platform::AbuseReportType Oculus::Platform::AbuseReportType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AbuseReportType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::AbuseReportType>("Oculus.Platform", "AbuseReportType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportType Unknown
void Oculus::Platform::AbuseReportType::_set_Unknown(Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AbuseReportType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFE704
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportType Object
Oculus::Platform::AbuseReportType Oculus::Platform::AbuseReportType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AbuseReportType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::AbuseReportType>("Oculus.Platform", "AbuseReportType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportType Object
void Oculus::Platform::AbuseReportType::_set_Object(Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AbuseReportType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportType", "Object", value));
}
// [DescriptionAttribute] Offset: 0xDFE73C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportType User
Oculus::Platform::AbuseReportType Oculus::Platform::AbuseReportType::_get_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AbuseReportType::_get_User");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::AbuseReportType>("Oculus.Platform", "AbuseReportType", "User"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportType User
void Oculus::Platform::AbuseReportType::_set_User(Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AbuseReportType::_set_User");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportType", "User", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AbuseReportVideoMode
#include "Oculus/Platform/AbuseReportVideoMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFE774
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportVideoMode Unknown
Oculus::Platform::AbuseReportVideoMode Oculus::Platform::AbuseReportVideoMode::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AbuseReportVideoMode::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::AbuseReportVideoMode>("Oculus.Platform", "AbuseReportVideoMode", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportVideoMode Unknown
void Oculus::Platform::AbuseReportVideoMode::_set_Unknown(Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AbuseReportVideoMode::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportVideoMode", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFE7AC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportVideoMode Collect
Oculus::Platform::AbuseReportVideoMode Oculus::Platform::AbuseReportVideoMode::_get_Collect() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AbuseReportVideoMode::_get_Collect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::AbuseReportVideoMode>("Oculus.Platform", "AbuseReportVideoMode", "Collect"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportVideoMode Collect
void Oculus::Platform::AbuseReportVideoMode::_set_Collect(Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AbuseReportVideoMode::_set_Collect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportVideoMode", "Collect", value));
}
// [DescriptionAttribute] Offset: 0xDFE7E4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportVideoMode Optional
Oculus::Platform::AbuseReportVideoMode Oculus::Platform::AbuseReportVideoMode::_get_Optional() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AbuseReportVideoMode::_get_Optional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::AbuseReportVideoMode>("Oculus.Platform", "AbuseReportVideoMode", "Optional"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportVideoMode Optional
void Oculus::Platform::AbuseReportVideoMode::_set_Optional(Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AbuseReportVideoMode::_set_Optional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportVideoMode", "Optional", value));
}
// [DescriptionAttribute] Offset: 0xDFE81C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportVideoMode Skip
Oculus::Platform::AbuseReportVideoMode Oculus::Platform::AbuseReportVideoMode::_get_Skip() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AbuseReportVideoMode::_get_Skip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::AbuseReportVideoMode>("Oculus.Platform", "AbuseReportVideoMode", "Skip"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportVideoMode Skip
void Oculus::Platform::AbuseReportVideoMode::_set_Skip(Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AbuseReportVideoMode::_set_Skip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportVideoMode", "Skip", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AchievementType
#include "Oculus/Platform/AchievementType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFE854
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Unknown
Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AchievementType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Unknown
void Oculus::Platform::AchievementType::_set_Unknown(Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AchievementType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFE88C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Simple
Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Simple() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AchievementType::_get_Simple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Simple"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Simple
void Oculus::Platform::AchievementType::_set_Simple(Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AchievementType::_set_Simple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Simple", value));
}
// [DescriptionAttribute] Offset: 0xDFE8C4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Bitfield
Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Bitfield() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AchievementType::_get_Bitfield");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Bitfield"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Bitfield
void Oculus::Platform::AchievementType::_set_Bitfield(Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AchievementType::_set_Bitfield");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Bitfield", value));
}
// [DescriptionAttribute] Offset: 0xDFE8FC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Count
Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AchievementType::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Count"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Count
void Oculus::Platform::AchievementType::_set_Count(Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AchievementType::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Count", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.AdvancedAbuseReportOptions
#include "Oculus/Platform/AdvancedAbuseReportOptions.hpp"
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
// Including type: Oculus.Platform.AbuseReportVideoMode
#include "Oculus/Platform/AbuseReportVideoMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.SetObjectType
void Oculus::Platform::AdvancedAbuseReportOptions::SetObjectType(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AdvancedAbuseReportOptions::SetObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.SetReportType
void Oculus::Platform::AdvancedAbuseReportOptions::SetReportType(Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AdvancedAbuseReportOptions::SetReportType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReportType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.SetVideoMode
void Oculus::Platform::AdvancedAbuseReportOptions::SetVideoMode(Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AdvancedAbuseReportOptions::SetVideoMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVideoMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::AdvancedAbuseReportOptions::operator System::IntPtr()
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.Finalize
void Oculus::Platform::AdvancedAbuseReportOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AdvancedAbuseReportOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: AdvancedAbuseReportOptions::SetObjectType
// Il2CppName: SetObjectType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedAbuseReportOptions::*)(::Il2CppString*)>(&AdvancedAbuseReportOptions::SetObjectType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedAbuseReportOptions*), "SetObjectType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: AdvancedAbuseReportOptions::SetReportType
// Il2CppName: SetReportType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedAbuseReportOptions::*)(Oculus::Platform::AbuseReportType)>(&AdvancedAbuseReportOptions::SetReportType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedAbuseReportOptions*), "SetReportType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::AbuseReportType>()});
  }
};
// Writing MetadataGetter for method: AdvancedAbuseReportOptions::SetVideoMode
// Il2CppName: SetVideoMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedAbuseReportOptions::*)(Oculus::Platform::AbuseReportVideoMode)>(&AdvancedAbuseReportOptions::SetVideoMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedAbuseReportOptions*), "SetVideoMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::AbuseReportVideoMode>()});
  }
};
// Writing MetadataGetter for method: AdvancedAbuseReportOptions::operator System::IntPtr
// Il2CppName: op_Explicit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&AdvancedAbuseReportOptions::operator System::IntPtr)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedAbuseReportOptions*), "op_Explicit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedAbuseReportOptions::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedAbuseReportOptions::*)()>(&AdvancedAbuseReportOptions::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedAbuseReportOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedAbuseReportOptions::*)()>(&AdvancedAbuseReportOptions::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedAbuseReportOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AdvancedAbuseReportOptions::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AdvancedAbuseReportOptions::*)()>(&AdvancedAbuseReportOptions::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AdvancedAbuseReportOptions*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.AndroidPlatform
#include "Oculus/Platform/AndroidPlatform.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.AndroidPlatform.Initialize
bool Oculus::Platform::AndroidPlatform::Initialize(::Il2CppString* appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AndroidPlatform::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.AndroidPlatform.AsyncInitialize
Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::AndroidPlatform::AsyncInitialize(::Il2CppString* appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::AndroidPlatform::AsyncInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>*, false>(this, ___internal__method, appId);
}
// Writing MetadataGetter for method: AndroidPlatform::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (AndroidPlatform::*)(::Il2CppString*)>(&AndroidPlatform::Initialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AndroidPlatform*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: AndroidPlatform::AsyncInitialize
// Il2CppName: AsyncInitialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Request_1<Oculus::Platform::Models::PlatformInitialize*>* (AndroidPlatform::*)(::Il2CppString*)>(&AndroidPlatform::AsyncInitialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AndroidPlatform*), "AsyncInitialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: AndroidPlatform::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AndroidPlatform::*)()>(&AndroidPlatform::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AndroidPlatform*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AndroidPlatform::*)()>(&AndroidPlatform::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AndroidPlatform*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.ApplicationOptions
#include "Oculus/Platform/ApplicationOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.ApplicationOptions.SetDeeplinkMessage
void Oculus::Platform::ApplicationOptions::SetDeeplinkMessage(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ApplicationOptions::SetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ApplicationOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::ApplicationOptions::operator System::IntPtr()
// Autogenerated method: Oculus.Platform.ApplicationOptions.Finalize
void Oculus::Platform::ApplicationOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ApplicationOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ApplicationOptions::SetDeeplinkMessage
// Il2CppName: SetDeeplinkMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ApplicationOptions::*)(::Il2CppString*)>(&ApplicationOptions::SetDeeplinkMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ApplicationOptions*), "SetDeeplinkMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ApplicationOptions::operator System::IntPtr
// Il2CppName: op_Explicit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&ApplicationOptions::operator System::IntPtr)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ApplicationOptions*), "op_Explicit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ApplicationOptions::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ApplicationOptions::*)()>(&ApplicationOptions::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ApplicationOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ApplicationOptions::*)()>(&ApplicationOptions::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ApplicationOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ApplicationOptions::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ApplicationOptions::*)()>(&ApplicationOptions::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ApplicationOptions*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.CAPI
#include "Oculus/Platform/CAPI.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.CAPI/ovrNetSyncVec3
#include "Oculus/Platform/CAPI_ovrNetSyncVec3.hpp"
// Including type: Oculus.Platform.CAPI/ovrMatchmakingCriterion
#include "Oculus/Platform/CAPI_ovrMatchmakingCriterion.hpp"
// Including type: Oculus.Platform.CAPI/ovrMatchmakingCustomQueryData
#include "Oculus/Platform/CAPI_ovrMatchmakingCustomQueryData.hpp"
// Including type: Oculus.Platform.CAPI/OculusInitParams
#include "Oculus/Platform/CAPI_OculusInitParams.hpp"
// Including type: Oculus.Platform.CAPI/FilterCallback
#include "Oculus/Platform/CAPI_FilterCallback.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Text.UTF8Encoding
#include "System/Text/UTF8Encoding.hpp"
// Including type: Oculus.Platform.LaunchResult
#include "Oculus/Platform/LaunchResult.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: Oculus.Platform.VoipMuteState
#include "Oculus/Platform/VoipMuteState.hpp"
// Including type: System.UIntPtr
#include "System/UIntPtr.hpp"
// Including type: Oculus.Platform.SendPolicy
#include "Oculus/Platform/SendPolicy.hpp"
// Including type: Oculus.Platform.SystemVoipStatus
#include "Oculus/Platform/SystemVoipStatus.hpp"
// Including type: Oculus.Platform.VoipDtxState
#include "Oculus/Platform/VoipDtxState.hpp"
// Including type: Oculus.Platform.VoipBitrate
#include "Oculus/Platform/VoipBitrate.hpp"
// Including type: Oculus.Platform.VoipSampleRate
#include "Oculus/Platform/VoipSampleRate.hpp"
// Including type: Oculus.Platform.LeaderboardFilterType
#include "Oculus/Platform/LeaderboardFilterType.hpp"
// Including type: Oculus.Platform.LeaderboardStartAt
#include "Oculus/Platform/LeaderboardStartAt.hpp"
// Including type: Oculus.Platform.LivestreamingAudience
#include "Oculus/Platform/LivestreamingAudience.hpp"
// Including type: Oculus.Platform.LivestreamingMicrophoneStatus
#include "Oculus/Platform/LivestreamingMicrophoneStatus.hpp"
// Including type: Oculus.Platform.MatchmakingStatApproach
#include "Oculus/Platform/MatchmakingStatApproach.hpp"
// Including type: Oculus.Platform.MediaContentType
#include "Oculus/Platform/MediaContentType.hpp"
// Including type: Oculus.Platform.NetSyncVoipMicSource
#include "Oculus/Platform/NetSyncVoipMicSource.hpp"
// Including type: Oculus.Platform.NetSyncVoipStreamMode
#include "Oculus/Platform/NetSyncVoipStreamMode.hpp"
// Including type: Oculus.Platform.RoomJoinPolicy
#include "Oculus/Platform/RoomJoinPolicy.hpp"
// Including type: Oculus.Platform.RoomMembershipLockStatus
#include "Oculus/Platform/RoomMembershipLockStatus.hpp"
// Including type: Oculus.Platform.PermissionType
#include "Oculus/Platform/PermissionType.hpp"
// Including type: Oculus.Platform.AchievementType
#include "Oculus/Platform/AchievementType.hpp"
// Including type: Oculus.Platform.ChallengeCreationType
#include "Oculus/Platform/ChallengeCreationType.hpp"
// Including type: Oculus.Platform.ChallengeVisibility
#include "Oculus/Platform/ChallengeVisibility.hpp"
// Including type: Oculus.Platform.CloudStorageDataStatus
#include "Oculus/Platform/CloudStorageDataStatus.hpp"
// Including type: Oculus.Platform.CloudStorageUpdateStatus
#include "Oculus/Platform/CloudStorageUpdateStatus.hpp"
// Including type: Oculus.Platform.LaunchType
#include "Oculus/Platform/LaunchType.hpp"
// Including type: Oculus.Platform.ServiceProvider
#include "Oculus/Platform/ServiceProvider.hpp"
// Including type: Oculus.Platform.LivestreamingStartStatus
#include "Oculus/Platform/LivestreamingStartStatus.hpp"
// Including type: Oculus.Platform.NetSyncDisconnectReason
#include "Oculus/Platform/NetSyncDisconnectReason.hpp"
// Including type: Oculus.Platform.NetSyncConnectionStatus
#include "Oculus/Platform/NetSyncConnectionStatus.hpp"
// Including type: Oculus.Platform.PeerConnectionState
#include "Oculus/Platform/PeerConnectionState.hpp"
// Including type: Oculus.Platform.PartyUpdateAction
#include "Oculus/Platform/PartyUpdateAction.hpp"
// Including type: Oculus.Platform.PlatformInitializeResult
#include "Oculus/Platform/PlatformInitializeResult.hpp"
// Including type: Oculus.Platform.RoomJoinability
#include "Oculus/Platform/RoomJoinability.hpp"
// Including type: Oculus.Platform.RoomType
#include "Oculus/Platform/RoomType.hpp"
// Including type: Oculus.Platform.SdkAccountType
#include "Oculus/Platform/SdkAccountType.hpp"
// Including type: Oculus.Platform.ShareMediaStatus
#include "Oculus/Platform/ShareMediaStatus.hpp"
// Including type: Oculus.Platform.PermissionGrantStatus
#include "Oculus/Platform/PermissionGrantStatus.hpp"
// Including type: Oculus.Platform.UserPresenceStatus
#include "Oculus/Platform/UserPresenceStatus.hpp"
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
// Including type: Oculus.Platform.AbuseReportVideoMode
#include "Oculus/Platform/AbuseReportVideoMode.hpp"
// Including type: Oculus.Platform.ChallengeViewerFilter
#include "Oculus/Platform/ChallengeViewerFilter.hpp"
// Including type: Oculus.Platform.RichPresenceExtraContext
#include "Oculus/Platform/RichPresenceExtraContext.hpp"
// Including type: Oculus.Platform.UserOrdering
#include "Oculus/Platform/UserOrdering.hpp"
// Including type: Oculus.Platform.TimeWindow
#include "Oculus/Platform/TimeWindow.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String DLL_NAME
::Il2CppString* Oculus::Platform::CAPI::_get_DLL_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::_get_DLL_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Oculus.Platform", "CAPI", "DLL_NAME"));
}
// Autogenerated static field setter
// Set static field: static public System.String DLL_NAME
void Oculus::Platform::CAPI::_set_DLL_NAME(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::_set_DLL_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CAPI", "DLL_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.UTF8Encoding nativeStringEncoding
System::Text::UTF8Encoding* Oculus::Platform::CAPI::_get_nativeStringEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::_get_nativeStringEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::UTF8Encoding*>("Oculus.Platform", "CAPI", "nativeStringEncoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.UTF8Encoding nativeStringEncoding
void Oculus::Platform::CAPI::_set_nativeStringEncoding(System::Text::UTF8Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::_set_nativeStringEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CAPI", "nativeStringEncoding", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 VoipFilterBufferSize
int Oculus::Platform::CAPI::_get_VoipFilterBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::_get_VoipFilterBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Platform", "CAPI", "VoipFilterBufferSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 VoipFilterBufferSize
void Oculus::Platform::CAPI::_set_VoipFilterBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::_set_VoipFilterBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CAPI", "VoipFilterBufferSize", value));
}
// Autogenerated method: Oculus.Platform.CAPI.ArrayOfStructsToIntPtr
System::IntPtr Oculus::Platform::CAPI::ArrayOfStructsToIntPtr(System::Array* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ArrayOfStructsToIntPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ArrayOfStructsToIntPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ar);
}
// Autogenerated method: Oculus.Platform.CAPI.DictionaryToOVRKeyValuePairs
::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* Oculus::Platform::CAPI::DictionaryToOVRKeyValuePairs(System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppObject*>* dict) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::DictionaryToOVRKeyValuePairs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DictionaryToOVRKeyValuePairs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dict)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<Oculus::Platform::CAPI::ovrKeyValuePair>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dict);
}
// Autogenerated method: Oculus.Platform.CAPI.IntPtrToByteArray
::Array<uint8_t>* Oculus::Platform::CAPI::IntPtrToByteArray(System::IntPtr data, uint64_t size) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::IntPtrToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "IntPtrToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data, size);
}
// Autogenerated method: Oculus.Platform.CAPI.DataStoreFromNative
System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* Oculus::Platform::CAPI::DataStoreFromNative(System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::DataStoreFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DataStoreFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.StringFromNative
::Il2CppString* Oculus::Platform::CAPI::StringFromNative(System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::StringFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "StringFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.GetNativeStringLengthNotIncludingNullTerminator
int Oculus::Platform::CAPI::GetNativeStringLengthNotIncludingNullTerminator(System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::GetNativeStringLengthNotIncludingNullTerminator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "GetNativeStringLengthNotIncludingNullTerminator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.DateTimeFromNative
System::DateTime Oculus::Platform::CAPI::DateTimeFromNative(uint64_t seconds_since_the_one_true_epoch) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::DateTimeFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DateTimeFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seconds_since_the_one_true_epoch)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, seconds_since_the_one_true_epoch);
}
// Autogenerated method: Oculus.Platform.CAPI.DateTimeToNative
uint64_t Oculus::Platform::CAPI::DateTimeToNative(System::DateTime dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::DateTimeToNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DateTimeToNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dt);
}
// Autogenerated method: Oculus.Platform.CAPI.BlobFromNative
::Array<uint8_t>* Oculus::Platform::CAPI::BlobFromNative(uint size, System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::BlobFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "BlobFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.FiledataFromNative
::Array<uint8_t>* Oculus::Platform::CAPI::FiledataFromNative(uint size, System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::FiledataFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "FiledataFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.StringToNative
System::IntPtr Oculus::Platform::CAPI::StringToNative(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::StringToNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "StringToNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapper
bool Oculus::Platform::CAPI::ovr_UnityInitWrapper(::Il2CppString* appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UnityInitWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitGlobals
void Oculus::Platform::CAPI::ovr_UnityInitGlobals(System::IntPtr loggingCB) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UnityInitGlobals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitGlobals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loggingCB)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, loggingCB);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapperAsynchronous
uint64_t Oculus::Platform::CAPI::ovr_UnityInitWrapperAsynchronous(::Il2CppString* appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UnityInitWrapperAsynchronous");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapperAsynchronous", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapperStandalone
bool Oculus::Platform::CAPI::ovr_UnityInitWrapperStandalone(::Il2CppString* accessToken, System::IntPtr loggingCB) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UnityInitWrapperStandalone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapperStandalone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accessToken), ::il2cpp_utils::ExtractType(loggingCB)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, accessToken, loggingCB);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Platform_InitializeStandaloneOculus
uint64_t Oculus::Platform::CAPI::ovr_Platform_InitializeStandaloneOculus(Oculus::Platform::CAPI::OculusInitParams& init) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Platform_InitializeStandaloneOculus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Platform_InitializeStandaloneOculus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(init)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, init);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PlatformInitializeWithAccessToken
uint64_t Oculus::Platform::CAPI::ovr_PlatformInitializeWithAccessToken(uint64_t appId, ::Il2CppString* accessToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PlatformInitializeWithAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PlatformInitializeWithAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(accessToken)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appId, accessToken);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapperWindows
bool Oculus::Platform::CAPI::ovr_UnityInitWrapperWindows(::Il2CppString* appId, System::IntPtr loggingCB) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UnityInitWrapperWindows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapperWindows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(loggingCB)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appId, loggingCB);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapperWindowsAsynchronous
uint64_t Oculus::Platform::CAPI::ovr_UnityInitWrapperWindowsAsynchronous(::Il2CppString* appId, System::IntPtr loggingCB) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UnityInitWrapperWindowsAsynchronous");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapperWindowsAsynchronous", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(loggingCB)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appId, loggingCB);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SetDeveloperAccessToken
bool Oculus::Platform::CAPI::ovr_SetDeveloperAccessToken(::Il2CppString* accessToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_SetDeveloperAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SetDeveloperAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accessToken)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, accessToken);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GetLoggedInUserLocale
::Il2CppString* Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GetLoggedInUserLocale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GetLoggedInUserLocale_Native
System::IntPtr Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale_Native() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GetLoggedInUserLocale_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PopMessage
System::IntPtr Oculus::Platform::CAPI::ovr_PopMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PopMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PopMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_FreeMessage
void Oculus::Platform::CAPI::ovr_FreeMessage(System::IntPtr message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_FreeMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_FreeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_CreateEncoder
System::IntPtr Oculus::Platform::CAPI::ovr_Voip_CreateEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_CreateEncoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_CreateEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_DestroyEncoder
void Oculus::Platform::CAPI::ovr_Voip_DestroyEncoder(System::IntPtr encoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_DestroyEncoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_DestroyEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encoder)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, encoder);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_CreateDecoder
System::IntPtr Oculus::Platform::CAPI::ovr_Voip_CreateDecoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_CreateDecoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_CreateDecoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_DestroyDecoder
void Oculus::Platform::CAPI::ovr_Voip_DestroyDecoder(System::IntPtr decoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_DestroyDecoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_DestroyDecoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(decoder)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, decoder);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipDecoder_Decode
void Oculus::Platform::CAPI::ovr_VoipDecoder_Decode(System::IntPtr obj, ::Array<uint8_t>* compressedData, uint64_t compressedSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_VoipDecoder_Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipDecoder_Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(compressedData), ::il2cpp_utils::ExtractType(compressedSize)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, compressedData, compressedSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_Create
System::IntPtr Oculus::Platform::CAPI::ovr_Microphone_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Microphone_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_Destroy
void Oculus::Platform::CAPI::ovr_Microphone_Destroy(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Microphone_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetSystemVoipPassthrough
void Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipPassthrough(bool passthrough) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetSystemVoipPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(passthrough)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, passthrough);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetSystemVoipMicrophoneMuted
void Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipMicrophoneMuted(Oculus::Platform::VoipMuteState muted) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(muted)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, muted);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityResetTestPlatform
void Oculus::Platform::CAPI::ovr_UnityResetTestPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UnityResetTestPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityResetTestPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_GetWithMessageType
uint64_t Oculus::Platform::CAPI::ovr_HTTP_GetWithMessageType(::Il2CppString* url, int messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_HTTP_GetWithMessageType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_GetWithMessageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(messageType)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url, messageType);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CrashApplication
void Oculus::Platform::CAPI::ovr_CrashApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CrashApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CrashApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetMicrophoneFilterCallback
void Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallback(Oculus::Platform::CAPI::FilterCallback* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetMicrophoneFilterCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cb)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cb);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer
void Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(Oculus::Platform::CAPI::FilterCallback* cb, System::UIntPtr bufferSizeElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(bufferSizeElements)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cb, bufferSizeElements);
}
// Autogenerated method: Oculus.Platform.CAPI.LogNewEvent
void Oculus::Platform::CAPI::LogNewEvent(::Il2CppString* eventName, System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::LogNewEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "LogNewEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventName), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, eventName, values);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Log_NewEvent
void Oculus::Platform::CAPI::ovr_Log_NewEvent(System::IntPtr eventName, ::Array<System::IntPtr>* values, System::UIntPtr length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Log_NewEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Log_NewEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventName), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, eventName, values, length);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_GetLaunchDetails
System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetLaunchDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetLaunchDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_GetLaunchDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_LogDeeplinkResult
void Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult(::Il2CppString* trackingID, Oculus::Platform::LaunchResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_LogDeeplinkResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingID), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, trackingID, result);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_LogDeeplinkResult_Native
void Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult_Native(System::IntPtr trackingID, Oculus::Platform::LaunchResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_LogDeeplinkResult_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingID), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, trackingID, result);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_StartTransfer
uint64_t Oculus::Platform::CAPI::ovr_HTTP_StartTransfer(::Il2CppString* url, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_HTTP_StartTransfer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_StartTransfer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(headers)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url, headers);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_StartTransfer_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_StartTransfer_Native(System::IntPtr url, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* headers, System::UIntPtr numItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_HTTP_StartTransfer_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_StartTransfer_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(headers), ::il2cpp_utils::ExtractType(numItems)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url, headers, numItems);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Write
bool Oculus::Platform::CAPI::ovr_HTTP_Write(uint64_t transferId, ::Array<uint8_t>* bytes, System::UIntPtr length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_HTTP_Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transferId), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transferId, bytes, length);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_WriteEOM
void Oculus::Platform::CAPI::ovr_HTTP_WriteEOM(uint64_t transferId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_HTTP_WriteEOM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_WriteEOM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transferId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transferId);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetStringForJavascript
::Il2CppString* Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript(System::IntPtr message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetStringForJavascript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetStringForJavascript_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript_Native(System::IntPtr message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetStringForJavascript_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetAmbisonicFloatPCM
System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicFloatPCM(int64_t connection_id, ::Array<float>* outputBuffer, System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicFloatPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetAmbisonicFloatPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetAmbisonicInt16PCM
System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInt16PCM(int64_t connection_id, ::Array<int16_t>* outputBuffer, System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInt16PCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetAmbisonicInt16PCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetAmbisonicInterleavedFloatPCM
System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedFloatPCM(int64_t connection_id, ::Array<float>* outputBuffer, System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedFloatPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetAmbisonicInterleavedFloatPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetAmbisonicInterleavedInt16PCM
System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedInt16PCM(int64_t connection_id, ::Array<int16_t>* outputBuffer, System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedInt16PCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetAmbisonicInterleavedInt16PCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetListenerPosition
bool Oculus::Platform::CAPI::ovr_NetSync_GetListenerPosition(int64_t connection_id, uint64_t sessionId, Oculus::Platform::CAPI::ovrNetSyncVec3& position) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_GetListenerPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetListenerPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, sessionId, position);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetMonostreamFloatPCM
System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamFloatPCM(int64_t connection_id, uint64_t sessionId, ::Array<float>* outputBuffer, System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamFloatPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetMonostreamFloatPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, sessionId, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetMonostreamInt16PCM
System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamInt16PCM(int64_t connection_id, uint64_t session_id, ::Array<int16_t>* outputBuffer, System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamInt16PCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetMonostreamInt16PCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(session_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, session_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetPcmBufferMaxSamples
System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetPcmBufferMaxSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_GetPcmBufferMaxSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetPcmBufferMaxSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetVoipAmplitude
bool Oculus::Platform::CAPI::ovr_NetSync_GetVoipAmplitude(int64_t connection_id, uint64_t sessionId, float& amplitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_GetVoipAmplitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetVoipAmplitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(amplitude)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, sessionId, amplitude);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetListenerPosition
void Oculus::Platform::CAPI::ovr_NetSync_SetListenerPosition(int64_t connection_id, Oculus::Platform::CAPI::ovrNetSyncVec3& position) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_SetListenerPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetListenerPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, position);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_Accept
void Oculus::Platform::CAPI::ovr_Net_Accept(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Net_Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_AcceptForCurrentRoom
bool Oculus::Platform::CAPI::ovr_Net_AcceptForCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Net_AcceptForCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_AcceptForCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_Close
void Oculus::Platform::CAPI::ovr_Net_Close(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Net_Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_CloseForCurrentRoom
void Oculus::Platform::CAPI::ovr_Net_CloseForCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Net_CloseForCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_CloseForCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_Connect
void Oculus::Platform::CAPI::ovr_Net_Connect(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Net_Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_IsConnected
bool Oculus::Platform::CAPI::ovr_Net_IsConnected(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Net_IsConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_Ping
uint64_t Oculus::Platform::CAPI::ovr_Net_Ping(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Net_Ping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_Ping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_ReadPacket
System::IntPtr Oculus::Platform::CAPI::ovr_Net_ReadPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Net_ReadPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_ReadPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_SendPacket
bool Oculus::Platform::CAPI::ovr_Net_SendPacket(uint64_t userID, System::UIntPtr length, ::Array<uint8_t>* bytes, Oculus::Platform::SendPolicy policy) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Net_SendPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_SendPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(policy)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, length, bytes, policy);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_SendPacketToCurrentRoom
bool Oculus::Platform::CAPI::ovr_Net_SendPacketToCurrentRoom(System::UIntPtr length, ::Array<uint8_t>* bytes, Oculus::Platform::SendPolicy policy) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Net_SendPacketToCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_SendPacketToCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(policy)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, length, bytes, policy);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_PluginGetSharedMemHandle
int Oculus::Platform::CAPI::ovr_Party_PluginGetSharedMemHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Party_PluginGetSharedMemHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_PluginGetSharedMemHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_PluginGetVoipMicrophoneMuted
Oculus::Platform::VoipMuteState Oculus::Platform::CAPI::ovr_Party_PluginGetVoipMicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Party_PluginGetVoipMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_PluginGetVoipMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::VoipMuteState, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_PluginGetVoipPassthrough
bool Oculus::Platform::CAPI::ovr_Party_PluginGetVoipPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Party_PluginGetVoipPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_PluginGetVoipPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_PluginGetVoipStatus
Oculus::Platform::SystemVoipStatus Oculus::Platform::CAPI::ovr_Party_PluginGetVoipStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Party_PluginGetVoipStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_PluginGetVoipStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::SystemVoipStatus, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_Accept
void Oculus::Platform::CAPI::ovr_Voip_Accept(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetIsConnectionUsingDtx
Oculus::Platform::VoipDtxState Oculus::Platform::CAPI::ovr_Voip_GetIsConnectionUsingDtx(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_GetIsConnectionUsingDtx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetIsConnectionUsingDtx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::VoipDtxState, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetLocalBitrate
Oculus::Platform::VoipBitrate Oculus::Platform::CAPI::ovr_Voip_GetLocalBitrate(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_GetLocalBitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetLocalBitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::VoipBitrate, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetOutputBufferMaxSize
System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetOutputBufferMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_GetOutputBufferMaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetOutputBufferMaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCM
System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCM(uint64_t senderID, ::Array<int16_t>* outputBuffer, System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_GetPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, senderID, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCMFloat
System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCMFloat(uint64_t senderID, ::Array<float>* outputBuffer, System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_GetPCMFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCMFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, senderID, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCMSize
System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCMSize(uint64_t senderID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_GetPCMSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCMSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, senderID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCMWithTimestamp
System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestamp(uint64_t senderID, ::Array<int16_t>* outputBuffer, System::UIntPtr outputBufferNumElements, ::Array<uint>* timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCMWithTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, senderID, outputBuffer, outputBufferNumElements, timestamp);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCMWithTimestampFloat
System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestampFloat(uint64_t senderID, ::Array<float>* outputBuffer, System::UIntPtr outputBufferNumElements, ::Array<uint>* timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestampFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCMWithTimestampFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, senderID, outputBuffer, outputBufferNumElements, timestamp);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetRemoteBitrate
Oculus::Platform::VoipBitrate Oculus::Platform::CAPI::ovr_Voip_GetRemoteBitrate(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_GetRemoteBitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetRemoteBitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::VoipBitrate, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetSyncTimestamp
uint Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestamp(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetSyncTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetSyncTimestampDifference
int64_t Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestampDifference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetSyncTimestampDifference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetSystemVoipMicrophoneMuted
Oculus::Platform::VoipMuteState Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipMicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::VoipMuteState, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetSystemVoipStatus
Oculus::Platform::SystemVoipStatus Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetSystemVoipStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::SystemVoipStatus, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetMicrophoneMuted
void Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneMuted(Oculus::Platform::VoipMuteState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, state);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetNewConnectionOptions
void Oculus::Platform::CAPI::ovr_Voip_SetNewConnectionOptions(System::IntPtr voipOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_SetNewConnectionOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetNewConnectionOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voipOptions)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, voipOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetOutputSampleRate
void Oculus::Platform::CAPI::ovr_Voip_SetOutputSampleRate(Oculus::Platform::VoipSampleRate rate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_SetOutputSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetOutputSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rate)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_Start
void Oculus::Platform::CAPI::ovr_Voip_Start(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_Stop
void Oculus::Platform::CAPI::ovr_Voip_Stop(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReport_LaunchAdvancedReportFlow
uint64_t Oculus::Platform::CAPI::ovr_AbuseReport_LaunchAdvancedReportFlow(uint64_t content_id, System::IntPtr abuse_report_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AbuseReport_LaunchAdvancedReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReport_LaunchAdvancedReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(content_id), ::il2cpp_utils::ExtractType(abuse_report_options)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, content_id, abuse_report_options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_AddCount
uint64_t Oculus::Platform::CAPI::ovr_Achievements_AddCount(::Il2CppString* name, uint64_t count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Achievements_AddCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_AddCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_AddCount_Native
uint64_t Oculus::Platform::CAPI::ovr_Achievements_AddCount_Native(System::IntPtr name, uint64_t count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Achievements_AddCount_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_AddCount_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_AddFields
uint64_t Oculus::Platform::CAPI::ovr_Achievements_AddFields(::Il2CppString* name, ::Il2CppString* fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Achievements_AddFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_AddFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, fields);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_AddFields_Native
uint64_t Oculus::Platform::CAPI::ovr_Achievements_AddFields_Native(System::IntPtr name, System::IntPtr fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Achievements_AddFields_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_AddFields_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, fields);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_GetAllDefinitions
uint64_t Oculus::Platform::CAPI::ovr_Achievements_GetAllDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Achievements_GetAllDefinitions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_GetAllDefinitions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_GetAllProgress
uint64_t Oculus::Platform::CAPI::ovr_Achievements_GetAllProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Achievements_GetAllProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_GetAllProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_GetDefinitionsByName
uint64_t Oculus::Platform::CAPI::ovr_Achievements_GetDefinitionsByName(::Array<::Il2CppString*>* names, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Achievements_GetDefinitionsByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_GetDefinitionsByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, names, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_GetProgressByName
uint64_t Oculus::Platform::CAPI::ovr_Achievements_GetProgressByName(::Array<::Il2CppString*>* names, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Achievements_GetProgressByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_GetProgressByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, names, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_Unlock
uint64_t Oculus::Platform::CAPI::ovr_Achievements_Unlock(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Achievements_Unlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_Unlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_Unlock_Native
uint64_t Oculus::Platform::CAPI::ovr_Achievements_Unlock_Native(System::IntPtr name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Achievements_Unlock_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_Unlock_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_ExecuteCoordinatedLaunch
uint64_t Oculus::Platform::CAPI::ovr_Application_ExecuteCoordinatedLaunch(uint64_t appID, uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Application_ExecuteCoordinatedLaunch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_ExecuteCoordinatedLaunch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID), ::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appID, roomID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_GetInstalledApplications
uint64_t Oculus::Platform::CAPI::ovr_Application_GetInstalledApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Application_GetInstalledApplications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_GetInstalledApplications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_GetVersion
uint64_t Oculus::Platform::CAPI::ovr_Application_GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Application_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_LaunchOtherApp
uint64_t Oculus::Platform::CAPI::ovr_Application_LaunchOtherApp(uint64_t appID, System::IntPtr deeplink_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Application_LaunchOtherApp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_LaunchOtherApp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID), ::il2cpp_utils::ExtractType(deeplink_options)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appID, deeplink_options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_GetRegisteredPIDs
uint64_t Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetRegisteredPIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetRegisteredPIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_GetRegisteredPIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_GetSessionKey
uint64_t Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetSessionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetSessionKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_GetSessionKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_RegisterSessionKey
uint64_t Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey(::Il2CppString* sessionKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_RegisterSessionKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionKey)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sessionKey);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_RegisterSessionKey_Native
uint64_t Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey_Native(System::IntPtr sessionKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_RegisterSessionKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionKey)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sessionKey);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_Delete
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_Delete(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFile_Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DeleteById
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DeleteById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFile_DeleteById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DeleteById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DeleteByName
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName(::Il2CppString* assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DeleteByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DeleteByName_Native
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName_Native(System::IntPtr assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DeleteByName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_Download
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_Download(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFile_Download");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_Download", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadById
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFile_DownloadById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadByName
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName(::Il2CppString* assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadByName_Native
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName_Native(System::IntPtr assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadByName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadCancel
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancel(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadCancelById
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadCancelById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadCancelByName
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName(::Il2CppString* assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadCancelByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadCancelByName_Native
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName_Native(System::IntPtr assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadCancelByName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_GetList
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFile_GetList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_GetList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_Status
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_Status(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFile_Status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_StatusById
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_StatusById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFile_StatusById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_StatusById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_StatusByName
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_StatusByName(::Il2CppString* assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFile_StatusByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_StatusByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_StatusByName_Native
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_StatusByName_Native(System::IntPtr assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFile_StatusByName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_StatusByName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Avatar_UpdateMetaData
uint64_t Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData(::Il2CppString* avatarMetaData, ::Il2CppString* imageFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Avatar_UpdateMetaData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarMetaData), ::il2cpp_utils::ExtractType(imageFilePath)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, avatarMetaData, imageFilePath);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Avatar_UpdateMetaData_Native
uint64_t Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData_Native(System::IntPtr avatarMetaData, System::IntPtr imageFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Avatar_UpdateMetaData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarMetaData), ::il2cpp_utils::ExtractType(imageFilePath)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, avatarMetaData, imageFilePath);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Cal_FinalizeApplication
uint64_t Oculus::Platform::CAPI::ovr_Cal_FinalizeApplication(uint64_t groupingObject, ::Array<uint64_t>* userIDs, int numUserIDs, uint64_t finalized_application_ID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Cal_FinalizeApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Cal_FinalizeApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupingObject), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(numUserIDs), ::il2cpp_utils::ExtractType(finalized_application_ID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, groupingObject, userIDs, numUserIDs, finalized_application_ID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Cal_GetSuggestedApplications
uint64_t Oculus::Platform::CAPI::ovr_Cal_GetSuggestedApplications(uint64_t groupingObject, ::Array<uint64_t>* userIDs, int numUserIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Cal_GetSuggestedApplications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Cal_GetSuggestedApplications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupingObject), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(numUserIDs)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, groupingObject, userIDs, numUserIDs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Cal_ProposeApplication
uint64_t Oculus::Platform::CAPI::ovr_Cal_ProposeApplication(uint64_t groupingObject, ::Array<uint64_t>* userIDs, int numUserIDs, uint64_t proposed_application_ID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Cal_ProposeApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Cal_ProposeApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupingObject), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(numUserIDs), ::il2cpp_utils::ExtractType(proposed_application_ID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, groupingObject, userIDs, numUserIDs, proposed_application_ID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Create
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Create(::Il2CppString* leaderboardName, System::IntPtr challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenges_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, challengeOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Create_Native
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Create_Native(System::IntPtr leaderboardName, System::IntPtr challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenges_Create_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Create_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, challengeOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_DeclineInvite
uint64_t Oculus::Platform::CAPI::ovr_Challenges_DeclineInvite(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenges_DeclineInvite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_DeclineInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Delete
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Delete(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenges_Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Get
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Get(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenges_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetEntries
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetEntries(uint64_t challengeID, int limit, Oculus::Platform::LeaderboardFilterType filter, Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenges_GetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetEntriesAfterRank
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetEntriesAfterRank(uint64_t challengeID, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenges_GetEntriesAfterRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetEntriesAfterRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetEntriesByIds
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetEntriesByIds(uint64_t challengeID, int limit, Oculus::Platform::LeaderboardStartAt startAt, ::Array<uint64_t>* userIDs, uint userIDLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenges_GetEntriesByIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetEntriesByIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(userIDLength)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID, limit, startAt, userIDs, userIDLength);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetList
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetList(System::IntPtr challengeOptions, int limit) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenges_GetList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeOptions), ::il2cpp_utils::ExtractType(limit)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeOptions, limit);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetNextChallenges
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetNextChallenges(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenges_GetNextChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetNextChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetNextEntries
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetNextEntries(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenges_GetNextEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetNextEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetPreviousChallenges
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetPreviousChallenges(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenges_GetPreviousChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetPreviousChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetPreviousEntries
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetPreviousEntries(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenges_GetPreviousEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetPreviousEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Join
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Join(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenges_Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Leave
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Leave(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenges_Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_UpdateInfo
uint64_t Oculus::Platform::CAPI::ovr_Challenges_UpdateInfo(uint64_t challengeID, System::IntPtr challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenges_UpdateInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_UpdateInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challengeID, challengeOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Delete
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Delete(::Il2CppString* bucket, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage_Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Delete_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Delete_Native(System::IntPtr bucket, System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage_Delete_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Delete_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Load
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Load(::Il2CppString* bucket, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage_Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Load_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Load_Native(System::IntPtr bucket, System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage_Load_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Load_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadBucketMetadata
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadBucketMetadata(::Il2CppString* bucket) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage_LoadBucketMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadBucketMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadBucketMetadata_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadBucketMetadata_Native(System::IntPtr bucket) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage_LoadBucketMetadata_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadBucketMetadata_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadConflictMetadata
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadConflictMetadata(::Il2CppString* bucket, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage_LoadConflictMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadConflictMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadConflictMetadata_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadConflictMetadata_Native(System::IntPtr bucket, System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage_LoadConflictMetadata_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadConflictMetadata_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadHandle
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadHandle(::Il2CppString* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage_LoadHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadHandle_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadHandle_Native(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage_LoadHandle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadHandle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadMetadata
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadMetadata(::Il2CppString* bucket, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage_LoadMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadMetadata_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadMetadata_Native(System::IntPtr bucket, System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage_LoadMetadata_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadMetadata_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_ResolveKeepLocal
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepLocal(::Il2CppString* bucket, ::Il2CppString* key, ::Il2CppString* remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_ResolveKeepLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_ResolveKeepLocal_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepLocal_Native(System::IntPtr bucket, System::IntPtr key, System::IntPtr remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepLocal_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_ResolveKeepLocal_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_ResolveKeepRemote
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepRemote(::Il2CppString* bucket, ::Il2CppString* key, ::Il2CppString* remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepRemote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_ResolveKeepRemote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_ResolveKeepRemote_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepRemote_Native(System::IntPtr bucket, System::IntPtr key, System::IntPtr remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepRemote_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_ResolveKeepRemote_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Save
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Save(::Il2CppString* bucket, ::Il2CppString* key, ::Array<uint8_t>* data, uint dataSize, int64_t counter, ::Il2CppString* extraData) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage_Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataSize), ::il2cpp_utils::ExtractType(counter), ::il2cpp_utils::ExtractType(extraData)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key, data, dataSize, counter, extraData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Save_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Save_Native(System::IntPtr bucket, System::IntPtr key, ::Array<uint8_t>* data, uint dataSize, int64_t counter, System::IntPtr extraData) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage_Save_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Save_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataSize), ::il2cpp_utils::ExtractType(counter), ::il2cpp_utils::ExtractType(extraData)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bucket, key, data, dataSize, counter, extraData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage2_GetUserDirectoryPath
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage2_GetUserDirectoryPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage2_GetUserDirectoryPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage2_GetUserDirectoryPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_GetCurrentMapUuid
uint64_t Oculus::Platform::CAPI::ovr_Colocation_GetCurrentMapUuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Colocation_GetCurrentMapUuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_GetCurrentMapUuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_RequestMap
uint64_t Oculus::Platform::CAPI::ovr_Colocation_RequestMap(::Il2CppString* uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Colocation_RequestMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_RequestMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_RequestMap_Native
uint64_t Oculus::Platform::CAPI::ovr_Colocation_RequestMap_Native(System::IntPtr uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Colocation_RequestMap_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_RequestMap_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_ShareMap
uint64_t Oculus::Platform::CAPI::ovr_Colocation_ShareMap(::Il2CppString* uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Colocation_ShareMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_ShareMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_ShareMap_Native
uint64_t Oculus::Platform::CAPI::ovr_Colocation_ShareMap_Native(System::IntPtr uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Colocation_ShareMap_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_ShareMap_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Entitlement_GetIsViewerEntitled
uint64_t Oculus::Platform::CAPI::ovr_Entitlement_GetIsViewerEntitled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Entitlement_GetIsViewerEntitled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Entitlement_GetIsViewerEntitled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GraphAPI_Get
uint64_t Oculus::Platform::CAPI::ovr_GraphAPI_Get(::Il2CppString* url) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_GraphAPI_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GraphAPI_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GraphAPI_Get_Native
uint64_t Oculus::Platform::CAPI::ovr_GraphAPI_Get_Native(System::IntPtr url) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_GraphAPI_Get_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GraphAPI_Get_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GraphAPI_Post
uint64_t Oculus::Platform::CAPI::ovr_GraphAPI_Post(::Il2CppString* url) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_GraphAPI_Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GraphAPI_Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GraphAPI_Post_Native
uint64_t Oculus::Platform::CAPI::ovr_GraphAPI_Post_Native(System::IntPtr url) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_GraphAPI_Post_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GraphAPI_Post_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_LaunchInvitePanel
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_LaunchInvitePanel(System::IntPtr options) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_GroupPresence_LaunchInvitePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_LaunchInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Get
uint64_t Oculus::Platform::CAPI::ovr_HTTP_Get(::Il2CppString* url) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_HTTP_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Get_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_Get_Native(System::IntPtr url) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_HTTP_Get_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Get_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_GetToFile
uint64_t Oculus::Platform::CAPI::ovr_HTTP_GetToFile(::Il2CppString* url, ::Il2CppString* diskFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_HTTP_GetToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_GetToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(diskFile)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url, diskFile);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_GetToFile_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_GetToFile_Native(System::IntPtr url, System::IntPtr diskFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_HTTP_GetToFile_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_GetToFile_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(diskFile)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url, diskFile);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_MultiPartPost
uint64_t Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost(::Il2CppString* url, ::Il2CppString* filepath_param_name, ::Il2CppString* filepath, ::Il2CppString* access_token, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* post_params) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_MultiPartPost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(filepath_param_name), ::il2cpp_utils::ExtractType(filepath), ::il2cpp_utils::ExtractType(access_token), ::il2cpp_utils::ExtractType(post_params)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url, filepath_param_name, filepath, access_token, post_params);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_MultiPartPost_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost_Native(System::IntPtr url, System::IntPtr filepath_param_name, System::IntPtr filepath, System::IntPtr access_token, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* post_params, System::UIntPtr numItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_MultiPartPost_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(filepath_param_name), ::il2cpp_utils::ExtractType(filepath), ::il2cpp_utils::ExtractType(access_token), ::il2cpp_utils::ExtractType(post_params), ::il2cpp_utils::ExtractType(numItems)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url, filepath_param_name, filepath, access_token, post_params, numItems);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Post
uint64_t Oculus::Platform::CAPI::ovr_HTTP_Post(::Il2CppString* url) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_HTTP_Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Post_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_Post_Native(System::IntPtr url) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_HTTP_Post_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Post_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_ConsumePurchase
uint64_t Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase(::Il2CppString* sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_ConsumePurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_ConsumePurchase_Native
uint64_t Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase_Native(System::IntPtr sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_ConsumePurchase_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_GetProductsBySKU
uint64_t Oculus::Platform::CAPI::ovr_IAP_GetProductsBySKU(::Array<::Il2CppString*>* skus, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_IAP_GetProductsBySKU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_GetProductsBySKU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skus), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, skus, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_GetViewerPurchases
uint64_t Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchases() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_GetViewerPurchases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_GetViewerPurchasesDurableCache
uint64_t Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchasesDurableCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchasesDurableCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_GetViewerPurchasesDurableCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_LaunchCheckoutFlow
uint64_t Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow(::Il2CppString* sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_LaunchCheckoutFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_LaunchCheckoutFlow_Native
uint64_t Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow_Native(System::IntPtr sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_LaunchCheckoutFlow_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePack_GetCurrent
uint64_t Oculus::Platform::CAPI::ovr_LanguagePack_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LanguagePack_GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePack_GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePack_SetCurrent
uint64_t Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent(::Il2CppString* tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePack_SetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePack_SetCurrent_Native
uint64_t Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent_Native(System::IntPtr tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePack_SetCurrent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_Get
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_Get(::Il2CppString* leaderboardName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Leaderboard_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_Get_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_Get_Native(System::IntPtr leaderboardName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Leaderboard_Get_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_Get_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntries
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries(::Il2CppString* leaderboardName, int limit, Oculus::Platform::LeaderboardFilterType filter, Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntries_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries_Native(System::IntPtr leaderboardName, int limit, Oculus::Platform::LeaderboardFilterType filter, Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntries_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntriesAfterRank
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank(::Il2CppString* leaderboardName, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntriesAfterRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntriesAfterRank_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank_Native(System::IntPtr leaderboardName, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntriesAfterRank_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntriesByIds
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds(::Il2CppString* leaderboardName, int limit, Oculus::Platform::LeaderboardStartAt startAt, ::Array<uint64_t>* userIDs, uint userIDLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntriesByIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(userIDLength)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, limit, startAt, userIDs, userIDLength);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntriesByIds_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds_Native(System::IntPtr leaderboardName, int limit, Oculus::Platform::LeaderboardStartAt startAt, ::Array<uint64_t>* userIDs, uint userIDLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntriesByIds_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(userIDLength)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, limit, startAt, userIDs, userIDLength);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetNextEntries
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetNextEntries(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Leaderboard_GetNextEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetNextEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetPreviousEntries
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetPreviousEntries(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Leaderboard_GetPreviousEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetPreviousEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_WriteEntry
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry(::Il2CppString* leaderboardName, int64_t score, ::Array<uint8_t>* extraData, uint extraDataLength, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_WriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(extraDataLength), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, score, extraData, extraDataLength, forceUpdate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_WriteEntry_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry_Native(System::IntPtr leaderboardName, int64_t score, ::Array<uint8_t>* extraData, uint extraDataLength, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_WriteEntry_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(extraDataLength), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, score, extraData, extraDataLength, forceUpdate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_WriteEntryWithSupplementaryMetric
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric(::Il2CppString* leaderboardName, int64_t score, int64_t supplementaryMetric, ::Array<uint8_t>* extraData, uint extraDataLength, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_WriteEntryWithSupplementaryMetric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(supplementaryMetric), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(extraDataLength), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, score, supplementaryMetric, extraData, extraDataLength, forceUpdate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native(System::IntPtr leaderboardName, int64_t score, int64_t supplementaryMetric, ::Array<uint8_t>* extraData, uint extraDataLength, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(supplementaryMetric), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(extraDataLength), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, leaderboardName, score, supplementaryMetric, extraData, extraDataLength, forceUpdate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_GetStatus
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_GetStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Livestreaming_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_IsAllowedForApplication
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication(::Il2CppString* packageName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_IsAllowedForApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packageName)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, packageName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_IsAllowedForApplication_Native
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication_Native(System::IntPtr packageName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_IsAllowedForApplication_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packageName)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, packageName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_LaunchLivestreamingFlow
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_LaunchLivestreamingFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Livestreaming_LaunchLivestreamingFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_LaunchLivestreamingFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_PauseStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_PauseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Livestreaming_PauseStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_PauseStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_ResumeStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_ResumeStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Livestreaming_ResumeStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_ResumeStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_StartPartyStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_StartPartyStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Livestreaming_StartPartyStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_StartPartyStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_StartStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_StartStream(Oculus::Platform::LivestreamingAudience audience, Oculus::Platform::LivestreamingMicrophoneStatus micStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Livestreaming_StartStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_StartStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audience), ::il2cpp_utils::ExtractType(micStatus)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, audience, micStatus);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_StopPartyStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_StopPartyStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Livestreaming_StopPartyStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_StopPartyStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_StopStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_StopStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Livestreaming_StopStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_StopStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_UpdateCommentsOverlayVisibility
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Livestreaming_UpdateCommentsOverlayVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_UpdateCommentsOverlayVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isVisible)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isVisible);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_UpdateMicStatus
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_UpdateMicStatus(Oculus::Platform::LivestreamingMicrophoneStatus micStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Livestreaming_UpdateMicStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_UpdateMicStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(micStatus)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, micStatus);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Browse
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Browse(::Il2CppString* pool, System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_Browse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Browse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Browse_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Browse_Native(System::IntPtr pool, System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_Browse_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Browse_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Browse2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Browse2(::Il2CppString* pool, System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_Browse2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Browse2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Browse2_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Browse2_Native(System::IntPtr pool, System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_Browse2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Browse2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Cancel
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Cancel(::Il2CppString* pool, ::Il2CppString* requestHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(requestHash)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, requestHash);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Cancel_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Cancel_Native(System::IntPtr pool, System::IntPtr requestHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_Cancel_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Cancel_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(requestHash)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, requestHash);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Cancel2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Cancel2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_Cancel2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Cancel2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateAndEnqueueRoom
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom(::Il2CppString* pool, uint maxUsers, bool subscribeToUpdates, System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateAndEnqueueRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateAndEnqueueRoom_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom_Native(System::IntPtr pool, uint maxUsers, bool subscribeToUpdates, System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateAndEnqueueRoom_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateAndEnqueueRoom2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2(::Il2CppString* pool, System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateAndEnqueueRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateAndEnqueueRoom2_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2_Native(System::IntPtr pool, System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateAndEnqueueRoom2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateRoom
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom(::Il2CppString* pool, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateRoom_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom_Native(System::IntPtr pool, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateRoom_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateRoom2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom2(::Il2CppString* pool, System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateRoom2_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom2_Native(System::IntPtr pool, System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateRoom2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Enqueue
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue(::Il2CppString* pool, System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Enqueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Enqueue_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue_Native(System::IntPtr pool, System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Enqueue_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Enqueue2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue2(::Il2CppString* pool, System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Enqueue2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Enqueue2_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue2_Native(System::IntPtr pool, System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Enqueue2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_EnqueueRoom
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_EnqueueRoom(uint64_t roomID, System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_EnqueueRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_EnqueueRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_EnqueueRoom2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_EnqueueRoom2(uint64_t roomID, System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_EnqueueRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_EnqueueRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_GetAdminSnapshot
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_GetAdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_GetAdminSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_GetAdminSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_GetStats
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_GetStats(::Il2CppString* pool, uint maxLevel, Oculus::Platform::MatchmakingStatApproach approach) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_GetStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_GetStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxLevel), ::il2cpp_utils::ExtractType(approach)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, maxLevel, approach);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_GetStats_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_GetStats_Native(System::IntPtr pool, uint maxLevel, Oculus::Platform::MatchmakingStatApproach approach) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_GetStats_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_GetStats_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxLevel), ::il2cpp_utils::ExtractType(approach)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pool, maxLevel, approach);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_JoinRoom
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_JoinRoom(uint64_t roomID, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_JoinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_JoinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_ReportResultInsecure
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_ReportResultInsecure(uint64_t roomID, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_ReportResultInsecure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_ReportResultInsecure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, data);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_ReportResultInsecure_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_ReportResultInsecure_Native(uint64_t roomID, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* data, System::UIntPtr numItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_ReportResultInsecure_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_ReportResultInsecure_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(numItems)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, data, numItems);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_StartMatch
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_StartMatch(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Matchmaking_StartMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_StartMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Media_ShareToFacebook
uint64_t Oculus::Platform::CAPI::ovr_Media_ShareToFacebook(::Il2CppString* postTextSuggestion, ::Il2CppString* filePath, Oculus::Platform::MediaContentType contentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Media_ShareToFacebook");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Media_ShareToFacebook", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(postTextSuggestion), ::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(contentType)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, postTextSuggestion, filePath, contentType);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Media_ShareToFacebook_Native
uint64_t Oculus::Platform::CAPI::ovr_Media_ShareToFacebook_Native(System::IntPtr postTextSuggestion, System::IntPtr filePath, Oculus::Platform::MediaContentType contentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Media_ShareToFacebook_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Media_ShareToFacebook_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(postTextSuggestion), ::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(contentType)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, postTextSuggestion, filePath, contentType);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_Connect
uint64_t Oculus::Platform::CAPI::ovr_NetSync_Connect(System::IntPtr connect_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connect_options)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connect_options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_Disconnect
uint64_t Oculus::Platform::CAPI::ovr_NetSync_Disconnect(int64_t connection_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetSessions
uint64_t Oculus::Platform::CAPI::ovr_NetSync_GetSessions(int64_t connection_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_GetSessions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetSessions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetVoipAttenuation
uint64_t Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuation(int64_t connection_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetVoipAttenuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetVoipAttenuationDefault
uint64_t Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuationDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuationDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetVoipAttenuationDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipAttenuation
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuation(int64_t connection_id, ::Array<float>* distances, ::Array<float>* decibels, System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipAttenuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(distances), ::il2cpp_utils::ExtractType(decibels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, distances, decibels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipAttenuationModel
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel(int64_t connection_id, ::Il2CppString* name, ::Array<float>* distances, ::Array<float>* decibels, System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipAttenuationModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(distances), ::il2cpp_utils::ExtractType(decibels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, name, distances, decibels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipAttenuationModel_Native
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel_Native(int64_t connection_id, System::IntPtr name, ::Array<float>* distances, ::Array<float>* decibels, System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipAttenuationModel_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(distances), ::il2cpp_utils::ExtractType(decibels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, name, distances, decibels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipChannelCfg
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg(int64_t connection_id, ::Il2CppString* channel_name, ::Il2CppString* attnmodel, bool disable_spatialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipChannelCfg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(channel_name), ::il2cpp_utils::ExtractType(attnmodel), ::il2cpp_utils::ExtractType(disable_spatialization)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, channel_name, attnmodel, disable_spatialization);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipChannelCfg_Native
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg_Native(int64_t connection_id, System::IntPtr channel_name, System::IntPtr attnmodel, bool disable_spatialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipChannelCfg_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(channel_name), ::il2cpp_utils::ExtractType(attnmodel), ::il2cpp_utils::ExtractType(disable_spatialization)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, channel_name, attnmodel, disable_spatialization);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipGroup
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup(int64_t connection_id, ::Il2CppString* group_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(group_id)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, group_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipGroup_Native
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup_Native(int64_t connection_id, System::IntPtr group_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipGroup_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(group_id)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, group_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipListentoChannels
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipListentoChannels(int64_t connection_id, ::Array<::Il2CppString*>* listento_channels, System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_SetVoipListentoChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipListentoChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(listento_channels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, listento_channels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipMicSource
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipMicSource(int64_t connection_id, Oculus::Platform::NetSyncVoipMicSource mic_source) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_SetVoipMicSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipMicSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(mic_source)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, mic_source);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipSessionMuted
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipSessionMuted(int64_t connection_id, uint64_t session_id, bool muted) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_SetVoipSessionMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipSessionMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(session_id), ::il2cpp_utils::ExtractType(muted)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, session_id, muted);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipSpeaktoChannels
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipSpeaktoChannels(int64_t connection_id, ::Array<::Il2CppString*>* speakto_channels, System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_SetVoipSpeaktoChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipSpeaktoChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(speakto_channels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, speakto_channels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipStreamMode
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipStreamMode(int64_t connection_id, uint64_t sessionId, Oculus::Platform::NetSyncVoipStreamMode streamMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSync_SetVoipStreamMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipStreamMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(streamMode)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connection_id, sessionId, streamMode);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Notification_GetRoomInvites
uint64_t Oculus::Platform::CAPI::ovr_Notification_GetRoomInvites() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Notification_GetRoomInvites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Notification_GetRoomInvites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Notification_MarkAsRead
uint64_t Oculus::Platform::CAPI::ovr_Notification_MarkAsRead(uint64_t notificationID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Notification_MarkAsRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Notification_MarkAsRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notificationID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, notificationID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Create
uint64_t Oculus::Platform::CAPI::ovr_Party_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Party_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GatherInApplication
uint64_t Oculus::Platform::CAPI::ovr_Party_GatherInApplication(uint64_t partyID, uint64_t appID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Party_GatherInApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GatherInApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID), ::il2cpp_utils::ExtractType(appID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, partyID, appID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Get
uint64_t Oculus::Platform::CAPI::ovr_Party_Get(uint64_t partyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Party_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, partyID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetCurrent
uint64_t Oculus::Platform::CAPI::ovr_Party_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Party_GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetCurrentForUser
uint64_t Oculus::Platform::CAPI::ovr_Party_GetCurrentForUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Party_GetCurrentForUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetCurrentForUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Invite
uint64_t Oculus::Platform::CAPI::ovr_Party_Invite(uint64_t partyID, uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Party_Invite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Invite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID), ::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, partyID, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Join
uint64_t Oculus::Platform::CAPI::ovr_Party_Join(uint64_t partyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Party_Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, partyID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Leave
uint64_t Oculus::Platform::CAPI::ovr_Party_Leave(uint64_t partyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Party_Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, partyID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_Clear
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresence_Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_GetDestinations
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_GetDestinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresence_GetDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_GetDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_Set
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_Set(System::IntPtr richPresenceOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresence_Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(richPresenceOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, richPresenceOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetDestination
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetDestination(::Il2CppString* api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresence_SetDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(api_name)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, api_name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetDestination_Native
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetDestination_Native(System::IntPtr api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresence_SetDestination_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetDestination_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(api_name)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, api_name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetIsJoinable
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetIsJoinable(bool is_joinable) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresence_SetIsJoinable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetIsJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(is_joinable)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, is_joinable);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetLobbySession
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession(::Il2CppString* id) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetLobbySession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetLobbySession_Native
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession_Native(System::IntPtr id) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetLobbySession_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetMatchSession
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession(::Il2CppString* id) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetMatchSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetMatchSession_Native
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession_Native(System::IntPtr id) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetMatchSession_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_CreateAndJoinPrivate
uint64_t Oculus::Platform::CAPI::ovr_Room_CreateAndJoinPrivate(Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_CreateAndJoinPrivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_CreateAndJoinPrivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinPolicy), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, joinPolicy, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_CreateAndJoinPrivate2
uint64_t Oculus::Platform::CAPI::ovr_Room_CreateAndJoinPrivate2(Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, System::IntPtr roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_CreateAndJoinPrivate2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_CreateAndJoinPrivate2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinPolicy), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, joinPolicy, maxUsers, roomOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_Get
uint64_t Oculus::Platform::CAPI::ovr_Room_Get(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetCurrent
uint64_t Oculus::Platform::CAPI::ovr_Room_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetCurrentForUser
uint64_t Oculus::Platform::CAPI::ovr_Room_GetCurrentForUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetCurrentForUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetCurrentForUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetInvitableUsers
uint64_t Oculus::Platform::CAPI::ovr_Room_GetInvitableUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetInvitableUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetInvitableUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetInvitableUsers2
uint64_t Oculus::Platform::CAPI::ovr_Room_GetInvitableUsers2(System::IntPtr roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetInvitableUsers2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetInvitableUsers2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetModeratedRooms
uint64_t Oculus::Platform::CAPI::ovr_Room_GetModeratedRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetModeratedRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetModeratedRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetSocialRooms
uint64_t Oculus::Platform::CAPI::ovr_Room_GetSocialRooms(uint64_t appID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetSocialRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetSocialRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, appID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_InviteUser
uint64_t Oculus::Platform::CAPI::ovr_Room_InviteUser(uint64_t roomID, ::Il2CppString* inviteToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_InviteUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_InviteUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(inviteToken)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, inviteToken);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_InviteUser_Native
uint64_t Oculus::Platform::CAPI::ovr_Room_InviteUser_Native(uint64_t roomID, System::IntPtr inviteToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_InviteUser_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_InviteUser_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(inviteToken)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, inviteToken);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_Join
uint64_t Oculus::Platform::CAPI::ovr_Room_Join(uint64_t roomID, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_Join2
uint64_t Oculus::Platform::CAPI::ovr_Room_Join2(uint64_t roomID, System::IntPtr roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_Join2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_Join2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, roomOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_KickUser
uint64_t Oculus::Platform::CAPI::ovr_Room_KickUser(uint64_t roomID, uint64_t userID, int kickDurationSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_KickUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_KickUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(kickDurationSeconds)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, userID, kickDurationSeconds);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_LaunchInvitableUserFlow
uint64_t Oculus::Platform::CAPI::ovr_Room_LaunchInvitableUserFlow(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_LaunchInvitableUserFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_LaunchInvitableUserFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_Leave
uint64_t Oculus::Platform::CAPI::ovr_Room_Leave(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_SetDescription
uint64_t Oculus::Platform::CAPI::ovr_Room_SetDescription(uint64_t roomID, ::Il2CppString* description) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_SetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_SetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(description)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, description);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_SetDescription_Native
uint64_t Oculus::Platform::CAPI::ovr_Room_SetDescription_Native(uint64_t roomID, System::IntPtr description) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_SetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_SetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(description)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, description);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_UpdateDataStore
uint64_t Oculus::Platform::CAPI::ovr_Room_UpdateDataStore(uint64_t roomID, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_UpdateDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_UpdateDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, data);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_UpdateDataStore_Native
uint64_t Oculus::Platform::CAPI::ovr_Room_UpdateDataStore_Native(uint64_t roomID, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* data, System::UIntPtr numItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_UpdateDataStore_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_UpdateDataStore_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(numItems)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, data, numItems);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_UpdateMembershipLockStatus
uint64_t Oculus::Platform::CAPI::ovr_Room_UpdateMembershipLockStatus(uint64_t roomID, Oculus::Platform::RoomMembershipLockStatus membershipLockStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_UpdateMembershipLockStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_UpdateMembershipLockStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(membershipLockStatus)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, membershipLockStatus);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_UpdateOwner
uint64_t Oculus::Platform::CAPI::ovr_Room_UpdateOwner(uint64_t roomID, uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_UpdateOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_UpdateOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_UpdatePrivateRoomJoinPolicy
uint64_t Oculus::Platform::CAPI::ovr_Room_UpdatePrivateRoomJoinPolicy(uint64_t roomID, Oculus::Platform::RoomJoinPolicy newJoinPolicy) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_UpdatePrivateRoomJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_UpdatePrivateRoomJoinPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(newJoinPolicy)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, roomID, newJoinPolicy);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SystemPermissions_GetStatus
uint64_t Oculus::Platform::CAPI::ovr_SystemPermissions_GetStatus(Oculus::Platform::PermissionType permType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_SystemPermissions_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SystemPermissions_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permType)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, permType);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SystemPermissions_LaunchDeeplink
uint64_t Oculus::Platform::CAPI::ovr_SystemPermissions_LaunchDeeplink(Oculus::Platform::PermissionType permType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_SystemPermissions_LaunchDeeplink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SystemPermissions_LaunchDeeplink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permType)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, permType);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_CancelRecordingForReportFlow
uint64_t Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow(::Il2CppString* recordingUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_CancelRecordingForReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingUUID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, recordingUUID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_CancelRecordingForReportFlow_Native
uint64_t Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow_Native(System::IntPtr recordingUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_CancelRecordingForReportFlow_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingUUID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, recordingUUID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_Get
uint64_t Oculus::Platform::CAPI::ovr_User_Get(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetAccessToken
uint64_t Oculus::Platform::CAPI::ovr_User_GetAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLinkedAccounts
uint64_t Oculus::Platform::CAPI::ovr_User_GetLinkedAccounts(System::IntPtr userOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetLinkedAccounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLinkedAccounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLoggedInUser
uint64_t Oculus::Platform::CAPI::ovr_User_GetLoggedInUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetLoggedInUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLoggedInUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLoggedInUserFriends
uint64_t Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLoggedInUserFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLoggedInUserFriendsAndRooms
uint64_t Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriendsAndRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriendsAndRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLoggedInUserFriendsAndRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms
uint64_t Oculus::Platform::CAPI::ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(System::IntPtr userOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetOrgScopedID
uint64_t Oculus::Platform::CAPI::ovr_User_GetOrgScopedID(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetOrgScopedID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetOrgScopedID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetSdkAccounts
uint64_t Oculus::Platform::CAPI::ovr_User_GetSdkAccounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetSdkAccounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetSdkAccounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetUserProof
uint64_t Oculus::Platform::CAPI::ovr_User_GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetUserProof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetUserProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchBlockFlow
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchBlockFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_LaunchBlockFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchBlockFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchFriendRequestFlow
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchFriendRequestFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_LaunchFriendRequestFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchFriendRequestFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchProfile
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchProfile(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_LaunchProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchReportFlow
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchReportFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_LaunchReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchReportFlow2
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchReportFlow2(uint64_t optionalUserID, System::IntPtr abuseReportOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_LaunchReportFlow2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchReportFlow2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(abuseReportOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, optionalUserID, abuseReportOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchUnblockFlow
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchUnblockFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_LaunchUnblockFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchUnblockFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_NewEntitledTestUser
uint64_t Oculus::Platform::CAPI::ovr_User_NewEntitledTestUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_NewEntitledTestUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_NewEntitledTestUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_NewTestUser
uint64_t Oculus::Platform::CAPI::ovr_User_NewTestUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_NewTestUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_NewTestUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_NewTestUserFriends
uint64_t Oculus::Platform::CAPI::ovr_User_NewTestUserFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_NewTestUserFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_NewTestUserFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StartRecordingForReportFlow
uint64_t Oculus::Platform::CAPI::ovr_User_StartRecordingForReportFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_StartRecordingForReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StartRecordingForReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StopRecordingAndLaunchReportFlow
uint64_t Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow(uint64_t optionalUserID, ::Il2CppString* optionalRecordingUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StopRecordingAndLaunchReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(optionalRecordingUUID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, optionalUserID, optionalRecordingUUID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StopRecordingAndLaunchReportFlow_Native
uint64_t Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow_Native(uint64_t optionalUserID, System::IntPtr optionalRecordingUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StopRecordingAndLaunchReportFlow_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(optionalRecordingUUID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, optionalUserID, optionalRecordingUUID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StopRecordingAndLaunchReportFlow2
uint64_t Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2(uint64_t optionalUserID, ::Il2CppString* optionalRecordingUUID, System::IntPtr abuseReportOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StopRecordingAndLaunchReportFlow2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(optionalRecordingUUID), ::il2cpp_utils::ExtractType(abuseReportOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, optionalUserID, optionalRecordingUUID, abuseReportOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StopRecordingAndLaunchReportFlow2_Native
uint64_t Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2_Native(uint64_t optionalUserID, System::IntPtr optionalRecordingUUID, System::IntPtr abuseReportOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StopRecordingAndLaunchReportFlow2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(optionalRecordingUUID), ::il2cpp_utils::ExtractType(abuseReportOptions)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, optionalUserID, optionalRecordingUUID, abuseReportOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_TestUserCreateDeviceManifest
uint64_t Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest(::Il2CppString* deviceID, ::Array<uint64_t>* appIDs, int numAppIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_TestUserCreateDeviceManifest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceID), ::il2cpp_utils::ExtractType(appIDs), ::il2cpp_utils::ExtractType(numAppIDs)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, deviceID, appIDs, numAppIDs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_TestUserCreateDeviceManifest_Native
uint64_t Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest_Native(System::IntPtr deviceID, ::Array<uint64_t>* appIDs, int numAppIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_TestUserCreateDeviceManifest_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceID), ::il2cpp_utils::ExtractType(appIDs), ::il2cpp_utils::ExtractType(numAppIDs)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, deviceID, appIDs, numAppIDs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateDeleteEntryByKey
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey(uint64_t userID, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateDeleteEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateDeleteEntryByKey_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey_Native(uint64_t userID, System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateDeleteEntryByKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateGetEntries
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntries(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateGetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateGetEntryByKey
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey(uint64_t userID, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateGetEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateGetEntryByKey_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey_Native(uint64_t userID, System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateGetEntryByKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateWriteEntry
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry(uint64_t userID, ::Il2CppString* key, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateWriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateWriteEntry_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry_Native(uint64_t userID, System::IntPtr key, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateWriteEntry_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicDeleteEntryByKey
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey(uint64_t userID, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicDeleteEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicDeleteEntryByKey_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey_Native(uint64_t userID, System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicDeleteEntryByKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicGetEntries
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntries(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicGetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicGetEntryByKey
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey(uint64_t userID, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicGetEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicGetEntryByKey_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey_Native(uint64_t userID, System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicGetEntryByKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicWriteEntry
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry(uint64_t userID, ::Il2CppString* key, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicWriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicWriteEntry_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry_Native(uint64_t userID, System::IntPtr key, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicWriteEntry_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userID, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetSystemVoipSuppressed
uint64_t Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipSuppressed(bool suppressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipSuppressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetSystemVoipSuppressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(suppressed)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, suppressed);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportRecording_GetRecordingUuid
::Il2CppString* Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportRecording_GetRecordingUuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportRecording_GetRecordingUuid_Native
System::IntPtr Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportRecording_GetRecordingUuid_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetBitfieldLength
uint Oculus::Platform::CAPI::ovr_AchievementDefinition_GetBitfieldLength(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementDefinition_GetBitfieldLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetBitfieldLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetName
::Il2CppString* Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetName_Native
System::IntPtr Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetTarget
uint64_t Oculus::Platform::CAPI::ovr_AchievementDefinition_GetTarget(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementDefinition_GetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetType
Oculus::Platform::AchievementType Oculus::Platform::CAPI::ovr_AchievementDefinition_GetType(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementDefinition_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::AchievementType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_GetNextUrl
::Il2CppString* Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_GetNextUrl_Native
System::IntPtr Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_HasNextPage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetBitfield
::Il2CppString* Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetBitfield", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetBitfield_Native
System::IntPtr Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetBitfield_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetCount
uint64_t Oculus::Platform::CAPI::ovr_AchievementProgress_GetCount(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementProgress_GetCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetIsUnlocked
bool Oculus::Platform::CAPI::ovr_AchievementProgress_GetIsUnlocked(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementProgress_GetIsUnlocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetIsUnlocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetName
::Il2CppString* Oculus::Platform::CAPI::ovr_AchievementProgress_GetName(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementProgress_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetName_Native
System::IntPtr Oculus::Platform::CAPI::ovr_AchievementProgress_GetName_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementProgress_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetUnlockTime
System::DateTime Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetUnlockTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetUnlockTime_Native
uint64_t Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetUnlockTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_GetNextUrl
::Il2CppString* Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_GetNextUrl_Native
System::IntPtr Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_AchievementProgressArray_HasNextPage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementProgressArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementUpdate_GetJustUnlocked
bool Oculus::Platform::CAPI::ovr_AchievementUpdate_GetJustUnlocked(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementUpdate_GetJustUnlocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementUpdate_GetJustUnlocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementUpdate_GetName
::Il2CppString* Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementUpdate_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementUpdate_GetName_Native
System::IntPtr Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementUpdate_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_GetID
uint64_t Oculus::Platform::CAPI::ovr_Application_GetID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Application_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetCurrentCode
int Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentCode(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetCurrentCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetCurrentName
::Il2CppString* Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetCurrentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetCurrentName_Native
System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetCurrentName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetLatestCode
int Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestCode(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetLatestCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetLatestName
::Il2CppString* Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetLatestName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetLatestName_Native
System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetLatestName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetAssetType
::Il2CppString* Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetAssetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetAssetType_Native
System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetAssetType_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetDownloadStatus
::Il2CppString* Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetDownloadStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetDownloadStatus_Native
System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetDownloadStatus_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetFilepath
::Il2CppString* Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetFilepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetFilepath_Native
System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetFilepath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetIapStatus
::Il2CppString* Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetIapStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetIapStatus_Native
System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetIapStatus_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetLanguage
System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetLanguage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetDetails_GetLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetMetadata
::Il2CppString* Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetMetadata_Native
System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetMetadata_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetailsArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetailsArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetailsArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetailsArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetAssetFileId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetFileId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetFileId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetAssetFileId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetFilepath
::Il2CppString* Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetFilepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetFilepath_Native
System::IntPtr Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetFilepath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetSuccess
bool Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetSuccess(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetAssetFileId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetFileId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetFileId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetAssetFileId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetFilepath
::Il2CppString* Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetFilepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetFilepath_Native
System::IntPtr Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetFilepath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetSuccess
bool Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetSuccess(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadResult_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetAssetId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadResult_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadResult_GetFilepath
::Il2CppString* Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadResult_GetFilepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadResult_GetFilepath_Native
System::IntPtr Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadResult_GetFilepath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetAssetFileId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetFileId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetFileId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetAssetFileId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetBytesTotal
uint Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotal(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetBytesTotal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetBytesTransferred
int Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferred(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferred");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetBytesTransferred", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetCompleted
bool Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetCompleted(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationFinalized_GetCountdownMS
int Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetCountdownMS(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetCountdownMS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationFinalized_GetCountdownMS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationFinalized_GetID
uint64_t Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationFinalized_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationFinalized_GetLaunchDetails
::Il2CppString* Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetLaunchDetails(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetLaunchDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationFinalized_GetLaunchDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationFinalized_GetLaunchDetails_Native
System::IntPtr Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetLaunchDetails_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetLaunchDetails_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationFinalized_GetLaunchDetails_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationProposed_GetID
uint64_t Oculus::Platform::CAPI::ovr_CalApplicationProposed_GetID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CalApplicationProposed_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationProposed_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationSuggestion_GetID
uint64_t Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationSuggestion_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationSuggestion_GetSocialContext
::Il2CppString* Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetSocialContext(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetSocialContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationSuggestion_GetSocialContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationSuggestion_GetSocialContext_Native
System::IntPtr Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetSocialContext_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetSocialContext_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationSuggestion_GetSocialContext_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationSuggestionArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_CalApplicationSuggestionArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CalApplicationSuggestionArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationSuggestionArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationSuggestionArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_CalApplicationSuggestionArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CalApplicationSuggestionArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationSuggestionArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetCreationType
Oculus::Platform::ChallengeCreationType Oculus::Platform::CAPI::ovr_Challenge_GetCreationType(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenge_GetCreationType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetCreationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::ChallengeCreationType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetDescription
::Il2CppString* Oculus::Platform::CAPI::ovr_Challenge_GetDescription(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenge_GetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetDescription_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetDescription_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenge_GetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetEndDate
System::DateTime Oculus::Platform::CAPI::ovr_Challenge_GetEndDate(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenge_GetEndDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetEndDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetEndDate_Native
uint64_t Oculus::Platform::CAPI::ovr_Challenge_GetEndDate_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenge_GetEndDate_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetEndDate_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetID
uint64_t Oculus::Platform::CAPI::ovr_Challenge_GetID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenge_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetInvitedUsers
System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetInvitedUsers(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenge_GetInvitedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetInvitedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetLeaderboard
System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetLeaderboard(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenge_GetLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetParticipants
System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetParticipants(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenge_GetParticipants");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetParticipants", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetStartDate
System::DateTime Oculus::Platform::CAPI::ovr_Challenge_GetStartDate(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenge_GetStartDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetStartDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetStartDate_Native
uint64_t Oculus::Platform::CAPI::ovr_Challenge_GetStartDate_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenge_GetStartDate_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetStartDate_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetTitle
::Il2CppString* Oculus::Platform::CAPI::ovr_Challenge_GetTitle(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenge_GetTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetTitle_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetTitle_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenge_GetTitle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetTitle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetVisibility
Oculus::Platform::ChallengeVisibility Oculus::Platform::CAPI::ovr_Challenge_GetVisibility(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Challenge_GetVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::ChallengeVisibility, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetNextUrl
::Il2CppString* Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetNextUrl_Native
System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetPreviousUrl
::Il2CppString* Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetPreviousUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetPreviousUrl_Native
System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_ChallengeArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetTotalCount
uint64_t Oculus::Platform::CAPI::ovr_ChallengeArray_GetTotalCount(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeArray_GetTotalCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetTotalCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_ChallengeArray_HasNextPage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_HasPreviousPage
bool Oculus::Platform::CAPI::ovr_ChallengeArray_HasPreviousPage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeArray_HasPreviousPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_HasPreviousPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetDisplayScore
::Il2CppString* Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetDisplayScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetDisplayScore_Native
System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetDisplayScore_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetExtraData
::Array<uint8_t>* Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetExtraData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetExtraData_Native
System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetExtraData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetExtraDataLength
uint Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraDataLength(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraDataLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetExtraDataLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetRank
int Oculus::Platform::CAPI::ovr_ChallengeEntry_GetRank(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeEntry_GetRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetScore
int64_t Oculus::Platform::CAPI::ovr_ChallengeEntry_GetScore(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeEntry_GetScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetTimestamp
System::DateTime Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetTimestamp_Native
uint64_t Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetTimestamp_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetUser
System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntry_GetUser(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeEntry_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetNextUrl
::Il2CppString* Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetNextUrl_Native
System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetPreviousUrl
::Il2CppString* Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetPreviousUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetPreviousUrl_Native
System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetTotalCount
uint64_t Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetTotalCount(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetTotalCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetTotalCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasNextPage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_HasPreviousPage
bool Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasPreviousPage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasPreviousPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_HasPreviousPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage2UserDirectoryPathResponse_GetPath
::Il2CppString* Oculus::Platform::CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage2UserDirectoryPathResponse_GetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native
System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageConflictMetadata_GetLocal
System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageConflictMetadata_GetLocal(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageConflictMetadata_GetLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageConflictMetadata_GetLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageConflictMetadata_GetRemote
System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageConflictMetadata_GetRemote(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageConflictMetadata_GetRemote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageConflictMetadata_GetRemote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetBucket
::Il2CppString* Oculus::Platform::CAPI::ovr_CloudStorageData_GetBucket(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageData_GetBucket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetBucket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetBucket_Native
System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageData_GetBucket_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageData_GetBucket_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetBucket_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetData
::Array<uint8_t>* Oculus::Platform::CAPI::ovr_CloudStorageData_GetData(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageData_GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetData_Native
System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageData_GetData_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageData_GetData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetDataSize
uint Oculus::Platform::CAPI::ovr_CloudStorageData_GetDataSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageData_GetDataSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetDataSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetKey
::Il2CppString* Oculus::Platform::CAPI::ovr_CloudStorageData_GetKey(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageData_GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetKey_Native
System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageData_GetKey_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageData_GetKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetBucket
::Il2CppString* Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetBucket(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetBucket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetBucket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetBucket_Native
System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetBucket_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetBucket_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetBucket_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetCounter
int64_t Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetCounter(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetCounter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetCounter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetDataSize
uint Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetDataSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetDataSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetDataSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetExtraData
::Il2CppString* Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetExtraData(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetExtraData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetExtraData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetExtraData_Native
System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetExtraData_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetExtraData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetExtraData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetKey
::Il2CppString* Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetKey(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetKey_Native
System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetKey_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetSaveTime
uint64_t Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetSaveTime(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetSaveTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetSaveTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetStatus
Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetStatus(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::CloudStorageDataStatus, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetVersionHandle
::Il2CppString* Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetVersionHandle(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetVersionHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetVersionHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetVersionHandle_Native
System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetVersionHandle_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetVersionHandle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetVersionHandle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadataArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadataArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadataArray_GetNextUrl
::Il2CppString* Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetNextUrl(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadataArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadataArray_GetNextUrl_Native
System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetNextUrl_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadataArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadataArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadataArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadataArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_HasNextPage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadataArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetBucket
::Il2CppString* Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetBucket(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetBucket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetBucket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetBucket_Native
System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetBucket_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetBucket_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetBucket_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetKey
::Il2CppString* Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetKey(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetKey_Native
System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetKey_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetStatus
Oculus::Platform::CloudStorageUpdateStatus Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetStatus(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::CloudStorageUpdateStatus, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetVersionHandle
::Il2CppString* Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetVersionHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetVersionHandle_Native
System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetVersionHandle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_Contains
uint Oculus::Platform::CAPI::ovr_DataStore_Contains(System::IntPtr obj, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_DataStore_Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_Contains_Native
uint Oculus::Platform::CAPI::ovr_DataStore_Contains_Native(System::IntPtr obj, System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_DataStore_Contains_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_Contains_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetKey
::Il2CppString* Oculus::Platform::CAPI::ovr_DataStore_GetKey(System::IntPtr obj, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_DataStore_GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetKey_Native
System::IntPtr Oculus::Platform::CAPI::ovr_DataStore_GetKey_Native(System::IntPtr obj, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_DataStore_GetKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetNumKeys
System::UIntPtr Oculus::Platform::CAPI::ovr_DataStore_GetNumKeys(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_DataStore_GetNumKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetNumKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetValue
::Il2CppString* Oculus::Platform::CAPI::ovr_DataStore_GetValue(System::IntPtr obj, ::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_DataStore_GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetValue_Native
System::IntPtr Oculus::Platform::CAPI::ovr_DataStore_GetValue_Native(System::IntPtr obj, System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_DataStore_GetValue_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetValue_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetApiName
::Il2CppString* Oculus::Platform::CAPI::ovr_Destination_GetApiName(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Destination_GetApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetApiName_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Destination_GetApiName_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Destination_GetApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetDeeplinkMessage
::Il2CppString* Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetDeeplinkMessage_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetDisplayName
::Il2CppString* Oculus::Platform::CAPI::ovr_Destination_GetDisplayName(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Destination_GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetDisplayName_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Destination_GetDisplayName_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Destination_GetDisplayName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetDisplayName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_DestinationArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_DestinationArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_GetNextUrl
::Il2CppString* Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_GetNextUrl_Native
System::IntPtr Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_DestinationArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_DestinationArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_DestinationArray_HasNextPage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_DestinationArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetCode
int Oculus::Platform::CAPI::ovr_Error_GetCode(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Error_GetCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetDisplayableMessage
::Il2CppString* Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetDisplayableMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetDisplayableMessage_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetDisplayableMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetHttpCode
int Oculus::Platform::CAPI::ovr_Error_GetHttpCode(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Error_GetHttpCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetHttpCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetMessage
::Il2CppString* Oculus::Platform::CAPI::ovr_Error_GetMessage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Error_GetMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetMessage_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Error_GetMessage_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Error_GetMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetDestinationApiName
::Il2CppString* Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native
System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetLobbySessionId
::Il2CppString* Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native
System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetMatchSessionId
::Il2CppString* Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native
System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HttpTransferUpdate_GetBytes
System::IntPtr Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetBytes(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HttpTransferUpdate_GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HttpTransferUpdate_GetID
uint64_t Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HttpTransferUpdate_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HttpTransferUpdate_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HttpTransferUpdate_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HttpTransferUpdate_IsCompleted
bool Oculus::Platform::CAPI::ovr_HttpTransferUpdate_IsCompleted(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_HttpTransferUpdate_IsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HttpTransferUpdate_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetApplicationId
::Il2CppString* Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetApplicationId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetApplicationId_Native
System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetApplicationId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetPackageName
::Il2CppString* Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetPackageName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetPackageName_Native
System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetPackageName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetStatus
::Il2CppString* Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetStatus_Native
System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetStatus_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetVersionCode
int Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionCode(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetVersionCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetVersionName
::Il2CppString* Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetVersionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetVersionName_Native
System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetVersionName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplicationArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplicationArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplicationArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplicationArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InvitePanelResultInfo_GetInvitesSent
bool Oculus::Platform::CAPI::ovr_InvitePanelResultInfo_GetInvitesSent(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_InvitePanelResultInfo_GetInvitesSent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InvitePanelResultInfo_GetInvitesSent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetEnglishName
::Il2CppString* Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetEnglishName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetEnglishName_Native
System::IntPtr Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetEnglishName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetNativeName
::Il2CppString* Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetNativeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetNativeName_Native
System::IntPtr Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetNativeName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetTag
::Il2CppString* Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetTag_Native
System::IntPtr Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetTag_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchBlockFlowResult_GetDidBlock
bool Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidBlock(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchBlockFlowResult_GetDidBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchBlockFlowResult_GetDidCancel
bool Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidCancel(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchBlockFlowResult_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetDeeplinkMessage
::Il2CppString* Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetDeeplinkMessage_Native
System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetDestinationApiName
::Il2CppString* Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetDestinationApiName_Native
System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetLaunchSource
::Il2CppString* Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetLaunchSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetLaunchSource_Native
System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetLaunchSource_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetLaunchType
Oculus::Platform::LaunchType Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchType(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetLaunchType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::LaunchType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetRoomID
uint64_t Oculus::Platform::CAPI::ovr_LaunchDetails_GetRoomID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LaunchDetails_GetRoomID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetRoomID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetTrackingID
::Il2CppString* Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetTrackingID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetTrackingID_Native
System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetTrackingID_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetUsers
System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetUsers(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LaunchDetails_GetUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchFriendRequestFlowResult_GetDidCancel
bool Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidCancel(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchFriendRequestFlowResult_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchFriendRequestFlowResult_GetDidSendRequest
bool Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidSendRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchFriendRequestFlowResult_GetDidSendRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchInvitePanelFlowResult_GetInvitedUsers
System::IntPtr Oculus::Platform::CAPI::ovr_LaunchInvitePanelFlowResult_GetInvitedUsers(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LaunchInvitePanelFlowResult_GetInvitedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchInvitePanelFlowResult_GetInvitedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchReportFlowResult_GetDidCancel
bool Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetDidCancel(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchReportFlowResult_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchReportFlowResult_GetUserReportId
uint64_t Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetUserReportId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetUserReportId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchReportFlowResult_GetUserReportId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchUnblockFlowResult_GetDidCancel
bool Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidCancel(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchUnblockFlowResult_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchUnblockFlowResult_GetDidUnblock
bool Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidUnblock(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidUnblock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchUnblockFlowResult_GetDidUnblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetApiName
::Il2CppString* Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetApiName_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetDestination
System::IntPtr Oculus::Platform::CAPI::ovr_Leaderboard_GetDestination(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Leaderboard_GetDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetID
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Leaderboard_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardArray_GetNextUrl
::Il2CppString* Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardArray_GetNextUrl_Native
System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_LeaderboardArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_LeaderboardArray_HasNextPage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetDisplayScore
::Il2CppString* Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetDisplayScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetDisplayScore_Native
System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetDisplayScore_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetExtraData
::Array<uint8_t>* Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetExtraData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetExtraData_Native
System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetExtraData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetExtraDataLength
uint Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraDataLength(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraDataLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetExtraDataLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetRank
int Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetRank(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetScore
int64_t Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetScore(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetSupplementaryMetric
System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetSupplementaryMetric(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetSupplementaryMetric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetSupplementaryMetric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetTimestamp
System::DateTime Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetTimestamp_Native
uint64_t Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetTimestamp_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetUser
System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetUser(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetNextUrl
::Il2CppString* Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetNextUrl_Native
System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetPreviousUrl
::Il2CppString* Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetPreviousUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetPreviousUrl_Native
System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetTotalCount
uint64_t Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetTotalCount(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetTotalCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetTotalCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasNextPage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_HasPreviousPage
bool Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasPreviousPage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasPreviousPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_HasPreviousPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardUpdateStatus_GetDidUpdate
bool Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetDidUpdate(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetDidUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardUpdateStatus_GetDidUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId
uint64_t Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId(System::IntPtr obj, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize
uint Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetAccessToken
::Il2CppString* Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetAccessToken_Native
System::IntPtr Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetAccessToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetServiceProvider
Oculus::Platform::ServiceProvider Oculus::Platform::CAPI::ovr_LinkedAccount_GetServiceProvider(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LinkedAccount_GetServiceProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetServiceProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::ServiceProvider, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetUserId
::Il2CppString* Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetUserId_Native
System::IntPtr Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetUserId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccountArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccountArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccountArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccountArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingApplicationStatus_GetStreamingEnabled
bool Oculus::Platform::CAPI::ovr_LivestreamingApplicationStatus_GetStreamingEnabled(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LivestreamingApplicationStatus_GetStreamingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingApplicationStatus_GetStreamingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStartResult_GetStreamingResult
Oculus::Platform::LivestreamingStartStatus Oculus::Platform::CAPI::ovr_LivestreamingStartResult_GetStreamingResult(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LivestreamingStartResult_GetStreamingResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStartResult_GetStreamingResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::LivestreamingStartStatus, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetCommentsVisible
bool Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetCommentsVisible(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetCommentsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetCommentsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetIsPaused
bool Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetIsPaused(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetIsPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetIsPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetLivestreamingEnabled
bool Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingEnabled(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetLivestreamingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetLivestreamingType
int Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingType(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetLivestreamingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetMicEnabled
bool Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetMicEnabled(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetMicEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetMicEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingVideoStats_GetCommentCount
int Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetCommentCount(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetCommentCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingVideoStats_GetCommentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingVideoStats_GetReactionCount
int Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetReactionCount(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetReactionCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingVideoStats_GetReactionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingVideoStats_GetTotalViews
::Il2CppString* Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingVideoStats_GetTotalViews", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingVideoStats_GetTotalViews_Native
System::IntPtr Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingVideoStats_GetTotalViews_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshot_GetCandidates
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshot_GetCandidates(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshot_GetCandidates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshot_GetCandidates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold
double Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch
bool Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore
double Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold
double Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore
double Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetTraceId
::Il2CppString* Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetTraceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidateArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidateArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidateArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidateArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingBrowseResult_GetEnqueueResult
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingBrowseResult_GetEnqueueResult(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingBrowseResult_GetEnqueueResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingBrowseResult_GetEnqueueResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingBrowseResult_GetRooms
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingBrowseResult_GetRooms(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingBrowseResult_GetRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingBrowseResult_GetRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidate_GetEntryHash
::Il2CppString* Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetEntryHash(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetEntryHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidate_GetEntryHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidate_GetEntryHash_Native
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetEntryHash_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetEntryHash_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidate_GetEntryHash_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidate_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetUserId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidate_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidateArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidateArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidateArray_GetNextUrl
::Il2CppString* Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetNextUrl(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidateArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidateArray_GetNextUrl_Native
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetNextUrl_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidateArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidateArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidateArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidateArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_HasNextPage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidateArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetAdminSnapshot
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetAdminSnapshot(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetAdminSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetAdminSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetAverageWait
uint Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetAverageWait(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetAverageWait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetAverageWait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount
uint Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetMaxExpectedWait
uint Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetMaxExpectedWait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetMaxExpectedWait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetPool
::Il2CppString* Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetPool(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetPool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetPool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetPool_Native
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetPool_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetPool_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetPool_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage
uint Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetRequestHash
::Il2CppString* Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetRequestHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetRequestHash_Native
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetRequestHash_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResultAndRoom_GetRoom
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetRoom(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResultAndRoom_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUser_GetAdditionalUserID
uint64_t Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(System::IntPtr obj, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUser_GetAdditionalUserID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize
uint Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUser_GetCustomData
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetCustomData(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetCustomData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUser_GetCustomData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUser_GetUser
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetUser(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUser_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUserArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUserArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUserArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUserArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUserArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUserArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUserArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUserArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingNotification_GetAddedByUserId
uint64_t Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetAddedByUserId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetAddedByUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingNotification_GetAddedByUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingNotification_GetRoom
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetRoom(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingNotification_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingNotification_GetTraceId
::Il2CppString* Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetTraceId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetTraceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingNotification_GetTraceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingNotification_GetTraceId_Native
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetTraceId_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetTraceId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingNotification_GetTraceId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingRoom_GetPingTime
uint Oculus::Platform::CAPI::ovr_MatchmakingRoom_GetPingTime(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingRoom_GetPingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingRoom_GetPingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingRoom_GetRoom
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingRoom_GetRoom(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingRoom_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingRoom_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingRoom_HasPingTime
bool Oculus::Platform::CAPI::ovr_MatchmakingRoom_HasPingTime(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingRoom_HasPingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingRoom_HasPingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingRoomArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingRoomArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingRoomArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingRoomArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingRoomArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_MatchmakingRoomArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingRoomArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingRoomArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetDrawCount
uint Oculus::Platform::CAPI::ovr_MatchmakingStats_GetDrawCount(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingStats_GetDrawCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetDrawCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetLossCount
uint Oculus::Platform::CAPI::ovr_MatchmakingStats_GetLossCount(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingStats_GetLossCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetLossCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetSkillLevel
uint Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillLevel(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetSkillLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetSkillMean
double Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillMean(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillMean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetSkillMean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetSkillStandardDeviation
double Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillStandardDeviation(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillStandardDeviation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetSkillStandardDeviation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetWinCount
uint Oculus::Platform::CAPI::ovr_MatchmakingStats_GetWinCount(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingStats_GetWinCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetWinCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAbuseReportRecording
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAbuseReportRecording(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetAbuseReportRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAbuseReportRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAchievementDefinitionArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAchievementDefinitionArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetAchievementDefinitionArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAchievementDefinitionArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAchievementProgressArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAchievementProgressArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetAchievementProgressArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAchievementProgressArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAchievementUpdate
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAchievementUpdate(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetAchievementUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAchievementUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetApplicationVersion
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetApplicationVersion(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetApplicationVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetApplicationVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetDetails
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetDetails(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetAssetDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetDetailsArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetDetailsArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetAssetDetailsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetDetailsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetFileDeleteResult
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetFileDeleteResult(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetAssetFileDeleteResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetFileDeleteResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetFileDownloadCancelResult
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadCancelResult(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadCancelResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetFileDownloadCancelResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetFileDownloadResult
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadResult(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetFileDownloadResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetFileDownloadUpdate
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadUpdate(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetFileDownloadUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCalApplicationFinalized
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCalApplicationFinalized(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetCalApplicationFinalized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCalApplicationFinalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCalApplicationProposed
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCalApplicationProposed(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetCalApplicationProposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCalApplicationProposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCalApplicationSuggestionArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCalApplicationSuggestionArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetCalApplicationSuggestionArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCalApplicationSuggestionArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetChallenge
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetChallenge(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetChallenge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetChallenge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetChallengeArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetChallengeArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetChallengeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetChallengeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetChallengeEntryArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetChallengeEntryArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetChallengeEntryArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetChallengeEntryArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCloudStorageConflictMetadata
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCloudStorageConflictMetadata(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetCloudStorageConflictMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCloudStorageConflictMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCloudStorageData
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCloudStorageData(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetCloudStorageData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCloudStorageData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCloudStorageMetadata
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCloudStorageMetadata(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetCloudStorageMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCloudStorageMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCloudStorageMetadataArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCloudStorageMetadataArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetCloudStorageMetadataArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCloudStorageMetadataArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCloudStorageUpdateResponse
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCloudStorageUpdateResponse(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetCloudStorageUpdateResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCloudStorageUpdateResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetDataStore
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetDataStore(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetDestinationArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetDestinationArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetDestinationArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetDestinationArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetError
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetError(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetGroupPresenceLeaveIntent
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceLeaveIntent(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceLeaveIntent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetGroupPresenceLeaveIntent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetHttpTransferUpdate
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetHttpTransferUpdate(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetHttpTransferUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetHttpTransferUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetInstalledApplicationArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetInstalledApplicationArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetInstalledApplicationArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetInstalledApplicationArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetInvitePanelResultInfo
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetInvitePanelResultInfo(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetInvitePanelResultInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetInvitePanelResultInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchBlockFlowResult
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchBlockFlowResult(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetLaunchBlockFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchBlockFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchFriendRequestFlowResult
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchFriendRequestFlowResult(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetLaunchFriendRequestFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchFriendRequestFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchInvitePanelFlowResult
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchInvitePanelFlowResult(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetLaunchInvitePanelFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchInvitePanelFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchReportFlowResult
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchReportFlowResult(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetLaunchReportFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchReportFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchUnblockFlowResult
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchUnblockFlowResult(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetLaunchUnblockFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchUnblockFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLeaderboardArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLeaderboardArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetLeaderboardArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLeaderboardArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLeaderboardEntryArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLeaderboardEntryArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetLeaderboardEntryArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLeaderboardEntryArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLeaderboardUpdateStatus
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLeaderboardUpdateStatus(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetLeaderboardUpdateStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLeaderboardUpdateStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLinkedAccountArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLinkedAccountArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetLinkedAccountArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLinkedAccountArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLivestreamingApplicationStatus
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLivestreamingApplicationStatus(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetLivestreamingApplicationStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLivestreamingApplicationStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLivestreamingStartResult
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStartResult(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStartResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLivestreamingStartResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLivestreamingStatus
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStatus(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLivestreamingStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLivestreamingVideoStats
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLivestreamingVideoStats(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetLivestreamingVideoStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLivestreamingVideoStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingAdminSnapshot
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingAdminSnapshot(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetMatchmakingAdminSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingAdminSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingBrowseResult
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingBrowseResult(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetMatchmakingBrowseResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingBrowseResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingEnqueueResult
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingEnqueueResult(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetMatchmakingEnqueueResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingEnqueueResultAndRoom
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingEnqueueResultAndRoom(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetMatchmakingEnqueueResultAndRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingEnqueueResultAndRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingRoomArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingRoomArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetMatchmakingRoomArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingRoomArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingStats
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingStats(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetMatchmakingStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNativeMessage
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNativeMessage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetNativeMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNativeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncConnection
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncConnection(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetNetSyncConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncSessionArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncSessionArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncSessionsChangedNotification
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionsChangedNotification(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionsChangedNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncSessionsChangedNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncSetSessionPropertyResult
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncSetSessionPropertyResult(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetNetSyncSetSessionPropertyResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncSetSessionPropertyResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncVoipAttenuationValueArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncVoipAttenuationValueArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetNetSyncVoipAttenuationValueArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncVoipAttenuationValueArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetworkingPeer
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetworkingPeer(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetNetworkingPeer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetworkingPeer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetOrgScopedID
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetOrgScopedID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetOrgScopedID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetOrgScopedID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetParty
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetParty(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPartyID
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPartyID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetPartyID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPartyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPartyUpdateNotification
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPartyUpdateNotification(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetPartyUpdateNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPartyUpdateNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPidArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPidArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetPidArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPidArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPingResult
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPingResult(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetPingResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPingResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPlatformInitialize
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPlatformInitialize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetPlatformInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPlatformInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetProductArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetProductArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetProductArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetProductArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPurchase
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPurchase(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetPurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPurchaseArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPurchaseArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetPurchaseArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPurchaseArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRequestID
uint64_t Oculus::Platform::CAPI::ovr_Message_GetRequestID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetRequestID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRequestID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRoom
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetRoom(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRoomArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetRoomArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetRoomArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRoomArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRoomInviteNotification
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetRoomInviteNotification(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetRoomInviteNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRoomInviteNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRoomInviteNotificationArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetRoomInviteNotificationArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetRoomInviteNotificationArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRoomInviteNotificationArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetSdkAccountArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetSdkAccountArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetSdkAccountArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetSdkAccountArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetShareMediaResult
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetShareMediaResult(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetShareMediaResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetShareMediaResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetString
::Il2CppString* Oculus::Platform::CAPI::ovr_Message_GetString(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetString_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetString_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetSystemPermission
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetSystemPermission(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetSystemPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetSystemPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetSystemVoipState
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetSystemVoipState(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetSystemVoipState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetSystemVoipState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetType
Oculus::Platform::Message::MessageType Oculus::Platform::CAPI::ovr_Message_GetType(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Message::MessageType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUser
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUser(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserAndRoomArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserAndRoomArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetUserAndRoomArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserAndRoomArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserArray
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetUserArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserDataStoreUpdateResponse
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserDataStoreUpdateResponse(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetUserDataStoreUpdateResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserDataStoreUpdateResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserProof
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserProof(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetUserProof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserReportID
System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserReportID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_GetUserReportID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserReportID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_IsError
bool Oculus::Platform::CAPI::ovr_Message_IsError(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Message_IsError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_IsError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_GetNumSamplesAvailable
System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_GetNumSamplesAvailable(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Microphone_GetNumSamplesAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_GetNumSamplesAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_GetOutputBufferMaxSize
System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_GetOutputBufferMaxSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Microphone_GetOutputBufferMaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_GetOutputBufferMaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_GetPCM
System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_GetPCM(System::IntPtr obj, ::Array<int16_t>* outputBuffer, System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Microphone_GetPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_GetPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_GetPCMFloat
System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_GetPCMFloat(System::IntPtr obj, ::Array<float>* outputBuffer, System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Microphone_GetPCMFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_GetPCMFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_ReadData
System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_ReadData(System::IntPtr obj, ::Array<float>* outputBuffer, System::UIntPtr outputBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Microphone_ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferSize)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_SetAcceptableRecordingDelayHint
void Oculus::Platform::CAPI::ovr_Microphone_SetAcceptableRecordingDelayHint(System::IntPtr obj, System::UIntPtr delayMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Microphone_SetAcceptableRecordingDelayHint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_SetAcceptableRecordingDelayHint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(delayMs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, delayMs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_Start
void Oculus::Platform::CAPI::ovr_Microphone_Start(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Microphone_Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_Stop
void Oculus::Platform::CAPI::ovr_Microphone_Stop(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Microphone_Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetConnectionId
int64_t Oculus::Platform::CAPI::ovr_NetSyncConnection_GetConnectionId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncConnection_GetConnectionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetConnectionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetDisconnectReason
Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::CAPI::ovr_NetSyncConnection_GetDisconnectReason(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncConnection_GetDisconnectReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetDisconnectReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::NetSyncDisconnectReason, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetSessionId
uint64_t Oculus::Platform::CAPI::ovr_NetSyncConnection_GetSessionId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncConnection_GetSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetStatus
Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::CAPI::ovr_NetSyncConnection_GetStatus(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncConnection_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::NetSyncConnectionStatus, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetZoneId
::Il2CppString* Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetZoneId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetZoneId_Native
System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetZoneId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetConnectionId
int64_t Oculus::Platform::CAPI::ovr_NetSyncSession_GetConnectionId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncSession_GetConnectionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetConnectionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetMuted
bool Oculus::Platform::CAPI::ovr_NetSyncSession_GetMuted(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncSession_GetMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetSessionId
uint64_t Oculus::Platform::CAPI::ovr_NetSyncSession_GetSessionId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncSession_GetSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_NetSyncSession_GetUserId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncSession_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetVoipGroup
::Il2CppString* Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetVoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetVoipGroup_Native
System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetVoipGroup_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSessionArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSessionArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSessionArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSessionArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSessionsChangedNotification_GetConnectionId
int64_t Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetConnectionId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetConnectionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSessionsChangedNotification_GetConnectionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSessionsChangedNotification_GetSessions
System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetSessions(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetSessions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSessionsChangedNotification_GetSessions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSetSessionPropertyResult_GetSession
System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncSetSessionPropertyResult_GetSession(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncSetSessionPropertyResult_GetSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSetSessionPropertyResult_GetSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncVoipAttenuationValue_GetDecibels
float Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDecibels(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDecibels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncVoipAttenuationValue_GetDecibels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncVoipAttenuationValue_GetDistance
float Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDistance(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncVoipAttenuationValue_GetDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncVoipAttenuationValueArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncVoipAttenuationValueArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncVoipAttenuationValueArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncVoipAttenuationValueArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetworkingPeer_GetID
uint64_t Oculus::Platform::CAPI::ovr_NetworkingPeer_GetID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetworkingPeer_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetworkingPeer_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetworkingPeer_GetState
Oculus::Platform::PeerConnectionState Oculus::Platform::CAPI::ovr_NetworkingPeer_GetState(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetworkingPeer_GetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetworkingPeer_GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::PeerConnectionState, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_OrgScopedID_GetID
uint64_t Oculus::Platform::CAPI::ovr_OrgScopedID_GetID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_OrgScopedID_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_OrgScopedID_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_Free
void Oculus::Platform::CAPI::ovr_Packet_Free(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Packet_Free");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_Free", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_GetBytes
System::IntPtr Oculus::Platform::CAPI::ovr_Packet_GetBytes(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Packet_GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_GetSendPolicy
Oculus::Platform::SendPolicy Oculus::Platform::CAPI::ovr_Packet_GetSendPolicy(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Packet_GetSendPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_GetSendPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::SendPolicy, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_GetSenderID
uint64_t Oculus::Platform::CAPI::ovr_Packet_GetSenderID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Packet_GetSenderID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_GetSenderID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_Packet_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Packet_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetID
uint64_t Oculus::Platform::CAPI::ovr_Party_GetID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Party_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetInvitedUsers
System::IntPtr Oculus::Platform::CAPI::ovr_Party_GetInvitedUsers(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Party_GetInvitedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetInvitedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetLeader
System::IntPtr Oculus::Platform::CAPI::ovr_Party_GetLeader(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Party_GetLeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetLeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetRoom
System::IntPtr Oculus::Platform::CAPI::ovr_Party_GetRoom(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Party_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetUsers
System::IntPtr Oculus::Platform::CAPI::ovr_Party_GetUsers(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Party_GetUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyID_GetID
uint64_t Oculus::Platform::CAPI::ovr_PartyID_GetID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PartyID_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyID_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetAction
Oculus::Platform::PartyUpdateAction Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetAction(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::PartyUpdateAction, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetPartyId
uint64_t Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetPartyId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetPartyId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetPartyId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetSenderId
uint64_t Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetSenderId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetSenderId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetSenderId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUpdateTimestamp
::Il2CppString* Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUpdateTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUpdateTimestamp_Native
System::IntPtr Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUpdateTimestamp_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserAlias
::Il2CppString* Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserAlias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserAlias_Native
System::IntPtr Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserAlias_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserName
::Il2CppString* Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserName_Native
System::IntPtr Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Pid_GetId
::Il2CppString* Oculus::Platform::CAPI::ovr_Pid_GetId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Pid_GetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Pid_GetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Pid_GetId_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Pid_GetId_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Pid_GetId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Pid_GetId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PidArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_PidArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PidArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PidArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PidArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_PidArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PidArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PidArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PingResult_GetID
uint64_t Oculus::Platform::CAPI::ovr_PingResult_GetID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PingResult_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PingResult_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PingResult_GetPingTimeUsec
uint64_t Oculus::Platform::CAPI::ovr_PingResult_GetPingTimeUsec(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PingResult_GetPingTimeUsec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PingResult_GetPingTimeUsec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PingResult_IsTimeout
bool Oculus::Platform::CAPI::ovr_PingResult_IsTimeout(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PingResult_IsTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PingResult_IsTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PlatformInitialize_GetResult
Oculus::Platform::PlatformInitializeResult Oculus::Platform::CAPI::ovr_PlatformInitialize_GetResult(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PlatformInitialize_GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PlatformInitialize_GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::PlatformInitializeResult, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetAmountInHundredths
uint Oculus::Platform::CAPI::ovr_Price_GetAmountInHundredths(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Price_GetAmountInHundredths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetAmountInHundredths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetCurrency
::Il2CppString* Oculus::Platform::CAPI::ovr_Price_GetCurrency(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Price_GetCurrency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetCurrency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetCurrency_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Price_GetCurrency_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Price_GetCurrency_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetCurrency_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetFormatted
::Il2CppString* Oculus::Platform::CAPI::ovr_Price_GetFormatted(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Price_GetFormatted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetFormatted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetFormatted_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Price_GetFormatted_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Price_GetFormatted_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetFormatted_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetDescription
::Il2CppString* Oculus::Platform::CAPI::ovr_Product_GetDescription(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Product_GetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetDescription_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Product_GetDescription_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Product_GetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetFormattedPrice
::Il2CppString* Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetFormattedPrice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetFormattedPrice_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetFormattedPrice_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetName
::Il2CppString* Oculus::Platform::CAPI::ovr_Product_GetName(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Product_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetName_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Product_GetName_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Product_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetSKU
::Il2CppString* Oculus::Platform::CAPI::ovr_Product_GetSKU(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Product_GetSKU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetSKU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetSKU_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Product_GetSKU_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Product_GetSKU_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetSKU_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_ProductArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ProductArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_GetNextUrl
::Il2CppString* Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_GetNextUrl_Native
System::IntPtr Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_ProductArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ProductArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_ProductArray_HasNextPage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ProductArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetExpirationTime
System::DateTime Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetExpirationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetExpirationTime_Native
uint64_t Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetExpirationTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetGrantTime
System::DateTime Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetGrantTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetGrantTime_Native
uint64_t Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetGrantTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetPurchaseID
uint64_t Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetPurchaseID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetPurchaseStrID
::Il2CppString* Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetPurchaseStrID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetPurchaseStrID_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetPurchaseStrID_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetSKU
::Il2CppString* Oculus::Platform::CAPI::ovr_Purchase_GetSKU(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Purchase_GetSKU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetSKU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetSKU_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Purchase_GetSKU_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Purchase_GetSKU_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetSKU_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_PurchaseArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PurchaseArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_GetNextUrl
::Il2CppString* Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_GetNextUrl_Native
System::IntPtr Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_PurchaseArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PurchaseArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_PurchaseArray_HasNextPage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_PurchaseArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetApplicationID
uint64_t Oculus::Platform::CAPI::ovr_Room_GetApplicationID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetApplicationID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetApplicationID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetDataStore
System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetDataStore(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetDescription
::Il2CppString* Oculus::Platform::CAPI::ovr_Room_GetDescription(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetDescription_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetDescription_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetID
uint64_t Oculus::Platform::CAPI::ovr_Room_GetID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetInvitedUsers
System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetInvitedUsers(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetInvitedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetInvitedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetIsMembershipLocked
bool Oculus::Platform::CAPI::ovr_Room_GetIsMembershipLocked(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetIsMembershipLocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetIsMembershipLocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetJoinPolicy
Oculus::Platform::RoomJoinPolicy Oculus::Platform::CAPI::ovr_Room_GetJoinPolicy(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetJoinPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::RoomJoinPolicy, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetJoinability
Oculus::Platform::RoomJoinability Oculus::Platform::CAPI::ovr_Room_GetJoinability(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetJoinability");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetJoinability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::RoomJoinability, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetMatchedUsers
System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetMatchedUsers(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetMatchedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetMatchedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetMaxUsers
uint Oculus::Platform::CAPI::ovr_Room_GetMaxUsers(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetName
::Il2CppString* Oculus::Platform::CAPI::ovr_Room_GetName(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetName_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetName_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetOwner
System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetOwner(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetTeams
System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetTeams(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetTeams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetTeams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetType
Oculus::Platform::RoomType Oculus::Platform::CAPI::ovr_Room_GetType(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::RoomType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetUsers
System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetUsers(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetVersion
uint Oculus::Platform::CAPI::ovr_Room_GetVersion(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Room_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_RoomArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomArray_GetNextUrl
::Il2CppString* Oculus::Platform::CAPI::ovr_RoomArray_GetNextUrl(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomArray_GetNextUrl_Native
System::IntPtr Oculus::Platform::CAPI::ovr_RoomArray_GetNextUrl_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_RoomArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_RoomArray_HasNextPage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotification_GetID
uint64_t Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotification_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotification_GetRoomID
uint64_t Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetRoomID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetRoomID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotification_GetRoomID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotification_GetSenderID
uint64_t Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSenderID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSenderID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotification_GetSenderID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotification_GetSentTime
System::DateTime Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSentTime(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSentTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotification_GetSentTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotification_GetSentTime_Native
uint64_t Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSentTime_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSentTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotification_GetSentTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotificationArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotificationArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotificationArray_GetNextUrl
::Il2CppString* Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetNextUrl(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotificationArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotificationArray_GetNextUrl_Native
System::IntPtr Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetNextUrl_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotificationArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotificationArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotificationArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotificationArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_HasNextPage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotificationArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SdkAccount_GetAccountType
Oculus::Platform::SdkAccountType Oculus::Platform::CAPI::ovr_SdkAccount_GetAccountType(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_SdkAccount_GetAccountType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SdkAccount_GetAccountType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::SdkAccountType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SdkAccount_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_SdkAccount_GetUserId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_SdkAccount_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SdkAccount_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SdkAccountArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_SdkAccountArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_SdkAccountArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SdkAccountArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SdkAccountArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_SdkAccountArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_SdkAccountArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SdkAccountArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ShareMediaResult_GetStatus
Oculus::Platform::ShareMediaStatus Oculus::Platform::CAPI::ovr_ShareMediaResult_GetStatus(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ShareMediaResult_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ShareMediaResult_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::ShareMediaStatus, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SupplementaryMetric_GetID
uint64_t Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SupplementaryMetric_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SupplementaryMetric_GetMetric
int64_t Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetMetric(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetMetric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SupplementaryMetric_GetMetric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SystemPermission_GetHasPermission
bool Oculus::Platform::CAPI::ovr_SystemPermission_GetHasPermission(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_SystemPermission_GetHasPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SystemPermission_GetHasPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SystemPermission_GetPermissionGrantStatus
Oculus::Platform::PermissionGrantStatus Oculus::Platform::CAPI::ovr_SystemPermission_GetPermissionGrantStatus(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_SystemPermission_GetPermissionGrantStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SystemPermission_GetPermissionGrantStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::PermissionGrantStatus, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SystemVoipState_GetMicrophoneMuted
Oculus::Platform::VoipMuteState Oculus::Platform::CAPI::ovr_SystemVoipState_GetMicrophoneMuted(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_SystemVoipState_GetMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SystemVoipState_GetMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::VoipMuteState, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SystemVoipState_GetStatus
Oculus::Platform::SystemVoipStatus Oculus::Platform::CAPI::ovr_SystemVoipState_GetStatus(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_SystemVoipState_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SystemVoipState_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::SystemVoipStatus, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Team_GetAssignedUsers
System::IntPtr Oculus::Platform::CAPI::ovr_Team_GetAssignedUsers(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Team_GetAssignedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Team_GetAssignedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Team_GetMaxUsers
int Oculus::Platform::CAPI::ovr_Team_GetMaxUsers(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Team_GetMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Team_GetMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Team_GetMinUsers
int Oculus::Platform::CAPI::ovr_Team_GetMinUsers(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Team_GetMinUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Team_GetMinUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Team_GetName
::Il2CppString* Oculus::Platform::CAPI::ovr_Team_GetName(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Team_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Team_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Team_GetName_Native
System::IntPtr Oculus::Platform::CAPI::ovr_Team_GetName_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_Team_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Team_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TeamArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_TeamArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_TeamArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TeamArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TeamArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_TeamArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_TeamArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TeamArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetAccessToken
::Il2CppString* Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetAccessToken_Native
System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetAccessToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetAppAccessArray
System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetAppAccessArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_TestUser_GetAppAccessArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetAppAccessArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetFbAppAccessArray
System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetFbAppAccessArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_TestUser_GetFbAppAccessArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetFbAppAccessArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetFriendAccessToken
::Il2CppString* Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetFriendAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetFriendAccessToken_Native
System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetFriendAccessToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetFriendAppAccessArray
System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetFriendAppAccessArray(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_TestUser_GetFriendAppAccessArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetFriendAppAccessArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetUserAlias
::Il2CppString* Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetUserAlias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetUserAlias_Native
System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetUserAlias_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetUserFbid
uint64_t Oculus::Platform::CAPI::ovr_TestUser_GetUserFbid(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_TestUser_GetUserFbid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetUserFbid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_TestUser_GetUserId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_TestUser_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccess_GetAccessToken
::Il2CppString* Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccess_GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccess_GetAccessToken_Native
System::IntPtr Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccess_GetAccessToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccess_GetAppId
uint64_t Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAppId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccess_GetAppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccess_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetUserId(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccess_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccessArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccessArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccessArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccessArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetDisplayName
::Il2CppString* Oculus::Platform::CAPI::ovr_User_GetDisplayName(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetDisplayName_Native
System::IntPtr Oculus::Platform::CAPI::ovr_User_GetDisplayName_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetDisplayName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetDisplayName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetID
uint64_t Oculus::Platform::CAPI::ovr_User_GetID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetImageUrl
::Il2CppString* Oculus::Platform::CAPI::ovr_User_GetImageUrl(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetImageUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetImageUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetImageUrl_Native
System::IntPtr Oculus::Platform::CAPI::ovr_User_GetImageUrl_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetImageUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetImageUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetInviteToken
::Il2CppString* Oculus::Platform::CAPI::ovr_User_GetInviteToken(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetInviteToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetInviteToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetInviteToken_Native
System::IntPtr Oculus::Platform::CAPI::ovr_User_GetInviteToken_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetInviteToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetInviteToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetOculusID
::Il2CppString* Oculus::Platform::CAPI::ovr_User_GetOculusID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetOculusID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetOculusID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetOculusID_Native
System::IntPtr Oculus::Platform::CAPI::ovr_User_GetOculusID_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetOculusID_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetOculusID_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresence
::Il2CppString* Oculus::Platform::CAPI::ovr_User_GetPresence(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresence_Native
System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresence_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetPresence_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresence_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceDeeplinkMessage
::Il2CppString* Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceDeeplinkMessage_Native
System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceDestinationApiName
::Il2CppString* Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceDestinationApiName_Native
System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceStatus
Oculus::Platform::UserPresenceStatus Oculus::Platform::CAPI::ovr_User_GetPresenceStatus(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetPresenceStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::UserPresenceStatus, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetSmallImageUrl
::Il2CppString* Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetSmallImageUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetSmallImageUrl_Native
System::IntPtr Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetSmallImageUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoom_GetRoom
System::IntPtr Oculus::Platform::CAPI::ovr_UserAndRoom_GetRoom(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserAndRoom_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoom_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoom_GetUser
System::IntPtr Oculus::Platform::CAPI::ovr_UserAndRoom_GetUser(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserAndRoom_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoom_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoomArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoomArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoomArray_GetNextUrl
::Il2CppString* Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetNextUrl(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoomArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoomArray_GetNextUrl_Native
System::IntPtr Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetNextUrl_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoomArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoomArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoomArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoomArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_UserAndRoomArray_HasNextPage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserAndRoomArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoomArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_GetElement
System::IntPtr Oculus::Platform::CAPI::ovr_UserArray_GetElement(System::IntPtr obj, System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_GetNextUrl
::Il2CppString* Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_GetNextUrl_Native
System::IntPtr Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_GetSize
System::UIntPtr Oculus::Platform::CAPI::ovr_UserArray_GetSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_UserArray_HasNextPage(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStoreUpdateResponse_GetSuccess
bool Oculus::Platform::CAPI::ovr_UserDataStoreUpdateResponse_GetSuccess(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserDataStoreUpdateResponse_GetSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStoreUpdateResponse_GetSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserProof_GetNonce
::Il2CppString* Oculus::Platform::CAPI::ovr_UserProof_GetNonce(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserProof_GetNonce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserProof_GetNonce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserProof_GetNonce_Native
System::IntPtr Oculus::Platform::CAPI::ovr_UserProof_GetNonce_Native(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserProof_GetNonce_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserProof_GetNonce_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserReportID_GetDidCancel
bool Oculus::Platform::CAPI::ovr_UserReportID_GetDidCancel(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserReportID_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserReportID_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserReportID_GetID
uint64_t Oculus::Platform::CAPI::ovr_UserReportID_GetID(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserReportID_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserReportID_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipDecoder_Decode
void Oculus::Platform::CAPI::ovr_VoipDecoder_Decode(System::IntPtr obj, ::Array<uint8_t>* compressedData, System::UIntPtr compressedSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_VoipDecoder_Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipDecoder_Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(compressedData), ::il2cpp_utils::ExtractType(compressedSize)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, compressedData, compressedSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipDecoder_GetDecodedPCM
System::UIntPtr Oculus::Platform::CAPI::ovr_VoipDecoder_GetDecodedPCM(System::IntPtr obj, ::Array<float>* outputBuffer, System::UIntPtr outputBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_VoipDecoder_GetDecodedPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipDecoder_GetDecodedPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferSize)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipEncoder_AddPCM
void Oculus::Platform::CAPI::ovr_VoipEncoder_AddPCM(System::IntPtr obj, ::Array<float>* inputData, uint inputSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_VoipEncoder_AddPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipEncoder_AddPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(inputData), ::il2cpp_utils::ExtractType(inputSize)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, inputData, inputSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipEncoder_GetCompressedData
System::UIntPtr Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedData(System::IntPtr obj, ::Array<uint8_t>* outputBuffer, System::UIntPtr intputSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipEncoder_GetCompressedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(intputSize)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, outputBuffer, intputSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipEncoder_GetCompressedDataSize
System::UIntPtr Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedDataSize(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedDataSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipEncoder_GetCompressedDataSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::UIntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportOptions_Create
System::IntPtr Oculus::Platform::CAPI::ovr_AbuseReportOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AbuseReportOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportOptions_Destroy
void Oculus::Platform::CAPI::ovr_AbuseReportOptions_Destroy(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AbuseReportOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportOptions_SetPreventPeopleChooser
void Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetPreventPeopleChooser(System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetPreventPeopleChooser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportOptions_SetPreventPeopleChooser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportOptions_SetReportType
void Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetReportType(System::IntPtr handle, Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetReportType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportOptions_SetReportType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_Create
System::IntPtr Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_Destroy
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Destroy(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_SetObjectType
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType(System::IntPtr handle, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_SetObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_SetObjectType_Native
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType_Native(System::IntPtr handle, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_SetObjectType_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_SetReportType
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetReportType(System::IntPtr handle, Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetReportType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_SetReportType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_SetVideoMode
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetVideoMode(System::IntPtr handle, Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetVideoMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_SetVideoMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_Create
System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ApplicationOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_Destroy
void Oculus::Platform::CAPI::ovr_ApplicationOptions_Destroy(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ApplicationOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_SetDeeplinkMessage
void Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage(System::IntPtr handle, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_SetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_SetDeeplinkMessage_Native
void Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage_Native(System::IntPtr handle, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_SetDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_Create
System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_Destroy
void Oculus::Platform::CAPI::ovr_ChallengeOptions_Destroy(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetDescription
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription(System::IntPtr handle, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetDescription_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription_Native(System::IntPtr handle, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetEndDate
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate(System::IntPtr handle, System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetEndDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetEndDate_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate_Native(System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetEndDate_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetIncludeActiveChallenges
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeActiveChallenges(System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeActiveChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetIncludeActiveChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetIncludeFutureChallenges
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeFutureChallenges(System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeFutureChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetIncludeFutureChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetIncludePastChallenges
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludePastChallenges(System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludePastChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetIncludePastChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetLeaderboardName
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName(System::IntPtr handle, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetLeaderboardName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetLeaderboardName_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName_Native(System::IntPtr handle, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetLeaderboardName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetStartDate
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate(System::IntPtr handle, System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetStartDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetStartDate_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate_Native(System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetStartDate_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetTitle
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle(System::IntPtr handle, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetTitle_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle_Native(System::IntPtr handle, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetTitle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetViewerFilter
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetViewerFilter(System::IntPtr handle, Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeOptions_SetViewerFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetViewerFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetVisibility
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetVisibility(System::IntPtr handle, Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_ChallengeOptions_SetVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InviteOptions_Create
System::IntPtr Oculus::Platform::CAPI::ovr_InviteOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_InviteOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InviteOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InviteOptions_Destroy
void Oculus::Platform::CAPI::ovr_InviteOptions_Destroy(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_InviteOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InviteOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InviteOptions_AddSuggestedUser
void Oculus::Platform::CAPI::ovr_InviteOptions_AddSuggestedUser(System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_InviteOptions_AddSuggestedUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InviteOptions_AddSuggestedUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InviteOptions_ClearSuggestedUsers
void Oculus::Platform::CAPI::ovr_InviteOptions_ClearSuggestedUsers(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_InviteOptions_ClearSuggestedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InviteOptions_ClearSuggestedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_Create
System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_Destroy
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_Destroy(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetCreateRoomDataStoreString
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString(System::IntPtr handle, ::Il2CppString* key, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetCreateRoomDataStoreString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(System::IntPtr handle, System::IntPtr key, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_ClearCreateRoomDataStore
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearCreateRoomDataStore(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearCreateRoomDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_ClearCreateRoomDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetCreateRoomJoinPolicy
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(System::IntPtr handle, Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetCreateRoomJoinPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetCreateRoomMaxUsers
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomMaxUsers(System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetCreateRoomMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_AddEnqueueAdditionalUser
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_AddEnqueueAdditionalUser(System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingOptions_AddEnqueueAdditionalUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_AddEnqueueAdditionalUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsInt
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(System::IntPtr handle, ::Il2CppString* key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(System::IntPtr handle, System::IntPtr key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(System::IntPtr handle, ::Il2CppString* key, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(System::IntPtr handle, System::IntPtr key, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsString
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString(System::IntPtr handle, ::Il2CppString* key, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(System::IntPtr handle, System::IntPtr key, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_ClearEnqueueDataSettings
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearEnqueueDataSettings(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearEnqueueDataSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_ClearEnqueueDataSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueIsDebug
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueIsDebug(System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueIsDebug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueIsDebug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueQueryKey
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey(System::IntPtr handle, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueQueryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueQueryKey_Native
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(System::IntPtr handle, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueQueryKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_Create
System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_Destroy
void Oculus::Platform::CAPI::ovr_NetSyncOptions_Destroy(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetVoipGroup
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup(System::IntPtr handle, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetVoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetVoipGroup_Native
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup_Native(System::IntPtr handle, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetVoipGroup_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetVoipStreamDefault
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipStreamDefault(System::IntPtr handle, Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipStreamDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetVoipStreamDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetZoneId
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId(System::IntPtr handle, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetZoneId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetZoneId_Native
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId_Native(System::IntPtr handle, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetZoneId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_Create
System::IntPtr Oculus::Platform::CAPI::ovr_RichPresenceOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_Destroy
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_Destroy(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetApiName
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName(System::IntPtr handle, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetApiName_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName_Native(System::IntPtr handle, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetArgsString
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetArgsString(System::IntPtr handle, ::Il2CppString* key, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetArgsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetArgsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetArgsString_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetArgsString_Native(System::IntPtr handle, System::IntPtr key, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetArgsString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetArgsString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_ClearArgs
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_ClearArgs(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_ClearArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_ClearArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetCurrentCapacity
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetCurrentCapacity(System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetCurrentCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetCurrentCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetDeeplinkMessageOverride
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride(System::IntPtr handle, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetDeeplinkMessageOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(System::IntPtr handle, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetEndTime
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetEndTime(System::IntPtr handle, System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetEndTime_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetEndTime_Native(System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetEndTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetEndTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetExtraContext
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetExtraContext(System::IntPtr handle, Oculus::Platform::RichPresenceExtraContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetExtraContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetExtraContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetInstanceId
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetInstanceId(System::IntPtr handle, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetInstanceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetInstanceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetInstanceId_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetInstanceId_Native(System::IntPtr handle, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetInstanceId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetInstanceId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetIsIdle
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsIdle(System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsIdle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetIsIdle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetIsJoinable
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsJoinable(System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsJoinable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetIsJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetJoinableId
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetJoinableId(System::IntPtr handle, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetJoinableId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetJoinableId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetJoinableId_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetJoinableId_Native(System::IntPtr handle, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetJoinableId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetJoinableId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetLobbySessionId
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetLobbySessionId(System::IntPtr handle, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetLobbySessionId_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetLobbySessionId_Native(System::IntPtr handle, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetLobbySessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetLobbySessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetMatchSessionId
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMatchSessionId(System::IntPtr handle, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetMatchSessionId_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMatchSessionId_Native(System::IntPtr handle, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMatchSessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetMatchSessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetMaxCapacity
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMaxCapacity(System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMaxCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetMaxCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetStartTime
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetStartTime(System::IntPtr handle, System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetStartTime_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetStartTime_Native(System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetStartTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetStartTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_Create
System::IntPtr Oculus::Platform::CAPI::ovr_RoomOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_Destroy
void Oculus::Platform::CAPI::ovr_RoomOptions_Destroy(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetDataStoreString
void Oculus::Platform::CAPI::ovr_RoomOptions_SetDataStoreString(System::IntPtr handle, ::Il2CppString* key, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomOptions_SetDataStoreString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetDataStoreString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetDataStoreString_Native
void Oculus::Platform::CAPI::ovr_RoomOptions_SetDataStoreString_Native(System::IntPtr handle, System::IntPtr key, System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomOptions_SetDataStoreString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetDataStoreString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_ClearDataStore
void Oculus::Platform::CAPI::ovr_RoomOptions_ClearDataStore(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomOptions_ClearDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_ClearDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetExcludeRecentlyMet
void Oculus::Platform::CAPI::ovr_RoomOptions_SetExcludeRecentlyMet(System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomOptions_SetExcludeRecentlyMet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetExcludeRecentlyMet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetMaxUserResults
void Oculus::Platform::CAPI::ovr_RoomOptions_SetMaxUserResults(System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomOptions_SetMaxUserResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetMaxUserResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetOrdering
void Oculus::Platform::CAPI::ovr_RoomOptions_SetOrdering(System::IntPtr handle, Oculus::Platform::UserOrdering value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomOptions_SetOrdering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetOrdering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetRecentlyMetTimeWindow
void Oculus::Platform::CAPI::ovr_RoomOptions_SetRecentlyMetTimeWindow(System::IntPtr handle, Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomOptions_SetRecentlyMetTimeWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetRecentlyMetTimeWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetRoomId
void Oculus::Platform::CAPI::ovr_RoomOptions_SetRoomId(System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomOptions_SetRoomId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetRoomId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetTurnOffUpdates
void Oculus::Platform::CAPI::ovr_RoomOptions_SetTurnOffUpdates(System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_RoomOptions_SetTurnOffUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetTurnOffUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_Create
System::IntPtr Oculus::Platform::CAPI::ovr_UserOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_Destroy
void Oculus::Platform::CAPI::ovr_UserOptions_Destroy(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_SetMaxUsers
void Oculus::Platform::CAPI::ovr_UserOptions_SetMaxUsers(System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserOptions_SetMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_SetMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_AddServiceProvider
void Oculus::Platform::CAPI::ovr_UserOptions_AddServiceProvider(System::IntPtr handle, Oculus::Platform::ServiceProvider value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserOptions_AddServiceProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_AddServiceProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_ClearServiceProviders
void Oculus::Platform::CAPI::ovr_UserOptions_ClearServiceProviders(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserOptions_ClearServiceProviders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_ClearServiceProviders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_SetTimeWindow
void Oculus::Platform::CAPI::ovr_UserOptions_SetTimeWindow(System::IntPtr handle, Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_UserOptions_SetTimeWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_SetTimeWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipOptions_Create
System::IntPtr Oculus::Platform::CAPI::ovr_VoipOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_VoipOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipOptions_Destroy
void Oculus::Platform::CAPI::ovr_VoipOptions_Destroy(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_VoipOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipOptions_SetBitrateForNewConnections
void Oculus::Platform::CAPI::ovr_VoipOptions_SetBitrateForNewConnections(System::IntPtr handle, Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_VoipOptions_SetBitrateForNewConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipOptions_SetBitrateForNewConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipOptions_SetCreateNewConnectionUseDtx
void Oculus::Platform::CAPI::ovr_VoipOptions_SetCreateNewConnectionUseDtx(System::IntPtr handle, Oculus::Platform::VoipDtxState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::ovr_VoipOptions_SetCreateNewConnectionUseDtx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipOptions_SetCreateNewConnectionUseDtx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI..cctor
void Oculus::Platform::CAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: CAPI::ArrayOfStructsToIntPtr
// Il2CppName: ArrayOfStructsToIntPtr
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::Array*)>(&CAPI::ArrayOfStructsToIntPtr)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ArrayOfStructsToIntPtr", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Array*>()});
  }
};
// Writing MetadataGetter for method: CAPI::DictionaryToOVRKeyValuePairs
// Il2CppName: DictionaryToOVRKeyValuePairs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<Oculus::Platform::CAPI::ovrKeyValuePair>* (*)(System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppObject*>*)>(&CAPI::DictionaryToOVRKeyValuePairs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "DictionaryToOVRKeyValuePairs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: CAPI::IntPtrToByteArray
// Il2CppName: IntPtrToByteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(System::IntPtr, uint64_t)>(&CAPI::IntPtrToByteArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "IntPtrToByteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::DataStoreFromNative
// Il2CppName: DataStoreFromNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* (*)(System::IntPtr)>(&CAPI::DataStoreFromNative)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "DataStoreFromNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::StringFromNative
// Il2CppName: StringFromNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::StringFromNative)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "StringFromNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::GetNativeStringLengthNotIncludingNullTerminator
// Il2CppName: GetNativeStringLengthNotIncludingNullTerminator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr)>(&CAPI::GetNativeStringLengthNotIncludingNullTerminator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "GetNativeStringLengthNotIncludingNullTerminator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::DateTimeFromNative
// Il2CppName: DateTimeFromNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (*)(uint64_t)>(&CAPI::DateTimeFromNative)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "DateTimeFromNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::DateTimeToNative
// Il2CppName: DateTimeToNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::DateTime)>(&CAPI::DateTimeToNative)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "DateTimeToNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::DateTime>()});
  }
};
// Writing MetadataGetter for method: CAPI::BlobFromNative
// Il2CppName: BlobFromNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(uint, System::IntPtr)>(&CAPI::BlobFromNative)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "BlobFromNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::FiledataFromNative
// Il2CppName: FiledataFromNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(uint, System::IntPtr)>(&CAPI::FiledataFromNative)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "FiledataFromNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::StringToNative
// Il2CppName: StringToNative
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(::Il2CppString*)>(&CAPI::StringToNative)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "StringToNative", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UnityInitWrapper
// Il2CppName: ovr_UnityInitWrapper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*)>(&CAPI::ovr_UnityInitWrapper)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UnityInitWrapper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UnityInitGlobals
// Il2CppName: ovr_UnityInitGlobals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_UnityInitGlobals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UnityInitGlobals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UnityInitWrapperAsynchronous
// Il2CppName: ovr_UnityInitWrapperAsynchronous
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_UnityInitWrapperAsynchronous)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UnityInitWrapperAsynchronous", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UnityInitWrapperStandalone
// Il2CppName: ovr_UnityInitWrapperStandalone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, System::IntPtr)>(&CAPI::ovr_UnityInitWrapperStandalone)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UnityInitWrapperStandalone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Platform_InitializeStandaloneOculus
// Il2CppName: ovr_Platform_InitializeStandaloneOculus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(Oculus::Platform::CAPI::OculusInitParams&)>(&CAPI::ovr_Platform_InitializeStandaloneOculus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Platform_InitializeStandaloneOculus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::CAPI::OculusInitParams&>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PlatformInitializeWithAccessToken
// Il2CppName: ovr_PlatformInitializeWithAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::Il2CppString*)>(&CAPI::ovr_PlatformInitializeWithAccessToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PlatformInitializeWithAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UnityInitWrapperWindows
// Il2CppName: ovr_UnityInitWrapperWindows
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, System::IntPtr)>(&CAPI::ovr_UnityInitWrapperWindows)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UnityInitWrapperWindows", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UnityInitWrapperWindowsAsynchronous
// Il2CppName: ovr_UnityInitWrapperWindowsAsynchronous
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, System::IntPtr)>(&CAPI::ovr_UnityInitWrapperWindowsAsynchronous)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UnityInitWrapperWindowsAsynchronous", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_SetDeveloperAccessToken
// Il2CppName: ovr_SetDeveloperAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*)>(&CAPI::ovr_SetDeveloperAccessToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_SetDeveloperAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_GetLoggedInUserLocale
// Il2CppName: ovr_GetLoggedInUserLocale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&CAPI::ovr_GetLoggedInUserLocale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_GetLoggedInUserLocale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_GetLoggedInUserLocale_Native
// Il2CppName: ovr_GetLoggedInUserLocale_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&CAPI::ovr_GetLoggedInUserLocale_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_GetLoggedInUserLocale_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PopMessage
// Il2CppName: ovr_PopMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&CAPI::ovr_PopMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PopMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_FreeMessage
// Il2CppName: ovr_FreeMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_FreeMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_FreeMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_CreateEncoder
// Il2CppName: ovr_Voip_CreateEncoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&CAPI::ovr_Voip_CreateEncoder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_CreateEncoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_DestroyEncoder
// Il2CppName: ovr_Voip_DestroyEncoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_Voip_DestroyEncoder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_DestroyEncoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_CreateDecoder
// Il2CppName: ovr_Voip_CreateDecoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&CAPI::ovr_Voip_CreateDecoder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_CreateDecoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_DestroyDecoder
// Il2CppName: ovr_Voip_DestroyDecoder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_Voip_DestroyDecoder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_DestroyDecoder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_VoipDecoder_Decode
// Il2CppName: ovr_VoipDecoder_Decode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Array<uint8_t>*, uint64_t)>(&CAPI::ovr_VoipDecoder_Decode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_VoipDecoder_Decode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Microphone_Create
// Il2CppName: ovr_Microphone_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&CAPI::ovr_Microphone_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Microphone_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Microphone_Destroy
// Il2CppName: ovr_Microphone_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_Microphone_Destroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Microphone_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_SetSystemVoipPassthrough
// Il2CppName: ovr_Voip_SetSystemVoipPassthrough
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&CAPI::ovr_Voip_SetSystemVoipPassthrough)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_SetSystemVoipPassthrough", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_SetSystemVoipMicrophoneMuted
// Il2CppName: ovr_Voip_SetSystemVoipMicrophoneMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(Oculus::Platform::VoipMuteState)>(&CAPI::ovr_Voip_SetSystemVoipMicrophoneMuted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_SetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::VoipMuteState>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UnityResetTestPlatform
// Il2CppName: ovr_UnityResetTestPlatform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CAPI::ovr_UnityResetTestPlatform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UnityResetTestPlatform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_HTTP_GetWithMessageType
// Il2CppName: ovr_HTTP_GetWithMessageType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, int)>(&CAPI::ovr_HTTP_GetWithMessageType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_HTTP_GetWithMessageType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CrashApplication
// Il2CppName: ovr_CrashApplication
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CAPI::ovr_CrashApplication)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CrashApplication", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_SetMicrophoneFilterCallback
// Il2CppName: ovr_Voip_SetMicrophoneFilterCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(Oculus::Platform::CAPI::FilterCallback*)>(&CAPI::ovr_Voip_SetMicrophoneFilterCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_SetMicrophoneFilterCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::CAPI::FilterCallback*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer
// Il2CppName: ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(Oculus::Platform::CAPI::FilterCallback*, System::UIntPtr)>(&CAPI::ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::CAPI::FilterCallback*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::LogNewEvent
// Il2CppName: LogNewEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*)>(&CAPI::LogNewEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "LogNewEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Log_NewEvent
// Il2CppName: ovr_Log_NewEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Array<System::IntPtr>*, System::UIntPtr)>(&CAPI::ovr_Log_NewEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Log_NewEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::IntPtr>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ApplicationLifecycle_GetLaunchDetails
// Il2CppName: ovr_ApplicationLifecycle_GetLaunchDetails
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&CAPI::ovr_ApplicationLifecycle_GetLaunchDetails)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ApplicationLifecycle_GetLaunchDetails", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult
// Il2CppName: ovr_ApplicationLifecycle_LogDeeplinkResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, Oculus::Platform::LaunchResult)>(&CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ApplicationLifecycle_LogDeeplinkResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LaunchResult>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult_Native
// Il2CppName: ovr_ApplicationLifecycle_LogDeeplinkResult_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, Oculus::Platform::LaunchResult)>(&CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ApplicationLifecycle_LogDeeplinkResult_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LaunchResult>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_HTTP_StartTransfer
// Il2CppName: ovr_HTTP_StartTransfer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>*)>(&CAPI::ovr_HTTP_StartTransfer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_HTTP_StartTransfer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<Oculus::Platform::CAPI::ovrKeyValuePair>*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_HTTP_StartTransfer_Native
// Il2CppName: ovr_HTTP_StartTransfer_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>*, System::UIntPtr)>(&CAPI::ovr_HTTP_StartTransfer_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_HTTP_StartTransfer_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Array<Oculus::Platform::CAPI::ovrKeyValuePair>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_HTTP_Write
// Il2CppName: ovr_HTTP_Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, ::Array<uint8_t>*, System::UIntPtr)>(&CAPI::ovr_HTTP_Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_HTTP_Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_HTTP_WriteEOM
// Il2CppName: ovr_HTTP_WriteEOM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&CAPI::ovr_HTTP_WriteEOM)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_HTTP_WriteEOM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetStringForJavascript
// Il2CppName: ovr_Message_GetStringForJavascript
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Message_GetStringForJavascript)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetStringForJavascript", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetStringForJavascript_Native
// Il2CppName: ovr_Message_GetStringForJavascript_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetStringForJavascript_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetStringForJavascript_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_GetAmbisonicFloatPCM
// Il2CppName: ovr_NetSync_GetAmbisonicFloatPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(int64_t, ::Array<float>*, System::UIntPtr)>(&CAPI::ovr_NetSync_GetAmbisonicFloatPCM)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_GetAmbisonicFloatPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_GetAmbisonicInt16PCM
// Il2CppName: ovr_NetSync_GetAmbisonicInt16PCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(int64_t, ::Array<int16_t>*, System::UIntPtr)>(&CAPI::ovr_NetSync_GetAmbisonicInt16PCM)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_GetAmbisonicInt16PCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<int16_t>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_GetAmbisonicInterleavedFloatPCM
// Il2CppName: ovr_NetSync_GetAmbisonicInterleavedFloatPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(int64_t, ::Array<float>*, System::UIntPtr)>(&CAPI::ovr_NetSync_GetAmbisonicInterleavedFloatPCM)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_GetAmbisonicInterleavedFloatPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_GetAmbisonicInterleavedInt16PCM
// Il2CppName: ovr_NetSync_GetAmbisonicInterleavedInt16PCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(int64_t, ::Array<int16_t>*, System::UIntPtr)>(&CAPI::ovr_NetSync_GetAmbisonicInterleavedInt16PCM)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_GetAmbisonicInterleavedInt16PCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<int16_t>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_GetListenerPosition
// Il2CppName: ovr_NetSync_GetListenerPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int64_t, uint64_t, Oculus::Platform::CAPI::ovrNetSyncVec3&)>(&CAPI::ovr_NetSync_GetListenerPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_GetListenerPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::CAPI::ovrNetSyncVec3&>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_GetMonostreamFloatPCM
// Il2CppName: ovr_NetSync_GetMonostreamFloatPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(int64_t, uint64_t, ::Array<float>*, System::UIntPtr)>(&CAPI::ovr_NetSync_GetMonostreamFloatPCM)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_GetMonostreamFloatPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_GetMonostreamInt16PCM
// Il2CppName: ovr_NetSync_GetMonostreamInt16PCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(int64_t, uint64_t, ::Array<int16_t>*, System::UIntPtr)>(&CAPI::ovr_NetSync_GetMonostreamInt16PCM)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_GetMonostreamInt16PCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<int16_t>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_GetPcmBufferMaxSamples
// Il2CppName: ovr_NetSync_GetPcmBufferMaxSamples
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)()>(&CAPI::ovr_NetSync_GetPcmBufferMaxSamples)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_GetPcmBufferMaxSamples", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_GetVoipAmplitude
// Il2CppName: ovr_NetSync_GetVoipAmplitude
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int64_t, uint64_t, float&)>(&CAPI::ovr_NetSync_GetVoipAmplitude)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_GetVoipAmplitude", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<float&>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_SetListenerPosition
// Il2CppName: ovr_NetSync_SetListenerPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int64_t, Oculus::Platform::CAPI::ovrNetSyncVec3&)>(&CAPI::ovr_NetSync_SetListenerPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_SetListenerPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::CAPI::ovrNetSyncVec3&>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Net_Accept
// Il2CppName: ovr_Net_Accept
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&CAPI::ovr_Net_Accept)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Net_Accept", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Net_AcceptForCurrentRoom
// Il2CppName: ovr_Net_AcceptForCurrentRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&CAPI::ovr_Net_AcceptForCurrentRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Net_AcceptForCurrentRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Net_Close
// Il2CppName: ovr_Net_Close
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&CAPI::ovr_Net_Close)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Net_Close", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Net_CloseForCurrentRoom
// Il2CppName: ovr_Net_CloseForCurrentRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CAPI::ovr_Net_CloseForCurrentRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Net_CloseForCurrentRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Net_Connect
// Il2CppName: ovr_Net_Connect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&CAPI::ovr_Net_Connect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Net_Connect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Net_IsConnected
// Il2CppName: ovr_Net_IsConnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t)>(&CAPI::ovr_Net_IsConnected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Net_IsConnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Net_Ping
// Il2CppName: ovr_Net_Ping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_Net_Ping)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Net_Ping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Net_ReadPacket
// Il2CppName: ovr_Net_ReadPacket
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&CAPI::ovr_Net_ReadPacket)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Net_ReadPacket", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Net_SendPacket
// Il2CppName: ovr_Net_SendPacket
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint64_t, System::UIntPtr, ::Array<uint8_t>*, Oculus::Platform::SendPolicy)>(&CAPI::ovr_Net_SendPacket)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Net_SendPacket", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::SendPolicy>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Net_SendPacketToCurrentRoom
// Il2CppName: ovr_Net_SendPacketToCurrentRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::UIntPtr, ::Array<uint8_t>*, Oculus::Platform::SendPolicy)>(&CAPI::ovr_Net_SendPacketToCurrentRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Net_SendPacketToCurrentRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::UIntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::SendPolicy>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Party_PluginGetSharedMemHandle
// Il2CppName: ovr_Party_PluginGetSharedMemHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&CAPI::ovr_Party_PluginGetSharedMemHandle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Party_PluginGetSharedMemHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Party_PluginGetVoipMicrophoneMuted
// Il2CppName: ovr_Party_PluginGetVoipMicrophoneMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::VoipMuteState (*)()>(&CAPI::ovr_Party_PluginGetVoipMicrophoneMuted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Party_PluginGetVoipMicrophoneMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Party_PluginGetVoipPassthrough
// Il2CppName: ovr_Party_PluginGetVoipPassthrough
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&CAPI::ovr_Party_PluginGetVoipPassthrough)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Party_PluginGetVoipPassthrough", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Party_PluginGetVoipStatus
// Il2CppName: ovr_Party_PluginGetVoipStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::SystemVoipStatus (*)()>(&CAPI::ovr_Party_PluginGetVoipStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Party_PluginGetVoipStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_Accept
// Il2CppName: ovr_Voip_Accept
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&CAPI::ovr_Voip_Accept)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_Accept", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_GetIsConnectionUsingDtx
// Il2CppName: ovr_Voip_GetIsConnectionUsingDtx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::VoipDtxState (*)(uint64_t)>(&CAPI::ovr_Voip_GetIsConnectionUsingDtx)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_GetIsConnectionUsingDtx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_GetLocalBitrate
// Il2CppName: ovr_Voip_GetLocalBitrate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::VoipBitrate (*)(uint64_t)>(&CAPI::ovr_Voip_GetLocalBitrate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_GetLocalBitrate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_GetOutputBufferMaxSize
// Il2CppName: ovr_Voip_GetOutputBufferMaxSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)()>(&CAPI::ovr_Voip_GetOutputBufferMaxSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_GetOutputBufferMaxSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_GetPCM
// Il2CppName: ovr_Voip_GetPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(uint64_t, ::Array<int16_t>*, System::UIntPtr)>(&CAPI::ovr_Voip_GetPCM)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_GetPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<int16_t>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_GetPCMFloat
// Il2CppName: ovr_Voip_GetPCMFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(uint64_t, ::Array<float>*, System::UIntPtr)>(&CAPI::ovr_Voip_GetPCMFloat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_GetPCMFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_GetPCMSize
// Il2CppName: ovr_Voip_GetPCMSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(uint64_t)>(&CAPI::ovr_Voip_GetPCMSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_GetPCMSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_GetPCMWithTimestamp
// Il2CppName: ovr_Voip_GetPCMWithTimestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(uint64_t, ::Array<int16_t>*, System::UIntPtr, ::Array<uint>*)>(&CAPI::ovr_Voip_GetPCMWithTimestamp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_GetPCMWithTimestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<int16_t>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_GetPCMWithTimestampFloat
// Il2CppName: ovr_Voip_GetPCMWithTimestampFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(uint64_t, ::Array<float>*, System::UIntPtr, ::Array<uint>*)>(&CAPI::ovr_Voip_GetPCMWithTimestampFloat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_GetPCMWithTimestampFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_GetRemoteBitrate
// Il2CppName: ovr_Voip_GetRemoteBitrate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::VoipBitrate (*)(uint64_t)>(&CAPI::ovr_Voip_GetRemoteBitrate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_GetRemoteBitrate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_GetSyncTimestamp
// Il2CppName: ovr_Voip_GetSyncTimestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint64_t)>(&CAPI::ovr_Voip_GetSyncTimestamp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_GetSyncTimestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_GetSyncTimestampDifference
// Il2CppName: ovr_Voip_GetSyncTimestampDifference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(uint, uint)>(&CAPI::ovr_Voip_GetSyncTimestampDifference)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_GetSyncTimestampDifference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_GetSystemVoipMicrophoneMuted
// Il2CppName: ovr_Voip_GetSystemVoipMicrophoneMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::VoipMuteState (*)()>(&CAPI::ovr_Voip_GetSystemVoipMicrophoneMuted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_GetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_GetSystemVoipStatus
// Il2CppName: ovr_Voip_GetSystemVoipStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::SystemVoipStatus (*)()>(&CAPI::ovr_Voip_GetSystemVoipStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_GetSystemVoipStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_SetMicrophoneMuted
// Il2CppName: ovr_Voip_SetMicrophoneMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(Oculus::Platform::VoipMuteState)>(&CAPI::ovr_Voip_SetMicrophoneMuted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_SetMicrophoneMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::VoipMuteState>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_SetNewConnectionOptions
// Il2CppName: ovr_Voip_SetNewConnectionOptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_Voip_SetNewConnectionOptions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_SetNewConnectionOptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_SetOutputSampleRate
// Il2CppName: ovr_Voip_SetOutputSampleRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(Oculus::Platform::VoipSampleRate)>(&CAPI::ovr_Voip_SetOutputSampleRate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_SetOutputSampleRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::VoipSampleRate>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_Start
// Il2CppName: ovr_Voip_Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&CAPI::ovr_Voip_Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_Stop
// Il2CppName: ovr_Voip_Stop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t)>(&CAPI::ovr_Voip_Stop)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_Stop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AbuseReport_LaunchAdvancedReportFlow
// Il2CppName: ovr_AbuseReport_LaunchAdvancedReportFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, System::IntPtr)>(&CAPI::ovr_AbuseReport_LaunchAdvancedReportFlow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AbuseReport_LaunchAdvancedReportFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Achievements_AddCount
// Il2CppName: ovr_Achievements_AddCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, uint64_t)>(&CAPI::ovr_Achievements_AddCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Achievements_AddCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Achievements_AddCount_Native
// Il2CppName: ovr_Achievements_AddCount_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, uint64_t)>(&CAPI::ovr_Achievements_AddCount_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Achievements_AddCount_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Achievements_AddFields
// Il2CppName: ovr_Achievements_AddFields
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, ::Il2CppString*)>(&CAPI::ovr_Achievements_AddFields)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Achievements_AddFields", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Achievements_AddFields_Native
// Il2CppName: ovr_Achievements_AddFields_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_Achievements_AddFields_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Achievements_AddFields_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Achievements_GetAllDefinitions
// Il2CppName: ovr_Achievements_GetAllDefinitions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Achievements_GetAllDefinitions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Achievements_GetAllDefinitions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Achievements_GetAllProgress
// Il2CppName: ovr_Achievements_GetAllProgress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Achievements_GetAllProgress)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Achievements_GetAllProgress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Achievements_GetDefinitionsByName
// Il2CppName: ovr_Achievements_GetDefinitionsByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Array<::Il2CppString*>*, int)>(&CAPI::ovr_Achievements_GetDefinitionsByName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Achievements_GetDefinitionsByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Achievements_GetProgressByName
// Il2CppName: ovr_Achievements_GetProgressByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Array<::Il2CppString*>*, int)>(&CAPI::ovr_Achievements_GetProgressByName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Achievements_GetProgressByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Achievements_Unlock
// Il2CppName: ovr_Achievements_Unlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_Achievements_Unlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Achievements_Unlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Achievements_Unlock_Native
// Il2CppName: ovr_Achievements_Unlock_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Achievements_Unlock_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Achievements_Unlock_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Application_ExecuteCoordinatedLaunch
// Il2CppName: ovr_Application_ExecuteCoordinatedLaunch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, uint64_t)>(&CAPI::ovr_Application_ExecuteCoordinatedLaunch)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Application_ExecuteCoordinatedLaunch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Application_GetInstalledApplications
// Il2CppName: ovr_Application_GetInstalledApplications
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Application_GetInstalledApplications)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Application_GetInstalledApplications", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Application_GetVersion
// Il2CppName: ovr_Application_GetVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Application_GetVersion)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Application_GetVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Application_LaunchOtherApp
// Il2CppName: ovr_Application_LaunchOtherApp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, System::IntPtr)>(&CAPI::ovr_Application_LaunchOtherApp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Application_LaunchOtherApp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ApplicationLifecycle_GetRegisteredPIDs
// Il2CppName: ovr_ApplicationLifecycle_GetRegisteredPIDs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_ApplicationLifecycle_GetRegisteredPIDs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ApplicationLifecycle_GetRegisteredPIDs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ApplicationLifecycle_GetSessionKey
// Il2CppName: ovr_ApplicationLifecycle_GetSessionKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_ApplicationLifecycle_GetSessionKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ApplicationLifecycle_GetSessionKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ApplicationLifecycle_RegisterSessionKey
// Il2CppName: ovr_ApplicationLifecycle_RegisterSessionKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_ApplicationLifecycle_RegisterSessionKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ApplicationLifecycle_RegisterSessionKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ApplicationLifecycle_RegisterSessionKey_Native
// Il2CppName: ovr_ApplicationLifecycle_RegisterSessionKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_ApplicationLifecycle_RegisterSessionKey_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ApplicationLifecycle_RegisterSessionKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFile_Delete
// Il2CppName: ovr_AssetFile_Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_AssetFile_Delete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFile_Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFile_DeleteById
// Il2CppName: ovr_AssetFile_DeleteById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_AssetFile_DeleteById)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFile_DeleteById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFile_DeleteByName
// Il2CppName: ovr_AssetFile_DeleteByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_AssetFile_DeleteByName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFile_DeleteByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFile_DeleteByName_Native
// Il2CppName: ovr_AssetFile_DeleteByName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_AssetFile_DeleteByName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFile_DeleteByName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFile_Download
// Il2CppName: ovr_AssetFile_Download
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_AssetFile_Download)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFile_Download", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFile_DownloadById
// Il2CppName: ovr_AssetFile_DownloadById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_AssetFile_DownloadById)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFile_DownloadById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFile_DownloadByName
// Il2CppName: ovr_AssetFile_DownloadByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_AssetFile_DownloadByName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFile_DownloadByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFile_DownloadByName_Native
// Il2CppName: ovr_AssetFile_DownloadByName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_AssetFile_DownloadByName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFile_DownloadByName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFile_DownloadCancel
// Il2CppName: ovr_AssetFile_DownloadCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_AssetFile_DownloadCancel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFile_DownloadCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFile_DownloadCancelById
// Il2CppName: ovr_AssetFile_DownloadCancelById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_AssetFile_DownloadCancelById)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFile_DownloadCancelById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFile_DownloadCancelByName
// Il2CppName: ovr_AssetFile_DownloadCancelByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_AssetFile_DownloadCancelByName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFile_DownloadCancelByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFile_DownloadCancelByName_Native
// Il2CppName: ovr_AssetFile_DownloadCancelByName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_AssetFile_DownloadCancelByName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFile_DownloadCancelByName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFile_GetList
// Il2CppName: ovr_AssetFile_GetList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_AssetFile_GetList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFile_GetList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFile_Status
// Il2CppName: ovr_AssetFile_Status
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_AssetFile_Status)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFile_Status", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFile_StatusById
// Il2CppName: ovr_AssetFile_StatusById
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_AssetFile_StatusById)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFile_StatusById", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFile_StatusByName
// Il2CppName: ovr_AssetFile_StatusByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_AssetFile_StatusByName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFile_StatusByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFile_StatusByName_Native
// Il2CppName: ovr_AssetFile_StatusByName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_AssetFile_StatusByName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFile_StatusByName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Avatar_UpdateMetaData
// Il2CppName: ovr_Avatar_UpdateMetaData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, ::Il2CppString*)>(&CAPI::ovr_Avatar_UpdateMetaData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Avatar_UpdateMetaData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Avatar_UpdateMetaData_Native
// Il2CppName: ovr_Avatar_UpdateMetaData_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_Avatar_UpdateMetaData_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Avatar_UpdateMetaData_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Cal_FinalizeApplication
// Il2CppName: ovr_Cal_FinalizeApplication
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::Array<uint64_t>*, int, uint64_t)>(&CAPI::ovr_Cal_FinalizeApplication)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Cal_FinalizeApplication", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Cal_GetSuggestedApplications
// Il2CppName: ovr_Cal_GetSuggestedApplications
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::Array<uint64_t>*, int)>(&CAPI::ovr_Cal_GetSuggestedApplications)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Cal_GetSuggestedApplications", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Cal_ProposeApplication
// Il2CppName: ovr_Cal_ProposeApplication
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::Array<uint64_t>*, int, uint64_t)>(&CAPI::ovr_Cal_ProposeApplication)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Cal_ProposeApplication", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenges_Create
// Il2CppName: ovr_Challenges_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, System::IntPtr)>(&CAPI::ovr_Challenges_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenges_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenges_Create_Native
// Il2CppName: ovr_Challenges_Create_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_Challenges_Create_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenges_Create_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenges_DeclineInvite
// Il2CppName: ovr_Challenges_DeclineInvite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_Challenges_DeclineInvite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenges_DeclineInvite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenges_Delete
// Il2CppName: ovr_Challenges_Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_Challenges_Delete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenges_Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenges_Get
// Il2CppName: ovr_Challenges_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_Challenges_Get)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenges_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenges_GetEntries
// Il2CppName: ovr_Challenges_GetEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, int, Oculus::Platform::LeaderboardFilterType, Oculus::Platform::LeaderboardStartAt)>(&CAPI::ovr_Challenges_GetEntries)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenges_GetEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LeaderboardFilterType>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LeaderboardStartAt>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenges_GetEntriesAfterRank
// Il2CppName: ovr_Challenges_GetEntriesAfterRank
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, int, uint64_t)>(&CAPI::ovr_Challenges_GetEntriesAfterRank)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenges_GetEntriesAfterRank", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenges_GetEntriesByIds
// Il2CppName: ovr_Challenges_GetEntriesByIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, int, Oculus::Platform::LeaderboardStartAt, ::Array<uint64_t>*, uint)>(&CAPI::ovr_Challenges_GetEntriesByIds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenges_GetEntriesByIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LeaderboardStartAt>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenges_GetList
// Il2CppName: ovr_Challenges_GetList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, int)>(&CAPI::ovr_Challenges_GetList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenges_GetList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenges_GetNextChallenges
// Il2CppName: ovr_Challenges_GetNextChallenges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Challenges_GetNextChallenges)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenges_GetNextChallenges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenges_GetNextEntries
// Il2CppName: ovr_Challenges_GetNextEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Challenges_GetNextEntries)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenges_GetNextEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenges_GetPreviousChallenges
// Il2CppName: ovr_Challenges_GetPreviousChallenges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Challenges_GetPreviousChallenges)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenges_GetPreviousChallenges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenges_GetPreviousEntries
// Il2CppName: ovr_Challenges_GetPreviousEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Challenges_GetPreviousEntries)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenges_GetPreviousEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenges_Join
// Il2CppName: ovr_Challenges_Join
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_Challenges_Join)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenges_Join", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenges_Leave
// Il2CppName: ovr_Challenges_Leave
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_Challenges_Leave)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenges_Leave", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenges_UpdateInfo
// Il2CppName: ovr_Challenges_UpdateInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, System::IntPtr)>(&CAPI::ovr_Challenges_UpdateInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenges_UpdateInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage_Delete
// Il2CppName: ovr_CloudStorage_Delete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, ::Il2CppString*)>(&CAPI::ovr_CloudStorage_Delete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage_Delete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage_Delete_Native
// Il2CppName: ovr_CloudStorage_Delete_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_CloudStorage_Delete_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage_Delete_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage_Load
// Il2CppName: ovr_CloudStorage_Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, ::Il2CppString*)>(&CAPI::ovr_CloudStorage_Load)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage_Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage_Load_Native
// Il2CppName: ovr_CloudStorage_Load_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_CloudStorage_Load_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage_Load_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage_LoadBucketMetadata
// Il2CppName: ovr_CloudStorage_LoadBucketMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_CloudStorage_LoadBucketMetadata)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage_LoadBucketMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage_LoadBucketMetadata_Native
// Il2CppName: ovr_CloudStorage_LoadBucketMetadata_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_CloudStorage_LoadBucketMetadata_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage_LoadBucketMetadata_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage_LoadConflictMetadata
// Il2CppName: ovr_CloudStorage_LoadConflictMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, ::Il2CppString*)>(&CAPI::ovr_CloudStorage_LoadConflictMetadata)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage_LoadConflictMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage_LoadConflictMetadata_Native
// Il2CppName: ovr_CloudStorage_LoadConflictMetadata_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_CloudStorage_LoadConflictMetadata_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage_LoadConflictMetadata_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage_LoadHandle
// Il2CppName: ovr_CloudStorage_LoadHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_CloudStorage_LoadHandle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage_LoadHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage_LoadHandle_Native
// Il2CppName: ovr_CloudStorage_LoadHandle_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_CloudStorage_LoadHandle_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage_LoadHandle_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage_LoadMetadata
// Il2CppName: ovr_CloudStorage_LoadMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, ::Il2CppString*)>(&CAPI::ovr_CloudStorage_LoadMetadata)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage_LoadMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage_LoadMetadata_Native
// Il2CppName: ovr_CloudStorage_LoadMetadata_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_CloudStorage_LoadMetadata_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage_LoadMetadata_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage_ResolveKeepLocal
// Il2CppName: ovr_CloudStorage_ResolveKeepLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*)>(&CAPI::ovr_CloudStorage_ResolveKeepLocal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage_ResolveKeepLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage_ResolveKeepLocal_Native
// Il2CppName: ovr_CloudStorage_ResolveKeepLocal_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, System::IntPtr, System::IntPtr)>(&CAPI::ovr_CloudStorage_ResolveKeepLocal_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage_ResolveKeepLocal_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage_ResolveKeepRemote
// Il2CppName: ovr_CloudStorage_ResolveKeepRemote
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*)>(&CAPI::ovr_CloudStorage_ResolveKeepRemote)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage_ResolveKeepRemote", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage_ResolveKeepRemote_Native
// Il2CppName: ovr_CloudStorage_ResolveKeepRemote_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, System::IntPtr, System::IntPtr)>(&CAPI::ovr_CloudStorage_ResolveKeepRemote_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage_ResolveKeepRemote_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage_Save
// Il2CppName: ovr_CloudStorage_Save
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, ::Il2CppString*, ::Array<uint8_t>*, uint, int64_t, ::Il2CppString*)>(&CAPI::ovr_CloudStorage_Save)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage_Save", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage_Save_Native
// Il2CppName: ovr_CloudStorage_Save_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, System::IntPtr, ::Array<uint8_t>*, uint, int64_t, System::IntPtr)>(&CAPI::ovr_CloudStorage_Save_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage_Save_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage2_GetUserDirectoryPath
// Il2CppName: ovr_CloudStorage2_GetUserDirectoryPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_CloudStorage2_GetUserDirectoryPath)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage2_GetUserDirectoryPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Colocation_GetCurrentMapUuid
// Il2CppName: ovr_Colocation_GetCurrentMapUuid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Colocation_GetCurrentMapUuid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Colocation_GetCurrentMapUuid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Colocation_RequestMap
// Il2CppName: ovr_Colocation_RequestMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_Colocation_RequestMap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Colocation_RequestMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Colocation_RequestMap_Native
// Il2CppName: ovr_Colocation_RequestMap_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Colocation_RequestMap_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Colocation_RequestMap_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Colocation_ShareMap
// Il2CppName: ovr_Colocation_ShareMap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_Colocation_ShareMap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Colocation_ShareMap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Colocation_ShareMap_Native
// Il2CppName: ovr_Colocation_ShareMap_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Colocation_ShareMap_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Colocation_ShareMap_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Entitlement_GetIsViewerEntitled
// Il2CppName: ovr_Entitlement_GetIsViewerEntitled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Entitlement_GetIsViewerEntitled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Entitlement_GetIsViewerEntitled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_GraphAPI_Get
// Il2CppName: ovr_GraphAPI_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_GraphAPI_Get)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_GraphAPI_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_GraphAPI_Get_Native
// Il2CppName: ovr_GraphAPI_Get_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_GraphAPI_Get_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_GraphAPI_Get_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_GraphAPI_Post
// Il2CppName: ovr_GraphAPI_Post
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_GraphAPI_Post)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_GraphAPI_Post", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_GraphAPI_Post_Native
// Il2CppName: ovr_GraphAPI_Post_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_GraphAPI_Post_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_GraphAPI_Post_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_GroupPresence_LaunchInvitePanel
// Il2CppName: ovr_GroupPresence_LaunchInvitePanel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_GroupPresence_LaunchInvitePanel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_GroupPresence_LaunchInvitePanel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_HTTP_Get
// Il2CppName: ovr_HTTP_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_HTTP_Get)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_HTTP_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_HTTP_Get_Native
// Il2CppName: ovr_HTTP_Get_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_HTTP_Get_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_HTTP_Get_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_HTTP_GetToFile
// Il2CppName: ovr_HTTP_GetToFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, ::Il2CppString*)>(&CAPI::ovr_HTTP_GetToFile)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_HTTP_GetToFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_HTTP_GetToFile_Native
// Il2CppName: ovr_HTTP_GetToFile_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_HTTP_GetToFile_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_HTTP_GetToFile_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_HTTP_MultiPartPost
// Il2CppName: ovr_HTTP_MultiPartPost
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*, ::Il2CppString*, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>*)>(&CAPI::ovr_HTTP_MultiPartPost)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_HTTP_MultiPartPost", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<Oculus::Platform::CAPI::ovrKeyValuePair>*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_HTTP_MultiPartPost_Native
// Il2CppName: ovr_HTTP_MultiPartPost_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, System::IntPtr, System::IntPtr, System::IntPtr, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>*, System::UIntPtr)>(&CAPI::ovr_HTTP_MultiPartPost_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_HTTP_MultiPartPost_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Array<Oculus::Platform::CAPI::ovrKeyValuePair>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_HTTP_Post
// Il2CppName: ovr_HTTP_Post
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_HTTP_Post)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_HTTP_Post", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_HTTP_Post_Native
// Il2CppName: ovr_HTTP_Post_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_HTTP_Post_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_HTTP_Post_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_IAP_ConsumePurchase
// Il2CppName: ovr_IAP_ConsumePurchase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_IAP_ConsumePurchase)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_IAP_ConsumePurchase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_IAP_ConsumePurchase_Native
// Il2CppName: ovr_IAP_ConsumePurchase_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_IAP_ConsumePurchase_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_IAP_ConsumePurchase_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_IAP_GetProductsBySKU
// Il2CppName: ovr_IAP_GetProductsBySKU
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Array<::Il2CppString*>*, int)>(&CAPI::ovr_IAP_GetProductsBySKU)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_IAP_GetProductsBySKU", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_IAP_GetViewerPurchases
// Il2CppName: ovr_IAP_GetViewerPurchases
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_IAP_GetViewerPurchases)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_IAP_GetViewerPurchases", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_IAP_GetViewerPurchasesDurableCache
// Il2CppName: ovr_IAP_GetViewerPurchasesDurableCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_IAP_GetViewerPurchasesDurableCache)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_IAP_GetViewerPurchasesDurableCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_IAP_LaunchCheckoutFlow
// Il2CppName: ovr_IAP_LaunchCheckoutFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_IAP_LaunchCheckoutFlow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_IAP_LaunchCheckoutFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_IAP_LaunchCheckoutFlow_Native
// Il2CppName: ovr_IAP_LaunchCheckoutFlow_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_IAP_LaunchCheckoutFlow_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_IAP_LaunchCheckoutFlow_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LanguagePack_GetCurrent
// Il2CppName: ovr_LanguagePack_GetCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_LanguagePack_GetCurrent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LanguagePack_GetCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LanguagePack_SetCurrent
// Il2CppName: ovr_LanguagePack_SetCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_LanguagePack_SetCurrent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LanguagePack_SetCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LanguagePack_SetCurrent_Native
// Il2CppName: ovr_LanguagePack_SetCurrent_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_LanguagePack_SetCurrent_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LanguagePack_SetCurrent_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Leaderboard_Get
// Il2CppName: ovr_Leaderboard_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_Leaderboard_Get)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Leaderboard_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Leaderboard_Get_Native
// Il2CppName: ovr_Leaderboard_Get_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Leaderboard_Get_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Leaderboard_Get_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Leaderboard_GetEntries
// Il2CppName: ovr_Leaderboard_GetEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, int, Oculus::Platform::LeaderboardFilterType, Oculus::Platform::LeaderboardStartAt)>(&CAPI::ovr_Leaderboard_GetEntries)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Leaderboard_GetEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LeaderboardFilterType>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LeaderboardStartAt>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Leaderboard_GetEntries_Native
// Il2CppName: ovr_Leaderboard_GetEntries_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, int, Oculus::Platform::LeaderboardFilterType, Oculus::Platform::LeaderboardStartAt)>(&CAPI::ovr_Leaderboard_GetEntries_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Leaderboard_GetEntries_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LeaderboardFilterType>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LeaderboardStartAt>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Leaderboard_GetEntriesAfterRank
// Il2CppName: ovr_Leaderboard_GetEntriesAfterRank
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, int, uint64_t)>(&CAPI::ovr_Leaderboard_GetEntriesAfterRank)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Leaderboard_GetEntriesAfterRank", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Leaderboard_GetEntriesAfterRank_Native
// Il2CppName: ovr_Leaderboard_GetEntriesAfterRank_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, int, uint64_t)>(&CAPI::ovr_Leaderboard_GetEntriesAfterRank_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Leaderboard_GetEntriesAfterRank_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Leaderboard_GetEntriesByIds
// Il2CppName: ovr_Leaderboard_GetEntriesByIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, int, Oculus::Platform::LeaderboardStartAt, ::Array<uint64_t>*, uint)>(&CAPI::ovr_Leaderboard_GetEntriesByIds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Leaderboard_GetEntriesByIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LeaderboardStartAt>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Leaderboard_GetEntriesByIds_Native
// Il2CppName: ovr_Leaderboard_GetEntriesByIds_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, int, Oculus::Platform::LeaderboardStartAt, ::Array<uint64_t>*, uint)>(&CAPI::ovr_Leaderboard_GetEntriesByIds_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Leaderboard_GetEntriesByIds_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LeaderboardStartAt>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Leaderboard_GetNextEntries
// Il2CppName: ovr_Leaderboard_GetNextEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Leaderboard_GetNextEntries)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Leaderboard_GetNextEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Leaderboard_GetPreviousEntries
// Il2CppName: ovr_Leaderboard_GetPreviousEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Leaderboard_GetPreviousEntries)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Leaderboard_GetPreviousEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Leaderboard_WriteEntry
// Il2CppName: ovr_Leaderboard_WriteEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, int64_t, ::Array<uint8_t>*, uint, bool)>(&CAPI::ovr_Leaderboard_WriteEntry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Leaderboard_WriteEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Leaderboard_WriteEntry_Native
// Il2CppName: ovr_Leaderboard_WriteEntry_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, int64_t, ::Array<uint8_t>*, uint, bool)>(&CAPI::ovr_Leaderboard_WriteEntry_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Leaderboard_WriteEntry_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric
// Il2CppName: ovr_Leaderboard_WriteEntryWithSupplementaryMetric
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, int64_t, int64_t, ::Array<uint8_t>*, uint, bool)>(&CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Leaderboard_WriteEntryWithSupplementaryMetric", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native
// Il2CppName: ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, int64_t, int64_t, ::Array<uint8_t>*, uint, bool)>(&CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Livestreaming_GetStatus
// Il2CppName: ovr_Livestreaming_GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Livestreaming_GetStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Livestreaming_GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Livestreaming_IsAllowedForApplication
// Il2CppName: ovr_Livestreaming_IsAllowedForApplication
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_Livestreaming_IsAllowedForApplication)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Livestreaming_IsAllowedForApplication", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Livestreaming_IsAllowedForApplication_Native
// Il2CppName: ovr_Livestreaming_IsAllowedForApplication_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Livestreaming_IsAllowedForApplication_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Livestreaming_IsAllowedForApplication_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Livestreaming_LaunchLivestreamingFlow
// Il2CppName: ovr_Livestreaming_LaunchLivestreamingFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Livestreaming_LaunchLivestreamingFlow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Livestreaming_LaunchLivestreamingFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Livestreaming_PauseStream
// Il2CppName: ovr_Livestreaming_PauseStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Livestreaming_PauseStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Livestreaming_PauseStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Livestreaming_ResumeStream
// Il2CppName: ovr_Livestreaming_ResumeStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Livestreaming_ResumeStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Livestreaming_ResumeStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Livestreaming_StartPartyStream
// Il2CppName: ovr_Livestreaming_StartPartyStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Livestreaming_StartPartyStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Livestreaming_StartPartyStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Livestreaming_StartStream
// Il2CppName: ovr_Livestreaming_StartStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(Oculus::Platform::LivestreamingAudience, Oculus::Platform::LivestreamingMicrophoneStatus)>(&CAPI::ovr_Livestreaming_StartStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Livestreaming_StartStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LivestreamingAudience>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LivestreamingMicrophoneStatus>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Livestreaming_StopPartyStream
// Il2CppName: ovr_Livestreaming_StopPartyStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Livestreaming_StopPartyStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Livestreaming_StopPartyStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Livestreaming_StopStream
// Il2CppName: ovr_Livestreaming_StopStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Livestreaming_StopStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Livestreaming_StopStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Livestreaming_UpdateCommentsOverlayVisibility
// Il2CppName: ovr_Livestreaming_UpdateCommentsOverlayVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(bool)>(&CAPI::ovr_Livestreaming_UpdateCommentsOverlayVisibility)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Livestreaming_UpdateCommentsOverlayVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Livestreaming_UpdateMicStatus
// Il2CppName: ovr_Livestreaming_UpdateMicStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(Oculus::Platform::LivestreamingMicrophoneStatus)>(&CAPI::ovr_Livestreaming_UpdateMicStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Livestreaming_UpdateMicStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::LivestreamingMicrophoneStatus>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_Browse
// Il2CppName: ovr_Matchmaking_Browse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, System::IntPtr)>(&CAPI::ovr_Matchmaking_Browse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_Browse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_Browse_Native
// Il2CppName: ovr_Matchmaking_Browse_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_Matchmaking_Browse_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_Browse_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_Browse2
// Il2CppName: ovr_Matchmaking_Browse2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, System::IntPtr)>(&CAPI::ovr_Matchmaking_Browse2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_Browse2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_Browse2_Native
// Il2CppName: ovr_Matchmaking_Browse2_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_Matchmaking_Browse2_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_Browse2_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_Cancel
// Il2CppName: ovr_Matchmaking_Cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, ::Il2CppString*)>(&CAPI::ovr_Matchmaking_Cancel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_Cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_Cancel_Native
// Il2CppName: ovr_Matchmaking_Cancel_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_Matchmaking_Cancel_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_Cancel_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_Cancel2
// Il2CppName: ovr_Matchmaking_Cancel2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Matchmaking_Cancel2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_Cancel2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_CreateAndEnqueueRoom
// Il2CppName: ovr_Matchmaking_CreateAndEnqueueRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, uint, bool, System::IntPtr)>(&CAPI::ovr_Matchmaking_CreateAndEnqueueRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_CreateAndEnqueueRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_CreateAndEnqueueRoom_Native
// Il2CppName: ovr_Matchmaking_CreateAndEnqueueRoom_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, uint, bool, System::IntPtr)>(&CAPI::ovr_Matchmaking_CreateAndEnqueueRoom_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_CreateAndEnqueueRoom_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2
// Il2CppName: ovr_Matchmaking_CreateAndEnqueueRoom2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, System::IntPtr)>(&CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_CreateAndEnqueueRoom2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2_Native
// Il2CppName: ovr_Matchmaking_CreateAndEnqueueRoom2_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_CreateAndEnqueueRoom2_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_CreateRoom
// Il2CppName: ovr_Matchmaking_CreateRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, uint, bool)>(&CAPI::ovr_Matchmaking_CreateRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_CreateRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_CreateRoom_Native
// Il2CppName: ovr_Matchmaking_CreateRoom_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, uint, bool)>(&CAPI::ovr_Matchmaking_CreateRoom_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_CreateRoom_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_CreateRoom2
// Il2CppName: ovr_Matchmaking_CreateRoom2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, System::IntPtr)>(&CAPI::ovr_Matchmaking_CreateRoom2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_CreateRoom2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_CreateRoom2_Native
// Il2CppName: ovr_Matchmaking_CreateRoom2_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_Matchmaking_CreateRoom2_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_CreateRoom2_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_Enqueue
// Il2CppName: ovr_Matchmaking_Enqueue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, System::IntPtr)>(&CAPI::ovr_Matchmaking_Enqueue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_Enqueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_Enqueue_Native
// Il2CppName: ovr_Matchmaking_Enqueue_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_Matchmaking_Enqueue_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_Enqueue_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_Enqueue2
// Il2CppName: ovr_Matchmaking_Enqueue2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, System::IntPtr)>(&CAPI::ovr_Matchmaking_Enqueue2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_Enqueue2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_Enqueue2_Native
// Il2CppName: ovr_Matchmaking_Enqueue2_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_Matchmaking_Enqueue2_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_Enqueue2_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_EnqueueRoom
// Il2CppName: ovr_Matchmaking_EnqueueRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, System::IntPtr)>(&CAPI::ovr_Matchmaking_EnqueueRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_EnqueueRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_EnqueueRoom2
// Il2CppName: ovr_Matchmaking_EnqueueRoom2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, System::IntPtr)>(&CAPI::ovr_Matchmaking_EnqueueRoom2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_EnqueueRoom2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_GetAdminSnapshot
// Il2CppName: ovr_Matchmaking_GetAdminSnapshot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Matchmaking_GetAdminSnapshot)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_GetAdminSnapshot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_GetStats
// Il2CppName: ovr_Matchmaking_GetStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, uint, Oculus::Platform::MatchmakingStatApproach)>(&CAPI::ovr_Matchmaking_GetStats)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_GetStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::MatchmakingStatApproach>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_GetStats_Native
// Il2CppName: ovr_Matchmaking_GetStats_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, uint, Oculus::Platform::MatchmakingStatApproach)>(&CAPI::ovr_Matchmaking_GetStats_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_GetStats_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::MatchmakingStatApproach>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_JoinRoom
// Il2CppName: ovr_Matchmaking_JoinRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, bool)>(&CAPI::ovr_Matchmaking_JoinRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_JoinRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_ReportResultInsecure
// Il2CppName: ovr_Matchmaking_ReportResultInsecure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>*)>(&CAPI::ovr_Matchmaking_ReportResultInsecure)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_ReportResultInsecure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<Oculus::Platform::CAPI::ovrKeyValuePair>*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_ReportResultInsecure_Native
// Il2CppName: ovr_Matchmaking_ReportResultInsecure_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>*, System::UIntPtr)>(&CAPI::ovr_Matchmaking_ReportResultInsecure_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_ReportResultInsecure_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<Oculus::Platform::CAPI::ovrKeyValuePair>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Matchmaking_StartMatch
// Il2CppName: ovr_Matchmaking_StartMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_Matchmaking_StartMatch)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Matchmaking_StartMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Media_ShareToFacebook
// Il2CppName: ovr_Media_ShareToFacebook
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, ::Il2CppString*, Oculus::Platform::MediaContentType)>(&CAPI::ovr_Media_ShareToFacebook)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Media_ShareToFacebook", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::MediaContentType>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Media_ShareToFacebook_Native
// Il2CppName: ovr_Media_ShareToFacebook_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, System::IntPtr, Oculus::Platform::MediaContentType)>(&CAPI::ovr_Media_ShareToFacebook_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Media_ShareToFacebook_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::MediaContentType>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_Connect
// Il2CppName: ovr_NetSync_Connect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_NetSync_Connect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_Connect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_Disconnect
// Il2CppName: ovr_NetSync_Disconnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t)>(&CAPI::ovr_NetSync_Disconnect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_Disconnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_GetSessions
// Il2CppName: ovr_NetSync_GetSessions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t)>(&CAPI::ovr_NetSync_GetSessions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_GetSessions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_GetVoipAttenuation
// Il2CppName: ovr_NetSync_GetVoipAttenuation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t)>(&CAPI::ovr_NetSync_GetVoipAttenuation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_GetVoipAttenuation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_GetVoipAttenuationDefault
// Il2CppName: ovr_NetSync_GetVoipAttenuationDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_NetSync_GetVoipAttenuationDefault)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_GetVoipAttenuationDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_SetVoipAttenuation
// Il2CppName: ovr_NetSync_SetVoipAttenuation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::Array<float>*, ::Array<float>*, System::UIntPtr)>(&CAPI::ovr_NetSync_SetVoipAttenuation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_SetVoipAttenuation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_SetVoipAttenuationModel
// Il2CppName: ovr_NetSync_SetVoipAttenuationModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::Il2CppString*, ::Array<float>*, ::Array<float>*, System::UIntPtr)>(&CAPI::ovr_NetSync_SetVoipAttenuationModel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_SetVoipAttenuationModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_SetVoipAttenuationModel_Native
// Il2CppName: ovr_NetSync_SetVoipAttenuationModel_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, System::IntPtr, ::Array<float>*, ::Array<float>*, System::UIntPtr)>(&CAPI::ovr_NetSync_SetVoipAttenuationModel_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_SetVoipAttenuationModel_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_SetVoipChannelCfg
// Il2CppName: ovr_NetSync_SetVoipChannelCfg
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::Il2CppString*, ::Il2CppString*, bool)>(&CAPI::ovr_NetSync_SetVoipChannelCfg)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_SetVoipChannelCfg", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_SetVoipChannelCfg_Native
// Il2CppName: ovr_NetSync_SetVoipChannelCfg_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, System::IntPtr, System::IntPtr, bool)>(&CAPI::ovr_NetSync_SetVoipChannelCfg_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_SetVoipChannelCfg_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_SetVoipGroup
// Il2CppName: ovr_NetSync_SetVoipGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::Il2CppString*)>(&CAPI::ovr_NetSync_SetVoipGroup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_SetVoipGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_SetVoipGroup_Native
// Il2CppName: ovr_NetSync_SetVoipGroup_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, System::IntPtr)>(&CAPI::ovr_NetSync_SetVoipGroup_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_SetVoipGroup_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_SetVoipListentoChannels
// Il2CppName: ovr_NetSync_SetVoipListentoChannels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::Array<::Il2CppString*>*, System::UIntPtr)>(&CAPI::ovr_NetSync_SetVoipListentoChannels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_SetVoipListentoChannels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_SetVoipMicSource
// Il2CppName: ovr_NetSync_SetVoipMicSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, Oculus::Platform::NetSyncVoipMicSource)>(&CAPI::ovr_NetSync_SetVoipMicSource)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_SetVoipMicSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::NetSyncVoipMicSource>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_SetVoipSessionMuted
// Il2CppName: ovr_NetSync_SetVoipSessionMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, uint64_t, bool)>(&CAPI::ovr_NetSync_SetVoipSessionMuted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_SetVoipSessionMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_SetVoipSpeaktoChannels
// Il2CppName: ovr_NetSync_SetVoipSpeaktoChannels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, ::Array<::Il2CppString*>*, System::UIntPtr)>(&CAPI::ovr_NetSync_SetVoipSpeaktoChannels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_SetVoipSpeaktoChannels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSync_SetVoipStreamMode
// Il2CppName: ovr_NetSync_SetVoipStreamMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(int64_t, uint64_t, Oculus::Platform::NetSyncVoipStreamMode)>(&CAPI::ovr_NetSync_SetVoipStreamMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSync_SetVoipStreamMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::NetSyncVoipStreamMode>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Notification_GetRoomInvites
// Il2CppName: ovr_Notification_GetRoomInvites
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Notification_GetRoomInvites)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Notification_GetRoomInvites", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Notification_MarkAsRead
// Il2CppName: ovr_Notification_MarkAsRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_Notification_MarkAsRead)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Notification_MarkAsRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Party_Create
// Il2CppName: ovr_Party_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Party_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Party_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Party_GatherInApplication
// Il2CppName: ovr_Party_GatherInApplication
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, uint64_t)>(&CAPI::ovr_Party_GatherInApplication)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Party_GatherInApplication", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Party_Get
// Il2CppName: ovr_Party_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_Party_Get)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Party_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Party_GetCurrent
// Il2CppName: ovr_Party_GetCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Party_GetCurrent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Party_GetCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Party_GetCurrentForUser
// Il2CppName: ovr_Party_GetCurrentForUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_Party_GetCurrentForUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Party_GetCurrentForUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Party_Invite
// Il2CppName: ovr_Party_Invite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, uint64_t)>(&CAPI::ovr_Party_Invite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Party_Invite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Party_Join
// Il2CppName: ovr_Party_Join
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_Party_Join)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Party_Join", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Party_Leave
// Il2CppName: ovr_Party_Leave
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_Party_Leave)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Party_Leave", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresence_Clear
// Il2CppName: ovr_RichPresence_Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_RichPresence_Clear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresence_Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresence_GetDestinations
// Il2CppName: ovr_RichPresence_GetDestinations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_RichPresence_GetDestinations)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresence_GetDestinations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresence_Set
// Il2CppName: ovr_RichPresence_Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_RichPresence_Set)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresence_Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresence_SetDestination
// Il2CppName: ovr_RichPresence_SetDestination
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_RichPresence_SetDestination)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresence_SetDestination", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresence_SetDestination_Native
// Il2CppName: ovr_RichPresence_SetDestination_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_RichPresence_SetDestination_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresence_SetDestination_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresence_SetIsJoinable
// Il2CppName: ovr_RichPresence_SetIsJoinable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(bool)>(&CAPI::ovr_RichPresence_SetIsJoinable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresence_SetIsJoinable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresence_SetLobbySession
// Il2CppName: ovr_RichPresence_SetLobbySession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_RichPresence_SetLobbySession)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresence_SetLobbySession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresence_SetLobbySession_Native
// Il2CppName: ovr_RichPresence_SetLobbySession_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_RichPresence_SetLobbySession_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresence_SetLobbySession_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresence_SetMatchSession
// Il2CppName: ovr_RichPresence_SetMatchSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_RichPresence_SetMatchSession)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresence_SetMatchSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresence_SetMatchSession_Native
// Il2CppName: ovr_RichPresence_SetMatchSession_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_RichPresence_SetMatchSession_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresence_SetMatchSession_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_CreateAndJoinPrivate
// Il2CppName: ovr_Room_CreateAndJoinPrivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(Oculus::Platform::RoomJoinPolicy, uint, bool)>(&CAPI::ovr_Room_CreateAndJoinPrivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_CreateAndJoinPrivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::RoomJoinPolicy>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_CreateAndJoinPrivate2
// Il2CppName: ovr_Room_CreateAndJoinPrivate2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(Oculus::Platform::RoomJoinPolicy, uint, System::IntPtr)>(&CAPI::ovr_Room_CreateAndJoinPrivate2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_CreateAndJoinPrivate2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::RoomJoinPolicy>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_Get
// Il2CppName: ovr_Room_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_Room_Get)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetCurrent
// Il2CppName: ovr_Room_GetCurrent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Room_GetCurrent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetCurrent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetCurrentForUser
// Il2CppName: ovr_Room_GetCurrentForUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_Room_GetCurrentForUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetCurrentForUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetInvitableUsers
// Il2CppName: ovr_Room_GetInvitableUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Room_GetInvitableUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetInvitableUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetInvitableUsers2
// Il2CppName: ovr_Room_GetInvitableUsers2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Room_GetInvitableUsers2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetInvitableUsers2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetModeratedRooms
// Il2CppName: ovr_Room_GetModeratedRooms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_Room_GetModeratedRooms)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetModeratedRooms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetSocialRooms
// Il2CppName: ovr_Room_GetSocialRooms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_Room_GetSocialRooms)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetSocialRooms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_InviteUser
// Il2CppName: ovr_Room_InviteUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::Il2CppString*)>(&CAPI::ovr_Room_InviteUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_InviteUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_InviteUser_Native
// Il2CppName: ovr_Room_InviteUser_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, System::IntPtr)>(&CAPI::ovr_Room_InviteUser_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_InviteUser_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_Join
// Il2CppName: ovr_Room_Join
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, bool)>(&CAPI::ovr_Room_Join)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_Join", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_Join2
// Il2CppName: ovr_Room_Join2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, System::IntPtr)>(&CAPI::ovr_Room_Join2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_Join2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_KickUser
// Il2CppName: ovr_Room_KickUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, uint64_t, int)>(&CAPI::ovr_Room_KickUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_KickUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_LaunchInvitableUserFlow
// Il2CppName: ovr_Room_LaunchInvitableUserFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_Room_LaunchInvitableUserFlow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_LaunchInvitableUserFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_Leave
// Il2CppName: ovr_Room_Leave
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_Room_Leave)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_Leave", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_SetDescription
// Il2CppName: ovr_Room_SetDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::Il2CppString*)>(&CAPI::ovr_Room_SetDescription)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_SetDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_SetDescription_Native
// Il2CppName: ovr_Room_SetDescription_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, System::IntPtr)>(&CAPI::ovr_Room_SetDescription_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_SetDescription_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_UpdateDataStore
// Il2CppName: ovr_Room_UpdateDataStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>*)>(&CAPI::ovr_Room_UpdateDataStore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_UpdateDataStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<Oculus::Platform::CAPI::ovrKeyValuePair>*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_UpdateDataStore_Native
// Il2CppName: ovr_Room_UpdateDataStore_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::Array<Oculus::Platform::CAPI::ovrKeyValuePair>*, System::UIntPtr)>(&CAPI::ovr_Room_UpdateDataStore_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_UpdateDataStore_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<Oculus::Platform::CAPI::ovrKeyValuePair>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_UpdateMembershipLockStatus
// Il2CppName: ovr_Room_UpdateMembershipLockStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, Oculus::Platform::RoomMembershipLockStatus)>(&CAPI::ovr_Room_UpdateMembershipLockStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_UpdateMembershipLockStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::RoomMembershipLockStatus>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_UpdateOwner
// Il2CppName: ovr_Room_UpdateOwner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, uint64_t)>(&CAPI::ovr_Room_UpdateOwner)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_UpdateOwner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_UpdatePrivateRoomJoinPolicy
// Il2CppName: ovr_Room_UpdatePrivateRoomJoinPolicy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, Oculus::Platform::RoomJoinPolicy)>(&CAPI::ovr_Room_UpdatePrivateRoomJoinPolicy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_UpdatePrivateRoomJoinPolicy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::RoomJoinPolicy>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_SystemPermissions_GetStatus
// Il2CppName: ovr_SystemPermissions_GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(Oculus::Platform::PermissionType)>(&CAPI::ovr_SystemPermissions_GetStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_SystemPermissions_GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::PermissionType>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_SystemPermissions_LaunchDeeplink
// Il2CppName: ovr_SystemPermissions_LaunchDeeplink
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(Oculus::Platform::PermissionType)>(&CAPI::ovr_SystemPermissions_LaunchDeeplink)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_SystemPermissions_LaunchDeeplink", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::PermissionType>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_CancelRecordingForReportFlow
// Il2CppName: ovr_User_CancelRecordingForReportFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*)>(&CAPI::ovr_User_CancelRecordingForReportFlow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_CancelRecordingForReportFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_CancelRecordingForReportFlow_Native
// Il2CppName: ovr_User_CancelRecordingForReportFlow_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_User_CancelRecordingForReportFlow_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_CancelRecordingForReportFlow_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_Get
// Il2CppName: ovr_User_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_User_Get)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetAccessToken
// Il2CppName: ovr_User_GetAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_User_GetAccessToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetLinkedAccounts
// Il2CppName: ovr_User_GetLinkedAccounts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_User_GetLinkedAccounts)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetLinkedAccounts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetLoggedInUser
// Il2CppName: ovr_User_GetLoggedInUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_User_GetLoggedInUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetLoggedInUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetLoggedInUserFriends
// Il2CppName: ovr_User_GetLoggedInUserFriends
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_User_GetLoggedInUserFriends)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetLoggedInUserFriends", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetLoggedInUserFriendsAndRooms
// Il2CppName: ovr_User_GetLoggedInUserFriendsAndRooms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_User_GetLoggedInUserFriendsAndRooms)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetLoggedInUserFriendsAndRooms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms
// Il2CppName: ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetOrgScopedID
// Il2CppName: ovr_User_GetOrgScopedID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_User_GetOrgScopedID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetOrgScopedID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetSdkAccounts
// Il2CppName: ovr_User_GetSdkAccounts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_User_GetSdkAccounts)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetSdkAccounts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetUserProof
// Il2CppName: ovr_User_GetUserProof
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_User_GetUserProof)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetUserProof", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_LaunchBlockFlow
// Il2CppName: ovr_User_LaunchBlockFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_User_LaunchBlockFlow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_LaunchBlockFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_LaunchFriendRequestFlow
// Il2CppName: ovr_User_LaunchFriendRequestFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_User_LaunchFriendRequestFlow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_LaunchFriendRequestFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_LaunchProfile
// Il2CppName: ovr_User_LaunchProfile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_User_LaunchProfile)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_LaunchProfile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_LaunchReportFlow
// Il2CppName: ovr_User_LaunchReportFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_User_LaunchReportFlow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_LaunchReportFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_LaunchReportFlow2
// Il2CppName: ovr_User_LaunchReportFlow2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, System::IntPtr)>(&CAPI::ovr_User_LaunchReportFlow2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_LaunchReportFlow2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_LaunchUnblockFlow
// Il2CppName: ovr_User_LaunchUnblockFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_User_LaunchUnblockFlow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_LaunchUnblockFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_NewEntitledTestUser
// Il2CppName: ovr_User_NewEntitledTestUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_User_NewEntitledTestUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_NewEntitledTestUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_NewTestUser
// Il2CppName: ovr_User_NewTestUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_User_NewTestUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_NewTestUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_NewTestUserFriends
// Il2CppName: ovr_User_NewTestUserFriends
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_User_NewTestUserFriends)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_NewTestUserFriends", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_StartRecordingForReportFlow
// Il2CppName: ovr_User_StartRecordingForReportFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)()>(&CAPI::ovr_User_StartRecordingForReportFlow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_StartRecordingForReportFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_StopRecordingAndLaunchReportFlow
// Il2CppName: ovr_User_StopRecordingAndLaunchReportFlow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::Il2CppString*)>(&CAPI::ovr_User_StopRecordingAndLaunchReportFlow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_StopRecordingAndLaunchReportFlow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_StopRecordingAndLaunchReportFlow_Native
// Il2CppName: ovr_User_StopRecordingAndLaunchReportFlow_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, System::IntPtr)>(&CAPI::ovr_User_StopRecordingAndLaunchReportFlow_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_StopRecordingAndLaunchReportFlow_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_StopRecordingAndLaunchReportFlow2
// Il2CppName: ovr_User_StopRecordingAndLaunchReportFlow2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::Il2CppString*, System::IntPtr)>(&CAPI::ovr_User_StopRecordingAndLaunchReportFlow2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_StopRecordingAndLaunchReportFlow2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_StopRecordingAndLaunchReportFlow2_Native
// Il2CppName: ovr_User_StopRecordingAndLaunchReportFlow2_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, System::IntPtr, System::IntPtr)>(&CAPI::ovr_User_StopRecordingAndLaunchReportFlow2_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_StopRecordingAndLaunchReportFlow2_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_TestUserCreateDeviceManifest
// Il2CppName: ovr_User_TestUserCreateDeviceManifest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(::Il2CppString*, ::Array<uint64_t>*, int)>(&CAPI::ovr_User_TestUserCreateDeviceManifest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_TestUserCreateDeviceManifest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_TestUserCreateDeviceManifest_Native
// Il2CppName: ovr_User_TestUserCreateDeviceManifest_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, ::Array<uint64_t>*, int)>(&CAPI::ovr_User_TestUserCreateDeviceManifest_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_TestUserCreateDeviceManifest_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey
// Il2CppName: ovr_UserDataStore_PrivateDeleteEntryByKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::Il2CppString*)>(&CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserDataStore_PrivateDeleteEntryByKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey_Native
// Il2CppName: ovr_UserDataStore_PrivateDeleteEntryByKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, System::IntPtr)>(&CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserDataStore_PrivateDeleteEntryByKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserDataStore_PrivateGetEntries
// Il2CppName: ovr_UserDataStore_PrivateGetEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_UserDataStore_PrivateGetEntries)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserDataStore_PrivateGetEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserDataStore_PrivateGetEntryByKey
// Il2CppName: ovr_UserDataStore_PrivateGetEntryByKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::Il2CppString*)>(&CAPI::ovr_UserDataStore_PrivateGetEntryByKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserDataStore_PrivateGetEntryByKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserDataStore_PrivateGetEntryByKey_Native
// Il2CppName: ovr_UserDataStore_PrivateGetEntryByKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, System::IntPtr)>(&CAPI::ovr_UserDataStore_PrivateGetEntryByKey_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserDataStore_PrivateGetEntryByKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserDataStore_PrivateWriteEntry
// Il2CppName: ovr_UserDataStore_PrivateWriteEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::Il2CppString*, ::Il2CppString*)>(&CAPI::ovr_UserDataStore_PrivateWriteEntry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserDataStore_PrivateWriteEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserDataStore_PrivateWriteEntry_Native
// Il2CppName: ovr_UserDataStore_PrivateWriteEntry_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, System::IntPtr, System::IntPtr)>(&CAPI::ovr_UserDataStore_PrivateWriteEntry_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserDataStore_PrivateWriteEntry_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserDataStore_PublicDeleteEntryByKey
// Il2CppName: ovr_UserDataStore_PublicDeleteEntryByKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::Il2CppString*)>(&CAPI::ovr_UserDataStore_PublicDeleteEntryByKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserDataStore_PublicDeleteEntryByKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserDataStore_PublicDeleteEntryByKey_Native
// Il2CppName: ovr_UserDataStore_PublicDeleteEntryByKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, System::IntPtr)>(&CAPI::ovr_UserDataStore_PublicDeleteEntryByKey_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserDataStore_PublicDeleteEntryByKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserDataStore_PublicGetEntries
// Il2CppName: ovr_UserDataStore_PublicGetEntries
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t)>(&CAPI::ovr_UserDataStore_PublicGetEntries)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserDataStore_PublicGetEntries", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserDataStore_PublicGetEntryByKey
// Il2CppName: ovr_UserDataStore_PublicGetEntryByKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::Il2CppString*)>(&CAPI::ovr_UserDataStore_PublicGetEntryByKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserDataStore_PublicGetEntryByKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserDataStore_PublicGetEntryByKey_Native
// Il2CppName: ovr_UserDataStore_PublicGetEntryByKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, System::IntPtr)>(&CAPI::ovr_UserDataStore_PublicGetEntryByKey_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserDataStore_PublicGetEntryByKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserDataStore_PublicWriteEntry
// Il2CppName: ovr_UserDataStore_PublicWriteEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, ::Il2CppString*, ::Il2CppString*)>(&CAPI::ovr_UserDataStore_PublicWriteEntry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserDataStore_PublicWriteEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserDataStore_PublicWriteEntry_Native
// Il2CppName: ovr_UserDataStore_PublicWriteEntry_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(uint64_t, System::IntPtr, System::IntPtr)>(&CAPI::ovr_UserDataStore_PublicWriteEntry_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserDataStore_PublicWriteEntry_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Voip_SetSystemVoipSuppressed
// Il2CppName: ovr_Voip_SetSystemVoipSuppressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(bool)>(&CAPI::ovr_Voip_SetSystemVoipSuppressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Voip_SetSystemVoipSuppressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AbuseReportRecording_GetRecordingUuid
// Il2CppName: ovr_AbuseReportRecording_GetRecordingUuid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_AbuseReportRecording_GetRecordingUuid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AbuseReportRecording_GetRecordingUuid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AbuseReportRecording_GetRecordingUuid_Native
// Il2CppName: ovr_AbuseReportRecording_GetRecordingUuid_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_AbuseReportRecording_GetRecordingUuid_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AbuseReportRecording_GetRecordingUuid_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementDefinition_GetBitfieldLength
// Il2CppName: ovr_AchievementDefinition_GetBitfieldLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr)>(&CAPI::ovr_AchievementDefinition_GetBitfieldLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementDefinition_GetBitfieldLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementDefinition_GetName
// Il2CppName: ovr_AchievementDefinition_GetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_AchievementDefinition_GetName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementDefinition_GetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementDefinition_GetName_Native
// Il2CppName: ovr_AchievementDefinition_GetName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_AchievementDefinition_GetName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementDefinition_GetName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementDefinition_GetTarget
// Il2CppName: ovr_AchievementDefinition_GetTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_AchievementDefinition_GetTarget)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementDefinition_GetTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementDefinition_GetType
// Il2CppName: ovr_AchievementDefinition_GetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::AchievementType (*)(System::IntPtr)>(&CAPI::ovr_AchievementDefinition_GetType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementDefinition_GetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementDefinitionArray_GetElement
// Il2CppName: ovr_AchievementDefinitionArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_AchievementDefinitionArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementDefinitionArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementDefinitionArray_GetNextUrl
// Il2CppName: ovr_AchievementDefinitionArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_AchievementDefinitionArray_GetNextUrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementDefinitionArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementDefinitionArray_GetNextUrl_Native
// Il2CppName: ovr_AchievementDefinitionArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_AchievementDefinitionArray_GetNextUrl_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementDefinitionArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementDefinitionArray_GetSize
// Il2CppName: ovr_AchievementDefinitionArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_AchievementDefinitionArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementDefinitionArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementDefinitionArray_HasNextPage
// Il2CppName: ovr_AchievementDefinitionArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_AchievementDefinitionArray_HasNextPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementDefinitionArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementProgress_GetBitfield
// Il2CppName: ovr_AchievementProgress_GetBitfield
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_AchievementProgress_GetBitfield)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementProgress_GetBitfield", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementProgress_GetBitfield_Native
// Il2CppName: ovr_AchievementProgress_GetBitfield_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_AchievementProgress_GetBitfield_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementProgress_GetBitfield_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementProgress_GetCount
// Il2CppName: ovr_AchievementProgress_GetCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_AchievementProgress_GetCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementProgress_GetCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementProgress_GetIsUnlocked
// Il2CppName: ovr_AchievementProgress_GetIsUnlocked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_AchievementProgress_GetIsUnlocked)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementProgress_GetIsUnlocked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementProgress_GetName
// Il2CppName: ovr_AchievementProgress_GetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_AchievementProgress_GetName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementProgress_GetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementProgress_GetName_Native
// Il2CppName: ovr_AchievementProgress_GetName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_AchievementProgress_GetName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementProgress_GetName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementProgress_GetUnlockTime
// Il2CppName: ovr_AchievementProgress_GetUnlockTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (*)(System::IntPtr)>(&CAPI::ovr_AchievementProgress_GetUnlockTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementProgress_GetUnlockTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementProgress_GetUnlockTime_Native
// Il2CppName: ovr_AchievementProgress_GetUnlockTime_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_AchievementProgress_GetUnlockTime_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementProgress_GetUnlockTime_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementProgressArray_GetElement
// Il2CppName: ovr_AchievementProgressArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_AchievementProgressArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementProgressArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementProgressArray_GetNextUrl
// Il2CppName: ovr_AchievementProgressArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_AchievementProgressArray_GetNextUrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementProgressArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementProgressArray_GetNextUrl_Native
// Il2CppName: ovr_AchievementProgressArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_AchievementProgressArray_GetNextUrl_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementProgressArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementProgressArray_GetSize
// Il2CppName: ovr_AchievementProgressArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_AchievementProgressArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementProgressArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementProgressArray_HasNextPage
// Il2CppName: ovr_AchievementProgressArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_AchievementProgressArray_HasNextPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementProgressArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementUpdate_GetJustUnlocked
// Il2CppName: ovr_AchievementUpdate_GetJustUnlocked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_AchievementUpdate_GetJustUnlocked)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementUpdate_GetJustUnlocked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementUpdate_GetName
// Il2CppName: ovr_AchievementUpdate_GetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_AchievementUpdate_GetName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementUpdate_GetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AchievementUpdate_GetName_Native
// Il2CppName: ovr_AchievementUpdate_GetName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_AchievementUpdate_GetName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AchievementUpdate_GetName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Application_GetID
// Il2CppName: ovr_Application_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Application_GetID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Application_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ApplicationVersion_GetCurrentCode
// Il2CppName: ovr_ApplicationVersion_GetCurrentCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr)>(&CAPI::ovr_ApplicationVersion_GetCurrentCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ApplicationVersion_GetCurrentCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ApplicationVersion_GetCurrentName
// Il2CppName: ovr_ApplicationVersion_GetCurrentName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_ApplicationVersion_GetCurrentName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ApplicationVersion_GetCurrentName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ApplicationVersion_GetCurrentName_Native
// Il2CppName: ovr_ApplicationVersion_GetCurrentName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_ApplicationVersion_GetCurrentName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ApplicationVersion_GetCurrentName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ApplicationVersion_GetLatestCode
// Il2CppName: ovr_ApplicationVersion_GetLatestCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr)>(&CAPI::ovr_ApplicationVersion_GetLatestCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ApplicationVersion_GetLatestCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ApplicationVersion_GetLatestName
// Il2CppName: ovr_ApplicationVersion_GetLatestName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_ApplicationVersion_GetLatestName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ApplicationVersion_GetLatestName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ApplicationVersion_GetLatestName_Native
// Il2CppName: ovr_ApplicationVersion_GetLatestName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_ApplicationVersion_GetLatestName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ApplicationVersion_GetLatestName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetDetails_GetAssetId
// Il2CppName: ovr_AssetDetails_GetAssetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_AssetDetails_GetAssetId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetDetails_GetAssetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetDetails_GetAssetType
// Il2CppName: ovr_AssetDetails_GetAssetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_AssetDetails_GetAssetType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetDetails_GetAssetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetDetails_GetAssetType_Native
// Il2CppName: ovr_AssetDetails_GetAssetType_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_AssetDetails_GetAssetType_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetDetails_GetAssetType_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetDetails_GetDownloadStatus
// Il2CppName: ovr_AssetDetails_GetDownloadStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_AssetDetails_GetDownloadStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetDetails_GetDownloadStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetDetails_GetDownloadStatus_Native
// Il2CppName: ovr_AssetDetails_GetDownloadStatus_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_AssetDetails_GetDownloadStatus_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetDetails_GetDownloadStatus_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetDetails_GetFilepath
// Il2CppName: ovr_AssetDetails_GetFilepath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_AssetDetails_GetFilepath)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetDetails_GetFilepath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetDetails_GetFilepath_Native
// Il2CppName: ovr_AssetDetails_GetFilepath_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_AssetDetails_GetFilepath_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetDetails_GetFilepath_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetDetails_GetIapStatus
// Il2CppName: ovr_AssetDetails_GetIapStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_AssetDetails_GetIapStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetDetails_GetIapStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetDetails_GetIapStatus_Native
// Il2CppName: ovr_AssetDetails_GetIapStatus_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_AssetDetails_GetIapStatus_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetDetails_GetIapStatus_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetDetails_GetLanguage
// Il2CppName: ovr_AssetDetails_GetLanguage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_AssetDetails_GetLanguage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetDetails_GetLanguage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetDetails_GetMetadata
// Il2CppName: ovr_AssetDetails_GetMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_AssetDetails_GetMetadata)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetDetails_GetMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetDetails_GetMetadata_Native
// Il2CppName: ovr_AssetDetails_GetMetadata_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_AssetDetails_GetMetadata_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetDetails_GetMetadata_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetDetailsArray_GetElement
// Il2CppName: ovr_AssetDetailsArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_AssetDetailsArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetDetailsArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetDetailsArray_GetSize
// Il2CppName: ovr_AssetDetailsArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_AssetDetailsArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetDetailsArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFileDeleteResult_GetAssetFileId
// Il2CppName: ovr_AssetFileDeleteResult_GetAssetFileId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_AssetFileDeleteResult_GetAssetFileId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFileDeleteResult_GetAssetFileId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFileDeleteResult_GetAssetId
// Il2CppName: ovr_AssetFileDeleteResult_GetAssetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_AssetFileDeleteResult_GetAssetId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFileDeleteResult_GetAssetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFileDeleteResult_GetFilepath
// Il2CppName: ovr_AssetFileDeleteResult_GetFilepath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_AssetFileDeleteResult_GetFilepath)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFileDeleteResult_GetFilepath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFileDeleteResult_GetFilepath_Native
// Il2CppName: ovr_AssetFileDeleteResult_GetFilepath_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_AssetFileDeleteResult_GetFilepath_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFileDeleteResult_GetFilepath_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFileDeleteResult_GetSuccess
// Il2CppName: ovr_AssetFileDeleteResult_GetSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_AssetFileDeleteResult_GetSuccess)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFileDeleteResult_GetSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFileDownloadCancelResult_GetAssetFileId
// Il2CppName: ovr_AssetFileDownloadCancelResult_GetAssetFileId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_AssetFileDownloadCancelResult_GetAssetFileId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFileDownloadCancelResult_GetAssetFileId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFileDownloadCancelResult_GetAssetId
// Il2CppName: ovr_AssetFileDownloadCancelResult_GetAssetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_AssetFileDownloadCancelResult_GetAssetId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFileDownloadCancelResult_GetAssetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath
// Il2CppName: ovr_AssetFileDownloadCancelResult_GetFilepath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFileDownloadCancelResult_GetFilepath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath_Native
// Il2CppName: ovr_AssetFileDownloadCancelResult_GetFilepath_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFileDownloadCancelResult_GetFilepath_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFileDownloadCancelResult_GetSuccess
// Il2CppName: ovr_AssetFileDownloadCancelResult_GetSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_AssetFileDownloadCancelResult_GetSuccess)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFileDownloadCancelResult_GetSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFileDownloadResult_GetAssetId
// Il2CppName: ovr_AssetFileDownloadResult_GetAssetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_AssetFileDownloadResult_GetAssetId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFileDownloadResult_GetAssetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFileDownloadResult_GetFilepath
// Il2CppName: ovr_AssetFileDownloadResult_GetFilepath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_AssetFileDownloadResult_GetFilepath)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFileDownloadResult_GetFilepath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFileDownloadResult_GetFilepath_Native
// Il2CppName: ovr_AssetFileDownloadResult_GetFilepath_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_AssetFileDownloadResult_GetFilepath_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFileDownloadResult_GetFilepath_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFileDownloadUpdate_GetAssetFileId
// Il2CppName: ovr_AssetFileDownloadUpdate_GetAssetFileId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_AssetFileDownloadUpdate_GetAssetFileId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFileDownloadUpdate_GetAssetFileId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFileDownloadUpdate_GetAssetId
// Il2CppName: ovr_AssetFileDownloadUpdate_GetAssetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_AssetFileDownloadUpdate_GetAssetId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFileDownloadUpdate_GetAssetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotal
// Il2CppName: ovr_AssetFileDownloadUpdate_GetBytesTotal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr)>(&CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFileDownloadUpdate_GetBytesTotal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferred
// Il2CppName: ovr_AssetFileDownloadUpdate_GetBytesTransferred
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr)>(&CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferred)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFileDownloadUpdate_GetBytesTransferred", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AssetFileDownloadUpdate_GetCompleted
// Il2CppName: ovr_AssetFileDownloadUpdate_GetCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_AssetFileDownloadUpdate_GetCompleted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AssetFileDownloadUpdate_GetCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CalApplicationFinalized_GetCountdownMS
// Il2CppName: ovr_CalApplicationFinalized_GetCountdownMS
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr)>(&CAPI::ovr_CalApplicationFinalized_GetCountdownMS)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CalApplicationFinalized_GetCountdownMS", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CalApplicationFinalized_GetID
// Il2CppName: ovr_CalApplicationFinalized_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_CalApplicationFinalized_GetID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CalApplicationFinalized_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CalApplicationFinalized_GetLaunchDetails
// Il2CppName: ovr_CalApplicationFinalized_GetLaunchDetails
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_CalApplicationFinalized_GetLaunchDetails)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CalApplicationFinalized_GetLaunchDetails", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CalApplicationFinalized_GetLaunchDetails_Native
// Il2CppName: ovr_CalApplicationFinalized_GetLaunchDetails_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_CalApplicationFinalized_GetLaunchDetails_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CalApplicationFinalized_GetLaunchDetails_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CalApplicationProposed_GetID
// Il2CppName: ovr_CalApplicationProposed_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_CalApplicationProposed_GetID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CalApplicationProposed_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CalApplicationSuggestion_GetID
// Il2CppName: ovr_CalApplicationSuggestion_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_CalApplicationSuggestion_GetID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CalApplicationSuggestion_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CalApplicationSuggestion_GetSocialContext
// Il2CppName: ovr_CalApplicationSuggestion_GetSocialContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_CalApplicationSuggestion_GetSocialContext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CalApplicationSuggestion_GetSocialContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CalApplicationSuggestion_GetSocialContext_Native
// Il2CppName: ovr_CalApplicationSuggestion_GetSocialContext_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_CalApplicationSuggestion_GetSocialContext_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CalApplicationSuggestion_GetSocialContext_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CalApplicationSuggestionArray_GetElement
// Il2CppName: ovr_CalApplicationSuggestionArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_CalApplicationSuggestionArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CalApplicationSuggestionArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CalApplicationSuggestionArray_GetSize
// Il2CppName: ovr_CalApplicationSuggestionArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_CalApplicationSuggestionArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CalApplicationSuggestionArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenge_GetCreationType
// Il2CppName: ovr_Challenge_GetCreationType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::ChallengeCreationType (*)(System::IntPtr)>(&CAPI::ovr_Challenge_GetCreationType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenge_GetCreationType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenge_GetDescription
// Il2CppName: ovr_Challenge_GetDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Challenge_GetDescription)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenge_GetDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenge_GetDescription_Native
// Il2CppName: ovr_Challenge_GetDescription_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Challenge_GetDescription_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenge_GetDescription_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenge_GetEndDate
// Il2CppName: ovr_Challenge_GetEndDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (*)(System::IntPtr)>(&CAPI::ovr_Challenge_GetEndDate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenge_GetEndDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenge_GetEndDate_Native
// Il2CppName: ovr_Challenge_GetEndDate_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Challenge_GetEndDate_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenge_GetEndDate_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenge_GetID
// Il2CppName: ovr_Challenge_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Challenge_GetID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenge_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenge_GetInvitedUsers
// Il2CppName: ovr_Challenge_GetInvitedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Challenge_GetInvitedUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenge_GetInvitedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenge_GetLeaderboard
// Il2CppName: ovr_Challenge_GetLeaderboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Challenge_GetLeaderboard)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenge_GetLeaderboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenge_GetParticipants
// Il2CppName: ovr_Challenge_GetParticipants
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Challenge_GetParticipants)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenge_GetParticipants", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenge_GetStartDate
// Il2CppName: ovr_Challenge_GetStartDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (*)(System::IntPtr)>(&CAPI::ovr_Challenge_GetStartDate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenge_GetStartDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenge_GetStartDate_Native
// Il2CppName: ovr_Challenge_GetStartDate_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Challenge_GetStartDate_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenge_GetStartDate_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenge_GetTitle
// Il2CppName: ovr_Challenge_GetTitle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Challenge_GetTitle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenge_GetTitle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenge_GetTitle_Native
// Il2CppName: ovr_Challenge_GetTitle_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Challenge_GetTitle_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenge_GetTitle_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Challenge_GetVisibility
// Il2CppName: ovr_Challenge_GetVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::ChallengeVisibility (*)(System::IntPtr)>(&CAPI::ovr_Challenge_GetVisibility)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Challenge_GetVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeArray_GetElement
// Il2CppName: ovr_ChallengeArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_ChallengeArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeArray_GetNextUrl
// Il2CppName: ovr_ChallengeArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_ChallengeArray_GetNextUrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeArray_GetNextUrl_Native
// Il2CppName: ovr_ChallengeArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_ChallengeArray_GetNextUrl_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeArray_GetPreviousUrl
// Il2CppName: ovr_ChallengeArray_GetPreviousUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_ChallengeArray_GetPreviousUrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeArray_GetPreviousUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeArray_GetPreviousUrl_Native
// Il2CppName: ovr_ChallengeArray_GetPreviousUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_ChallengeArray_GetPreviousUrl_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeArray_GetSize
// Il2CppName: ovr_ChallengeArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_ChallengeArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeArray_GetTotalCount
// Il2CppName: ovr_ChallengeArray_GetTotalCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_ChallengeArray_GetTotalCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeArray_GetTotalCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeArray_HasNextPage
// Il2CppName: ovr_ChallengeArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_ChallengeArray_HasNextPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeArray_HasPreviousPage
// Il2CppName: ovr_ChallengeArray_HasPreviousPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_ChallengeArray_HasPreviousPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeArray_HasPreviousPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeEntry_GetDisplayScore
// Il2CppName: ovr_ChallengeEntry_GetDisplayScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_ChallengeEntry_GetDisplayScore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeEntry_GetDisplayScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeEntry_GetDisplayScore_Native
// Il2CppName: ovr_ChallengeEntry_GetDisplayScore_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_ChallengeEntry_GetDisplayScore_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeEntry_GetDisplayScore_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeEntry_GetExtraData
// Il2CppName: ovr_ChallengeEntry_GetExtraData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(System::IntPtr)>(&CAPI::ovr_ChallengeEntry_GetExtraData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeEntry_GetExtraData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeEntry_GetExtraData_Native
// Il2CppName: ovr_ChallengeEntry_GetExtraData_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_ChallengeEntry_GetExtraData_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeEntry_GetExtraData_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeEntry_GetExtraDataLength
// Il2CppName: ovr_ChallengeEntry_GetExtraDataLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr)>(&CAPI::ovr_ChallengeEntry_GetExtraDataLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeEntry_GetExtraDataLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeEntry_GetRank
// Il2CppName: ovr_ChallengeEntry_GetRank
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr)>(&CAPI::ovr_ChallengeEntry_GetRank)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeEntry_GetRank", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeEntry_GetScore
// Il2CppName: ovr_ChallengeEntry_GetScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(System::IntPtr)>(&CAPI::ovr_ChallengeEntry_GetScore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeEntry_GetScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeEntry_GetTimestamp
// Il2CppName: ovr_ChallengeEntry_GetTimestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (*)(System::IntPtr)>(&CAPI::ovr_ChallengeEntry_GetTimestamp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeEntry_GetTimestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeEntry_GetTimestamp_Native
// Il2CppName: ovr_ChallengeEntry_GetTimestamp_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_ChallengeEntry_GetTimestamp_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeEntry_GetTimestamp_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeEntry_GetUser
// Il2CppName: ovr_ChallengeEntry_GetUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_ChallengeEntry_GetUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeEntry_GetUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeEntryArray_GetElement
// Il2CppName: ovr_ChallengeEntryArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_ChallengeEntryArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeEntryArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeEntryArray_GetNextUrl
// Il2CppName: ovr_ChallengeEntryArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_ChallengeEntryArray_GetNextUrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeEntryArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeEntryArray_GetNextUrl_Native
// Il2CppName: ovr_ChallengeEntryArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_ChallengeEntryArray_GetNextUrl_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeEntryArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeEntryArray_GetPreviousUrl
// Il2CppName: ovr_ChallengeEntryArray_GetPreviousUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_ChallengeEntryArray_GetPreviousUrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeEntryArray_GetPreviousUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeEntryArray_GetPreviousUrl_Native
// Il2CppName: ovr_ChallengeEntryArray_GetPreviousUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_ChallengeEntryArray_GetPreviousUrl_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeEntryArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeEntryArray_GetSize
// Il2CppName: ovr_ChallengeEntryArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_ChallengeEntryArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeEntryArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeEntryArray_GetTotalCount
// Il2CppName: ovr_ChallengeEntryArray_GetTotalCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_ChallengeEntryArray_GetTotalCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeEntryArray_GetTotalCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeEntryArray_HasNextPage
// Il2CppName: ovr_ChallengeEntryArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_ChallengeEntryArray_HasNextPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeEntryArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeEntryArray_HasPreviousPage
// Il2CppName: ovr_ChallengeEntryArray_HasPreviousPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_ChallengeEntryArray_HasPreviousPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeEntryArray_HasPreviousPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath
// Il2CppName: ovr_CloudStorage2UserDirectoryPathResponse_GetPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage2UserDirectoryPathResponse_GetPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native
// Il2CppName: ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageConflictMetadata_GetLocal
// Il2CppName: ovr_CloudStorageConflictMetadata_GetLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageConflictMetadata_GetLocal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageConflictMetadata_GetLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageConflictMetadata_GetRemote
// Il2CppName: ovr_CloudStorageConflictMetadata_GetRemote
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageConflictMetadata_GetRemote)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageConflictMetadata_GetRemote", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageData_GetBucket
// Il2CppName: ovr_CloudStorageData_GetBucket
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageData_GetBucket)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageData_GetBucket", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageData_GetBucket_Native
// Il2CppName: ovr_CloudStorageData_GetBucket_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageData_GetBucket_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageData_GetBucket_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageData_GetData
// Il2CppName: ovr_CloudStorageData_GetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageData_GetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageData_GetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageData_GetData_Native
// Il2CppName: ovr_CloudStorageData_GetData_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageData_GetData_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageData_GetData_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageData_GetDataSize
// Il2CppName: ovr_CloudStorageData_GetDataSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageData_GetDataSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageData_GetDataSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageData_GetKey
// Il2CppName: ovr_CloudStorageData_GetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageData_GetKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageData_GetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageData_GetKey_Native
// Il2CppName: ovr_CloudStorageData_GetKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageData_GetKey_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageData_GetKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageMetadata_GetBucket
// Il2CppName: ovr_CloudStorageMetadata_GetBucket
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageMetadata_GetBucket)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageMetadata_GetBucket", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageMetadata_GetBucket_Native
// Il2CppName: ovr_CloudStorageMetadata_GetBucket_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageMetadata_GetBucket_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageMetadata_GetBucket_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageMetadata_GetCounter
// Il2CppName: ovr_CloudStorageMetadata_GetCounter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageMetadata_GetCounter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageMetadata_GetCounter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageMetadata_GetDataSize
// Il2CppName: ovr_CloudStorageMetadata_GetDataSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageMetadata_GetDataSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageMetadata_GetDataSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageMetadata_GetExtraData
// Il2CppName: ovr_CloudStorageMetadata_GetExtraData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageMetadata_GetExtraData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageMetadata_GetExtraData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageMetadata_GetExtraData_Native
// Il2CppName: ovr_CloudStorageMetadata_GetExtraData_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageMetadata_GetExtraData_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageMetadata_GetExtraData_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageMetadata_GetKey
// Il2CppName: ovr_CloudStorageMetadata_GetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageMetadata_GetKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageMetadata_GetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageMetadata_GetKey_Native
// Il2CppName: ovr_CloudStorageMetadata_GetKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageMetadata_GetKey_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageMetadata_GetKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageMetadata_GetSaveTime
// Il2CppName: ovr_CloudStorageMetadata_GetSaveTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageMetadata_GetSaveTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageMetadata_GetSaveTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageMetadata_GetStatus
// Il2CppName: ovr_CloudStorageMetadata_GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::CloudStorageDataStatus (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageMetadata_GetStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageMetadata_GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageMetadata_GetVersionHandle
// Il2CppName: ovr_CloudStorageMetadata_GetVersionHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageMetadata_GetVersionHandle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageMetadata_GetVersionHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageMetadata_GetVersionHandle_Native
// Il2CppName: ovr_CloudStorageMetadata_GetVersionHandle_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageMetadata_GetVersionHandle_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageMetadata_GetVersionHandle_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageMetadataArray_GetElement
// Il2CppName: ovr_CloudStorageMetadataArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_CloudStorageMetadataArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageMetadataArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageMetadataArray_GetNextUrl
// Il2CppName: ovr_CloudStorageMetadataArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageMetadataArray_GetNextUrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageMetadataArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageMetadataArray_GetNextUrl_Native
// Il2CppName: ovr_CloudStorageMetadataArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageMetadataArray_GetNextUrl_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageMetadataArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageMetadataArray_GetSize
// Il2CppName: ovr_CloudStorageMetadataArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageMetadataArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageMetadataArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageMetadataArray_HasNextPage
// Il2CppName: ovr_CloudStorageMetadataArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageMetadataArray_HasNextPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageMetadataArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageUpdateResponse_GetBucket
// Il2CppName: ovr_CloudStorageUpdateResponse_GetBucket
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageUpdateResponse_GetBucket)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageUpdateResponse_GetBucket", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageUpdateResponse_GetBucket_Native
// Il2CppName: ovr_CloudStorageUpdateResponse_GetBucket_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageUpdateResponse_GetBucket_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageUpdateResponse_GetBucket_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageUpdateResponse_GetKey
// Il2CppName: ovr_CloudStorageUpdateResponse_GetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageUpdateResponse_GetKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageUpdateResponse_GetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageUpdateResponse_GetKey_Native
// Il2CppName: ovr_CloudStorageUpdateResponse_GetKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageUpdateResponse_GetKey_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageUpdateResponse_GetKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageUpdateResponse_GetStatus
// Il2CppName: ovr_CloudStorageUpdateResponse_GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::CloudStorageUpdateStatus (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageUpdateResponse_GetStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageUpdateResponse_GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle
// Il2CppName: ovr_CloudStorageUpdateResponse_GetVersionHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageUpdateResponse_GetVersionHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle_Native
// Il2CppName: ovr_CloudStorageUpdateResponse_GetVersionHandle_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_CloudStorageUpdateResponse_GetVersionHandle_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_DataStore_Contains
// Il2CppName: ovr_DataStore_Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr, ::Il2CppString*)>(&CAPI::ovr_DataStore_Contains)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_DataStore_Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_DataStore_Contains_Native
// Il2CppName: ovr_DataStore_Contains_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_DataStore_Contains_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_DataStore_Contains_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_DataStore_GetKey
// Il2CppName: ovr_DataStore_GetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr, int)>(&CAPI::ovr_DataStore_GetKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_DataStore_GetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_DataStore_GetKey_Native
// Il2CppName: ovr_DataStore_GetKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, int)>(&CAPI::ovr_DataStore_GetKey_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_DataStore_GetKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_DataStore_GetNumKeys
// Il2CppName: ovr_DataStore_GetNumKeys
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_DataStore_GetNumKeys)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_DataStore_GetNumKeys", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_DataStore_GetValue
// Il2CppName: ovr_DataStore_GetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr, ::Il2CppString*)>(&CAPI::ovr_DataStore_GetValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_DataStore_GetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_DataStore_GetValue_Native
// Il2CppName: ovr_DataStore_GetValue_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_DataStore_GetValue_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_DataStore_GetValue_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Destination_GetApiName
// Il2CppName: ovr_Destination_GetApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Destination_GetApiName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Destination_GetApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Destination_GetApiName_Native
// Il2CppName: ovr_Destination_GetApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Destination_GetApiName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Destination_GetApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Destination_GetDeeplinkMessage
// Il2CppName: ovr_Destination_GetDeeplinkMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Destination_GetDeeplinkMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Destination_GetDeeplinkMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Destination_GetDeeplinkMessage_Native
// Il2CppName: ovr_Destination_GetDeeplinkMessage_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Destination_GetDeeplinkMessage_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Destination_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Destination_GetDisplayName
// Il2CppName: ovr_Destination_GetDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Destination_GetDisplayName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Destination_GetDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Destination_GetDisplayName_Native
// Il2CppName: ovr_Destination_GetDisplayName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Destination_GetDisplayName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Destination_GetDisplayName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_DestinationArray_GetElement
// Il2CppName: ovr_DestinationArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_DestinationArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_DestinationArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_DestinationArray_GetNextUrl
// Il2CppName: ovr_DestinationArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_DestinationArray_GetNextUrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_DestinationArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_DestinationArray_GetNextUrl_Native
// Il2CppName: ovr_DestinationArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_DestinationArray_GetNextUrl_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_DestinationArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_DestinationArray_GetSize
// Il2CppName: ovr_DestinationArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_DestinationArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_DestinationArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_DestinationArray_HasNextPage
// Il2CppName: ovr_DestinationArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_DestinationArray_HasNextPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_DestinationArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Error_GetCode
// Il2CppName: ovr_Error_GetCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr)>(&CAPI::ovr_Error_GetCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Error_GetCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Error_GetDisplayableMessage
// Il2CppName: ovr_Error_GetDisplayableMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Error_GetDisplayableMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Error_GetDisplayableMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Error_GetDisplayableMessage_Native
// Il2CppName: ovr_Error_GetDisplayableMessage_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Error_GetDisplayableMessage_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Error_GetDisplayableMessage_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Error_GetHttpCode
// Il2CppName: ovr_Error_GetHttpCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr)>(&CAPI::ovr_Error_GetHttpCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Error_GetHttpCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Error_GetMessage
// Il2CppName: ovr_Error_GetMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Error_GetMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Error_GetMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Error_GetMessage_Native
// Il2CppName: ovr_Error_GetMessage_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Error_GetMessage_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Error_GetMessage_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName
// Il2CppName: ovr_GroupPresenceLeaveIntent_GetDestinationApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_GroupPresenceLeaveIntent_GetDestinationApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native
// Il2CppName: ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId
// Il2CppName: ovr_GroupPresenceLeaveIntent_GetLobbySessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_GroupPresenceLeaveIntent_GetLobbySessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native
// Il2CppName: ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId
// Il2CppName: ovr_GroupPresenceLeaveIntent_GetMatchSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_GroupPresenceLeaveIntent_GetMatchSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native
// Il2CppName: ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_HttpTransferUpdate_GetBytes
// Il2CppName: ovr_HttpTransferUpdate_GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_HttpTransferUpdate_GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_HttpTransferUpdate_GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_HttpTransferUpdate_GetID
// Il2CppName: ovr_HttpTransferUpdate_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_HttpTransferUpdate_GetID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_HttpTransferUpdate_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_HttpTransferUpdate_GetSize
// Il2CppName: ovr_HttpTransferUpdate_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_HttpTransferUpdate_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_HttpTransferUpdate_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_HttpTransferUpdate_IsCompleted
// Il2CppName: ovr_HttpTransferUpdate_IsCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_HttpTransferUpdate_IsCompleted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_HttpTransferUpdate_IsCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_InstalledApplication_GetApplicationId
// Il2CppName: ovr_InstalledApplication_GetApplicationId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_InstalledApplication_GetApplicationId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_InstalledApplication_GetApplicationId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_InstalledApplication_GetApplicationId_Native
// Il2CppName: ovr_InstalledApplication_GetApplicationId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_InstalledApplication_GetApplicationId_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_InstalledApplication_GetApplicationId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_InstalledApplication_GetPackageName
// Il2CppName: ovr_InstalledApplication_GetPackageName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_InstalledApplication_GetPackageName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_InstalledApplication_GetPackageName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_InstalledApplication_GetPackageName_Native
// Il2CppName: ovr_InstalledApplication_GetPackageName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_InstalledApplication_GetPackageName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_InstalledApplication_GetPackageName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_InstalledApplication_GetStatus
// Il2CppName: ovr_InstalledApplication_GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_InstalledApplication_GetStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_InstalledApplication_GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_InstalledApplication_GetStatus_Native
// Il2CppName: ovr_InstalledApplication_GetStatus_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_InstalledApplication_GetStatus_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_InstalledApplication_GetStatus_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_InstalledApplication_GetVersionCode
// Il2CppName: ovr_InstalledApplication_GetVersionCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr)>(&CAPI::ovr_InstalledApplication_GetVersionCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_InstalledApplication_GetVersionCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_InstalledApplication_GetVersionName
// Il2CppName: ovr_InstalledApplication_GetVersionName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_InstalledApplication_GetVersionName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_InstalledApplication_GetVersionName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_InstalledApplication_GetVersionName_Native
// Il2CppName: ovr_InstalledApplication_GetVersionName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_InstalledApplication_GetVersionName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_InstalledApplication_GetVersionName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_InstalledApplicationArray_GetElement
// Il2CppName: ovr_InstalledApplicationArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_InstalledApplicationArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_InstalledApplicationArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_InstalledApplicationArray_GetSize
// Il2CppName: ovr_InstalledApplicationArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_InstalledApplicationArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_InstalledApplicationArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_InvitePanelResultInfo_GetInvitesSent
// Il2CppName: ovr_InvitePanelResultInfo_GetInvitesSent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_InvitePanelResultInfo_GetInvitesSent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_InvitePanelResultInfo_GetInvitesSent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LanguagePackInfo_GetEnglishName
// Il2CppName: ovr_LanguagePackInfo_GetEnglishName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_LanguagePackInfo_GetEnglishName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LanguagePackInfo_GetEnglishName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LanguagePackInfo_GetEnglishName_Native
// Il2CppName: ovr_LanguagePackInfo_GetEnglishName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_LanguagePackInfo_GetEnglishName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LanguagePackInfo_GetEnglishName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LanguagePackInfo_GetNativeName
// Il2CppName: ovr_LanguagePackInfo_GetNativeName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_LanguagePackInfo_GetNativeName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LanguagePackInfo_GetNativeName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LanguagePackInfo_GetNativeName_Native
// Il2CppName: ovr_LanguagePackInfo_GetNativeName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_LanguagePackInfo_GetNativeName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LanguagePackInfo_GetNativeName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LanguagePackInfo_GetTag
// Il2CppName: ovr_LanguagePackInfo_GetTag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_LanguagePackInfo_GetTag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LanguagePackInfo_GetTag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LanguagePackInfo_GetTag_Native
// Il2CppName: ovr_LanguagePackInfo_GetTag_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_LanguagePackInfo_GetTag_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LanguagePackInfo_GetTag_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LaunchBlockFlowResult_GetDidBlock
// Il2CppName: ovr_LaunchBlockFlowResult_GetDidBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_LaunchBlockFlowResult_GetDidBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LaunchBlockFlowResult_GetDidBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LaunchBlockFlowResult_GetDidCancel
// Il2CppName: ovr_LaunchBlockFlowResult_GetDidCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_LaunchBlockFlowResult_GetDidCancel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LaunchBlockFlowResult_GetDidCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LaunchDetails_GetDeeplinkMessage
// Il2CppName: ovr_LaunchDetails_GetDeeplinkMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_LaunchDetails_GetDeeplinkMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LaunchDetails_GetDeeplinkMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LaunchDetails_GetDeeplinkMessage_Native
// Il2CppName: ovr_LaunchDetails_GetDeeplinkMessage_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_LaunchDetails_GetDeeplinkMessage_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LaunchDetails_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LaunchDetails_GetDestinationApiName
// Il2CppName: ovr_LaunchDetails_GetDestinationApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_LaunchDetails_GetDestinationApiName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LaunchDetails_GetDestinationApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LaunchDetails_GetDestinationApiName_Native
// Il2CppName: ovr_LaunchDetails_GetDestinationApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_LaunchDetails_GetDestinationApiName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LaunchDetails_GetDestinationApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LaunchDetails_GetLaunchSource
// Il2CppName: ovr_LaunchDetails_GetLaunchSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_LaunchDetails_GetLaunchSource)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LaunchDetails_GetLaunchSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LaunchDetails_GetLaunchSource_Native
// Il2CppName: ovr_LaunchDetails_GetLaunchSource_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_LaunchDetails_GetLaunchSource_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LaunchDetails_GetLaunchSource_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LaunchDetails_GetLaunchType
// Il2CppName: ovr_LaunchDetails_GetLaunchType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::LaunchType (*)(System::IntPtr)>(&CAPI::ovr_LaunchDetails_GetLaunchType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LaunchDetails_GetLaunchType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LaunchDetails_GetRoomID
// Il2CppName: ovr_LaunchDetails_GetRoomID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_LaunchDetails_GetRoomID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LaunchDetails_GetRoomID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LaunchDetails_GetTrackingID
// Il2CppName: ovr_LaunchDetails_GetTrackingID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_LaunchDetails_GetTrackingID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LaunchDetails_GetTrackingID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LaunchDetails_GetTrackingID_Native
// Il2CppName: ovr_LaunchDetails_GetTrackingID_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_LaunchDetails_GetTrackingID_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LaunchDetails_GetTrackingID_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LaunchDetails_GetUsers
// Il2CppName: ovr_LaunchDetails_GetUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_LaunchDetails_GetUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LaunchDetails_GetUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LaunchFriendRequestFlowResult_GetDidCancel
// Il2CppName: ovr_LaunchFriendRequestFlowResult_GetDidCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_LaunchFriendRequestFlowResult_GetDidCancel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LaunchFriendRequestFlowResult_GetDidCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LaunchFriendRequestFlowResult_GetDidSendRequest
// Il2CppName: ovr_LaunchFriendRequestFlowResult_GetDidSendRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_LaunchFriendRequestFlowResult_GetDidSendRequest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LaunchFriendRequestFlowResult_GetDidSendRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LaunchInvitePanelFlowResult_GetInvitedUsers
// Il2CppName: ovr_LaunchInvitePanelFlowResult_GetInvitedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_LaunchInvitePanelFlowResult_GetInvitedUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LaunchInvitePanelFlowResult_GetInvitedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LaunchReportFlowResult_GetDidCancel
// Il2CppName: ovr_LaunchReportFlowResult_GetDidCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_LaunchReportFlowResult_GetDidCancel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LaunchReportFlowResult_GetDidCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LaunchReportFlowResult_GetUserReportId
// Il2CppName: ovr_LaunchReportFlowResult_GetUserReportId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_LaunchReportFlowResult_GetUserReportId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LaunchReportFlowResult_GetUserReportId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LaunchUnblockFlowResult_GetDidCancel
// Il2CppName: ovr_LaunchUnblockFlowResult_GetDidCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_LaunchUnblockFlowResult_GetDidCancel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LaunchUnblockFlowResult_GetDidCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LaunchUnblockFlowResult_GetDidUnblock
// Il2CppName: ovr_LaunchUnblockFlowResult_GetDidUnblock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_LaunchUnblockFlowResult_GetDidUnblock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LaunchUnblockFlowResult_GetDidUnblock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Leaderboard_GetApiName
// Il2CppName: ovr_Leaderboard_GetApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Leaderboard_GetApiName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Leaderboard_GetApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Leaderboard_GetApiName_Native
// Il2CppName: ovr_Leaderboard_GetApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Leaderboard_GetApiName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Leaderboard_GetApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Leaderboard_GetDestination
// Il2CppName: ovr_Leaderboard_GetDestination
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Leaderboard_GetDestination)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Leaderboard_GetDestination", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Leaderboard_GetID
// Il2CppName: ovr_Leaderboard_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Leaderboard_GetID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Leaderboard_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardArray_GetElement
// Il2CppName: ovr_LeaderboardArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_LeaderboardArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardArray_GetNextUrl
// Il2CppName: ovr_LeaderboardArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardArray_GetNextUrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardArray_GetNextUrl_Native
// Il2CppName: ovr_LeaderboardArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardArray_GetNextUrl_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardArray_GetSize
// Il2CppName: ovr_LeaderboardArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardArray_HasNextPage
// Il2CppName: ovr_LeaderboardArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardArray_HasNextPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardEntry_GetDisplayScore
// Il2CppName: ovr_LeaderboardEntry_GetDisplayScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardEntry_GetDisplayScore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardEntry_GetDisplayScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardEntry_GetDisplayScore_Native
// Il2CppName: ovr_LeaderboardEntry_GetDisplayScore_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardEntry_GetDisplayScore_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardEntry_GetDisplayScore_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardEntry_GetExtraData
// Il2CppName: ovr_LeaderboardEntry_GetExtraData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardEntry_GetExtraData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardEntry_GetExtraData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardEntry_GetExtraData_Native
// Il2CppName: ovr_LeaderboardEntry_GetExtraData_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardEntry_GetExtraData_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardEntry_GetExtraData_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardEntry_GetExtraDataLength
// Il2CppName: ovr_LeaderboardEntry_GetExtraDataLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardEntry_GetExtraDataLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardEntry_GetExtraDataLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardEntry_GetRank
// Il2CppName: ovr_LeaderboardEntry_GetRank
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardEntry_GetRank)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardEntry_GetRank", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardEntry_GetScore
// Il2CppName: ovr_LeaderboardEntry_GetScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardEntry_GetScore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardEntry_GetScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardEntry_GetSupplementaryMetric
// Il2CppName: ovr_LeaderboardEntry_GetSupplementaryMetric
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardEntry_GetSupplementaryMetric)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardEntry_GetSupplementaryMetric", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardEntry_GetTimestamp
// Il2CppName: ovr_LeaderboardEntry_GetTimestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardEntry_GetTimestamp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardEntry_GetTimestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardEntry_GetTimestamp_Native
// Il2CppName: ovr_LeaderboardEntry_GetTimestamp_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardEntry_GetTimestamp_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardEntry_GetTimestamp_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardEntry_GetUser
// Il2CppName: ovr_LeaderboardEntry_GetUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardEntry_GetUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardEntry_GetUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardEntryArray_GetElement
// Il2CppName: ovr_LeaderboardEntryArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_LeaderboardEntryArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardEntryArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardEntryArray_GetNextUrl
// Il2CppName: ovr_LeaderboardEntryArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardEntryArray_GetNextUrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardEntryArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardEntryArray_GetNextUrl_Native
// Il2CppName: ovr_LeaderboardEntryArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardEntryArray_GetNextUrl_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardEntryArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl
// Il2CppName: ovr_LeaderboardEntryArray_GetPreviousUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardEntryArray_GetPreviousUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl_Native
// Il2CppName: ovr_LeaderboardEntryArray_GetPreviousUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardEntryArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardEntryArray_GetSize
// Il2CppName: ovr_LeaderboardEntryArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardEntryArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardEntryArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardEntryArray_GetTotalCount
// Il2CppName: ovr_LeaderboardEntryArray_GetTotalCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardEntryArray_GetTotalCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardEntryArray_GetTotalCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardEntryArray_HasNextPage
// Il2CppName: ovr_LeaderboardEntryArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardEntryArray_HasNextPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardEntryArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardEntryArray_HasPreviousPage
// Il2CppName: ovr_LeaderboardEntryArray_HasPreviousPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardEntryArray_HasPreviousPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardEntryArray_HasPreviousPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardUpdateStatus_GetDidUpdate
// Il2CppName: ovr_LeaderboardUpdateStatus_GetDidUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardUpdateStatus_GetDidUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardUpdateStatus_GetDidUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId
// Il2CppName: ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, uint)>(&CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize
// Il2CppName: ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr)>(&CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LinkedAccount_GetAccessToken
// Il2CppName: ovr_LinkedAccount_GetAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_LinkedAccount_GetAccessToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LinkedAccount_GetAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LinkedAccount_GetAccessToken_Native
// Il2CppName: ovr_LinkedAccount_GetAccessToken_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_LinkedAccount_GetAccessToken_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LinkedAccount_GetAccessToken_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LinkedAccount_GetServiceProvider
// Il2CppName: ovr_LinkedAccount_GetServiceProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::ServiceProvider (*)(System::IntPtr)>(&CAPI::ovr_LinkedAccount_GetServiceProvider)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LinkedAccount_GetServiceProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LinkedAccount_GetUserId
// Il2CppName: ovr_LinkedAccount_GetUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_LinkedAccount_GetUserId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LinkedAccount_GetUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LinkedAccount_GetUserId_Native
// Il2CppName: ovr_LinkedAccount_GetUserId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_LinkedAccount_GetUserId_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LinkedAccount_GetUserId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LinkedAccountArray_GetElement
// Il2CppName: ovr_LinkedAccountArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_LinkedAccountArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LinkedAccountArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LinkedAccountArray_GetSize
// Il2CppName: ovr_LinkedAccountArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_LinkedAccountArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LinkedAccountArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LivestreamingApplicationStatus_GetStreamingEnabled
// Il2CppName: ovr_LivestreamingApplicationStatus_GetStreamingEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_LivestreamingApplicationStatus_GetStreamingEnabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LivestreamingApplicationStatus_GetStreamingEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LivestreamingStartResult_GetStreamingResult
// Il2CppName: ovr_LivestreamingStartResult_GetStreamingResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::LivestreamingStartStatus (*)(System::IntPtr)>(&CAPI::ovr_LivestreamingStartResult_GetStreamingResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LivestreamingStartResult_GetStreamingResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LivestreamingStatus_GetCommentsVisible
// Il2CppName: ovr_LivestreamingStatus_GetCommentsVisible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_LivestreamingStatus_GetCommentsVisible)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LivestreamingStatus_GetCommentsVisible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LivestreamingStatus_GetIsPaused
// Il2CppName: ovr_LivestreamingStatus_GetIsPaused
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_LivestreamingStatus_GetIsPaused)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LivestreamingStatus_GetIsPaused", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LivestreamingStatus_GetLivestreamingEnabled
// Il2CppName: ovr_LivestreamingStatus_GetLivestreamingEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_LivestreamingStatus_GetLivestreamingEnabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LivestreamingStatus_GetLivestreamingEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LivestreamingStatus_GetLivestreamingType
// Il2CppName: ovr_LivestreamingStatus_GetLivestreamingType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr)>(&CAPI::ovr_LivestreamingStatus_GetLivestreamingType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LivestreamingStatus_GetLivestreamingType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LivestreamingStatus_GetMicEnabled
// Il2CppName: ovr_LivestreamingStatus_GetMicEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_LivestreamingStatus_GetMicEnabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LivestreamingStatus_GetMicEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LivestreamingVideoStats_GetCommentCount
// Il2CppName: ovr_LivestreamingVideoStats_GetCommentCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr)>(&CAPI::ovr_LivestreamingVideoStats_GetCommentCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LivestreamingVideoStats_GetCommentCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LivestreamingVideoStats_GetReactionCount
// Il2CppName: ovr_LivestreamingVideoStats_GetReactionCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr)>(&CAPI::ovr_LivestreamingVideoStats_GetReactionCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LivestreamingVideoStats_GetReactionCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LivestreamingVideoStats_GetTotalViews
// Il2CppName: ovr_LivestreamingVideoStats_GetTotalViews
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_LivestreamingVideoStats_GetTotalViews)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LivestreamingVideoStats_GetTotalViews", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_LivestreamingVideoStats_GetTotalViews_Native
// Il2CppName: ovr_LivestreamingVideoStats_GetTotalViews_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_LivestreamingVideoStats_GetTotalViews_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_LivestreamingVideoStats_GetTotalViews_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingAdminSnapshot_GetCandidates
// Il2CppName: ovr_MatchmakingAdminSnapshot_GetCandidates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingAdminSnapshot_GetCandidates)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingAdminSnapshot_GetCandidates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold
// Il2CppName: ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch
// Il2CppName: ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore
// Il2CppName: ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold
// Il2CppName: ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore
// Il2CppName: ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId
// Il2CppName: ovr_MatchmakingAdminSnapshotCandidate_GetTraceId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingAdminSnapshotCandidate_GetTraceId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native
// Il2CppName: ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetElement
// Il2CppName: ovr_MatchmakingAdminSnapshotCandidateArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingAdminSnapshotCandidateArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetSize
// Il2CppName: ovr_MatchmakingAdminSnapshotCandidateArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingAdminSnapshotCandidateArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingBrowseResult_GetEnqueueResult
// Il2CppName: ovr_MatchmakingBrowseResult_GetEnqueueResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingBrowseResult_GetEnqueueResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingBrowseResult_GetEnqueueResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingBrowseResult_GetRooms
// Il2CppName: ovr_MatchmakingBrowseResult_GetRooms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingBrowseResult_GetRooms)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingBrowseResult_GetRooms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingCandidate_GetEntryHash
// Il2CppName: ovr_MatchmakingCandidate_GetEntryHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingCandidate_GetEntryHash)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingCandidate_GetEntryHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingCandidate_GetEntryHash_Native
// Il2CppName: ovr_MatchmakingCandidate_GetEntryHash_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingCandidate_GetEntryHash_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingCandidate_GetEntryHash_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingCandidate_GetUserId
// Il2CppName: ovr_MatchmakingCandidate_GetUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingCandidate_GetUserId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingCandidate_GetUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingCandidateArray_GetElement
// Il2CppName: ovr_MatchmakingCandidateArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_MatchmakingCandidateArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingCandidateArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingCandidateArray_GetNextUrl
// Il2CppName: ovr_MatchmakingCandidateArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingCandidateArray_GetNextUrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingCandidateArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingCandidateArray_GetNextUrl_Native
// Il2CppName: ovr_MatchmakingCandidateArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingCandidateArray_GetNextUrl_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingCandidateArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingCandidateArray_GetSize
// Il2CppName: ovr_MatchmakingCandidateArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingCandidateArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingCandidateArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingCandidateArray_HasNextPage
// Il2CppName: ovr_MatchmakingCandidateArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingCandidateArray_HasNextPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingCandidateArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingEnqueueResult_GetAdminSnapshot
// Il2CppName: ovr_MatchmakingEnqueueResult_GetAdminSnapshot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingEnqueueResult_GetAdminSnapshot)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingEnqueueResult_GetAdminSnapshot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingEnqueueResult_GetAverageWait
// Il2CppName: ovr_MatchmakingEnqueueResult_GetAverageWait
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingEnqueueResult_GetAverageWait)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingEnqueueResult_GetAverageWait", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount
// Il2CppName: ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingEnqueueResult_GetMaxExpectedWait
// Il2CppName: ovr_MatchmakingEnqueueResult_GetMaxExpectedWait
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingEnqueueResult_GetMaxExpectedWait)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingEnqueueResult_GetMaxExpectedWait", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingEnqueueResult_GetPool
// Il2CppName: ovr_MatchmakingEnqueueResult_GetPool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingEnqueueResult_GetPool)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingEnqueueResult_GetPool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingEnqueueResult_GetPool_Native
// Il2CppName: ovr_MatchmakingEnqueueResult_GetPool_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingEnqueueResult_GetPool_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingEnqueueResult_GetPool_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage
// Il2CppName: ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash
// Il2CppName: ovr_MatchmakingEnqueueResult_GetRequestHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingEnqueueResult_GetRequestHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash_Native
// Il2CppName: ovr_MatchmakingEnqueueResult_GetRequestHash_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingEnqueueResult_GetRequestHash_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult
// Il2CppName: ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetRoom
// Il2CppName: ovr_MatchmakingEnqueueResultAndRoom_GetRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingEnqueueResultAndRoom_GetRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserID
// Il2CppName: ovr_MatchmakingEnqueuedUser_GetAdditionalUserID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr, uint)>(&CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingEnqueuedUser_GetAdditionalUserID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize
// Il2CppName: ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingEnqueuedUser_GetCustomData
// Il2CppName: ovr_MatchmakingEnqueuedUser_GetCustomData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingEnqueuedUser_GetCustomData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingEnqueuedUser_GetCustomData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingEnqueuedUser_GetUser
// Il2CppName: ovr_MatchmakingEnqueuedUser_GetUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingEnqueuedUser_GetUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingEnqueuedUser_GetUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingEnqueuedUserArray_GetElement
// Il2CppName: ovr_MatchmakingEnqueuedUserArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_MatchmakingEnqueuedUserArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingEnqueuedUserArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingEnqueuedUserArray_GetSize
// Il2CppName: ovr_MatchmakingEnqueuedUserArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingEnqueuedUserArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingEnqueuedUserArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingNotification_GetAddedByUserId
// Il2CppName: ovr_MatchmakingNotification_GetAddedByUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingNotification_GetAddedByUserId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingNotification_GetAddedByUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingNotification_GetRoom
// Il2CppName: ovr_MatchmakingNotification_GetRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingNotification_GetRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingNotification_GetRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingNotification_GetTraceId
// Il2CppName: ovr_MatchmakingNotification_GetTraceId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingNotification_GetTraceId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingNotification_GetTraceId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingNotification_GetTraceId_Native
// Il2CppName: ovr_MatchmakingNotification_GetTraceId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingNotification_GetTraceId_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingNotification_GetTraceId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingRoom_GetPingTime
// Il2CppName: ovr_MatchmakingRoom_GetPingTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingRoom_GetPingTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingRoom_GetPingTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingRoom_GetRoom
// Il2CppName: ovr_MatchmakingRoom_GetRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingRoom_GetRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingRoom_GetRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingRoom_HasPingTime
// Il2CppName: ovr_MatchmakingRoom_HasPingTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingRoom_HasPingTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingRoom_HasPingTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingRoomArray_GetElement
// Il2CppName: ovr_MatchmakingRoomArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_MatchmakingRoomArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingRoomArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingRoomArray_GetSize
// Il2CppName: ovr_MatchmakingRoomArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingRoomArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingRoomArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingStats_GetDrawCount
// Il2CppName: ovr_MatchmakingStats_GetDrawCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingStats_GetDrawCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingStats_GetDrawCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingStats_GetLossCount
// Il2CppName: ovr_MatchmakingStats_GetLossCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingStats_GetLossCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingStats_GetLossCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingStats_GetSkillLevel
// Il2CppName: ovr_MatchmakingStats_GetSkillLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingStats_GetSkillLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingStats_GetSkillLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingStats_GetSkillMean
// Il2CppName: ovr_MatchmakingStats_GetSkillMean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingStats_GetSkillMean)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingStats_GetSkillMean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingStats_GetSkillStandardDeviation
// Il2CppName: ovr_MatchmakingStats_GetSkillStandardDeviation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingStats_GetSkillStandardDeviation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingStats_GetSkillStandardDeviation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingStats_GetWinCount
// Il2CppName: ovr_MatchmakingStats_GetWinCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingStats_GetWinCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingStats_GetWinCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetAbuseReportRecording
// Il2CppName: ovr_Message_GetAbuseReportRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetAbuseReportRecording)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetAbuseReportRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetAchievementDefinitionArray
// Il2CppName: ovr_Message_GetAchievementDefinitionArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetAchievementDefinitionArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetAchievementDefinitionArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetAchievementProgressArray
// Il2CppName: ovr_Message_GetAchievementProgressArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetAchievementProgressArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetAchievementProgressArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetAchievementUpdate
// Il2CppName: ovr_Message_GetAchievementUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetAchievementUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetAchievementUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetApplicationVersion
// Il2CppName: ovr_Message_GetApplicationVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetApplicationVersion)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetApplicationVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetAssetDetails
// Il2CppName: ovr_Message_GetAssetDetails
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetAssetDetails)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetAssetDetails", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetAssetDetailsArray
// Il2CppName: ovr_Message_GetAssetDetailsArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetAssetDetailsArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetAssetDetailsArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetAssetFileDeleteResult
// Il2CppName: ovr_Message_GetAssetFileDeleteResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetAssetFileDeleteResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetAssetFileDeleteResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetAssetFileDownloadCancelResult
// Il2CppName: ovr_Message_GetAssetFileDownloadCancelResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetAssetFileDownloadCancelResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetAssetFileDownloadCancelResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetAssetFileDownloadResult
// Il2CppName: ovr_Message_GetAssetFileDownloadResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetAssetFileDownloadResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetAssetFileDownloadResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetAssetFileDownloadUpdate
// Il2CppName: ovr_Message_GetAssetFileDownloadUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetAssetFileDownloadUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetAssetFileDownloadUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetCalApplicationFinalized
// Il2CppName: ovr_Message_GetCalApplicationFinalized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetCalApplicationFinalized)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetCalApplicationFinalized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetCalApplicationProposed
// Il2CppName: ovr_Message_GetCalApplicationProposed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetCalApplicationProposed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetCalApplicationProposed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetCalApplicationSuggestionArray
// Il2CppName: ovr_Message_GetCalApplicationSuggestionArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetCalApplicationSuggestionArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetCalApplicationSuggestionArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetChallenge
// Il2CppName: ovr_Message_GetChallenge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetChallenge)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetChallenge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetChallengeArray
// Il2CppName: ovr_Message_GetChallengeArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetChallengeArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetChallengeArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetChallengeEntryArray
// Il2CppName: ovr_Message_GetChallengeEntryArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetChallengeEntryArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetChallengeEntryArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetCloudStorageConflictMetadata
// Il2CppName: ovr_Message_GetCloudStorageConflictMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetCloudStorageConflictMetadata)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetCloudStorageConflictMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetCloudStorageData
// Il2CppName: ovr_Message_GetCloudStorageData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetCloudStorageData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetCloudStorageData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetCloudStorageMetadata
// Il2CppName: ovr_Message_GetCloudStorageMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetCloudStorageMetadata)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetCloudStorageMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetCloudStorageMetadataArray
// Il2CppName: ovr_Message_GetCloudStorageMetadataArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetCloudStorageMetadataArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetCloudStorageMetadataArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetCloudStorageUpdateResponse
// Il2CppName: ovr_Message_GetCloudStorageUpdateResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetCloudStorageUpdateResponse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetCloudStorageUpdateResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetDataStore
// Il2CppName: ovr_Message_GetDataStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetDataStore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetDataStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetDestinationArray
// Il2CppName: ovr_Message_GetDestinationArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetDestinationArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetDestinationArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetError
// Il2CppName: ovr_Message_GetError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetError)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetGroupPresenceLeaveIntent
// Il2CppName: ovr_Message_GetGroupPresenceLeaveIntent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetGroupPresenceLeaveIntent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetGroupPresenceLeaveIntent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetHttpTransferUpdate
// Il2CppName: ovr_Message_GetHttpTransferUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetHttpTransferUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetHttpTransferUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetInstalledApplicationArray
// Il2CppName: ovr_Message_GetInstalledApplicationArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetInstalledApplicationArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetInstalledApplicationArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetInvitePanelResultInfo
// Il2CppName: ovr_Message_GetInvitePanelResultInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetInvitePanelResultInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetInvitePanelResultInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetLaunchBlockFlowResult
// Il2CppName: ovr_Message_GetLaunchBlockFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetLaunchBlockFlowResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetLaunchBlockFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetLaunchFriendRequestFlowResult
// Il2CppName: ovr_Message_GetLaunchFriendRequestFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetLaunchFriendRequestFlowResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetLaunchFriendRequestFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetLaunchInvitePanelFlowResult
// Il2CppName: ovr_Message_GetLaunchInvitePanelFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetLaunchInvitePanelFlowResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetLaunchInvitePanelFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetLaunchReportFlowResult
// Il2CppName: ovr_Message_GetLaunchReportFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetLaunchReportFlowResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetLaunchReportFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetLaunchUnblockFlowResult
// Il2CppName: ovr_Message_GetLaunchUnblockFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetLaunchUnblockFlowResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetLaunchUnblockFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetLeaderboardArray
// Il2CppName: ovr_Message_GetLeaderboardArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetLeaderboardArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetLeaderboardArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetLeaderboardEntryArray
// Il2CppName: ovr_Message_GetLeaderboardEntryArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetLeaderboardEntryArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetLeaderboardEntryArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetLeaderboardUpdateStatus
// Il2CppName: ovr_Message_GetLeaderboardUpdateStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetLeaderboardUpdateStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetLeaderboardUpdateStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetLinkedAccountArray
// Il2CppName: ovr_Message_GetLinkedAccountArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetLinkedAccountArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetLinkedAccountArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetLivestreamingApplicationStatus
// Il2CppName: ovr_Message_GetLivestreamingApplicationStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetLivestreamingApplicationStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetLivestreamingApplicationStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetLivestreamingStartResult
// Il2CppName: ovr_Message_GetLivestreamingStartResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetLivestreamingStartResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetLivestreamingStartResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetLivestreamingStatus
// Il2CppName: ovr_Message_GetLivestreamingStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetLivestreamingStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetLivestreamingStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetLivestreamingVideoStats
// Il2CppName: ovr_Message_GetLivestreamingVideoStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetLivestreamingVideoStats)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetLivestreamingVideoStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetMatchmakingAdminSnapshot
// Il2CppName: ovr_Message_GetMatchmakingAdminSnapshot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetMatchmakingAdminSnapshot)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetMatchmakingAdminSnapshot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetMatchmakingBrowseResult
// Il2CppName: ovr_Message_GetMatchmakingBrowseResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetMatchmakingBrowseResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetMatchmakingBrowseResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetMatchmakingEnqueueResult
// Il2CppName: ovr_Message_GetMatchmakingEnqueueResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetMatchmakingEnqueueResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetMatchmakingEnqueueResultAndRoom
// Il2CppName: ovr_Message_GetMatchmakingEnqueueResultAndRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetMatchmakingEnqueueResultAndRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetMatchmakingEnqueueResultAndRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetMatchmakingRoomArray
// Il2CppName: ovr_Message_GetMatchmakingRoomArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetMatchmakingRoomArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetMatchmakingRoomArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetMatchmakingStats
// Il2CppName: ovr_Message_GetMatchmakingStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetMatchmakingStats)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetMatchmakingStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetNativeMessage
// Il2CppName: ovr_Message_GetNativeMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetNativeMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetNativeMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetNetSyncConnection
// Il2CppName: ovr_Message_GetNetSyncConnection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetNetSyncConnection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetNetSyncConnection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetNetSyncSessionArray
// Il2CppName: ovr_Message_GetNetSyncSessionArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetNetSyncSessionArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetNetSyncSessionArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetNetSyncSessionsChangedNotification
// Il2CppName: ovr_Message_GetNetSyncSessionsChangedNotification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetNetSyncSessionsChangedNotification)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetNetSyncSessionsChangedNotification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetNetSyncSetSessionPropertyResult
// Il2CppName: ovr_Message_GetNetSyncSetSessionPropertyResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetNetSyncSetSessionPropertyResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetNetSyncSetSessionPropertyResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetNetSyncVoipAttenuationValueArray
// Il2CppName: ovr_Message_GetNetSyncVoipAttenuationValueArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetNetSyncVoipAttenuationValueArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetNetSyncVoipAttenuationValueArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetNetworkingPeer
// Il2CppName: ovr_Message_GetNetworkingPeer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetNetworkingPeer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetNetworkingPeer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetOrgScopedID
// Il2CppName: ovr_Message_GetOrgScopedID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetOrgScopedID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetOrgScopedID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetParty
// Il2CppName: ovr_Message_GetParty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetParty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetParty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetPartyID
// Il2CppName: ovr_Message_GetPartyID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetPartyID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetPartyID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetPartyUpdateNotification
// Il2CppName: ovr_Message_GetPartyUpdateNotification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetPartyUpdateNotification)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetPartyUpdateNotification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetPidArray
// Il2CppName: ovr_Message_GetPidArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetPidArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetPidArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetPingResult
// Il2CppName: ovr_Message_GetPingResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetPingResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetPingResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetPlatformInitialize
// Il2CppName: ovr_Message_GetPlatformInitialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetPlatformInitialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetPlatformInitialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetProductArray
// Il2CppName: ovr_Message_GetProductArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetProductArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetProductArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetPurchase
// Il2CppName: ovr_Message_GetPurchase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetPurchase)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetPurchase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetPurchaseArray
// Il2CppName: ovr_Message_GetPurchaseArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetPurchaseArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetPurchaseArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetRequestID
// Il2CppName: ovr_Message_GetRequestID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Message_GetRequestID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetRequestID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetRoom
// Il2CppName: ovr_Message_GetRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetRoomArray
// Il2CppName: ovr_Message_GetRoomArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetRoomArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetRoomArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetRoomInviteNotification
// Il2CppName: ovr_Message_GetRoomInviteNotification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetRoomInviteNotification)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetRoomInviteNotification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetRoomInviteNotificationArray
// Il2CppName: ovr_Message_GetRoomInviteNotificationArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetRoomInviteNotificationArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetRoomInviteNotificationArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetSdkAccountArray
// Il2CppName: ovr_Message_GetSdkAccountArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetSdkAccountArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetSdkAccountArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetShareMediaResult
// Il2CppName: ovr_Message_GetShareMediaResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetShareMediaResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetShareMediaResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetString
// Il2CppName: ovr_Message_GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Message_GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetString_Native
// Il2CppName: ovr_Message_GetString_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetString_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetString_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetSystemPermission
// Il2CppName: ovr_Message_GetSystemPermission
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetSystemPermission)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetSystemPermission", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetSystemVoipState
// Il2CppName: ovr_Message_GetSystemVoipState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetSystemVoipState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetSystemVoipState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetType
// Il2CppName: ovr_Message_GetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Message::MessageType (*)(System::IntPtr)>(&CAPI::ovr_Message_GetType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetUser
// Il2CppName: ovr_Message_GetUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetUserAndRoomArray
// Il2CppName: ovr_Message_GetUserAndRoomArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetUserAndRoomArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetUserAndRoomArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetUserArray
// Il2CppName: ovr_Message_GetUserArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetUserArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetUserArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetUserDataStoreUpdateResponse
// Il2CppName: ovr_Message_GetUserDataStoreUpdateResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetUserDataStoreUpdateResponse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetUserDataStoreUpdateResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetUserProof
// Il2CppName: ovr_Message_GetUserProof
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetUserProof)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetUserProof", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_GetUserReportID
// Il2CppName: ovr_Message_GetUserReportID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Message_GetUserReportID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_GetUserReportID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Message_IsError
// Il2CppName: ovr_Message_IsError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_Message_IsError)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Message_IsError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Microphone_GetNumSamplesAvailable
// Il2CppName: ovr_Microphone_GetNumSamplesAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_Microphone_GetNumSamplesAvailable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Microphone_GetNumSamplesAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Microphone_GetOutputBufferMaxSize
// Il2CppName: ovr_Microphone_GetOutputBufferMaxSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_Microphone_GetOutputBufferMaxSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Microphone_GetOutputBufferMaxSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Microphone_GetPCM
// Il2CppName: ovr_Microphone_GetPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr, ::Array<int16_t>*, System::UIntPtr)>(&CAPI::ovr_Microphone_GetPCM)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Microphone_GetPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Array<int16_t>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Microphone_GetPCMFloat
// Il2CppName: ovr_Microphone_GetPCMFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr, ::Array<float>*, System::UIntPtr)>(&CAPI::ovr_Microphone_GetPCMFloat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Microphone_GetPCMFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Microphone_ReadData
// Il2CppName: ovr_Microphone_ReadData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr, ::Array<float>*, System::UIntPtr)>(&CAPI::ovr_Microphone_ReadData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Microphone_ReadData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Microphone_SetAcceptableRecordingDelayHint
// Il2CppName: ovr_Microphone_SetAcceptableRecordingDelayHint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_Microphone_SetAcceptableRecordingDelayHint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Microphone_SetAcceptableRecordingDelayHint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Microphone_Start
// Il2CppName: ovr_Microphone_Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_Microphone_Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Microphone_Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Microphone_Stop
// Il2CppName: ovr_Microphone_Stop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_Microphone_Stop)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Microphone_Stop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncConnection_GetConnectionId
// Il2CppName: ovr_NetSyncConnection_GetConnectionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(System::IntPtr)>(&CAPI::ovr_NetSyncConnection_GetConnectionId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncConnection_GetConnectionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncConnection_GetDisconnectReason
// Il2CppName: ovr_NetSyncConnection_GetDisconnectReason
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::NetSyncDisconnectReason (*)(System::IntPtr)>(&CAPI::ovr_NetSyncConnection_GetDisconnectReason)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncConnection_GetDisconnectReason", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncConnection_GetSessionId
// Il2CppName: ovr_NetSyncConnection_GetSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_NetSyncConnection_GetSessionId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncConnection_GetSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncConnection_GetStatus
// Il2CppName: ovr_NetSyncConnection_GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::NetSyncConnectionStatus (*)(System::IntPtr)>(&CAPI::ovr_NetSyncConnection_GetStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncConnection_GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncConnection_GetZoneId
// Il2CppName: ovr_NetSyncConnection_GetZoneId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_NetSyncConnection_GetZoneId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncConnection_GetZoneId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncConnection_GetZoneId_Native
// Il2CppName: ovr_NetSyncConnection_GetZoneId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_NetSyncConnection_GetZoneId_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncConnection_GetZoneId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncSession_GetConnectionId
// Il2CppName: ovr_NetSyncSession_GetConnectionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(System::IntPtr)>(&CAPI::ovr_NetSyncSession_GetConnectionId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncSession_GetConnectionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncSession_GetMuted
// Il2CppName: ovr_NetSyncSession_GetMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_NetSyncSession_GetMuted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncSession_GetMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncSession_GetSessionId
// Il2CppName: ovr_NetSyncSession_GetSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_NetSyncSession_GetSessionId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncSession_GetSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncSession_GetUserId
// Il2CppName: ovr_NetSyncSession_GetUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_NetSyncSession_GetUserId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncSession_GetUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncSession_GetVoipGroup
// Il2CppName: ovr_NetSyncSession_GetVoipGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_NetSyncSession_GetVoipGroup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncSession_GetVoipGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncSession_GetVoipGroup_Native
// Il2CppName: ovr_NetSyncSession_GetVoipGroup_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_NetSyncSession_GetVoipGroup_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncSession_GetVoipGroup_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncSessionArray_GetElement
// Il2CppName: ovr_NetSyncSessionArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_NetSyncSessionArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncSessionArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncSessionArray_GetSize
// Il2CppName: ovr_NetSyncSessionArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_NetSyncSessionArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncSessionArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncSessionsChangedNotification_GetConnectionId
// Il2CppName: ovr_NetSyncSessionsChangedNotification_GetConnectionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(System::IntPtr)>(&CAPI::ovr_NetSyncSessionsChangedNotification_GetConnectionId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncSessionsChangedNotification_GetConnectionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncSessionsChangedNotification_GetSessions
// Il2CppName: ovr_NetSyncSessionsChangedNotification_GetSessions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_NetSyncSessionsChangedNotification_GetSessions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncSessionsChangedNotification_GetSessions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncSetSessionPropertyResult_GetSession
// Il2CppName: ovr_NetSyncSetSessionPropertyResult_GetSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_NetSyncSetSessionPropertyResult_GetSession)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncSetSessionPropertyResult_GetSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncVoipAttenuationValue_GetDecibels
// Il2CppName: ovr_NetSyncVoipAttenuationValue_GetDecibels
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(System::IntPtr)>(&CAPI::ovr_NetSyncVoipAttenuationValue_GetDecibels)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncVoipAttenuationValue_GetDecibels", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncVoipAttenuationValue_GetDistance
// Il2CppName: ovr_NetSyncVoipAttenuationValue_GetDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(System::IntPtr)>(&CAPI::ovr_NetSyncVoipAttenuationValue_GetDistance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncVoipAttenuationValue_GetDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncVoipAttenuationValueArray_GetElement
// Il2CppName: ovr_NetSyncVoipAttenuationValueArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_NetSyncVoipAttenuationValueArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncVoipAttenuationValueArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncVoipAttenuationValueArray_GetSize
// Il2CppName: ovr_NetSyncVoipAttenuationValueArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_NetSyncVoipAttenuationValueArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncVoipAttenuationValueArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetworkingPeer_GetID
// Il2CppName: ovr_NetworkingPeer_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_NetworkingPeer_GetID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetworkingPeer_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetworkingPeer_GetState
// Il2CppName: ovr_NetworkingPeer_GetState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::PeerConnectionState (*)(System::IntPtr)>(&CAPI::ovr_NetworkingPeer_GetState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetworkingPeer_GetState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_OrgScopedID_GetID
// Il2CppName: ovr_OrgScopedID_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_OrgScopedID_GetID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_OrgScopedID_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Packet_Free
// Il2CppName: ovr_Packet_Free
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_Packet_Free)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Packet_Free", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Packet_GetBytes
// Il2CppName: ovr_Packet_GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Packet_GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Packet_GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Packet_GetSendPolicy
// Il2CppName: ovr_Packet_GetSendPolicy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::SendPolicy (*)(System::IntPtr)>(&CAPI::ovr_Packet_GetSendPolicy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Packet_GetSendPolicy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Packet_GetSenderID
// Il2CppName: ovr_Packet_GetSenderID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Packet_GetSenderID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Packet_GetSenderID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Packet_GetSize
// Il2CppName: ovr_Packet_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_Packet_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Packet_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Party_GetID
// Il2CppName: ovr_Party_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Party_GetID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Party_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Party_GetInvitedUsers
// Il2CppName: ovr_Party_GetInvitedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Party_GetInvitedUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Party_GetInvitedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Party_GetLeader
// Il2CppName: ovr_Party_GetLeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Party_GetLeader)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Party_GetLeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Party_GetRoom
// Il2CppName: ovr_Party_GetRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Party_GetRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Party_GetRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Party_GetUsers
// Il2CppName: ovr_Party_GetUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Party_GetUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Party_GetUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PartyID_GetID
// Il2CppName: ovr_PartyID_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_PartyID_GetID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PartyID_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PartyUpdateNotification_GetAction
// Il2CppName: ovr_PartyUpdateNotification_GetAction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::PartyUpdateAction (*)(System::IntPtr)>(&CAPI::ovr_PartyUpdateNotification_GetAction)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PartyUpdateNotification_GetAction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PartyUpdateNotification_GetPartyId
// Il2CppName: ovr_PartyUpdateNotification_GetPartyId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_PartyUpdateNotification_GetPartyId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PartyUpdateNotification_GetPartyId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PartyUpdateNotification_GetSenderId
// Il2CppName: ovr_PartyUpdateNotification_GetSenderId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_PartyUpdateNotification_GetSenderId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PartyUpdateNotification_GetSenderId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp
// Il2CppName: ovr_PartyUpdateNotification_GetUpdateTimestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PartyUpdateNotification_GetUpdateTimestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp_Native
// Il2CppName: ovr_PartyUpdateNotification_GetUpdateTimestamp_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PartyUpdateNotification_GetUpdateTimestamp_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PartyUpdateNotification_GetUserAlias
// Il2CppName: ovr_PartyUpdateNotification_GetUserAlias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_PartyUpdateNotification_GetUserAlias)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PartyUpdateNotification_GetUserAlias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PartyUpdateNotification_GetUserAlias_Native
// Il2CppName: ovr_PartyUpdateNotification_GetUserAlias_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_PartyUpdateNotification_GetUserAlias_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PartyUpdateNotification_GetUserAlias_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PartyUpdateNotification_GetUserId
// Il2CppName: ovr_PartyUpdateNotification_GetUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_PartyUpdateNotification_GetUserId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PartyUpdateNotification_GetUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PartyUpdateNotification_GetUserName
// Il2CppName: ovr_PartyUpdateNotification_GetUserName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_PartyUpdateNotification_GetUserName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PartyUpdateNotification_GetUserName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PartyUpdateNotification_GetUserName_Native
// Il2CppName: ovr_PartyUpdateNotification_GetUserName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_PartyUpdateNotification_GetUserName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PartyUpdateNotification_GetUserName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Pid_GetId
// Il2CppName: ovr_Pid_GetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Pid_GetId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Pid_GetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Pid_GetId_Native
// Il2CppName: ovr_Pid_GetId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Pid_GetId_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Pid_GetId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PidArray_GetElement
// Il2CppName: ovr_PidArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_PidArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PidArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PidArray_GetSize
// Il2CppName: ovr_PidArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_PidArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PidArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PingResult_GetID
// Il2CppName: ovr_PingResult_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_PingResult_GetID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PingResult_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PingResult_GetPingTimeUsec
// Il2CppName: ovr_PingResult_GetPingTimeUsec
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_PingResult_GetPingTimeUsec)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PingResult_GetPingTimeUsec", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PingResult_IsTimeout
// Il2CppName: ovr_PingResult_IsTimeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_PingResult_IsTimeout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PingResult_IsTimeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PlatformInitialize_GetResult
// Il2CppName: ovr_PlatformInitialize_GetResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::PlatformInitializeResult (*)(System::IntPtr)>(&CAPI::ovr_PlatformInitialize_GetResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PlatformInitialize_GetResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Price_GetAmountInHundredths
// Il2CppName: ovr_Price_GetAmountInHundredths
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr)>(&CAPI::ovr_Price_GetAmountInHundredths)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Price_GetAmountInHundredths", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Price_GetCurrency
// Il2CppName: ovr_Price_GetCurrency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Price_GetCurrency)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Price_GetCurrency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Price_GetCurrency_Native
// Il2CppName: ovr_Price_GetCurrency_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Price_GetCurrency_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Price_GetCurrency_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Price_GetFormatted
// Il2CppName: ovr_Price_GetFormatted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Price_GetFormatted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Price_GetFormatted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Price_GetFormatted_Native
// Il2CppName: ovr_Price_GetFormatted_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Price_GetFormatted_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Price_GetFormatted_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Product_GetDescription
// Il2CppName: ovr_Product_GetDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Product_GetDescription)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Product_GetDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Product_GetDescription_Native
// Il2CppName: ovr_Product_GetDescription_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Product_GetDescription_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Product_GetDescription_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Product_GetFormattedPrice
// Il2CppName: ovr_Product_GetFormattedPrice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Product_GetFormattedPrice)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Product_GetFormattedPrice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Product_GetFormattedPrice_Native
// Il2CppName: ovr_Product_GetFormattedPrice_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Product_GetFormattedPrice_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Product_GetFormattedPrice_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Product_GetName
// Il2CppName: ovr_Product_GetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Product_GetName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Product_GetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Product_GetName_Native
// Il2CppName: ovr_Product_GetName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Product_GetName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Product_GetName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Product_GetSKU
// Il2CppName: ovr_Product_GetSKU
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Product_GetSKU)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Product_GetSKU", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Product_GetSKU_Native
// Il2CppName: ovr_Product_GetSKU_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Product_GetSKU_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Product_GetSKU_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ProductArray_GetElement
// Il2CppName: ovr_ProductArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_ProductArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ProductArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ProductArray_GetNextUrl
// Il2CppName: ovr_ProductArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_ProductArray_GetNextUrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ProductArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ProductArray_GetNextUrl_Native
// Il2CppName: ovr_ProductArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_ProductArray_GetNextUrl_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ProductArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ProductArray_GetSize
// Il2CppName: ovr_ProductArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_ProductArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ProductArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ProductArray_HasNextPage
// Il2CppName: ovr_ProductArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_ProductArray_HasNextPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ProductArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Purchase_GetExpirationTime
// Il2CppName: ovr_Purchase_GetExpirationTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (*)(System::IntPtr)>(&CAPI::ovr_Purchase_GetExpirationTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Purchase_GetExpirationTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Purchase_GetExpirationTime_Native
// Il2CppName: ovr_Purchase_GetExpirationTime_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Purchase_GetExpirationTime_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Purchase_GetExpirationTime_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Purchase_GetGrantTime
// Il2CppName: ovr_Purchase_GetGrantTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (*)(System::IntPtr)>(&CAPI::ovr_Purchase_GetGrantTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Purchase_GetGrantTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Purchase_GetGrantTime_Native
// Il2CppName: ovr_Purchase_GetGrantTime_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Purchase_GetGrantTime_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Purchase_GetGrantTime_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Purchase_GetPurchaseID
// Il2CppName: ovr_Purchase_GetPurchaseID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Purchase_GetPurchaseID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Purchase_GetPurchaseID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Purchase_GetPurchaseStrID
// Il2CppName: ovr_Purchase_GetPurchaseStrID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Purchase_GetPurchaseStrID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Purchase_GetPurchaseStrID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Purchase_GetPurchaseStrID_Native
// Il2CppName: ovr_Purchase_GetPurchaseStrID_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Purchase_GetPurchaseStrID_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Purchase_GetPurchaseStrID_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Purchase_GetSKU
// Il2CppName: ovr_Purchase_GetSKU
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Purchase_GetSKU)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Purchase_GetSKU", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Purchase_GetSKU_Native
// Il2CppName: ovr_Purchase_GetSKU_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Purchase_GetSKU_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Purchase_GetSKU_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PurchaseArray_GetElement
// Il2CppName: ovr_PurchaseArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_PurchaseArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PurchaseArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PurchaseArray_GetNextUrl
// Il2CppName: ovr_PurchaseArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_PurchaseArray_GetNextUrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PurchaseArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PurchaseArray_GetNextUrl_Native
// Il2CppName: ovr_PurchaseArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_PurchaseArray_GetNextUrl_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PurchaseArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PurchaseArray_GetSize
// Il2CppName: ovr_PurchaseArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_PurchaseArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PurchaseArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_PurchaseArray_HasNextPage
// Il2CppName: ovr_PurchaseArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_PurchaseArray_HasNextPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_PurchaseArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetApplicationID
// Il2CppName: ovr_Room_GetApplicationID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Room_GetApplicationID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetApplicationID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetDataStore
// Il2CppName: ovr_Room_GetDataStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Room_GetDataStore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetDataStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetDescription
// Il2CppName: ovr_Room_GetDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Room_GetDescription)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetDescription_Native
// Il2CppName: ovr_Room_GetDescription_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Room_GetDescription_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetDescription_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetID
// Il2CppName: ovr_Room_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_Room_GetID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetInvitedUsers
// Il2CppName: ovr_Room_GetInvitedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Room_GetInvitedUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetInvitedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetIsMembershipLocked
// Il2CppName: ovr_Room_GetIsMembershipLocked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_Room_GetIsMembershipLocked)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetIsMembershipLocked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetJoinPolicy
// Il2CppName: ovr_Room_GetJoinPolicy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::RoomJoinPolicy (*)(System::IntPtr)>(&CAPI::ovr_Room_GetJoinPolicy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetJoinPolicy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetJoinability
// Il2CppName: ovr_Room_GetJoinability
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::RoomJoinability (*)(System::IntPtr)>(&CAPI::ovr_Room_GetJoinability)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetJoinability", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetMatchedUsers
// Il2CppName: ovr_Room_GetMatchedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Room_GetMatchedUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetMatchedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetMaxUsers
// Il2CppName: ovr_Room_GetMaxUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr)>(&CAPI::ovr_Room_GetMaxUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetMaxUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetName
// Il2CppName: ovr_Room_GetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Room_GetName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetName_Native
// Il2CppName: ovr_Room_GetName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Room_GetName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetOwner
// Il2CppName: ovr_Room_GetOwner
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Room_GetOwner)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetOwner", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetTeams
// Il2CppName: ovr_Room_GetTeams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Room_GetTeams)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetTeams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetType
// Il2CppName: ovr_Room_GetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::RoomType (*)(System::IntPtr)>(&CAPI::ovr_Room_GetType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetUsers
// Il2CppName: ovr_Room_GetUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Room_GetUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Room_GetVersion
// Il2CppName: ovr_Room_GetVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(System::IntPtr)>(&CAPI::ovr_Room_GetVersion)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Room_GetVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomArray_GetElement
// Il2CppName: ovr_RoomArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_RoomArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomArray_GetNextUrl
// Il2CppName: ovr_RoomArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_RoomArray_GetNextUrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomArray_GetNextUrl_Native
// Il2CppName: ovr_RoomArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_RoomArray_GetNextUrl_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomArray_GetSize
// Il2CppName: ovr_RoomArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_RoomArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomArray_HasNextPage
// Il2CppName: ovr_RoomArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_RoomArray_HasNextPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomInviteNotification_GetID
// Il2CppName: ovr_RoomInviteNotification_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_RoomInviteNotification_GetID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomInviteNotification_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomInviteNotification_GetRoomID
// Il2CppName: ovr_RoomInviteNotification_GetRoomID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_RoomInviteNotification_GetRoomID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomInviteNotification_GetRoomID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomInviteNotification_GetSenderID
// Il2CppName: ovr_RoomInviteNotification_GetSenderID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_RoomInviteNotification_GetSenderID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomInviteNotification_GetSenderID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomInviteNotification_GetSentTime
// Il2CppName: ovr_RoomInviteNotification_GetSentTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (*)(System::IntPtr)>(&CAPI::ovr_RoomInviteNotification_GetSentTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomInviteNotification_GetSentTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomInviteNotification_GetSentTime_Native
// Il2CppName: ovr_RoomInviteNotification_GetSentTime_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_RoomInviteNotification_GetSentTime_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomInviteNotification_GetSentTime_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomInviteNotificationArray_GetElement
// Il2CppName: ovr_RoomInviteNotificationArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_RoomInviteNotificationArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomInviteNotificationArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomInviteNotificationArray_GetNextUrl
// Il2CppName: ovr_RoomInviteNotificationArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_RoomInviteNotificationArray_GetNextUrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomInviteNotificationArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomInviteNotificationArray_GetNextUrl_Native
// Il2CppName: ovr_RoomInviteNotificationArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_RoomInviteNotificationArray_GetNextUrl_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomInviteNotificationArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomInviteNotificationArray_GetSize
// Il2CppName: ovr_RoomInviteNotificationArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_RoomInviteNotificationArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomInviteNotificationArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomInviteNotificationArray_HasNextPage
// Il2CppName: ovr_RoomInviteNotificationArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_RoomInviteNotificationArray_HasNextPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomInviteNotificationArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_SdkAccount_GetAccountType
// Il2CppName: ovr_SdkAccount_GetAccountType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::SdkAccountType (*)(System::IntPtr)>(&CAPI::ovr_SdkAccount_GetAccountType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_SdkAccount_GetAccountType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_SdkAccount_GetUserId
// Il2CppName: ovr_SdkAccount_GetUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_SdkAccount_GetUserId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_SdkAccount_GetUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_SdkAccountArray_GetElement
// Il2CppName: ovr_SdkAccountArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_SdkAccountArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_SdkAccountArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_SdkAccountArray_GetSize
// Il2CppName: ovr_SdkAccountArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_SdkAccountArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_SdkAccountArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ShareMediaResult_GetStatus
// Il2CppName: ovr_ShareMediaResult_GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::ShareMediaStatus (*)(System::IntPtr)>(&CAPI::ovr_ShareMediaResult_GetStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ShareMediaResult_GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_SupplementaryMetric_GetID
// Il2CppName: ovr_SupplementaryMetric_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_SupplementaryMetric_GetID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_SupplementaryMetric_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_SupplementaryMetric_GetMetric
// Il2CppName: ovr_SupplementaryMetric_GetMetric
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)(System::IntPtr)>(&CAPI::ovr_SupplementaryMetric_GetMetric)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_SupplementaryMetric_GetMetric", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_SystemPermission_GetHasPermission
// Il2CppName: ovr_SystemPermission_GetHasPermission
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_SystemPermission_GetHasPermission)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_SystemPermission_GetHasPermission", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_SystemPermission_GetPermissionGrantStatus
// Il2CppName: ovr_SystemPermission_GetPermissionGrantStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::PermissionGrantStatus (*)(System::IntPtr)>(&CAPI::ovr_SystemPermission_GetPermissionGrantStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_SystemPermission_GetPermissionGrantStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_SystemVoipState_GetMicrophoneMuted
// Il2CppName: ovr_SystemVoipState_GetMicrophoneMuted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::VoipMuteState (*)(System::IntPtr)>(&CAPI::ovr_SystemVoipState_GetMicrophoneMuted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_SystemVoipState_GetMicrophoneMuted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_SystemVoipState_GetStatus
// Il2CppName: ovr_SystemVoipState_GetStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::SystemVoipStatus (*)(System::IntPtr)>(&CAPI::ovr_SystemVoipState_GetStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_SystemVoipState_GetStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Team_GetAssignedUsers
// Il2CppName: ovr_Team_GetAssignedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Team_GetAssignedUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Team_GetAssignedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Team_GetMaxUsers
// Il2CppName: ovr_Team_GetMaxUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr)>(&CAPI::ovr_Team_GetMaxUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Team_GetMaxUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Team_GetMinUsers
// Il2CppName: ovr_Team_GetMinUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr)>(&CAPI::ovr_Team_GetMinUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Team_GetMinUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Team_GetName
// Il2CppName: ovr_Team_GetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_Team_GetName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Team_GetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_Team_GetName_Native
// Il2CppName: ovr_Team_GetName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_Team_GetName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_Team_GetName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_TeamArray_GetElement
// Il2CppName: ovr_TeamArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_TeamArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_TeamArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_TeamArray_GetSize
// Il2CppName: ovr_TeamArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_TeamArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_TeamArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_TestUser_GetAccessToken
// Il2CppName: ovr_TestUser_GetAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_TestUser_GetAccessToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_TestUser_GetAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_TestUser_GetAccessToken_Native
// Il2CppName: ovr_TestUser_GetAccessToken_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_TestUser_GetAccessToken_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_TestUser_GetAccessToken_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_TestUser_GetAppAccessArray
// Il2CppName: ovr_TestUser_GetAppAccessArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_TestUser_GetAppAccessArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_TestUser_GetAppAccessArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_TestUser_GetFbAppAccessArray
// Il2CppName: ovr_TestUser_GetFbAppAccessArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_TestUser_GetFbAppAccessArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_TestUser_GetFbAppAccessArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_TestUser_GetFriendAccessToken
// Il2CppName: ovr_TestUser_GetFriendAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_TestUser_GetFriendAccessToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_TestUser_GetFriendAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_TestUser_GetFriendAccessToken_Native
// Il2CppName: ovr_TestUser_GetFriendAccessToken_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_TestUser_GetFriendAccessToken_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_TestUser_GetFriendAccessToken_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_TestUser_GetFriendAppAccessArray
// Il2CppName: ovr_TestUser_GetFriendAppAccessArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_TestUser_GetFriendAppAccessArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_TestUser_GetFriendAppAccessArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_TestUser_GetUserAlias
// Il2CppName: ovr_TestUser_GetUserAlias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_TestUser_GetUserAlias)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_TestUser_GetUserAlias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_TestUser_GetUserAlias_Native
// Il2CppName: ovr_TestUser_GetUserAlias_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_TestUser_GetUserAlias_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_TestUser_GetUserAlias_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_TestUser_GetUserFbid
// Il2CppName: ovr_TestUser_GetUserFbid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_TestUser_GetUserFbid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_TestUser_GetUserFbid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_TestUser_GetUserId
// Il2CppName: ovr_TestUser_GetUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_TestUser_GetUserId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_TestUser_GetUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_TestUserAppAccess_GetAccessToken
// Il2CppName: ovr_TestUserAppAccess_GetAccessToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_TestUserAppAccess_GetAccessToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_TestUserAppAccess_GetAccessToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_TestUserAppAccess_GetAccessToken_Native
// Il2CppName: ovr_TestUserAppAccess_GetAccessToken_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_TestUserAppAccess_GetAccessToken_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_TestUserAppAccess_GetAccessToken_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_TestUserAppAccess_GetAppId
// Il2CppName: ovr_TestUserAppAccess_GetAppId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_TestUserAppAccess_GetAppId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_TestUserAppAccess_GetAppId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_TestUserAppAccess_GetUserId
// Il2CppName: ovr_TestUserAppAccess_GetUserId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_TestUserAppAccess_GetUserId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_TestUserAppAccess_GetUserId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_TestUserAppAccessArray_GetElement
// Il2CppName: ovr_TestUserAppAccessArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_TestUserAppAccessArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_TestUserAppAccessArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_TestUserAppAccessArray_GetSize
// Il2CppName: ovr_TestUserAppAccessArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_TestUserAppAccessArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_TestUserAppAccessArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetDisplayName
// Il2CppName: ovr_User_GetDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_User_GetDisplayName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetDisplayName_Native
// Il2CppName: ovr_User_GetDisplayName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_User_GetDisplayName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetDisplayName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetID
// Il2CppName: ovr_User_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_User_GetID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetImageUrl
// Il2CppName: ovr_User_GetImageUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_User_GetImageUrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetImageUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetImageUrl_Native
// Il2CppName: ovr_User_GetImageUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_User_GetImageUrl_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetImageUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetInviteToken
// Il2CppName: ovr_User_GetInviteToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_User_GetInviteToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetInviteToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetInviteToken_Native
// Il2CppName: ovr_User_GetInviteToken_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_User_GetInviteToken_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetInviteToken_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetOculusID
// Il2CppName: ovr_User_GetOculusID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_User_GetOculusID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetOculusID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetOculusID_Native
// Il2CppName: ovr_User_GetOculusID_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_User_GetOculusID_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetOculusID_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetPresence
// Il2CppName: ovr_User_GetPresence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_User_GetPresence)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetPresence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetPresence_Native
// Il2CppName: ovr_User_GetPresence_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_User_GetPresence_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetPresence_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetPresenceDeeplinkMessage
// Il2CppName: ovr_User_GetPresenceDeeplinkMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_User_GetPresenceDeeplinkMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetPresenceDeeplinkMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetPresenceDeeplinkMessage_Native
// Il2CppName: ovr_User_GetPresenceDeeplinkMessage_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_User_GetPresenceDeeplinkMessage_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetPresenceDeeplinkMessage_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetPresenceDestinationApiName
// Il2CppName: ovr_User_GetPresenceDestinationApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_User_GetPresenceDestinationApiName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetPresenceDestinationApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetPresenceDestinationApiName_Native
// Il2CppName: ovr_User_GetPresenceDestinationApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_User_GetPresenceDestinationApiName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetPresenceDestinationApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetPresenceStatus
// Il2CppName: ovr_User_GetPresenceStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::UserPresenceStatus (*)(System::IntPtr)>(&CAPI::ovr_User_GetPresenceStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetPresenceStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetSmallImageUrl
// Il2CppName: ovr_User_GetSmallImageUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_User_GetSmallImageUrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetSmallImageUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_User_GetSmallImageUrl_Native
// Il2CppName: ovr_User_GetSmallImageUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_User_GetSmallImageUrl_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_User_GetSmallImageUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserAndRoom_GetRoom
// Il2CppName: ovr_UserAndRoom_GetRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_UserAndRoom_GetRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserAndRoom_GetRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserAndRoom_GetUser
// Il2CppName: ovr_UserAndRoom_GetUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_UserAndRoom_GetUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserAndRoom_GetUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserAndRoomArray_GetElement
// Il2CppName: ovr_UserAndRoomArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_UserAndRoomArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserAndRoomArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserAndRoomArray_GetNextUrl
// Il2CppName: ovr_UserAndRoomArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_UserAndRoomArray_GetNextUrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserAndRoomArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserAndRoomArray_GetNextUrl_Native
// Il2CppName: ovr_UserAndRoomArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_UserAndRoomArray_GetNextUrl_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserAndRoomArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserAndRoomArray_GetSize
// Il2CppName: ovr_UserAndRoomArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_UserAndRoomArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserAndRoomArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserAndRoomArray_HasNextPage
// Il2CppName: ovr_UserAndRoomArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_UserAndRoomArray_HasNextPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserAndRoomArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserArray_GetElement
// Il2CppName: ovr_UserArray_GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, System::UIntPtr)>(&CAPI::ovr_UserArray_GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserArray_GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserArray_GetNextUrl
// Il2CppName: ovr_UserArray_GetNextUrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_UserArray_GetNextUrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserArray_GetNextUrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserArray_GetNextUrl_Native
// Il2CppName: ovr_UserArray_GetNextUrl_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_UserArray_GetNextUrl_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserArray_GetNextUrl_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserArray_GetSize
// Il2CppName: ovr_UserArray_GetSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_UserArray_GetSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserArray_GetSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserArray_HasNextPage
// Il2CppName: ovr_UserArray_HasNextPage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_UserArray_HasNextPage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserArray_HasNextPage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserDataStoreUpdateResponse_GetSuccess
// Il2CppName: ovr_UserDataStoreUpdateResponse_GetSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_UserDataStoreUpdateResponse_GetSuccess)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserDataStoreUpdateResponse_GetSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserProof_GetNonce
// Il2CppName: ovr_UserProof_GetNonce
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::IntPtr)>(&CAPI::ovr_UserProof_GetNonce)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserProof_GetNonce", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserProof_GetNonce_Native
// Il2CppName: ovr_UserProof_GetNonce_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr)>(&CAPI::ovr_UserProof_GetNonce_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserProof_GetNonce_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserReportID_GetDidCancel
// Il2CppName: ovr_UserReportID_GetDidCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr)>(&CAPI::ovr_UserReportID_GetDidCancel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserReportID_GetDidCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserReportID_GetID
// Il2CppName: ovr_UserReportID_GetID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (*)(System::IntPtr)>(&CAPI::ovr_UserReportID_GetID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserReportID_GetID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_VoipDecoder_Decode
// Il2CppName: ovr_VoipDecoder_Decode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Array<uint8_t>*, System::UIntPtr)>(&CAPI::ovr_VoipDecoder_Decode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_VoipDecoder_Decode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_VoipDecoder_GetDecodedPCM
// Il2CppName: ovr_VoipDecoder_GetDecodedPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr, ::Array<float>*, System::UIntPtr)>(&CAPI::ovr_VoipDecoder_GetDecodedPCM)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_VoipDecoder_GetDecodedPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_VoipEncoder_AddPCM
// Il2CppName: ovr_VoipEncoder_AddPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Array<float>*, uint)>(&CAPI::ovr_VoipEncoder_AddPCM)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_VoipEncoder_AddPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_VoipEncoder_GetCompressedData
// Il2CppName: ovr_VoipEncoder_GetCompressedData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr, ::Array<uint8_t>*, System::UIntPtr)>(&CAPI::ovr_VoipEncoder_GetCompressedData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_VoipEncoder_GetCompressedData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_VoipEncoder_GetCompressedDataSize
// Il2CppName: ovr_VoipEncoder_GetCompressedDataSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::UIntPtr (*)(System::IntPtr)>(&CAPI::ovr_VoipEncoder_GetCompressedDataSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_VoipEncoder_GetCompressedDataSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AbuseReportOptions_Create
// Il2CppName: ovr_AbuseReportOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&CAPI::ovr_AbuseReportOptions_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AbuseReportOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AbuseReportOptions_Destroy
// Il2CppName: ovr_AbuseReportOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_AbuseReportOptions_Destroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AbuseReportOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AbuseReportOptions_SetPreventPeopleChooser
// Il2CppName: ovr_AbuseReportOptions_SetPreventPeopleChooser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, bool)>(&CAPI::ovr_AbuseReportOptions_SetPreventPeopleChooser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AbuseReportOptions_SetPreventPeopleChooser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AbuseReportOptions_SetReportType
// Il2CppName: ovr_AbuseReportOptions_SetReportType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, Oculus::Platform::AbuseReportType)>(&CAPI::ovr_AbuseReportOptions_SetReportType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AbuseReportOptions_SetReportType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::AbuseReportType>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AdvancedAbuseReportOptions_Create
// Il2CppName: ovr_AdvancedAbuseReportOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&CAPI::ovr_AdvancedAbuseReportOptions_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AdvancedAbuseReportOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AdvancedAbuseReportOptions_Destroy
// Il2CppName: ovr_AdvancedAbuseReportOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_AdvancedAbuseReportOptions_Destroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AdvancedAbuseReportOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType
// Il2CppName: ovr_AdvancedAbuseReportOptions_SetObjectType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Il2CppString*)>(&CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AdvancedAbuseReportOptions_SetObjectType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType_Native
// Il2CppName: ovr_AdvancedAbuseReportOptions_SetObjectType_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AdvancedAbuseReportOptions_SetObjectType_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AdvancedAbuseReportOptions_SetReportType
// Il2CppName: ovr_AdvancedAbuseReportOptions_SetReportType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, Oculus::Platform::AbuseReportType)>(&CAPI::ovr_AdvancedAbuseReportOptions_SetReportType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AdvancedAbuseReportOptions_SetReportType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::AbuseReportType>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_AdvancedAbuseReportOptions_SetVideoMode
// Il2CppName: ovr_AdvancedAbuseReportOptions_SetVideoMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, Oculus::Platform::AbuseReportVideoMode)>(&CAPI::ovr_AdvancedAbuseReportOptions_SetVideoMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_AdvancedAbuseReportOptions_SetVideoMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::AbuseReportVideoMode>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ApplicationOptions_Create
// Il2CppName: ovr_ApplicationOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&CAPI::ovr_ApplicationOptions_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ApplicationOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ApplicationOptions_Destroy
// Il2CppName: ovr_ApplicationOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_ApplicationOptions_Destroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ApplicationOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ApplicationOptions_SetDeeplinkMessage
// Il2CppName: ovr_ApplicationOptions_SetDeeplinkMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Il2CppString*)>(&CAPI::ovr_ApplicationOptions_SetDeeplinkMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ApplicationOptions_SetDeeplinkMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ApplicationOptions_SetDeeplinkMessage_Native
// Il2CppName: ovr_ApplicationOptions_SetDeeplinkMessage_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_ApplicationOptions_SetDeeplinkMessage_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ApplicationOptions_SetDeeplinkMessage_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeOptions_Create
// Il2CppName: ovr_ChallengeOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&CAPI::ovr_ChallengeOptions_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeOptions_Destroy
// Il2CppName: ovr_ChallengeOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_ChallengeOptions_Destroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeOptions_SetDescription
// Il2CppName: ovr_ChallengeOptions_SetDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Il2CppString*)>(&CAPI::ovr_ChallengeOptions_SetDescription)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeOptions_SetDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeOptions_SetDescription_Native
// Il2CppName: ovr_ChallengeOptions_SetDescription_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_ChallengeOptions_SetDescription_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeOptions_SetDescription_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeOptions_SetEndDate
// Il2CppName: ovr_ChallengeOptions_SetEndDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::DateTime)>(&CAPI::ovr_ChallengeOptions_SetEndDate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeOptions_SetEndDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::DateTime>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeOptions_SetEndDate_Native
// Il2CppName: ovr_ChallengeOptions_SetEndDate_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, uint64_t)>(&CAPI::ovr_ChallengeOptions_SetEndDate_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeOptions_SetEndDate_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeOptions_SetIncludeActiveChallenges
// Il2CppName: ovr_ChallengeOptions_SetIncludeActiveChallenges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, bool)>(&CAPI::ovr_ChallengeOptions_SetIncludeActiveChallenges)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeOptions_SetIncludeActiveChallenges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeOptions_SetIncludeFutureChallenges
// Il2CppName: ovr_ChallengeOptions_SetIncludeFutureChallenges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, bool)>(&CAPI::ovr_ChallengeOptions_SetIncludeFutureChallenges)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeOptions_SetIncludeFutureChallenges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeOptions_SetIncludePastChallenges
// Il2CppName: ovr_ChallengeOptions_SetIncludePastChallenges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, bool)>(&CAPI::ovr_ChallengeOptions_SetIncludePastChallenges)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeOptions_SetIncludePastChallenges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeOptions_SetLeaderboardName
// Il2CppName: ovr_ChallengeOptions_SetLeaderboardName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Il2CppString*)>(&CAPI::ovr_ChallengeOptions_SetLeaderboardName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeOptions_SetLeaderboardName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeOptions_SetLeaderboardName_Native
// Il2CppName: ovr_ChallengeOptions_SetLeaderboardName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_ChallengeOptions_SetLeaderboardName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeOptions_SetLeaderboardName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeOptions_SetStartDate
// Il2CppName: ovr_ChallengeOptions_SetStartDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::DateTime)>(&CAPI::ovr_ChallengeOptions_SetStartDate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeOptions_SetStartDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::DateTime>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeOptions_SetStartDate_Native
// Il2CppName: ovr_ChallengeOptions_SetStartDate_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, uint64_t)>(&CAPI::ovr_ChallengeOptions_SetStartDate_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeOptions_SetStartDate_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeOptions_SetTitle
// Il2CppName: ovr_ChallengeOptions_SetTitle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Il2CppString*)>(&CAPI::ovr_ChallengeOptions_SetTitle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeOptions_SetTitle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeOptions_SetTitle_Native
// Il2CppName: ovr_ChallengeOptions_SetTitle_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_ChallengeOptions_SetTitle_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeOptions_SetTitle_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeOptions_SetViewerFilter
// Il2CppName: ovr_ChallengeOptions_SetViewerFilter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, Oculus::Platform::ChallengeViewerFilter)>(&CAPI::ovr_ChallengeOptions_SetViewerFilter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeOptions_SetViewerFilter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::ChallengeViewerFilter>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_ChallengeOptions_SetVisibility
// Il2CppName: ovr_ChallengeOptions_SetVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, Oculus::Platform::ChallengeVisibility)>(&CAPI::ovr_ChallengeOptions_SetVisibility)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_ChallengeOptions_SetVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::ChallengeVisibility>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_InviteOptions_Create
// Il2CppName: ovr_InviteOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&CAPI::ovr_InviteOptions_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_InviteOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_InviteOptions_Destroy
// Il2CppName: ovr_InviteOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_InviteOptions_Destroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_InviteOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_InviteOptions_AddSuggestedUser
// Il2CppName: ovr_InviteOptions_AddSuggestedUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, uint64_t)>(&CAPI::ovr_InviteOptions_AddSuggestedUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_InviteOptions_AddSuggestedUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_InviteOptions_ClearSuggestedUsers
// Il2CppName: ovr_InviteOptions_ClearSuggestedUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_InviteOptions_ClearSuggestedUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_InviteOptions_ClearSuggestedUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingOptions_Create
// Il2CppName: ovr_MatchmakingOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&CAPI::ovr_MatchmakingOptions_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingOptions_Destroy
// Il2CppName: ovr_MatchmakingOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingOptions_Destroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString
// Il2CppName: ovr_MatchmakingOptions_SetCreateRoomDataStoreString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Il2CppString*, ::Il2CppString*)>(&CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingOptions_SetCreateRoomDataStoreString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native
// Il2CppName: ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::IntPtr, System::IntPtr)>(&CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingOptions_ClearCreateRoomDataStore
// Il2CppName: ovr_MatchmakingOptions_ClearCreateRoomDataStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingOptions_ClearCreateRoomDataStore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingOptions_ClearCreateRoomDataStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingOptions_SetCreateRoomJoinPolicy
// Il2CppName: ovr_MatchmakingOptions_SetCreateRoomJoinPolicy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, Oculus::Platform::RoomJoinPolicy)>(&CAPI::ovr_MatchmakingOptions_SetCreateRoomJoinPolicy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingOptions_SetCreateRoomJoinPolicy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::RoomJoinPolicy>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingOptions_SetCreateRoomMaxUsers
// Il2CppName: ovr_MatchmakingOptions_SetCreateRoomMaxUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, uint)>(&CAPI::ovr_MatchmakingOptions_SetCreateRoomMaxUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingOptions_SetCreateRoomMaxUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingOptions_AddEnqueueAdditionalUser
// Il2CppName: ovr_MatchmakingOptions_AddEnqueueAdditionalUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, uint64_t)>(&CAPI::ovr_MatchmakingOptions_AddEnqueueAdditionalUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingOptions_AddEnqueueAdditionalUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers
// Il2CppName: ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt
// Il2CppName: ovr_MatchmakingOptions_SetEnqueueDataSettingsInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Il2CppString*, int)>(&CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingOptions_SetEnqueueDataSettingsInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native
// Il2CppName: ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::IntPtr, int)>(&CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble
// Il2CppName: ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Il2CppString*, double)>(&CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<double>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native
// Il2CppName: ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::IntPtr, double)>(&CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<double>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString
// Il2CppName: ovr_MatchmakingOptions_SetEnqueueDataSettingsString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Il2CppString*, ::Il2CppString*)>(&CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingOptions_SetEnqueueDataSettingsString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native
// Il2CppName: ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::IntPtr, System::IntPtr)>(&CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingOptions_ClearEnqueueDataSettings
// Il2CppName: ovr_MatchmakingOptions_ClearEnqueueDataSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_MatchmakingOptions_ClearEnqueueDataSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingOptions_ClearEnqueueDataSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingOptions_SetEnqueueIsDebug
// Il2CppName: ovr_MatchmakingOptions_SetEnqueueIsDebug
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, bool)>(&CAPI::ovr_MatchmakingOptions_SetEnqueueIsDebug)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingOptions_SetEnqueueIsDebug", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey
// Il2CppName: ovr_MatchmakingOptions_SetEnqueueQueryKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Il2CppString*)>(&CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingOptions_SetEnqueueQueryKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey_Native
// Il2CppName: ovr_MatchmakingOptions_SetEnqueueQueryKey_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_MatchmakingOptions_SetEnqueueQueryKey_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncOptions_Create
// Il2CppName: ovr_NetSyncOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&CAPI::ovr_NetSyncOptions_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncOptions_Destroy
// Il2CppName: ovr_NetSyncOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_NetSyncOptions_Destroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncOptions_SetVoipGroup
// Il2CppName: ovr_NetSyncOptions_SetVoipGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Il2CppString*)>(&CAPI::ovr_NetSyncOptions_SetVoipGroup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncOptions_SetVoipGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncOptions_SetVoipGroup_Native
// Il2CppName: ovr_NetSyncOptions_SetVoipGroup_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_NetSyncOptions_SetVoipGroup_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncOptions_SetVoipGroup_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncOptions_SetVoipStreamDefault
// Il2CppName: ovr_NetSyncOptions_SetVoipStreamDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, Oculus::Platform::NetSyncVoipStreamMode)>(&CAPI::ovr_NetSyncOptions_SetVoipStreamDefault)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncOptions_SetVoipStreamDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::NetSyncVoipStreamMode>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncOptions_SetZoneId
// Il2CppName: ovr_NetSyncOptions_SetZoneId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Il2CppString*)>(&CAPI::ovr_NetSyncOptions_SetZoneId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncOptions_SetZoneId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_NetSyncOptions_SetZoneId_Native
// Il2CppName: ovr_NetSyncOptions_SetZoneId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_NetSyncOptions_SetZoneId_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_NetSyncOptions_SetZoneId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_Create
// Il2CppName: ovr_RichPresenceOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&CAPI::ovr_RichPresenceOptions_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_Destroy
// Il2CppName: ovr_RichPresenceOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_RichPresenceOptions_Destroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetApiName
// Il2CppName: ovr_RichPresenceOptions_SetApiName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Il2CppString*)>(&CAPI::ovr_RichPresenceOptions_SetApiName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetApiName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetApiName_Native
// Il2CppName: ovr_RichPresenceOptions_SetApiName_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_RichPresenceOptions_SetApiName_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetApiName_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetArgsString
// Il2CppName: ovr_RichPresenceOptions_SetArgsString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Il2CppString*, ::Il2CppString*)>(&CAPI::ovr_RichPresenceOptions_SetArgsString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetArgsString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetArgsString_Native
// Il2CppName: ovr_RichPresenceOptions_SetArgsString_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::IntPtr, System::IntPtr)>(&CAPI::ovr_RichPresenceOptions_SetArgsString_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetArgsString_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_ClearArgs
// Il2CppName: ovr_RichPresenceOptions_ClearArgs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_RichPresenceOptions_ClearArgs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_ClearArgs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetCurrentCapacity
// Il2CppName: ovr_RichPresenceOptions_SetCurrentCapacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, uint)>(&CAPI::ovr_RichPresenceOptions_SetCurrentCapacity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetCurrentCapacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride
// Il2CppName: ovr_RichPresenceOptions_SetDeeplinkMessageOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Il2CppString*)>(&CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetDeeplinkMessageOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native
// Il2CppName: ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetEndTime
// Il2CppName: ovr_RichPresenceOptions_SetEndTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::DateTime)>(&CAPI::ovr_RichPresenceOptions_SetEndTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetEndTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::DateTime>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetEndTime_Native
// Il2CppName: ovr_RichPresenceOptions_SetEndTime_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, uint64_t)>(&CAPI::ovr_RichPresenceOptions_SetEndTime_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetEndTime_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetExtraContext
// Il2CppName: ovr_RichPresenceOptions_SetExtraContext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, Oculus::Platform::RichPresenceExtraContext)>(&CAPI::ovr_RichPresenceOptions_SetExtraContext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetExtraContext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::RichPresenceExtraContext>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetInstanceId
// Il2CppName: ovr_RichPresenceOptions_SetInstanceId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Il2CppString*)>(&CAPI::ovr_RichPresenceOptions_SetInstanceId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetInstanceId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetInstanceId_Native
// Il2CppName: ovr_RichPresenceOptions_SetInstanceId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_RichPresenceOptions_SetInstanceId_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetInstanceId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetIsIdle
// Il2CppName: ovr_RichPresenceOptions_SetIsIdle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, bool)>(&CAPI::ovr_RichPresenceOptions_SetIsIdle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetIsIdle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetIsJoinable
// Il2CppName: ovr_RichPresenceOptions_SetIsJoinable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, bool)>(&CAPI::ovr_RichPresenceOptions_SetIsJoinable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetIsJoinable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetJoinableId
// Il2CppName: ovr_RichPresenceOptions_SetJoinableId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Il2CppString*)>(&CAPI::ovr_RichPresenceOptions_SetJoinableId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetJoinableId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetJoinableId_Native
// Il2CppName: ovr_RichPresenceOptions_SetJoinableId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_RichPresenceOptions_SetJoinableId_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetJoinableId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetLobbySessionId
// Il2CppName: ovr_RichPresenceOptions_SetLobbySessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Il2CppString*)>(&CAPI::ovr_RichPresenceOptions_SetLobbySessionId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetLobbySessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetLobbySessionId_Native
// Il2CppName: ovr_RichPresenceOptions_SetLobbySessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_RichPresenceOptions_SetLobbySessionId_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetLobbySessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetMatchSessionId
// Il2CppName: ovr_RichPresenceOptions_SetMatchSessionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Il2CppString*)>(&CAPI::ovr_RichPresenceOptions_SetMatchSessionId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetMatchSessionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetMatchSessionId_Native
// Il2CppName: ovr_RichPresenceOptions_SetMatchSessionId_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::IntPtr)>(&CAPI::ovr_RichPresenceOptions_SetMatchSessionId_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetMatchSessionId_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetMaxCapacity
// Il2CppName: ovr_RichPresenceOptions_SetMaxCapacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, uint)>(&CAPI::ovr_RichPresenceOptions_SetMaxCapacity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetMaxCapacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetStartTime
// Il2CppName: ovr_RichPresenceOptions_SetStartTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::DateTime)>(&CAPI::ovr_RichPresenceOptions_SetStartTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetStartTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::DateTime>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RichPresenceOptions_SetStartTime_Native
// Il2CppName: ovr_RichPresenceOptions_SetStartTime_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, uint64_t)>(&CAPI::ovr_RichPresenceOptions_SetStartTime_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RichPresenceOptions_SetStartTime_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomOptions_Create
// Il2CppName: ovr_RoomOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&CAPI::ovr_RoomOptions_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomOptions_Destroy
// Il2CppName: ovr_RoomOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_RoomOptions_Destroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomOptions_SetDataStoreString
// Il2CppName: ovr_RoomOptions_SetDataStoreString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, ::Il2CppString*, ::Il2CppString*)>(&CAPI::ovr_RoomOptions_SetDataStoreString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomOptions_SetDataStoreString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomOptions_SetDataStoreString_Native
// Il2CppName: ovr_RoomOptions_SetDataStoreString_Native
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::IntPtr, System::IntPtr)>(&CAPI::ovr_RoomOptions_SetDataStoreString_Native)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomOptions_SetDataStoreString_Native", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomOptions_ClearDataStore
// Il2CppName: ovr_RoomOptions_ClearDataStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_RoomOptions_ClearDataStore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomOptions_ClearDataStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomOptions_SetExcludeRecentlyMet
// Il2CppName: ovr_RoomOptions_SetExcludeRecentlyMet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, bool)>(&CAPI::ovr_RoomOptions_SetExcludeRecentlyMet)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomOptions_SetExcludeRecentlyMet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomOptions_SetMaxUserResults
// Il2CppName: ovr_RoomOptions_SetMaxUserResults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, uint)>(&CAPI::ovr_RoomOptions_SetMaxUserResults)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomOptions_SetMaxUserResults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomOptions_SetOrdering
// Il2CppName: ovr_RoomOptions_SetOrdering
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, Oculus::Platform::UserOrdering)>(&CAPI::ovr_RoomOptions_SetOrdering)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomOptions_SetOrdering", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::UserOrdering>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomOptions_SetRecentlyMetTimeWindow
// Il2CppName: ovr_RoomOptions_SetRecentlyMetTimeWindow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, Oculus::Platform::TimeWindow)>(&CAPI::ovr_RoomOptions_SetRecentlyMetTimeWindow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomOptions_SetRecentlyMetTimeWindow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::TimeWindow>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomOptions_SetRoomId
// Il2CppName: ovr_RoomOptions_SetRoomId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, uint64_t)>(&CAPI::ovr_RoomOptions_SetRoomId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomOptions_SetRoomId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_RoomOptions_SetTurnOffUpdates
// Il2CppName: ovr_RoomOptions_SetTurnOffUpdates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, bool)>(&CAPI::ovr_RoomOptions_SetTurnOffUpdates)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_RoomOptions_SetTurnOffUpdates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserOptions_Create
// Il2CppName: ovr_UserOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&CAPI::ovr_UserOptions_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserOptions_Destroy
// Il2CppName: ovr_UserOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_UserOptions_Destroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserOptions_SetMaxUsers
// Il2CppName: ovr_UserOptions_SetMaxUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, uint)>(&CAPI::ovr_UserOptions_SetMaxUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserOptions_SetMaxUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserOptions_AddServiceProvider
// Il2CppName: ovr_UserOptions_AddServiceProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, Oculus::Platform::ServiceProvider)>(&CAPI::ovr_UserOptions_AddServiceProvider)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserOptions_AddServiceProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::ServiceProvider>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserOptions_ClearServiceProviders
// Il2CppName: ovr_UserOptions_ClearServiceProviders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_UserOptions_ClearServiceProviders)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserOptions_ClearServiceProviders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_UserOptions_SetTimeWindow
// Il2CppName: ovr_UserOptions_SetTimeWindow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, Oculus::Platform::TimeWindow)>(&CAPI::ovr_UserOptions_SetTimeWindow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_UserOptions_SetTimeWindow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::TimeWindow>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_VoipOptions_Create
// Il2CppName: ovr_VoipOptions_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&CAPI::ovr_VoipOptions_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_VoipOptions_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_VoipOptions_Destroy
// Il2CppName: ovr_VoipOptions_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&CAPI::ovr_VoipOptions_Destroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_VoipOptions_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_VoipOptions_SetBitrateForNewConnections
// Il2CppName: ovr_VoipOptions_SetBitrateForNewConnections
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, Oculus::Platform::VoipBitrate)>(&CAPI::ovr_VoipOptions_SetBitrateForNewConnections)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_VoipOptions_SetBitrateForNewConnections", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::VoipBitrate>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovr_VoipOptions_SetCreateNewConnectionUseDtx
// Il2CppName: ovr_VoipOptions_SetCreateNewConnectionUseDtx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, Oculus::Platform::VoipDtxState)>(&CAPI::ovr_VoipOptions_SetCreateNewConnectionUseDtx)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), "ovr_VoipOptions_SetCreateNewConnectionUseDtx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::VoipDtxState>()});
  }
};
// Writing MetadataGetter for method: CAPI::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CAPI::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CAPI::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CAPI::*)()>(&CAPI::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CAPI::*)()>(&CAPI::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.CAPI/ovrKeyValuePair
#include "Oculus/Platform/CAPI.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: CAPI::ovrKeyValuePair::ovrKeyValuePair
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CAPI::ovrKeyValuePair::*)(::Il2CppString*, ::Il2CppString*)>(&CAPI::ovrKeyValuePair::ovrKeyValuePair<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI::ovrKeyValuePair), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CAPI::ovrKeyValuePair::*)(::Il2CppString*, ::Il2CppString*)>(&CAPI::ovrKeyValuePair::ovrKeyValuePair<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI::ovrKeyValuePair), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovrKeyValuePair::ovrKeyValuePair
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CAPI::ovrKeyValuePair::*)(::Il2CppString*, int)>(&CAPI::ovrKeyValuePair::ovrKeyValuePair<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI::ovrKeyValuePair), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CAPI::ovrKeyValuePair::*)(::Il2CppString*, int)>(&CAPI::ovrKeyValuePair::ovrKeyValuePair<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI::ovrKeyValuePair), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CAPI::ovrKeyValuePair::ovrKeyValuePair
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CAPI::ovrKeyValuePair::*)(::Il2CppString*, double)>(&CAPI::ovrKeyValuePair::ovrKeyValuePair<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI::ovrKeyValuePair), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<double>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CAPI::ovrKeyValuePair::*)(::Il2CppString*, double)>(&CAPI::ovrKeyValuePair::ovrKeyValuePair<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI::ovrKeyValuePair), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<double>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.CAPI/ovrMatchmakingCriterion
#include "Oculus/Platform/CAPI_ovrMatchmakingCriterion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: CAPI::ovrMatchmakingCriterion::ovrMatchmakingCriterion
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CAPI::ovrMatchmakingCriterion::*)(::Il2CppString*, Oculus::Platform::MatchmakingCriterionImportance)>(&CAPI::ovrMatchmakingCriterion::ovrMatchmakingCriterion<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI::ovrMatchmakingCriterion), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::MatchmakingCriterionImportance>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CAPI::ovrMatchmakingCriterion::*)(::Il2CppString*, Oculus::Platform::MatchmakingCriterionImportance)>(&CAPI::ovrMatchmakingCriterion::ovrMatchmakingCriterion<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI::ovrMatchmakingCriterion), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::MatchmakingCriterionImportance>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.CAPI/FilterCallback
#include "Oculus/Platform/CAPI_FilterCallback.hpp"
// Including type: System.UIntPtr
#include "System/UIntPtr.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.CAPI/FilterCallback.Invoke
void Oculus::Platform::CAPI::FilterCallback::Invoke(::Array<int16_t>*& pcmData, System::UIntPtr pcmDataLength, int frequency, int numChannels) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::FilterCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pcmData), ::il2cpp_utils::ExtractType(pcmDataLength), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(numChannels)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pcmData, pcmDataLength, frequency, numChannels);
}
// Autogenerated method: Oculus.Platform.CAPI/FilterCallback.BeginInvoke
System::IAsyncResult* Oculus::Platform::CAPI::FilterCallback::BeginInvoke(::Array<int16_t>*& pcmData, System::UIntPtr pcmDataLength, int frequency, int numChannels, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::FilterCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pcmData), ::il2cpp_utils::ExtractType(pcmDataLength), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(numChannels), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, pcmData, pcmDataLength, frequency, numChannels, callback, object);
}
// Autogenerated method: Oculus.Platform.CAPI/FilterCallback.EndInvoke
void Oculus::Platform::CAPI::FilterCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CAPI::FilterCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: CAPI::FilterCallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CAPI::FilterCallback::*)(::Il2CppObject*, System::IntPtr)>(&CAPI::FilterCallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI::FilterCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CAPI::FilterCallback::*)(::Il2CppObject*, System::IntPtr)>(&CAPI::FilterCallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI::FilterCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: CAPI::FilterCallback::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CAPI::FilterCallback::*)(::Array<int16_t>*&, System::UIntPtr, int, int)>(&CAPI::FilterCallback::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI::FilterCallback*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int16_t>*&>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CAPI::FilterCallback::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (CAPI::FilterCallback::*)(::Array<int16_t>*&, System::UIntPtr, int, int, System::AsyncCallback*, ::Il2CppObject*)>(&CAPI::FilterCallback::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI::FilterCallback*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<int16_t>*&>(), ::il2cpp_utils::ExtractIndependentType<System::UIntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: CAPI::FilterCallback::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CAPI::FilterCallback::*)(System::IAsyncResult*)>(&CAPI::FilterCallback::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CAPI::FilterCallback*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Callback
#include "Oculus/Platform/Callback.hpp"
// Including type: Oculus.Platform.Callback/RequestCallback
#include "Oculus/Platform/Callback_RequestCallback.hpp"
// Including type: Oculus.Platform.Callback/RequestCallback`1
#include "Oculus/Platform/Callback_RequestCallback_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Platform.Message/Callback
#include "Oculus/Platform/Message_Callback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.UInt64,Oculus.Platform.Request> requestIDsToRequests
System::Collections::Generic::Dictionary_2<uint64_t, Oculus::Platform::Request*>* Oculus::Platform::Callback::_get_requestIDsToRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Callback::_get_requestIDsToRequests");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<uint64_t, Oculus::Platform::Request*>*>("Oculus.Platform", "Callback", "requestIDsToRequests")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.UInt64,Oculus.Platform.Request> requestIDsToRequests
void Oculus::Platform::Callback::_set_requestIDsToRequests(System::Collections::Generic::Dictionary_2<uint64_t, Oculus::Platform::Request*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Callback::_set_requestIDsToRequests");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Callback", "requestIDsToRequests", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<Oculus.Platform.Message/MessageType,Oculus.Platform.Callback/RequestCallback> notificationCallbacks
System::Collections::Generic::Dictionary_2<Oculus::Platform::Message::MessageType, Oculus::Platform::Callback::RequestCallback*>* Oculus::Platform::Callback::_get_notificationCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Callback::_get_notificationCallbacks");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<Oculus::Platform::Message::MessageType, Oculus::Platform::Callback::RequestCallback*>*>("Oculus.Platform", "Callback", "notificationCallbacks")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<Oculus.Platform.Message/MessageType,Oculus.Platform.Callback/RequestCallback> notificationCallbacks
void Oculus::Platform::Callback::_set_notificationCallbacks(System::Collections::Generic::Dictionary_2<Oculus::Platform::Message::MessageType, Oculus::Platform::Callback::RequestCallback*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Callback::_set_notificationCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Callback", "notificationCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean hasRegisteredRoomInviteNotificationHandler
bool Oculus::Platform::Callback::_get_hasRegisteredRoomInviteNotificationHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Callback::_get_hasRegisteredRoomInviteNotificationHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Oculus.Platform", "Callback", "hasRegisteredRoomInviteNotificationHandler"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean hasRegisteredRoomInviteNotificationHandler
void Oculus::Platform::Callback::_set_hasRegisteredRoomInviteNotificationHandler(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Callback::_set_hasRegisteredRoomInviteNotificationHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Callback", "hasRegisteredRoomInviteNotificationHandler", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<Oculus.Platform.Message> pendingRoomInviteNotifications
System::Collections::Generic::List_1<Oculus::Platform::Message*>* Oculus::Platform::Callback::_get_pendingRoomInviteNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Callback::_get_pendingRoomInviteNotifications");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<Oculus::Platform::Message*>*>("Oculus.Platform", "Callback", "pendingRoomInviteNotifications"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<Oculus.Platform.Message> pendingRoomInviteNotifications
void Oculus::Platform::Callback::_set_pendingRoomInviteNotifications(System::Collections::Generic::List_1<Oculus::Platform::Message*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Callback::_set_pendingRoomInviteNotifications");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Callback", "pendingRoomInviteNotifications", value));
}
// Autogenerated method: Oculus.Platform.Callback.SetNotificationCallback
void Oculus::Platform::Callback::SetNotificationCallback(Oculus::Platform::Message::MessageType type, Oculus::Platform::Message::Callback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Callback::SetNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "SetNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, callback);
}
// Autogenerated method: Oculus.Platform.Callback.AddRequest
void Oculus::Platform::Callback::AddRequest(Oculus::Platform::Request* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Callback::AddRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "AddRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, request);
}
// Autogenerated method: Oculus.Platform.Callback.RunCallbacks
void Oculus::Platform::Callback::RunCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Callback::RunCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "RunCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Callback.RunLimitedCallbacks
void Oculus::Platform::Callback::RunLimitedCallbacks(uint limit) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Callback::RunLimitedCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "RunLimitedCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(limit)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, limit);
}
// Autogenerated method: Oculus.Platform.Callback.OnApplicationQuit
void Oculus::Platform::Callback::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Callback::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Callback.FlushRoomInviteNotificationQueue
void Oculus::Platform::Callback::FlushRoomInviteNotificationQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Callback::FlushRoomInviteNotificationQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "FlushRoomInviteNotificationQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Callback.HandleMessage
void Oculus::Platform::Callback::HandleMessage(Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Callback::HandleMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", "HandleMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Platform.Callback..cctor
void Oculus::Platform::Callback::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Callback::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Callback", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Callback::SetNotificationCallback
// Il2CppName: SetNotificationCallback
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Callback::SetNotificationCallback
// Il2CppName: SetNotificationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(Oculus::Platform::Message::MessageType, Oculus::Platform::Message::Callback*)>(&Callback::SetNotificationCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Callback*), "SetNotificationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message::MessageType>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message::Callback*>()});
  }
};
// Writing MetadataGetter for method: Callback::AddRequest
// Il2CppName: AddRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(Oculus::Platform::Request*)>(&Callback::AddRequest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Callback*), "AddRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Request*>()});
  }
};
// Writing MetadataGetter for method: Callback::RunCallbacks
// Il2CppName: RunCallbacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Callback::RunCallbacks)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Callback*), "RunCallbacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Callback::RunLimitedCallbacks
// Il2CppName: RunLimitedCallbacks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint)>(&Callback::RunLimitedCallbacks)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Callback*), "RunLimitedCallbacks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: Callback::OnApplicationQuit
// Il2CppName: OnApplicationQuit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Callback::OnApplicationQuit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Callback*), "OnApplicationQuit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Callback::FlushRoomInviteNotificationQueue
// Il2CppName: FlushRoomInviteNotificationQueue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Callback::FlushRoomInviteNotificationQueue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Callback*), "FlushRoomInviteNotificationQueue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Callback::HandleMessage
// Il2CppName: HandleMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(Oculus::Platform::Message*)>(&Callback::HandleMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Callback*), "HandleMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message*>()});
  }
};
// Writing MetadataGetter for method: Callback::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Callback::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Callback*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Callback/RequestCallback
#include "Oculus/Platform/Callback_RequestCallback.hpp"
// Including type: Oculus.Platform.Message/Callback
#include "Oculus/Platform/Message_Callback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Callback/RequestCallback.HandleMessage
void Oculus::Platform::Callback::RequestCallback::HandleMessage(Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Callback::RequestCallback::HandleMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, msg);
}
// Writing MetadataGetter for method: Callback::RequestCallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Callback::RequestCallback::*)(Oculus::Platform::Message::Callback*)>(&Callback::RequestCallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Callback::RequestCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message::Callback*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Callback::RequestCallback::*)(Oculus::Platform::Message::Callback*)>(&Callback::RequestCallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Callback::RequestCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message::Callback*>()});
  }
};
// Writing MetadataGetter for method: Callback::RequestCallback::HandleMessage
// Il2CppName: HandleMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Callback::RequestCallback::*)(Oculus::Platform::Message*)>(&Callback::RequestCallback::HandleMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Callback::RequestCallback*), "HandleMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message*>()});
  }
};
// Writing MetadataGetter for method: Callback::RequestCallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Callback::RequestCallback::*)()>(&Callback::RequestCallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Callback::RequestCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Callback::RequestCallback::*)()>(&Callback::RequestCallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Callback::RequestCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.CallbackRunner
#include "Oculus/Platform/CallbackRunner.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.CallbackRunner.ovr_UnityResetTestPlatform
void Oculus::Platform::CallbackRunner::ovr_UnityResetTestPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CallbackRunner::ovr_UnityResetTestPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CallbackRunner", "ovr_UnityResetTestPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CallbackRunner.Awake
void Oculus::Platform::CallbackRunner::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CallbackRunner::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.CallbackRunner.Update
void Oculus::Platform::CallbackRunner::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CallbackRunner::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.CallbackRunner.OnDestroy
void Oculus::Platform::CallbackRunner::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CallbackRunner::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.CallbackRunner.OnApplicationQuit
void Oculus::Platform::CallbackRunner::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CallbackRunner::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CallbackRunner::ovr_UnityResetTestPlatform
// Il2CppName: ovr_UnityResetTestPlatform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CallbackRunner::ovr_UnityResetTestPlatform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CallbackRunner*), "ovr_UnityResetTestPlatform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CallbackRunner::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CallbackRunner::*)()>(&CallbackRunner::Awake)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CallbackRunner*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CallbackRunner::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CallbackRunner::*)()>(&CallbackRunner::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CallbackRunner*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CallbackRunner::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CallbackRunner::*)()>(&CallbackRunner::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CallbackRunner*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CallbackRunner::OnApplicationQuit
// Il2CppName: OnApplicationQuit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CallbackRunner::*)()>(&CallbackRunner::OnApplicationQuit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CallbackRunner*), "OnApplicationQuit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CallbackRunner::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CallbackRunner::*)()>(&CallbackRunner::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CallbackRunner*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CallbackRunner::*)()>(&CallbackRunner::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CallbackRunner*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ChallengeCreationType
#include "Oculus/Platform/ChallengeCreationType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFE934
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeCreationType Unknown
Oculus::Platform::ChallengeCreationType Oculus::Platform::ChallengeCreationType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeCreationType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ChallengeCreationType>("Oculus.Platform", "ChallengeCreationType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeCreationType Unknown
void Oculus::Platform::ChallengeCreationType::_set_Unknown(Oculus::Platform::ChallengeCreationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeCreationType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeCreationType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFE96C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeCreationType UserCreated
Oculus::Platform::ChallengeCreationType Oculus::Platform::ChallengeCreationType::_get_UserCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeCreationType::_get_UserCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ChallengeCreationType>("Oculus.Platform", "ChallengeCreationType", "UserCreated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeCreationType UserCreated
void Oculus::Platform::ChallengeCreationType::_set_UserCreated(Oculus::Platform::ChallengeCreationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeCreationType::_set_UserCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeCreationType", "UserCreated", value));
}
// [DescriptionAttribute] Offset: 0xDFE9A4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeCreationType DeveloperCreated
Oculus::Platform::ChallengeCreationType Oculus::Platform::ChallengeCreationType::_get_DeveloperCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeCreationType::_get_DeveloperCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ChallengeCreationType>("Oculus.Platform", "ChallengeCreationType", "DeveloperCreated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeCreationType DeveloperCreated
void Oculus::Platform::ChallengeCreationType::_set_DeveloperCreated(Oculus::Platform::ChallengeCreationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeCreationType::_set_DeveloperCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeCreationType", "DeveloperCreated", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.ChallengeOptions
#include "Oculus/Platform/ChallengeOptions.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: Oculus.Platform.ChallengeViewerFilter
#include "Oculus/Platform/ChallengeViewerFilter.hpp"
// Including type: Oculus.Platform.ChallengeVisibility
#include "Oculus/Platform/ChallengeVisibility.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetDescription
void Oculus::Platform::ChallengeOptions::SetDescription(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeOptions::SetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetEndDate
void Oculus::Platform::ChallengeOptions::SetEndDate(System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeOptions::SetEndDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEndDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetIncludeActiveChallenges
void Oculus::Platform::ChallengeOptions::SetIncludeActiveChallenges(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeOptions::SetIncludeActiveChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIncludeActiveChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetIncludeFutureChallenges
void Oculus::Platform::ChallengeOptions::SetIncludeFutureChallenges(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeOptions::SetIncludeFutureChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIncludeFutureChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetIncludePastChallenges
void Oculus::Platform::ChallengeOptions::SetIncludePastChallenges(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeOptions::SetIncludePastChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIncludePastChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetLeaderboardName
void Oculus::Platform::ChallengeOptions::SetLeaderboardName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeOptions::SetLeaderboardName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLeaderboardName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetStartDate
void Oculus::Platform::ChallengeOptions::SetStartDate(System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeOptions::SetStartDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStartDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetTitle
void Oculus::Platform::ChallengeOptions::SetTitle(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeOptions::SetTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetViewerFilter
void Oculus::Platform::ChallengeOptions::SetViewerFilter(Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeOptions::SetViewerFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetViewerFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.SetVisibility
void Oculus::Platform::ChallengeOptions::SetVisibility(Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeOptions::SetVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ChallengeOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::ChallengeOptions::operator System::IntPtr()
// Autogenerated method: Oculus.Platform.ChallengeOptions.Finalize
void Oculus::Platform::ChallengeOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ChallengeOptions::SetDescription
// Il2CppName: SetDescription
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeOptions::*)(::Il2CppString*)>(&ChallengeOptions::SetDescription)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeOptions*), "SetDescription", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ChallengeOptions::SetEndDate
// Il2CppName: SetEndDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeOptions::*)(System::DateTime)>(&ChallengeOptions::SetEndDate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeOptions*), "SetEndDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::DateTime>()});
  }
};
// Writing MetadataGetter for method: ChallengeOptions::SetIncludeActiveChallenges
// Il2CppName: SetIncludeActiveChallenges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeOptions::*)(bool)>(&ChallengeOptions::SetIncludeActiveChallenges)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeOptions*), "SetIncludeActiveChallenges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ChallengeOptions::SetIncludeFutureChallenges
// Il2CppName: SetIncludeFutureChallenges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeOptions::*)(bool)>(&ChallengeOptions::SetIncludeFutureChallenges)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeOptions*), "SetIncludeFutureChallenges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ChallengeOptions::SetIncludePastChallenges
// Il2CppName: SetIncludePastChallenges
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeOptions::*)(bool)>(&ChallengeOptions::SetIncludePastChallenges)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeOptions*), "SetIncludePastChallenges", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ChallengeOptions::SetLeaderboardName
// Il2CppName: SetLeaderboardName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeOptions::*)(::Il2CppString*)>(&ChallengeOptions::SetLeaderboardName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeOptions*), "SetLeaderboardName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ChallengeOptions::SetStartDate
// Il2CppName: SetStartDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeOptions::*)(System::DateTime)>(&ChallengeOptions::SetStartDate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeOptions*), "SetStartDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::DateTime>()});
  }
};
// Writing MetadataGetter for method: ChallengeOptions::SetTitle
// Il2CppName: SetTitle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeOptions::*)(::Il2CppString*)>(&ChallengeOptions::SetTitle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeOptions*), "SetTitle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ChallengeOptions::SetViewerFilter
// Il2CppName: SetViewerFilter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeOptions::*)(Oculus::Platform::ChallengeViewerFilter)>(&ChallengeOptions::SetViewerFilter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeOptions*), "SetViewerFilter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::ChallengeViewerFilter>()});
  }
};
// Writing MetadataGetter for method: ChallengeOptions::SetVisibility
// Il2CppName: SetVisibility
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeOptions::*)(Oculus::Platform::ChallengeVisibility)>(&ChallengeOptions::SetVisibility)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeOptions*), "SetVisibility", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::ChallengeVisibility>()});
  }
};
// Writing MetadataGetter for method: ChallengeOptions::operator System::IntPtr
// Il2CppName: op_Explicit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&ChallengeOptions::operator System::IntPtr)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeOptions*), "op_Explicit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ChallengeOptions::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeOptions::*)()>(&ChallengeOptions::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeOptions::*)()>(&ChallengeOptions::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ChallengeOptions::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeOptions::*)()>(&ChallengeOptions::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeOptions*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ChallengeViewerFilter
#include "Oculus/Platform/ChallengeViewerFilter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFE9DC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeViewerFilter Unknown
Oculus::Platform::ChallengeViewerFilter Oculus::Platform::ChallengeViewerFilter::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeViewerFilter::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ChallengeViewerFilter>("Oculus.Platform", "ChallengeViewerFilter", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeViewerFilter Unknown
void Oculus::Platform::ChallengeViewerFilter::_set_Unknown(Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeViewerFilter::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeViewerFilter", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFEA14
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeViewerFilter AllVisible
Oculus::Platform::ChallengeViewerFilter Oculus::Platform::ChallengeViewerFilter::_get_AllVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeViewerFilter::_get_AllVisible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ChallengeViewerFilter>("Oculus.Platform", "ChallengeViewerFilter", "AllVisible"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeViewerFilter AllVisible
void Oculus::Platform::ChallengeViewerFilter::_set_AllVisible(Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeViewerFilter::_set_AllVisible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeViewerFilter", "AllVisible", value));
}
// [DescriptionAttribute] Offset: 0xDFEA4C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeViewerFilter Participating
Oculus::Platform::ChallengeViewerFilter Oculus::Platform::ChallengeViewerFilter::_get_Participating() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeViewerFilter::_get_Participating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ChallengeViewerFilter>("Oculus.Platform", "ChallengeViewerFilter", "Participating"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeViewerFilter Participating
void Oculus::Platform::ChallengeViewerFilter::_set_Participating(Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeViewerFilter::_set_Participating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeViewerFilter", "Participating", value));
}
// [DescriptionAttribute] Offset: 0xDFEA84
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeViewerFilter Invited
Oculus::Platform::ChallengeViewerFilter Oculus::Platform::ChallengeViewerFilter::_get_Invited() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeViewerFilter::_get_Invited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ChallengeViewerFilter>("Oculus.Platform", "ChallengeViewerFilter", "Invited"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeViewerFilter Invited
void Oculus::Platform::ChallengeViewerFilter::_set_Invited(Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeViewerFilter::_set_Invited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeViewerFilter", "Invited", value));
}
// [DescriptionAttribute] Offset: 0xDFEABC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeViewerFilter ParticipatingOrInvited
Oculus::Platform::ChallengeViewerFilter Oculus::Platform::ChallengeViewerFilter::_get_ParticipatingOrInvited() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeViewerFilter::_get_ParticipatingOrInvited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ChallengeViewerFilter>("Oculus.Platform", "ChallengeViewerFilter", "ParticipatingOrInvited"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeViewerFilter ParticipatingOrInvited
void Oculus::Platform::ChallengeViewerFilter::_set_ParticipatingOrInvited(Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeViewerFilter::_set_ParticipatingOrInvited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeViewerFilter", "ParticipatingOrInvited", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ChallengeVisibility
#include "Oculus/Platform/ChallengeVisibility.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFEAF4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeVisibility Unknown
Oculus::Platform::ChallengeVisibility Oculus::Platform::ChallengeVisibility::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeVisibility::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ChallengeVisibility>("Oculus.Platform", "ChallengeVisibility", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeVisibility Unknown
void Oculus::Platform::ChallengeVisibility::_set_Unknown(Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeVisibility::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeVisibility", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFEB2C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeVisibility InviteOnly
Oculus::Platform::ChallengeVisibility Oculus::Platform::ChallengeVisibility::_get_InviteOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeVisibility::_get_InviteOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ChallengeVisibility>("Oculus.Platform", "ChallengeVisibility", "InviteOnly"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeVisibility InviteOnly
void Oculus::Platform::ChallengeVisibility::_set_InviteOnly(Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeVisibility::_set_InviteOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeVisibility", "InviteOnly", value));
}
// [DescriptionAttribute] Offset: 0xDFEB64
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeVisibility Public
Oculus::Platform::ChallengeVisibility Oculus::Platform::ChallengeVisibility::_get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeVisibility::_get_Public");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ChallengeVisibility>("Oculus.Platform", "ChallengeVisibility", "Public"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeVisibility Public
void Oculus::Platform::ChallengeVisibility::_set_Public(Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeVisibility::_set_Public");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeVisibility", "Public", value));
}
// [DescriptionAttribute] Offset: 0xDFEB9C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.ChallengeVisibility Private
Oculus::Platform::ChallengeVisibility Oculus::Platform::ChallengeVisibility::_get_Private() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeVisibility::_get_Private");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::ChallengeVisibility>("Oculus.Platform", "ChallengeVisibility", "Private"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.ChallengeVisibility Private
void Oculus::Platform::ChallengeVisibility::_set_Private(Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::ChallengeVisibility::_set_Private");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "ChallengeVisibility", "Private", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.CloudStorageDataStatus
#include "Oculus/Platform/CloudStorageDataStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFEBD4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus Unknown
Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageDataStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus Unknown
void Oculus::Platform::CloudStorageDataStatus::_set_Unknown(Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageDataStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFEC0C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus InSync
Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_InSync() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageDataStatus::_get_InSync");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "InSync"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus InSync
void Oculus::Platform::CloudStorageDataStatus::_set_InSync(Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageDataStatus::_set_InSync");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "InSync", value));
}
// [DescriptionAttribute] Offset: 0xDFEC44
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus NeedsDownload
Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_NeedsDownload() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageDataStatus::_get_NeedsDownload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "NeedsDownload"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus NeedsDownload
void Oculus::Platform::CloudStorageDataStatus::_set_NeedsDownload(Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageDataStatus::_set_NeedsDownload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "NeedsDownload", value));
}
// [DescriptionAttribute] Offset: 0xDFEC7C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus RemoteDownloading
Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_RemoteDownloading() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageDataStatus::_get_RemoteDownloading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "RemoteDownloading"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus RemoteDownloading
void Oculus::Platform::CloudStorageDataStatus::_set_RemoteDownloading(Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageDataStatus::_set_RemoteDownloading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "RemoteDownloading", value));
}
// [DescriptionAttribute] Offset: 0xDFECB4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus NeedsUpload
Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_NeedsUpload() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageDataStatus::_get_NeedsUpload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "NeedsUpload"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus NeedsUpload
void Oculus::Platform::CloudStorageDataStatus::_set_NeedsUpload(Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageDataStatus::_set_NeedsUpload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "NeedsUpload", value));
}
// [DescriptionAttribute] Offset: 0xDFECEC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus LocalUploading
Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_LocalUploading() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageDataStatus::_get_LocalUploading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "LocalUploading"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus LocalUploading
void Oculus::Platform::CloudStorageDataStatus::_set_LocalUploading(Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageDataStatus::_set_LocalUploading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "LocalUploading", value));
}
// [DescriptionAttribute] Offset: 0xDFED24
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageDataStatus InConflict
Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CloudStorageDataStatus::_get_InConflict() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageDataStatus::_get_InConflict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::CloudStorageDataStatus>("Oculus.Platform", "CloudStorageDataStatus", "InConflict"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageDataStatus InConflict
void Oculus::Platform::CloudStorageDataStatus::_set_InConflict(Oculus::Platform::CloudStorageDataStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageDataStatus::_set_InConflict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageDataStatus", "InConflict", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.CloudStorageUpdateStatus
#include "Oculus/Platform/CloudStorageUpdateStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFED5C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageUpdateStatus Unknown
Oculus::Platform::CloudStorageUpdateStatus Oculus::Platform::CloudStorageUpdateStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageUpdateStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::CloudStorageUpdateStatus>("Oculus.Platform", "CloudStorageUpdateStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageUpdateStatus Unknown
void Oculus::Platform::CloudStorageUpdateStatus::_set_Unknown(Oculus::Platform::CloudStorageUpdateStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageUpdateStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageUpdateStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFED94
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageUpdateStatus Ok
Oculus::Platform::CloudStorageUpdateStatus Oculus::Platform::CloudStorageUpdateStatus::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageUpdateStatus::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::CloudStorageUpdateStatus>("Oculus.Platform", "CloudStorageUpdateStatus", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageUpdateStatus Ok
void Oculus::Platform::CloudStorageUpdateStatus::_set_Ok(Oculus::Platform::CloudStorageUpdateStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageUpdateStatus::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageUpdateStatus", "Ok", value));
}
// [DescriptionAttribute] Offset: 0xDFEDCC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageUpdateStatus BetterVersionStored
Oculus::Platform::CloudStorageUpdateStatus Oculus::Platform::CloudStorageUpdateStatus::_get_BetterVersionStored() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageUpdateStatus::_get_BetterVersionStored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::CloudStorageUpdateStatus>("Oculus.Platform", "CloudStorageUpdateStatus", "BetterVersionStored"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageUpdateStatus BetterVersionStored
void Oculus::Platform::CloudStorageUpdateStatus::_set_BetterVersionStored(Oculus::Platform::CloudStorageUpdateStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageUpdateStatus::_set_BetterVersionStored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageUpdateStatus", "BetterVersionStored", value));
}
// [DescriptionAttribute] Offset: 0xDFEE04
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.CloudStorageUpdateStatus ManualMergeRequired
Oculus::Platform::CloudStorageUpdateStatus Oculus::Platform::CloudStorageUpdateStatus::_get_ManualMergeRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageUpdateStatus::_get_ManualMergeRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::CloudStorageUpdateStatus>("Oculus.Platform", "CloudStorageUpdateStatus", "ManualMergeRequired"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.CloudStorageUpdateStatus ManualMergeRequired
void Oculus::Platform::CloudStorageUpdateStatus::_set_ManualMergeRequired(Oculus::Platform::CloudStorageUpdateStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::CloudStorageUpdateStatus::_set_ManualMergeRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CloudStorageUpdateStatus", "ManualMergeRequired", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.IMicrophone
#include "Oculus/Platform/IMicrophone.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.IMicrophone.Start
void Oculus::Platform::IMicrophone::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::IMicrophone::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.IMicrophone.Stop
void Oculus::Platform::IMicrophone::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::IMicrophone::Stop");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.IMicrophone.Update
::Array<float>* Oculus::Platform::IMicrophone::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::IMicrophone::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<float>*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IMicrophone::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IMicrophone::*)()>(&IMicrophone::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMicrophone*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IMicrophone::Stop
// Il2CppName: Stop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IMicrophone::*)()>(&IMicrophone::Stop)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMicrophone*), "Stop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IMicrophone::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<float>* (IMicrophone::*)()>(&IMicrophone::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMicrophone*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.IVoipPCMSource
#include "Oculus/Platform/IVoipPCMSource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.IVoipPCMSource.GetPCM
int Oculus::Platform::IVoipPCMSource::GetPCM(::Array<float>* dest, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::IVoipPCMSource::GetPCM");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, dest, length);
}
// Autogenerated method: Oculus.Platform.IVoipPCMSource.SetSenderID
void Oculus::Platform::IVoipPCMSource::SetSenderID(uint64_t senderID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::IVoipPCMSource::SetSenderID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSenderID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, senderID);
}
// Autogenerated method: Oculus.Platform.IVoipPCMSource.Update
void Oculus::Platform::IVoipPCMSource::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::IVoipPCMSource::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.IVoipPCMSource.PeekSizeElements
int Oculus::Platform::IVoipPCMSource::PeekSizeElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::IVoipPCMSource::PeekSizeElements");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekSizeElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IVoipPCMSource::GetPCM
// Il2CppName: GetPCM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IVoipPCMSource::*)(::Array<float>*, int)>(&IVoipPCMSource::GetPCM)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IVoipPCMSource*), "GetPCM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<float>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IVoipPCMSource::SetSenderID
// Il2CppName: SetSenderID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IVoipPCMSource::*)(uint64_t)>(&IVoipPCMSource::SetSenderID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IVoipPCMSource*), "SetSenderID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: IVoipPCMSource::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IVoipPCMSource::*)()>(&IVoipPCMSource::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IVoipPCMSource*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IVoipPCMSource::PeekSizeElements
// Il2CppName: PeekSizeElements
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IVoipPCMSource::*)()>(&IVoipPCMSource::PeekSizeElements)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IVoipPCMSource*), "PeekSizeElements", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.InviteOptions
#include "Oculus/Platform/InviteOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.InviteOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::InviteOptions::operator System::IntPtr()
// Autogenerated method: Oculus.Platform.InviteOptions.Finalize
void Oculus::Platform::InviteOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::InviteOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: InviteOptions::operator System::IntPtr
// Il2CppName: op_Explicit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&InviteOptions::operator System::IntPtr)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InviteOptions*), "op_Explicit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InviteOptions::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InviteOptions::*)()>(&InviteOptions::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InviteOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InviteOptions::*)()>(&InviteOptions::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InviteOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InviteOptions::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InviteOptions::*)()>(&InviteOptions::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InviteOptions*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.KeyValuePairType
#include "Oculus/Platform/KeyValuePairType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFEE3C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.KeyValuePairType String
Oculus::Platform::KeyValuePairType Oculus::Platform::KeyValuePairType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::KeyValuePairType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::KeyValuePairType>("Oculus.Platform", "KeyValuePairType", "String"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.KeyValuePairType String
void Oculus::Platform::KeyValuePairType::_set_String(Oculus::Platform::KeyValuePairType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::KeyValuePairType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "KeyValuePairType", "String", value));
}
// [DescriptionAttribute] Offset: 0xDFEE74
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.KeyValuePairType Int
Oculus::Platform::KeyValuePairType Oculus::Platform::KeyValuePairType::_get_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::KeyValuePairType::_get_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::KeyValuePairType>("Oculus.Platform", "KeyValuePairType", "Int"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.KeyValuePairType Int
void Oculus::Platform::KeyValuePairType::_set_Int(Oculus::Platform::KeyValuePairType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::KeyValuePairType::_set_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "KeyValuePairType", "Int", value));
}
// [DescriptionAttribute] Offset: 0xDFEEAC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.KeyValuePairType Double
Oculus::Platform::KeyValuePairType Oculus::Platform::KeyValuePairType::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::KeyValuePairType::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::KeyValuePairType>("Oculus.Platform", "KeyValuePairType", "Double"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.KeyValuePairType Double
void Oculus::Platform::KeyValuePairType::_set_Double(Oculus::Platform::KeyValuePairType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::KeyValuePairType::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "KeyValuePairType", "Double", value));
}
// [DescriptionAttribute] Offset: 0xDFEEE4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.KeyValuePairType Unknown
Oculus::Platform::KeyValuePairType Oculus::Platform::KeyValuePairType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::KeyValuePairType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::KeyValuePairType>("Oculus.Platform", "KeyValuePairType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.KeyValuePairType Unknown
void Oculus::Platform::KeyValuePairType::_set_Unknown(Oculus::Platform::KeyValuePairType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::KeyValuePairType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "KeyValuePairType", "Unknown", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LaunchResult
#include "Oculus/Platform/LaunchResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFEF1C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult Unknown
Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchResult::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult Unknown
void Oculus::Platform::LaunchResult::_set_Unknown(Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchResult::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFEF54
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult Success
Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchResult::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "Success"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult Success
void Oculus::Platform::LaunchResult::_set_Success(Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchResult::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "Success", value));
}
// [DescriptionAttribute] Offset: 0xDFEF8C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult FailedRoomFull
Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_FailedRoomFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchResult::_get_FailedRoomFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "FailedRoomFull"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult FailedRoomFull
void Oculus::Platform::LaunchResult::_set_FailedRoomFull(Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchResult::_set_FailedRoomFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "FailedRoomFull", value));
}
// [DescriptionAttribute] Offset: 0xDFEFC4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult FailedGameAlreadyStarted
Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_FailedGameAlreadyStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchResult::_get_FailedGameAlreadyStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "FailedGameAlreadyStarted"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult FailedGameAlreadyStarted
void Oculus::Platform::LaunchResult::_set_FailedGameAlreadyStarted(Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchResult::_set_FailedGameAlreadyStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "FailedGameAlreadyStarted", value));
}
// [DescriptionAttribute] Offset: 0xDFEFFC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult FailedRoomNotFound
Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_FailedRoomNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchResult::_get_FailedRoomNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "FailedRoomNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult FailedRoomNotFound
void Oculus::Platform::LaunchResult::_set_FailedRoomNotFound(Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchResult::_set_FailedRoomNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "FailedRoomNotFound", value));
}
// [DescriptionAttribute] Offset: 0xDFF034
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult FailedUserDeclined
Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_FailedUserDeclined() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchResult::_get_FailedUserDeclined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "FailedUserDeclined"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult FailedUserDeclined
void Oculus::Platform::LaunchResult::_set_FailedUserDeclined(Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchResult::_set_FailedUserDeclined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "FailedUserDeclined", value));
}
// [DescriptionAttribute] Offset: 0xDFF06C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchResult FailedOtherReason
Oculus::Platform::LaunchResult Oculus::Platform::LaunchResult::_get_FailedOtherReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchResult::_get_FailedOtherReason");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LaunchResult>("Oculus.Platform", "LaunchResult", "FailedOtherReason"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchResult FailedOtherReason
void Oculus::Platform::LaunchResult::_set_FailedOtherReason(Oculus::Platform::LaunchResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchResult::_set_FailedOtherReason");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchResult", "FailedOtherReason", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LaunchType
#include "Oculus/Platform/LaunchType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFF0A4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchType Unknown
Oculus::Platform::LaunchType Oculus::Platform::LaunchType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LaunchType>("Oculus.Platform", "LaunchType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchType Unknown
void Oculus::Platform::LaunchType::_set_Unknown(Oculus::Platform::LaunchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFF0DC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchType Normal
Oculus::Platform::LaunchType Oculus::Platform::LaunchType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LaunchType>("Oculus.Platform", "LaunchType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchType Normal
void Oculus::Platform::LaunchType::_set_Normal(Oculus::Platform::LaunchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchType", "Normal", value));
}
// [DescriptionAttribute] Offset: 0xDFF114
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchType Invite
Oculus::Platform::LaunchType Oculus::Platform::LaunchType::_get_Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchType::_get_Invite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LaunchType>("Oculus.Platform", "LaunchType", "Invite"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchType Invite
void Oculus::Platform::LaunchType::_set_Invite(Oculus::Platform::LaunchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchType::_set_Invite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchType", "Invite", value));
}
// [DescriptionAttribute] Offset: 0xDFF14C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchType Coordinated
Oculus::Platform::LaunchType Oculus::Platform::LaunchType::_get_Coordinated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchType::_get_Coordinated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LaunchType>("Oculus.Platform", "LaunchType", "Coordinated"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchType Coordinated
void Oculus::Platform::LaunchType::_set_Coordinated(Oculus::Platform::LaunchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchType::_set_Coordinated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchType", "Coordinated", value));
}
// [DescriptionAttribute] Offset: 0xDFF184
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LaunchType Deeplink
Oculus::Platform::LaunchType Oculus::Platform::LaunchType::_get_Deeplink() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchType::_get_Deeplink");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LaunchType>("Oculus.Platform", "LaunchType", "Deeplink"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LaunchType Deeplink
void Oculus::Platform::LaunchType::_set_Deeplink(Oculus::Platform::LaunchType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LaunchType::_set_Deeplink");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LaunchType", "Deeplink", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LeaderboardFilterType
#include "Oculus/Platform/LeaderboardFilterType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFF1BC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardFilterType None
Oculus::Platform::LeaderboardFilterType Oculus::Platform::LeaderboardFilterType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LeaderboardFilterType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LeaderboardFilterType>("Oculus.Platform", "LeaderboardFilterType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardFilterType None
void Oculus::Platform::LeaderboardFilterType::_set_None(Oculus::Platform::LeaderboardFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LeaderboardFilterType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardFilterType", "None", value));
}
// [DescriptionAttribute] Offset: 0xDFF1F4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardFilterType Friends
Oculus::Platform::LeaderboardFilterType Oculus::Platform::LeaderboardFilterType::_get_Friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LeaderboardFilterType::_get_Friends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LeaderboardFilterType>("Oculus.Platform", "LeaderboardFilterType", "Friends"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardFilterType Friends
void Oculus::Platform::LeaderboardFilterType::_set_Friends(Oculus::Platform::LeaderboardFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LeaderboardFilterType::_set_Friends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardFilterType", "Friends", value));
}
// [DescriptionAttribute] Offset: 0xDFF22C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardFilterType Unknown
Oculus::Platform::LeaderboardFilterType Oculus::Platform::LeaderboardFilterType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LeaderboardFilterType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LeaderboardFilterType>("Oculus.Platform", "LeaderboardFilterType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardFilterType Unknown
void Oculus::Platform::LeaderboardFilterType::_set_Unknown(Oculus::Platform::LeaderboardFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LeaderboardFilterType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardFilterType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFF264
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardFilterType UserIds
Oculus::Platform::LeaderboardFilterType Oculus::Platform::LeaderboardFilterType::_get_UserIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LeaderboardFilterType::_get_UserIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LeaderboardFilterType>("Oculus.Platform", "LeaderboardFilterType", "UserIds"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardFilterType UserIds
void Oculus::Platform::LeaderboardFilterType::_set_UserIds(Oculus::Platform::LeaderboardFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LeaderboardFilterType::_set_UserIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardFilterType", "UserIds", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LeaderboardStartAt
#include "Oculus/Platform/LeaderboardStartAt.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFF29C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardStartAt Top
Oculus::Platform::LeaderboardStartAt Oculus::Platform::LeaderboardStartAt::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LeaderboardStartAt::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LeaderboardStartAt>("Oculus.Platform", "LeaderboardStartAt", "Top"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardStartAt Top
void Oculus::Platform::LeaderboardStartAt::_set_Top(Oculus::Platform::LeaderboardStartAt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LeaderboardStartAt::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardStartAt", "Top", value));
}
// [DescriptionAttribute] Offset: 0xDFF2D4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardStartAt CenteredOnViewer
Oculus::Platform::LeaderboardStartAt Oculus::Platform::LeaderboardStartAt::_get_CenteredOnViewer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LeaderboardStartAt::_get_CenteredOnViewer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LeaderboardStartAt>("Oculus.Platform", "LeaderboardStartAt", "CenteredOnViewer"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardStartAt CenteredOnViewer
void Oculus::Platform::LeaderboardStartAt::_set_CenteredOnViewer(Oculus::Platform::LeaderboardStartAt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LeaderboardStartAt::_set_CenteredOnViewer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardStartAt", "CenteredOnViewer", value));
}
// [DescriptionAttribute] Offset: 0xDFF30C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardStartAt CenteredOnViewerOrTop
Oculus::Platform::LeaderboardStartAt Oculus::Platform::LeaderboardStartAt::_get_CenteredOnViewerOrTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LeaderboardStartAt::_get_CenteredOnViewerOrTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LeaderboardStartAt>("Oculus.Platform", "LeaderboardStartAt", "CenteredOnViewerOrTop"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardStartAt CenteredOnViewerOrTop
void Oculus::Platform::LeaderboardStartAt::_set_CenteredOnViewerOrTop(Oculus::Platform::LeaderboardStartAt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LeaderboardStartAt::_set_CenteredOnViewerOrTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardStartAt", "CenteredOnViewerOrTop", value));
}
// [DescriptionAttribute] Offset: 0xDFF344
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LeaderboardStartAt Unknown
Oculus::Platform::LeaderboardStartAt Oculus::Platform::LeaderboardStartAt::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LeaderboardStartAt::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LeaderboardStartAt>("Oculus.Platform", "LeaderboardStartAt", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LeaderboardStartAt Unknown
void Oculus::Platform::LeaderboardStartAt::_set_Unknown(Oculus::Platform::LeaderboardStartAt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LeaderboardStartAt::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LeaderboardStartAt", "Unknown", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LivestreamingAudience
#include "Oculus/Platform/LivestreamingAudience.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFF37C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingAudience Unknown
Oculus::Platform::LivestreamingAudience Oculus::Platform::LivestreamingAudience::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingAudience::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LivestreamingAudience>("Oculus.Platform", "LivestreamingAudience", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingAudience Unknown
void Oculus::Platform::LivestreamingAudience::_set_Unknown(Oculus::Platform::LivestreamingAudience value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingAudience::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingAudience", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFF3B4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingAudience Public
Oculus::Platform::LivestreamingAudience Oculus::Platform::LivestreamingAudience::_get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingAudience::_get_Public");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LivestreamingAudience>("Oculus.Platform", "LivestreamingAudience", "Public"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingAudience Public
void Oculus::Platform::LivestreamingAudience::_set_Public(Oculus::Platform::LivestreamingAudience value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingAudience::_set_Public");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingAudience", "Public", value));
}
// [DescriptionAttribute] Offset: 0xDFF3EC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingAudience Friends
Oculus::Platform::LivestreamingAudience Oculus::Platform::LivestreamingAudience::_get_Friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingAudience::_get_Friends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LivestreamingAudience>("Oculus.Platform", "LivestreamingAudience", "Friends"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingAudience Friends
void Oculus::Platform::LivestreamingAudience::_set_Friends(Oculus::Platform::LivestreamingAudience value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingAudience::_set_Friends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingAudience", "Friends", value));
}
// [DescriptionAttribute] Offset: 0xDFF424
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingAudience OnlyMe
Oculus::Platform::LivestreamingAudience Oculus::Platform::LivestreamingAudience::_get_OnlyMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingAudience::_get_OnlyMe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LivestreamingAudience>("Oculus.Platform", "LivestreamingAudience", "OnlyMe"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingAudience OnlyMe
void Oculus::Platform::LivestreamingAudience::_set_OnlyMe(Oculus::Platform::LivestreamingAudience value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingAudience::_set_OnlyMe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingAudience", "OnlyMe", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LivestreamingMicrophoneStatus
#include "Oculus/Platform/LivestreamingMicrophoneStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFF45C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingMicrophoneStatus Unknown
Oculus::Platform::LivestreamingMicrophoneStatus Oculus::Platform::LivestreamingMicrophoneStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingMicrophoneStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LivestreamingMicrophoneStatus>("Oculus.Platform", "LivestreamingMicrophoneStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingMicrophoneStatus Unknown
void Oculus::Platform::LivestreamingMicrophoneStatus::_set_Unknown(Oculus::Platform::LivestreamingMicrophoneStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingMicrophoneStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingMicrophoneStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFF494
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingMicrophoneStatus MicrophoneOn
Oculus::Platform::LivestreamingMicrophoneStatus Oculus::Platform::LivestreamingMicrophoneStatus::_get_MicrophoneOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingMicrophoneStatus::_get_MicrophoneOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LivestreamingMicrophoneStatus>("Oculus.Platform", "LivestreamingMicrophoneStatus", "MicrophoneOn"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingMicrophoneStatus MicrophoneOn
void Oculus::Platform::LivestreamingMicrophoneStatus::_set_MicrophoneOn(Oculus::Platform::LivestreamingMicrophoneStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingMicrophoneStatus::_set_MicrophoneOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingMicrophoneStatus", "MicrophoneOn", value));
}
// [DescriptionAttribute] Offset: 0xDFF4CC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingMicrophoneStatus MicrophoneOff
Oculus::Platform::LivestreamingMicrophoneStatus Oculus::Platform::LivestreamingMicrophoneStatus::_get_MicrophoneOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingMicrophoneStatus::_get_MicrophoneOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LivestreamingMicrophoneStatus>("Oculus.Platform", "LivestreamingMicrophoneStatus", "MicrophoneOff"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingMicrophoneStatus MicrophoneOff
void Oculus::Platform::LivestreamingMicrophoneStatus::_set_MicrophoneOff(Oculus::Platform::LivestreamingMicrophoneStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingMicrophoneStatus::_set_MicrophoneOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingMicrophoneStatus", "MicrophoneOff", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.LivestreamingStartStatus
#include "Oculus/Platform/LivestreamingStartStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFF504
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus Success
Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingStartStatus::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "Success"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus Success
void Oculus::Platform::LivestreamingStartStatus::_set_Success(Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingStartStatus::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "Success", value));
}
// [DescriptionAttribute] Offset: 0xDFF53C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus Unknown
Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingStartStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus Unknown
void Oculus::Platform::LivestreamingStartStatus::_set_Unknown(Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingStartStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFF574
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus NoPackageSet
Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_NoPackageSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingStartStatus::_get_NoPackageSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "NoPackageSet"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus NoPackageSet
void Oculus::Platform::LivestreamingStartStatus::_set_NoPackageSet(Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingStartStatus::_set_NoPackageSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "NoPackageSet", value));
}
// [DescriptionAttribute] Offset: 0xDFF5AC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus NoFbConnect
Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_NoFbConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingStartStatus::_get_NoFbConnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "NoFbConnect"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus NoFbConnect
void Oculus::Platform::LivestreamingStartStatus::_set_NoFbConnect(Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingStartStatus::_set_NoFbConnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "NoFbConnect", value));
}
// [DescriptionAttribute] Offset: 0xDFF5E4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus NoSessionId
Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_NoSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingStartStatus::_get_NoSessionId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "NoSessionId"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus NoSessionId
void Oculus::Platform::LivestreamingStartStatus::_set_NoSessionId(Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingStartStatus::_set_NoSessionId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "NoSessionId", value));
}
// [DescriptionAttribute] Offset: 0xDFF61C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.LivestreamingStartStatus MissingParameters
Oculus::Platform::LivestreamingStartStatus Oculus::Platform::LivestreamingStartStatus::_get_MissingParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingStartStatus::_get_MissingParameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::LivestreamingStartStatus>("Oculus.Platform", "LivestreamingStartStatus", "MissingParameters"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.LivestreamingStartStatus MissingParameters
void Oculus::Platform::LivestreamingStartStatus::_set_MissingParameters(Oculus::Platform::LivestreamingStartStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::LivestreamingStartStatus::_set_MissingParameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "LivestreamingStartStatus", "MissingParameters", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MatchmakingCriterionImportance
#include "Oculus/Platform/MatchmakingCriterionImportance.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFF654
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingCriterionImportance Required
Oculus::Platform::MatchmakingCriterionImportance Oculus::Platform::MatchmakingCriterionImportance::_get_Required() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingCriterionImportance::_get_Required");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::MatchmakingCriterionImportance>("Oculus.Platform", "MatchmakingCriterionImportance", "Required"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingCriterionImportance Required
void Oculus::Platform::MatchmakingCriterionImportance::_set_Required(Oculus::Platform::MatchmakingCriterionImportance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingCriterionImportance::_set_Required");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingCriterionImportance", "Required", value));
}
// [DescriptionAttribute] Offset: 0xDFF68C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingCriterionImportance High
Oculus::Platform::MatchmakingCriterionImportance Oculus::Platform::MatchmakingCriterionImportance::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingCriterionImportance::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::MatchmakingCriterionImportance>("Oculus.Platform", "MatchmakingCriterionImportance", "High"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingCriterionImportance High
void Oculus::Platform::MatchmakingCriterionImportance::_set_High(Oculus::Platform::MatchmakingCriterionImportance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingCriterionImportance::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingCriterionImportance", "High", value));
}
// [DescriptionAttribute] Offset: 0xDFF6C4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingCriterionImportance Medium
Oculus::Platform::MatchmakingCriterionImportance Oculus::Platform::MatchmakingCriterionImportance::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingCriterionImportance::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::MatchmakingCriterionImportance>("Oculus.Platform", "MatchmakingCriterionImportance", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingCriterionImportance Medium
void Oculus::Platform::MatchmakingCriterionImportance::_set_Medium(Oculus::Platform::MatchmakingCriterionImportance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingCriterionImportance::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingCriterionImportance", "Medium", value));
}
// [DescriptionAttribute] Offset: 0xDFF6FC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingCriterionImportance Low
Oculus::Platform::MatchmakingCriterionImportance Oculus::Platform::MatchmakingCriterionImportance::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingCriterionImportance::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::MatchmakingCriterionImportance>("Oculus.Platform", "MatchmakingCriterionImportance", "Low"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingCriterionImportance Low
void Oculus::Platform::MatchmakingCriterionImportance::_set_Low(Oculus::Platform::MatchmakingCriterionImportance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingCriterionImportance::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingCriterionImportance", "Low", value));
}
// [DescriptionAttribute] Offset: 0xDFF734
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingCriterionImportance Unknown
Oculus::Platform::MatchmakingCriterionImportance Oculus::Platform::MatchmakingCriterionImportance::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingCriterionImportance::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::MatchmakingCriterionImportance>("Oculus.Platform", "MatchmakingCriterionImportance", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingCriterionImportance Unknown
void Oculus::Platform::MatchmakingCriterionImportance::_set_Unknown(Oculus::Platform::MatchmakingCriterionImportance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingCriterionImportance::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingCriterionImportance", "Unknown", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.MatchmakingOptions
#include "Oculus/Platform/MatchmakingOptions.hpp"
// Including type: Oculus.Platform.RoomJoinPolicy
#include "Oculus/Platform/RoomJoinPolicy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetCreateRoomDataStore
void Oculus::Platform::MatchmakingOptions::SetCreateRoomDataStore(::Il2CppString* key, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingOptions::SetCreateRoomDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCreateRoomDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.ClearCreateRoomDataStore
void Oculus::Platform::MatchmakingOptions::ClearCreateRoomDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingOptions::ClearCreateRoomDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCreateRoomDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetCreateRoomJoinPolicy
void Oculus::Platform::MatchmakingOptions::SetCreateRoomJoinPolicy(Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingOptions::SetCreateRoomJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCreateRoomJoinPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetCreateRoomMaxUsers
void Oculus::Platform::MatchmakingOptions::SetCreateRoomMaxUsers(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingOptions::SetCreateRoomMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCreateRoomMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.AddEnqueueAdditionalUser
void Oculus::Platform::MatchmakingOptions::AddEnqueueAdditionalUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingOptions::AddEnqueueAdditionalUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEnqueueAdditionalUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.ClearEnqueueAdditionalUsers
void Oculus::Platform::MatchmakingOptions::ClearEnqueueAdditionalUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingOptions::ClearEnqueueAdditionalUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearEnqueueAdditionalUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueDataSettings
void Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings(::Il2CppString* key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnqueueDataSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueDataSettings
void Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings(::Il2CppString* key, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnqueueDataSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueDataSettings
void Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings(::Il2CppString* key, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingOptions::SetEnqueueDataSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnqueueDataSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.ClearEnqueueDataSettings
void Oculus::Platform::MatchmakingOptions::ClearEnqueueDataSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingOptions::ClearEnqueueDataSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearEnqueueDataSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueIsDebug
void Oculus::Platform::MatchmakingOptions::SetEnqueueIsDebug(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingOptions::SetEnqueueIsDebug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnqueueIsDebug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.SetEnqueueQueryKey
void Oculus::Platform::MatchmakingOptions::SetEnqueueQueryKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingOptions::SetEnqueueQueryKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnqueueQueryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.MatchmakingOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::MatchmakingOptions::operator System::IntPtr()
// Autogenerated method: Oculus.Platform.MatchmakingOptions.Finalize
void Oculus::Platform::MatchmakingOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MatchmakingOptions::SetCreateRoomDataStore
// Il2CppName: SetCreateRoomDataStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingOptions::*)(::Il2CppString*, ::Il2CppString*)>(&MatchmakingOptions::SetCreateRoomDataStore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingOptions*), "SetCreateRoomDataStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: MatchmakingOptions::ClearCreateRoomDataStore
// Il2CppName: ClearCreateRoomDataStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingOptions::*)()>(&MatchmakingOptions::ClearCreateRoomDataStore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingOptions*), "ClearCreateRoomDataStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MatchmakingOptions::SetCreateRoomJoinPolicy
// Il2CppName: SetCreateRoomJoinPolicy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingOptions::*)(Oculus::Platform::RoomJoinPolicy)>(&MatchmakingOptions::SetCreateRoomJoinPolicy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingOptions*), "SetCreateRoomJoinPolicy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::RoomJoinPolicy>()});
  }
};
// Writing MetadataGetter for method: MatchmakingOptions::SetCreateRoomMaxUsers
// Il2CppName: SetCreateRoomMaxUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingOptions::*)(uint)>(&MatchmakingOptions::SetCreateRoomMaxUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingOptions*), "SetCreateRoomMaxUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: MatchmakingOptions::AddEnqueueAdditionalUser
// Il2CppName: AddEnqueueAdditionalUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingOptions::*)(uint64_t)>(&MatchmakingOptions::AddEnqueueAdditionalUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingOptions*), "AddEnqueueAdditionalUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: MatchmakingOptions::ClearEnqueueAdditionalUsers
// Il2CppName: ClearEnqueueAdditionalUsers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingOptions::*)()>(&MatchmakingOptions::ClearEnqueueAdditionalUsers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingOptions*), "ClearEnqueueAdditionalUsers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MatchmakingOptions::SetEnqueueDataSettings
// Il2CppName: SetEnqueueDataSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingOptions::*)(::Il2CppString*, int)>(&MatchmakingOptions::SetEnqueueDataSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingOptions*), "SetEnqueueDataSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MatchmakingOptions::SetEnqueueDataSettings
// Il2CppName: SetEnqueueDataSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingOptions::*)(::Il2CppString*, double)>(&MatchmakingOptions::SetEnqueueDataSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingOptions*), "SetEnqueueDataSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<double>()});
  }
};
// Writing MetadataGetter for method: MatchmakingOptions::SetEnqueueDataSettings
// Il2CppName: SetEnqueueDataSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingOptions::*)(::Il2CppString*, ::Il2CppString*)>(&MatchmakingOptions::SetEnqueueDataSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingOptions*), "SetEnqueueDataSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: MatchmakingOptions::ClearEnqueueDataSettings
// Il2CppName: ClearEnqueueDataSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingOptions::*)()>(&MatchmakingOptions::ClearEnqueueDataSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingOptions*), "ClearEnqueueDataSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MatchmakingOptions::SetEnqueueIsDebug
// Il2CppName: SetEnqueueIsDebug
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingOptions::*)(bool)>(&MatchmakingOptions::SetEnqueueIsDebug)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingOptions*), "SetEnqueueIsDebug", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MatchmakingOptions::SetEnqueueQueryKey
// Il2CppName: SetEnqueueQueryKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingOptions::*)(::Il2CppString*)>(&MatchmakingOptions::SetEnqueueQueryKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingOptions*), "SetEnqueueQueryKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: MatchmakingOptions::operator System::IntPtr
// Il2CppName: op_Explicit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&MatchmakingOptions::operator System::IntPtr)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingOptions*), "op_Explicit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MatchmakingOptions::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingOptions::*)()>(&MatchmakingOptions::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingOptions::*)()>(&MatchmakingOptions::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingOptions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MatchmakingOptions::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MatchmakingOptions::*)()>(&MatchmakingOptions::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MatchmakingOptions*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MatchmakingStatApproach
#include "Oculus/Platform/MatchmakingStatApproach.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFF76C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingStatApproach Unknown
Oculus::Platform::MatchmakingStatApproach Oculus::Platform::MatchmakingStatApproach::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingStatApproach::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::MatchmakingStatApproach>("Oculus.Platform", "MatchmakingStatApproach", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingStatApproach Unknown
void Oculus::Platform::MatchmakingStatApproach::_set_Unknown(Oculus::Platform::MatchmakingStatApproach value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingStatApproach::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingStatApproach", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFF7A4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingStatApproach Trailing
Oculus::Platform::MatchmakingStatApproach Oculus::Platform::MatchmakingStatApproach::_get_Trailing() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingStatApproach::_get_Trailing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::MatchmakingStatApproach>("Oculus.Platform", "MatchmakingStatApproach", "Trailing"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingStatApproach Trailing
void Oculus::Platform::MatchmakingStatApproach::_set_Trailing(Oculus::Platform::MatchmakingStatApproach value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingStatApproach::_set_Trailing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingStatApproach", "Trailing", value));
}
// [DescriptionAttribute] Offset: 0xDFF7DC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MatchmakingStatApproach Swingy
Oculus::Platform::MatchmakingStatApproach Oculus::Platform::MatchmakingStatApproach::_get_Swingy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingStatApproach::_get_Swingy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::MatchmakingStatApproach>("Oculus.Platform", "MatchmakingStatApproach", "Swingy"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MatchmakingStatApproach Swingy
void Oculus::Platform::MatchmakingStatApproach::_set_Swingy(Oculus::Platform::MatchmakingStatApproach value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MatchmakingStatApproach::_set_Swingy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MatchmakingStatApproach", "Swingy", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MediaContentType
#include "Oculus/Platform/MediaContentType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0xDFF814
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MediaContentType Unknown
Oculus::Platform::MediaContentType Oculus::Platform::MediaContentType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MediaContentType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::MediaContentType>("Oculus.Platform", "MediaContentType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MediaContentType Unknown
void Oculus::Platform::MediaContentType::_set_Unknown(Oculus::Platform::MediaContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MediaContentType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MediaContentType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0xDFF84C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.MediaContentType Photo
Oculus::Platform::MediaContentType Oculus::Platform::MediaContentType::_get_Photo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MediaContentType::_get_Photo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::MediaContentType>("Oculus.Platform", "MediaContentType", "Photo"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.MediaContentType Photo
void Oculus::Platform::MediaContentType::_set_Photo(Oculus::Platform::MediaContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MediaContentType::_set_Photo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "MediaContentType", "Photo", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Message/Callback
#include "Oculus/Platform/Message_Callback.hpp"
// Including type: Oculus.Platform.Models.Error
#include "Oculus/Platform/Models/Error.hpp"
// Including type: Oculus.Platform.Message/ExtraMessageTypesHandler
#include "Oculus/Platform/Message_ExtraMessageTypesHandler.hpp"
// Including type: Oculus.Platform.Models.PingResult
#include "Oculus/Platform/Models/PingResult.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
// Including type: Oculus.Platform.Models.HttpTransferUpdate
#include "Oculus/Platform/Models/HttpTransferUpdate.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
// Including type: Oculus.Platform.Models.AbuseReportRecording
#include "Oculus/Platform/Models/AbuseReportRecording.hpp"
// Including type: Oculus.Platform.Models.AchievementDefinitionList
#include "Oculus/Platform/Models/AchievementDefinitionList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
// Including type: Oculus.Platform.Models.AchievementUpdate
#include "Oculus/Platform/Models/AchievementUpdate.hpp"
// Including type: Oculus.Platform.Models.ApplicationVersion
#include "Oculus/Platform/Models/ApplicationVersion.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
// Including type: Oculus.Platform.Models.AssetFileDeleteResult
#include "Oculus/Platform/Models/AssetFileDeleteResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadCancelResult
#include "Oculus/Platform/Models/AssetFileDownloadCancelResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadResult
#include "Oculus/Platform/Models/AssetFileDownloadResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadUpdate
#include "Oculus/Platform/Models/AssetFileDownloadUpdate.hpp"
// Including type: Oculus.Platform.Models.CalApplicationFinalized
#include "Oculus/Platform/Models/CalApplicationFinalized.hpp"
// Including type: Oculus.Platform.Models.CalApplicationProposed
#include "Oculus/Platform/Models/CalApplicationProposed.hpp"
// Including type: Oculus.Platform.Models.CalApplicationSuggestionList
#include "Oculus/Platform/Models/CalApplicationSuggestionList.hpp"
// Including type: Oculus.Platform.Models.Challenge
#include "Oculus/Platform/Models/Challenge.hpp"
// Including type: Oculus.Platform.Models.ChallengeEntryList
#include "Oculus/Platform/Models/ChallengeEntryList.hpp"
// Including type: Oculus.Platform.Models.ChallengeList
#include "Oculus/Platform/Models/ChallengeList.hpp"
// Including type: Oculus.Platform.Models.CloudStorageConflictMetadata
#include "Oculus/Platform/Models/CloudStorageConflictMetadata.hpp"
// Including type: Oculus.Platform.Models.CloudStorageData
#include "Oculus/Platform/Models/CloudStorageData.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadata
#include "Oculus/Platform/Models/CloudStorageMetadata.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadataList
#include "Oculus/Platform/Models/CloudStorageMetadataList.hpp"
// Including type: Oculus.Platform.Models.CloudStorageUpdateResponse
#include "Oculus/Platform/Models/CloudStorageUpdateResponse.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceLeaveIntent
#include "Oculus/Platform/Models/GroupPresenceLeaveIntent.hpp"
// Including type: Oculus.Platform.Models.InstalledApplicationList
#include "Oculus/Platform/Models/InstalledApplicationList.hpp"
// Including type: Oculus.Platform.Models.InvitePanelResultInfo
#include "Oculus/Platform/Models/InvitePanelResultInfo.hpp"
// Including type: Oculus.Platform.Models.LaunchBlockFlowResult
#include "Oculus/Platform/Models/LaunchBlockFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchFriendRequestFlowResult
#include "Oculus/Platform/Models/LaunchFriendRequestFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchInvitePanelFlowResult
#include "Oculus/Platform/Models/LaunchInvitePanelFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchReportFlowResult
#include "Oculus/Platform/Models/LaunchReportFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchUnblockFlowResult
#include "Oculus/Platform/Models/LaunchUnblockFlowResult.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
// Including type: Oculus.Platform.Models.LeaderboardList
#include "Oculus/Platform/Models/LeaderboardList.hpp"
// Including type: Oculus.Platform.Models.LinkedAccountList
#include "Oculus/Platform/Models/LinkedAccountList.hpp"
// Including type: Oculus.Platform.Models.LivestreamingApplicationStatus
#include "Oculus/Platform/Models/LivestreamingApplicationStatus.hpp"
// Including type: Oculus.Platform.Models.LivestreamingStartResult
#include "Oculus/Platform/Models/LivestreamingStartResult.hpp"
// Including type: Oculus.Platform.Models.LivestreamingStatus
#include "Oculus/Platform/Models/LivestreamingStatus.hpp"
// Including type: Oculus.Platform.Models.LivestreamingVideoStats
#include "Oculus/Platform/Models/LivestreamingVideoStats.hpp"
// Including type: Oculus.Platform.Models.MatchmakingAdminSnapshot
#include "Oculus/Platform/Models/MatchmakingAdminSnapshot.hpp"
// Including type: Oculus.Platform.Models.MatchmakingBrowseResult
#include "Oculus/Platform/Models/MatchmakingBrowseResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResult
#include "Oculus/Platform/Models/MatchmakingEnqueueResult.hpp"
// Including type: Oculus.Platform.Models.MatchmakingEnqueueResultAndRoom
#include "Oculus/Platform/Models/MatchmakingEnqueueResultAndRoom.hpp"
// Including type: Oculus.Platform.Models.MatchmakingStats
#include "Oculus/Platform/Models/MatchmakingStats.hpp"
// Including type: Oculus.Platform.Models.NetSyncConnection
#include "Oculus/Platform/Models/NetSyncConnection.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionList
#include "Oculus/Platform/Models/NetSyncSessionList.hpp"
// Including type: Oculus.Platform.Models.NetSyncSessionsChangedNotification
#include "Oculus/Platform/Models/NetSyncSessionsChangedNotification.hpp"
// Including type: Oculus.Platform.Models.NetSyncSetSessionPropertyResult
#include "Oculus/Platform/Models/NetSyncSetSessionPropertyResult.hpp"
// Including type: Oculus.Platform.Models.NetSyncVoipAttenuationValueList
#include "Oculus/Platform/Models/NetSyncVoipAttenuationValueList.hpp"
// Including type: Oculus.Platform.Models.OrgScopedID
#include "Oculus/Platform/Models/OrgScopedID.hpp"
// Including type: Oculus.Platform.Models.Party
#include "Oculus/Platform/Models/Party.hpp"
// Including type: Oculus.Platform.Models.PartyID
#include "Oculus/Platform/Models/PartyID.hpp"
// Including type: Oculus.Platform.Models.PartyUpdateNotification
#include "Oculus/Platform/Models/PartyUpdateNotification.hpp"
// Including type: Oculus.Platform.Models.PidList
#include "Oculus/Platform/Models/PidList.hpp"
// Including type: Oculus.Platform.Models.ProductList
#include "Oculus/Platform/Models/ProductList.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotificationList
#include "Oculus/Platform/Models/RoomInviteNotificationList.hpp"
// Including type: Oculus.Platform.Models.RoomList
#include "Oculus/Platform/Models/RoomList.hpp"
// Including type: Oculus.Platform.Models.SdkAccountList
#include "Oculus/Platform/Models/SdkAccountList.hpp"
// Including type: Oculus.Platform.Models.ShareMediaResult
#include "Oculus/Platform/Models/ShareMediaResult.hpp"
// Including type: Oculus.Platform.Models.SystemPermission
#include "Oculus/Platform/Models/SystemPermission.hpp"
// Including type: Oculus.Platform.Models.SystemVoipState
#include "Oculus/Platform/Models/SystemVoipState.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.UserAndRoomList
#include "Oculus/Platform/Models/UserAndRoomList.hpp"
// Including type: Oculus.Platform.Models.UserDataStoreUpdateResponse
#include "Oculus/Platform/Models/UserDataStoreUpdateResponse.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
// Including type: Oculus.Platform.Models.UserReportID
#include "Oculus/Platform/Models/UserReportID.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xDFF884
// Autogenerated static field getter
// Get static field: static private Oculus.Platform.Message/ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField
Oculus::Platform::Message::ExtraMessageTypesHandler* Oculus::Platform::Message::_get_$HandleExtraMessageTypes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::_get_$HandleExtraMessageTypes$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Oculus::Platform::Message::ExtraMessageTypesHandler*>("Oculus.Platform", "Message", "<HandleExtraMessageTypes>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Oculus.Platform.Message/ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField
void Oculus::Platform::Message::_set_$HandleExtraMessageTypes$k__BackingField(Oculus::Platform::Message::ExtraMessageTypesHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::_set_$HandleExtraMessageTypes$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message", "<HandleExtraMessageTypes>k__BackingField", value));
}
// Autogenerated method: Oculus.Platform.Message.get_Type
Oculus::Platform::Message::MessageType Oculus::Platform::Message::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Message::MessageType, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.get_IsError
bool Oculus::Platform::Message::get_IsError() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::get_IsError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.get_RequestID
uint64_t Oculus::Platform::Message::get_RequestID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::get_RequestID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetError
Oculus::Platform::Models::Error* Oculus::Platform::Message::GetError() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Error*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPingResult
Oculus::Platform::Models::PingResult* Oculus::Platform::Message::GetPingResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetPingResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPingResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PingResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetworkingPeer
Oculus::Platform::Models::NetworkingPeer* Oculus::Platform::Message::GetNetworkingPeer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetNetworkingPeer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetworkingPeer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetworkingPeer*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetHttpTransferUpdate
Oculus::Platform::Models::HttpTransferUpdate* Oculus::Platform::Message::GetHttpTransferUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetHttpTransferUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHttpTransferUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::HttpTransferUpdate*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPlatformInitialize
Oculus::Platform::Models::PlatformInitialize* Oculus::Platform::Message::GetPlatformInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetPlatformInitialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlatformInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PlatformInitialize*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAbuseReportRecording
Oculus::Platform::Models::AbuseReportRecording* Oculus::Platform::Message::GetAbuseReportRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetAbuseReportRecording");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAbuseReportRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AbuseReportRecording*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAchievementDefinitions
Oculus::Platform::Models::AchievementDefinitionList* Oculus::Platform::Message::GetAchievementDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetAchievementDefinitions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAchievementDefinitions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AchievementDefinitionList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAchievementProgressList
Oculus::Platform::Models::AchievementProgressList* Oculus::Platform::Message::GetAchievementProgressList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetAchievementProgressList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAchievementProgressList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AchievementProgressList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAchievementUpdate
Oculus::Platform::Models::AchievementUpdate* Oculus::Platform::Message::GetAchievementUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetAchievementUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAchievementUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AchievementUpdate*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetApplicationVersion
Oculus::Platform::Models::ApplicationVersion* Oculus::Platform::Message::GetApplicationVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetApplicationVersion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ApplicationVersion*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetDetails
Oculus::Platform::Models::AssetDetails* Oculus::Platform::Message::GetAssetDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetAssetDetails");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetDetails*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetDetailsList
Oculus::Platform::Models::AssetDetailsList* Oculus::Platform::Message::GetAssetDetailsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetAssetDetailsList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetDetailsList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetDetailsList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetFileDeleteResult
Oculus::Platform::Models::AssetFileDeleteResult* Oculus::Platform::Message::GetAssetFileDeleteResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetAssetFileDeleteResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetFileDeleteResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDeleteResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetFileDownloadCancelResult
Oculus::Platform::Models::AssetFileDownloadCancelResult* Oculus::Platform::Message::GetAssetFileDownloadCancelResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetAssetFileDownloadCancelResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetFileDownloadCancelResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadCancelResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetFileDownloadResult
Oculus::Platform::Models::AssetFileDownloadResult* Oculus::Platform::Message::GetAssetFileDownloadResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetAssetFileDownloadResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetFileDownloadResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetAssetFileDownloadUpdate
Oculus::Platform::Models::AssetFileDownloadUpdate* Oculus::Platform::Message::GetAssetFileDownloadUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetAssetFileDownloadUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetFileDownloadUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadUpdate*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCalApplicationFinalized
Oculus::Platform::Models::CalApplicationFinalized* Oculus::Platform::Message::GetCalApplicationFinalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetCalApplicationFinalized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalApplicationFinalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationFinalized*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCalApplicationProposed
Oculus::Platform::Models::CalApplicationProposed* Oculus::Platform::Message::GetCalApplicationProposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetCalApplicationProposed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalApplicationProposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationProposed*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCalApplicationSuggestionList
Oculus::Platform::Models::CalApplicationSuggestionList* Oculus::Platform::Message::GetCalApplicationSuggestionList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetCalApplicationSuggestionList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalApplicationSuggestionList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationSuggestionList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetChallenge
Oculus::Platform::Models::Challenge* Oculus::Platform::Message::GetChallenge() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetChallenge");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChallenge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Challenge*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetChallengeEntryList
Oculus::Platform::Models::ChallengeEntryList* Oculus::Platform::Message::GetChallengeEntryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetChallengeEntryList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChallengeEntryList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ChallengeEntryList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetChallengeList
Oculus::Platform::Models::ChallengeList* Oculus::Platform::Message::GetChallengeList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetChallengeList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChallengeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ChallengeList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCloudStorageConflictMetadata
Oculus::Platform::Models::CloudStorageConflictMetadata* Oculus::Platform::Message::GetCloudStorageConflictMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetCloudStorageConflictMetadata");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloudStorageConflictMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageConflictMetadata*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCloudStorageData
Oculus::Platform::Models::CloudStorageData* Oculus::Platform::Message::GetCloudStorageData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetCloudStorageData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloudStorageData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageData*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCloudStorageMetadata
Oculus::Platform::Models::CloudStorageMetadata* Oculus::Platform::Message::GetCloudStorageMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetCloudStorageMetadata");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloudStorageMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageMetadata*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCloudStorageMetadataList
Oculus::Platform::Models::CloudStorageMetadataList* Oculus::Platform::Message::GetCloudStorageMetadataList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetCloudStorageMetadataList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloudStorageMetadataList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageMetadataList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetCloudStorageUpdateResponse
Oculus::Platform::Models::CloudStorageUpdateResponse* Oculus::Platform::Message::GetCloudStorageUpdateResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetCloudStorageUpdateResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloudStorageUpdateResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageUpdateResponse*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetDataStore
System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* Oculus::Platform::Message::GetDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetDataStore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetDestinationList
Oculus::Platform::Models::DestinationList* Oculus::Platform::Message::GetDestinationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetDestinationList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDestinationList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::DestinationList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetGroupPresenceLeaveIntent
Oculus::Platform::Models::GroupPresenceLeaveIntent* Oculus::Platform::Message::GetGroupPresenceLeaveIntent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetGroupPresenceLeaveIntent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGroupPresenceLeaveIntent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::GroupPresenceLeaveIntent*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetInstalledApplicationList
Oculus::Platform::Models::InstalledApplicationList* Oculus::Platform::Message::GetInstalledApplicationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetInstalledApplicationList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInstalledApplicationList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::InstalledApplicationList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetInvitePanelResultInfo
Oculus::Platform::Models::InvitePanelResultInfo* Oculus::Platform::Message::GetInvitePanelResultInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetInvitePanelResultInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInvitePanelResultInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::InvitePanelResultInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLaunchBlockFlowResult
Oculus::Platform::Models::LaunchBlockFlowResult* Oculus::Platform::Message::GetLaunchBlockFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetLaunchBlockFlowResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLaunchBlockFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchBlockFlowResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLaunchFriendRequestFlowResult
Oculus::Platform::Models::LaunchFriendRequestFlowResult* Oculus::Platform::Message::GetLaunchFriendRequestFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetLaunchFriendRequestFlowResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLaunchFriendRequestFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchFriendRequestFlowResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLaunchInvitePanelFlowResult
Oculus::Platform::Models::LaunchInvitePanelFlowResult* Oculus::Platform::Message::GetLaunchInvitePanelFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetLaunchInvitePanelFlowResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLaunchInvitePanelFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchInvitePanelFlowResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLaunchReportFlowResult
Oculus::Platform::Models::LaunchReportFlowResult* Oculus::Platform::Message::GetLaunchReportFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetLaunchReportFlowResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLaunchReportFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchReportFlowResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLaunchUnblockFlowResult
Oculus::Platform::Models::LaunchUnblockFlowResult* Oculus::Platform::Message::GetLaunchUnblockFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetLaunchUnblockFlowResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLaunchUnblockFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchUnblockFlowResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLeaderboardDidUpdate
bool Oculus::Platform::Message::GetLeaderboardDidUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetLeaderboardDidUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardDidUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLeaderboardEntryList
Oculus::Platform::Models::LeaderboardEntryList* Oculus::Platform::Message::GetLeaderboardEntryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetLeaderboardEntryList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardEntryList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LeaderboardEntryList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLeaderboardList
Oculus::Platform::Models::LeaderboardList* Oculus::Platform::Message::GetLeaderboardList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetLeaderboardList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LeaderboardList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLinkedAccountList
Oculus::Platform::Models::LinkedAccountList* Oculus::Platform::Message::GetLinkedAccountList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetLinkedAccountList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLinkedAccountList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LinkedAccountList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLivestreamingApplicationStatus
Oculus::Platform::Models::LivestreamingApplicationStatus* Oculus::Platform::Message::GetLivestreamingApplicationStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetLivestreamingApplicationStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLivestreamingApplicationStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingApplicationStatus*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLivestreamingStartResult
Oculus::Platform::Models::LivestreamingStartResult* Oculus::Platform::Message::GetLivestreamingStartResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetLivestreamingStartResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLivestreamingStartResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingStartResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLivestreamingStatus
Oculus::Platform::Models::LivestreamingStatus* Oculus::Platform::Message::GetLivestreamingStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetLivestreamingStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLivestreamingStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingStatus*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetLivestreamingVideoStats
Oculus::Platform::Models::LivestreamingVideoStats* Oculus::Platform::Message::GetLivestreamingVideoStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetLivestreamingVideoStats");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLivestreamingVideoStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingVideoStats*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetMatchmakingAdminSnapshot
Oculus::Platform::Models::MatchmakingAdminSnapshot* Oculus::Platform::Message::GetMatchmakingAdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetMatchmakingAdminSnapshot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingAdminSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingAdminSnapshot*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetMatchmakingBrowseResult
Oculus::Platform::Models::MatchmakingBrowseResult* Oculus::Platform::Message::GetMatchmakingBrowseResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetMatchmakingBrowseResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingBrowseResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingBrowseResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetMatchmakingEnqueueResult
Oculus::Platform::Models::MatchmakingEnqueueResult* Oculus::Platform::Message::GetMatchmakingEnqueueResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetMatchmakingEnqueueResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingEnqueueResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetMatchmakingEnqueueResultAndRoom
Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom* Oculus::Platform::Message::GetMatchmakingEnqueueResultAndRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetMatchmakingEnqueueResultAndRoom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingEnqueueResultAndRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetMatchmakingStats
Oculus::Platform::Models::MatchmakingStats* Oculus::Platform::Message::GetMatchmakingStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetMatchmakingStats");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatchmakingStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::MatchmakingStats*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetSyncConnection
Oculus::Platform::Models::NetSyncConnection* Oculus::Platform::Message::GetNetSyncConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetNetSyncConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetSyncConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncConnection*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetSyncSessionList
Oculus::Platform::Models::NetSyncSessionList* Oculus::Platform::Message::GetNetSyncSessionList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetNetSyncSessionList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetSyncSessionList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSessionList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetSyncSessionsChangedNotification
Oculus::Platform::Models::NetSyncSessionsChangedNotification* Oculus::Platform::Message::GetNetSyncSessionsChangedNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetNetSyncSessionsChangedNotification");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetSyncSessionsChangedNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSessionsChangedNotification*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetSyncSetSessionPropertyResult
Oculus::Platform::Models::NetSyncSetSessionPropertyResult* Oculus::Platform::Message::GetNetSyncSetSessionPropertyResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetNetSyncSetSessionPropertyResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetSyncSetSessionPropertyResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncSetSessionPropertyResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetNetSyncVoipAttenuationValueList
Oculus::Platform::Models::NetSyncVoipAttenuationValueList* Oculus::Platform::Message::GetNetSyncVoipAttenuationValueList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetNetSyncVoipAttenuationValueList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNetSyncVoipAttenuationValueList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::NetSyncVoipAttenuationValueList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetOrgScopedID
Oculus::Platform::Models::OrgScopedID* Oculus::Platform::Message::GetOrgScopedID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetOrgScopedID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrgScopedID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::OrgScopedID*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetParty
Oculus::Platform::Models::Party* Oculus::Platform::Message::GetParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetParty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Party*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPartyID
Oculus::Platform::Models::PartyID* Oculus::Platform::Message::GetPartyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetPartyID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPartyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PartyID*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPartyUpdateNotification
Oculus::Platform::Models::PartyUpdateNotification* Oculus::Platform::Message::GetPartyUpdateNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetPartyUpdateNotification");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPartyUpdateNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PartyUpdateNotification*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPidList
Oculus::Platform::Models::PidList* Oculus::Platform::Message::GetPidList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetPidList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPidList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PidList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetProductList
Oculus::Platform::Models::ProductList* Oculus::Platform::Message::GetProductList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetProductList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProductList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ProductList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPurchase
Oculus::Platform::Models::Purchase* Oculus::Platform::Message::GetPurchase() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetPurchase");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Purchase*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetPurchaseList
Oculus::Platform::Models::PurchaseList* Oculus::Platform::Message::GetPurchaseList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetPurchaseList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPurchaseList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::PurchaseList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetRoom
Oculus::Platform::Models::Room* Oculus::Platform::Message::GetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetRoom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetRoomInviteNotification
Oculus::Platform::Models::RoomInviteNotification* Oculus::Platform::Message::GetRoomInviteNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetRoomInviteNotification");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomInviteNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomInviteNotification*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetRoomInviteNotificationList
Oculus::Platform::Models::RoomInviteNotificationList* Oculus::Platform::Message::GetRoomInviteNotificationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetRoomInviteNotificationList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomInviteNotificationList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomInviteNotificationList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetRoomList
Oculus::Platform::Models::RoomList* Oculus::Platform::Message::GetRoomList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetRoomList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoomList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::RoomList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetSdkAccountList
Oculus::Platform::Models::SdkAccountList* Oculus::Platform::Message::GetSdkAccountList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetSdkAccountList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSdkAccountList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SdkAccountList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetShareMediaResult
Oculus::Platform::Models::ShareMediaResult* Oculus::Platform::Message::GetShareMediaResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetShareMediaResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetShareMediaResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ShareMediaResult*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetString
::Il2CppString* Oculus::Platform::Message::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetSystemPermission
Oculus::Platform::Models::SystemPermission* Oculus::Platform::Message::GetSystemPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetSystemPermission");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSystemPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SystemPermission*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetSystemVoipState
Oculus::Platform::Models::SystemVoipState* Oculus::Platform::Message::GetSystemVoipState() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetSystemVoipState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSystemVoipState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::SystemVoipState*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUser
Oculus::Platform::Models::User* Oculus::Platform::Message::GetUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetUser");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::User*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUserAndRoomList
Oculus::Platform::Models::UserAndRoomList* Oculus::Platform::Message::GetUserAndRoomList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetUserAndRoomList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserAndRoomList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserAndRoomList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUserDataStoreUpdateResponse
Oculus::Platform::Models::UserDataStoreUpdateResponse* Oculus::Platform::Message::GetUserDataStoreUpdateResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetUserDataStoreUpdateResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserDataStoreUpdateResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserDataStoreUpdateResponse*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUserList
Oculus::Platform::Models::UserList* Oculus::Platform::Message::GetUserList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetUserList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserList*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUserProof
Oculus::Platform::Models::UserProof* Oculus::Platform::Message::GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetUserProof");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserProof*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.GetUserReportID
Oculus::Platform::Models::UserReportID* Oculus::Platform::Message::GetUserReportID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::GetUserReportID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserReportID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::UserReportID*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.ParseMessageHandle
Oculus::Platform::Message* Oculus::Platform::Message::ParseMessageHandle(System::IntPtr messageHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::ParseMessageHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Message", "ParseMessageHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageHandle)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Message*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, messageHandle);
}
// Autogenerated method: Oculus.Platform.Message.PopMessage
Oculus::Platform::Message* Oculus::Platform::Message::PopMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::PopMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Message", "PopMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Message*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.set_HandleExtraMessageTypes
void Oculus::Platform::Message::set_HandleExtraMessageTypes(Oculus::Platform::Message::ExtraMessageTypesHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::set_HandleExtraMessageTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Message", "set_HandleExtraMessageTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.Message.get_HandleExtraMessageTypes
Oculus::Platform::Message::ExtraMessageTypesHandler* Oculus::Platform::Message::get_HandleExtraMessageTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::get_HandleExtraMessageTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "Message", "get_HandleExtraMessageTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Message::ExtraMessageTypesHandler*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.Message.Finalize
void Oculus::Platform::Message::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Message::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Message::*)(System::IntPtr)>(&Message::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Message::*)(System::IntPtr)>(&Message::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Message::get_Type
// Il2CppName: get_Type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Message::MessageType (Message::*)()>(&Message::get_Type)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "get_Type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::get_IsError
// Il2CppName: get_IsError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Message::*)()>(&Message::get_IsError)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "get_IsError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::get_RequestID
// Il2CppName: get_RequestID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint64_t (Message::*)()>(&Message::get_RequestID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "get_RequestID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetError
// Il2CppName: GetError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Error* (Message::*)()>(&Message::GetError)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetPingResult
// Il2CppName: GetPingResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::PingResult* (Message::*)()>(&Message::GetPingResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetPingResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetNetworkingPeer
// Il2CppName: GetNetworkingPeer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::NetworkingPeer* (Message::*)()>(&Message::GetNetworkingPeer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetNetworkingPeer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetHttpTransferUpdate
// Il2CppName: GetHttpTransferUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::HttpTransferUpdate* (Message::*)()>(&Message::GetHttpTransferUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetHttpTransferUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetPlatformInitialize
// Il2CppName: GetPlatformInitialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::PlatformInitialize* (Message::*)()>(&Message::GetPlatformInitialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetPlatformInitialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetAbuseReportRecording
// Il2CppName: GetAbuseReportRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AbuseReportRecording* (Message::*)()>(&Message::GetAbuseReportRecording)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetAbuseReportRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetAchievementDefinitions
// Il2CppName: GetAchievementDefinitions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AchievementDefinitionList* (Message::*)()>(&Message::GetAchievementDefinitions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetAchievementDefinitions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetAchievementProgressList
// Il2CppName: GetAchievementProgressList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AchievementProgressList* (Message::*)()>(&Message::GetAchievementProgressList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetAchievementProgressList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetAchievementUpdate
// Il2CppName: GetAchievementUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AchievementUpdate* (Message::*)()>(&Message::GetAchievementUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetAchievementUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetApplicationVersion
// Il2CppName: GetApplicationVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::ApplicationVersion* (Message::*)()>(&Message::GetApplicationVersion)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetApplicationVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetAssetDetails
// Il2CppName: GetAssetDetails
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AssetDetails* (Message::*)()>(&Message::GetAssetDetails)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetAssetDetails", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetAssetDetailsList
// Il2CppName: GetAssetDetailsList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AssetDetailsList* (Message::*)()>(&Message::GetAssetDetailsList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetAssetDetailsList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetAssetFileDeleteResult
// Il2CppName: GetAssetFileDeleteResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AssetFileDeleteResult* (Message::*)()>(&Message::GetAssetFileDeleteResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetAssetFileDeleteResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetAssetFileDownloadCancelResult
// Il2CppName: GetAssetFileDownloadCancelResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AssetFileDownloadCancelResult* (Message::*)()>(&Message::GetAssetFileDownloadCancelResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetAssetFileDownloadCancelResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetAssetFileDownloadResult
// Il2CppName: GetAssetFileDownloadResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AssetFileDownloadResult* (Message::*)()>(&Message::GetAssetFileDownloadResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetAssetFileDownloadResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetAssetFileDownloadUpdate
// Il2CppName: GetAssetFileDownloadUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AssetFileDownloadUpdate* (Message::*)()>(&Message::GetAssetFileDownloadUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetAssetFileDownloadUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetCalApplicationFinalized
// Il2CppName: GetCalApplicationFinalized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CalApplicationFinalized* (Message::*)()>(&Message::GetCalApplicationFinalized)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetCalApplicationFinalized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetCalApplicationProposed
// Il2CppName: GetCalApplicationProposed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CalApplicationProposed* (Message::*)()>(&Message::GetCalApplicationProposed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetCalApplicationProposed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetCalApplicationSuggestionList
// Il2CppName: GetCalApplicationSuggestionList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CalApplicationSuggestionList* (Message::*)()>(&Message::GetCalApplicationSuggestionList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetCalApplicationSuggestionList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetChallenge
// Il2CppName: GetChallenge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Challenge* (Message::*)()>(&Message::GetChallenge)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetChallenge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetChallengeEntryList
// Il2CppName: GetChallengeEntryList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::ChallengeEntryList* (Message::*)()>(&Message::GetChallengeEntryList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetChallengeEntryList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetChallengeList
// Il2CppName: GetChallengeList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::ChallengeList* (Message::*)()>(&Message::GetChallengeList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetChallengeList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetCloudStorageConflictMetadata
// Il2CppName: GetCloudStorageConflictMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CloudStorageConflictMetadata* (Message::*)()>(&Message::GetCloudStorageConflictMetadata)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetCloudStorageConflictMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetCloudStorageData
// Il2CppName: GetCloudStorageData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CloudStorageData* (Message::*)()>(&Message::GetCloudStorageData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetCloudStorageData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetCloudStorageMetadata
// Il2CppName: GetCloudStorageMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CloudStorageMetadata* (Message::*)()>(&Message::GetCloudStorageMetadata)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetCloudStorageMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetCloudStorageMetadataList
// Il2CppName: GetCloudStorageMetadataList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CloudStorageMetadataList* (Message::*)()>(&Message::GetCloudStorageMetadataList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetCloudStorageMetadataList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetCloudStorageUpdateResponse
// Il2CppName: GetCloudStorageUpdateResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CloudStorageUpdateResponse* (Message::*)()>(&Message::GetCloudStorageUpdateResponse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetCloudStorageUpdateResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetDataStore
// Il2CppName: GetDataStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* (Message::*)()>(&Message::GetDataStore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetDataStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetDestinationList
// Il2CppName: GetDestinationList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::DestinationList* (Message::*)()>(&Message::GetDestinationList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetDestinationList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetGroupPresenceLeaveIntent
// Il2CppName: GetGroupPresenceLeaveIntent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::GroupPresenceLeaveIntent* (Message::*)()>(&Message::GetGroupPresenceLeaveIntent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetGroupPresenceLeaveIntent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetInstalledApplicationList
// Il2CppName: GetInstalledApplicationList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::InstalledApplicationList* (Message::*)()>(&Message::GetInstalledApplicationList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetInstalledApplicationList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetInvitePanelResultInfo
// Il2CppName: GetInvitePanelResultInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::InvitePanelResultInfo* (Message::*)()>(&Message::GetInvitePanelResultInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetInvitePanelResultInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetLaunchBlockFlowResult
// Il2CppName: GetLaunchBlockFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LaunchBlockFlowResult* (Message::*)()>(&Message::GetLaunchBlockFlowResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetLaunchBlockFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetLaunchFriendRequestFlowResult
// Il2CppName: GetLaunchFriendRequestFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LaunchFriendRequestFlowResult* (Message::*)()>(&Message::GetLaunchFriendRequestFlowResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetLaunchFriendRequestFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetLaunchInvitePanelFlowResult
// Il2CppName: GetLaunchInvitePanelFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LaunchInvitePanelFlowResult* (Message::*)()>(&Message::GetLaunchInvitePanelFlowResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetLaunchInvitePanelFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetLaunchReportFlowResult
// Il2CppName: GetLaunchReportFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LaunchReportFlowResult* (Message::*)()>(&Message::GetLaunchReportFlowResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetLaunchReportFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetLaunchUnblockFlowResult
// Il2CppName: GetLaunchUnblockFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LaunchUnblockFlowResult* (Message::*)()>(&Message::GetLaunchUnblockFlowResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetLaunchUnblockFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetLeaderboardDidUpdate
// Il2CppName: GetLeaderboardDidUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Message::*)()>(&Message::GetLeaderboardDidUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetLeaderboardDidUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetLeaderboardEntryList
// Il2CppName: GetLeaderboardEntryList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LeaderboardEntryList* (Message::*)()>(&Message::GetLeaderboardEntryList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetLeaderboardEntryList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetLeaderboardList
// Il2CppName: GetLeaderboardList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LeaderboardList* (Message::*)()>(&Message::GetLeaderboardList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetLeaderboardList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetLinkedAccountList
// Il2CppName: GetLinkedAccountList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LinkedAccountList* (Message::*)()>(&Message::GetLinkedAccountList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetLinkedAccountList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetLivestreamingApplicationStatus
// Il2CppName: GetLivestreamingApplicationStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LivestreamingApplicationStatus* (Message::*)()>(&Message::GetLivestreamingApplicationStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetLivestreamingApplicationStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetLivestreamingStartResult
// Il2CppName: GetLivestreamingStartResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LivestreamingStartResult* (Message::*)()>(&Message::GetLivestreamingStartResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetLivestreamingStartResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetLivestreamingStatus
// Il2CppName: GetLivestreamingStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LivestreamingStatus* (Message::*)()>(&Message::GetLivestreamingStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetLivestreamingStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetLivestreamingVideoStats
// Il2CppName: GetLivestreamingVideoStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LivestreamingVideoStats* (Message::*)()>(&Message::GetLivestreamingVideoStats)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetLivestreamingVideoStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetMatchmakingAdminSnapshot
// Il2CppName: GetMatchmakingAdminSnapshot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::MatchmakingAdminSnapshot* (Message::*)()>(&Message::GetMatchmakingAdminSnapshot)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetMatchmakingAdminSnapshot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetMatchmakingBrowseResult
// Il2CppName: GetMatchmakingBrowseResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::MatchmakingBrowseResult* (Message::*)()>(&Message::GetMatchmakingBrowseResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetMatchmakingBrowseResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetMatchmakingEnqueueResult
// Il2CppName: GetMatchmakingEnqueueResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::MatchmakingEnqueueResult* (Message::*)()>(&Message::GetMatchmakingEnqueueResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetMatchmakingEnqueueResultAndRoom
// Il2CppName: GetMatchmakingEnqueueResultAndRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::MatchmakingEnqueueResultAndRoom* (Message::*)()>(&Message::GetMatchmakingEnqueueResultAndRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetMatchmakingEnqueueResultAndRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetMatchmakingStats
// Il2CppName: GetMatchmakingStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::MatchmakingStats* (Message::*)()>(&Message::GetMatchmakingStats)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetMatchmakingStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetNetSyncConnection
// Il2CppName: GetNetSyncConnection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::NetSyncConnection* (Message::*)()>(&Message::GetNetSyncConnection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetNetSyncConnection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetNetSyncSessionList
// Il2CppName: GetNetSyncSessionList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::NetSyncSessionList* (Message::*)()>(&Message::GetNetSyncSessionList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetNetSyncSessionList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetNetSyncSessionsChangedNotification
// Il2CppName: GetNetSyncSessionsChangedNotification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::NetSyncSessionsChangedNotification* (Message::*)()>(&Message::GetNetSyncSessionsChangedNotification)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetNetSyncSessionsChangedNotification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetNetSyncSetSessionPropertyResult
// Il2CppName: GetNetSyncSetSessionPropertyResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::NetSyncSetSessionPropertyResult* (Message::*)()>(&Message::GetNetSyncSetSessionPropertyResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetNetSyncSetSessionPropertyResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetNetSyncVoipAttenuationValueList
// Il2CppName: GetNetSyncVoipAttenuationValueList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::NetSyncVoipAttenuationValueList* (Message::*)()>(&Message::GetNetSyncVoipAttenuationValueList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetNetSyncVoipAttenuationValueList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetOrgScopedID
// Il2CppName: GetOrgScopedID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::OrgScopedID* (Message::*)()>(&Message::GetOrgScopedID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetOrgScopedID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetParty
// Il2CppName: GetParty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Party* (Message::*)()>(&Message::GetParty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetParty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetPartyID
// Il2CppName: GetPartyID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::PartyID* (Message::*)()>(&Message::GetPartyID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetPartyID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetPartyUpdateNotification
// Il2CppName: GetPartyUpdateNotification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::PartyUpdateNotification* (Message::*)()>(&Message::GetPartyUpdateNotification)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetPartyUpdateNotification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetPidList
// Il2CppName: GetPidList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::PidList* (Message::*)()>(&Message::GetPidList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetPidList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetProductList
// Il2CppName: GetProductList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::ProductList* (Message::*)()>(&Message::GetProductList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetProductList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetPurchase
// Il2CppName: GetPurchase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Purchase* (Message::*)()>(&Message::GetPurchase)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetPurchase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetPurchaseList
// Il2CppName: GetPurchaseList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::PurchaseList* (Message::*)()>(&Message::GetPurchaseList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetPurchaseList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetRoom
// Il2CppName: GetRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Room* (Message::*)()>(&Message::GetRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetRoomInviteNotification
// Il2CppName: GetRoomInviteNotification
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::RoomInviteNotification* (Message::*)()>(&Message::GetRoomInviteNotification)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetRoomInviteNotification", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetRoomInviteNotificationList
// Il2CppName: GetRoomInviteNotificationList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::RoomInviteNotificationList* (Message::*)()>(&Message::GetRoomInviteNotificationList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetRoomInviteNotificationList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetRoomList
// Il2CppName: GetRoomList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::RoomList* (Message::*)()>(&Message::GetRoomList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetRoomList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetSdkAccountList
// Il2CppName: GetSdkAccountList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::SdkAccountList* (Message::*)()>(&Message::GetSdkAccountList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetSdkAccountList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetShareMediaResult
// Il2CppName: GetShareMediaResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::ShareMediaResult* (Message::*)()>(&Message::GetShareMediaResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetShareMediaResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Message::*)()>(&Message::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetSystemPermission
// Il2CppName: GetSystemPermission
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::SystemPermission* (Message::*)()>(&Message::GetSystemPermission)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetSystemPermission", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetSystemVoipState
// Il2CppName: GetSystemVoipState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::SystemVoipState* (Message::*)()>(&Message::GetSystemVoipState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetSystemVoipState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetUser
// Il2CppName: GetUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::User* (Message::*)()>(&Message::GetUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetUserAndRoomList
// Il2CppName: GetUserAndRoomList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::UserAndRoomList* (Message::*)()>(&Message::GetUserAndRoomList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetUserAndRoomList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetUserDataStoreUpdateResponse
// Il2CppName: GetUserDataStoreUpdateResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::UserDataStoreUpdateResponse* (Message::*)()>(&Message::GetUserDataStoreUpdateResponse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetUserDataStoreUpdateResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetUserList
// Il2CppName: GetUserList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::UserList* (Message::*)()>(&Message::GetUserList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetUserList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetUserProof
// Il2CppName: GetUserProof
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::UserProof* (Message::*)()>(&Message::GetUserProof)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetUserProof", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::GetUserReportID
// Il2CppName: GetUserReportID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::UserReportID* (Message::*)()>(&Message::GetUserReportID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "GetUserReportID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::ParseMessageHandle
// Il2CppName: ParseMessageHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Message* (*)(System::IntPtr)>(&Message::ParseMessageHandle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "ParseMessageHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Message::PopMessage
// Il2CppName: PopMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Message* (*)()>(&Message::PopMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "PopMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::set_HandleExtraMessageTypes
// Il2CppName: set_HandleExtraMessageTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(Oculus::Platform::Message::ExtraMessageTypesHandler*)>(&Message::set_HandleExtraMessageTypes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "set_HandleExtraMessageTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message::ExtraMessageTypesHandler*>()});
  }
};
// Writing MetadataGetter for method: Message::get_HandleExtraMessageTypes
// Il2CppName: get_HandleExtraMessageTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Message::ExtraMessageTypesHandler* (*)()>(&Message::get_HandleExtraMessageTypes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "get_HandleExtraMessageTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Message::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Message::*)()>(&Message::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Message/Callback
#include "Oculus/Platform/Message_Callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Message/Callback.Invoke
void Oculus::Platform::Message::Callback::Invoke(Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::Callback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: Oculus.Platform.Message/Callback.BeginInvoke
System::IAsyncResult* Oculus::Platform::Message::Callback::BeginInvoke(Oculus::Platform::Message* message, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::Callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, message, callback, object);
}
// Autogenerated method: Oculus.Platform.Message/Callback.EndInvoke
void Oculus::Platform::Message::Callback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::Callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: Message::Callback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Message::Callback::*)(::Il2CppObject*, System::IntPtr)>(&Message::Callback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message::Callback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Message::Callback::*)(::Il2CppObject*, System::IntPtr)>(&Message::Callback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message::Callback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Message::Callback::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Message::Callback::*)(Oculus::Platform::Message*)>(&Message::Callback::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message::Callback*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message*>()});
  }
};
// Writing MetadataGetter for method: Message::Callback::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (Message::Callback::*)(Oculus::Platform::Message*, System::AsyncCallback*, ::Il2CppObject*)>(&Message::Callback::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message::Callback*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message*>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Message::Callback::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Message::Callback::*)(System::IAsyncResult*)>(&Message::Callback::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message::Callback*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.Message/MessageType
#include "Oculus/Platform/Message.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Unknown
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Unknown
void Oculus::Platform::Message::MessageType::_set_Unknown(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_AddCount
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_AddCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Achievements_AddCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_AddCount"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_AddCount
void Oculus::Platform::Message::MessageType::_set_Achievements_AddCount(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Achievements_AddCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_AddCount", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_AddFields
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_AddFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Achievements_AddFields");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_AddFields"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_AddFields
void Oculus::Platform::Message::MessageType::_set_Achievements_AddFields(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Achievements_AddFields");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_AddFields", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_GetAllDefinitions
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetAllDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Achievements_GetAllDefinitions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetAllDefinitions"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_GetAllDefinitions
void Oculus::Platform::Message::MessageType::_set_Achievements_GetAllDefinitions(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Achievements_GetAllDefinitions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetAllDefinitions", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_GetAllProgress
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetAllProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Achievements_GetAllProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetAllProgress"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_GetAllProgress
void Oculus::Platform::Message::MessageType::_set_Achievements_GetAllProgress(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Achievements_GetAllProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetAllProgress", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_GetDefinitionsByName
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetDefinitionsByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Achievements_GetDefinitionsByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetDefinitionsByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_GetDefinitionsByName
void Oculus::Platform::Message::MessageType::_set_Achievements_GetDefinitionsByName(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Achievements_GetDefinitionsByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetDefinitionsByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_GetNextAchievementDefinitionArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetNextAchievementDefinitionArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Achievements_GetNextAchievementDefinitionArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetNextAchievementDefinitionArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_GetNextAchievementDefinitionArrayPage
void Oculus::Platform::Message::MessageType::_set_Achievements_GetNextAchievementDefinitionArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Achievements_GetNextAchievementDefinitionArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetNextAchievementDefinitionArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_GetNextAchievementProgressArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetNextAchievementProgressArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Achievements_GetNextAchievementProgressArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetNextAchievementProgressArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_GetNextAchievementProgressArrayPage
void Oculus::Platform::Message::MessageType::_set_Achievements_GetNextAchievementProgressArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Achievements_GetNextAchievementProgressArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetNextAchievementProgressArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_GetProgressByName
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_GetProgressByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Achievements_GetProgressByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_GetProgressByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_GetProgressByName
void Oculus::Platform::Message::MessageType::_set_Achievements_GetProgressByName(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Achievements_GetProgressByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_GetProgressByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Achievements_Unlock
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Achievements_Unlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Achievements_Unlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Achievements_Unlock"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Achievements_Unlock
void Oculus::Platform::Message::MessageType::_set_Achievements_Unlock(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Achievements_Unlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Achievements_Unlock", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType ApplicationLifecycle_GetRegisteredPIDs
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_GetRegisteredPIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_GetRegisteredPIDs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_GetRegisteredPIDs"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType ApplicationLifecycle_GetRegisteredPIDs
void Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_GetRegisteredPIDs(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_GetRegisteredPIDs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_GetRegisteredPIDs", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType ApplicationLifecycle_GetSessionKey
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_GetSessionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_GetSessionKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_GetSessionKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType ApplicationLifecycle_GetSessionKey
void Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_GetSessionKey(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_GetSessionKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_GetSessionKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType ApplicationLifecycle_RegisterSessionKey
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_RegisterSessionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_ApplicationLifecycle_RegisterSessionKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_RegisterSessionKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType ApplicationLifecycle_RegisterSessionKey
void Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_RegisterSessionKey(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_ApplicationLifecycle_RegisterSessionKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "ApplicationLifecycle_RegisterSessionKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Application_GetVersion
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Application_GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Application_GetVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Application_GetVersion"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Application_GetVersion
void Oculus::Platform::Message::MessageType::_set_Application_GetVersion(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Application_GetVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Application_GetVersion", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Application_LaunchOtherApp
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Application_LaunchOtherApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Application_LaunchOtherApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Application_LaunchOtherApp"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Application_LaunchOtherApp
void Oculus::Platform::Message::MessageType::_set_Application_LaunchOtherApp(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Application_LaunchOtherApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Application_LaunchOtherApp", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_Delete
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_Delete"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_Delete
void Oculus::Platform::Message::MessageType::_set_AssetFile_Delete(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_Delete", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DeleteById
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DeleteById() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_DeleteById");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DeleteById"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DeleteById
void Oculus::Platform::Message::MessageType::_set_AssetFile_DeleteById(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_DeleteById");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DeleteById", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DeleteByName
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DeleteByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_DeleteByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DeleteByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DeleteByName
void Oculus::Platform::Message::MessageType::_set_AssetFile_DeleteByName(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_DeleteByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DeleteByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_Download
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_Download() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_Download");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_Download"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_Download
void Oculus::Platform::Message::MessageType::_set_AssetFile_Download(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_Download");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_Download", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadById
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadById() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadById");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadById"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadById
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadById(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadById");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadById", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadByName
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadByName
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadByName(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadCancel
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancel"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadCancel
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancel(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancel", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadCancelById
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancelById() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancelById");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancelById"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadCancelById
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancelById(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancelById");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancelById", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadCancelByName
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancelByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_DownloadCancelByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancelByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_DownloadCancelByName
void Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancelByName(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_DownloadCancelByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_DownloadCancelByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_GetList
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_GetList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_GetList"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_GetList
void Oculus::Platform::Message::MessageType::_set_AssetFile_GetList(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_GetList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_GetList", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_Status
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_Status");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_Status"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_Status
void Oculus::Platform::Message::MessageType::_set_AssetFile_Status(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_Status");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_Status", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_StatusById
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_StatusById() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_StatusById");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_StatusById"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_StatusById
void Oculus::Platform::Message::MessageType::_set_AssetFile_StatusById(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_StatusById");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_StatusById", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType AssetFile_StatusByName
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_AssetFile_StatusByName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_AssetFile_StatusByName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "AssetFile_StatusByName"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType AssetFile_StatusByName
void Oculus::Platform::Message::MessageType::_set_AssetFile_StatusByName(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_AssetFile_StatusByName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "AssetFile_StatusByName", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_Create
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Create"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_Create
void Oculus::Platform::Message::MessageType::_set_Challenges_Create(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Create", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_DeclineInvite
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_DeclineInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_DeclineInvite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_DeclineInvite"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_DeclineInvite
void Oculus::Platform::Message::MessageType::_set_Challenges_DeclineInvite(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_DeclineInvite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_DeclineInvite", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_Delete
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Delete"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_Delete
void Oculus::Platform::Message::MessageType::_set_Challenges_Delete(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Delete", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_Get
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_Get
void Oculus::Platform::Message::MessageType::_set_Challenges_Get(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetEntries
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_GetEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetEntries
void Oculus::Platform::Message::MessageType::_set_Challenges_GetEntries(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_GetEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetEntriesAfterRank
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetEntriesAfterRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_GetEntriesAfterRank");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetEntriesAfterRank"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetEntriesAfterRank
void Oculus::Platform::Message::MessageType::_set_Challenges_GetEntriesAfterRank(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_GetEntriesAfterRank");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetEntriesAfterRank", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetEntriesByIds
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetEntriesByIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_GetEntriesByIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetEntriesByIds"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetEntriesByIds
void Oculus::Platform::Message::MessageType::_set_Challenges_GetEntriesByIds(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_GetEntriesByIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetEntriesByIds", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetList
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_GetList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetList"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetList
void Oculus::Platform::Message::MessageType::_set_Challenges_GetList(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_GetList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetList", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetNextChallenges
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetNextChallenges() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_GetNextChallenges");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetNextChallenges"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetNextChallenges
void Oculus::Platform::Message::MessageType::_set_Challenges_GetNextChallenges(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_GetNextChallenges");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetNextChallenges", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetNextEntries
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetNextEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_GetNextEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetNextEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetNextEntries
void Oculus::Platform::Message::MessageType::_set_Challenges_GetNextEntries(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_GetNextEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetNextEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetPreviousChallenges
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetPreviousChallenges() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_GetPreviousChallenges");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetPreviousChallenges"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetPreviousChallenges
void Oculus::Platform::Message::MessageType::_set_Challenges_GetPreviousChallenges(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_GetPreviousChallenges");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetPreviousChallenges", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_GetPreviousEntries
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_GetPreviousEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_GetPreviousEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_GetPreviousEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_GetPreviousEntries
void Oculus::Platform::Message::MessageType::_set_Challenges_GetPreviousEntries(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_GetPreviousEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_GetPreviousEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_Join
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_Join");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Join"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_Join
void Oculus::Platform::Message::MessageType::_set_Challenges_Join(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_Join");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Join", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_Leave
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_Leave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_Leave"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_Leave
void Oculus::Platform::Message::MessageType::_set_Challenges_Leave(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_Leave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_Leave", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Challenges_UpdateInfo
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Challenges_UpdateInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Challenges_UpdateInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Challenges_UpdateInfo"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Challenges_UpdateInfo
void Oculus::Platform::Message::MessageType::_set_Challenges_UpdateInfo(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Challenges_UpdateInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Challenges_UpdateInfo", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage2_GetUserDirectoryPath
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage2_GetUserDirectoryPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage2_GetUserDirectoryPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage2_GetUserDirectoryPath"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage2_GetUserDirectoryPath
void Oculus::Platform::Message::MessageType::_set_CloudStorage2_GetUserDirectoryPath(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage2_GetUserDirectoryPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage2_GetUserDirectoryPath", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage_Delete
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_Delete"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage_Delete
void Oculus::Platform::Message::MessageType::_set_CloudStorage_Delete(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_Delete", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage_GetNextCloudStorageMetadataArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_GetNextCloudStorageMetadataArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage_GetNextCloudStorageMetadataArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_GetNextCloudStorageMetadataArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage_GetNextCloudStorageMetadataArrayPage
void Oculus::Platform::Message::MessageType::_set_CloudStorage_GetNextCloudStorageMetadataArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage_GetNextCloudStorageMetadataArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_GetNextCloudStorageMetadataArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage_Load
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage_Load");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_Load"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage_Load
void Oculus::Platform::Message::MessageType::_set_CloudStorage_Load(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage_Load");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_Load", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage_LoadBucketMetadata
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadBucketMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadBucketMetadata");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadBucketMetadata"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage_LoadBucketMetadata
void Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadBucketMetadata(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadBucketMetadata");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadBucketMetadata", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage_LoadConflictMetadata
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadConflictMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadConflictMetadata");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadConflictMetadata"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage_LoadConflictMetadata
void Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadConflictMetadata(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadConflictMetadata");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadConflictMetadata", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage_LoadHandle
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadHandle"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage_LoadHandle
void Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadHandle(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadHandle", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage_LoadMetadata
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage_LoadMetadata");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadMetadata"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage_LoadMetadata
void Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadMetadata(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage_LoadMetadata");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_LoadMetadata", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage_ResolveKeepLocal
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_ResolveKeepLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage_ResolveKeepLocal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_ResolveKeepLocal"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage_ResolveKeepLocal
void Oculus::Platform::Message::MessageType::_set_CloudStorage_ResolveKeepLocal(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage_ResolveKeepLocal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_ResolveKeepLocal", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage_ResolveKeepRemote
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_ResolveKeepRemote() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage_ResolveKeepRemote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_ResolveKeepRemote"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage_ResolveKeepRemote
void Oculus::Platform::Message::MessageType::_set_CloudStorage_ResolveKeepRemote(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage_ResolveKeepRemote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_ResolveKeepRemote", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType CloudStorage_Save
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_CloudStorage_Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_CloudStorage_Save");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "CloudStorage_Save"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType CloudStorage_Save
void Oculus::Platform::Message::MessageType::_set_CloudStorage_Save(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_CloudStorage_Save");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "CloudStorage_Save", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Entitlement_GetIsViewerEntitled
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Entitlement_GetIsViewerEntitled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Entitlement_GetIsViewerEntitled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Entitlement_GetIsViewerEntitled"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Entitlement_GetIsViewerEntitled
void Oculus::Platform::Message::MessageType::_set_Entitlement_GetIsViewerEntitled(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Entitlement_GetIsViewerEntitled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Entitlement_GetIsViewerEntitled", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_ConsumePurchase
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_ConsumePurchase() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_IAP_ConsumePurchase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_ConsumePurchase"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_ConsumePurchase
void Oculus::Platform::Message::MessageType::_set_IAP_ConsumePurchase(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_IAP_ConsumePurchase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_ConsumePurchase", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_GetNextProductArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetNextProductArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_IAP_GetNextProductArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetNextProductArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_GetNextProductArrayPage
void Oculus::Platform::Message::MessageType::_set_IAP_GetNextProductArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_IAP_GetNextProductArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetNextProductArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_GetNextPurchaseArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetNextPurchaseArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_IAP_GetNextPurchaseArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetNextPurchaseArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_GetNextPurchaseArrayPage
void Oculus::Platform::Message::MessageType::_set_IAP_GetNextPurchaseArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_IAP_GetNextPurchaseArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetNextPurchaseArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_GetProductsBySKU
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetProductsBySKU() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_IAP_GetProductsBySKU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetProductsBySKU"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_GetProductsBySKU
void Oculus::Platform::Message::MessageType::_set_IAP_GetProductsBySKU(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_IAP_GetProductsBySKU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetProductsBySKU", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_GetViewerPurchases
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetViewerPurchases() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_IAP_GetViewerPurchases");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetViewerPurchases"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_GetViewerPurchases
void Oculus::Platform::Message::MessageType::_set_IAP_GetViewerPurchases(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_IAP_GetViewerPurchases");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetViewerPurchases", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_GetViewerPurchasesDurableCache
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_GetViewerPurchasesDurableCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_IAP_GetViewerPurchasesDurableCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_GetViewerPurchasesDurableCache"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_GetViewerPurchasesDurableCache
void Oculus::Platform::Message::MessageType::_set_IAP_GetViewerPurchasesDurableCache(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_IAP_GetViewerPurchasesDurableCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_GetViewerPurchasesDurableCache", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType IAP_LaunchCheckoutFlow
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_IAP_LaunchCheckoutFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_IAP_LaunchCheckoutFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "IAP_LaunchCheckoutFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType IAP_LaunchCheckoutFlow
void Oculus::Platform::Message::MessageType::_set_IAP_LaunchCheckoutFlow(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_IAP_LaunchCheckoutFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "IAP_LaunchCheckoutFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType LanguagePack_GetCurrent
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_LanguagePack_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_LanguagePack_GetCurrent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "LanguagePack_GetCurrent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType LanguagePack_GetCurrent
void Oculus::Platform::Message::MessageType::_set_LanguagePack_GetCurrent(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_LanguagePack_GetCurrent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "LanguagePack_GetCurrent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType LanguagePack_SetCurrent
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_LanguagePack_SetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_LanguagePack_SetCurrent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "LanguagePack_SetCurrent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType LanguagePack_SetCurrent
void Oculus::Platform::Message::MessageType::_set_LanguagePack_SetCurrent(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_LanguagePack_SetCurrent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "LanguagePack_SetCurrent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_Get
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Leaderboard_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_Get
void Oculus::Platform::Message::MessageType::_set_Leaderboard_Get(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Leaderboard_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetEntries
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetEntries
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntries(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetEntriesAfterRank
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntriesAfterRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntriesAfterRank");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntriesAfterRank"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetEntriesAfterRank
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntriesAfterRank(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntriesAfterRank");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntriesAfterRank", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetEntriesByIds
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntriesByIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Leaderboard_GetEntriesByIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntriesByIds"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetEntriesByIds
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntriesByIds(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Leaderboard_GetEntriesByIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetEntriesByIds", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetNextEntries
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetNextEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Leaderboard_GetNextEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetNextEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetNextEntries
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetNextEntries(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Leaderboard_GetNextEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetNextEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetNextLeaderboardArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetNextLeaderboardArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Leaderboard_GetNextLeaderboardArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetNextLeaderboardArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetNextLeaderboardArrayPage
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetNextLeaderboardArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Leaderboard_GetNextLeaderboardArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetNextLeaderboardArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetPreviousEntries
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_GetPreviousEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Leaderboard_GetPreviousEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_GetPreviousEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_GetPreviousEntries
void Oculus::Platform::Message::MessageType::_set_Leaderboard_GetPreviousEntries(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Leaderboard_GetPreviousEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_GetPreviousEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_WriteEntry
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_WriteEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Leaderboard_WriteEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_WriteEntry"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_WriteEntry
void Oculus::Platform::Message::MessageType::_set_Leaderboard_WriteEntry(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Leaderboard_WriteEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_WriteEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Leaderboard_WriteEntryWithSupplementaryMetric
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Leaderboard_WriteEntryWithSupplementaryMetric() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Leaderboard_WriteEntryWithSupplementaryMetric");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Leaderboard_WriteEntryWithSupplementaryMetric"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Leaderboard_WriteEntryWithSupplementaryMetric
void Oculus::Platform::Message::MessageType::_set_Leaderboard_WriteEntryWithSupplementaryMetric(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Leaderboard_WriteEntryWithSupplementaryMetric");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Leaderboard_WriteEntryWithSupplementaryMetric", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Livestreaming_GetStatus
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Livestreaming_GetStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Livestreaming_GetStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Livestreaming_GetStatus"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Livestreaming_GetStatus
void Oculus::Platform::Message::MessageType::_set_Livestreaming_GetStatus(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Livestreaming_GetStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Livestreaming_GetStatus", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Livestreaming_LaunchLivestreamingFlow
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Livestreaming_LaunchLivestreamingFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Livestreaming_LaunchLivestreamingFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Livestreaming_LaunchLivestreamingFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Livestreaming_LaunchLivestreamingFlow
void Oculus::Platform::Message::MessageType::_set_Livestreaming_LaunchLivestreamingFlow(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Livestreaming_LaunchLivestreamingFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Livestreaming_LaunchLivestreamingFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Livestreaming_PauseStream
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Livestreaming_PauseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Livestreaming_PauseStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Livestreaming_PauseStream"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Livestreaming_PauseStream
void Oculus::Platform::Message::MessageType::_set_Livestreaming_PauseStream(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Livestreaming_PauseStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Livestreaming_PauseStream", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Livestreaming_ResumeStream
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Livestreaming_ResumeStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Livestreaming_ResumeStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Livestreaming_ResumeStream"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Livestreaming_ResumeStream
void Oculus::Platform::Message::MessageType::_set_Livestreaming_ResumeStream(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Livestreaming_ResumeStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Livestreaming_ResumeStream", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_Browse
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Browse() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_Browse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Browse"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_Browse
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Browse(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_Browse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Browse", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_Browse2
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Browse2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_Browse2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Browse2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_Browse2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Browse2(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_Browse2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Browse2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_Cancel
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_Cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Cancel"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_Cancel
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Cancel(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_Cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Cancel", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_Cancel2
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Cancel2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_Cancel2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Cancel2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_Cancel2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Cancel2(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_Cancel2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Cancel2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_CreateAndEnqueueRoom
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateAndEnqueueRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateAndEnqueueRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateAndEnqueueRoom"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_CreateAndEnqueueRoom
void Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateAndEnqueueRoom(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateAndEnqueueRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateAndEnqueueRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_CreateAndEnqueueRoom2
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateAndEnqueueRoom2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateAndEnqueueRoom2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateAndEnqueueRoom2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_CreateAndEnqueueRoom2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateAndEnqueueRoom2(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateAndEnqueueRoom2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateAndEnqueueRoom2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_CreateRoom
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateRoom"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_CreateRoom
void Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateRoom(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_CreateRoom2
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateRoom2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_CreateRoom2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateRoom2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_CreateRoom2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateRoom2(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_CreateRoom2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_CreateRoom2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_Enqueue
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Enqueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_Enqueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Enqueue"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_Enqueue
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Enqueue(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_Enqueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Enqueue", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_Enqueue2
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_Enqueue2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_Enqueue2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_Enqueue2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_Enqueue2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_Enqueue2(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_Enqueue2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_Enqueue2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_EnqueueRoom
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_EnqueueRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_EnqueueRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_EnqueueRoom"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_EnqueueRoom
void Oculus::Platform::Message::MessageType::_set_Matchmaking_EnqueueRoom(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_EnqueueRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_EnqueueRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_EnqueueRoom2
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_EnqueueRoom2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_EnqueueRoom2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_EnqueueRoom2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_EnqueueRoom2
void Oculus::Platform::Message::MessageType::_set_Matchmaking_EnqueueRoom2(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_EnqueueRoom2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_EnqueueRoom2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_GetAdminSnapshot
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_GetAdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_GetAdminSnapshot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_GetAdminSnapshot"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_GetAdminSnapshot
void Oculus::Platform::Message::MessageType::_set_Matchmaking_GetAdminSnapshot(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_GetAdminSnapshot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_GetAdminSnapshot", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_GetStats
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_GetStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_GetStats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_GetStats"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_GetStats
void Oculus::Platform::Message::MessageType::_set_Matchmaking_GetStats(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_GetStats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_GetStats", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_JoinRoom
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_JoinRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_JoinRoom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_JoinRoom"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_JoinRoom
void Oculus::Platform::Message::MessageType::_set_Matchmaking_JoinRoom(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_JoinRoom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_JoinRoom", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_ReportResultInsecure
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_ReportResultInsecure() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_ReportResultInsecure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_ReportResultInsecure"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_ReportResultInsecure
void Oculus::Platform::Message::MessageType::_set_Matchmaking_ReportResultInsecure(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_ReportResultInsecure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_ReportResultInsecure", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Matchmaking_StartMatch
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Matchmaking_StartMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Matchmaking_StartMatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Matchmaking_StartMatch"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Matchmaking_StartMatch
void Oculus::Platform::Message::MessageType::_set_Matchmaking_StartMatch(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Matchmaking_StartMatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Matchmaking_StartMatch", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Media_ShareToFacebook
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Media_ShareToFacebook() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Media_ShareToFacebook");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Media_ShareToFacebook"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Media_ShareToFacebook
void Oculus::Platform::Message::MessageType::_set_Media_ShareToFacebook(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Media_ShareToFacebook");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Media_ShareToFacebook", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_GetNextRoomInviteNotificationArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_GetNextRoomInviteNotificationArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_GetNextRoomInviteNotificationArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_GetNextRoomInviteNotificationArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_GetNextRoomInviteNotificationArrayPage
void Oculus::Platform::Message::MessageType::_set_Notification_GetNextRoomInviteNotificationArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_GetNextRoomInviteNotificationArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_GetNextRoomInviteNotificationArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_GetRoomInvites
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_GetRoomInvites() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_GetRoomInvites");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_GetRoomInvites"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_GetRoomInvites
void Oculus::Platform::Message::MessageType::_set_Notification_GetRoomInvites(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_GetRoomInvites");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_GetRoomInvites", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_MarkAsRead
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_MarkAsRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_MarkAsRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_MarkAsRead"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_MarkAsRead
void Oculus::Platform::Message::MessageType::_set_Notification_MarkAsRead(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_MarkAsRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_MarkAsRead", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Party_GetCurrent
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Party_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Party_GetCurrent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Party_GetCurrent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Party_GetCurrent
void Oculus::Platform::Message::MessageType::_set_Party_GetCurrent(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Party_GetCurrent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Party_GetCurrent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType RichPresence_Clear
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_RichPresence_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_RichPresence_Clear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "RichPresence_Clear"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType RichPresence_Clear
void Oculus::Platform::Message::MessageType::_set_RichPresence_Clear(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_RichPresence_Clear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "RichPresence_Clear", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType RichPresence_GetDestinations
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_RichPresence_GetDestinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_RichPresence_GetDestinations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "RichPresence_GetDestinations"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType RichPresence_GetDestinations
void Oculus::Platform::Message::MessageType::_set_RichPresence_GetDestinations(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_RichPresence_GetDestinations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "RichPresence_GetDestinations", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType RichPresence_GetNextDestinationArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_RichPresence_GetNextDestinationArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_RichPresence_GetNextDestinationArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "RichPresence_GetNextDestinationArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType RichPresence_GetNextDestinationArrayPage
void Oculus::Platform::Message::MessageType::_set_RichPresence_GetNextDestinationArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_RichPresence_GetNextDestinationArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "RichPresence_GetNextDestinationArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType RichPresence_Set
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_RichPresence_Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_RichPresence_Set");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "RichPresence_Set"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType RichPresence_Set
void Oculus::Platform::Message::MessageType::_set_RichPresence_Set(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_RichPresence_Set");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "RichPresence_Set", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_CreateAndJoinPrivate
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_CreateAndJoinPrivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_CreateAndJoinPrivate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_CreateAndJoinPrivate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_CreateAndJoinPrivate
void Oculus::Platform::Message::MessageType::_set_Room_CreateAndJoinPrivate(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_CreateAndJoinPrivate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_CreateAndJoinPrivate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_CreateAndJoinPrivate2
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_CreateAndJoinPrivate2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_CreateAndJoinPrivate2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_CreateAndJoinPrivate2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_CreateAndJoinPrivate2
void Oculus::Platform::Message::MessageType::_set_Room_CreateAndJoinPrivate2(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_CreateAndJoinPrivate2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_CreateAndJoinPrivate2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_Get
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_Get
void Oculus::Platform::Message::MessageType::_set_Room_Get(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_GetCurrent
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_GetCurrent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetCurrent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_GetCurrent
void Oculus::Platform::Message::MessageType::_set_Room_GetCurrent(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_GetCurrent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetCurrent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_GetCurrentForUser
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetCurrentForUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_GetCurrentForUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetCurrentForUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_GetCurrentForUser
void Oculus::Platform::Message::MessageType::_set_Room_GetCurrentForUser(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_GetCurrentForUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetCurrentForUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_GetInvitableUsers
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetInvitableUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_GetInvitableUsers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetInvitableUsers"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_GetInvitableUsers
void Oculus::Platform::Message::MessageType::_set_Room_GetInvitableUsers(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_GetInvitableUsers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetInvitableUsers", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_GetInvitableUsers2
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetInvitableUsers2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_GetInvitableUsers2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetInvitableUsers2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_GetInvitableUsers2
void Oculus::Platform::Message::MessageType::_set_Room_GetInvitableUsers2(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_GetInvitableUsers2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetInvitableUsers2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_GetModeratedRooms
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetModeratedRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_GetModeratedRooms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetModeratedRooms"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_GetModeratedRooms
void Oculus::Platform::Message::MessageType::_set_Room_GetModeratedRooms(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_GetModeratedRooms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetModeratedRooms", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_GetNextRoomArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_GetNextRoomArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_GetNextRoomArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_GetNextRoomArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_GetNextRoomArrayPage
void Oculus::Platform::Message::MessageType::_set_Room_GetNextRoomArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_GetNextRoomArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_GetNextRoomArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_InviteUser
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_InviteUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_InviteUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_InviteUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_InviteUser
void Oculus::Platform::Message::MessageType::_set_Room_InviteUser(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_InviteUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_InviteUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_Join
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_Join");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_Join"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_Join
void Oculus::Platform::Message::MessageType::_set_Room_Join(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_Join");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_Join", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_Join2
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_Join2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_Join2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_Join2"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_Join2
void Oculus::Platform::Message::MessageType::_set_Room_Join2(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_Join2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_Join2", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_KickUser
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_KickUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_KickUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_KickUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_KickUser
void Oculus::Platform::Message::MessageType::_set_Room_KickUser(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_KickUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_KickUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_LaunchInvitableUserFlow
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_LaunchInvitableUserFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_LaunchInvitableUserFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_LaunchInvitableUserFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_LaunchInvitableUserFlow
void Oculus::Platform::Message::MessageType::_set_Room_LaunchInvitableUserFlow(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_LaunchInvitableUserFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_LaunchInvitableUserFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_Leave
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_Leave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_Leave"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_Leave
void Oculus::Platform::Message::MessageType::_set_Room_Leave(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_Leave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_Leave", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_SetDescription
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_SetDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_SetDescription");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_SetDescription"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_SetDescription
void Oculus::Platform::Message::MessageType::_set_Room_SetDescription(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_SetDescription");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_SetDescription", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_UpdateDataStore
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_UpdateDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_UpdateDataStore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_UpdateDataStore"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_UpdateDataStore
void Oculus::Platform::Message::MessageType::_set_Room_UpdateDataStore(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_UpdateDataStore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_UpdateDataStore", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_UpdateMembershipLockStatus
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_UpdateMembershipLockStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_UpdateMembershipLockStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_UpdateMembershipLockStatus"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_UpdateMembershipLockStatus
void Oculus::Platform::Message::MessageType::_set_Room_UpdateMembershipLockStatus(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_UpdateMembershipLockStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_UpdateMembershipLockStatus", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_UpdateOwner
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_UpdateOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_UpdateOwner");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_UpdateOwner"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_UpdateOwner
void Oculus::Platform::Message::MessageType::_set_Room_UpdateOwner(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_UpdateOwner");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_UpdateOwner", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Room_UpdatePrivateRoomJoinPolicy
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Room_UpdatePrivateRoomJoinPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Room_UpdatePrivateRoomJoinPolicy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Room_UpdatePrivateRoomJoinPolicy"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Room_UpdatePrivateRoomJoinPolicy
void Oculus::Platform::Message::MessageType::_set_Room_UpdatePrivateRoomJoinPolicy(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Room_UpdatePrivateRoomJoinPolicy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Room_UpdatePrivateRoomJoinPolicy", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType UserDataStore_PrivateDeleteEntryByKey
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateDeleteEntryByKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateDeleteEntryByKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateDeleteEntryByKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType UserDataStore_PrivateDeleteEntryByKey
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateDeleteEntryByKey(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateDeleteEntryByKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateDeleteEntryByKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType UserDataStore_PrivateGetEntries
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateGetEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateGetEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateGetEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType UserDataStore_PrivateGetEntries
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateGetEntries(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateGetEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateGetEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType UserDataStore_PrivateGetEntryByKey
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateGetEntryByKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateGetEntryByKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateGetEntryByKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType UserDataStore_PrivateGetEntryByKey
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateGetEntryByKey(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateGetEntryByKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateGetEntryByKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType UserDataStore_PrivateWriteEntry
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateWriteEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_UserDataStore_PrivateWriteEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateWriteEntry"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType UserDataStore_PrivateWriteEntry
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateWriteEntry(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_UserDataStore_PrivateWriteEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PrivateWriteEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType UserDataStore_PublicDeleteEntryByKey
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicDeleteEntryByKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicDeleteEntryByKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicDeleteEntryByKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType UserDataStore_PublicDeleteEntryByKey
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicDeleteEntryByKey(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicDeleteEntryByKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicDeleteEntryByKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType UserDataStore_PublicGetEntries
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicGetEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicGetEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicGetEntries"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType UserDataStore_PublicGetEntries
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicGetEntries(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicGetEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicGetEntries", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType UserDataStore_PublicGetEntryByKey
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicGetEntryByKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicGetEntryByKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicGetEntryByKey"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType UserDataStore_PublicGetEntryByKey
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicGetEntryByKey(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicGetEntryByKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicGetEntryByKey", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType UserDataStore_PublicWriteEntry
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicWriteEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_UserDataStore_PublicWriteEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicWriteEntry"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType UserDataStore_PublicWriteEntry
void Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicWriteEntry(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_UserDataStore_PublicWriteEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "UserDataStore_PublicWriteEntry", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_Get
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_Get");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_Get"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_Get
void Oculus::Platform::Message::MessageType::_set_User_Get(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_Get");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_Get", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetAccessToken
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_GetAccessToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetAccessToken"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetAccessToken
void Oculus::Platform::Message::MessageType::_set_User_GetAccessToken(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_GetAccessToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetAccessToken", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetLoggedInUser
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUser"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetLoggedInUser
void Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUser(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUser", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetLoggedInUserFriends
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserFriends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserFriends"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetLoggedInUserFriends
void Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserFriends(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserFriends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserFriends", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetLoggedInUserFriendsAndRooms
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserFriendsAndRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserFriendsAndRooms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserFriendsAndRooms"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetLoggedInUserFriendsAndRooms
void Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserFriendsAndRooms(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserFriendsAndRooms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserFriendsAndRooms", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetLoggedInUserRecentlyMetUsersAndRooms
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserRecentlyMetUsersAndRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_GetLoggedInUserRecentlyMetUsersAndRooms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserRecentlyMetUsersAndRooms"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetLoggedInUserRecentlyMetUsersAndRooms
void Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserRecentlyMetUsersAndRooms(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_GetLoggedInUserRecentlyMetUsersAndRooms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetLoggedInUserRecentlyMetUsersAndRooms", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetNextUserAndRoomArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetNextUserAndRoomArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_GetNextUserAndRoomArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetNextUserAndRoomArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetNextUserAndRoomArrayPage
void Oculus::Platform::Message::MessageType::_set_User_GetNextUserAndRoomArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_GetNextUserAndRoomArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetNextUserAndRoomArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetNextUserArrayPage
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetNextUserArrayPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_GetNextUserArrayPage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetNextUserArrayPage"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetNextUserArrayPage
void Oculus::Platform::Message::MessageType::_set_User_GetNextUserArrayPage(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_GetNextUserArrayPage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetNextUserArrayPage", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetOrgScopedID
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetOrgScopedID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_GetOrgScopedID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetOrgScopedID"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetOrgScopedID
void Oculus::Platform::Message::MessageType::_set_User_GetOrgScopedID(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_GetOrgScopedID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetOrgScopedID", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetSdkAccounts
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetSdkAccounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_GetSdkAccounts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetSdkAccounts"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetSdkAccounts
void Oculus::Platform::Message::MessageType::_set_User_GetSdkAccounts(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_GetSdkAccounts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetSdkAccounts", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_GetUserProof
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_GetUserProof");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_GetUserProof"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_GetUserProof
void Oculus::Platform::Message::MessageType::_set_User_GetUserProof(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_GetUserProof");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_GetUserProof", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_LaunchFriendRequestFlow
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_LaunchFriendRequestFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_LaunchFriendRequestFlow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_LaunchFriendRequestFlow"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_LaunchFriendRequestFlow
void Oculus::Platform::Message::MessageType::_set_User_LaunchFriendRequestFlow(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_LaunchFriendRequestFlow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_LaunchFriendRequestFlow", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType User_LaunchProfile
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_User_LaunchProfile() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_User_LaunchProfile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "User_LaunchProfile"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType User_LaunchProfile
void Oculus::Platform::Message::MessageType::_set_User_LaunchProfile(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_User_LaunchProfile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "User_LaunchProfile", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Voip_SetSystemVoipSuppressed
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Voip_SetSystemVoipSuppressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Voip_SetSystemVoipSuppressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Voip_SetSystemVoipSuppressed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Voip_SetSystemVoipSuppressed
void Oculus::Platform::Message::MessageType::_set_Voip_SetSystemVoipSuppressed(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Voip_SetSystemVoipSuppressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Voip_SetSystemVoipSuppressed", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_ApplicationLifecycle_LaunchIntentChanged
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_ApplicationLifecycle_LaunchIntentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_ApplicationLifecycle_LaunchIntentChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_ApplicationLifecycle_LaunchIntentChanged"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_ApplicationLifecycle_LaunchIntentChanged
void Oculus::Platform::Message::MessageType::_set_Notification_ApplicationLifecycle_LaunchIntentChanged(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_ApplicationLifecycle_LaunchIntentChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_ApplicationLifecycle_LaunchIntentChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_AssetFile_DownloadUpdate
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_AssetFile_DownloadUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_AssetFile_DownloadUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_AssetFile_DownloadUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_AssetFile_DownloadUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_AssetFile_DownloadUpdate(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_AssetFile_DownloadUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_AssetFile_DownloadUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Cal_FinalizeApplication
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Cal_FinalizeApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Cal_FinalizeApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Cal_FinalizeApplication"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Cal_FinalizeApplication
void Oculus::Platform::Message::MessageType::_set_Notification_Cal_FinalizeApplication(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Cal_FinalizeApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Cal_FinalizeApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Cal_ProposeApplication
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Cal_ProposeApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Cal_ProposeApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Cal_ProposeApplication"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Cal_ProposeApplication
void Oculus::Platform::Message::MessageType::_set_Notification_Cal_ProposeApplication(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Cal_ProposeApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Cal_ProposeApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_GroupPresence_LeaveIntentReceived
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_GroupPresence_LeaveIntentReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_GroupPresence_LeaveIntentReceived");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_GroupPresence_LeaveIntentReceived"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_GroupPresence_LeaveIntentReceived
void Oculus::Platform::Message::MessageType::_set_Notification_GroupPresence_LeaveIntentReceived(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_GroupPresence_LeaveIntentReceived");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_GroupPresence_LeaveIntentReceived", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_HTTP_Transfer
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_HTTP_Transfer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_HTTP_Transfer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_HTTP_Transfer"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_HTTP_Transfer
void Oculus::Platform::Message::MessageType::_set_Notification_HTTP_Transfer(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_HTTP_Transfer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_HTTP_Transfer", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Livestreaming_StatusChange
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Livestreaming_StatusChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Livestreaming_StatusChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Livestreaming_StatusChange"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Livestreaming_StatusChange
void Oculus::Platform::Message::MessageType::_set_Notification_Livestreaming_StatusChange(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Livestreaming_StatusChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Livestreaming_StatusChange", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Matchmaking_MatchFound
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Matchmaking_MatchFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Matchmaking_MatchFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Matchmaking_MatchFound"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Matchmaking_MatchFound
void Oculus::Platform::Message::MessageType::_set_Notification_Matchmaking_MatchFound(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Matchmaking_MatchFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Matchmaking_MatchFound", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_NetSync_ConnectionStatusChanged
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_NetSync_ConnectionStatusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_NetSync_ConnectionStatusChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_NetSync_ConnectionStatusChanged"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_NetSync_ConnectionStatusChanged
void Oculus::Platform::Message::MessageType::_set_Notification_NetSync_ConnectionStatusChanged(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_NetSync_ConnectionStatusChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_NetSync_ConnectionStatusChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_NetSync_SessionsChanged
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_NetSync_SessionsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_NetSync_SessionsChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_NetSync_SessionsChanged"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_NetSync_SessionsChanged
void Oculus::Platform::Message::MessageType::_set_Notification_NetSync_SessionsChanged(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_NetSync_SessionsChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_NetSync_SessionsChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Networking_ConnectionStateChange
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Networking_ConnectionStateChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Networking_ConnectionStateChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Networking_ConnectionStateChange"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Networking_ConnectionStateChange
void Oculus::Platform::Message::MessageType::_set_Notification_Networking_ConnectionStateChange(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Networking_ConnectionStateChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Networking_ConnectionStateChange", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Networking_PeerConnectRequest
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Networking_PeerConnectRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Networking_PeerConnectRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Networking_PeerConnectRequest"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Networking_PeerConnectRequest
void Oculus::Platform::Message::MessageType::_set_Notification_Networking_PeerConnectRequest(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Networking_PeerConnectRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Networking_PeerConnectRequest", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Networking_PingResult
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Networking_PingResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Networking_PingResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Networking_PingResult"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Networking_PingResult
void Oculus::Platform::Message::MessageType::_set_Notification_Networking_PingResult(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Networking_PingResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Networking_PingResult", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Party_PartyUpdate
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Party_PartyUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Party_PartyUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Party_PartyUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Party_PartyUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_Party_PartyUpdate(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Party_PartyUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Party_PartyUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Room_InviteAccepted
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Room_InviteAccepted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Room_InviteAccepted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Room_InviteAccepted"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Room_InviteAccepted
void Oculus::Platform::Message::MessageType::_set_Notification_Room_InviteAccepted(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Room_InviteAccepted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Room_InviteAccepted", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Room_InviteReceived
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Room_InviteReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Room_InviteReceived");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Room_InviteReceived"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Room_InviteReceived
void Oculus::Platform::Message::MessageType::_set_Notification_Room_InviteReceived(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Room_InviteReceived");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Room_InviteReceived", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Room_RoomUpdate
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Room_RoomUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Room_RoomUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Room_RoomUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Room_RoomUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_Room_RoomUpdate(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Room_RoomUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Room_RoomUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Session_InvitationsSent
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Session_InvitationsSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Session_InvitationsSent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Session_InvitationsSent"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Session_InvitationsSent
void Oculus::Platform::Message::MessageType::_set_Notification_Session_InvitationsSent(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Session_InvitationsSent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Session_InvitationsSent", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Voip_ConnectRequest
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Voip_ConnectRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Voip_ConnectRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Voip_ConnectRequest"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Voip_ConnectRequest
void Oculus::Platform::Message::MessageType::_set_Notification_Voip_ConnectRequest(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Voip_ConnectRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Voip_ConnectRequest", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Voip_StateChange
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Voip_StateChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Voip_StateChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Voip_StateChange"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Voip_StateChange
void Oculus::Platform::Message::MessageType::_set_Notification_Voip_StateChange(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Voip_StateChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Voip_StateChange", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Voip_SystemVoipState
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Voip_SystemVoipState() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Voip_SystemVoipState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Voip_SystemVoipState"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Voip_SystemVoipState
void Oculus::Platform::Message::MessageType::_set_Notification_Voip_SystemVoipState(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Voip_SystemVoipState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Voip_SystemVoipState", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Notification_Vrcamera_GetSurfaceUpdate
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Notification_Vrcamera_GetSurfaceUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Notification_Vrcamera_GetSurfaceUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Notification_Vrcamera_GetSurfaceUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Notification_Vrcamera_GetSurfaceUpdate
void Oculus::Platform::Message::MessageType::_set_Notification_Vrcamera_GetSurfaceUpdate(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Notification_Vrcamera_GetSurfaceUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Notification_Vrcamera_GetSurfaceUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Platform_InitializeWithAccessToken
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Platform_InitializeWithAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Platform_InitializeWithAccessToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Platform_InitializeWithAccessToken"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Platform_InitializeWithAccessToken
void Oculus::Platform::Message::MessageType::_set_Platform_InitializeWithAccessToken(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Platform_InitializeWithAccessToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Platform_InitializeWithAccessToken", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Platform_InitializeStandaloneOculus
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Platform_InitializeStandaloneOculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Platform_InitializeStandaloneOculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Platform_InitializeStandaloneOculus"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Platform_InitializeStandaloneOculus
void Oculus::Platform::Message::MessageType::_set_Platform_InitializeStandaloneOculus(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Platform_InitializeStandaloneOculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Platform_InitializeStandaloneOculus", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Platform_InitializeAndroidAsynchronous
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Platform_InitializeAndroidAsynchronous() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Platform_InitializeAndroidAsynchronous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Platform_InitializeAndroidAsynchronous"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Platform_InitializeAndroidAsynchronous
void Oculus::Platform::Message::MessageType::_set_Platform_InitializeAndroidAsynchronous(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Platform_InitializeAndroidAsynchronous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Platform_InitializeAndroidAsynchronous", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.Message/MessageType Platform_InitializeWindowsAsynchronous
Oculus::Platform::Message::MessageType Oculus::Platform::Message::MessageType::_get_Platform_InitializeWindowsAsynchronous() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_get_Platform_InitializeWindowsAsynchronous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message::MessageType>("Oculus.Platform", "Message/MessageType", "Platform_InitializeWindowsAsynchronous"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.Message/MessageType Platform_InitializeWindowsAsynchronous
void Oculus::Platform::Message::MessageType::_set_Platform_InitializeWindowsAsynchronous(Oculus::Platform::Message::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::MessageType::_set_Platform_InitializeWindowsAsynchronous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "Message/MessageType", "Platform_InitializeWindowsAsynchronous", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.Message/ExtraMessageTypesHandler
#include "Oculus/Platform/Message_ExtraMessageTypesHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.Message/ExtraMessageTypesHandler.Invoke
Oculus::Platform::Message* Oculus::Platform::Message::ExtraMessageTypesHandler::Invoke(System::IntPtr messageHandle, Oculus::Platform::Message::MessageType message_type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::ExtraMessageTypesHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageHandle), ::il2cpp_utils::ExtractType(message_type)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Message*, false>(this, ___internal__method, messageHandle, message_type);
}
// Autogenerated method: Oculus.Platform.Message/ExtraMessageTypesHandler.BeginInvoke
System::IAsyncResult* Oculus::Platform::Message::ExtraMessageTypesHandler::BeginInvoke(System::IntPtr messageHandle, Oculus::Platform::Message::MessageType message_type, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::ExtraMessageTypesHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageHandle), ::il2cpp_utils::ExtractType(message_type), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, messageHandle, message_type, callback, object);
}
// Autogenerated method: Oculus.Platform.Message/ExtraMessageTypesHandler.EndInvoke
Oculus::Platform::Message* Oculus::Platform::Message::ExtraMessageTypesHandler::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::Message::ExtraMessageTypesHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Message*, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: Message::ExtraMessageTypesHandler::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Message::ExtraMessageTypesHandler::*)(::Il2CppObject*, System::IntPtr)>(&Message::ExtraMessageTypesHandler::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message::ExtraMessageTypesHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Message::ExtraMessageTypesHandler::*)(::Il2CppObject*, System::IntPtr)>(&Message::ExtraMessageTypesHandler::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message::ExtraMessageTypesHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Message::ExtraMessageTypesHandler::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Message* (Message::ExtraMessageTypesHandler::*)(System::IntPtr, Oculus::Platform::Message::MessageType)>(&Message::ExtraMessageTypesHandler::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message::ExtraMessageTypesHandler*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message::MessageType>()});
  }
};
// Writing MetadataGetter for method: Message::ExtraMessageTypesHandler::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (Message::ExtraMessageTypesHandler::*)(System::IntPtr, Oculus::Platform::Message::MessageType, System::AsyncCallback*, ::Il2CppObject*)>(&Message::ExtraMessageTypesHandler::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message::ExtraMessageTypesHandler*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message::MessageType>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Message::ExtraMessageTypesHandler::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Message* (Message::ExtraMessageTypesHandler::*)(System::IAsyncResult*)>(&Message::ExtraMessageTypesHandler::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Message::ExtraMessageTypesHandler*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAbuseReportRecording
#include "Oculus/Platform/MessageWithAbuseReportRecording.hpp"
// Including type: Oculus.Platform.Models.AbuseReportRecording
#include "Oculus/Platform/Models/AbuseReportRecording.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAbuseReportRecording.GetDataFromMessage
Oculus::Platform::Models::AbuseReportRecording* Oculus::Platform::MessageWithAbuseReportRecording::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAbuseReportRecording::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AbuseReportRecording*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAbuseReportRecording.GetAbuseReportRecording
Oculus::Platform::Models::AbuseReportRecording* Oculus::Platform::MessageWithAbuseReportRecording::GetAbuseReportRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAbuseReportRecording::GetAbuseReportRecording");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAbuseReportRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AbuseReportRecording*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithAbuseReportRecording::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AbuseReportRecording* (MessageWithAbuseReportRecording::*)(System::IntPtr)>(&MessageWithAbuseReportRecording::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAbuseReportRecording*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithAbuseReportRecording::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithAbuseReportRecording::*)(System::IntPtr)>(&MessageWithAbuseReportRecording::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAbuseReportRecording*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithAbuseReportRecording::*)(System::IntPtr)>(&MessageWithAbuseReportRecording::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAbuseReportRecording*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithAbuseReportRecording::GetAbuseReportRecording
// Il2CppName: GetAbuseReportRecording
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AbuseReportRecording* (MessageWithAbuseReportRecording::*)()>(&MessageWithAbuseReportRecording::GetAbuseReportRecording)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAbuseReportRecording*), "GetAbuseReportRecording", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAchievementDefinitions
#include "Oculus/Platform/MessageWithAchievementDefinitions.hpp"
// Including type: Oculus.Platform.Models.AchievementDefinitionList
#include "Oculus/Platform/Models/AchievementDefinitionList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAchievementDefinitions.GetDataFromMessage
Oculus::Platform::Models::AchievementDefinitionList* Oculus::Platform::MessageWithAchievementDefinitions::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAchievementDefinitions::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AchievementDefinitionList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAchievementDefinitions.GetAchievementDefinitions
Oculus::Platform::Models::AchievementDefinitionList* Oculus::Platform::MessageWithAchievementDefinitions::GetAchievementDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAchievementDefinitions::GetAchievementDefinitions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAchievementDefinitions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AchievementDefinitionList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithAchievementDefinitions::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AchievementDefinitionList* (MessageWithAchievementDefinitions::*)(System::IntPtr)>(&MessageWithAchievementDefinitions::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAchievementDefinitions*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithAchievementDefinitions::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithAchievementDefinitions::*)(System::IntPtr)>(&MessageWithAchievementDefinitions::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAchievementDefinitions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithAchievementDefinitions::*)(System::IntPtr)>(&MessageWithAchievementDefinitions::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAchievementDefinitions*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithAchievementDefinitions::GetAchievementDefinitions
// Il2CppName: GetAchievementDefinitions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AchievementDefinitionList* (MessageWithAchievementDefinitions::*)()>(&MessageWithAchievementDefinitions::GetAchievementDefinitions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAchievementDefinitions*), "GetAchievementDefinitions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAchievementProgressList
#include "Oculus/Platform/MessageWithAchievementProgressList.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAchievementProgressList.GetDataFromMessage
Oculus::Platform::Models::AchievementProgressList* Oculus::Platform::MessageWithAchievementProgressList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAchievementProgressList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AchievementProgressList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAchievementProgressList.GetAchievementProgressList
Oculus::Platform::Models::AchievementProgressList* Oculus::Platform::MessageWithAchievementProgressList::GetAchievementProgressList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAchievementProgressList::GetAchievementProgressList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAchievementProgressList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AchievementProgressList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithAchievementProgressList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AchievementProgressList* (MessageWithAchievementProgressList::*)(System::IntPtr)>(&MessageWithAchievementProgressList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAchievementProgressList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithAchievementProgressList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithAchievementProgressList::*)(System::IntPtr)>(&MessageWithAchievementProgressList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAchievementProgressList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithAchievementProgressList::*)(System::IntPtr)>(&MessageWithAchievementProgressList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAchievementProgressList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithAchievementProgressList::GetAchievementProgressList
// Il2CppName: GetAchievementProgressList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AchievementProgressList* (MessageWithAchievementProgressList::*)()>(&MessageWithAchievementProgressList::GetAchievementProgressList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAchievementProgressList*), "GetAchievementProgressList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAchievementUpdate
#include "Oculus/Platform/MessageWithAchievementUpdate.hpp"
// Including type: Oculus.Platform.Models.AchievementUpdate
#include "Oculus/Platform/Models/AchievementUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAchievementUpdate.GetDataFromMessage
Oculus::Platform::Models::AchievementUpdate* Oculus::Platform::MessageWithAchievementUpdate::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAchievementUpdate::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AchievementUpdate*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAchievementUpdate.GetAchievementUpdate
Oculus::Platform::Models::AchievementUpdate* Oculus::Platform::MessageWithAchievementUpdate::GetAchievementUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAchievementUpdate::GetAchievementUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAchievementUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AchievementUpdate*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithAchievementUpdate::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AchievementUpdate* (MessageWithAchievementUpdate::*)(System::IntPtr)>(&MessageWithAchievementUpdate::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAchievementUpdate*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithAchievementUpdate::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithAchievementUpdate::*)(System::IntPtr)>(&MessageWithAchievementUpdate::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAchievementUpdate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithAchievementUpdate::*)(System::IntPtr)>(&MessageWithAchievementUpdate::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAchievementUpdate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithAchievementUpdate::GetAchievementUpdate
// Il2CppName: GetAchievementUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AchievementUpdate* (MessageWithAchievementUpdate::*)()>(&MessageWithAchievementUpdate::GetAchievementUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAchievementUpdate*), "GetAchievementUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithApplicationVersion
#include "Oculus/Platform/MessageWithApplicationVersion.hpp"
// Including type: Oculus.Platform.Models.ApplicationVersion
#include "Oculus/Platform/Models/ApplicationVersion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithApplicationVersion.GetDataFromMessage
Oculus::Platform::Models::ApplicationVersion* Oculus::Platform::MessageWithApplicationVersion::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithApplicationVersion::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ApplicationVersion*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithApplicationVersion.GetApplicationVersion
Oculus::Platform::Models::ApplicationVersion* Oculus::Platform::MessageWithApplicationVersion::GetApplicationVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithApplicationVersion::GetApplicationVersion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ApplicationVersion*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithApplicationVersion::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::ApplicationVersion* (MessageWithApplicationVersion::*)(System::IntPtr)>(&MessageWithApplicationVersion::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithApplicationVersion*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithApplicationVersion::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithApplicationVersion::*)(System::IntPtr)>(&MessageWithApplicationVersion::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithApplicationVersion*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithApplicationVersion::*)(System::IntPtr)>(&MessageWithApplicationVersion::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithApplicationVersion*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithApplicationVersion::GetApplicationVersion
// Il2CppName: GetApplicationVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::ApplicationVersion* (MessageWithApplicationVersion::*)()>(&MessageWithApplicationVersion::GetApplicationVersion)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithApplicationVersion*), "GetApplicationVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetDetails
#include "Oculus/Platform/MessageWithAssetDetails.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetDetails.GetDataFromMessage
Oculus::Platform::Models::AssetDetails* Oculus::Platform::MessageWithAssetDetails::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetDetails::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetDetails*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetDetails.GetAssetDetails
Oculus::Platform::Models::AssetDetails* Oculus::Platform::MessageWithAssetDetails::GetAssetDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetDetails::GetAssetDetails");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetDetails*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithAssetDetails::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AssetDetails* (MessageWithAssetDetails::*)(System::IntPtr)>(&MessageWithAssetDetails::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetDetails*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithAssetDetails::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithAssetDetails::*)(System::IntPtr)>(&MessageWithAssetDetails::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetDetails*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithAssetDetails::*)(System::IntPtr)>(&MessageWithAssetDetails::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetDetails*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithAssetDetails::GetAssetDetails
// Il2CppName: GetAssetDetails
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AssetDetails* (MessageWithAssetDetails::*)()>(&MessageWithAssetDetails::GetAssetDetails)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetDetails*), "GetAssetDetails", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetDetailsList
#include "Oculus/Platform/MessageWithAssetDetailsList.hpp"
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetDetailsList.GetDataFromMessage
Oculus::Platform::Models::AssetDetailsList* Oculus::Platform::MessageWithAssetDetailsList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetDetailsList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetDetailsList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetDetailsList.GetAssetDetailsList
Oculus::Platform::Models::AssetDetailsList* Oculus::Platform::MessageWithAssetDetailsList::GetAssetDetailsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetDetailsList::GetAssetDetailsList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetDetailsList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetDetailsList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithAssetDetailsList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AssetDetailsList* (MessageWithAssetDetailsList::*)(System::IntPtr)>(&MessageWithAssetDetailsList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetDetailsList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithAssetDetailsList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithAssetDetailsList::*)(System::IntPtr)>(&MessageWithAssetDetailsList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetDetailsList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithAssetDetailsList::*)(System::IntPtr)>(&MessageWithAssetDetailsList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetDetailsList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithAssetDetailsList::GetAssetDetailsList
// Il2CppName: GetAssetDetailsList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AssetDetailsList* (MessageWithAssetDetailsList::*)()>(&MessageWithAssetDetailsList::GetAssetDetailsList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetDetailsList*), "GetAssetDetailsList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDeleteResult
#include "Oculus/Platform/MessageWithAssetFileDeleteResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDeleteResult
#include "Oculus/Platform/Models/AssetFileDeleteResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDeleteResult.GetDataFromMessage
Oculus::Platform::Models::AssetFileDeleteResult* Oculus::Platform::MessageWithAssetFileDeleteResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetFileDeleteResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDeleteResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDeleteResult.GetAssetFileDeleteResult
Oculus::Platform::Models::AssetFileDeleteResult* Oculus::Platform::MessageWithAssetFileDeleteResult::GetAssetFileDeleteResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetFileDeleteResult::GetAssetFileDeleteResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetFileDeleteResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDeleteResult*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithAssetFileDeleteResult::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AssetFileDeleteResult* (MessageWithAssetFileDeleteResult::*)(System::IntPtr)>(&MessageWithAssetFileDeleteResult::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetFileDeleteResult*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithAssetFileDeleteResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithAssetFileDeleteResult::*)(System::IntPtr)>(&MessageWithAssetFileDeleteResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetFileDeleteResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithAssetFileDeleteResult::*)(System::IntPtr)>(&MessageWithAssetFileDeleteResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetFileDeleteResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithAssetFileDeleteResult::GetAssetFileDeleteResult
// Il2CppName: GetAssetFileDeleteResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AssetFileDeleteResult* (MessageWithAssetFileDeleteResult::*)()>(&MessageWithAssetFileDeleteResult::GetAssetFileDeleteResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetFileDeleteResult*), "GetAssetFileDeleteResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDownloadCancelResult
#include "Oculus/Platform/MessageWithAssetFileDownloadCancelResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadCancelResult
#include "Oculus/Platform/Models/AssetFileDownloadCancelResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadCancelResult.GetDataFromMessage
Oculus::Platform::Models::AssetFileDownloadCancelResult* Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadCancelResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadCancelResult.GetAssetFileDownloadCancelResult
Oculus::Platform::Models::AssetFileDownloadCancelResult* Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetAssetFileDownloadCancelResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetFileDownloadCancelResult::GetAssetFileDownloadCancelResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetFileDownloadCancelResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadCancelResult*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithAssetFileDownloadCancelResult::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AssetFileDownloadCancelResult* (MessageWithAssetFileDownloadCancelResult::*)(System::IntPtr)>(&MessageWithAssetFileDownloadCancelResult::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetFileDownloadCancelResult*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithAssetFileDownloadCancelResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithAssetFileDownloadCancelResult::*)(System::IntPtr)>(&MessageWithAssetFileDownloadCancelResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetFileDownloadCancelResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithAssetFileDownloadCancelResult::*)(System::IntPtr)>(&MessageWithAssetFileDownloadCancelResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetFileDownloadCancelResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithAssetFileDownloadCancelResult::GetAssetFileDownloadCancelResult
// Il2CppName: GetAssetFileDownloadCancelResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AssetFileDownloadCancelResult* (MessageWithAssetFileDownloadCancelResult::*)()>(&MessageWithAssetFileDownloadCancelResult::GetAssetFileDownloadCancelResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetFileDownloadCancelResult*), "GetAssetFileDownloadCancelResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDownloadResult
#include "Oculus/Platform/MessageWithAssetFileDownloadResult.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadResult
#include "Oculus/Platform/Models/AssetFileDownloadResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadResult.GetDataFromMessage
Oculus::Platform::Models::AssetFileDownloadResult* Oculus::Platform::MessageWithAssetFileDownloadResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetFileDownloadResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadResult.GetAssetFileDownloadResult
Oculus::Platform::Models::AssetFileDownloadResult* Oculus::Platform::MessageWithAssetFileDownloadResult::GetAssetFileDownloadResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetFileDownloadResult::GetAssetFileDownloadResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetFileDownloadResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadResult*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithAssetFileDownloadResult::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AssetFileDownloadResult* (MessageWithAssetFileDownloadResult::*)(System::IntPtr)>(&MessageWithAssetFileDownloadResult::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetFileDownloadResult*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithAssetFileDownloadResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithAssetFileDownloadResult::*)(System::IntPtr)>(&MessageWithAssetFileDownloadResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetFileDownloadResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithAssetFileDownloadResult::*)(System::IntPtr)>(&MessageWithAssetFileDownloadResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetFileDownloadResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithAssetFileDownloadResult::GetAssetFileDownloadResult
// Il2CppName: GetAssetFileDownloadResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AssetFileDownloadResult* (MessageWithAssetFileDownloadResult::*)()>(&MessageWithAssetFileDownloadResult::GetAssetFileDownloadResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetFileDownloadResult*), "GetAssetFileDownloadResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithAssetFileDownloadUpdate
#include "Oculus/Platform/MessageWithAssetFileDownloadUpdate.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadUpdate
#include "Oculus/Platform/Models/AssetFileDownloadUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadUpdate.GetDataFromMessage
Oculus::Platform::Models::AssetFileDownloadUpdate* Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadUpdate*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithAssetFileDownloadUpdate.GetAssetFileDownloadUpdate
Oculus::Platform::Models::AssetFileDownloadUpdate* Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetAssetFileDownloadUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithAssetFileDownloadUpdate::GetAssetFileDownloadUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetFileDownloadUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::AssetFileDownloadUpdate*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithAssetFileDownloadUpdate::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AssetFileDownloadUpdate* (MessageWithAssetFileDownloadUpdate::*)(System::IntPtr)>(&MessageWithAssetFileDownloadUpdate::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetFileDownloadUpdate*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithAssetFileDownloadUpdate::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithAssetFileDownloadUpdate::*)(System::IntPtr)>(&MessageWithAssetFileDownloadUpdate::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetFileDownloadUpdate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithAssetFileDownloadUpdate::*)(System::IntPtr)>(&MessageWithAssetFileDownloadUpdate::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetFileDownloadUpdate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithAssetFileDownloadUpdate::GetAssetFileDownloadUpdate
// Il2CppName: GetAssetFileDownloadUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::AssetFileDownloadUpdate* (MessageWithAssetFileDownloadUpdate::*)()>(&MessageWithAssetFileDownloadUpdate::GetAssetFileDownloadUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithAssetFileDownloadUpdate*), "GetAssetFileDownloadUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCalApplicationFinalized
#include "Oculus/Platform/MessageWithCalApplicationFinalized.hpp"
// Including type: Oculus.Platform.Models.CalApplicationFinalized
#include "Oculus/Platform/Models/CalApplicationFinalized.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationFinalized.GetDataFromMessage
Oculus::Platform::Models::CalApplicationFinalized* Oculus::Platform::MessageWithCalApplicationFinalized::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCalApplicationFinalized::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationFinalized*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationFinalized.GetCalApplicationFinalized
Oculus::Platform::Models::CalApplicationFinalized* Oculus::Platform::MessageWithCalApplicationFinalized::GetCalApplicationFinalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCalApplicationFinalized::GetCalApplicationFinalized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalApplicationFinalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationFinalized*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithCalApplicationFinalized::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CalApplicationFinalized* (MessageWithCalApplicationFinalized::*)(System::IntPtr)>(&MessageWithCalApplicationFinalized::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCalApplicationFinalized*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithCalApplicationFinalized::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithCalApplicationFinalized::*)(System::IntPtr)>(&MessageWithCalApplicationFinalized::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCalApplicationFinalized*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithCalApplicationFinalized::*)(System::IntPtr)>(&MessageWithCalApplicationFinalized::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCalApplicationFinalized*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithCalApplicationFinalized::GetCalApplicationFinalized
// Il2CppName: GetCalApplicationFinalized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CalApplicationFinalized* (MessageWithCalApplicationFinalized::*)()>(&MessageWithCalApplicationFinalized::GetCalApplicationFinalized)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCalApplicationFinalized*), "GetCalApplicationFinalized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCalApplicationProposed
#include "Oculus/Platform/MessageWithCalApplicationProposed.hpp"
// Including type: Oculus.Platform.Models.CalApplicationProposed
#include "Oculus/Platform/Models/CalApplicationProposed.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationProposed.GetDataFromMessage
Oculus::Platform::Models::CalApplicationProposed* Oculus::Platform::MessageWithCalApplicationProposed::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCalApplicationProposed::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationProposed*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationProposed.GetCalApplicationProposed
Oculus::Platform::Models::CalApplicationProposed* Oculus::Platform::MessageWithCalApplicationProposed::GetCalApplicationProposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCalApplicationProposed::GetCalApplicationProposed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalApplicationProposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationProposed*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithCalApplicationProposed::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CalApplicationProposed* (MessageWithCalApplicationProposed::*)(System::IntPtr)>(&MessageWithCalApplicationProposed::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCalApplicationProposed*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithCalApplicationProposed::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithCalApplicationProposed::*)(System::IntPtr)>(&MessageWithCalApplicationProposed::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCalApplicationProposed*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithCalApplicationProposed::*)(System::IntPtr)>(&MessageWithCalApplicationProposed::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCalApplicationProposed*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithCalApplicationProposed::GetCalApplicationProposed
// Il2CppName: GetCalApplicationProposed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CalApplicationProposed* (MessageWithCalApplicationProposed::*)()>(&MessageWithCalApplicationProposed::GetCalApplicationProposed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCalApplicationProposed*), "GetCalApplicationProposed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCalApplicationSuggestionList
#include "Oculus/Platform/MessageWithCalApplicationSuggestionList.hpp"
// Including type: Oculus.Platform.Models.CalApplicationSuggestionList
#include "Oculus/Platform/Models/CalApplicationSuggestionList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationSuggestionList.GetDataFromMessage
Oculus::Platform::Models::CalApplicationSuggestionList* Oculus::Platform::MessageWithCalApplicationSuggestionList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCalApplicationSuggestionList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationSuggestionList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCalApplicationSuggestionList.GetCalApplicationSuggestionList
Oculus::Platform::Models::CalApplicationSuggestionList* Oculus::Platform::MessageWithCalApplicationSuggestionList::GetCalApplicationSuggestionList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCalApplicationSuggestionList::GetCalApplicationSuggestionList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalApplicationSuggestionList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CalApplicationSuggestionList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithCalApplicationSuggestionList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CalApplicationSuggestionList* (MessageWithCalApplicationSuggestionList::*)(System::IntPtr)>(&MessageWithCalApplicationSuggestionList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCalApplicationSuggestionList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithCalApplicationSuggestionList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithCalApplicationSuggestionList::*)(System::IntPtr)>(&MessageWithCalApplicationSuggestionList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCalApplicationSuggestionList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithCalApplicationSuggestionList::*)(System::IntPtr)>(&MessageWithCalApplicationSuggestionList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCalApplicationSuggestionList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithCalApplicationSuggestionList::GetCalApplicationSuggestionList
// Il2CppName: GetCalApplicationSuggestionList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CalApplicationSuggestionList* (MessageWithCalApplicationSuggestionList::*)()>(&MessageWithCalApplicationSuggestionList::GetCalApplicationSuggestionList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCalApplicationSuggestionList*), "GetCalApplicationSuggestionList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithChallenge
#include "Oculus/Platform/MessageWithChallenge.hpp"
// Including type: Oculus.Platform.Models.Challenge
#include "Oculus/Platform/Models/Challenge.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithChallenge.GetDataFromMessage
Oculus::Platform::Models::Challenge* Oculus::Platform::MessageWithChallenge::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithChallenge::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Challenge*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithChallenge.GetChallenge
Oculus::Platform::Models::Challenge* Oculus::Platform::MessageWithChallenge::GetChallenge() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithChallenge::GetChallenge");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChallenge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Challenge*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithChallenge::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Challenge* (MessageWithChallenge::*)(System::IntPtr)>(&MessageWithChallenge::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithChallenge*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithChallenge::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithChallenge::*)(System::IntPtr)>(&MessageWithChallenge::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithChallenge*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithChallenge::*)(System::IntPtr)>(&MessageWithChallenge::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithChallenge*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithChallenge::GetChallenge
// Il2CppName: GetChallenge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::Challenge* (MessageWithChallenge::*)()>(&MessageWithChallenge::GetChallenge)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithChallenge*), "GetChallenge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithChallengeList
#include "Oculus/Platform/MessageWithChallengeList.hpp"
// Including type: Oculus.Platform.Models.ChallengeList
#include "Oculus/Platform/Models/ChallengeList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithChallengeList.GetDataFromMessage
Oculus::Platform::Models::ChallengeList* Oculus::Platform::MessageWithChallengeList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithChallengeList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ChallengeList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithChallengeList.GetChallengeList
Oculus::Platform::Models::ChallengeList* Oculus::Platform::MessageWithChallengeList::GetChallengeList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithChallengeList::GetChallengeList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChallengeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ChallengeList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithChallengeList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::ChallengeList* (MessageWithChallengeList::*)(System::IntPtr)>(&MessageWithChallengeList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithChallengeList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithChallengeList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithChallengeList::*)(System::IntPtr)>(&MessageWithChallengeList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithChallengeList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithChallengeList::*)(System::IntPtr)>(&MessageWithChallengeList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithChallengeList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithChallengeList::GetChallengeList
// Il2CppName: GetChallengeList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::ChallengeList* (MessageWithChallengeList::*)()>(&MessageWithChallengeList::GetChallengeList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithChallengeList*), "GetChallengeList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithChallengeEntryList
#include "Oculus/Platform/MessageWithChallengeEntryList.hpp"
// Including type: Oculus.Platform.Models.ChallengeEntryList
#include "Oculus/Platform/Models/ChallengeEntryList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithChallengeEntryList.GetDataFromMessage
Oculus::Platform::Models::ChallengeEntryList* Oculus::Platform::MessageWithChallengeEntryList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithChallengeEntryList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ChallengeEntryList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithChallengeEntryList.GetChallengeEntryList
Oculus::Platform::Models::ChallengeEntryList* Oculus::Platform::MessageWithChallengeEntryList::GetChallengeEntryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithChallengeEntryList::GetChallengeEntryList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChallengeEntryList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::ChallengeEntryList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithChallengeEntryList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::ChallengeEntryList* (MessageWithChallengeEntryList::*)(System::IntPtr)>(&MessageWithChallengeEntryList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithChallengeEntryList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithChallengeEntryList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithChallengeEntryList::*)(System::IntPtr)>(&MessageWithChallengeEntryList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithChallengeEntryList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithChallengeEntryList::*)(System::IntPtr)>(&MessageWithChallengeEntryList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithChallengeEntryList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithChallengeEntryList::GetChallengeEntryList
// Il2CppName: GetChallengeEntryList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::ChallengeEntryList* (MessageWithChallengeEntryList::*)()>(&MessageWithChallengeEntryList::GetChallengeEntryList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithChallengeEntryList*), "GetChallengeEntryList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCloudStorageConflictMetadata
#include "Oculus/Platform/MessageWithCloudStorageConflictMetadata.hpp"
// Including type: Oculus.Platform.Models.CloudStorageConflictMetadata
#include "Oculus/Platform/Models/CloudStorageConflictMetadata.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageConflictMetadata.GetDataFromMessage
Oculus::Platform::Models::CloudStorageConflictMetadata* Oculus::Platform::MessageWithCloudStorageConflictMetadata::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCloudStorageConflictMetadata::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageConflictMetadata*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageConflictMetadata.GetCloudStorageConflictMetadata
Oculus::Platform::Models::CloudStorageConflictMetadata* Oculus::Platform::MessageWithCloudStorageConflictMetadata::GetCloudStorageConflictMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCloudStorageConflictMetadata::GetCloudStorageConflictMetadata");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloudStorageConflictMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageConflictMetadata*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithCloudStorageConflictMetadata::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CloudStorageConflictMetadata* (MessageWithCloudStorageConflictMetadata::*)(System::IntPtr)>(&MessageWithCloudStorageConflictMetadata::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCloudStorageConflictMetadata*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithCloudStorageConflictMetadata::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithCloudStorageConflictMetadata::*)(System::IntPtr)>(&MessageWithCloudStorageConflictMetadata::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCloudStorageConflictMetadata*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithCloudStorageConflictMetadata::*)(System::IntPtr)>(&MessageWithCloudStorageConflictMetadata::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCloudStorageConflictMetadata*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithCloudStorageConflictMetadata::GetCloudStorageConflictMetadata
// Il2CppName: GetCloudStorageConflictMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CloudStorageConflictMetadata* (MessageWithCloudStorageConflictMetadata::*)()>(&MessageWithCloudStorageConflictMetadata::GetCloudStorageConflictMetadata)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCloudStorageConflictMetadata*), "GetCloudStorageConflictMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCloudStorageData
#include "Oculus/Platform/MessageWithCloudStorageData.hpp"
// Including type: Oculus.Platform.Models.CloudStorageData
#include "Oculus/Platform/Models/CloudStorageData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageData.GetDataFromMessage
Oculus::Platform::Models::CloudStorageData* Oculus::Platform::MessageWithCloudStorageData::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCloudStorageData::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageData*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageData.GetCloudStorageData
Oculus::Platform::Models::CloudStorageData* Oculus::Platform::MessageWithCloudStorageData::GetCloudStorageData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCloudStorageData::GetCloudStorageData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloudStorageData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageData*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithCloudStorageData::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CloudStorageData* (MessageWithCloudStorageData::*)(System::IntPtr)>(&MessageWithCloudStorageData::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCloudStorageData*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithCloudStorageData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithCloudStorageData::*)(System::IntPtr)>(&MessageWithCloudStorageData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCloudStorageData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithCloudStorageData::*)(System::IntPtr)>(&MessageWithCloudStorageData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCloudStorageData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithCloudStorageData::GetCloudStorageData
// Il2CppName: GetCloudStorageData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CloudStorageData* (MessageWithCloudStorageData::*)()>(&MessageWithCloudStorageData::GetCloudStorageData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCloudStorageData*), "GetCloudStorageData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCloudStorageMetadataUnderLocal
#include "Oculus/Platform/MessageWithCloudStorageMetadataUnderLocal.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadata
#include "Oculus/Platform/Models/CloudStorageMetadata.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageMetadataUnderLocal.GetDataFromMessage
Oculus::Platform::Models::CloudStorageMetadata* Oculus::Platform::MessageWithCloudStorageMetadataUnderLocal::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCloudStorageMetadataUnderLocal::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageMetadata*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageMetadataUnderLocal.GetCloudStorageMetadata
Oculus::Platform::Models::CloudStorageMetadata* Oculus::Platform::MessageWithCloudStorageMetadataUnderLocal::GetCloudStorageMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCloudStorageMetadataUnderLocal::GetCloudStorageMetadata");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloudStorageMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageMetadata*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithCloudStorageMetadataUnderLocal::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CloudStorageMetadata* (MessageWithCloudStorageMetadataUnderLocal::*)(System::IntPtr)>(&MessageWithCloudStorageMetadataUnderLocal::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCloudStorageMetadataUnderLocal*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithCloudStorageMetadataUnderLocal::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithCloudStorageMetadataUnderLocal::*)(System::IntPtr)>(&MessageWithCloudStorageMetadataUnderLocal::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCloudStorageMetadataUnderLocal*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithCloudStorageMetadataUnderLocal::*)(System::IntPtr)>(&MessageWithCloudStorageMetadataUnderLocal::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCloudStorageMetadataUnderLocal*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithCloudStorageMetadataUnderLocal::GetCloudStorageMetadata
// Il2CppName: GetCloudStorageMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CloudStorageMetadata* (MessageWithCloudStorageMetadataUnderLocal::*)()>(&MessageWithCloudStorageMetadataUnderLocal::GetCloudStorageMetadata)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCloudStorageMetadataUnderLocal*), "GetCloudStorageMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCloudStorageMetadataList
#include "Oculus/Platform/MessageWithCloudStorageMetadataList.hpp"
// Including type: Oculus.Platform.Models.CloudStorageMetadataList
#include "Oculus/Platform/Models/CloudStorageMetadataList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageMetadataList.GetDataFromMessage
Oculus::Platform::Models::CloudStorageMetadataList* Oculus::Platform::MessageWithCloudStorageMetadataList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCloudStorageMetadataList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageMetadataList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageMetadataList.GetCloudStorageMetadataList
Oculus::Platform::Models::CloudStorageMetadataList* Oculus::Platform::MessageWithCloudStorageMetadataList::GetCloudStorageMetadataList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCloudStorageMetadataList::GetCloudStorageMetadataList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloudStorageMetadataList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageMetadataList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithCloudStorageMetadataList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CloudStorageMetadataList* (MessageWithCloudStorageMetadataList::*)(System::IntPtr)>(&MessageWithCloudStorageMetadataList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCloudStorageMetadataList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithCloudStorageMetadataList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithCloudStorageMetadataList::*)(System::IntPtr)>(&MessageWithCloudStorageMetadataList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCloudStorageMetadataList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithCloudStorageMetadataList::*)(System::IntPtr)>(&MessageWithCloudStorageMetadataList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCloudStorageMetadataList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithCloudStorageMetadataList::GetCloudStorageMetadataList
// Il2CppName: GetCloudStorageMetadataList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CloudStorageMetadataList* (MessageWithCloudStorageMetadataList::*)()>(&MessageWithCloudStorageMetadataList::GetCloudStorageMetadataList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCloudStorageMetadataList*), "GetCloudStorageMetadataList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithCloudStorageUpdateResponse
#include "Oculus/Platform/MessageWithCloudStorageUpdateResponse.hpp"
// Including type: Oculus.Platform.Models.CloudStorageUpdateResponse
#include "Oculus/Platform/Models/CloudStorageUpdateResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageUpdateResponse.GetDataFromMessage
Oculus::Platform::Models::CloudStorageUpdateResponse* Oculus::Platform::MessageWithCloudStorageUpdateResponse::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCloudStorageUpdateResponse::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageUpdateResponse*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithCloudStorageUpdateResponse.GetCloudStorageUpdateResponse
Oculus::Platform::Models::CloudStorageUpdateResponse* Oculus::Platform::MessageWithCloudStorageUpdateResponse::GetCloudStorageUpdateResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithCloudStorageUpdateResponse::GetCloudStorageUpdateResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCloudStorageUpdateResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::CloudStorageUpdateResponse*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithCloudStorageUpdateResponse::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CloudStorageUpdateResponse* (MessageWithCloudStorageUpdateResponse::*)(System::IntPtr)>(&MessageWithCloudStorageUpdateResponse::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCloudStorageUpdateResponse*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithCloudStorageUpdateResponse::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithCloudStorageUpdateResponse::*)(System::IntPtr)>(&MessageWithCloudStorageUpdateResponse::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCloudStorageUpdateResponse*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithCloudStorageUpdateResponse::*)(System::IntPtr)>(&MessageWithCloudStorageUpdateResponse::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCloudStorageUpdateResponse*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithCloudStorageUpdateResponse::GetCloudStorageUpdateResponse
// Il2CppName: GetCloudStorageUpdateResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::CloudStorageUpdateResponse* (MessageWithCloudStorageUpdateResponse::*)()>(&MessageWithCloudStorageUpdateResponse::GetCloudStorageUpdateResponse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithCloudStorageUpdateResponse*), "GetCloudStorageUpdateResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.MessageWithDataStoreUnderPrivateUserDataStore
#include "Oculus/Platform/MessageWithDataStoreUnderPrivateUserDataStore.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithDataStoreUnderPrivateUserDataStore.GetDataFromMessage
System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* Oculus::Platform::MessageWithDataStoreUnderPrivateUserDataStore::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithDataStoreUnderPrivateUserDataStore::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithDataStoreUnderPrivateUserDataStore.GetDataStore
System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* Oculus::Platform::MessageWithDataStoreUnderPrivateUserDataStore::GetDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithDataStoreUnderPrivateUserDataStore::GetDataStore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithDataStoreUnderPrivateUserDataStore::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* (MessageWithDataStoreUnderPrivateUserDataStore::*)(System::IntPtr)>(&MessageWithDataStoreUnderPrivateUserDataStore::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithDataStoreUnderPrivateUserDataStore*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithDataStoreUnderPrivateUserDataStore::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithDataStoreUnderPrivateUserDataStore::*)(System::IntPtr)>(&MessageWithDataStoreUnderPrivateUserDataStore::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithDataStoreUnderPrivateUserDataStore*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithDataStoreUnderPrivateUserDataStore::*)(System::IntPtr)>(&MessageWithDataStoreUnderPrivateUserDataStore::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithDataStoreUnderPrivateUserDataStore*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithDataStoreUnderPrivateUserDataStore::GetDataStore
// Il2CppName: GetDataStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* (MessageWithDataStoreUnderPrivateUserDataStore::*)()>(&MessageWithDataStoreUnderPrivateUserDataStore::GetDataStore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithDataStoreUnderPrivateUserDataStore*), "GetDataStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.MessageWithDataStoreUnderPublicUserDataStore
#include "Oculus/Platform/MessageWithDataStoreUnderPublicUserDataStore.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithDataStoreUnderPublicUserDataStore.GetDataFromMessage
System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* Oculus::Platform::MessageWithDataStoreUnderPublicUserDataStore::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithDataStoreUnderPublicUserDataStore::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithDataStoreUnderPublicUserDataStore.GetDataStore
System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* Oculus::Platform::MessageWithDataStoreUnderPublicUserDataStore::GetDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithDataStoreUnderPublicUserDataStore::GetDataStore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithDataStoreUnderPublicUserDataStore::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* (MessageWithDataStoreUnderPublicUserDataStore::*)(System::IntPtr)>(&MessageWithDataStoreUnderPublicUserDataStore::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithDataStoreUnderPublicUserDataStore*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithDataStoreUnderPublicUserDataStore::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithDataStoreUnderPublicUserDataStore::*)(System::IntPtr)>(&MessageWithDataStoreUnderPublicUserDataStore::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithDataStoreUnderPublicUserDataStore*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithDataStoreUnderPublicUserDataStore::*)(System::IntPtr)>(&MessageWithDataStoreUnderPublicUserDataStore::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithDataStoreUnderPublicUserDataStore*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithDataStoreUnderPublicUserDataStore::GetDataStore
// Il2CppName: GetDataStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* (MessageWithDataStoreUnderPublicUserDataStore::*)()>(&MessageWithDataStoreUnderPublicUserDataStore::GetDataStore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithDataStoreUnderPublicUserDataStore*), "GetDataStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithDestinationList
#include "Oculus/Platform/MessageWithDestinationList.hpp"
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithDestinationList.GetDataFromMessage
Oculus::Platform::Models::DestinationList* Oculus::Platform::MessageWithDestinationList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithDestinationList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::DestinationList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithDestinationList.GetDestinationList
Oculus::Platform::Models::DestinationList* Oculus::Platform::MessageWithDestinationList::GetDestinationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithDestinationList::GetDestinationList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDestinationList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::DestinationList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithDestinationList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::DestinationList* (MessageWithDestinationList::*)(System::IntPtr)>(&MessageWithDestinationList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithDestinationList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithDestinationList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithDestinationList::*)(System::IntPtr)>(&MessageWithDestinationList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithDestinationList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithDestinationList::*)(System::IntPtr)>(&MessageWithDestinationList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithDestinationList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithDestinationList::GetDestinationList
// Il2CppName: GetDestinationList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::DestinationList* (MessageWithDestinationList::*)()>(&MessageWithDestinationList::GetDestinationList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithDestinationList*), "GetDestinationList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithGroupPresenceLeaveIntent
#include "Oculus/Platform/MessageWithGroupPresenceLeaveIntent.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceLeaveIntent
#include "Oculus/Platform/Models/GroupPresenceLeaveIntent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithGroupPresenceLeaveIntent.GetDataFromMessage
Oculus::Platform::Models::GroupPresenceLeaveIntent* Oculus::Platform::MessageWithGroupPresenceLeaveIntent::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithGroupPresenceLeaveIntent::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::GroupPresenceLeaveIntent*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithGroupPresenceLeaveIntent.GetGroupPresenceLeaveIntent
Oculus::Platform::Models::GroupPresenceLeaveIntent* Oculus::Platform::MessageWithGroupPresenceLeaveIntent::GetGroupPresenceLeaveIntent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithGroupPresenceLeaveIntent::GetGroupPresenceLeaveIntent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGroupPresenceLeaveIntent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::GroupPresenceLeaveIntent*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithGroupPresenceLeaveIntent::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::GroupPresenceLeaveIntent* (MessageWithGroupPresenceLeaveIntent::*)(System::IntPtr)>(&MessageWithGroupPresenceLeaveIntent::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithGroupPresenceLeaveIntent*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithGroupPresenceLeaveIntent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithGroupPresenceLeaveIntent::*)(System::IntPtr)>(&MessageWithGroupPresenceLeaveIntent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithGroupPresenceLeaveIntent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithGroupPresenceLeaveIntent::*)(System::IntPtr)>(&MessageWithGroupPresenceLeaveIntent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithGroupPresenceLeaveIntent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithGroupPresenceLeaveIntent::GetGroupPresenceLeaveIntent
// Il2CppName: GetGroupPresenceLeaveIntent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::GroupPresenceLeaveIntent* (MessageWithGroupPresenceLeaveIntent::*)()>(&MessageWithGroupPresenceLeaveIntent::GetGroupPresenceLeaveIntent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithGroupPresenceLeaveIntent*), "GetGroupPresenceLeaveIntent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithInstalledApplicationList
#include "Oculus/Platform/MessageWithInstalledApplicationList.hpp"
// Including type: Oculus.Platform.Models.InstalledApplicationList
#include "Oculus/Platform/Models/InstalledApplicationList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithInstalledApplicationList.GetDataFromMessage
Oculus::Platform::Models::InstalledApplicationList* Oculus::Platform::MessageWithInstalledApplicationList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithInstalledApplicationList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::InstalledApplicationList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithInstalledApplicationList.GetInstalledApplicationList
Oculus::Platform::Models::InstalledApplicationList* Oculus::Platform::MessageWithInstalledApplicationList::GetInstalledApplicationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithInstalledApplicationList::GetInstalledApplicationList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInstalledApplicationList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::InstalledApplicationList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithInstalledApplicationList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::InstalledApplicationList* (MessageWithInstalledApplicationList::*)(System::IntPtr)>(&MessageWithInstalledApplicationList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithInstalledApplicationList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithInstalledApplicationList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithInstalledApplicationList::*)(System::IntPtr)>(&MessageWithInstalledApplicationList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithInstalledApplicationList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithInstalledApplicationList::*)(System::IntPtr)>(&MessageWithInstalledApplicationList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithInstalledApplicationList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithInstalledApplicationList::GetInstalledApplicationList
// Il2CppName: GetInstalledApplicationList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::InstalledApplicationList* (MessageWithInstalledApplicationList::*)()>(&MessageWithInstalledApplicationList::GetInstalledApplicationList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithInstalledApplicationList*), "GetInstalledApplicationList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithInvitePanelResultInfo
#include "Oculus/Platform/MessageWithInvitePanelResultInfo.hpp"
// Including type: Oculus.Platform.Models.InvitePanelResultInfo
#include "Oculus/Platform/Models/InvitePanelResultInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithInvitePanelResultInfo.GetDataFromMessage
Oculus::Platform::Models::InvitePanelResultInfo* Oculus::Platform::MessageWithInvitePanelResultInfo::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithInvitePanelResultInfo::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::InvitePanelResultInfo*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithInvitePanelResultInfo.GetInvitePanelResultInfo
Oculus::Platform::Models::InvitePanelResultInfo* Oculus::Platform::MessageWithInvitePanelResultInfo::GetInvitePanelResultInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithInvitePanelResultInfo::GetInvitePanelResultInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInvitePanelResultInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::InvitePanelResultInfo*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithInvitePanelResultInfo::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::InvitePanelResultInfo* (MessageWithInvitePanelResultInfo::*)(System::IntPtr)>(&MessageWithInvitePanelResultInfo::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithInvitePanelResultInfo*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithInvitePanelResultInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithInvitePanelResultInfo::*)(System::IntPtr)>(&MessageWithInvitePanelResultInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithInvitePanelResultInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithInvitePanelResultInfo::*)(System::IntPtr)>(&MessageWithInvitePanelResultInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithInvitePanelResultInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithInvitePanelResultInfo::GetInvitePanelResultInfo
// Il2CppName: GetInvitePanelResultInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::InvitePanelResultInfo* (MessageWithInvitePanelResultInfo::*)()>(&MessageWithInvitePanelResultInfo::GetInvitePanelResultInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithInvitePanelResultInfo*), "GetInvitePanelResultInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchBlockFlowResult
#include "Oculus/Platform/MessageWithLaunchBlockFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchBlockFlowResult
#include "Oculus/Platform/Models/LaunchBlockFlowResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchBlockFlowResult.GetDataFromMessage
Oculus::Platform::Models::LaunchBlockFlowResult* Oculus::Platform::MessageWithLaunchBlockFlowResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLaunchBlockFlowResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchBlockFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchBlockFlowResult.GetLaunchBlockFlowResult
Oculus::Platform::Models::LaunchBlockFlowResult* Oculus::Platform::MessageWithLaunchBlockFlowResult::GetLaunchBlockFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLaunchBlockFlowResult::GetLaunchBlockFlowResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLaunchBlockFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchBlockFlowResult*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithLaunchBlockFlowResult::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LaunchBlockFlowResult* (MessageWithLaunchBlockFlowResult::*)(System::IntPtr)>(&MessageWithLaunchBlockFlowResult::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLaunchBlockFlowResult*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLaunchBlockFlowResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLaunchBlockFlowResult::*)(System::IntPtr)>(&MessageWithLaunchBlockFlowResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLaunchBlockFlowResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLaunchBlockFlowResult::*)(System::IntPtr)>(&MessageWithLaunchBlockFlowResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLaunchBlockFlowResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLaunchBlockFlowResult::GetLaunchBlockFlowResult
// Il2CppName: GetLaunchBlockFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LaunchBlockFlowResult* (MessageWithLaunchBlockFlowResult::*)()>(&MessageWithLaunchBlockFlowResult::GetLaunchBlockFlowResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLaunchBlockFlowResult*), "GetLaunchBlockFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchFriendRequestFlowResult
#include "Oculus/Platform/MessageWithLaunchFriendRequestFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchFriendRequestFlowResult
#include "Oculus/Platform/Models/LaunchFriendRequestFlowResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchFriendRequestFlowResult.GetDataFromMessage
Oculus::Platform::Models::LaunchFriendRequestFlowResult* Oculus::Platform::MessageWithLaunchFriendRequestFlowResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLaunchFriendRequestFlowResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchFriendRequestFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchFriendRequestFlowResult.GetLaunchFriendRequestFlowResult
Oculus::Platform::Models::LaunchFriendRequestFlowResult* Oculus::Platform::MessageWithLaunchFriendRequestFlowResult::GetLaunchFriendRequestFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLaunchFriendRequestFlowResult::GetLaunchFriendRequestFlowResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLaunchFriendRequestFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchFriendRequestFlowResult*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithLaunchFriendRequestFlowResult::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LaunchFriendRequestFlowResult* (MessageWithLaunchFriendRequestFlowResult::*)(System::IntPtr)>(&MessageWithLaunchFriendRequestFlowResult::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLaunchFriendRequestFlowResult*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLaunchFriendRequestFlowResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLaunchFriendRequestFlowResult::*)(System::IntPtr)>(&MessageWithLaunchFriendRequestFlowResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLaunchFriendRequestFlowResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLaunchFriendRequestFlowResult::*)(System::IntPtr)>(&MessageWithLaunchFriendRequestFlowResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLaunchFriendRequestFlowResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLaunchFriendRequestFlowResult::GetLaunchFriendRequestFlowResult
// Il2CppName: GetLaunchFriendRequestFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LaunchFriendRequestFlowResult* (MessageWithLaunchFriendRequestFlowResult::*)()>(&MessageWithLaunchFriendRequestFlowResult::GetLaunchFriendRequestFlowResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLaunchFriendRequestFlowResult*), "GetLaunchFriendRequestFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchInvitePanelFlowResult
#include "Oculus/Platform/MessageWithLaunchInvitePanelFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchInvitePanelFlowResult
#include "Oculus/Platform/Models/LaunchInvitePanelFlowResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchInvitePanelFlowResult.GetDataFromMessage
Oculus::Platform::Models::LaunchInvitePanelFlowResult* Oculus::Platform::MessageWithLaunchInvitePanelFlowResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLaunchInvitePanelFlowResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchInvitePanelFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchInvitePanelFlowResult.GetLaunchInvitePanelFlowResult
Oculus::Platform::Models::LaunchInvitePanelFlowResult* Oculus::Platform::MessageWithLaunchInvitePanelFlowResult::GetLaunchInvitePanelFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLaunchInvitePanelFlowResult::GetLaunchInvitePanelFlowResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLaunchInvitePanelFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchInvitePanelFlowResult*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithLaunchInvitePanelFlowResult::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LaunchInvitePanelFlowResult* (MessageWithLaunchInvitePanelFlowResult::*)(System::IntPtr)>(&MessageWithLaunchInvitePanelFlowResult::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLaunchInvitePanelFlowResult*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLaunchInvitePanelFlowResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLaunchInvitePanelFlowResult::*)(System::IntPtr)>(&MessageWithLaunchInvitePanelFlowResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLaunchInvitePanelFlowResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLaunchInvitePanelFlowResult::*)(System::IntPtr)>(&MessageWithLaunchInvitePanelFlowResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLaunchInvitePanelFlowResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLaunchInvitePanelFlowResult::GetLaunchInvitePanelFlowResult
// Il2CppName: GetLaunchInvitePanelFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LaunchInvitePanelFlowResult* (MessageWithLaunchInvitePanelFlowResult::*)()>(&MessageWithLaunchInvitePanelFlowResult::GetLaunchInvitePanelFlowResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLaunchInvitePanelFlowResult*), "GetLaunchInvitePanelFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchReportFlowResult
#include "Oculus/Platform/MessageWithLaunchReportFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchReportFlowResult
#include "Oculus/Platform/Models/LaunchReportFlowResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchReportFlowResult.GetDataFromMessage
Oculus::Platform::Models::LaunchReportFlowResult* Oculus::Platform::MessageWithLaunchReportFlowResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLaunchReportFlowResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchReportFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchReportFlowResult.GetLaunchReportFlowResult
Oculus::Platform::Models::LaunchReportFlowResult* Oculus::Platform::MessageWithLaunchReportFlowResult::GetLaunchReportFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLaunchReportFlowResult::GetLaunchReportFlowResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLaunchReportFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchReportFlowResult*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithLaunchReportFlowResult::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LaunchReportFlowResult* (MessageWithLaunchReportFlowResult::*)(System::IntPtr)>(&MessageWithLaunchReportFlowResult::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLaunchReportFlowResult*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLaunchReportFlowResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLaunchReportFlowResult::*)(System::IntPtr)>(&MessageWithLaunchReportFlowResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLaunchReportFlowResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLaunchReportFlowResult::*)(System::IntPtr)>(&MessageWithLaunchReportFlowResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLaunchReportFlowResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLaunchReportFlowResult::GetLaunchReportFlowResult
// Il2CppName: GetLaunchReportFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LaunchReportFlowResult* (MessageWithLaunchReportFlowResult::*)()>(&MessageWithLaunchReportFlowResult::GetLaunchReportFlowResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLaunchReportFlowResult*), "GetLaunchReportFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLaunchUnblockFlowResult
#include "Oculus/Platform/MessageWithLaunchUnblockFlowResult.hpp"
// Including type: Oculus.Platform.Models.LaunchUnblockFlowResult
#include "Oculus/Platform/Models/LaunchUnblockFlowResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLaunchUnblockFlowResult.GetDataFromMessage
Oculus::Platform::Models::LaunchUnblockFlowResult* Oculus::Platform::MessageWithLaunchUnblockFlowResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLaunchUnblockFlowResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchUnblockFlowResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLaunchUnblockFlowResult.GetLaunchUnblockFlowResult
Oculus::Platform::Models::LaunchUnblockFlowResult* Oculus::Platform::MessageWithLaunchUnblockFlowResult::GetLaunchUnblockFlowResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLaunchUnblockFlowResult::GetLaunchUnblockFlowResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLaunchUnblockFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LaunchUnblockFlowResult*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithLaunchUnblockFlowResult::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LaunchUnblockFlowResult* (MessageWithLaunchUnblockFlowResult::*)(System::IntPtr)>(&MessageWithLaunchUnblockFlowResult::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLaunchUnblockFlowResult*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLaunchUnblockFlowResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLaunchUnblockFlowResult::*)(System::IntPtr)>(&MessageWithLaunchUnblockFlowResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLaunchUnblockFlowResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLaunchUnblockFlowResult::*)(System::IntPtr)>(&MessageWithLaunchUnblockFlowResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLaunchUnblockFlowResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLaunchUnblockFlowResult::GetLaunchUnblockFlowResult
// Il2CppName: GetLaunchUnblockFlowResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LaunchUnblockFlowResult* (MessageWithLaunchUnblockFlowResult::*)()>(&MessageWithLaunchUnblockFlowResult::GetLaunchUnblockFlowResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLaunchUnblockFlowResult*), "GetLaunchUnblockFlowResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLeaderboardList
#include "Oculus/Platform/MessageWithLeaderboardList.hpp"
// Including type: Oculus.Platform.Models.LeaderboardList
#include "Oculus/Platform/Models/LeaderboardList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardList.GetDataFromMessage
Oculus::Platform::Models::LeaderboardList* Oculus::Platform::MessageWithLeaderboardList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLeaderboardList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LeaderboardList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardList.GetLeaderboardList
Oculus::Platform::Models::LeaderboardList* Oculus::Platform::MessageWithLeaderboardList::GetLeaderboardList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLeaderboardList::GetLeaderboardList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LeaderboardList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithLeaderboardList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LeaderboardList* (MessageWithLeaderboardList::*)(System::IntPtr)>(&MessageWithLeaderboardList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLeaderboardList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLeaderboardList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLeaderboardList::*)(System::IntPtr)>(&MessageWithLeaderboardList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLeaderboardList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLeaderboardList::*)(System::IntPtr)>(&MessageWithLeaderboardList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLeaderboardList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLeaderboardList::GetLeaderboardList
// Il2CppName: GetLeaderboardList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LeaderboardList* (MessageWithLeaderboardList::*)()>(&MessageWithLeaderboardList::GetLeaderboardList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLeaderboardList*), "GetLeaderboardList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLeaderboardEntryList
#include "Oculus/Platform/MessageWithLeaderboardEntryList.hpp"
// Including type: Oculus.Platform.Models.LeaderboardEntryList
#include "Oculus/Platform/Models/LeaderboardEntryList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardEntryList.GetDataFromMessage
Oculus::Platform::Models::LeaderboardEntryList* Oculus::Platform::MessageWithLeaderboardEntryList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLeaderboardEntryList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LeaderboardEntryList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLeaderboardEntryList.GetLeaderboardEntryList
Oculus::Platform::Models::LeaderboardEntryList* Oculus::Platform::MessageWithLeaderboardEntryList::GetLeaderboardEntryList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLeaderboardEntryList::GetLeaderboardEntryList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardEntryList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LeaderboardEntryList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithLeaderboardEntryList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LeaderboardEntryList* (MessageWithLeaderboardEntryList::*)(System::IntPtr)>(&MessageWithLeaderboardEntryList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLeaderboardEntryList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLeaderboardEntryList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLeaderboardEntryList::*)(System::IntPtr)>(&MessageWithLeaderboardEntryList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLeaderboardEntryList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLeaderboardEntryList::*)(System::IntPtr)>(&MessageWithLeaderboardEntryList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLeaderboardEntryList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLeaderboardEntryList::GetLeaderboardEntryList
// Il2CppName: GetLeaderboardEntryList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LeaderboardEntryList* (MessageWithLeaderboardEntryList::*)()>(&MessageWithLeaderboardEntryList::GetLeaderboardEntryList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLeaderboardEntryList*), "GetLeaderboardEntryList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLinkedAccountList
#include "Oculus/Platform/MessageWithLinkedAccountList.hpp"
// Including type: Oculus.Platform.Models.LinkedAccountList
#include "Oculus/Platform/Models/LinkedAccountList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLinkedAccountList.GetDataFromMessage
Oculus::Platform::Models::LinkedAccountList* Oculus::Platform::MessageWithLinkedAccountList::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLinkedAccountList::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LinkedAccountList*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLinkedAccountList.GetLinkedAccountList
Oculus::Platform::Models::LinkedAccountList* Oculus::Platform::MessageWithLinkedAccountList::GetLinkedAccountList() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLinkedAccountList::GetLinkedAccountList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLinkedAccountList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LinkedAccountList*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithLinkedAccountList::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LinkedAccountList* (MessageWithLinkedAccountList::*)(System::IntPtr)>(&MessageWithLinkedAccountList::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLinkedAccountList*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLinkedAccountList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLinkedAccountList::*)(System::IntPtr)>(&MessageWithLinkedAccountList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLinkedAccountList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLinkedAccountList::*)(System::IntPtr)>(&MessageWithLinkedAccountList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLinkedAccountList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLinkedAccountList::GetLinkedAccountList
// Il2CppName: GetLinkedAccountList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LinkedAccountList* (MessageWithLinkedAccountList::*)()>(&MessageWithLinkedAccountList::GetLinkedAccountList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLinkedAccountList*), "GetLinkedAccountList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLivestreamingApplicationStatus
#include "Oculus/Platform/MessageWithLivestreamingApplicationStatus.hpp"
// Including type: Oculus.Platform.Models.LivestreamingApplicationStatus
#include "Oculus/Platform/Models/LivestreamingApplicationStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingApplicationStatus.GetDataFromMessage
Oculus::Platform::Models::LivestreamingApplicationStatus* Oculus::Platform::MessageWithLivestreamingApplicationStatus::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLivestreamingApplicationStatus::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingApplicationStatus*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingApplicationStatus.GetLivestreamingApplicationStatus
Oculus::Platform::Models::LivestreamingApplicationStatus* Oculus::Platform::MessageWithLivestreamingApplicationStatus::GetLivestreamingApplicationStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLivestreamingApplicationStatus::GetLivestreamingApplicationStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLivestreamingApplicationStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingApplicationStatus*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithLivestreamingApplicationStatus::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LivestreamingApplicationStatus* (MessageWithLivestreamingApplicationStatus::*)(System::IntPtr)>(&MessageWithLivestreamingApplicationStatus::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLivestreamingApplicationStatus*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLivestreamingApplicationStatus::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLivestreamingApplicationStatus::*)(System::IntPtr)>(&MessageWithLivestreamingApplicationStatus::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLivestreamingApplicationStatus*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLivestreamingApplicationStatus::*)(System::IntPtr)>(&MessageWithLivestreamingApplicationStatus::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLivestreamingApplicationStatus*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLivestreamingApplicationStatus::GetLivestreamingApplicationStatus
// Il2CppName: GetLivestreamingApplicationStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LivestreamingApplicationStatus* (MessageWithLivestreamingApplicationStatus::*)()>(&MessageWithLivestreamingApplicationStatus::GetLivestreamingApplicationStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLivestreamingApplicationStatus*), "GetLivestreamingApplicationStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLivestreamingStartResult
#include "Oculus/Platform/MessageWithLivestreamingStartResult.hpp"
// Including type: Oculus.Platform.Models.LivestreamingStartResult
#include "Oculus/Platform/Models/LivestreamingStartResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingStartResult.GetDataFromMessage
Oculus::Platform::Models::LivestreamingStartResult* Oculus::Platform::MessageWithLivestreamingStartResult::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLivestreamingStartResult::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingStartResult*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingStartResult.GetLivestreamingStartResult
Oculus::Platform::Models::LivestreamingStartResult* Oculus::Platform::MessageWithLivestreamingStartResult::GetLivestreamingStartResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLivestreamingStartResult::GetLivestreamingStartResult");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLivestreamingStartResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingStartResult*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithLivestreamingStartResult::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LivestreamingStartResult* (MessageWithLivestreamingStartResult::*)(System::IntPtr)>(&MessageWithLivestreamingStartResult::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLivestreamingStartResult*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLivestreamingStartResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLivestreamingStartResult::*)(System::IntPtr)>(&MessageWithLivestreamingStartResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLivestreamingStartResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLivestreamingStartResult::*)(System::IntPtr)>(&MessageWithLivestreamingStartResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLivestreamingStartResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLivestreamingStartResult::GetLivestreamingStartResult
// Il2CppName: GetLivestreamingStartResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LivestreamingStartResult* (MessageWithLivestreamingStartResult::*)()>(&MessageWithLivestreamingStartResult::GetLivestreamingStartResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLivestreamingStartResult*), "GetLivestreamingStartResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.MessageWithLivestreamingStatus
#include "Oculus/Platform/MessageWithLivestreamingStatus.hpp"
// Including type: Oculus.Platform.Models.LivestreamingStatus
#include "Oculus/Platform/Models/LivestreamingStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingStatus.GetDataFromMessage
Oculus::Platform::Models::LivestreamingStatus* Oculus::Platform::MessageWithLivestreamingStatus::GetDataFromMessage(System::IntPtr c_message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLivestreamingStatus::GetDataFromMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c_message)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingStatus*, false>(this, ___internal__method, c_message);
}
// Autogenerated method: Oculus.Platform.MessageWithLivestreamingStatus.GetLivestreamingStatus
Oculus::Platform::Models::LivestreamingStatus* Oculus::Platform::MessageWithLivestreamingStatus::GetLivestreamingStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Oculus::Platform::MessageWithLivestreamingStatus::GetLivestreamingStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLivestreamingStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::LivestreamingStatus*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MessageWithLivestreamingStatus::GetDataFromMessage
// Il2CppName: GetDataFromMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LivestreamingStatus* (MessageWithLivestreamingStatus::*)(System::IntPtr)>(&MessageWithLivestreamingStatus::GetDataFromMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLivestreamingStatus*), "GetDataFromMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLivestreamingStatus::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLivestreamingStatus::*)(System::IntPtr)>(&MessageWithLivestreamingStatus::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLivestreamingStatus*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageWithLivestreamingStatus::*)(System::IntPtr)>(&MessageWithLivestreamingStatus::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLivestreamingStatus*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MessageWithLivestreamingStatus::GetLivestreamingStatus
// Il2CppName: GetLivestreamingStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Oculus::Platform::Models::LivestreamingStatus* (MessageWithLivestreamingStatus::*)()>(&MessageWithLivestreamingStatus::GetLivestreamingStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageWithLivestreamingStatus*), "GetLivestreamingStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
