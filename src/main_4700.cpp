// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderSaveData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderSaveData_PositionAndRotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single posX
float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_posX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_posX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single posY
float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_posY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_posY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single posZ
float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_posZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_posZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotX
float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotY
float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotZ
float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotW
float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotW");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotW"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderSaveData/Keyframe
#include "GlobalNamespace/VRControllersRecorderSaveData_Keyframe.hpp"
// Including type: VRControllersRecorderSaveData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderSaveData_PositionAndRotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRControllersRecorderSaveData/PositionAndRotation[] positionsAndRotations
::ArrayW<::GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation*>& GlobalNamespace::VRControllersRecorderSaveData::Keyframe::dyn_positionsAndRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::Keyframe::dyn_positionsAndRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionsAndRotations"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single time
float& GlobalNamespace::VRControllersRecorderSaveData::Keyframe::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::Keyframe::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderSaveData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderSaveData_NodeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.XRNode nodeType
::UnityEngine::XR::XRNode& GlobalNamespace::VRControllersRecorderSaveData::NodeInfo::dyn_nodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::NodeInfo::dyn_nodeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 nodeIdx
int& GlobalNamespace::VRControllersRecorderSaveData::NodeInfo::dyn_nodeIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::NodeInfo::dyn_nodeIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder
#include "GlobalNamespace/VRTrackersRecorder.hpp"
// Including type: VRTrackersRecorder/SavedData
#include "GlobalNamespace/VRTrackersRecorder_SavedData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VRTrackersRecorder/Keyframe
#include "GlobalNamespace/VRTrackersRecorder_Keyframe.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SteamVR_Events/Action
#include "GlobalNamespace/SteamVR_Events_Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FloatSO _songTime
::GlobalNamespace::FloatSO*& GlobalNamespace::VRTrackersRecorder::dyn__songTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::dyn__songTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTime"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _saveFilename
::StringW& GlobalNamespace::VRTrackersRecorder::dyn__saveFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::dyn__saveFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saveFilename"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRTrackersRecorder/RecordMode _mode
::GlobalNamespace::VRTrackersRecorder::RecordMode& GlobalNamespace::VRTrackersRecorder::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRTrackersRecorder::RecordMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _originTransform
::UnityEngine::Transform*& GlobalNamespace::VRTrackersRecorder::dyn__originTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::dyn__originTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] _playbackTransforms
::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::VRTrackersRecorder::dyn__playbackTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::dyn__playbackTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackTransforms"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VRTrackersRecorder/Keyframe> _keyframes
::System::Collections::Generic::List_1<::GlobalNamespace::VRTrackersRecorder::Keyframe*>*& GlobalNamespace::VRTrackersRecorder::dyn__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::dyn__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::VRTrackersRecorder::Keyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _keyframeIndex
int& GlobalNamespace::VRTrackersRecorder::dyn__keyframeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::dyn__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SteamVR_Events/Action _newPosesAction
::GlobalNamespace::SteamVR_Events::Action*& GlobalNamespace::VRTrackersRecorder::dyn__newPosesAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::dyn__newPosesAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_newPosesAction"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SteamVR_Events::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _loadedOriginPos
::UnityEngine::Vector3& GlobalNamespace::VRTrackersRecorder::dyn__loadedOriginPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::dyn__loadedOriginPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadedOriginPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _loadedOriginRot
::UnityEngine::Quaternion& GlobalNamespace::VRTrackersRecorder::dyn__loadedOriginRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::dyn__loadedOriginRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadedOriginRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRTrackersRecorder.Awake
void GlobalNamespace::VRTrackersRecorder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnDestroy
void GlobalNamespace::VRTrackersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnEnable
void GlobalNamespace::VRTrackersRecorder::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnDisable
void GlobalNamespace::VRTrackersRecorder::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnNewPoses
void GlobalNamespace::VRTrackersRecorder::OnNewPoses(::ArrayW<::Valve::VR::TrackedDevicePose_t> poses) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::OnNewPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNewPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poses)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poses);
}
// Autogenerated method: VRTrackersRecorder.Update
void GlobalNamespace::VRTrackersRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.Save
void GlobalNamespace::VRTrackersRecorder::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.Load
void GlobalNamespace::VRTrackersRecorder::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/SavedData
#include "GlobalNamespace/VRTrackersRecorder_SavedData.hpp"
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRTrackersRecorder/SavedData/KeyframeSerializable[] _keyframes
::ArrayW<::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable*>& GlobalNamespace::VRTrackersRecorder::SavedData::dyn__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::dyn__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable.hpp"
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable/TransformSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable_TransformSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRTrackersRecorder/SavedData/KeyframeSerializable/TransformSerializable[] _transforms
::ArrayW<::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable*>& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::dyn__transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::dyn__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _time
float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable/TransformSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable_TransformSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single _xPos
float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__xPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__xPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yPos
float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__yPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__yPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zPos
float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__zPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__zPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _xRot
float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__xRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__xRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xRot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yRot
float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__yRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__yRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yRot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zRot
float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__zRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__zRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zRot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _wRot
float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__wRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__wRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wRot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _valid
bool& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__valid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/RecordMode
#include "GlobalNamespace/VRTrackersRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VRTrackersRecorder/RecordMode Record
::GlobalNamespace::VRTrackersRecorder::RecordMode GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::VRTrackersRecorder::RecordMode>("", "VRTrackersRecorder/RecordMode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public VRTrackersRecorder/RecordMode Record
void GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Record(::GlobalNamespace::VRTrackersRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRTrackersRecorder/RecordMode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public VRTrackersRecorder/RecordMode Playback
::GlobalNamespace::VRTrackersRecorder::RecordMode GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::VRTrackersRecorder::RecordMode>("", "VRTrackersRecorder/RecordMode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public VRTrackersRecorder/RecordMode Playback
void GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Playback(::GlobalNamespace::VRTrackersRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRTrackersRecorder/RecordMode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public VRTrackersRecorder/RecordMode Off
::GlobalNamespace::VRTrackersRecorder::RecordMode GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::VRTrackersRecorder::RecordMode>("", "VRTrackersRecorder/RecordMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public VRTrackersRecorder/RecordMode Off
void GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Off(::GlobalNamespace::VRTrackersRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRTrackersRecorder/RecordMode", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::VRTrackersRecorder::RecordMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::RecordMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/Keyframe
#include "GlobalNamespace/VRTrackersRecorder_Keyframe.hpp"
// Including type: VRTrackersRecorder/Keyframe/KeyframeTransform
#include "GlobalNamespace/VRTrackersRecorder_Keyframe_KeyframeTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRTrackersRecorder/Keyframe/KeyframeTransform[] _transforms
::ArrayW<::GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform*>& GlobalNamespace::VRTrackersRecorder::Keyframe::dyn__transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::Keyframe::dyn__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _time
float& GlobalNamespace::VRTrackersRecorder::Keyframe::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::Keyframe::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/Keyframe/KeyframeTransform
#include "GlobalNamespace/VRTrackersRecorder_Keyframe_KeyframeTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _pos
::UnityEngine::Vector3& GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::dyn__pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::dyn__pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion _rot
::UnityEngine::Quaternion& GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::dyn__rot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::dyn__rot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _valid
bool& GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::dyn__valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::dyn__valid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResizableTextMeshPro
#include "GlobalNamespace/ResizableTextMeshPro.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Text _textMeshPro
::TMPro::TMP_Text*& GlobalNamespace::ResizableTextMeshPro::dyn__textMeshPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResizableTextMeshPro::dyn__textMeshPro");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textMeshPro"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rectTransform
::UnityEngine::RectTransform*& GlobalNamespace::ResizableTextMeshPro::dyn__rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResizableTextMeshPro::dyn__rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _textExtraSpace
float& GlobalNamespace::ResizableTextMeshPro::dyn__textExtraSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResizableTextMeshPro::dyn__textExtraSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textExtraSpace"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResizableTextMeshPro.Start
void GlobalNamespace::ResizableTextMeshPro::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResizableTextMeshPro::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResizableTextMeshPro.Update
void GlobalNamespace::ResizableTextMeshPro::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResizableTextMeshPro::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResizableTextMeshPro.OnDestroy
void GlobalNamespace::ResizableTextMeshPro::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResizableTextMeshPro::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResizableTextMeshPro.HandleTextDidChange
void GlobalNamespace::ResizableTextMeshPro::HandleTextDidChange(::UnityEngine::Object* textMeshPro) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResizableTextMeshPro::HandleTextDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTextDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textMeshPro)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, textMeshPro);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BezierPath
#include "GlobalNamespace/BezierPath.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kAutoControlLength
float GlobalNamespace::BezierPath::_get_kAutoControlLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::_get_kAutoControlLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BezierPath", "kAutoControlLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kAutoControlLength
void GlobalNamespace::BezierPath::_set_kAutoControlLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::_set_kAutoControlLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BezierPath", "kAutoControlLength", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action bezierPathWasModifiedEvent
::System::Action*& GlobalNamespace::BezierPath::dyn_bezierPathWasModifiedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::dyn_bezierPathWasModifiedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bezierPathWasModifiedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> _points
::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::BezierPath::dyn__points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::dyn__points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_points"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BezierPath/ControlMode _controlMode
::GlobalNamespace::BezierPath::ControlMode& GlobalNamespace::BezierPath::dyn__controlMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::dyn__controlMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controlMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BezierPath::ControlMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Single> _perAnchorNormalsAngle
::System::Collections::Generic::List_1<float>*& GlobalNamespace::BezierPath::dyn__perAnchorNormalsAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::dyn__perAnchorNormalsAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_perAnchorNormalsAngle"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _neighbourDistances
::ArrayW<float>& GlobalNamespace::BezierPath::dyn__neighbourDistances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::dyn__neighbourDistances");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_neighbourDistances"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BezierPath.get_controlPointMode
::GlobalNamespace::BezierPath::ControlMode GlobalNamespace::BezierPath::get_controlPointMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::get_controlPointMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controlPointMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BezierPath::ControlMode, false>(this, ___internal__method);
}
// Autogenerated method: BezierPath.set_controlPointMode
void GlobalNamespace::BezierPath::set_controlPointMode(::GlobalNamespace::BezierPath::ControlMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::set_controlPointMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controlPointMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BezierPath.get_pointsCount
int GlobalNamespace::BezierPath::get_pointsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::get_pointsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pointsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BezierPath.get_anchorPointsCount
int GlobalNamespace::BezierPath::get_anchorPointsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::get_anchorPointsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorPointsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BezierPath.get_segmentsCount
int GlobalNamespace::BezierPath::get_segmentsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::get_segmentsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_segmentsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BezierPath.get_Item
::UnityEngine::Vector3 GlobalNamespace::BezierPath::get_Item(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, i);
}
// Autogenerated method: BezierPath.add_bezierPathWasModifiedEvent
void GlobalNamespace::BezierPath::add_bezierPathWasModifiedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::add_bezierPathWasModifiedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_bezierPathWasModifiedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BezierPath.remove_bezierPathWasModifiedEvent
void GlobalNamespace::BezierPath::remove_bezierPathWasModifiedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::remove_bezierPathWasModifiedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_bezierPathWasModifiedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BezierPath.UpdateByAnchorPoints
void GlobalNamespace::BezierPath::UpdateByAnchorPoints(::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector3>* points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::UpdateByAnchorPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateByAnchorPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, points);
}
// Autogenerated method: BezierPath.UpdateControlPoints
void GlobalNamespace::BezierPath::UpdateControlPoints(::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector3>* points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::UpdateControlPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateControlPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, points);
}
// Autogenerated method: BezierPath.GetPoint
::UnityEngine::Vector3 GlobalNamespace::BezierPath::GetPoint(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::GetPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, i);
}
// Autogenerated method: BezierPath.SetPoint
void GlobalNamespace::BezierPath::SetPoint(int i, ::UnityEngine::Vector3 localPosition, bool suppressPathModified) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::SetPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(localPosition), ::il2cpp_utils::ExtractType(suppressPathModified)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, localPosition, suppressPathModified);
}
// Autogenerated method: BezierPath.AddSegmentToEnd
void GlobalNamespace::BezierPath::AddSegmentToEnd(::UnityEngine::Vector3 anchorPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::AddSegmentToEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSegmentToEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchorPos);
}
// Autogenerated method: BezierPath.GetPointsInSegment
void GlobalNamespace::BezierPath::GetPointsInSegment(int segmentIndex, ByRef<::ArrayW<::UnityEngine::Vector3>> points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::GetPointsInSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPointsInSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentIndex), ::il2cpp_utils::ExtractType(points)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, segmentIndex, byref(points));
}
// Autogenerated method: BezierPath.GetAnchorNormalAngle
float GlobalNamespace::BezierPath::GetAnchorNormalAngle(int anchorIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::GetAnchorNormalAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAnchorNormalAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, anchorIndex);
}
// Autogenerated method: BezierPath.SetAnchorNormalAngle
void GlobalNamespace::BezierPath::SetAnchorNormalAngle(int anchorIndex, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::SetAnchorNormalAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAnchorNormalAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorIndex), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchorIndex, angle);
}
// Autogenerated method: BezierPath.AutoSetAllAffectedControlPoints
void GlobalNamespace::BezierPath::AutoSetAllAffectedControlPoints(int updatedAnchorIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::AutoSetAllAffectedControlPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoSetAllAffectedControlPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updatedAnchorIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatedAnchorIndex);
}
// Autogenerated method: BezierPath.AutoSetAllControlPoints
void GlobalNamespace::BezierPath::AutoSetAllControlPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::AutoSetAllControlPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoSetAllControlPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BezierPath.AutoSetAnchorControlPoints
void GlobalNamespace::BezierPath::AutoSetAnchorControlPoints(int anchorIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::AutoSetAnchorControlPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoSetAnchorControlPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchorIndex);
}
// Autogenerated method: BezierPath.AutoSetStartAndEndControls
void GlobalNamespace::BezierPath::AutoSetStartAndEndControls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::AutoSetStartAndEndControls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoSetStartAndEndControls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BezierPath.LoopIndex
int GlobalNamespace::BezierPath::LoopIndex(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::LoopIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoopIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i);
}
// Autogenerated method: BezierPath.NotifyPathModified
void GlobalNamespace::BezierPath::NotifyPathModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::NotifyPathModified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyPathModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BezierPath/ControlMode
#include "GlobalNamespace/BezierPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BezierPath/ControlMode Aligned
::GlobalNamespace::BezierPath::ControlMode GlobalNamespace::BezierPath::ControlMode::_get_Aligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::ControlMode::_get_Aligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BezierPath::ControlMode>("", "BezierPath/ControlMode", "Aligned"));
}
// Autogenerated static field setter
// Set static field: static public BezierPath/ControlMode Aligned
void GlobalNamespace::BezierPath::ControlMode::_set_Aligned(::GlobalNamespace::BezierPath::ControlMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::ControlMode::_set_Aligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BezierPath/ControlMode", "Aligned", value));
}
// Autogenerated static field getter
// Get static field: static public BezierPath/ControlMode Mirrored
::GlobalNamespace::BezierPath::ControlMode GlobalNamespace::BezierPath::ControlMode::_get_Mirrored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::ControlMode::_get_Mirrored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BezierPath::ControlMode>("", "BezierPath/ControlMode", "Mirrored"));
}
// Autogenerated static field setter
// Set static field: static public BezierPath/ControlMode Mirrored
void GlobalNamespace::BezierPath::ControlMode::_set_Mirrored(::GlobalNamespace::BezierPath::ControlMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::ControlMode::_set_Mirrored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BezierPath/ControlMode", "Mirrored", value));
}
// Autogenerated static field getter
// Get static field: static public BezierPath/ControlMode Free
::GlobalNamespace::BezierPath::ControlMode GlobalNamespace::BezierPath::ControlMode::_get_Free() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::ControlMode::_get_Free");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BezierPath::ControlMode>("", "BezierPath/ControlMode", "Free"));
}
// Autogenerated static field setter
// Set static field: static public BezierPath/ControlMode Free
void GlobalNamespace::BezierPath::ControlMode::_set_Free(::GlobalNamespace::BezierPath::ControlMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::ControlMode::_set_Free");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BezierPath/ControlMode", "Free", value));
}
// Autogenerated static field getter
// Get static field: static public BezierPath/ControlMode Automatic
::GlobalNamespace::BezierPath::ControlMode GlobalNamespace::BezierPath::ControlMode::_get_Automatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::ControlMode::_get_Automatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BezierPath::ControlMode>("", "BezierPath/ControlMode", "Automatic"));
}
// Autogenerated static field setter
// Set static field: static public BezierPath/ControlMode Automatic
void GlobalNamespace::BezierPath::ControlMode::_set_Automatic(::GlobalNamespace::BezierPath::ControlMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::ControlMode::_set_Automatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BezierPath/ControlMode", "Automatic", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::BezierPath::ControlMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::ControlMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PathsHolder
#include "GlobalNamespace/PathsHolder.hpp"
// Including type: BezierPath
#include "GlobalNamespace/BezierPath.hpp"
// Including type: VertexPath
#include "GlobalNamespace/VertexPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly BezierPath _bezierPath
::GlobalNamespace::BezierPath*& GlobalNamespace::PathsHolder::dyn__bezierPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PathsHolder::dyn__bezierPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bezierPath"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BezierPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VertexPath _vertexPath
::GlobalNamespace::VertexPath*& GlobalNamespace::PathsHolder::dyn__vertexPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PathsHolder::dyn__vertexPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vertexPath"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VertexPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PathsHolder.get_bezierPath
::GlobalNamespace::BezierPath* GlobalNamespace::PathsHolder::get_bezierPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PathsHolder::get_bezierPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bezierPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BezierPath*, false>(this, ___internal__method);
}
// Autogenerated method: PathsHolder.get_vertexPath
::GlobalNamespace::VertexPath* GlobalNamespace::PathsHolder::get_vertexPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PathsHolder::get_vertexPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vertexPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::VertexPath*, false>(this, ___internal__method);
}
// Autogenerated method: PathsHolder.UpdateVertexPathByBezierPath
void GlobalNamespace::PathsHolder::UpdateVertexPathByBezierPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PathsHolder::UpdateVertexPathByBezierPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVertexPathByBezierPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VertexPath
#include "GlobalNamespace/VertexPath.hpp"
// Including type: BezierPath
#include "GlobalNamespace/BezierPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10C52F0
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 _back
::UnityEngine::Vector3 GlobalNamespace::VertexPath::_get__back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::_get__back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "VertexPath", "_back"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 _back
void GlobalNamespace::VertexPath::_set__back(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::_set__back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VertexPath", "_back", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] localPoints
::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::VertexPath::dyn_localPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::dyn_localPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] localTangents
::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::VertexPath::dyn_localTangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::dyn_localTangents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localTangents"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] localNormals
::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::VertexPath::dyn_localNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::dyn_localNormals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localNormals"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _length
float& GlobalNamespace::VertexPath::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single[] _cumulativeLengthAtEachVertex
::ArrayW<float>& GlobalNamespace::VertexPath::dyn__cumulativeLengthAtEachVertex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::dyn__cumulativeLengthAtEachVertex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cumulativeLengthAtEachVertex"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32[] _anchorVertexMap
::ArrayW<int>& GlobalNamespace::VertexPath::dyn__anchorVertexMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::dyn__anchorVertexMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anchorVertexMap"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _segmentPoints
::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::VertexPath::dyn__segmentPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::dyn__segmentPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_segmentPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VertexPath.get_length
float GlobalNamespace::VertexPath::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VertexPath.get_numPoints
int GlobalNamespace::VertexPath::get_numPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::get_numPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VertexPath..cctor
void GlobalNamespace::VertexPath::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VertexPath", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VertexPath.UpdateByBezierPath
void GlobalNamespace::VertexPath::UpdateByBezierPath(::GlobalNamespace::BezierPath* bezierPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::UpdateByBezierPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateByBezierPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bezierPath)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bezierPath);
}
// Autogenerated method: VertexPath.TimeAtPoint
float GlobalNamespace::VertexPath::TimeAtPoint(int pointIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::TimeAtPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TimeAtPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, pointIndex);
}
// Autogenerated method: VertexPath.GetTangent
::UnityEngine::Vector3 GlobalNamespace::VertexPath::GetTangent(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::GetTangent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTangent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, index);
}
// Autogenerated method: VertexPath.GetNormal
::UnityEngine::Vector3 GlobalNamespace::VertexPath::GetNormal(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::GetNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, index);
}
// Autogenerated method: VertexPath.GetPoint
::UnityEngine::Vector3 GlobalNamespace::VertexPath::GetPoint(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::GetPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, index);
}
// Autogenerated method: VertexPath.SplitBezierPathIntoFixNumberOfSegments
void GlobalNamespace::VertexPath::SplitBezierPathIntoFixNumberOfSegments(::GlobalNamespace::BezierPath* bezierPath, int numberOfVertexSegments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::SplitBezierPathIntoFixNumberOfSegments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SplitBezierPathIntoFixNumberOfSegments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bezierPath), ::il2cpp_utils::ExtractType(numberOfVertexSegments)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bezierPath, numberOfVertexSegments);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerTimelineMock
#include "GlobalNamespace/MultiplayerTimelineMock.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _connectedPlayerIntroAnimators
::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::MultiplayerTimelineMock::dyn__connectedPlayerIntroAnimators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__connectedPlayerIntroAnimators");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerIntroAnimators"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _connectedPlayerScoreRingItems
::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::MultiplayerTimelineMock::dyn__connectedPlayerScoreRingItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__connectedPlayerScoreRingItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerScoreRingItems"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _connectedPlayerOutroAnimators
::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::MultiplayerTimelineMock::dyn__connectedPlayerOutroAnimators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__connectedPlayerOutroAnimators");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerOutroAnimators"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localPlayerIntroAnimator
::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__localPlayerIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__localPlayerIntroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerIntroAnimator"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localPlayerScoreRingItem
::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__localPlayerScoreRingItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__localPlayerScoreRingItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerScoreRingItem"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localPlayerOutroAnimator
::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__localPlayerOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__localPlayerOutroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerOutroAnimator"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _connectedDuelIntroAnimator
::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__connectedDuelIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__connectedDuelIntroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedDuelIntroAnimator"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _connectedDuelOutroAnimator
::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__connectedDuelOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__connectedDuelOutroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedDuelOutroAnimator"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localDuelIntroAnimator
::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__localDuelIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__localDuelIntroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localDuelIntroAnimator"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localDuelOutroAnimator
::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__localDuelOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__localDuelOutroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localDuelOutroAnimator"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _resultAvatars
::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::MultiplayerTimelineMock::dyn__resultAvatars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__resultAvatars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultAvatars"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _badgeTimelines
::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::MultiplayerTimelineMock::dyn__badgeTimelines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__badgeTimelines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_badgeTimelines"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _resultsMocks
::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__resultsMocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__resultsMocks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsMocks"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _ringsGroup
::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__ringsGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__ringsGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringsGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _playersGroup
::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__playersGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__playersGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _duelGroup
::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__duelGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__duelGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duelGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerTimelineMock.get_connectedPlayerIntroAnimators
::ArrayW<::UnityEngine::GameObject*> GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerIntroAnimators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerIntroAnimators");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerIntroAnimators", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::GameObject*>, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_connectedPlayerScoreRings
::ArrayW<::UnityEngine::GameObject*> GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerScoreRings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerScoreRings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerScoreRings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::GameObject*>, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_connectedPlayerOutroAnimators
::ArrayW<::UnityEngine::GameObject*> GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerOutroAnimators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerOutroAnimators");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerOutroAnimators", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::GameObject*>, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_localPlayerIntroAnimator
::UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_localPlayerIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_localPlayerIntroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerIntroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_localPlayerScoreRingItem
::UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_localPlayerScoreRingItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_localPlayerScoreRingItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerScoreRingItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_localPlayerOutroAnimator
::UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_localPlayerOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_localPlayerOutroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerOutroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_connectedDuelIntroAnimator
::UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_connectedDuelIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_connectedDuelIntroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedDuelIntroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_connectedDuelOutroAnimator
::UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_connectedDuelOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_connectedDuelOutroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedDuelOutroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_localDuelIntroAnimator
::UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_localDuelIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_localDuelIntroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localDuelIntroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_localDuelOutroAnimator
::UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_localDuelOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_localDuelOutroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localDuelOutroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_resultAvatars
::ArrayW<::UnityEngine::GameObject*> GlobalNamespace::MultiplayerTimelineMock::get_resultAvatars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_resultAvatars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultAvatars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::GameObject*>, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_badgeTimelines
::ArrayW<::UnityEngine::GameObject*> GlobalNamespace::MultiplayerTimelineMock::get_badgeTimelines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_badgeTimelines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_badgeTimelines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::GameObject*>, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_resultsMocks
::UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_resultsMocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_resultsMocks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultsMocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.HandleActivations
void GlobalNamespace::MultiplayerTimelineMock::HandleActivations(bool isDuel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::HandleActivations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleActivations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isDuel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isDuel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRCenterAdjust
#include "GlobalNamespace/VRCenterAdjust.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Vector3SO _roomCenter
::GlobalNamespace::Vector3SO*& GlobalNamespace::VRCenterAdjust::dyn__roomCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::dyn__roomCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomCenter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FloatSO _roomRotation
::GlobalNamespace::FloatSO*& GlobalNamespace::VRCenterAdjust::dyn__roomRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::dyn__roomRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomRotation"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
::GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::VRCenterAdjust::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRCenterAdjust.Awake
void GlobalNamespace::VRCenterAdjust::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.Start
void GlobalNamespace::VRCenterAdjust::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.OnEnable
void GlobalNamespace::VRCenterAdjust::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.OnDisable
void GlobalNamespace::VRCenterAdjust::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.HandleRoomCenterDidChange
void GlobalNamespace::VRCenterAdjust::HandleRoomCenterDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::HandleRoomCenterDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRoomCenterDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.HandleRoomRotationDidChange
void GlobalNamespace::VRCenterAdjust::HandleRoomRotationDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::HandleRoomRotationDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRoomRotationDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.Update
void GlobalNamespace::VRCenterAdjust::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.ResetRoom
void GlobalNamespace::VRCenterAdjust::ResetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::ResetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ArrayPositionTween
#include "GlobalNamespace/ArrayPositionTween.hpp"
// Including type: TimelineArrayReference
#include "GlobalNamespace/TimelineArrayReference.hpp"
// Including type: CustomTweenBehaviour
#include "GlobalNamespace/CustomTweenBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ExposedReference`1<TimelineArrayReference> arrayReference
::UnityEngine::ExposedReference_1<::GlobalNamespace::TimelineArrayReference*>& GlobalNamespace::ArrayPositionTween::dyn_arrayReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ArrayPositionTween::dyn_arrayReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayReference"))->offset;
  return *reinterpret_cast<::UnityEngine::ExposedReference_1<::GlobalNamespace::TimelineArrayReference*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single elementDelay
float& GlobalNamespace::ArrayPositionTween::dyn_elementDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ArrayPositionTween::dyn_elementDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CustomTweenBehaviour template
::GlobalNamespace::CustomTweenBehaviour*& GlobalNamespace::ArrayPositionTween::dyn_template() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ArrayPositionTween::dyn_template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "template"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CustomTweenBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ArrayPositionTween.get_clipCaps
::UnityEngine::Timeline::ClipCaps GlobalNamespace::ArrayPositionTween::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ArrayPositionTween::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: ArrayPositionTween.CreatePlayable
::UnityEngine::Playables::Playable GlobalNamespace::ArrayPositionTween::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ArrayPositionTween::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarColorAsset
#include "GlobalNamespace/AvatarColorAsset.hpp"
// Including type: AvatarColorBehaviour
#include "GlobalNamespace/AvatarColorBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AvatarColorBehaviour _template
::GlobalNamespace::AvatarColorBehaviour*& GlobalNamespace::AvatarColorAsset::dyn__template() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorAsset::dyn__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarColorBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarColorAsset.get_clipCaps
::UnityEngine::Timeline::ClipCaps GlobalNamespace::AvatarColorAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: AvatarColorAsset.CreatePlayable
::UnityEngine::Playables::Playable GlobalNamespace::AvatarColorAsset::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AvatarColorBehaviour
#include "GlobalNamespace/AvatarColorBehaviour.hpp"
// Including type: AvatarVisualController
#include "GlobalNamespace/AvatarVisualController.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color _startColor
::UnityEngine::Color& GlobalNamespace::AvatarColorBehaviour::dyn__startColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorBehaviour::dyn__startColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color _endColor
::UnityEngine::Color& GlobalNamespace::AvatarColorBehaviour::dyn__endColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorBehaviour::dyn__endColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EaseType _easeType
::GlobalNamespace::EaseType& GlobalNamespace::AvatarColorBehaviour::dyn__easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorBehaviour::dyn__easeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_easeType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarVisualController _avatarVisualController
::GlobalNamespace::AvatarVisualController*& GlobalNamespace::AvatarColorBehaviour::dyn__avatarVisualController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorBehaviour::dyn__avatarVisualController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarVisualController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarVisualController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _duration
float& GlobalNamespace::AvatarColorBehaviour::dyn__duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorBehaviour::dyn__duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarColorBehaviour.OnGraphStart
void GlobalNamespace::AvatarColorBehaviour::OnGraphStart(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: AvatarColorBehaviour.ProcessFrame
void GlobalNamespace::AvatarColorBehaviour::ProcessFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: AvatarColorBehaviour.OnPlayableDestroy
void GlobalNamespace::AvatarColorBehaviour::OnPlayableDestroy(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarColorTrack
#include "GlobalNamespace/AvatarColorTrack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomFogParamsAsset
#include "GlobalNamespace/BloomFogParamsAsset.hpp"
// Including type: BloomFogParamsBehaviour
#include "GlobalNamespace/BloomFogParamsBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BloomFogParamsBehaviour _template
::GlobalNamespace::BloomFogParamsBehaviour*& GlobalNamespace::BloomFogParamsAsset::dyn__template() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomFogParamsAsset::dyn__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomFogParamsBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomFogParamsAsset.get_clipCaps
::UnityEngine::Timeline::ClipCaps GlobalNamespace::BloomFogParamsAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomFogParamsAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: BloomFogParamsAsset.CreatePlayable
::UnityEngine::Playables::Playable GlobalNamespace::BloomFogParamsAsset::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomFogParamsAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BloomFogParamsBehaviour
#include "GlobalNamespace/BloomFogParamsBehaviour.hpp"
// Including type: BloomFogEnvironmentParams
#include "GlobalNamespace/BloomFogEnvironmentParams.hpp"
// Including type: BloomFogSO
#include "GlobalNamespace/BloomFogSO.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BloomFogEnvironmentParams _bloomFogParams
::GlobalNamespace::BloomFogEnvironmentParams*& GlobalNamespace::BloomFogParamsBehaviour::dyn__bloomFogParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomFogParamsBehaviour::dyn__bloomFogParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFogParams"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomFogEnvironmentParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _blend
float& GlobalNamespace::BloomFogParamsBehaviour::dyn__blend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomFogParamsBehaviour::dyn__blend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomFogSO _bloomFog
::GlobalNamespace::BloomFogSO*& GlobalNamespace::BloomFogParamsBehaviour::dyn__bloomFog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomFogParamsBehaviour::dyn__bloomFog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFog"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomFogSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::BloomFogParamsBehaviour::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomFogParamsBehaviour::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomFogParamsBehaviour.ProcessFrame
void GlobalNamespace::BloomFogParamsBehaviour::ProcessFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomFogParamsBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: BloomFogParamsBehaviour.OnPlayableDestroy
void GlobalNamespace::BloomFogParamsBehaviour::OnPlayableDestroy(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomFogParamsBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomControlPlayableAsset
#include "GlobalNamespace/CustomControlPlayableAsset.hpp"
// Including type: AvatarColorBehaviour
#include "GlobalNamespace/AvatarColorBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AvatarColorBehaviour _template
::GlobalNamespace::AvatarColorBehaviour*& GlobalNamespace::CustomControlPlayableAsset::dyn__template() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomControlPlayableAsset::dyn__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarColorBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomControlPlayableAsset.get_clipCaps
::UnityEngine::Timeline::ClipCaps GlobalNamespace::CustomControlPlayableAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomControlPlayableAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomControlTrack
#include "GlobalNamespace/CustomControlTrack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomTimelineTween
#include "GlobalNamespace/CustomTimelineTween.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] transforms
::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::CustomTimelineTween::dyn_transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTimelineTween::dyn_transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transforms"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3[] startPositions
::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::CustomTimelineTween::dyn_startPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTimelineTween::dyn_startPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomTimelineTween.OnValidate
void GlobalNamespace::CustomTimelineTween::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTimelineTween::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CustomTweenBehaviour
#include "GlobalNamespace/CustomTweenBehaviour.hpp"
// Including type: CustomTweenBehaviour/<>c
#include "GlobalNamespace/CustomTweenBehaviour_--c.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] _transforms
::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::CustomTweenBehaviour::dyn__transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean startLocationCurrentPosition
bool& GlobalNamespace::CustomTweenBehaviour::dyn_startLocationCurrentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn_startLocationCurrentPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startLocationCurrentPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startLocalPos
::UnityEngine::Vector3& GlobalNamespace::CustomTweenBehaviour::dyn_startLocalPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn_startLocalPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startLocalPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 endLocalPos
::UnityEngine::Vector3& GlobalNamespace::CustomTweenBehaviour::dyn_endLocalPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn_endLocalPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endLocalPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EaseType easeType
::GlobalNamespace::EaseType& GlobalNamespace::CustomTweenBehaviour::dyn_easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn_easeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "easeType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean endXRelativeToSelfRotation
bool& GlobalNamespace::CustomTweenBehaviour::dyn_endXRelativeToSelfRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn_endXRelativeToSelfRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endXRelativeToSelfRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single elementDelay
float& GlobalNamespace::CustomTweenBehaviour::dyn_elementDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn_elementDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _lockX
bool& GlobalNamespace::CustomTweenBehaviour::dyn__lockX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__lockX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockX"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _lockY
bool& GlobalNamespace::CustomTweenBehaviour::dyn__lockY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__lockY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockY"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _lockZ
bool& GlobalNamespace::CustomTweenBehaviour::dyn__lockZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__lockZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockZ"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _randomizeOrder
bool& GlobalNamespace::CustomTweenBehaviour::dyn__randomizeOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__randomizeOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizeOrder"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _randomizedMinDurationMultiplier
float& GlobalNamespace::CustomTweenBehaviour::dyn__randomizedMinDurationMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__randomizedMinDurationMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizedMinDurationMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _duration
float& GlobalNamespace::CustomTweenBehaviour::dyn__duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _perItemDuration
float& GlobalNamespace::CustomTweenBehaviour::dyn__perItemDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__perItemDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_perItemDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _originalLocalPos
::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::CustomTweenBehaviour::dyn__originalLocalPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__originalLocalPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalLocalPos"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::CustomTweenBehaviour::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] _randomizedOrder
::ArrayW<int>& GlobalNamespace::CustomTweenBehaviour::dyn__randomizedOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__randomizedOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizedOrder"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _randomizedDuration
::ArrayW<float>& GlobalNamespace::CustomTweenBehaviour::dyn__randomizedDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__randomizedDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizedDuration"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomTweenBehaviour.OnGraphStart
void GlobalNamespace::CustomTweenBehaviour::OnGraphStart(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: CustomTweenBehaviour.ProcessFrame
void GlobalNamespace::CustomTweenBehaviour::ProcessFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: CustomTweenBehaviour.OnPlayableDestroy
void GlobalNamespace::CustomTweenBehaviour::OnPlayableDestroy(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: CustomTweenBehaviour.OnBehaviourPlay
void GlobalNamespace::CustomTweenBehaviour::OnBehaviourPlay(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomTweenBehaviour/<>c
#include "GlobalNamespace/CustomTweenBehaviour_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly CustomTweenBehaviour/<>c <>9
::GlobalNamespace::CustomTweenBehaviour::$$c* GlobalNamespace::CustomTweenBehaviour::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::CustomTweenBehaviour::$$c*>("", "CustomTweenBehaviour/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly CustomTweenBehaviour/<>c <>9
void GlobalNamespace::CustomTweenBehaviour::$$c::_set_$$9(::GlobalNamespace::CustomTweenBehaviour::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "CustomTweenBehaviour/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Int32,System.Single> <>9__21_0
::System::Func_2<int, float>* GlobalNamespace::CustomTweenBehaviour::$$c::_get_$$9__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::$$c::_get_$$9__21_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<int, float>*>("", "CustomTweenBehaviour/<>c", "<>9__21_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Int32,System.Single> <>9__21_0
void GlobalNamespace::CustomTweenBehaviour::$$c::_set_$$9__21_0(::System::Func_2<int, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::$$c::_set_$$9__21_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "CustomTweenBehaviour/<>c", "<>9__21_0", value)));
}
// Autogenerated method: CustomTweenBehaviour/<>c..cctor
void GlobalNamespace::CustomTweenBehaviour::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CustomTweenBehaviour/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CustomTweenBehaviour/<>c.<OnBehaviourPlay>b__21_0
float GlobalNamespace::CustomTweenBehaviour::$$c::$OnBehaviourPlay$b__21_0(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::$$c::<OnBehaviourPlay>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnBehaviourPlay>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, i);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GhostEffectAsset
#include "GlobalNamespace/GhostEffectAsset.hpp"
// Including type: TimelineArrayReference
#include "GlobalNamespace/TimelineArrayReference.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GhostEffectBehaviour/GhostEffectType _ghostEffectType
::GlobalNamespace::GhostEffectBehaviour::GhostEffectType& GlobalNamespace::GhostEffectAsset::dyn__ghostEffectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectAsset::dyn__ghostEffectType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ghostEffectType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GhostEffectBehaviour::GhostEffectType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ExposedReference`1<TimelineArrayReference> arrayReference
::UnityEngine::ExposedReference_1<::GlobalNamespace::TimelineArrayReference*>& GlobalNamespace::GhostEffectAsset::dyn_arrayReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectAsset::dyn_arrayReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayReference"))->offset;
  return *reinterpret_cast<::UnityEngine::ExposedReference_1<::GlobalNamespace::TimelineArrayReference*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GhostEffectBehaviour template
::GlobalNamespace::GhostEffectBehaviour*& GlobalNamespace::GhostEffectAsset::dyn_template() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectAsset::dyn_template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "template"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GhostEffectBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GhostEffectAsset.get_clipCaps
::UnityEngine::Timeline::ClipCaps GlobalNamespace::GhostEffectAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: GhostEffectAsset.CreatePlayable
::UnityEngine::Playables::Playable GlobalNamespace::GhostEffectAsset::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GhostEffectBehaviour
#include "GlobalNamespace/GhostEffectBehaviour.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve alphaCurve
::UnityEngine::AnimationCurve*& GlobalNamespace::GhostEffectBehaviour::dyn_alphaCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn_alphaCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alphaCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve sizeCurve
::UnityEngine::AnimationCurve*& GlobalNamespace::GhostEffectBehaviour::dyn_sizeCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn_sizeCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sizeCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve distanceCurve
::UnityEngine::AnimationCurve*& GlobalNamespace::GhostEffectBehaviour::dyn_distanceCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn_distanceCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distanceCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _distanceMultiplier
::UnityEngine::Vector3& GlobalNamespace::GhostEffectBehaviour::dyn__distanceMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__distanceMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distanceMultiplier"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _useStartTransform
bool& GlobalNamespace::GhostEffectBehaviour::dyn__useStartTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__useStartTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useStartTransform"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _useEndTransform
bool& GlobalNamespace::GhostEffectBehaviour::dyn__useEndTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__useEndTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useEndTransform"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _startLocalPosition
::UnityEngine::Vector3& GlobalNamespace::GhostEffectBehaviour::dyn__startLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__startLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform _startTransform
::UnityEngine::Transform*& GlobalNamespace::GhostEffectBehaviour::dyn__startTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__startTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _endLocalPosition
::UnityEngine::Vector3& GlobalNamespace::GhostEffectBehaviour::dyn__endLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__endLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform _endTransform
::UnityEngine::Transform*& GlobalNamespace::GhostEffectBehaviour::dyn__endTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__endTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EaseType _positionEasing
::GlobalNamespace::EaseType& GlobalNamespace::GhostEffectBehaviour::dyn__positionEasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__positionEasing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionEasing"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GhostEffectBehaviour/EndBehavior _endBehavior
::GlobalNamespace::GhostEffectBehaviour::EndBehavior& GlobalNamespace::GhostEffectBehaviour::dyn__endBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__endBehavior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endBehavior"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GhostEffectBehaviour::EndBehavior*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single progress
float& GlobalNamespace::GhostEffectBehaviour::dyn_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn_progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshPro[] textMeshPros
::ArrayW<::TMPro::TextMeshPro*>& GlobalNamespace::GhostEffectBehaviour::dyn_textMeshPros() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn_textMeshPros");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textMeshPros"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TextMeshPro*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.CanvasGroup[] _canvasGroups
::ArrayW<::UnityEngine::CanvasGroup*>& GlobalNamespace::GhostEffectBehaviour::dyn__canvasGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__canvasGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroups"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::CanvasGroup*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GhostEffectBehaviour/GhostEffectType _ghostEffectType
::GlobalNamespace::GhostEffectBehaviour::GhostEffectType& GlobalNamespace::GhostEffectBehaviour::dyn__ghostEffectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__ghostEffectType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ghostEffectType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GhostEffectBehaviour::GhostEffectType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform _ghostEffectTransform
::UnityEngine::Transform*& GlobalNamespace::GhostEffectBehaviour::dyn__ghostEffectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__ghostEffectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ghostEffectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _direction
::UnityEngine::Vector3& GlobalNamespace::GhostEffectBehaviour::dyn__direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_direction"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _finished
bool& GlobalNamespace::GhostEffectBehaviour::dyn__finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__finished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finished"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GhostEffectBehaviour.EnableObjects
void GlobalNamespace::GhostEffectBehaviour::EnableObjects(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::EnableObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: GhostEffectBehaviour.OnBehaviourPlay
void GlobalNamespace::GhostEffectBehaviour::OnBehaviourPlay(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: GhostEffectBehaviour.ProcessFrame
void GlobalNamespace::GhostEffectBehaviour::ProcessFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GhostEffectBehaviour/EndBehavior
#include "GlobalNamespace/GhostEffectBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/EndBehavior DisableAll
::GlobalNamespace::GhostEffectBehaviour::EndBehavior GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_DisableAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_DisableAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GhostEffectBehaviour::EndBehavior>("", "GhostEffectBehaviour/EndBehavior", "DisableAll"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/EndBehavior DisableAll
void GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_DisableAll(::GlobalNamespace::GhostEffectBehaviour::EndBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_DisableAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/EndBehavior", "DisableAll", value));
}
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/EndBehavior DisableCopies
::GlobalNamespace::GhostEffectBehaviour::EndBehavior GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_DisableCopies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_DisableCopies");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GhostEffectBehaviour::EndBehavior>("", "GhostEffectBehaviour/EndBehavior", "DisableCopies"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/EndBehavior DisableCopies
void GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_DisableCopies(::GlobalNamespace::GhostEffectBehaviour::EndBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_DisableCopies");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/EndBehavior", "DisableCopies", value));
}
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/EndBehavior Nothing
::GlobalNamespace::GhostEffectBehaviour::EndBehavior GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_Nothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_Nothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GhostEffectBehaviour::EndBehavior>("", "GhostEffectBehaviour/EndBehavior", "Nothing"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/EndBehavior Nothing
void GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_Nothing(::GlobalNamespace::GhostEffectBehaviour::EndBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_Nothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/EndBehavior", "Nothing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::GhostEffectBehaviour::EndBehavior::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::EndBehavior::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GhostEffectBehaviour/GhostEffectType
#include "GlobalNamespace/GhostEffectBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/GhostEffectType TextMeshPro
::GlobalNamespace::GhostEffectBehaviour::GhostEffectType GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_TextMeshPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_TextMeshPro");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GhostEffectBehaviour::GhostEffectType>("", "GhostEffectBehaviour/GhostEffectType", "TextMeshPro"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/GhostEffectType TextMeshPro
void GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_TextMeshPro(::GlobalNamespace::GhostEffectBehaviour::GhostEffectType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_TextMeshPro");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/GhostEffectType", "TextMeshPro", value));
}
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/GhostEffectType Canvas
::GlobalNamespace::GhostEffectBehaviour::GhostEffectType GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_Canvas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GhostEffectBehaviour::GhostEffectType>("", "GhostEffectBehaviour/GhostEffectType", "Canvas"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/GhostEffectType Canvas
void GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_Canvas(::GlobalNamespace::GhostEffectBehaviour::GhostEffectType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_Canvas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/GhostEffectType", "Canvas", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::GhostEffectBehaviour::GhostEffectType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::GhostEffectType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SinglePositionTween
#include "GlobalNamespace/SinglePositionTween.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: CustomTweenBehaviour
#include "GlobalNamespace/CustomTweenBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ExposedReference`1<UnityEngine.Transform> transformReference
::UnityEngine::ExposedReference_1<::UnityEngine::Transform*>& GlobalNamespace::SinglePositionTween::dyn_transformReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePositionTween::dyn_transformReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformReference"))->offset;
  return *reinterpret_cast<::UnityEngine::ExposedReference_1<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CustomTweenBehaviour template
::GlobalNamespace::CustomTweenBehaviour*& GlobalNamespace::SinglePositionTween::dyn_template() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePositionTween::dyn_template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "template"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CustomTweenBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SinglePositionTween.get_clipCaps
::UnityEngine::Timeline::ClipCaps GlobalNamespace::SinglePositionTween::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePositionTween::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: SinglePositionTween.CreatePlayable
::UnityEngine::Playables::Playable GlobalNamespace::SinglePositionTween::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePositionTween::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TimelineArrayReference
#include "GlobalNamespace/TimelineArrayReference.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TimelineArrayReference/ArrayTypes arrayType
::GlobalNamespace::TimelineArrayReference::ArrayTypes& GlobalNamespace::TimelineArrayReference::dyn_arrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::dyn_arrayType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TimelineArrayReference::ArrayTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TubeBloomPrePassLight[] _tubeLightArray
::ArrayW<::GlobalNamespace::TubeBloomPrePassLight*>& GlobalNamespace::TimelineArrayReference::dyn__tubeLightArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::dyn__tubeLightArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tubeLightArray"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::TubeBloomPrePassLight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.CanvasGroup[] _canvasGroupArray
::ArrayW<::UnityEngine::CanvasGroup*>& GlobalNamespace::TimelineArrayReference::dyn__canvasGroupArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::dyn__canvasGroupArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroupArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::CanvasGroup*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshPro[] _tmproArray
::ArrayW<::TMPro::TextMeshPro*>& GlobalNamespace::TimelineArrayReference::dyn__tmproArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::dyn__tmproArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tmproArray"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TextMeshPro*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] _transformArray
::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::TimelineArrayReference::dyn__transformArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::dyn__transformArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DirectionalLight[] _directionalLights
::ArrayW<::GlobalNamespace::DirectionalLight*>& GlobalNamespace::TimelineArrayReference::dyn__directionalLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::dyn__directionalLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLights"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::DirectionalLight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TimelineArrayReference/ArrayTypes
#include "GlobalNamespace/TimelineArrayReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes TubeLight
::GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_TubeLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_TubeLight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "TubeLight"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes TubeLight
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_TubeLight(::GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_TubeLight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "TubeLight", value));
}
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes Transform
::GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_Transform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "Transform"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes Transform
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_Transform(::GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_Transform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "Transform", value));
}
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes Canvas
::GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_Canvas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "Canvas"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes Canvas
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_Canvas(::GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_Canvas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "Canvas", value));
}
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes TextMeshPro
::GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_TextMeshPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_TextMeshPro");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "TextMeshPro"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes TextMeshPro
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_TextMeshPro(::GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_TextMeshPro");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "TextMeshPro", value));
}
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes DirectionalLight
::GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_DirectionalLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_DirectionalLight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "DirectionalLight"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes DirectionalLight
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_DirectionalLight(::GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_DirectionalLight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "DirectionalLight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::TimelineArrayReference::ArrayTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeLightAsset
#include "GlobalNamespace/TubeLightAsset.hpp"
// Including type: TubeLightBehaviour
#include "GlobalNamespace/TubeLightBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TubeLightBehaviour _template
::GlobalNamespace::TubeLightBehaviour*& GlobalNamespace::TubeLightAsset::dyn__template() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightAsset::dyn__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TubeLightBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TubeLightAsset.get_clipCaps
::UnityEngine::Timeline::ClipCaps GlobalNamespace::TubeLightAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: TubeLightAsset.CreatePlayable
::UnityEngine::Playables::Playable GlobalNamespace::TubeLightAsset::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TubeLightBehaviour
#include "GlobalNamespace/TubeLightBehaviour.hpp"
// Including type: TubeLightBehaviour/ParameterType
#include "GlobalNamespace/TubeLightBehaviour_ParameterType.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean _noPredefinedStartValue
bool& GlobalNamespace::TubeLightBehaviour::dyn__noPredefinedStartValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightBehaviour::dyn__noPredefinedStartValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noPredefinedStartValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ColorSO startColor
::GlobalNamespace::ColorSO*& GlobalNamespace::TubeLightBehaviour::dyn_startColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightBehaviour::dyn_startColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startColor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ColorSO endColor
::GlobalNamespace::ColorSO*& GlobalNamespace::TubeLightBehaviour::dyn_endColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightBehaviour::dyn_endColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endColor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single blend
float& GlobalNamespace::TubeLightBehaviour::dyn_blend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightBehaviour::dyn_blend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::TubeLightBehaviour::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightBehaviour::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _originalColor
::UnityEngine::Color& GlobalNamespace::TubeLightBehaviour::dyn__originalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightBehaviour::dyn__originalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight[] _tubeLights
::ArrayW<::GlobalNamespace::TubeBloomPrePassLight*>& GlobalNamespace::TubeLightBehaviour::dyn__tubeLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightBehaviour::dyn__tubeLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tubeLights"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::TubeBloomPrePassLight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DirectionalLight[] _directionalLights
::ArrayW<::GlobalNamespace::DirectionalLight*>& GlobalNamespace::TubeLightBehaviour::dyn__directionalLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightBehaviour::dyn__directionalLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLights"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::DirectionalLight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean started
bool& GlobalNamespace::TubeLightBehaviour::dyn_started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightBehaviour::dyn_started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _firstFrameColor
::UnityEngine::Color& GlobalNamespace::TubeLightBehaviour::dyn__firstFrameColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightBehaviour::dyn__firstFrameColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstFrameColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TubeLightBehaviour.ProcessFrame
void GlobalNamespace::TubeLightBehaviour::ProcessFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: TubeLightBehaviour.OnPlayableDestroy
void GlobalNamespace::TubeLightBehaviour::OnPlayableDestroy(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeLightBehaviour/ParameterType
#include "GlobalNamespace/TubeLightBehaviour_ParameterType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TubeLightBehaviour/ParameterType Values
::GlobalNamespace::TubeLightBehaviour::ParameterType GlobalNamespace::TubeLightBehaviour::ParameterType::_get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightBehaviour::ParameterType::_get_Values");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TubeLightBehaviour::ParameterType>("", "TubeLightBehaviour/ParameterType", "Values"));
}
// Autogenerated static field setter
// Set static field: static public TubeLightBehaviour/ParameterType Values
void GlobalNamespace::TubeLightBehaviour::ParameterType::_set_Values(::GlobalNamespace::TubeLightBehaviour::ParameterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightBehaviour::ParameterType::_set_Values");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TubeLightBehaviour/ParameterType", "Values", value));
}
// Autogenerated static field getter
// Get static field: static public TubeLightBehaviour/ParameterType References
::GlobalNamespace::TubeLightBehaviour::ParameterType GlobalNamespace::TubeLightBehaviour::ParameterType::_get_References() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightBehaviour::ParameterType::_get_References");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TubeLightBehaviour::ParameterType>("", "TubeLightBehaviour/ParameterType", "References"));
}
// Autogenerated static field setter
// Set static field: static public TubeLightBehaviour/ParameterType References
void GlobalNamespace::TubeLightBehaviour::ParameterType::_set_References(::GlobalNamespace::TubeLightBehaviour::ParameterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightBehaviour::ParameterType::_set_References");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TubeLightBehaviour/ParameterType", "References", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::TubeLightBehaviour::ParameterType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightBehaviour::ParameterType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeLightIntensityAsset
#include "GlobalNamespace/TubeLightIntensityAsset.hpp"
// Including type: TubeLightIntensityBehaviour
#include "GlobalNamespace/TubeLightIntensityBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TubeLightIntensityBehaviour _template
::GlobalNamespace::TubeLightIntensityBehaviour*& GlobalNamespace::TubeLightIntensityAsset::dyn__template() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityAsset::dyn__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TubeLightIntensityBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TubeLightIntensityAsset.get_clipCaps
::UnityEngine::Timeline::ClipCaps GlobalNamespace::TubeLightIntensityAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: TubeLightIntensityAsset.CreatePlayable
::UnityEngine::Playables::Playable GlobalNamespace::TubeLightIntensityAsset::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TubeLightIntensityBehaviour
#include "GlobalNamespace/TubeLightIntensityBehaviour.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean _noPredefinedStartValue
bool& GlobalNamespace::TubeLightIntensityBehaviour::dyn__noPredefinedStartValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityBehaviour::dyn__noPredefinedStartValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noPredefinedStartValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _startLightIntensity
float& GlobalNamespace::TubeLightIntensityBehaviour::dyn__startLightIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityBehaviour::dyn__startLightIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startLightIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _startLaserIntensity
float& GlobalNamespace::TubeLightIntensityBehaviour::dyn__startLaserIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityBehaviour::dyn__startLaserIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startLaserIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _endLightIntensity
float& GlobalNamespace::TubeLightIntensityBehaviour::dyn__endLightIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityBehaviour::dyn__endLightIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endLightIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _endLaserIntensity
float& GlobalNamespace::TubeLightIntensityBehaviour::dyn__endLaserIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityBehaviour::dyn__endLaserIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endLaserIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _disableWhenFinished
bool& GlobalNamespace::TubeLightIntensityBehaviour::dyn__disableWhenFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityBehaviour::dyn__disableWhenFinished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disableWhenFinished"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _blend
float& GlobalNamespace::TubeLightIntensityBehaviour::dyn__blend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityBehaviour::dyn__blend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::TubeLightIntensityBehaviour::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityBehaviour::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _originalLightIntensity
float& GlobalNamespace::TubeLightIntensityBehaviour::dyn__originalLightIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityBehaviour::dyn__originalLightIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalLightIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _originalLaserIntensity
float& GlobalNamespace::TubeLightIntensityBehaviour::dyn__originalLaserIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityBehaviour::dyn__originalLaserIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalLaserIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight[] _tubeLights
::ArrayW<::GlobalNamespace::TubeBloomPrePassLight*>& GlobalNamespace::TubeLightIntensityBehaviour::dyn__tubeLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityBehaviour::dyn__tubeLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tubeLights"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::TubeBloomPrePassLight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DirectionalLight[] _directionalLights
::ArrayW<::GlobalNamespace::DirectionalLight*>& GlobalNamespace::TubeLightIntensityBehaviour::dyn__directionalLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityBehaviour::dyn__directionalLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLights"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::DirectionalLight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _started
bool& GlobalNamespace::TubeLightIntensityBehaviour::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityBehaviour::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _finished
bool& GlobalNamespace::TubeLightIntensityBehaviour::dyn__finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityBehaviour::dyn__finished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finished"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _firstFrameLightIntensity
float& GlobalNamespace::TubeLightIntensityBehaviour::dyn__firstFrameLightIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityBehaviour::dyn__firstFrameLightIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstFrameLightIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _firstFrameLaserIntensity
float& GlobalNamespace::TubeLightIntensityBehaviour::dyn__firstFrameLaserIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityBehaviour::dyn__firstFrameLaserIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstFrameLaserIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TubeLightIntensityBehaviour.EnableObjects
void GlobalNamespace::TubeLightIntensityBehaviour::EnableObjects(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityBehaviour::EnableObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: TubeLightIntensityBehaviour.ProcessFrame
void GlobalNamespace::TubeLightIntensityBehaviour::ProcessFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: TubeLightIntensityBehaviour.OnPlayableDestroy
void GlobalNamespace::TubeLightIntensityBehaviour::OnPlayableDestroy(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TubeLightIntensityBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeLightIntensityTrack
#include "GlobalNamespace/TubeLightIntensityTrack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeLightTrack
#include "GlobalNamespace/TubeLightTrack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSceneSetup
#include "GlobalNamespace/EnvironmentSceneSetup.hpp"
// Including type: EnvironmentSceneSetupData
#include "GlobalNamespace/EnvironmentSceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10C5CD8
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 trackLaneYPositionPropertyId
int GlobalNamespace::EnvironmentSceneSetup::_get_trackLaneYPositionPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSceneSetup::_get_trackLaneYPositionPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EnvironmentSceneSetup", "trackLaneYPositionPropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 trackLaneYPositionPropertyId
void GlobalNamespace::EnvironmentSceneSetup::_set_trackLaneYPositionPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSceneSetup::_set_trackLaneYPositionPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSceneSetup", "trackLaneYPositionPropertyId", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentSceneSetupData _sceneSetupData
::GlobalNamespace::EnvironmentSceneSetupData*& GlobalNamespace::EnvironmentSceneSetup::dyn__sceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSceneSetup::dyn__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentSceneSetup..cctor
void GlobalNamespace::EnvironmentSceneSetup::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSceneSetup::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EnvironmentSceneSetup", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: EnvironmentSceneSetup.InstallBindings
void GlobalNamespace::EnvironmentSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EventsTestSceneSetup
#include "GlobalNamespace/EventsTestSceneSetup.hpp"
// Including type: GameplayCoreSceneSetupData
#include "GlobalNamespace/GameplayCoreSceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly GameplayCoreSceneSetupData _sceneSetupData
::GlobalNamespace::GameplayCoreSceneSetupData*& GlobalNamespace::EventsTestSceneSetup::dyn__sceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EventsTestSceneSetup::dyn__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayCoreSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EventsTestSceneSetup.InstallBindings
void GlobalNamespace::EventsTestSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EventsTestSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameCoreSceneSetup
#include "GlobalNamespace/GameCoreSceneSetup.hpp"
// Including type: ScreenCaptureAfterDelay
#include "GlobalNamespace/ScreenCaptureAfterDelay.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: BloomFogSO
#include "GlobalNamespace/BloomFogSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kPauseButtonPressDurationMultiplier
float GlobalNamespace::GameCoreSceneSetup::_get_kPauseButtonPressDurationMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameCoreSceneSetup::_get_kPauseButtonPressDurationMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameCoreSceneSetup", "kPauseButtonPressDurationMultiplier"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPauseButtonPressDurationMultiplier
void GlobalNamespace::GameCoreSceneSetup::_set_kPauseButtonPressDurationMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameCoreSceneSetup::_set_kPauseButtonPressDurationMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameCoreSceneSetup", "kPauseButtonPressDurationMultiplier", value));
}
// Autogenerated instance field getter
// Get instance field: private ScreenCaptureAfterDelay _screenCaptureAfterDelayPrefab
::GlobalNamespace::ScreenCaptureAfterDelay*& GlobalNamespace::GameCoreSceneSetup::dyn__screenCaptureAfterDelayPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameCoreSceneSetup::dyn__screenCaptureAfterDelayPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_screenCaptureAfterDelayPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScreenCaptureAfterDelay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
::GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::GameCoreSceneSetup::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameCoreSceneSetup::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomFogSO _bloomFog
::GlobalNamespace::BloomFogSO*& GlobalNamespace::GameCoreSceneSetup::dyn__bloomFog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameCoreSceneSetup::dyn__bloomFog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFog"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomFogSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameCoreSceneSetup.InstallBindings
void GlobalNamespace::GameCoreSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameCoreSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningSceneSetup
#include "GlobalNamespace/HealthWarningSceneSetup.hpp"
// Including type: HealthWarningSceneSetupData
#include "GlobalNamespace/HealthWarningSceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly HealthWarningSceneSetupData _sceneSetupData
::GlobalNamespace::HealthWarningSceneSetupData*& GlobalNamespace::HealthWarningSceneSetup::dyn__sceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningSceneSetup::dyn__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HealthWarningSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HealthWarningSceneSetup.InstallBindings
void GlobalNamespace::HealthWarningSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningSceneStart
#include "GlobalNamespace/HealthWarningSceneStart.hpp"
// Including type: HealthWarningSceneStart/<Start>d__3
#include "GlobalNamespace/HealthWarningSceneStart_-Start-d__3.hpp"
// Including type: HealthWarningFlowCoordinator
#include "GlobalNamespace/HealthWarningFlowCoordinator.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: HMUI.HierarchyManager
#include "HMUI/HierarchyManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HealthWarningFlowCoordinator _healthWarninglowCoordinator
::GlobalNamespace::HealthWarningFlowCoordinator*& GlobalNamespace::HealthWarningSceneStart::dyn__healthWarninglowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningSceneStart::dyn__healthWarninglowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_healthWarninglowCoordinator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HealthWarningFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameScenesManager _gameScenesManager
::GlobalNamespace::GameScenesManager*& GlobalNamespace::HealthWarningSceneStart::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningSceneStart::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.HierarchyManager _hierarchyManager
::HMUI::HierarchyManager*& GlobalNamespace::HealthWarningSceneStart::dyn__hierarchyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningSceneStart::dyn__hierarchyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hierarchyManager"))->offset;
  return *reinterpret_cast<::HMUI::HierarchyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HealthWarningSceneStart.Start
::System::Collections::IEnumerator* GlobalNamespace::HealthWarningSceneStart::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningSceneStart::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HealthWarningSceneStart/<Start>d__3
#include "GlobalNamespace/HealthWarningSceneStart_-Start-d__3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::HealthWarningSceneStart::$Start$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningSceneStart::$Start$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::HealthWarningSceneStart::$Start$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningSceneStart::$Start$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HealthWarningSceneStart <>4__this
::GlobalNamespace::HealthWarningSceneStart*& GlobalNamespace::HealthWarningSceneStart::$Start$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningSceneStart::$Start$d__3::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HealthWarningSceneStart**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.IDisposable.Dispose
void GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.MoveNext
bool GlobalNamespace::HealthWarningSceneStart::$Start$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningSceneStart::$Start$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightmappingSceneSetup
#include "GlobalNamespace/LightmappingSceneSetup.hpp"
// Including type: LightmappingSceneSetup/<>c__DisplayClass7_0
#include "GlobalNamespace/LightmappingSceneSetup_--c__DisplayClass7_0.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO _beatmapLevel
::GlobalNamespace::BeatmapLevelSO*& GlobalNamespace::LightmappingSceneSetup::dyn__beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmappingSceneSetup::dyn__beatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::LightmappingSceneSetup::dyn__beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmappingSceneSetup::dyn__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficulty _beatmapDifficulty
::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::LightmappingSceneSetup::dyn__beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmappingSceneSetup::dyn__beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeSO _colorScheme
::GlobalNamespace::ColorSchemeSO*& GlobalNamespace::LightmappingSceneSetup::dyn__colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmappingSceneSetup::dyn__colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorScheme"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightmappingSceneSetup.get_colorScheme
::GlobalNamespace::ColorSchemeSO* GlobalNamespace::LightmappingSceneSetup::get_colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmappingSceneSetup::get_colorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ColorSchemeSO*, false>(this, ___internal__method);
}
// Autogenerated method: LightmappingSceneSetup.set_colorScheme
void GlobalNamespace::LightmappingSceneSetup::set_colorScheme(::GlobalNamespace::ColorSchemeSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmappingSceneSetup::set_colorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightmappingSceneSetup.InstallBindings
void GlobalNamespace::LightmappingSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmappingSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightmappingSceneSetup/<>c__DisplayClass7_0
#include "GlobalNamespace/LightmappingSceneSetup_--c__DisplayClass7_0.hpp"
// Including type: LightmappingSceneSetup/<>c__DisplayClass7_0/<<InstallBindings>b__0>d
#include "GlobalNamespace/LightmappingSceneSetup_--c__DisplayClass7_0_--InstallBindings-b__0-d.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public IReadonlyBeatmapData beatmapData
::GlobalNamespace::IReadonlyBeatmapData*& GlobalNamespace::LightmappingSceneSetup::$$c__DisplayClass7_0::dyn_beatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmappingSceneSetup::$$c__DisplayClass7_0::dyn_beatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IReadonlyBeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LightmappingSceneSetup <>4__this
::GlobalNamespace::LightmappingSceneSetup*& GlobalNamespace::LightmappingSceneSetup::$$c__DisplayClass7_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmappingSceneSetup::$$c__DisplayClass7_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightmappingSceneSetup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightmappingSceneSetup/<>c__DisplayClass7_0.<InstallBindings>b__0
::System::Threading::Tasks::Task* GlobalNamespace::LightmappingSceneSetup::$$c__DisplayClass7_0::$InstallBindings$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmappingSceneSetup::$$c__DisplayClass7_0::<InstallBindings>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InstallBindings>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightmappingSceneSetup/<>c__DisplayClass7_0/<<InstallBindings>b__0>d
#include "GlobalNamespace/LightmappingSceneSetup_--c__DisplayClass7_0_--InstallBindings-b__0-d.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::LightmappingSceneSetup::$$c__DisplayClass7_0::$$InstallBindings$b__0$d::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmappingSceneSetup::$$c__DisplayClass7_0::$$InstallBindings$b__0$d::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::LightmappingSceneSetup::$$c__DisplayClass7_0::$$InstallBindings$b__0$d::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmappingSceneSetup::$$c__DisplayClass7_0::$$InstallBindings$b__0$d::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LightmappingSceneSetup/<>c__DisplayClass7_0 <>4__this
::GlobalNamespace::LightmappingSceneSetup::$$c__DisplayClass7_0*& GlobalNamespace::LightmappingSceneSetup::$$c__DisplayClass7_0::$$InstallBindings$b__0$d::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmappingSceneSetup::$$c__DisplayClass7_0::$$InstallBindings$b__0$d::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightmappingSceneSetup::$$c__DisplayClass7_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IReadonlyBeatmapData> <>u__1
::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IReadonlyBeatmapData*>& GlobalNamespace::LightmappingSceneSetup::$$c__DisplayClass7_0::$$InstallBindings$b__0$d::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmappingSceneSetup::$$c__DisplayClass7_0::$$InstallBindings$b__0$d::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IReadonlyBeatmapData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightmappingSceneSetup/<>c__DisplayClass7_0/<<InstallBindings>b__0>d.MoveNext
void GlobalNamespace::LightmappingSceneSetup::$$c__DisplayClass7_0::$$InstallBindings$b__0$d::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmappingSceneSetup::$$c__DisplayClass7_0::$$InstallBindings$b__0$d::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightmappingSceneSetup/<>c__DisplayClass7_0/<<InstallBindings>b__0>d.SetStateMachine
void GlobalNamespace::LightmappingSceneSetup::$$c__DisplayClass7_0::$$InstallBindings$b__0$d::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmappingSceneSetup::$$c__DisplayClass7_0::$$InstallBindings$b__0$d::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuSceneSetup
#include "GlobalNamespace/MenuSceneSetup.hpp"
// Including type: MenuSceneSetup/<Start>d__3
#include "GlobalNamespace/MenuSceneSetup_-Start-d__3.hpp"
// Including type: HMUI.FlowCoordinator
#include "HMUI/FlowCoordinator.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: HMUI.HierarchyManager
#include "HMUI/HierarchyManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.FlowCoordinator _rootFlowCoordinator
::HMUI::FlowCoordinator*& GlobalNamespace::MenuSceneSetup::dyn__rootFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuSceneSetup::dyn__rootFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootFlowCoordinator"))->offset;
  return *reinterpret_cast<::HMUI::FlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameScenesManager _gameScenesManager
::GlobalNamespace::GameScenesManager*& GlobalNamespace::MenuSceneSetup::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuSceneSetup::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.HierarchyManager _hierarchyManager
::HMUI::HierarchyManager*& GlobalNamespace::MenuSceneSetup::dyn__hierarchyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuSceneSetup::dyn__hierarchyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hierarchyManager"))->offset;
  return *reinterpret_cast<::HMUI::HierarchyManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuSceneSetup.Start
::System::Collections::IEnumerator* GlobalNamespace::MenuSceneSetup::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuSceneSetup::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuSceneSetup/<Start>d__3
#include "GlobalNamespace/MenuSceneSetup_-Start-d__3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::MenuSceneSetup::$Start$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuSceneSetup::$Start$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::MenuSceneSetup::$Start$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuSceneSetup::$Start$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MenuSceneSetup <>4__this
::GlobalNamespace::MenuSceneSetup*& GlobalNamespace::MenuSceneSetup::$Start$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuSceneSetup::$Start$d__3::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuSceneSetup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MenuSceneSetup::$Start$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuSceneSetup::$Start$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MenuSceneSetup::$Start$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuSceneSetup::$Start$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.System.IDisposable.Dispose
void GlobalNamespace::MenuSceneSetup::$Start$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuSceneSetup::$Start$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.MoveNext
bool GlobalNamespace::MenuSceneSetup::$Start$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuSceneSetup::$Start$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::MenuSceneSetup::$Start$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuSceneSetup::$Start$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningNoTransitionInstaller
#include "GlobalNamespace/HealthWarningNoTransitionInstaller.hpp"
// Including type: HealthWarningSceneSetupData
#include "GlobalNamespace/HealthWarningSceneSetupData.hpp"
// Including type: HealthWarningScenesTransitionSetupDataSO
#include "GlobalNamespace/HealthWarningScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HealthWarningSceneSetupData _healthWarningSceneSetupData
::GlobalNamespace::HealthWarningSceneSetupData*& GlobalNamespace::HealthWarningNoTransitionInstaller::dyn__healthWarningSceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningNoTransitionInstaller::dyn__healthWarningSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_healthWarningSceneSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HealthWarningSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HealthWarningScenesTransitionSetupDataSO _scenesTransitionSetupData
::GlobalNamespace::HealthWarningScenesTransitionSetupDataSO*& GlobalNamespace::HealthWarningNoTransitionInstaller::dyn__scenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningNoTransitionInstaller::dyn__scenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HealthWarningScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HealthWarningNoTransitionInstaller.InstallBindings
void GlobalNamespace::HealthWarningNoTransitionInstaller::InstallBindings(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelNoTransitionInstaller
#include "GlobalNamespace/MissionLevelNoTransitionInstaller.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO _beatmapLevel
::GlobalNamespace::BeatmapLevelSO*& GlobalNamespace::MissionLevelNoTransitionInstaller::dyn__beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelNoTransitionInstaller::dyn__beatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::MissionLevelNoTransitionInstaller::dyn__beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelNoTransitionInstaller::dyn__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficulty _beatmapDifficulty
::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::MissionLevelNoTransitionInstaller::dyn__beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelNoTransitionInstaller::dyn__beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeSO _colorScheme
::GlobalNamespace::ColorSchemeSO*& GlobalNamespace::MissionLevelNoTransitionInstaller::dyn__colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelNoTransitionInstaller::dyn__colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorScheme"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionObjective[] _missionObjectives
::ArrayW<::GlobalNamespace::MissionObjective*>& GlobalNamespace::MissionLevelNoTransitionInstaller::dyn__missionObjectives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelNoTransitionInstaller::dyn__missionObjectives");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectives"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionObjective*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiers _gameplayModifiers
::GlobalNamespace::GameplayModifiers*& GlobalNamespace::MissionLevelNoTransitionInstaller::dyn__gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelNoTransitionInstaller::dyn__gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiers"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerSpecificSettings _playerSpecificSettings
::GlobalNamespace::PlayerSpecificSettings*& GlobalNamespace::MissionLevelNoTransitionInstaller::dyn__playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelNoTransitionInstaller::dyn__playerSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerSpecificSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _backButtonText
::StringW& GlobalNamespace::MissionLevelNoTransitionInstaller::dyn__backButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelNoTransitionInstaller::dyn__backButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backButtonText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionLevelScenesTransitionSetupDataSO _scenesTransitionSetupData
::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*& GlobalNamespace::MissionLevelNoTransitionInstaller::dyn__scenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelNoTransitionInstaller::dyn__scenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionLevelNoTransitionInstaller.InstallBindings
void GlobalNamespace::MissionLevelNoTransitionInstaller::InstallBindings(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelNoTransitionInstaller
#include "GlobalNamespace/MultiplayerLevelNoTransitionInstaller.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightNoTransitionInstaller
#include "GlobalNamespace/PatternFightNoTransitionInstaller.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PatternFightScenesTransitionSetupDataSO
#include "GlobalNamespace/PatternFightScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PlayerSpecificSettings _playerSpecificSettings
::GlobalNamespace::PlayerSpecificSettings*& GlobalNamespace::PatternFightNoTransitionInstaller::dyn__playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightNoTransitionInstaller::dyn__playerSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerSpecificSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PatternFightScenesTransitionSetupDataSO _scenesTransitionSetupData
::GlobalNamespace::PatternFightScenesTransitionSetupDataSO*& GlobalNamespace::PatternFightNoTransitionInstaller::dyn__scenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightNoTransitionInstaller::dyn__scenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PatternFightScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PatternFightNoTransitionInstaller.InstallBindings
void GlobalNamespace::PatternFightNoTransitionInstaller::InstallBindings(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelNoTransitionInstaller
#include "GlobalNamespace/StandardLevelNoTransitionInstaller.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: StandardLevelNoTransitionInstallerData
#include "GlobalNamespace/StandardLevelNoTransitionInstallerData.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private StandardLevelScenesTransitionSetupDataSO _scenesTransitionSetupData
::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*& GlobalNamespace::StandardLevelNoTransitionInstaller::dyn__scenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstaller::dyn__scenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private StandardLevelNoTransitionInstallerData _standardLevelNoTransitionInstallerData
::GlobalNamespace::StandardLevelNoTransitionInstallerData*& GlobalNamespace::StandardLevelNoTransitionInstaller::dyn__standardLevelNoTransitionInstallerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstaller::dyn__standardLevelNoTransitionInstallerData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardLevelNoTransitionInstallerData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StandardLevelNoTransitionInstallerData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardLevelNoTransitionInstaller.get_standardLevelNoTransitionInstallerData
::GlobalNamespace::StandardLevelNoTransitionInstallerData* GlobalNamespace::StandardLevelNoTransitionInstaller::get_standardLevelNoTransitionInstallerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstaller::get_standardLevelNoTransitionInstallerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_standardLevelNoTransitionInstallerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::StandardLevelNoTransitionInstallerData*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelNoTransitionInstaller.InstallBindings
void GlobalNamespace::StandardLevelNoTransitionInstaller::InstallBindings(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelNoTransitionInstallerData
#include "GlobalNamespace/StandardLevelNoTransitionInstallerData.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO _beatmapLevel
::GlobalNamespace::BeatmapLevelSO*& GlobalNamespace::StandardLevelNoTransitionInstallerData::dyn__beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::dyn__beatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::StandardLevelNoTransitionInstallerData::dyn__beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::dyn__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficulty _beatmapDifficulty
::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::StandardLevelNoTransitionInstallerData::dyn__beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::dyn__beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeSO _colorScheme
::GlobalNamespace::ColorSchemeSO*& GlobalNamespace::StandardLevelNoTransitionInstallerData::dyn__colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::dyn__colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorScheme"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentInfoSO _environmentInfo
::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::StandardLevelNoTransitionInstallerData::dyn__environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::dyn__environmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiers _gameplayModifiers
::GlobalNamespace::GameplayModifiers*& GlobalNamespace::StandardLevelNoTransitionInstallerData::dyn__gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::dyn__gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiers"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerSpecificSettings _playerSpecificSettings
::GlobalNamespace::PlayerSpecificSettings*& GlobalNamespace::StandardLevelNoTransitionInstallerData::dyn__playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::dyn__playerSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerSpecificSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PracticeSettings _practiceSettings
::GlobalNamespace::PracticeSettings*& GlobalNamespace::StandardLevelNoTransitionInstallerData::dyn__practiceSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::dyn__practiceSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_practiceSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PracticeSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _backButtonText
::StringW& GlobalNamespace::StandardLevelNoTransitionInstallerData::dyn__backButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::dyn__backButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backButtonText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useTestNoteCutSoundEffects
bool& GlobalNamespace::StandardLevelNoTransitionInstallerData::dyn__useTestNoteCutSoundEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::dyn__useTestNoteCutSoundEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useTestNoteCutSoundEffects"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardLevelNoTransitionInstallerData.get_beatmapLevel
::GlobalNamespace::BeatmapLevelSO* GlobalNamespace::StandardLevelNoTransitionInstallerData::get_beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::get_beatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelSO*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelNoTransitionInstallerData.set_beatmapLevel
void GlobalNamespace::StandardLevelNoTransitionInstallerData::set_beatmapLevel(::GlobalNamespace::BeatmapLevelSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::set_beatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelNoTransitionInstallerData.get_beatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::StandardLevelNoTransitionInstallerData::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::get_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelNoTransitionInstallerData.set_beatmapCharacteristic
void GlobalNamespace::StandardLevelNoTransitionInstallerData::set_beatmapCharacteristic(::GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::set_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelNoTransitionInstallerData.get_beatmapDifficulty
::GlobalNamespace::BeatmapDifficulty GlobalNamespace::StandardLevelNoTransitionInstallerData::get_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::get_beatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelNoTransitionInstallerData.set_beatmapDifficulty
void GlobalNamespace::StandardLevelNoTransitionInstallerData::set_beatmapDifficulty(::GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::set_beatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmapDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelNoTransitionInstallerData.get_colorScheme
::GlobalNamespace::ColorSchemeSO* GlobalNamespace::StandardLevelNoTransitionInstallerData::get_colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::get_colorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ColorSchemeSO*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelNoTransitionInstallerData.set_colorScheme
void GlobalNamespace::StandardLevelNoTransitionInstallerData::set_colorScheme(::GlobalNamespace::ColorSchemeSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::set_colorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelNoTransitionInstallerData.get_environmentInfo
::GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::StandardLevelNoTransitionInstallerData::get_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::get_environmentInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelNoTransitionInstallerData.set_environmentInfo
void GlobalNamespace::StandardLevelNoTransitionInstallerData::set_environmentInfo(::GlobalNamespace::EnvironmentInfoSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::set_environmentInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_environmentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelNoTransitionInstallerData.get_gameplayModifiers
::GlobalNamespace::GameplayModifiers* GlobalNamespace::StandardLevelNoTransitionInstallerData::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelNoTransitionInstallerData.set_gameplayModifiers
void GlobalNamespace::StandardLevelNoTransitionInstallerData::set_gameplayModifiers(::GlobalNamespace::GameplayModifiers* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::set_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelNoTransitionInstallerData.get_playerSpecificSettings
::GlobalNamespace::PlayerSpecificSettings* GlobalNamespace::StandardLevelNoTransitionInstallerData::get_playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::get_playerSpecificSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerSpecificSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerSpecificSettings*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelNoTransitionInstallerData.set_playerSpecificSettings
void GlobalNamespace::StandardLevelNoTransitionInstallerData::set_playerSpecificSettings(::GlobalNamespace::PlayerSpecificSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::set_playerSpecificSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerSpecificSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelNoTransitionInstallerData.get_practiceSettings
::GlobalNamespace::PracticeSettings* GlobalNamespace::StandardLevelNoTransitionInstallerData::get_practiceSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::get_practiceSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_practiceSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PracticeSettings*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelNoTransitionInstallerData.set_practiceSettings
void GlobalNamespace::StandardLevelNoTransitionInstallerData::set_practiceSettings(::GlobalNamespace::PracticeSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::set_practiceSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_practiceSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelNoTransitionInstallerData.get_backButtonText
::StringW GlobalNamespace::StandardLevelNoTransitionInstallerData::get_backButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::get_backButtonText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_backButtonText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelNoTransitionInstallerData.set_backButtonText
void GlobalNamespace::StandardLevelNoTransitionInstallerData::set_backButtonText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::set_backButtonText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_backButtonText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelNoTransitionInstallerData.get_useTestNoteCutSoundEffects
bool GlobalNamespace::StandardLevelNoTransitionInstallerData::get_useTestNoteCutSoundEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::get_useTestNoteCutSoundEffects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useTestNoteCutSoundEffects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelNoTransitionInstallerData.set_useTestNoteCutSoundEffects
void GlobalNamespace::StandardLevelNoTransitionInstallerData::set_useTestNoteCutSoundEffects(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelNoTransitionInstallerData::set_useTestNoteCutSoundEffects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useTestNoteCutSoundEffects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialNoTransitionInstaller
#include "GlobalNamespace/TutorialNoTransitionInstaller.hpp"
// Including type: TutorialScenesTransitionSetupDataSO
#include "GlobalNamespace/TutorialScenesTransitionSetupDataSO.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TutorialScenesTransitionSetupDataSO _scenesTransitionSetupData
::GlobalNamespace::TutorialScenesTransitionSetupDataSO*& GlobalNamespace::TutorialNoTransitionInstaller::dyn__scenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialNoTransitionInstaller::dyn__scenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerSpecificSettings _playerSpecificSettings
::GlobalNamespace::PlayerSpecificSettings*& GlobalNamespace::TutorialNoTransitionInstaller::dyn__playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialNoTransitionInstaller::dyn__playerSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerSpecificSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialNoTransitionInstaller.InstallBindings
void GlobalNamespace::TutorialNoTransitionInstaller::InstallBindings(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightSceneSetup
#include "GlobalNamespace/PatternFightSceneSetup.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: PlayerHeightDetector
#include "GlobalNamespace/PlayerHeightDetector.hpp"
// Including type: AudioManagerSO
#include "GlobalNamespace/AudioManagerSO.hpp"
// Including type: PatternFightSceneSetupData
#include "GlobalNamespace/PatternFightSceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _testAudioClip
::UnityEngine::AudioClip*& GlobalNamespace::PatternFightSceneSetup::dyn__testAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSceneSetup::dyn__testAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_testAudioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _testAudioClipBPM
float& GlobalNamespace::PatternFightSceneSetup::dyn__testAudioClipBPM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSceneSetup::dyn__testAudioClipBPM");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_testAudioClipBPM"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerHeightDetector _playerHeightDetectorPrefab
::GlobalNamespace::PlayerHeightDetector*& GlobalNamespace::PatternFightSceneSetup::dyn__playerHeightDetectorPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSceneSetup::dyn__playerHeightDetectorPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerHeightDetectorPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerHeightDetector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioManagerSO _audioMixer
::GlobalNamespace::AudioManagerSO*& GlobalNamespace::PatternFightSceneSetup::dyn__audioMixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSceneSetup::dyn__audioMixer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioMixer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioManagerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PatternFightSceneSetupData _sceneSetupData
::GlobalNamespace::PatternFightSceneSetupData*& GlobalNamespace::PatternFightSceneSetup::dyn__sceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSceneSetup::dyn__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PatternFightSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PatternFightSceneSetup.InstallBindings
void GlobalNamespace::PatternFightSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEditorGameplaySceneSetupData
#include "GlobalNamespace/BeatmapEditorGameplaySceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean useFirstPersonFlyingController
bool& GlobalNamespace::BeatmapEditorGameplaySceneSetupData::dyn_useFirstPersonFlyingController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEditorGameplaySceneSetupData::dyn_useFirstPersonFlyingController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useFirstPersonFlyingController"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean recordVRMovement
bool& GlobalNamespace::BeatmapEditorGameplaySceneSetupData::dyn_recordVRMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEditorGameplaySceneSetupData::dyn_recordVRMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordVRMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean playVRMovement
bool& GlobalNamespace::BeatmapEditorGameplaySceneSetupData::dyn_playVRMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEditorGameplaySceneSetupData::dyn_playVRMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playVRMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEditorSceneSetupData
#include "GlobalNamespace/BeatmapEditorSceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _levelDirPath
::StringW& GlobalNamespace::BeatmapEditorSceneSetupData::dyn__levelDirPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEditorSceneSetupData::dyn__levelDirPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelDirPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _levelAssetPath
::StringW& GlobalNamespace::BeatmapEditorSceneSetupData::dyn__levelAssetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEditorSceneSetupData::dyn__levelAssetPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelAssetPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapEditorSceneSetupData.get_levelDirPath
::StringW GlobalNamespace::BeatmapEditorSceneSetupData::get_levelDirPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEditorSceneSetupData::get_levelDirPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelDirPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEditorSceneSetupData.get_levelAssetPath
::StringW GlobalNamespace::BeatmapEditorSceneSetupData::get_levelAssetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEditorSceneSetupData::get_levelAssetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelAssetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSceneSetupData
#include "GlobalNamespace/EnvironmentSceneSetupData.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean hideBranding
bool& GlobalNamespace::EnvironmentSceneSetupData::dyn_hideBranding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSceneSetupData::dyn_hideBranding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hideBranding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly EnvironmentInfoSO environmentInfo
::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::EnvironmentSceneSetupData::dyn_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSceneSetupData::dyn_environmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameCoreSceneSetupData
#include "GlobalNamespace/GameCoreSceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayCoreSceneSetupData
#include "GlobalNamespace/GameplayCoreSceneSetupData.hpp"
// Including type: GameplayCoreSceneSetupData/<LoadTransformedBeatmapDataAsync>d__13
#include "GlobalNamespace/GameplayCoreSceneSetupData_-LoadTransformedBeatmapDataAsync-d__13.hpp"
// Including type: GameplayCoreSceneSetupData/<GetTransformedBeatmapDataAsync>d__14
#include "GlobalNamespace/GameplayCoreSceneSetupData_-GetTransformedBeatmapDataAsync-d__14.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly IDifficultyBeatmap difficultyBeatmap
::GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::GameplayCoreSceneSetupData::dyn_difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::dyn_difficultyBeatmap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "difficultyBeatmap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IPreviewBeatmapLevel previewBeatmapLevel
::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::GameplayCoreSceneSetupData::dyn_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::dyn_previewBeatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewBeatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly GameplayModifiers gameplayModifiers
::GlobalNamespace::GameplayModifiers*& GlobalNamespace::GameplayCoreSceneSetupData::dyn_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::dyn_gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameplayModifiers"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PlayerSpecificSettings playerSpecificSettings
::GlobalNamespace::PlayerSpecificSettings*& GlobalNamespace::GameplayCoreSceneSetupData::dyn_playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::dyn_playerSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerSpecificSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PracticeSettings practiceSettings
::GlobalNamespace::PracticeSettings*& GlobalNamespace::GameplayCoreSceneSetupData::dyn_practiceSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::dyn_practiceSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "practiceSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PracticeSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean useTestNoteCutSoundEffects
bool& GlobalNamespace::GameplayCoreSceneSetupData::dyn_useTestNoteCutSoundEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::dyn_useTestNoteCutSoundEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useTestNoteCutSoundEffects"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly EnvironmentInfoSO environmentInfo
::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::GameplayCoreSceneSetupData::dyn_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::dyn_environmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ColorScheme colorScheme
::GlobalNamespace::ColorScheme*& GlobalNamespace::GameplayCoreSceneSetupData::dyn_colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::dyn_colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorScheme"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorScheme**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly MainSettingsModelSO mainSettingsModel
::GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::GameplayCoreSceneSetupData::dyn_mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::dyn_mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainSettingsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IReadonlyBeatmapData _transformedBeatmapData
::GlobalNamespace::IReadonlyBeatmapData*& GlobalNamespace::GameplayCoreSceneSetupData::dyn__transformedBeatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::dyn__transformedBeatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformedBeatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IReadonlyBeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayCoreSceneSetupData.get_transformedBeatmapData
::GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::GameplayCoreSceneSetupData::get_transformedBeatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::get_transformedBeatmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transformedBeatmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IReadonlyBeatmapData*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayCoreSceneSetupData.LoadTransformedBeatmapDataAsync
::System::Threading::Tasks::Task* GlobalNamespace::GameplayCoreSceneSetupData::LoadTransformedBeatmapDataAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::LoadTransformedBeatmapDataAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadTransformedBeatmapDataAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayCoreSceneSetupData.GetTransformedBeatmapDataAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::IReadonlyBeatmapData*>* GlobalNamespace::GameplayCoreSceneSetupData::GetTransformedBeatmapDataAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::GetTransformedBeatmapDataAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTransformedBeatmapDataAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::IReadonlyBeatmapData*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayCoreSceneSetupData/<LoadTransformedBeatmapDataAsync>d__13
#include "GlobalNamespace/GameplayCoreSceneSetupData_-LoadTransformedBeatmapDataAsync-d__13.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::GameplayCoreSceneSetupData::$LoadTransformedBeatmapDataAsync$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::$LoadTransformedBeatmapDataAsync$d__13::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::GameplayCoreSceneSetupData::$LoadTransformedBeatmapDataAsync$d__13::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::$LoadTransformedBeatmapDataAsync$d__13::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayCoreSceneSetupData <>4__this
::GlobalNamespace::GameplayCoreSceneSetupData*& GlobalNamespace::GameplayCoreSceneSetupData::$LoadTransformedBeatmapDataAsync$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::$LoadTransformedBeatmapDataAsync$d__13::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayCoreSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IReadonlyBeatmapData> <>u__1
::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IReadonlyBeatmapData*>& GlobalNamespace::GameplayCoreSceneSetupData::$LoadTransformedBeatmapDataAsync$d__13::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::$LoadTransformedBeatmapDataAsync$d__13::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IReadonlyBeatmapData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayCoreSceneSetupData/<LoadTransformedBeatmapDataAsync>d__13.MoveNext
void GlobalNamespace::GameplayCoreSceneSetupData::$LoadTransformedBeatmapDataAsync$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::$LoadTransformedBeatmapDataAsync$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplayCoreSceneSetupData/<LoadTransformedBeatmapDataAsync>d__13.SetStateMachine
void GlobalNamespace::GameplayCoreSceneSetupData::$LoadTransformedBeatmapDataAsync$d__13::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::$LoadTransformedBeatmapDataAsync$d__13::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayCoreSceneSetupData/<GetTransformedBeatmapDataAsync>d__14
#include "GlobalNamespace/GameplayCoreSceneSetupData_-GetTransformedBeatmapDataAsync-d__14.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::GameplayCoreSceneSetupData::$GetTransformedBeatmapDataAsync$d__14::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::$GetTransformedBeatmapDataAsync$d__14::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<IReadonlyBeatmapData> <>t__builder
::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IReadonlyBeatmapData*>& GlobalNamespace::GameplayCoreSceneSetupData::$GetTransformedBeatmapDataAsync$d__14::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::$GetTransformedBeatmapDataAsync$d__14::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IReadonlyBeatmapData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayCoreSceneSetupData <>4__this
::GlobalNamespace::GameplayCoreSceneSetupData*& GlobalNamespace::GameplayCoreSceneSetupData::$GetTransformedBeatmapDataAsync$d__14::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::$GetTransformedBeatmapDataAsync$d__14::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayCoreSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IReadonlyBeatmapData> <>u__1
::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IReadonlyBeatmapData*>& GlobalNamespace::GameplayCoreSceneSetupData::$GetTransformedBeatmapDataAsync$d__14::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::$GetTransformedBeatmapDataAsync$d__14::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IReadonlyBeatmapData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayCoreSceneSetupData/<GetTransformedBeatmapDataAsync>d__14.MoveNext
void GlobalNamespace::GameplayCoreSceneSetupData::$GetTransformedBeatmapDataAsync$d__14::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::$GetTransformedBeatmapDataAsync$d__14::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplayCoreSceneSetupData/<GetTransformedBeatmapDataAsync>d__14.SetStateMachine
void GlobalNamespace::GameplayCoreSceneSetupData::$GetTransformedBeatmapDataAsync$d__14::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreSceneSetupData::$GetTransformedBeatmapDataAsync$d__14::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningSceneSetupData
#include "GlobalNamespace/HealthWarningSceneSetupData.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ScenesTransitionSetupDataSO _nextScenesTransitionSetupData
::GlobalNamespace::ScenesTransitionSetupDataSO*& GlobalNamespace::HealthWarningSceneSetupData::dyn__nextScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningSceneSetupData::dyn__nextScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HealthWarningSceneSetupData.get_nextScenesTransitionSetupData
::GlobalNamespace::ScenesTransitionSetupDataSO* GlobalNamespace::HealthWarningSceneSetupData::get_nextScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningSceneSetupData::get_nextScenesTransitionSetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nextScenesTransitionSetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ScenesTransitionSetupDataSO*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionGameplaySceneSetupData
#include "GlobalNamespace/MissionGameplaySceneSetupData.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly MissionObjective[] missionObjectives
::ArrayW<::GlobalNamespace::MissionObjective*>& GlobalNamespace::MissionGameplaySceneSetupData::dyn_missionObjectives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionGameplaySceneSetupData::dyn_missionObjectives");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "missionObjectives"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionObjective*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean autoRestart
bool& GlobalNamespace::MissionGameplaySceneSetupData::dyn_autoRestart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionGameplaySceneSetupData::dyn_autoRestart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoRestart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IPreviewBeatmapLevel previewBeatmapLevel
::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::MissionGameplaySceneSetupData::dyn_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionGameplaySceneSetupData::dyn_previewBeatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewBeatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapDifficulty beatmapDifficulty
::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::MissionGameplaySceneSetupData::dyn_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionGameplaySceneSetupData::dyn_beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapCharacteristicSO beatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::MissionGameplaySceneSetupData::dyn_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionGameplaySceneSetupData::dyn_beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly GameplayModifiers gameplayModifiers
::GlobalNamespace::GameplayModifiers*& GlobalNamespace::MissionGameplaySceneSetupData::dyn_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionGameplaySceneSetupData::dyn_gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameplayModifiers"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String backButtonText
::StringW& GlobalNamespace::MissionGameplaySceneSetupData::dyn_backButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionGameplaySceneSetupData::dyn_backButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backButtonText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelSceneSetupData
#include "GlobalNamespace/MultiplayerLevelSceneSetupData.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly IPreviewBeatmapLevel previewBeatmapLevel
::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::MultiplayerLevelSceneSetupData::dyn_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSceneSetupData::dyn_previewBeatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewBeatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapDifficulty beatmapDifficulty
::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::MultiplayerLevelSceneSetupData::dyn_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSceneSetupData::dyn_beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapCharacteristicSO beatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::MultiplayerLevelSceneSetupData::dyn_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSceneSetupData::dyn_beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean hasSong
bool& GlobalNamespace::MultiplayerLevelSceneSetupData::dyn_hasSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSceneSetupData::dyn_hasSong");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasSong"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightSceneSetupData
#include "GlobalNamespace/PatternFightSceneSetupData.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly PlayerSpecificSettings playerSpecificSettings
::GlobalNamespace::PlayerSpecificSettings*& GlobalNamespace::PatternFightSceneSetupData::dyn_playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSceneSetupData::dyn_playerSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerSpecificSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ColorScheme colorScheme
::GlobalNamespace::ColorScheme*& GlobalNamespace::PatternFightSceneSetupData::dyn_colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSceneSetupData::dyn_colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorScheme"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorScheme**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShaderWarmupSceneSetupData
#include "GlobalNamespace/ShaderWarmupSceneSetupData.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ScenesTransitionSetupDataSO <nextScenesTransitionSetupData>k__BackingField
::GlobalNamespace::ScenesTransitionSetupDataSO*& GlobalNamespace::ShaderWarmupSceneSetupData::dyn_$nextScenesTransitionSetupData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderWarmupSceneSetupData::dyn_$nextScenesTransitionSetupData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<nextScenesTransitionSetupData>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ShaderWarmupSceneSetupData.get_nextScenesTransitionSetupData
::GlobalNamespace::ScenesTransitionSetupDataSO* GlobalNamespace::ShaderWarmupSceneSetupData::get_nextScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderWarmupSceneSetupData::get_nextScenesTransitionSetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nextScenesTransitionSetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ScenesTransitionSetupDataSO*, false>(this, ___internal__method);
}
// Autogenerated method: ShaderWarmupSceneSetupData.set_nextScenesTransitionSetupData
void GlobalNamespace::ShaderWarmupSceneSetupData::set_nextScenesTransitionSetupData(::GlobalNamespace::ScenesTransitionSetupDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderWarmupSceneSetupData::set_nextScenesTransitionSetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_nextScenesTransitionSetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardGameplaySceneSetupData
#include "GlobalNamespace/StandardGameplaySceneSetupData.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean autoRestart
bool& GlobalNamespace::StandardGameplaySceneSetupData::dyn_autoRestart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardGameplaySceneSetupData::dyn_autoRestart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoRestart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IPreviewBeatmapLevel previewBeatmapLevel
::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::StandardGameplaySceneSetupData::dyn_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardGameplaySceneSetupData::dyn_previewBeatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewBeatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapDifficulty beatmapDifficulty
::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::StandardGameplaySceneSetupData::dyn_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardGameplaySceneSetupData::dyn_beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapCharacteristicSO beatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::StandardGameplaySceneSetupData::dyn_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardGameplaySceneSetupData::dyn_beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String backButtonText
::StringW& GlobalNamespace::StandardGameplaySceneSetupData::dyn_backButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardGameplaySceneSetupData::dyn_backButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backButtonText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly GameplayModifiers gameplayModifiers
::GlobalNamespace::GameplayModifiers*& GlobalNamespace::StandardGameplaySceneSetupData::dyn_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardGameplaySceneSetupData::dyn_gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameplayModifiers"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean startPaused
bool& GlobalNamespace::StandardGameplaySceneSetupData::dyn_startPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardGameplaySceneSetupData::dyn_startPaused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPaused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialSceneSetupData
#include "GlobalNamespace/TutorialSceneSetupData.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ColorScheme colorScheme
::GlobalNamespace::ColorScheme*& GlobalNamespace::TutorialSceneSetupData::dyn_colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSceneSetupData::dyn_colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorScheme"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorScheme**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PlayerSpecificSettings playerSpecificSettings
::GlobalNamespace::PlayerSpecificSettings*& GlobalNamespace::TutorialSceneSetupData::dyn_playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSceneSetupData::dyn_playerSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerSpecificSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInitScenesTransitionSetupDataContainerSO
#include "GlobalNamespace/AppInitScenesTransitionSetupDataContainerSO.hpp"
// Including type: AppInitScenesTransitionSetupDataSO
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AppInitScenesTransitionSetupDataSO appInitScenesTransitionSetupData
::GlobalNamespace::AppInitScenesTransitionSetupDataSO*& GlobalNamespace::AppInitScenesTransitionSetupDataContainerSO::dyn_appInitScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInitScenesTransitionSetupDataContainerSO::dyn_appInitScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "appInitScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AppInitScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInitScenesTransitionSetupDataSO
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO.hpp"
// Including type: AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO_AppInitOverrideStartType.hpp"
// Including type: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO_AppInitSceneSetupData.hpp"
// Including type: MockPlayersModel
#include "GlobalNamespace/MockPlayersModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AppInitScenesTransitionSetupDataSO.Init
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInitScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppInitScenesTransitionSetupDataSO.InitAsAppStart
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::InitAsAppStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInitScenesTransitionSetupDataSO::InitAsAppStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitAsAppStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppInitScenesTransitionSetupDataSO.__Init
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::__Init(::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType appInitOverrideStartType, ::GlobalNamespace::MockPlayersModel* mockPlayersModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInitScenesTransitionSetupDataSO::__Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appInitOverrideStartType), ::il2cpp_utils::ExtractType(mockPlayersModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, appInitOverrideStartType, mockPlayersModel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO_AppInitOverrideStartType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType DoNotOverride
::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_DoNotOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_DoNotOverride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType>("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "DoNotOverride"));
}
// Autogenerated static field setter
// Set static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType DoNotOverride
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_DoNotOverride(::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_DoNotOverride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "DoNotOverride", value));
}
// Autogenerated static field getter
// Get static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType AppStart
::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_AppStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_AppStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType>("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "AppStart"));
}
// Autogenerated static field setter
// Set static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType AppStart
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_AppStart(::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_AppStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "AppStart", value));
}
// Autogenerated static field getter
// Get static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType AppRestart
::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_AppRestart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_AppRestart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType>("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "AppRestart"));
}
// Autogenerated static field setter
// Set static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType AppRestart
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_AppRestart(::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_AppRestart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "AppRestart", value));
}
// Autogenerated static field getter
// Get static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType MultiSceneEditor
::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_MultiSceneEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_MultiSceneEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType>("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "MultiSceneEditor"));
}
// Autogenerated static field setter
// Set static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType MultiSceneEditor
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_MultiSceneEditor(::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_MultiSceneEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "MultiSceneEditor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO_AppInitSceneSetupData.hpp"
// Including type: MockPlayersModel
#include "GlobalNamespace/MockPlayersModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType <appInitOverrideStartType>k__BackingField
::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType& GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::dyn_$appInitOverrideStartType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::dyn_$appInitOverrideStartType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<appInitOverrideStartType>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MockPlayersModel <overrideMockPlayersModel>k__BackingField
::GlobalNamespace::MockPlayersModel*& GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::dyn_$overrideMockPlayersModel$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::dyn_$overrideMockPlayersModel$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<overrideMockPlayersModel>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MockPlayersModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData.get_appInitOverrideStartType
::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::get_appInitOverrideStartType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::get_appInitOverrideStartType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_appInitOverrideStartType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType, false>(this, ___internal__method);
}
// Autogenerated method: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData.set_appInitOverrideStartType
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::set_appInitOverrideStartType(::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::set_appInitOverrideStartType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_appInitOverrideStartType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData.get_overrideMockPlayersModel
::GlobalNamespace::MockPlayersModel* GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::get_overrideMockPlayersModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::get_overrideMockPlayersModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideMockPlayersModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MockPlayersModel*, false>(this, ___internal__method);
}
// Autogenerated method: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData.set_overrideMockPlayersModel
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::set_overrideMockPlayersModel(::GlobalNamespace::MockPlayersModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::set_overrideMockPlayersModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overrideMockPlayersModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEditorScenesTransitionSetupDataSO
#include "GlobalNamespace/BeatmapEditorScenesTransitionSetupDataSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<BeatmapEditorScenesTransitionSetupDataSO> didFinishEvent
::System::Action_1<::GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO*>*& GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <goStraightToEditor>k__BackingField
bool& GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::dyn_$goStraightToEditor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::dyn_$goStraightToEditor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<goStraightToEditor>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapEditorScenesTransitionSetupDataSO.get_goStraightToEditor
bool GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::get_goStraightToEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::get_goStraightToEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_goStraightToEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEditorScenesTransitionSetupDataSO.set_goStraightToEditor
void GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::set_goStraightToEditor(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::set_goStraightToEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_goStraightToEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapEditorScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::add_didFinishEvent(::System::Action_1<::GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapEditorScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::remove_didFinishEvent(::System::Action_1<::GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapEditorScenesTransitionSetupDataSO.Init
void GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::Init(bool goStraightToEditor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(goStraightToEditor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, goStraightToEditor);
}
// Autogenerated method: BeatmapEditorScenesTransitionSetupDataSO.Finish
void GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreditsScenesTransitionSetupDataSO
#include "GlobalNamespace/CreditsScenesTransitionSetupDataSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<CreditsScenesTransitionSetupDataSO> didFinishEvent
::System::Action_1<::GlobalNamespace::CreditsScenesTransitionSetupDataSO*>*& GlobalNamespace::CreditsScenesTransitionSetupDataSO::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsScenesTransitionSetupDataSO::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::CreditsScenesTransitionSetupDataSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CreditsScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::CreditsScenesTransitionSetupDataSO::add_didFinishEvent(::System::Action_1<::GlobalNamespace::CreditsScenesTransitionSetupDataSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CreditsScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::CreditsScenesTransitionSetupDataSO::remove_didFinishEvent(::System::Action_1<::GlobalNamespace::CreditsScenesTransitionSetupDataSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CreditsScenesTransitionSetupDataSO.Finish
void GlobalNamespace::CreditsScenesTransitionSetupDataSO::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EventsTestScenesTransitionSetupDataSO
#include "GlobalNamespace/EventsTestScenesTransitionSetupDataSO.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: SceneInfo
#include "GlobalNamespace/SceneInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private EnvironmentInfoSO _environmentInfo
::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::EventsTestScenesTransitionSetupDataSO::dyn__environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EventsTestScenesTransitionSetupDataSO::dyn__environmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SceneInfo _eventsTestSceneInfo
::GlobalNamespace::SceneInfo*& GlobalNamespace::EventsTestScenesTransitionSetupDataSO::dyn__eventsTestSceneInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EventsTestScenesTransitionSetupDataSO::dyn__eventsTestSceneInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventsTestSceneInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SceneInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SceneInfo _gameCoreSceneInfo
::GlobalNamespace::SceneInfo*& GlobalNamespace::EventsTestScenesTransitionSetupDataSO::dyn__gameCoreSceneInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EventsTestScenesTransitionSetupDataSO::dyn__gameCoreSceneInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameCoreSceneInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SceneInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EventsTestScenesTransitionSetupDataSO.Init
void GlobalNamespace::EventsTestScenesTransitionSetupDataSO::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EventsTestScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayLevelSceneTransitionEvents
#include "GlobalNamespace/GameplayLevelSceneTransitionEvents.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: MultiplayerResultsData
#include "GlobalNamespace/MultiplayerResultsData.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly StandardLevelScenesTransitionSetupDataSO _standardLevelScenesTransitionSetupData
::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*& GlobalNamespace::GameplayLevelSceneTransitionEvents::dyn__standardLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayLevelSceneTransitionEvents::dyn__standardLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MissionLevelScenesTransitionSetupDataSO _missionLevelScenesTransitionSetupData
::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*& GlobalNamespace::GameplayLevelSceneTransitionEvents::dyn__missionLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayLevelSceneTransitionEvents::dyn__missionLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLevelScenesTransitionSetupDataSO _multiplayerLevelScenesTransitionSetupData
::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*& GlobalNamespace::GameplayLevelSceneTransitionEvents::dyn__multiplayerLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayLevelSceneTransitionEvents::dyn__multiplayerLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action anyGameplayLevelDidFinishEvent
::System::Action*& GlobalNamespace::GameplayLevelSceneTransitionEvents::dyn_anyGameplayLevelDidFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayLevelSceneTransitionEvents::dyn_anyGameplayLevelDidFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anyGameplayLevelDidFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayLevelSceneTransitionEvents.add_anyGameplayLevelDidFinishEvent
void GlobalNamespace::GameplayLevelSceneTransitionEvents::add_anyGameplayLevelDidFinishEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayLevelSceneTransitionEvents::add_anyGameplayLevelDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_anyGameplayLevelDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayLevelSceneTransitionEvents.remove_anyGameplayLevelDidFinishEvent
void GlobalNamespace::GameplayLevelSceneTransitionEvents::remove_anyGameplayLevelDidFinishEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayLevelSceneTransitionEvents::remove_anyGameplayLevelDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_anyGameplayLevelDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayLevelSceneTransitionEvents.HandleStandardLevelDidFinish
void GlobalNamespace::GameplayLevelSceneTransitionEvents::HandleStandardLevelDidFinish(::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* standardLevelScenesTransitionSetupData, ::GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayLevelSceneTransitionEvents::HandleStandardLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStandardLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standardLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(levelCompletionResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standardLevelScenesTransitionSetupData, levelCompletionResults);
}
// Autogenerated method: GameplayLevelSceneTransitionEvents.HandleMultiplayerLevelDidFinish
void GlobalNamespace::GameplayLevelSceneTransitionEvents::HandleMultiplayerLevelDidFinish(::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO* multiplayerLevelScenesTransitionSetupData, ::GlobalNamespace::MultiplayerResultsData* multiplayerResultsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayLevelSceneTransitionEvents::HandleMultiplayerLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(multiplayerResultsData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, multiplayerLevelScenesTransitionSetupData, multiplayerResultsData);
}
// Autogenerated method: GameplayLevelSceneTransitionEvents.HandleMissionLevelDidFinish
void GlobalNamespace::GameplayLevelSceneTransitionEvents::HandleMissionLevelDidFinish(::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO* missionLevelScenesTransitionSetupData, ::GlobalNamespace::MissionCompletionResults* missionCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayLevelSceneTransitionEvents::HandleMissionLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(missionCompletionResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionLevelScenesTransitionSetupData, missionCompletionResults);
}
// Autogenerated method: GameplayLevelSceneTransitionEvents.InvokeAnyGameplayLevelDidFinish
void GlobalNamespace::GameplayLevelSceneTransitionEvents::InvokeAnyGameplayLevelDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayLevelSceneTransitionEvents::InvokeAnyGameplayLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeAnyGameplayLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplayLevelSceneTransitionEvents.Finalize
void GlobalNamespace::GameplayLevelSceneTransitionEvents::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayLevelSceneTransitionEvents::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningScenesTransitionSetupDataSO
#include "GlobalNamespace/HealthWarningScenesTransitionSetupDataSO.hpp"
// Including type: HealthWarningSceneSetupData
#include "GlobalNamespace/HealthWarningSceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HealthWarningScenesTransitionSetupDataSO.Init
void GlobalNamespace::HealthWarningScenesTransitionSetupDataSO::Init(::GlobalNamespace::HealthWarningSceneSetupData* healthWarningSceneSetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(healthWarningSceneSetupData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, healthWarningSceneSetupData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelScenesTransitionSetupDataSO
#include "GlobalNamespace/LevelScenesTransitionSetupDataSO.hpp"
// Including type: LevelScenesTransitionSetupDataSO/<BeforeScenesWillBeActivatedAsync>d__6
#include "GlobalNamespace/LevelScenesTransitionSetupDataSO_-BeforeScenesWillBeActivatedAsync-d__6.hpp"
// Including type: GameplayCoreSceneSetupData
#include "GlobalNamespace/GameplayCoreSceneSetupData.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameplayCoreSceneSetupData <gameplayCoreSceneSetupData>k__BackingField
::GlobalNamespace::GameplayCoreSceneSetupData*& GlobalNamespace::LevelScenesTransitionSetupDataSO::dyn_$gameplayCoreSceneSetupData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelScenesTransitionSetupDataSO::dyn_$gameplayCoreSceneSetupData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<gameplayCoreSceneSetupData>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayCoreSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelScenesTransitionSetupDataSO.get_transformedBeatmapData
::GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::LevelScenesTransitionSetupDataSO::get_transformedBeatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelScenesTransitionSetupDataSO::get_transformedBeatmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transformedBeatmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IReadonlyBeatmapData*, false>(this, ___internal__method);
}
// Autogenerated method: LevelScenesTransitionSetupDataSO.get_gameplayCoreSceneSetupData
::GlobalNamespace::GameplayCoreSceneSetupData* GlobalNamespace::LevelScenesTransitionSetupDataSO::get_gameplayCoreSceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelScenesTransitionSetupDataSO::get_gameplayCoreSceneSetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayCoreSceneSetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayCoreSceneSetupData*, false>(this, ___internal__method);
}
// Autogenerated method: LevelScenesTransitionSetupDataSO.set_gameplayCoreSceneSetupData
void GlobalNamespace::LevelScenesTransitionSetupDataSO::set_gameplayCoreSceneSetupData(::GlobalNamespace::GameplayCoreSceneSetupData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelScenesTransitionSetupDataSO::set_gameplayCoreSceneSetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gameplayCoreSceneSetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelScenesTransitionSetupDataSO.BeforeScenesWillBeActivatedAsync
::System::Threading::Tasks::Task* GlobalNamespace::LevelScenesTransitionSetupDataSO::BeforeScenesWillBeActivatedAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelScenesTransitionSetupDataSO::BeforeScenesWillBeActivatedAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeforeScenesWillBeActivatedAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelScenesTransitionSetupDataSO/<BeforeScenesWillBeActivatedAsync>d__6
#include "GlobalNamespace/LevelScenesTransitionSetupDataSO_-BeforeScenesWillBeActivatedAsync-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::LevelScenesTransitionSetupDataSO::$BeforeScenesWillBeActivatedAsync$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelScenesTransitionSetupDataSO::$BeforeScenesWillBeActivatedAsync$d__6::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::LevelScenesTransitionSetupDataSO::$BeforeScenesWillBeActivatedAsync$d__6::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelScenesTransitionSetupDataSO::$BeforeScenesWillBeActivatedAsync$d__6::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LevelScenesTransitionSetupDataSO <>4__this
::GlobalNamespace::LevelScenesTransitionSetupDataSO*& GlobalNamespace::LevelScenesTransitionSetupDataSO::$BeforeScenesWillBeActivatedAsync$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelScenesTransitionSetupDataSO::$BeforeScenesWillBeActivatedAsync$d__6::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::LevelScenesTransitionSetupDataSO::$BeforeScenesWillBeActivatedAsync$d__6::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelScenesTransitionSetupDataSO::$BeforeScenesWillBeActivatedAsync$d__6::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelScenesTransitionSetupDataSO/<BeforeScenesWillBeActivatedAsync>d__6.MoveNext
void GlobalNamespace::LevelScenesTransitionSetupDataSO::$BeforeScenesWillBeActivatedAsync$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelScenesTransitionSetupDataSO::$BeforeScenesWillBeActivatedAsync$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelScenesTransitionSetupDataSO/<BeforeScenesWillBeActivatedAsync>d__6.SetStateMachine
void GlobalNamespace::LevelScenesTransitionSetupDataSO::$BeforeScenesWillBeActivatedAsync$d__6::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelScenesTransitionSetupDataSO::$BeforeScenesWillBeActivatedAsync$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuScenesTransitionSetupDataSO
#include "GlobalNamespace/MenuScenesTransitionSetupDataSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: MenuTransitionsHelper/<>c
#include "GlobalNamespace/MenuTransitionsHelper_--c.hpp"
// Including type: MenuTransitionsHelper/<>c__DisplayClass26_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass26_0.hpp"
// Including type: MenuTransitionsHelper/<>c__DisplayClass27_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass27_0.hpp"
// Including type: MenuTransitionsHelper/<>c__DisplayClass28_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass28_0.hpp"
// Including type: MenuTransitionsHelper/<>c__DisplayClass29_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass29_0.hpp"
// Including type: MenuTransitionsHelper/<>c__DisplayClass30_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass30_0.hpp"
// Including type: MenuTransitionsHelper/<>c__DisplayClass33_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass33_0.hpp"
// Including type: AppInitScenesTransitionSetupDataContainerSO
#include "GlobalNamespace/AppInitScenesTransitionSetupDataContainerSO.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: TutorialScenesTransitionSetupDataSO/TutorialEndStateType
#include "GlobalNamespace/TutorialScenesTransitionSetupDataSO.hpp"
// Including type: CreditsScenesTransitionSetupDataSO
#include "GlobalNamespace/CreditsScenesTransitionSetupDataSO.hpp"
// Including type: BeatmapEditorScenesTransitionSetupDataSO
#include "GlobalNamespace/BeatmapEditorScenesTransitionSetupDataSO.hpp"
// Including type: BeatmapEditor3D.BeatmapEditorStandardLevelScenesTransitionSetupDataSO
#include "BeatmapEditor3D/BeatmapEditorStandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: MultiplayerResultsData
#include "GlobalNamespace/MultiplayerResultsData.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: OverrideEnvironmentSettings
#include "GlobalNamespace/OverrideEnvironmentSettings.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AppInitScenesTransitionSetupDataContainerSO _appInitScenesTransitionSetupDataContainer
::GlobalNamespace::AppInitScenesTransitionSetupDataContainerSO*& GlobalNamespace::MenuTransitionsHelper::dyn__appInitScenesTransitionSetupDataContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::dyn__appInitScenesTransitionSetupDataContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appInitScenesTransitionSetupDataContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AppInitScenesTransitionSetupDataContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private StandardLevelScenesTransitionSetupDataSO _standardLevelScenesTransitionSetupData
::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*& GlobalNamespace::MenuTransitionsHelper::dyn__standardLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::dyn__standardLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerLevelScenesTransitionSetupDataSO _multiplayerLevelScenesTransitionSetupData
::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*& GlobalNamespace::MenuTransitionsHelper::dyn__multiplayerLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::dyn__multiplayerLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionLevelScenesTransitionSetupDataSO _missionLevelScenesTransitionSetupData
::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*& GlobalNamespace::MenuTransitionsHelper::dyn__missionLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::dyn__missionLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TutorialScenesTransitionSetupDataSO _tutorialScenesTransitionSetupData
::GlobalNamespace::TutorialScenesTransitionSetupDataSO*& GlobalNamespace::MenuTransitionsHelper::dyn__tutorialScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::dyn__tutorialScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CreditsScenesTransitionSetupDataSO _creditsScenesTransitionSetupData
::GlobalNamespace::CreditsScenesTransitionSetupDataSO*& GlobalNamespace::MenuTransitionsHelper::dyn__creditsScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::dyn__creditsScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_creditsScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CreditsScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEditorScenesTransitionSetupDataSO _beatmapEditorScenesTransitionSetupData
::GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO*& GlobalNamespace::MenuTransitionsHelper::dyn__beatmapEditorScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::dyn__beatmapEditorScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEditorScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEditor3D.BeatmapEditorStandardLevelScenesTransitionSetupDataSO _beatmapEditorStandardLevelScenesTransitionSetupData
::BeatmapEditor3D::BeatmapEditorStandardLevelScenesTransitionSetupDataSO*& GlobalNamespace::MenuTransitionsHelper::dyn__beatmapEditorStandardLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::dyn__beatmapEditorStandardLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEditorStandardLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::BeatmapEditor3D::BeatmapEditorStandardLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
::GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::MenuTransitionsHelper::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameScenesManager _gameScenesManager
::GlobalNamespace::GameScenesManager*& GlobalNamespace::MenuTransitionsHelper::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<StandardLevelScenesTransitionSetupDataSO,LevelCompletionResults> _standardLevelFinishedCallback
::System::Action_2<::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::LevelCompletionResults*>*& GlobalNamespace::MenuTransitionsHelper::dyn__standardLevelFinishedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::dyn__standardLevelFinishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardLevelFinishedCallback"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::LevelCompletionResults*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<MultiplayerLevelScenesTransitionSetupDataSO,MultiplayerResultsData> _multiplayerLevelFinishedCallback
::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MultiplayerResultsData*>*& GlobalNamespace::MenuTransitionsHelper::dyn__multiplayerLevelFinishedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::dyn__multiplayerLevelFinishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLevelFinishedCallback"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MultiplayerResultsData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<DisconnectedReason> _multiplayerDidDisconnectCallback
::System::Action_1<::GlobalNamespace::DisconnectedReason>*& GlobalNamespace::MenuTransitionsHelper::dyn__multiplayerDidDisconnectCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::dyn__multiplayerDidDisconnectCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerDidDisconnectCallback"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::DisconnectedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<MissionLevelScenesTransitionSetupDataSO,MissionCompletionResults> _missionLevelFinishedCallback
::System::Action_2<::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MissionCompletionResults*>*& GlobalNamespace::MenuTransitionsHelper::dyn__missionLevelFinishedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::dyn__missionLevelFinishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionLevelFinishedCallback"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MissionCompletionResults*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action _beatmapEditorFinishedCallback
::System::Action*& GlobalNamespace::MenuTransitionsHelper::dyn__beatmapEditorFinishedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::dyn__beatmapEditorFinishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEditorFinishedCallback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<BeatmapEditor3D.BeatmapEditorStandardLevelScenesTransitionSetupDataSO,LevelCompletionResults> _beatmapEditorGameplayLevelFinishedCallback
::System::Action_2<::BeatmapEditor3D::BeatmapEditorStandardLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::LevelCompletionResults*>*& GlobalNamespace::MenuTransitionsHelper::dyn__beatmapEditorGameplayLevelFinishedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::dyn__beatmapEditorGameplayLevelFinishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEditorGameplayLevelFinishedCallback"))->offset;
  return *reinterpret_cast<::System::Action_2<::BeatmapEditor3D::BeatmapEditorStandardLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::LevelCompletionResults*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuTransitionsHelper.StartStandardLevel
void GlobalNamespace::MenuTransitionsHelper::StartStandardLevel(::StringW gameMode, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, ::GlobalNamespace::OverrideEnvironmentSettings* overrideEnvironmentSettings, ::GlobalNamespace::ColorScheme* overrideColorScheme, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, ::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, ::GlobalNamespace::PracticeSettings* practiceSettings, ::StringW backButtonText, bool useTestNoteCutSoundEffects, bool startPaused, ::System::Action* beforeSceneSwitchCallback, ::System::Action_2<::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::LevelCompletionResults*>* levelFinishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::StartStandardLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartStandardLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameMode), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(overrideEnvironmentSettings), ::il2cpp_utils::ExtractType(overrideColorScheme), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(playerSpecificSettings), ::il2cpp_utils::ExtractType(practiceSettings), ::il2cpp_utils::ExtractType(backButtonText), ::il2cpp_utils::ExtractType(useTestNoteCutSoundEffects), ::il2cpp_utils::ExtractType(startPaused), ::il2cpp_utils::ExtractType(beforeSceneSwitchCallback), ::il2cpp_utils::ExtractType(levelFinishedCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameMode, difficultyBeatmap, previewBeatmapLevel, overrideEnvironmentSettings, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, backButtonText, useTestNoteCutSoundEffects, startPaused, beforeSceneSwitchCallback, levelFinishedCallback);
}
// Autogenerated method: MenuTransitionsHelper.StartStandardLevel
void GlobalNamespace::MenuTransitionsHelper::StartStandardLevel(::StringW gameMode, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, ::GlobalNamespace::OverrideEnvironmentSettings* overrideEnvironmentSettings, ::GlobalNamespace::ColorScheme* overrideColorScheme, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, ::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, ::GlobalNamespace::PracticeSettings* practiceSettings, ::StringW backButtonText, bool useTestNoteCutSoundEffects, bool startPaused, ::System::Action* beforeSceneSwitchCallback, ::System::Action_1<::Zenject::DiContainer*>* afterSceneSwitchCallback, ::System::Action_2<::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::LevelCompletionResults*>* levelFinishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::StartStandardLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartStandardLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameMode), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(overrideEnvironmentSettings), ::il2cpp_utils::ExtractType(overrideColorScheme), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(playerSpecificSettings), ::il2cpp_utils::ExtractType(practiceSettings), ::il2cpp_utils::ExtractType(backButtonText), ::il2cpp_utils::ExtractType(useTestNoteCutSoundEffects), ::il2cpp_utils::ExtractType(startPaused), ::il2cpp_utils::ExtractType(beforeSceneSwitchCallback), ::il2cpp_utils::ExtractType(afterSceneSwitchCallback), ::il2cpp_utils::ExtractType(levelFinishedCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameMode, difficultyBeatmap, previewBeatmapLevel, overrideEnvironmentSettings, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, backButtonText, useTestNoteCutSoundEffects, startPaused, beforeSceneSwitchCallback, afterSceneSwitchCallback, levelFinishedCallback);
}
// Autogenerated method: MenuTransitionsHelper.StartMissionLevel
void GlobalNamespace::MenuTransitionsHelper::StartMissionLevel(::StringW missionId, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, ::GlobalNamespace::ColorScheme* overrideColorScheme, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, ::ArrayW<::GlobalNamespace::MissionObjective*> missionObjectives, ::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, ::System::Action* beforeSceneSwitchCallback, ::System::Action_2<::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MissionCompletionResults*>* levelFinishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::StartMissionLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMissionLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(overrideColorScheme), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(missionObjectives), ::il2cpp_utils::ExtractType(playerSpecificSettings), ::il2cpp_utils::ExtractType(beforeSceneSwitchCallback), ::il2cpp_utils::ExtractType(levelFinishedCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionId, difficultyBeatmap, previewBeatmapLevel, overrideColorScheme, gameplayModifiers, missionObjectives, playerSpecificSettings, beforeSceneSwitchCallback, levelFinishedCallback);
}
// Autogenerated method: MenuTransitionsHelper.StartMultiplayerLevel
void GlobalNamespace::MenuTransitionsHelper::StartMultiplayerLevel(::StringW gameMode, ::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, ::GlobalNamespace::BeatmapDifficulty beatmapDifficulty, ::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::GlobalNamespace::ColorScheme* overrideColorScheme, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, ::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, ::GlobalNamespace::PracticeSettings* practiceSettings, ::StringW backButtonText, bool useTestNoteCutSoundEffects, ::System::Action* beforeSceneSwitchCallback, ::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MultiplayerResultsData*>* levelFinishedCallback, ::System::Action_1<::GlobalNamespace::DisconnectedReason>* didDisconnectCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::StartMultiplayerLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMultiplayerLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameMode), ::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(beatmapDifficulty), ::il2cpp_utils::ExtractType(beatmapCharacteristic), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(overrideColorScheme), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(playerSpecificSettings), ::il2cpp_utils::ExtractType(practiceSettings), ::il2cpp_utils::ExtractType(backButtonText), ::il2cpp_utils::ExtractType(useTestNoteCutSoundEffects), ::il2cpp_utils::ExtractType(beforeSceneSwitchCallback), ::il2cpp_utils::ExtractType(levelFinishedCallback), ::il2cpp_utils::ExtractType(didDisconnectCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameMode, previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, difficultyBeatmap, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, backButtonText, useTestNoteCutSoundEffects, beforeSceneSwitchCallback, levelFinishedCallback, didDisconnectCallback);
}
// Autogenerated method: MenuTransitionsHelper.StartMultiplayerLevel
void GlobalNamespace::MenuTransitionsHelper::StartMultiplayerLevel(::StringW gameMode, ::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, ::GlobalNamespace::BeatmapDifficulty beatmapDifficulty, ::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::GlobalNamespace::ColorScheme* overrideColorScheme, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, ::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, ::GlobalNamespace::PracticeSettings* practiceSettings, ::StringW backButtonText, bool useTestNoteCutSoundEffects, ::System::Action* beforeSceneSwitchCallback, ::System::Action_1<::Zenject::DiContainer*>* afterSceneSwitchCallback, ::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MultiplayerResultsData*>* levelFinishedCallback, ::System::Action_1<::GlobalNamespace::DisconnectedReason>* didDisconnectCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::StartMultiplayerLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMultiplayerLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameMode), ::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(beatmapDifficulty), ::il2cpp_utils::ExtractType(beatmapCharacteristic), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(overrideColorScheme), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(playerSpecificSettings), ::il2cpp_utils::ExtractType(practiceSettings), ::il2cpp_utils::ExtractType(backButtonText), ::il2cpp_utils::ExtractType(useTestNoteCutSoundEffects), ::il2cpp_utils::ExtractType(beforeSceneSwitchCallback), ::il2cpp_utils::ExtractType(afterSceneSwitchCallback), ::il2cpp_utils::ExtractType(levelFinishedCallback), ::il2cpp_utils::ExtractType(didDisconnectCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameMode, previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, difficultyBeatmap, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, backButtonText, useTestNoteCutSoundEffects, beforeSceneSwitchCallback, afterSceneSwitchCallback, levelFinishedCallback, didDisconnectCallback);
}
// Autogenerated method: MenuTransitionsHelper.StartTutorial
void GlobalNamespace::MenuTransitionsHelper::StartTutorial(::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, ::System::Action* beforeSceneSwitchCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::StartTutorial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTutorial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerSpecificSettings), ::il2cpp_utils::ExtractType(beforeSceneSwitchCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerSpecificSettings, beforeSceneSwitchCallback);
}
// Autogenerated method: MenuTransitionsHelper.ShowCredits
void GlobalNamespace::MenuTransitionsHelper::ShowCredits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::ShowCredits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowCredits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuTransitionsHelper.StartBeatmapEditor
void GlobalNamespace::MenuTransitionsHelper::StartBeatmapEditor(::System::Action* beatmapEditorFinishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::StartBeatmapEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartBeatmapEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEditorFinishedCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapEditorFinishedCallback);
}
// Autogenerated method: MenuTransitionsHelper.StartBeatmapEditorStandardLevel
void GlobalNamespace::MenuTransitionsHelper::StartBeatmapEditorStandardLevel(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, ::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, ::GlobalNamespace::PracticeSettings* practiceSettings, bool useFirstPersonFlyingController, ::System::Action* beforeSceneSwitchCallback, ::System::Action_2<::BeatmapEditor3D::BeatmapEditorStandardLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::LevelCompletionResults*>* levelFinishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::StartBeatmapEditorStandardLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartBeatmapEditorStandardLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(playerSpecificSettings), ::il2cpp_utils::ExtractType(practiceSettings), ::il2cpp_utils::ExtractType(useFirstPersonFlyingController), ::il2cpp_utils::ExtractType(beforeSceneSwitchCallback), ::il2cpp_utils::ExtractType(levelFinishedCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, difficultyBeatmap, previewBeatmapLevel, gameplayModifiers, playerSpecificSettings, practiceSettings, useFirstPersonFlyingController, beforeSceneSwitchCallback, levelFinishedCallback);
}
// Autogenerated method: MenuTransitionsHelper.RestartGame
void GlobalNamespace::MenuTransitionsHelper::RestartGame(::System::Action_1<::Zenject::DiContainer*>* finishCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::RestartGame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestartGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finishCallback);
}
// Autogenerated method: MenuTransitionsHelper.HandleMainGameSceneDidFinish
void GlobalNamespace::MenuTransitionsHelper::HandleMainGameSceneDidFinish(::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* standardLevelScenesTransitionSetupData, ::GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::HandleMainGameSceneDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMainGameSceneDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standardLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(levelCompletionResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standardLevelScenesTransitionSetupData, levelCompletionResults);
}
// Autogenerated method: MenuTransitionsHelper.HandleMultiplayerLevelDidFinish
void GlobalNamespace::MenuTransitionsHelper::HandleMultiplayerLevelDidFinish(::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO* multiplayerLevelScenesTransitionSetupData, ::GlobalNamespace::MultiplayerResultsData* multiplayerResultsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::HandleMultiplayerLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(multiplayerResultsData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, multiplayerLevelScenesTransitionSetupData, multiplayerResultsData);
}
// Autogenerated method: MenuTransitionsHelper.HandleMultiplayerLevelDidDisconnect
void GlobalNamespace::MenuTransitionsHelper::HandleMultiplayerLevelDidDisconnect(::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO* multiplayerLevelScenesTransitionSetupData, ::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::HandleMultiplayerLevelDidDisconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelDidDisconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, multiplayerLevelScenesTransitionSetupData, disconnectedReason);
}
// Autogenerated method: MenuTransitionsHelper.HandleMissionLevelSceneDidFinish
void GlobalNamespace::MenuTransitionsHelper::HandleMissionLevelSceneDidFinish(::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO* missionLevelScenesTransitionSetupData, ::GlobalNamespace::MissionCompletionResults* missionCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::HandleMissionLevelSceneDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionLevelSceneDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(missionCompletionResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionLevelScenesTransitionSetupData, missionCompletionResults);
}
// Autogenerated method: MenuTransitionsHelper.HandleTutorialSceneDidFinish
void GlobalNamespace::MenuTransitionsHelper::HandleTutorialSceneDidFinish(::GlobalNamespace::TutorialScenesTransitionSetupDataSO* tutorialSceneTransitionSetupData, ::GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType endState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::HandleTutorialSceneDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTutorialSceneDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tutorialSceneTransitionSetupData), ::il2cpp_utils::ExtractType(endState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tutorialSceneTransitionSetupData, endState);
}
// Autogenerated method: MenuTransitionsHelper.HandleCreditsSceneDidFinish
void GlobalNamespace::MenuTransitionsHelper::HandleCreditsSceneDidFinish(::GlobalNamespace::CreditsScenesTransitionSetupDataSO* creditsSceneTransitionSetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::HandleCreditsSceneDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCreditsSceneDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(creditsSceneTransitionSetupData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, creditsSceneTransitionSetupData);
}
// Autogenerated method: MenuTransitionsHelper.HandleBeatmapEditorSceneDidFinish
void GlobalNamespace::MenuTransitionsHelper::HandleBeatmapEditorSceneDidFinish(::GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO* beatmapEditorScenesTransitionSetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::HandleBeatmapEditorSceneDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEditorSceneDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEditorScenesTransitionSetupData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapEditorScenesTransitionSetupData);
}
// Autogenerated method: MenuTransitionsHelper.HandleBeatmapEditorGameSceneDidFinish
void GlobalNamespace::MenuTransitionsHelper::HandleBeatmapEditorGameSceneDidFinish(::BeatmapEditor3D::BeatmapEditorStandardLevelScenesTransitionSetupDataSO* beatmapEditorStandardLevelScenesTransitionSetupData, ::GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::HandleBeatmapEditorGameSceneDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEditorGameSceneDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEditorStandardLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(levelCompletionResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapEditorStandardLevelScenesTransitionSetupData, levelCompletionResults);
}
// Autogenerated method: MenuTransitionsHelper.<HandleBeatmapEditorSceneDidFinish>b__32_0
void GlobalNamespace::MenuTransitionsHelper::$HandleBeatmapEditorSceneDidFinish$b__32_0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::<HandleBeatmapEditorSceneDidFinish>b__32_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleBeatmapEditorSceneDidFinish>b__32_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuTransitionsHelper/<>c
#include "GlobalNamespace/MenuTransitionsHelper_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly MenuTransitionsHelper/<>c <>9
::GlobalNamespace::MenuTransitionsHelper::$$c* GlobalNamespace::MenuTransitionsHelper::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuTransitionsHelper::$$c*>("", "MenuTransitionsHelper/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly MenuTransitionsHelper/<>c <>9
void GlobalNamespace::MenuTransitionsHelper::$$c::_set_$$9(::GlobalNamespace::MenuTransitionsHelper::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MenuTransitionsHelper/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__23_0
::System::Action* GlobalNamespace::MenuTransitionsHelper::$$c::_get_$$9__23_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c::_get_$$9__23_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("", "MenuTransitionsHelper/<>c", "<>9__23_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__23_0
void GlobalNamespace::MenuTransitionsHelper::$$c::_set_$$9__23_0(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c::_set_$$9__23_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MenuTransitionsHelper/<>c", "<>9__23_0", value)));
}
// Autogenerated method: MenuTransitionsHelper/<>c..cctor
void GlobalNamespace::MenuTransitionsHelper::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MenuTransitionsHelper/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MenuTransitionsHelper/<>c.<StartBeatmapEditor>b__23_0
void GlobalNamespace::MenuTransitionsHelper::$$c::$StartBeatmapEditor$b__23_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c::<StartBeatmapEditor>b__23_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartBeatmapEditor>b__23_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuTransitionsHelper/<>c__DisplayClass26_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass26_0.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MenuTransitionsHelper <>4__this
::GlobalNamespace::MenuTransitionsHelper*& GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass26_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass26_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuTransitionsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public StandardLevelScenesTransitionSetupDataSO standardLevelScenesTransitionSetupData
::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*& GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass26_0::dyn_standardLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass26_0::dyn_standardLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LevelCompletionResults levelCompletionResults
::GlobalNamespace::LevelCompletionResults*& GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass26_0::dyn_levelCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass26_0::dyn_levelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelCompletionResults"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuTransitionsHelper/<>c__DisplayClass26_0.<HandleMainGameSceneDidFinish>b__0
void GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass26_0::$HandleMainGameSceneDidFinish$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass26_0::<HandleMainGameSceneDidFinish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMainGameSceneDidFinish>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuTransitionsHelper/<>c__DisplayClass27_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass27_0.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: MultiplayerResultsData
#include "GlobalNamespace/MultiplayerResultsData.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MenuTransitionsHelper <>4__this
::GlobalNamespace::MenuTransitionsHelper*& GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass27_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass27_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuTransitionsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerLevelScenesTransitionSetupDataSO multiplayerLevelScenesTransitionSetupData
::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*& GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass27_0::dyn_multiplayerLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass27_0::dyn_multiplayerLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "multiplayerLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerResultsData multiplayerResultsData
::GlobalNamespace::MultiplayerResultsData*& GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass27_0::dyn_multiplayerResultsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass27_0::dyn_multiplayerResultsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "multiplayerResultsData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerResultsData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuTransitionsHelper/<>c__DisplayClass27_0.<HandleMultiplayerLevelDidFinish>b__0
void GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass27_0::$HandleMultiplayerLevelDidFinish$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass27_0::<HandleMultiplayerLevelDidFinish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMultiplayerLevelDidFinish>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuTransitionsHelper/<>c__DisplayClass28_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass28_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MenuTransitionsHelper <>4__this
::GlobalNamespace::MenuTransitionsHelper*& GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass28_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass28_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuTransitionsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DisconnectedReason disconnectedReason
::GlobalNamespace::DisconnectedReason& GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass28_0::dyn_disconnectedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass28_0::dyn_disconnectedReason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disconnectedReason"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DisconnectedReason*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuTransitionsHelper/<>c__DisplayClass28_0.<HandleMultiplayerLevelDidDisconnect>b__0
void GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass28_0::$HandleMultiplayerLevelDidDisconnect$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass28_0::<HandleMultiplayerLevelDidDisconnect>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMultiplayerLevelDidDisconnect>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuTransitionsHelper/<>c__DisplayClass29_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass29_0.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MenuTransitionsHelper <>4__this
::GlobalNamespace::MenuTransitionsHelper*& GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass29_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass29_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuTransitionsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MissionLevelScenesTransitionSetupDataSO missionLevelScenesTransitionSetupData
::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*& GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass29_0::dyn_missionLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass29_0::dyn_missionLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "missionLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MissionCompletionResults missionCompletionResults
::GlobalNamespace::MissionCompletionResults*& GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass29_0::dyn_missionCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass29_0::dyn_missionCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "missionCompletionResults"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuTransitionsHelper/<>c__DisplayClass29_0.<HandleMissionLevelSceneDidFinish>b__0
void GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass29_0::$HandleMissionLevelSceneDidFinish$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass29_0::<HandleMissionLevelSceneDidFinish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMissionLevelSceneDidFinish>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuTransitionsHelper/<>c__DisplayClass30_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass30_0.hpp"
// Including type: TutorialScenesTransitionSetupDataSO
#include "GlobalNamespace/TutorialScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TutorialScenesTransitionSetupDataSO/TutorialEndStateType endState
::GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType& GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass30_0::dyn_endState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass30_0::dyn_endState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MenuTransitionsHelper <>4__this
::GlobalNamespace::MenuTransitionsHelper*& GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass30_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass30_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuTransitionsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TutorialScenesTransitionSetupDataSO tutorialSceneTransitionSetupData
::GlobalNamespace::TutorialScenesTransitionSetupDataSO*& GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass30_0::dyn_tutorialSceneTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass30_0::dyn_tutorialSceneTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tutorialSceneTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuTransitionsHelper/<>c__DisplayClass30_0.<HandleTutorialSceneDidFinish>b__0
void GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass30_0::$HandleTutorialSceneDidFinish$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass30_0::<HandleTutorialSceneDidFinish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleTutorialSceneDidFinish>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuTransitionsHelper/<>c__DisplayClass33_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass33_0.hpp"
// Including type: BeatmapEditor3D.BeatmapEditorStandardLevelScenesTransitionSetupDataSO
#include "BeatmapEditor3D/BeatmapEditorStandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MenuTransitionsHelper <>4__this
::GlobalNamespace::MenuTransitionsHelper*& GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass33_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass33_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuTransitionsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapEditor3D.BeatmapEditorStandardLevelScenesTransitionSetupDataSO beatmapEditorStandardLevelScenesTransitionSetupData
::BeatmapEditor3D::BeatmapEditorStandardLevelScenesTransitionSetupDataSO*& GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass33_0::dyn_beatmapEditorStandardLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass33_0::dyn_beatmapEditorStandardLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapEditorStandardLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::BeatmapEditor3D::BeatmapEditorStandardLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LevelCompletionResults levelCompletionResults
::GlobalNamespace::LevelCompletionResults*& GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass33_0::dyn_levelCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass33_0::dyn_levelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelCompletionResults"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuTransitionsHelper/<>c__DisplayClass33_0.<HandleBeatmapEditorGameSceneDidFinish>b__0
void GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass33_0::$HandleBeatmapEditorGameSceneDidFinish$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass33_0::<HandleBeatmapEditorGameSceneDidFinish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleBeatmapEditorGameSceneDidFinish>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: SceneInfo
#include "GlobalNamespace/SceneInfo.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SceneInfo _missionGameplaySceneInfo
::GlobalNamespace::SceneInfo*& GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::dyn__missionGameplaySceneInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::dyn__missionGameplaySceneInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionGameplaySceneInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SceneInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SceneInfo _gameCoreSceneInfo
::GlobalNamespace::SceneInfo*& GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::dyn__gameCoreSceneInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::dyn__gameCoreSceneInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameCoreSceneInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SceneInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
::GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<MissionLevelScenesTransitionSetupDataSO,MissionCompletionResults> didFinishEvent
::System::Action_2<::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MissionCompletionResults*>*& GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MissionCompletionResults*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <missionId>k__BackingField
::StringW& GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::dyn_$missionId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::dyn_$missionId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<missionId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDifficultyBeatmap <difficultyBeatmap>k__BackingField
::GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::dyn_$difficultyBeatmap$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::dyn_$difficultyBeatmap$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<difficultyBeatmap>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.get_missionId
::StringW GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::get_missionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::get_missionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.set_missionId
void GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::set_missionId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::set_missionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_missionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.get_difficultyBeatmap
::GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::get_difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::get_difficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.set_difficultyBeatmap
void GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::set_difficultyBeatmap(::GlobalNamespace::IDifficultyBeatmap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::set_difficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_difficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::add_didFinishEvent(::System::Action_2<::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MissionCompletionResults*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::remove_didFinishEvent(::System::Action_2<::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MissionCompletionResults*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.Init
void GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::Init(::StringW missionId, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, ::ArrayW<::GlobalNamespace::MissionObjective*> missionObjectives, ::GlobalNamespace::ColorScheme* overrideColorScheme, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, ::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, ::StringW backButtonText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(missionObjectives), ::il2cpp_utils::ExtractType(overrideColorScheme), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(playerSpecificSettings), ::il2cpp_utils::ExtractType(backButtonText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionId, difficultyBeatmap, previewBeatmapLevel, missionObjectives, overrideColorScheme, gameplayModifiers, playerSpecificSettings, backButtonText);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.Finish
void GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::Finish(::GlobalNamespace::MissionCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelCompletionResults);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: SceneInfo
#include "GlobalNamespace/SceneInfo.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MultiplayerResultsData
#include "GlobalNamespace/MultiplayerResultsData.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SceneInfo _multiplayerLevelSceneInfo
::GlobalNamespace::SceneInfo*& GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn__multiplayerLevelSceneInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn__multiplayerLevelSceneInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLevelSceneInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SceneInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SceneInfo _gameCoreSceneInfo
::GlobalNamespace::SceneInfo*& GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn__gameCoreSceneInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn__gameCoreSceneInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameCoreSceneInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SceneInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentInfoSO _multiplayerEnvironmentInfo
::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn__multiplayerEnvironmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn__multiplayerEnvironmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerEnvironmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
::GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<MultiplayerLevelScenesTransitionSetupDataSO,MultiplayerResultsData> didFinishEvent
::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MultiplayerResultsData*>*& GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MultiplayerResultsData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<MultiplayerLevelScenesTransitionSetupDataSO,DisconnectedReason> didDisconnectEvent
::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::DisconnectedReason>*& GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn_didDisconnectEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn_didDisconnectEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didDisconnectEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::DisconnectedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <gameMode>k__BackingField
::StringW& GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn_$gameMode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn_$gameMode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<gameMode>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IPreviewBeatmapLevel <previewBeatmapLevel>k__BackingField
::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn_$previewBeatmapLevel$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn_$previewBeatmapLevel$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<previewBeatmapLevel>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficulty <beatmapDifficulty>k__BackingField
::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn_$beatmapDifficulty$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn_$beatmapDifficulty$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmapDifficulty>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDifficultyBeatmap <difficultyBeatmap>k__BackingField
::GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn_$difficultyBeatmap$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn_$difficultyBeatmap$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<difficultyBeatmap>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO <beatmapCharacteristic>k__BackingField
::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn_$beatmapCharacteristic$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn_$beatmapCharacteristic$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmapCharacteristic>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <usingOverrideColorScheme>k__BackingField
bool& GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn_$usingOverrideColorScheme$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn_$usingOverrideColorScheme$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<usingOverrideColorScheme>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorScheme <colorScheme>k__BackingField
::GlobalNamespace::ColorScheme*& GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn_$colorScheme$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::dyn_$colorScheme$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<colorScheme>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorScheme**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.get_gameMode
::StringW GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_gameMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.set_gameMode
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_gameMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_gameMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gameMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.get_previewBeatmapLevel
::GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_previewBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.set_previewBeatmapLevel
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_previewBeatmapLevel(::GlobalNamespace::IPreviewBeatmapLevel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_previewBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_previewBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.get_beatmapDifficulty
::GlobalNamespace::BeatmapDifficulty GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_beatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.set_beatmapDifficulty
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_beatmapDifficulty(::GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_beatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmapDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.get_difficultyBeatmap
::GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_difficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.set_difficultyBeatmap
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_difficultyBeatmap(::GlobalNamespace::IDifficultyBeatmap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_difficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_difficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.get_beatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.set_beatmapCharacteristic
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_beatmapCharacteristic(::GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.get_usingOverrideColorScheme
bool GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_usingOverrideColorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_usingOverrideColorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_usingOverrideColorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.set_usingOverrideColorScheme
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_usingOverrideColorScheme(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_usingOverrideColorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_usingOverrideColorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.get_colorScheme
::GlobalNamespace::ColorScheme* GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_colorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ColorScheme*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.set_colorScheme
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_colorScheme(::GlobalNamespace::ColorScheme* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_colorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::add_didFinishEvent(::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MultiplayerResultsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::remove_didFinishEvent(::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MultiplayerResultsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.add_didDisconnectEvent
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::add_didDisconnectEvent(::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::add_didDisconnectEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didDisconnectEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.remove_didDisconnectEvent
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::remove_didDisconnectEvent(::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::remove_didDisconnectEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didDisconnectEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.Init
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::Init(::StringW gameMode, ::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, ::GlobalNamespace::BeatmapDifficulty beatmapDifficulty, ::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::GlobalNamespace::ColorScheme* overrideColorScheme, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, ::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, ::GlobalNamespace::PracticeSettings* practiceSettings, bool useTestNoteCutSoundEffects) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameMode), ::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(beatmapDifficulty), ::il2cpp_utils::ExtractType(beatmapCharacteristic), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(overrideColorScheme), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(playerSpecificSettings), ::il2cpp_utils::ExtractType(practiceSettings), ::il2cpp_utils::ExtractType(useTestNoteCutSoundEffects)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameMode, previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, difficultyBeatmap, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, useTestNoteCutSoundEffects);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.Finish
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::Finish(::GlobalNamespace::MultiplayerResultsData* resultsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultsData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resultsData);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.FinishWithDisconnect
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::FinishWithDisconnect(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::FinishWithDisconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishWithDisconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightScenesTransitionSetupDataSO
#include "GlobalNamespace/PatternFightScenesTransitionSetupDataSO.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: SceneInfo
#include "GlobalNamespace/SceneInfo.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private EnvironmentInfoSO _environmentInfo
::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::PatternFightScenesTransitionSetupDataSO::dyn__environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::dyn__environmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SceneInfo _patternFightSceneInfo
::GlobalNamespace::SceneInfo*& GlobalNamespace::PatternFightScenesTransitionSetupDataSO::dyn__patternFightSceneInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::dyn__patternFightSceneInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_patternFightSceneInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SceneInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SceneInfo _gameCoreSceneInfo
::GlobalNamespace::SceneInfo*& GlobalNamespace::PatternFightScenesTransitionSetupDataSO::dyn__gameCoreSceneInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::dyn__gameCoreSceneInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameCoreSceneInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SceneInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<PatternFightScenesTransitionSetupDataSO,PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType> didFinishEvent
::System::Action_2<::GlobalNamespace::PatternFightScenesTransitionSetupDataSO*, ::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType>*& GlobalNamespace::PatternFightScenesTransitionSetupDataSO::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::PatternFightScenesTransitionSetupDataSO*, ::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PatternFightScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::PatternFightScenesTransitionSetupDataSO::add_didFinishEvent(::System::Action_2<::GlobalNamespace::PatternFightScenesTransitionSetupDataSO*, ::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PatternFightScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::PatternFightScenesTransitionSetupDataSO::remove_didFinishEvent(::System::Action_2<::GlobalNamespace::PatternFightScenesTransitionSetupDataSO*, ::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PatternFightScenesTransitionSetupDataSO.Init
void GlobalNamespace::PatternFightScenesTransitionSetupDataSO::Init(::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerSpecificSettings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerSpecificSettings);
}
// Autogenerated method: PatternFightScenesTransitionSetupDataSO.Finish
void GlobalNamespace::PatternFightScenesTransitionSetupDataSO::Finish(::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType endState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, endState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType
#include "GlobalNamespace/PatternFightScenesTransitionSetupDataSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType Completed
::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_get_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType>("", "PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType", "Completed"));
}
// Autogenerated static field setter
// Set static field: static public PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType Completed
void GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_set_Completed(::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType", "Completed", value));
}
// Autogenerated static field getter
// Get static field: static public PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType ReturnToMenu
::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_get_ReturnToMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_get_ReturnToMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType>("", "PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType", "ReturnToMenu"));
}
// Autogenerated static field setter
// Set static field: static public PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType ReturnToMenu
void GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_set_ReturnToMenu(::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_set_ReturnToMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType", "ReturnToMenu", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShaderWarmupScenesTransitionSetupDataSO
#include "GlobalNamespace/ShaderWarmupScenesTransitionSetupDataSO.hpp"
// Including type: ShaderWarmupSceneSetupData
#include "GlobalNamespace/ShaderWarmupSceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ShaderWarmupScenesTransitionSetupDataSO.Init
void GlobalNamespace::ShaderWarmupScenesTransitionSetupDataSO::Init(::GlobalNamespace::ShaderWarmupSceneSetupData* shaderWarmupSceneSetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShaderWarmupScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shaderWarmupSceneSetupData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shaderWarmupSceneSetupData);
}
