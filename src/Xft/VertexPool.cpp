// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Xft.VertexPool
#include "Xft\VertexPool.hpp"
// Including type: Xft.VertexPool/VertexSegment
#include "Xft\VertexPool_VertexSegment.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine\Vector3.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine\Vector2.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine\Color.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine\Mesh.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 _blockSize
int Xft::VertexPool::_get__blockSize() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Xft", "VertexPool", "_blockSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _blockSize
void Xft::VertexPool::_set__blockSize(int value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Xft", "VertexPool", "_blockSize", value));
}
// Autogenerated method: Xft.VertexPool..ctor
Xft::VertexPool* Xft::VertexPool::New_ctor(UnityEngine::Mesh* mesh) {
  return (VertexPool*)THROW_UNLESS(il2cpp_utils::New("Xft", "VertexPool", mesh));
}
// Autogenerated method: Xft.VertexPool.GetVertices
Xft::VertexPool::VertexSegment* Xft::VertexPool::GetVertices(int vcount, int icount) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Xft::VertexPool::VertexSegment*>(this, "GetVertices", vcount, icount));
}
// Autogenerated method: Xft.VertexPool.EnlargeArrays
void Xft::VertexPool::EnlargeArrays(int count, int icount) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "EnlargeArrays", count, icount));
}
// Autogenerated method: Xft.VertexPool.ManualUpdate
void Xft::VertexPool::ManualUpdate(float deltaTime) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ManualUpdate", deltaTime));
}
