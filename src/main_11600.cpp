// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Input
#include "UnityEngine/Input.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.IMECompositionMode
#include "UnityEngine/IMECompositionMode.hpp"
// Including type: UnityEngine.KeyCode
#include "UnityEngine/KeyCode.hpp"
// Including type: UnityEngine.Touch
#include "UnityEngine/Touch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Input.get_anyKeyDown
bool UnityEngine::Input::get_anyKeyDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::get_anyKeyDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "get_anyKeyDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Input.get_mousePosition
::UnityEngine::Vector3 UnityEngine::Input::get_mousePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::get_mousePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "get_mousePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Input.get_mouseScrollDelta
::UnityEngine::Vector2 UnityEngine::Input::get_mouseScrollDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::get_mouseScrollDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "get_mouseScrollDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Input.get_imeCompositionMode
::UnityEngine::IMECompositionMode UnityEngine::Input::get_imeCompositionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::get_imeCompositionMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "get_imeCompositionMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::IMECompositionMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Input.set_imeCompositionMode
void UnityEngine::Input::set_imeCompositionMode(::UnityEngine::IMECompositionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::set_imeCompositionMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "set_imeCompositionMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Input.get_compositionString
::StringW UnityEngine::Input::get_compositionString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::get_compositionString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "get_compositionString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Input.get_compositionCursorPos
::UnityEngine::Vector2 UnityEngine::Input::get_compositionCursorPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::get_compositionCursorPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "get_compositionCursorPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Input.set_compositionCursorPos
void UnityEngine::Input::set_compositionCursorPos(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::set_compositionCursorPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "set_compositionCursorPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Input.get_mousePresent
bool UnityEngine::Input::get_mousePresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::get_mousePresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "get_mousePresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Input.get_touchCount
int UnityEngine::Input::get_touchCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::get_touchCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "get_touchCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Input.get_touchSupported
bool UnityEngine::Input::get_touchSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::get_touchSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "get_touchSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Input.GetKeyInt
bool UnityEngine::Input::GetKeyInt(::UnityEngine::KeyCode key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::GetKeyInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "GetKeyInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: UnityEngine.Input.GetKeyUpInt
bool UnityEngine::Input::GetKeyUpInt(::UnityEngine::KeyCode key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::GetKeyUpInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "GetKeyUpInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: UnityEngine.Input.GetKeyDownInt
bool UnityEngine::Input::GetKeyDownInt(::UnityEngine::KeyCode key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::GetKeyDownInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "GetKeyDownInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: UnityEngine.Input.GetKeyDownString
bool UnityEngine::Input::GetKeyDownString(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::GetKeyDownString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "GetKeyDownString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Input.GetAxis
float UnityEngine::Input::GetAxis(::StringW axisName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::GetAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "GetAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axisName)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, axisName);
}
// Autogenerated method: UnityEngine.Input.GetAxisRaw
float UnityEngine::Input::GetAxisRaw(::StringW axisName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::GetAxisRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "GetAxisRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axisName)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, axisName);
}
// Autogenerated method: UnityEngine.Input.GetButton
bool UnityEngine::Input::GetButton(::StringW buttonName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::GetButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "GetButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buttonName);
}
// Autogenerated method: UnityEngine.Input.GetButtonDown
bool UnityEngine::Input::GetButtonDown(::StringW buttonName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::GetButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "GetButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buttonName);
}
// Autogenerated method: UnityEngine.Input.GetMouseButton
bool UnityEngine::Input::GetMouseButton(int button) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::GetMouseButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "GetMouseButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, button);
}
// Autogenerated method: UnityEngine.Input.GetMouseButtonDown
bool UnityEngine::Input::GetMouseButtonDown(int button) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::GetMouseButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "GetMouseButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, button);
}
// Autogenerated method: UnityEngine.Input.GetMouseButtonUp
bool UnityEngine::Input::GetMouseButtonUp(int button) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::GetMouseButtonUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "GetMouseButtonUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, button);
}
// Autogenerated method: UnityEngine.Input.GetTouch
::UnityEngine::Touch UnityEngine::Input::GetTouch(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::GetTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "GetTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Touch, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index);
}
// Autogenerated method: UnityEngine.Input.GetKey
bool UnityEngine::Input::GetKey(::UnityEngine::KeyCode key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: UnityEngine.Input.GetKeyUp
bool UnityEngine::Input::GetKeyUp(::UnityEngine::KeyCode key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::GetKeyUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "GetKeyUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: UnityEngine.Input.GetKeyDown
bool UnityEngine::Input::GetKeyDown(::UnityEngine::KeyCode key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::GetKeyDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "GetKeyDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: UnityEngine.Input.GetKeyDown
bool UnityEngine::Input::GetKeyDown(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::GetKeyDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "GetKeyDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Input.GetTouch_Injected
void UnityEngine::Input::GetTouch_Injected(int index, ByRef<::UnityEngine::Touch> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::GetTouch_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "GetTouch_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Touch&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index, byref(ret));
}
// Autogenerated method: UnityEngine.Input.get_mousePosition_Injected
void UnityEngine::Input::get_mousePosition_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::get_mousePosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "get_mousePosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Input.get_mouseScrollDelta_Injected
void UnityEngine::Input::get_mouseScrollDelta_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::get_mouseScrollDelta_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "get_mouseScrollDelta_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Input.get_compositionCursorPos_Injected
void UnityEngine::Input::get_compositionCursorPos_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::get_compositionCursorPos_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "get_compositionCursorPos_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Input.set_compositionCursorPos_Injected
void UnityEngine::Input::set_compositionCursorPos_Injected(ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Input::set_compositionCursorPos_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Input", "set_compositionCursorPos_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SendMouseEvents
#include "UnityEngine/SendMouseEvents.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean s_MouseUsed
bool UnityEngine::SendMouseEvents::_get_s_MouseUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMouseEvents::_get_s_MouseUsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngine", "SendMouseEvents", "s_MouseUsed"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_MouseUsed
void UnityEngine::SendMouseEvents::_set_s_MouseUsed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMouseEvents::_set_s_MouseUsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SendMouseEvents", "s_MouseUsed", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.SendMouseEvents/UnityEngine.HitInfo[] m_LastHit
::ArrayW<::UnityEngine::SendMouseEvents::HitInfo> UnityEngine::SendMouseEvents::_get_m_LastHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMouseEvents::_get_m_LastHit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::SendMouseEvents::HitInfo>>("UnityEngine", "SendMouseEvents", "m_LastHit"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.SendMouseEvents/UnityEngine.HitInfo[] m_LastHit
void UnityEngine::SendMouseEvents::_set_m_LastHit(::ArrayW<::UnityEngine::SendMouseEvents::HitInfo> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMouseEvents::_set_m_LastHit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SendMouseEvents", "m_LastHit", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.SendMouseEvents/UnityEngine.HitInfo[] m_MouseDownHit
::ArrayW<::UnityEngine::SendMouseEvents::HitInfo> UnityEngine::SendMouseEvents::_get_m_MouseDownHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMouseEvents::_get_m_MouseDownHit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::SendMouseEvents::HitInfo>>("UnityEngine", "SendMouseEvents", "m_MouseDownHit"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.SendMouseEvents/UnityEngine.HitInfo[] m_MouseDownHit
void UnityEngine::SendMouseEvents::_set_m_MouseDownHit(::ArrayW<::UnityEngine::SendMouseEvents::HitInfo> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMouseEvents::_set_m_MouseDownHit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SendMouseEvents", "m_MouseDownHit", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.SendMouseEvents/UnityEngine.HitInfo[] m_CurrentHit
::ArrayW<::UnityEngine::SendMouseEvents::HitInfo> UnityEngine::SendMouseEvents::_get_m_CurrentHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMouseEvents::_get_m_CurrentHit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::SendMouseEvents::HitInfo>>("UnityEngine", "SendMouseEvents", "m_CurrentHit"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.SendMouseEvents/UnityEngine.HitInfo[] m_CurrentHit
void UnityEngine::SendMouseEvents::_set_m_CurrentHit(::ArrayW<::UnityEngine::SendMouseEvents::HitInfo> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMouseEvents::_set_m_CurrentHit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SendMouseEvents", "m_CurrentHit", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Camera[] m_Cameras
::ArrayW<::UnityEngine::Camera*> UnityEngine::SendMouseEvents::_get_m_Cameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMouseEvents::_get_m_Cameras");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Camera*>>("UnityEngine", "SendMouseEvents", "m_Cameras"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Camera[] m_Cameras
void UnityEngine::SendMouseEvents::_set_m_Cameras(::ArrayW<::UnityEngine::Camera*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMouseEvents::_set_m_Cameras");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SendMouseEvents", "m_Cameras", value));
}
// Autogenerated method: UnityEngine.SendMouseEvents..cctor
void UnityEngine::SendMouseEvents::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMouseEvents::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SendMouseEvents", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SendMouseEvents.SetMouseMoved
void UnityEngine::SendMouseEvents::SetMouseMoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMouseEvents::SetMouseMoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SendMouseEvents", "SetMouseMoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SendMouseEvents.DoSendMouseEvents
void UnityEngine::SendMouseEvents::DoSendMouseEvents(int skipRTCameras) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMouseEvents::DoSendMouseEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SendMouseEvents", "DoSendMouseEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skipRTCameras)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skipRTCameras);
}
// Autogenerated method: UnityEngine.SendMouseEvents.SendEvents
void UnityEngine::SendMouseEvents::SendEvents(int i, ::UnityEngine::SendMouseEvents::HitInfo hit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMouseEvents::SendEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SendMouseEvents", "SendEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(hit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i, hit);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SendMouseEvents/UnityEngine.HitInfo
#include "UnityEngine/SendMouseEvents.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject target
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::SendMouseEvents::HitInfo::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMouseEvents::HitInfo::dyn_target");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Camera camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& UnityEngine::SendMouseEvents::HitInfo::dyn_camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMouseEvents::HitInfo::dyn_camera");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.SendMouseEvents/UnityEngine.HitInfo.SendMessage
void UnityEngine::SendMouseEvents::HitInfo::SendMessage(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMouseEvents::HitInfo::SendMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.SendMouseEvents/UnityEngine.HitInfo.Compare
bool UnityEngine::SendMouseEvents::HitInfo::Compare(::UnityEngine::SendMouseEvents::HitInfo lhs, ::UnityEngine::SendMouseEvents::HitInfo rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SendMouseEvents::HitInfo::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SendMouseEvents/HitInfo", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngineInternal.Input.NativeUpdateCallback
#include "UnityEngineInternal/Input/NativeUpdateCallback.hpp"
// Including type: UnityEngineInternal.Input.NativeInputUpdateType
#include "UnityEngineInternal/Input/NativeInputUpdateType.hpp"
// Including type: UnityEngineInternal.Input.NativeInputEventBuffer
#include "UnityEngineInternal/Input/NativeInputEventBuffer.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngineInternal.Input.NativeUpdateCallback.Invoke
void UnityEngineInternal::Input::NativeUpdateCallback::Invoke(::UnityEngineInternal::Input::NativeInputUpdateType updateType, ::UnityEngineInternal::Input::NativeInputEventBuffer* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeUpdateCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateType), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateType, buffer);
}
// Autogenerated method: UnityEngineInternal.Input.NativeUpdateCallback.BeginInvoke
::System::IAsyncResult* UnityEngineInternal::Input::NativeUpdateCallback::BeginInvoke(::UnityEngineInternal::Input::NativeInputUpdateType updateType, ::UnityEngineInternal::Input::NativeInputEventBuffer* buffer, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeUpdateCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateType), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, updateType, buffer, callback, object);
}
// Autogenerated method: UnityEngineInternal.Input.NativeUpdateCallback.EndInvoke
void UnityEngineInternal::Input::NativeUpdateCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeUpdateCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngineInternal.Input.NativeInputUpdateType
#include "UnityEngineInternal/Input/NativeInputUpdateType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngineInternal.Input.NativeInputUpdateType Dynamic
::UnityEngineInternal::Input::NativeInputUpdateType UnityEngineInternal::Input::NativeInputUpdateType::_get_Dynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputUpdateType::_get_Dynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngineInternal::Input::NativeInputUpdateType>("UnityEngineInternal.Input", "NativeInputUpdateType", "Dynamic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngineInternal.Input.NativeInputUpdateType Dynamic
void UnityEngineInternal::Input::NativeInputUpdateType::_set_Dynamic(::UnityEngineInternal::Input::NativeInputUpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputUpdateType::_set_Dynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal.Input", "NativeInputUpdateType", "Dynamic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngineInternal.Input.NativeInputUpdateType Fixed
::UnityEngineInternal::Input::NativeInputUpdateType UnityEngineInternal::Input::NativeInputUpdateType::_get_Fixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputUpdateType::_get_Fixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngineInternal::Input::NativeInputUpdateType>("UnityEngineInternal.Input", "NativeInputUpdateType", "Fixed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngineInternal.Input.NativeInputUpdateType Fixed
void UnityEngineInternal::Input::NativeInputUpdateType::_set_Fixed(::UnityEngineInternal::Input::NativeInputUpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputUpdateType::_set_Fixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal.Input", "NativeInputUpdateType", "Fixed", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngineInternal.Input.NativeInputUpdateType BeforeRender
::UnityEngineInternal::Input::NativeInputUpdateType UnityEngineInternal::Input::NativeInputUpdateType::_get_BeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputUpdateType::_get_BeforeRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngineInternal::Input::NativeInputUpdateType>("UnityEngineInternal.Input", "NativeInputUpdateType", "BeforeRender"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngineInternal.Input.NativeInputUpdateType BeforeRender
void UnityEngineInternal::Input::NativeInputUpdateType::_set_BeforeRender(::UnityEngineInternal::Input::NativeInputUpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputUpdateType::_set_BeforeRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal.Input", "NativeInputUpdateType", "BeforeRender", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngineInternal.Input.NativeInputUpdateType Editor
::UnityEngineInternal::Input::NativeInputUpdateType UnityEngineInternal::Input::NativeInputUpdateType::_get_Editor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputUpdateType::_get_Editor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngineInternal::Input::NativeInputUpdateType>("UnityEngineInternal.Input", "NativeInputUpdateType", "Editor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngineInternal.Input.NativeInputUpdateType Editor
void UnityEngineInternal::Input::NativeInputUpdateType::_set_Editor(::UnityEngineInternal::Input::NativeInputUpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputUpdateType::_set_Editor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal.Input", "NativeInputUpdateType", "Editor", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngineInternal.Input.NativeInputUpdateType IgnoreFocus
::UnityEngineInternal::Input::NativeInputUpdateType UnityEngineInternal::Input::NativeInputUpdateType::_get_IgnoreFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputUpdateType::_get_IgnoreFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngineInternal::Input::NativeInputUpdateType>("UnityEngineInternal.Input", "NativeInputUpdateType", "IgnoreFocus"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngineInternal.Input.NativeInputUpdateType IgnoreFocus
void UnityEngineInternal::Input::NativeInputUpdateType::_set_IgnoreFocus(::UnityEngineInternal::Input::NativeInputUpdateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputUpdateType::_set_IgnoreFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal.Input", "NativeInputUpdateType", "IgnoreFocus", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngineInternal::Input::NativeInputUpdateType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputUpdateType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngineInternal.Input.NativeInputSystem
#include "UnityEngineInternal/Input/NativeInputSystem.hpp"
// Including type: UnityEngineInternal.Input.NativeUpdateCallback
#include "UnityEngineInternal/Input/NativeUpdateCallback.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngineInternal.Input.NativeUpdateCallback onUpdate
::UnityEngineInternal::Input::NativeUpdateCallback* UnityEngineInternal::Input::NativeInputSystem::_get_onUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputSystem::_get_onUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngineInternal::Input::NativeUpdateCallback*>("UnityEngineInternal.Input", "NativeInputSystem", "onUpdate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngineInternal.Input.NativeUpdateCallback onUpdate
void UnityEngineInternal::Input::NativeInputSystem::_set_onUpdate(::UnityEngineInternal::Input::NativeUpdateCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputSystem::_set_onUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal.Input", "NativeInputSystem", "onUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<UnityEngineInternal.Input.NativeInputUpdateType> onBeforeUpdate
::System::Action_1<::UnityEngineInternal::Input::NativeInputUpdateType>* UnityEngineInternal::Input::NativeInputSystem::_get_onBeforeUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputSystem::_get_onBeforeUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngineInternal::Input::NativeInputUpdateType>*>("UnityEngineInternal.Input", "NativeInputSystem", "onBeforeUpdate"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<UnityEngineInternal.Input.NativeInputUpdateType> onBeforeUpdate
void UnityEngineInternal::Input::NativeInputSystem::_set_onBeforeUpdate(::System::Action_1<::UnityEngineInternal::Input::NativeInputUpdateType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputSystem::_set_onBeforeUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal.Input", "NativeInputSystem", "onBeforeUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngineInternal.Input.NativeInputUpdateType,System.Boolean> onShouldRunUpdate
::System::Func_2<::UnityEngineInternal::Input::NativeInputUpdateType, bool>* UnityEngineInternal::Input::NativeInputSystem::_get_onShouldRunUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputSystem::_get_onShouldRunUpdate");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngineInternal::Input::NativeInputUpdateType, bool>*>("UnityEngineInternal.Input", "NativeInputSystem", "onShouldRunUpdate")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngineInternal.Input.NativeInputUpdateType,System.Boolean> onShouldRunUpdate
void UnityEngineInternal::Input::NativeInputSystem::_set_onShouldRunUpdate(::System::Func_2<::UnityEngineInternal::Input::NativeInputUpdateType, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputSystem::_set_onShouldRunUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal.Input", "NativeInputSystem", "onShouldRunUpdate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`2<System.Int32,System.String> s_OnDeviceDiscoveredCallback
::System::Action_2<int, ::StringW>* UnityEngineInternal::Input::NativeInputSystem::_get_s_OnDeviceDiscoveredCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputSystem::_get_s_OnDeviceDiscoveredCallback");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<int, ::StringW>*>("UnityEngineInternal.Input", "NativeInputSystem", "s_OnDeviceDiscoveredCallback")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<System.Int32,System.String> s_OnDeviceDiscoveredCallback
void UnityEngineInternal::Input::NativeInputSystem::_set_s_OnDeviceDiscoveredCallback(::System::Action_2<int, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputSystem::_set_s_OnDeviceDiscoveredCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngineInternal.Input", "NativeInputSystem", "s_OnDeviceDiscoveredCallback", value));
}
// Autogenerated method: UnityEngineInternal.Input.NativeInputSystem.set_hasDeviceDiscoveredCallback
void UnityEngineInternal::Input::NativeInputSystem::set_hasDeviceDiscoveredCallback(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputSystem::set_hasDeviceDiscoveredCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngineInternal.Input", "NativeInputSystem", "set_hasDeviceDiscoveredCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngineInternal.Input.NativeInputSystem..cctor
void UnityEngineInternal::Input::NativeInputSystem::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputSystem::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngineInternal.Input", "NativeInputSystem", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngineInternal.Input.NativeInputSystem.NotifyBeforeUpdate
void UnityEngineInternal::Input::NativeInputSystem::NotifyBeforeUpdate(::UnityEngineInternal::Input::NativeInputUpdateType updateType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputSystem::NotifyBeforeUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngineInternal.Input", "NativeInputSystem", "NotifyBeforeUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, updateType);
}
// Autogenerated method: UnityEngineInternal.Input.NativeInputSystem.NotifyUpdate
void UnityEngineInternal::Input::NativeInputSystem::NotifyUpdate(::UnityEngineInternal::Input::NativeInputUpdateType updateType, ::System::IntPtr eventBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputSystem::NotifyUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngineInternal.Input", "NativeInputSystem", "NotifyUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateType), ::il2cpp_utils::ExtractType(eventBuffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, updateType, eventBuffer);
}
// Autogenerated method: UnityEngineInternal.Input.NativeInputSystem.NotifyDeviceDiscovered
void UnityEngineInternal::Input::NativeInputSystem::NotifyDeviceDiscovered(int deviceId, ::StringW deviceDescriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputSystem::NotifyDeviceDiscovered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngineInternal.Input", "NativeInputSystem", "NotifyDeviceDiscovered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceId), ::il2cpp_utils::ExtractType(deviceDescriptor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceId, deviceDescriptor);
}
// Autogenerated method: UnityEngineInternal.Input.NativeInputSystem.ShouldRunUpdate
void UnityEngineInternal::Input::NativeInputSystem::ShouldRunUpdate(::UnityEngineInternal::Input::NativeInputUpdateType updateType, ByRef<bool> retval) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngineInternal::Input::NativeInputSystem::ShouldRunUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngineInternal.Input", "NativeInputSystem", "ShouldRunUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateType), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, updateType, byref(retval));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.JsonUtility
#include "UnityEngine/JsonUtility.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.JsonUtility.ToJsonInternal
::StringW UnityEngine::JsonUtility::ToJsonInternal(::Il2CppObject* obj, bool prettyPrint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::JsonUtility::ToJsonInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "JsonUtility", "ToJsonInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prettyPrint)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, prettyPrint);
}
// Autogenerated method: UnityEngine.JsonUtility.FromJsonInternal
::Il2CppObject* UnityEngine::JsonUtility::FromJsonInternal(::StringW json, ::Il2CppObject* objectToOverwrite, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::JsonUtility::FromJsonInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "JsonUtility", "FromJsonInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json), ::il2cpp_utils::ExtractType(objectToOverwrite), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json, objectToOverwrite, type);
}
// Autogenerated method: UnityEngine.JsonUtility.ToJson
::StringW UnityEngine::JsonUtility::ToJson(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::JsonUtility::ToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "JsonUtility", "ToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.JsonUtility.ToJson
::StringW UnityEngine::JsonUtility::ToJson(::Il2CppObject* obj, bool prettyPrint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::JsonUtility::ToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "JsonUtility", "ToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prettyPrint)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, prettyPrint);
}
// Autogenerated method: UnityEngine.JsonUtility.FromJson
::Il2CppObject* UnityEngine::JsonUtility::FromJson(::StringW json, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::JsonUtility::FromJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "JsonUtility", "FromJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.ParticleSystem/UnityEngine.MainModule
#include "UnityEngine/ParticleSystem_MainModule.hpp"
// Including type: UnityEngine.ParticleSystem/UnityEngine.EmissionModule
#include "UnityEngine/ParticleSystem_EmissionModule.hpp"
// Including type: UnityEngine.ParticleSystem/UnityEngine.ShapeModule
#include "UnityEngine/ParticleSystem_ShapeModule.hpp"
// Including type: UnityEngine.ParticleSystem/UnityEngine.SubEmittersModule
#include "UnityEngine/ParticleSystem_SubEmittersModule.hpp"
// Including type: UnityEngine.ParticleSystemStopBehavior
#include "UnityEngine/ParticleSystemStopBehavior.hpp"
// Including type: UnityEngine.ParticleSystem/UnityEngine.MinMaxCurve
#include "UnityEngine/ParticleSystem_MinMaxCurve.hpp"
// Including type: UnityEngine.ParticleSystem/UnityEngine.MinMaxGradient
#include "UnityEngine/ParticleSystem_MinMaxGradient.hpp"
// Including type: UnityEngine.ParticleSystem/UnityEngine.EmitParams
#include "UnityEngine/ParticleSystem_EmitParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ParticleSystem.get_particleCount
int UnityEngine::ParticleSystem::get_particleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::get_particleCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_particleCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem.get_time
float UnityEngine::ParticleSystem::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem.set_randomSeed
void UnityEngine::ParticleSystem::set_randomSeed(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::set_randomSeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_randomSeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem.get_useAutoRandomSeed
bool UnityEngine::ParticleSystem::get_useAutoRandomSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::get_useAutoRandomSeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useAutoRandomSeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem.set_useAutoRandomSeed
void UnityEngine::ParticleSystem::set_useAutoRandomSeed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::set_useAutoRandomSeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useAutoRandomSeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem.get_main
::UnityEngine::ParticleSystem::MainModule UnityEngine::ParticleSystem::get_main() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::get_main");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_main", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystem::MainModule, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem.get_emission
::UnityEngine::ParticleSystem::EmissionModule UnityEngine::ParticleSystem::get_emission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::get_emission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_emission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystem::EmissionModule, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem.get_shape
::UnityEngine::ParticleSystem::ShapeModule UnityEngine::ParticleSystem::get_shape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::get_shape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystem::ShapeModule, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem.get_subEmitters
::UnityEngine::ParticleSystem::SubEmittersModule UnityEngine::ParticleSystem::get_subEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::get_subEmitters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_subEmitters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystem::SubEmittersModule, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem.Emit
void UnityEngine::ParticleSystem::Emit(::UnityEngine::Vector3 position, ::UnityEngine::Vector3 velocity, float size, float lifetime, ::UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Emit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(lifetime), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, velocity, size, lifetime, color);
}
// Autogenerated method: UnityEngine.ParticleSystem.Emit
void UnityEngine::ParticleSystem::Emit(::UnityEngine::ParticleSystem::Particle particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Emit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, particle);
}
// Autogenerated method: UnityEngine.ParticleSystem.SetParticles
void UnityEngine::ParticleSystem::SetParticles(ByRef<::ArrayW<::UnityEngine::ParticleSystem::Particle>> particles, int size, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::SetParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::UnityEngine::ParticleSystem::Particle>&>(), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(particles), size, offset);
}
// Autogenerated method: UnityEngine.ParticleSystem.SetParticles
void UnityEngine::ParticleSystem::SetParticles(ByRef<::ArrayW<::UnityEngine::ParticleSystem::Particle>> particles, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::SetParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::UnityEngine::ParticleSystem::Particle>&>(), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(particles), size);
}
// Autogenerated method: UnityEngine.ParticleSystem.GetParticles
int UnityEngine::ParticleSystem::GetParticles(ByRef<::ArrayW<::UnityEngine::ParticleSystem::Particle>> particles, int size, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::GetParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::UnityEngine::ParticleSystem::Particle>&>(), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(particles), size, offset);
}
// Autogenerated method: UnityEngine.ParticleSystem.GetParticles
int UnityEngine::ParticleSystem::GetParticles(ByRef<::ArrayW<::UnityEngine::ParticleSystem::Particle>> particles, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::GetParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::UnityEngine::ParticleSystem::Particle>&>(), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(particles), size);
}
// Autogenerated method: UnityEngine.ParticleSystem.Simulate
void UnityEngine::ParticleSystem::Simulate(float t, bool withChildren, bool restart, bool fixedTimeStep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Simulate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Simulate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(withChildren), ::il2cpp_utils::ExtractType(restart), ::il2cpp_utils::ExtractType(fixedTimeStep)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t, withChildren, restart, fixedTimeStep);
}
// Autogenerated method: UnityEngine.ParticleSystem.Simulate
void UnityEngine::ParticleSystem::Simulate(float t, bool withChildren, bool restart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Simulate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Simulate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(withChildren), ::il2cpp_utils::ExtractType(restart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t, withChildren, restart);
}
// Autogenerated method: UnityEngine.ParticleSystem.Play
void UnityEngine::ParticleSystem::Play(bool withChildren) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(withChildren)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, withChildren);
}
// Autogenerated method: UnityEngine.ParticleSystem.Play
void UnityEngine::ParticleSystem::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem.Pause
void UnityEngine::ParticleSystem::Pause(bool withChildren) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(withChildren)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, withChildren);
}
// Autogenerated method: UnityEngine.ParticleSystem.Pause
void UnityEngine::ParticleSystem::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem.Stop
void UnityEngine::ParticleSystem::Stop(bool withChildren, ::UnityEngine::ParticleSystemStopBehavior stopBehavior) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(withChildren), ::il2cpp_utils::ExtractType(stopBehavior)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, withChildren, stopBehavior);
}
// Autogenerated method: UnityEngine.ParticleSystem.Stop
void UnityEngine::ParticleSystem::Stop(bool withChildren) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(withChildren)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, withChildren);
}
// Autogenerated method: UnityEngine.ParticleSystem.Stop
void UnityEngine::ParticleSystem::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem.Clear
void UnityEngine::ParticleSystem::Clear(bool withChildren) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(withChildren)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, withChildren);
}
// Autogenerated method: UnityEngine.ParticleSystem.Clear
void UnityEngine::ParticleSystem::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem.Emit
void UnityEngine::ParticleSystem::Emit(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Emit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: UnityEngine.ParticleSystem.Emit_Internal
void UnityEngine::ParticleSystem::Emit_Internal(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Emit_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Emit_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: UnityEngine.ParticleSystem.Emit
void UnityEngine::ParticleSystem::Emit(::UnityEngine::ParticleSystem::EmitParams emitParams, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Emit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitParams), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, emitParams, count);
}
// Autogenerated method: UnityEngine.ParticleSystem.EmitOld_Internal
void UnityEngine::ParticleSystem::EmitOld_Internal(ByRef<::UnityEngine::ParticleSystem::Particle> particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmitOld_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EmitOld_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(particle));
}
// Autogenerated method: UnityEngine.ParticleSystem.Emit_Injected
void UnityEngine::ParticleSystem::Emit_Injected(ByRef<::UnityEngine::ParticleSystem::EmitParams> emitParams, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Emit_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Emit_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitParams), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(emitParams), count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystem/UnityEngine.MainModule
#include "UnityEngine/ParticleSystem_MainModule.hpp"
// Including type: UnityEngine.ParticleSystem/UnityEngine.MinMaxCurve
#include "UnityEngine/ParticleSystem_MinMaxCurve.hpp"
// Including type: UnityEngine.ParticleSystem/UnityEngine.MinMaxGradient
#include "UnityEngine/ParticleSystem_MinMaxGradient.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.ParticleSystem m_ParticleSystem
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& UnityEngine::ParticleSystem::MainModule::dyn_m_ParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::dyn_m_ParticleSystem");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ParticleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.get_duration
float UnityEngine::ParticleSystem::MainModule::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::get_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.get_loop
bool UnityEngine::ParticleSystem::MainModule::get_loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::get_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.set_startLifetime
void UnityEngine::ParticleSystem::MainModule::set_startLifetime(::UnityEngine::ParticleSystem::MinMaxCurve value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::set_startLifetime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_startLifetime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.set_startSpeed
void UnityEngine::ParticleSystem::MainModule::set_startSpeed(::UnityEngine::ParticleSystem::MinMaxCurve value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::set_startSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_startSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.get_startSpeedMultiplier
float UnityEngine::ParticleSystem::MainModule::get_startSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::get_startSpeedMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_startSpeedMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.set_startSpeedMultiplier
void UnityEngine::ParticleSystem::MainModule::set_startSpeedMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::set_startSpeedMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_startSpeedMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.get_startColor
::UnityEngine::ParticleSystem::MinMaxGradient UnityEngine::ParticleSystem::MainModule::get_startColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::get_startColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_startColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystem::MinMaxGradient, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.set_startColor
void UnityEngine::ParticleSystem::MainModule::set_startColor(::UnityEngine::ParticleSystem::MinMaxGradient value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::set_startColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_startColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.set_simulationSpeed
void UnityEngine::ParticleSystem::MainModule::set_simulationSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::set_simulationSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_simulationSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.get_maxParticles
int UnityEngine::ParticleSystem::MainModule::get_maxParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::get_maxParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_maxParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.set_maxParticles
void UnityEngine::ParticleSystem::MainModule::set_maxParticles(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::set_maxParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maxParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule..ctor
// ABORTED elsewhere.  UnityEngine::ParticleSystem::MainModule::MainModule(::UnityEngine::ParticleSystem* particleSystem)
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.get_duration_Injected
float UnityEngine::ParticleSystem::MainModule::get_duration_Injected(ByRef<::UnityEngine::ParticleSystem::MainModule> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::get_duration_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ParticleSystem/MainModule", "get_duration_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.get_loop_Injected
bool UnityEngine::ParticleSystem::MainModule::get_loop_Injected(ByRef<::UnityEngine::ParticleSystem::MainModule> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::get_loop_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ParticleSystem/MainModule", "get_loop_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.set_startLifetime_Injected
void UnityEngine::ParticleSystem::MainModule::set_startLifetime_Injected(ByRef<::UnityEngine::ParticleSystem::MainModule> _unity_self, ByRef<::UnityEngine::ParticleSystem::MinMaxCurve> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::set_startLifetime_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ParticleSystem/MainModule", "set_startLifetime_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(value));
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.set_startSpeed_Injected
void UnityEngine::ParticleSystem::MainModule::set_startSpeed_Injected(ByRef<::UnityEngine::ParticleSystem::MainModule> _unity_self, ByRef<::UnityEngine::ParticleSystem::MinMaxCurve> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::set_startSpeed_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ParticleSystem/MainModule", "set_startSpeed_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(value));
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.get_startSpeedMultiplier_Injected
float UnityEngine::ParticleSystem::MainModule::get_startSpeedMultiplier_Injected(ByRef<::UnityEngine::ParticleSystem::MainModule> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::get_startSpeedMultiplier_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ParticleSystem/MainModule", "get_startSpeedMultiplier_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.set_startSpeedMultiplier_Injected
void UnityEngine::ParticleSystem::MainModule::set_startSpeedMultiplier_Injected(ByRef<::UnityEngine::ParticleSystem::MainModule> _unity_self, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::set_startSpeedMultiplier_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ParticleSystem/MainModule", "set_startSpeedMultiplier_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.get_startColor_Injected
void UnityEngine::ParticleSystem::MainModule::get_startColor_Injected(ByRef<::UnityEngine::ParticleSystem::MainModule> _unity_self, ByRef<::UnityEngine::ParticleSystem::MinMaxGradient> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::get_startColor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ParticleSystem/MainModule", "get_startColor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::ParticleSystem::MinMaxGradient&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(ret));
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.set_startColor_Injected
void UnityEngine::ParticleSystem::MainModule::set_startColor_Injected(ByRef<::UnityEngine::ParticleSystem::MainModule> _unity_self, ByRef<::UnityEngine::ParticleSystem::MinMaxGradient> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::set_startColor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ParticleSystem/MainModule", "set_startColor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(value));
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.set_simulationSpeed_Injected
void UnityEngine::ParticleSystem::MainModule::set_simulationSpeed_Injected(ByRef<::UnityEngine::ParticleSystem::MainModule> _unity_self, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::set_simulationSpeed_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ParticleSystem/MainModule", "set_simulationSpeed_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.get_maxParticles_Injected
int UnityEngine::ParticleSystem::MainModule::get_maxParticles_Injected(ByRef<::UnityEngine::ParticleSystem::MainModule> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::get_maxParticles_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ParticleSystem/MainModule", "get_maxParticles_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MainModule.set_maxParticles_Injected
void UnityEngine::ParticleSystem::MainModule::set_maxParticles_Injected(ByRef<::UnityEngine::ParticleSystem::MainModule> _unity_self, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MainModule::set_maxParticles_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ParticleSystem/MainModule", "set_maxParticles_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystem/UnityEngine.EmissionModule
#include "UnityEngine/ParticleSystem_EmissionModule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.ParticleSystem m_ParticleSystem
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& UnityEngine::ParticleSystem::EmissionModule::dyn_m_ParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmissionModule::dyn_m_ParticleSystem");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ParticleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.EmissionModule.get_enabled
bool UnityEngine::ParticleSystem::EmissionModule::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmissionModule::get_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.EmissionModule.set_enabled
void UnityEngine::ParticleSystem::EmissionModule::set_enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmissionModule::set_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.EmissionModule..ctor
// ABORTED elsewhere.  UnityEngine::ParticleSystem::EmissionModule::EmissionModule(::UnityEngine::ParticleSystem* particleSystem)
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.EmissionModule.get_enabled_Injected
bool UnityEngine::ParticleSystem::EmissionModule::get_enabled_Injected(ByRef<::UnityEngine::ParticleSystem::EmissionModule> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmissionModule::get_enabled_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ParticleSystem/EmissionModule", "get_enabled_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.EmissionModule.set_enabled_Injected
void UnityEngine::ParticleSystem::EmissionModule::set_enabled_Injected(ByRef<::UnityEngine::ParticleSystem::EmissionModule> _unity_self, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmissionModule::set_enabled_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ParticleSystem/EmissionModule", "set_enabled_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystem/UnityEngine.ShapeModule
#include "UnityEngine/ParticleSystem_ShapeModule.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.ParticleSystem m_ParticleSystem
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& UnityEngine::ParticleSystem::ShapeModule::dyn_m_ParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::ShapeModule::dyn_m_ParticleSystem");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ParticleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.ShapeModule.set_rotation
void UnityEngine::ParticleSystem::ShapeModule::set_rotation(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::ShapeModule::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.ShapeModule..ctor
// ABORTED elsewhere.  UnityEngine::ParticleSystem::ShapeModule::ShapeModule(::UnityEngine::ParticleSystem* particleSystem)
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.ShapeModule.set_rotation_Injected
void UnityEngine::ParticleSystem::ShapeModule::set_rotation_Injected(ByRef<::UnityEngine::ParticleSystem::ShapeModule> _unity_self, ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::ShapeModule::set_rotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ParticleSystem/ShapeModule", "set_rotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystem/UnityEngine.SubEmittersModule
#include "UnityEngine/ParticleSystem_SubEmittersModule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.ParticleSystem m_ParticleSystem
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& UnityEngine::ParticleSystem::SubEmittersModule::dyn_m_ParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::SubEmittersModule::dyn_m_ParticleSystem");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ParticleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.SubEmittersModule.get_subEmittersCount
int UnityEngine::ParticleSystem::SubEmittersModule::get_subEmittersCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::SubEmittersModule::get_subEmittersCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_subEmittersCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.SubEmittersModule..ctor
// ABORTED elsewhere.  UnityEngine::ParticleSystem::SubEmittersModule::SubEmittersModule(::UnityEngine::ParticleSystem* particleSystem)
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.SubEmittersModule.GetSubEmitterSystem
::UnityEngine::ParticleSystem* UnityEngine::ParticleSystem::SubEmittersModule::GetSubEmitterSystem(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::SubEmittersModule::GetSubEmitterSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSubEmitterSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystem*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.SubEmittersModule.get_subEmittersCount_Injected
int UnityEngine::ParticleSystem::SubEmittersModule::get_subEmittersCount_Injected(ByRef<::UnityEngine::ParticleSystem::SubEmittersModule> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::SubEmittersModule::get_subEmittersCount_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ParticleSystem/SubEmittersModule", "get_subEmittersCount_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.SubEmittersModule.GetSubEmitterSystem_Injected
::UnityEngine::ParticleSystem* UnityEngine::ParticleSystem::SubEmittersModule::GetSubEmitterSystem_Injected(ByRef<::UnityEngine::ParticleSystem::SubEmittersModule> _unity_self, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::SubEmittersModule::GetSubEmitterSystem_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ParticleSystem/SubEmittersModule", "GetSubEmitterSystem_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystem/UnityEngine.Particle
#include "UnityEngine/ParticleSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Position
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::ParticleSystem::Particle::dyn_m_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::dyn_m_Position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Velocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::ParticleSystem::Particle::dyn_m_Velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::dyn_m_Velocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_AnimatedVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::ParticleSystem::Particle::dyn_m_AnimatedVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::dyn_m_AnimatedVelocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AnimatedVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_InitialVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::ParticleSystem::Particle::dyn_m_InitialVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::dyn_m_InitialVelocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InitialVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_AxisOfRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::ParticleSystem::Particle::dyn_m_AxisOfRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::dyn_m_AxisOfRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AxisOfRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::ParticleSystem::Particle::dyn_m_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::dyn_m_Rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_AngularVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::ParticleSystem::Particle::dyn_m_AngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::dyn_m_AngularVelocity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AngularVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_StartSize
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::ParticleSystem::Particle::dyn_m_StartSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::dyn_m_StartSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color32 m_StartColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color32& UnityEngine::ParticleSystem::Particle::dyn_m_StartColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::dyn_m_StartColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_RandomSeed
[[deprecated("Use field access instead!")]] uint& UnityEngine::ParticleSystem::Particle::dyn_m_RandomSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::dyn_m_RandomSeed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RandomSeed"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_ParentRandomSeed
[[deprecated("Use field access instead!")]] uint& UnityEngine::ParticleSystem::Particle::dyn_m_ParentRandomSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::dyn_m_ParentRandomSeed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ParentRandomSeed"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Lifetime
[[deprecated("Use field access instead!")]] float& UnityEngine::ParticleSystem::Particle::dyn_m_Lifetime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::dyn_m_Lifetime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Lifetime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_StartLifetime
[[deprecated("Use field access instead!")]] float& UnityEngine::ParticleSystem::Particle::dyn_m_StartLifetime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::dyn_m_StartLifetime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartLifetime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_MeshIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::ParticleSystem::Particle::dyn_m_MeshIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::dyn_m_MeshIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MeshIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_EmitAccumulator0
[[deprecated("Use field access instead!")]] float& UnityEngine::ParticleSystem::Particle::dyn_m_EmitAccumulator0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::dyn_m_EmitAccumulator0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EmitAccumulator0"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_EmitAccumulator1
[[deprecated("Use field access instead!")]] float& UnityEngine::ParticleSystem::Particle::dyn_m_EmitAccumulator1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::dyn_m_EmitAccumulator1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EmitAccumulator1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_Flags
[[deprecated("Use field access instead!")]] uint& UnityEngine::ParticleSystem::Particle::dyn_m_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::dyn_m_Flags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Flags"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.Particle.set_lifetime
void UnityEngine::ParticleSystem::Particle::set_lifetime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::set_lifetime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_lifetime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.Particle.set_position
void UnityEngine::ParticleSystem::Particle::set_position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.Particle.set_velocity
void UnityEngine::ParticleSystem::Particle::set_velocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::set_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.Particle.set_remainingLifetime
void UnityEngine::ParticleSystem::Particle::set_remainingLifetime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::set_remainingLifetime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_remainingLifetime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.Particle.set_startLifetime
void UnityEngine::ParticleSystem::Particle::set_startLifetime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::set_startLifetime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_startLifetime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.Particle.set_startColor
void UnityEngine::ParticleSystem::Particle::set_startColor(::UnityEngine::Color32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::set_startColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_startColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.Particle.set_randomSeed
void UnityEngine::ParticleSystem::Particle::set_randomSeed(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::set_randomSeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_randomSeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.Particle.set_startSize
void UnityEngine::ParticleSystem::Particle::set_startSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::set_startSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_startSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.Particle.set_rotation3D
void UnityEngine::ParticleSystem::Particle::set_rotation3D(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::set_rotation3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_rotation3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.Particle.set_angularVelocity3D
void UnityEngine::ParticleSystem::Particle::set_angularVelocity3D(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::Particle::set_angularVelocity3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_angularVelocity3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystem/UnityEngine.MinMaxCurve
#include "UnityEngine/ParticleSystem_MinMaxCurve.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystemCurveMode m_Mode
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystemCurveMode& UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_Mode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Mode"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystemCurveMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_CurveMultiplier
[[deprecated("Use field access instead!")]] float& UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_CurveMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_CurveMultiplier");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurveMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve m_CurveMin
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_CurveMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_CurveMin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurveMin"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve m_CurveMax
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_CurveMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_CurveMax");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurveMax"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ConstantMin
[[deprecated("Use field access instead!")]] float& UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_ConstantMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_ConstantMin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstantMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ConstantMax
[[deprecated("Use field access instead!")]] float& UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_ConstantMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxCurve::dyn_m_ConstantMax");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstantMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MinMaxCurve.set_constantMax
void UnityEngine::ParticleSystem::MinMaxCurve::set_constantMax(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxCurve::set_constantMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constantMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MinMaxCurve.set_constantMin
void UnityEngine::ParticleSystem::MinMaxCurve::set_constantMin(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxCurve::set_constantMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constantMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MinMaxCurve..ctor
UnityEngine::ParticleSystem::MinMaxCurve::MinMaxCurve(float constant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxCurve::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constant)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, constant);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MinMaxCurve..ctor
UnityEngine::ParticleSystem::MinMaxCurve::MinMaxCurve(float min, float max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxCurve::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, min, max);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystem/UnityEngine.MinMaxGradient
#include "UnityEngine/ParticleSystem_MinMaxGradient.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystemGradientMode m_Mode
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystemGradientMode& UnityEngine::ParticleSystem::MinMaxGradient::dyn_m_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxGradient::dyn_m_Mode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Mode"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystemGradientMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient m_GradientMin
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& UnityEngine::ParticleSystem::MinMaxGradient::dyn_m_GradientMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxGradient::dyn_m_GradientMin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GradientMin"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient m_GradientMax
[[deprecated("Use field access instead!")]] ::UnityEngine::Gradient*& UnityEngine::ParticleSystem::MinMaxGradient::dyn_m_GradientMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxGradient::dyn_m_GradientMax");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GradientMax"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_ColorMin
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& UnityEngine::ParticleSystem::MinMaxGradient::dyn_m_ColorMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxGradient::dyn_m_ColorMin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ColorMin"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_ColorMax
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& UnityEngine::ParticleSystem::MinMaxGradient::dyn_m_ColorMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxGradient::dyn_m_ColorMax");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ColorMax"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MinMaxGradient.get_color
::UnityEngine::Color UnityEngine::ParticleSystem::MinMaxGradient::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxGradient::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.MinMaxGradient..ctor
UnityEngine::ParticleSystem::MinMaxGradient::MinMaxGradient(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::MinMaxGradient::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystem/UnityEngine.EmitParams
#include "UnityEngine/ParticleSystem_EmitParams.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.Particle m_Particle
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem::Particle& UnityEngine::ParticleSystem::EmitParams::dyn_m_Particle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmitParams::dyn_m_Particle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Particle"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::Particle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PositionSet
[[deprecated("Use field access instead!")]] bool& UnityEngine::ParticleSystem::EmitParams::dyn_m_PositionSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmitParams::dyn_m_PositionSet");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PositionSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_VelocitySet
[[deprecated("Use field access instead!")]] bool& UnityEngine::ParticleSystem::EmitParams::dyn_m_VelocitySet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmitParams::dyn_m_VelocitySet");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VelocitySet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AxisOfRotationSet
[[deprecated("Use field access instead!")]] bool& UnityEngine::ParticleSystem::EmitParams::dyn_m_AxisOfRotationSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmitParams::dyn_m_AxisOfRotationSet");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AxisOfRotationSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_RotationSet
[[deprecated("Use field access instead!")]] bool& UnityEngine::ParticleSystem::EmitParams::dyn_m_RotationSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmitParams::dyn_m_RotationSet");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RotationSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AngularVelocitySet
[[deprecated("Use field access instead!")]] bool& UnityEngine::ParticleSystem::EmitParams::dyn_m_AngularVelocitySet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmitParams::dyn_m_AngularVelocitySet");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AngularVelocitySet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_StartSizeSet
[[deprecated("Use field access instead!")]] bool& UnityEngine::ParticleSystem::EmitParams::dyn_m_StartSizeSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmitParams::dyn_m_StartSizeSet");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartSizeSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_StartColorSet
[[deprecated("Use field access instead!")]] bool& UnityEngine::ParticleSystem::EmitParams::dyn_m_StartColorSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmitParams::dyn_m_StartColorSet");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartColorSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_RandomSeedSet
[[deprecated("Use field access instead!")]] bool& UnityEngine::ParticleSystem::EmitParams::dyn_m_RandomSeedSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmitParams::dyn_m_RandomSeedSet");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RandomSeedSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_StartLifetimeSet
[[deprecated("Use field access instead!")]] bool& UnityEngine::ParticleSystem::EmitParams::dyn_m_StartLifetimeSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmitParams::dyn_m_StartLifetimeSet");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartLifetimeSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MeshIndexSet
[[deprecated("Use field access instead!")]] bool& UnityEngine::ParticleSystem::EmitParams::dyn_m_MeshIndexSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmitParams::dyn_m_MeshIndexSet");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MeshIndexSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ApplyShapeToPosition
[[deprecated("Use field access instead!")]] bool& UnityEngine::ParticleSystem::EmitParams::dyn_m_ApplyShapeToPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmitParams::dyn_m_ApplyShapeToPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ApplyShapeToPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.EmitParams.set_position
void UnityEngine::ParticleSystem::EmitParams::set_position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmitParams::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.EmitParams.set_applyShapeToPosition
void UnityEngine::ParticleSystem::EmitParams::set_applyShapeToPosition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmitParams::set_applyShapeToPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_applyShapeToPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.EmitParams.set_rotation3D
void UnityEngine::ParticleSystem::EmitParams::set_rotation3D(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmitParams::set_rotation3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_rotation3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ParticleSystem/UnityEngine.EmitParams.set_startColor
void UnityEngine::ParticleSystem::EmitParams::set_startColor(::UnityEngine::Color32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystem::EmitParams::set_startColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_startColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystemCurveMode
#include "UnityEngine/ParticleSystemCurveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemCurveMode Constant
::UnityEngine::ParticleSystemCurveMode UnityEngine::ParticleSystemCurveMode::_get_Constant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCurveMode::_get_Constant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemCurveMode>("UnityEngine", "ParticleSystemCurveMode", "Constant"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemCurveMode Constant
void UnityEngine::ParticleSystemCurveMode::_set_Constant(::UnityEngine::ParticleSystemCurveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCurveMode::_set_Constant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemCurveMode", "Constant", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemCurveMode Curve
::UnityEngine::ParticleSystemCurveMode UnityEngine::ParticleSystemCurveMode::_get_Curve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCurveMode::_get_Curve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemCurveMode>("UnityEngine", "ParticleSystemCurveMode", "Curve"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemCurveMode Curve
void UnityEngine::ParticleSystemCurveMode::_set_Curve(::UnityEngine::ParticleSystemCurveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCurveMode::_set_Curve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemCurveMode", "Curve", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemCurveMode TwoCurves
::UnityEngine::ParticleSystemCurveMode UnityEngine::ParticleSystemCurveMode::_get_TwoCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCurveMode::_get_TwoCurves");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemCurveMode>("UnityEngine", "ParticleSystemCurveMode", "TwoCurves"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemCurveMode TwoCurves
void UnityEngine::ParticleSystemCurveMode::_set_TwoCurves(::UnityEngine::ParticleSystemCurveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCurveMode::_set_TwoCurves");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemCurveMode", "TwoCurves", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemCurveMode TwoConstants
::UnityEngine::ParticleSystemCurveMode UnityEngine::ParticleSystemCurveMode::_get_TwoConstants() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCurveMode::_get_TwoConstants");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemCurveMode>("UnityEngine", "ParticleSystemCurveMode", "TwoConstants"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemCurveMode TwoConstants
void UnityEngine::ParticleSystemCurveMode::_set_TwoConstants(::UnityEngine::ParticleSystemCurveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCurveMode::_set_TwoConstants");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemCurveMode", "TwoConstants", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ParticleSystemCurveMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemCurveMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystemGradientMode
#include "UnityEngine/ParticleSystemGradientMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemGradientMode Color
::UnityEngine::ParticleSystemGradientMode UnityEngine::ParticleSystemGradientMode::_get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::_get_Color");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemGradientMode>("UnityEngine", "ParticleSystemGradientMode", "Color"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemGradientMode Color
void UnityEngine::ParticleSystemGradientMode::_set_Color(::UnityEngine::ParticleSystemGradientMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::_set_Color");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemGradientMode", "Color", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemGradientMode Gradient
::UnityEngine::ParticleSystemGradientMode UnityEngine::ParticleSystemGradientMode::_get_Gradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::_get_Gradient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemGradientMode>("UnityEngine", "ParticleSystemGradientMode", "Gradient"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemGradientMode Gradient
void UnityEngine::ParticleSystemGradientMode::_set_Gradient(::UnityEngine::ParticleSystemGradientMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::_set_Gradient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemGradientMode", "Gradient", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemGradientMode TwoColors
::UnityEngine::ParticleSystemGradientMode UnityEngine::ParticleSystemGradientMode::_get_TwoColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::_get_TwoColors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemGradientMode>("UnityEngine", "ParticleSystemGradientMode", "TwoColors"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemGradientMode TwoColors
void UnityEngine::ParticleSystemGradientMode::_set_TwoColors(::UnityEngine::ParticleSystemGradientMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::_set_TwoColors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemGradientMode", "TwoColors", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemGradientMode TwoGradients
::UnityEngine::ParticleSystemGradientMode UnityEngine::ParticleSystemGradientMode::_get_TwoGradients() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::_get_TwoGradients");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemGradientMode>("UnityEngine", "ParticleSystemGradientMode", "TwoGradients"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemGradientMode TwoGradients
void UnityEngine::ParticleSystemGradientMode::_set_TwoGradients(::UnityEngine::ParticleSystemGradientMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::_set_TwoGradients");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemGradientMode", "TwoGradients", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemGradientMode RandomColor
::UnityEngine::ParticleSystemGradientMode UnityEngine::ParticleSystemGradientMode::_get_RandomColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::_get_RandomColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemGradientMode>("UnityEngine", "ParticleSystemGradientMode", "RandomColor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemGradientMode RandomColor
void UnityEngine::ParticleSystemGradientMode::_set_RandomColor(::UnityEngine::ParticleSystemGradientMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::_set_RandomColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemGradientMode", "RandomColor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ParticleSystemGradientMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemGradientMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystemStopBehavior
#include "UnityEngine/ParticleSystemStopBehavior.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemStopBehavior StopEmittingAndClear
::UnityEngine::ParticleSystemStopBehavior UnityEngine::ParticleSystemStopBehavior::_get_StopEmittingAndClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemStopBehavior::_get_StopEmittingAndClear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemStopBehavior>("UnityEngine", "ParticleSystemStopBehavior", "StopEmittingAndClear"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemStopBehavior StopEmittingAndClear
void UnityEngine::ParticleSystemStopBehavior::_set_StopEmittingAndClear(::UnityEngine::ParticleSystemStopBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemStopBehavior::_set_StopEmittingAndClear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemStopBehavior", "StopEmittingAndClear", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ParticleSystemStopBehavior StopEmitting
::UnityEngine::ParticleSystemStopBehavior UnityEngine::ParticleSystemStopBehavior::_get_StopEmitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemStopBehavior::_get_StopEmitting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ParticleSystemStopBehavior>("UnityEngine", "ParticleSystemStopBehavior", "StopEmitting"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ParticleSystemStopBehavior StopEmitting
void UnityEngine::ParticleSystemStopBehavior::_set_StopEmitting(::UnityEngine::ParticleSystemStopBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemStopBehavior::_set_StopEmitting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ParticleSystemStopBehavior", "StopEmitting", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ParticleSystemStopBehavior::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemStopBehavior::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ParticleSystemRenderer
#include "UnityEngine/ParticleSystemRenderer.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ParticleSystemRenderer.GetMeshes
int UnityEngine::ParticleSystemRenderer::GetMeshes(ByRef<::ArrayW<::UnityEngine::Mesh*>> meshes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ParticleSystemRenderer::GetMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::UnityEngine::Mesh*>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(meshes));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.PhysicsScene2D
#include "UnityEngine/PhysicsScene2D.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ContactFilter2D
#include "UnityEngine/ContactFilter2D.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Handle
[[deprecated("Use field access instead!")]] int& UnityEngine::PhysicsScene2D::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Equals
bool UnityEngine::PhysicsScene2D::Equals(::UnityEngine::PhysicsScene2D other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::PhysicsScene2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(this, ___internal__method, origin, direction, distance, layerMask);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::PhysicsScene2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, ::UnityEngine::ContactFilter2D contactFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(this, ___internal__method, origin, direction, distance, contactFilter);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Raycast_Internal
::UnityEngine::RaycastHit2D UnityEngine::PhysicsScene2D::Raycast_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, ::UnityEngine::ContactFilter2D contactFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Raycast_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "Raycast_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, direction, distance, contactFilter);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Raycast
int UnityEngine::PhysicsScene2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, ::UnityEngine::ContactFilter2D contactFilter, ::ArrayW<::UnityEngine::RaycastHit2D> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, origin, direction, distance, contactFilter, results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.RaycastArray_Internal
int UnityEngine::PhysicsScene2D::RaycastArray_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, ::UnityEngine::ContactFilter2D contactFilter, ::ArrayW<::UnityEngine::RaycastHit2D> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::RaycastArray_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "RaycastArray_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, direction, distance, contactFilter, results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Raycast
int UnityEngine::PhysicsScene2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, ::UnityEngine::ContactFilter2D contactFilter, ::System::Collections::Generic::List_1<::UnityEngine::RaycastHit2D>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, origin, direction, distance, contactFilter, results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.RaycastList_Internal
int UnityEngine::PhysicsScene2D::RaycastList_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, ::UnityEngine::ContactFilter2D contactFilter, ::System::Collections::Generic::List_1<::UnityEngine::RaycastHit2D>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::RaycastList_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "RaycastList_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, direction, distance, contactFilter, results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.GetRayIntersection
int UnityEngine::PhysicsScene2D::GetRayIntersection(::UnityEngine::Ray ray, float distance, ::ArrayW<::UnityEngine::RaycastHit2D> results, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::GetRayIntersection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRayIntersection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ray, distance, results, layerMask);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.GetRayIntersectionArray_Internal
int UnityEngine::PhysicsScene2D::GetRayIntersectionArray_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float distance, int layerMask, ::ArrayW<::UnityEngine::RaycastHit2D> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::GetRayIntersectionArray_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "GetRayIntersectionArray_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, direction, distance, layerMask, results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Raycast_Internal_Injected
void UnityEngine::PhysicsScene2D::Raycast_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector2> origin, ByRef<::UnityEngine::Vector2> direction, float distance, ByRef<::UnityEngine::ContactFilter2D> contactFilter, ByRef<::UnityEngine::RaycastHit2D> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Raycast_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "Raycast_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit2D&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), byref(direction), distance, byref(contactFilter), byref(ret));
}
// Autogenerated method: UnityEngine.PhysicsScene2D.RaycastArray_Internal_Injected
int UnityEngine::PhysicsScene2D::RaycastArray_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector2> origin, ByRef<::UnityEngine::Vector2> direction, float distance, ByRef<::UnityEngine::ContactFilter2D> contactFilter, ::ArrayW<::UnityEngine::RaycastHit2D> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::RaycastArray_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "RaycastArray_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), byref(direction), distance, byref(contactFilter), results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.RaycastList_Internal_Injected
int UnityEngine::PhysicsScene2D::RaycastList_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector2> origin, ByRef<::UnityEngine::Vector2> direction, float distance, ByRef<::UnityEngine::ContactFilter2D> contactFilter, ::System::Collections::Generic::List_1<::UnityEngine::RaycastHit2D>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::RaycastList_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "RaycastList_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), byref(direction), distance, byref(contactFilter), results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.GetRayIntersectionArray_Internal_Injected
int UnityEngine::PhysicsScene2D::GetRayIntersectionArray_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector3> origin, ByRef<::UnityEngine::Vector3> direction, float distance, int layerMask, ::ArrayW<::UnityEngine::RaycastHit2D> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::GetRayIntersectionArray_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene2D", "GetRayIntersectionArray_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), byref(direction), distance, layerMask, results);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.ToString
::StringW UnityEngine::PhysicsScene2D::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.GetHashCode
int UnityEngine::PhysicsScene2D::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicsScene2D.Equals
bool UnityEngine::PhysicsScene2D::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene2D::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Physics2D
#include "UnityEngine/Physics2D.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Rigidbody2D
#include "UnityEngine/Rigidbody2D.hpp"
// Including type: UnityEngine.PhysicsScene2D
#include "UnityEngine/PhysicsScene2D.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.ContactFilter2D
#include "UnityEngine/ContactFilter2D.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.Rigidbody2D> m_LastDisabledRigidbody2D
::System::Collections::Generic::List_1<::UnityEngine::Rigidbody2D*>* UnityEngine::Physics2D::_get_m_LastDisabledRigidbody2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::_get_m_LastDisabledRigidbody2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Rigidbody2D*>*>("UnityEngine", "Physics2D", "m_LastDisabledRigidbody2D"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.Rigidbody2D> m_LastDisabledRigidbody2D
void UnityEngine::Physics2D::_set_m_LastDisabledRigidbody2D(::System::Collections::Generic::List_1<::UnityEngine::Rigidbody2D*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::_set_m_LastDisabledRigidbody2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Physics2D", "m_LastDisabledRigidbody2D", value));
}
// Autogenerated method: UnityEngine.Physics2D.get_defaultPhysicsScene
::UnityEngine::PhysicsScene2D UnityEngine::Physics2D::get_defaultPhysicsScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::get_defaultPhysicsScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "get_defaultPhysicsScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::PhysicsScene2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics2D.get_queriesHitTriggers
bool UnityEngine::Physics2D::get_queriesHitTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::get_queriesHitTriggers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "get_queriesHitTriggers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics2D..cctor
void UnityEngine::Physics2D::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, distance);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, distance, layerMask);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, int layerMask, float minDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(minDepth)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, distance, layerMask, minDepth);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
::UnityEngine::RaycastHit2D UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, float distance, int layerMask, float minDepth, float maxDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(minDepth), ::il2cpp_utils::ExtractType(maxDepth)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RaycastHit2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, distance, layerMask, minDepth, maxDepth);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
int UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, ::UnityEngine::ContactFilter2D contactFilter, ::ArrayW<::UnityEngine::RaycastHit2D> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, contactFilter, results);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
int UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, ::UnityEngine::ContactFilter2D contactFilter, ::ArrayW<::UnityEngine::RaycastHit2D> results, float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, contactFilter, results, distance);
}
// Autogenerated method: UnityEngine.Physics2D.Raycast
int UnityEngine::Physics2D::Raycast(::UnityEngine::Vector2 origin, ::UnityEngine::Vector2 direction, ::UnityEngine::ContactFilter2D contactFilter, ::System::Collections::Generic::List_1<::UnityEngine::RaycastHit2D>* results, float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(contactFilter), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, contactFilter, results, distance);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionAll
::ArrayW<::UnityEngine::RaycastHit2D> UnityEngine::Physics2D::GetRayIntersectionAll(::UnityEngine::Ray ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit2D>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionAll
::ArrayW<::UnityEngine::RaycastHit2D> UnityEngine::Physics2D::GetRayIntersectionAll(::UnityEngine::Ray ray, float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit2D>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, distance);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionAll
::ArrayW<::UnityEngine::RaycastHit2D> UnityEngine::Physics2D::GetRayIntersectionAll(::UnityEngine::Ray ray, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit2D>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, distance, layerMask);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionAll_Internal
::ArrayW<::UnityEngine::RaycastHit2D> UnityEngine::Physics2D::GetRayIntersectionAll_Internal(::UnityEngine::PhysicsScene2D physicsScene, ::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionAll_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionAll_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit2D>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, direction, distance, layerMask);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionNonAlloc
int UnityEngine::Physics2D::GetRayIntersectionNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit2D> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionNonAlloc
int UnityEngine::Physics2D::GetRayIntersectionNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit2D> results, float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(distance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results, distance);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionNonAlloc
int UnityEngine::Physics2D::GetRayIntersectionNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit2D> results, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results, distance, layerMask);
}
// Autogenerated method: UnityEngine.Physics2D.GetRayIntersectionAll_Internal_Injected
::ArrayW<::UnityEngine::RaycastHit2D> UnityEngine::Physics2D::GetRayIntersectionAll_Internal_Injected(ByRef<::UnityEngine::PhysicsScene2D> physicsScene, ByRef<::UnityEngine::Vector3> origin, ByRef<::UnityEngine::Vector3> direction, float distance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics2D::GetRayIntersectionAll_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics2D", "GetRayIntersectionAll_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit2D>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), byref(direction), distance, layerMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ContactFilter2D
#include "UnityEngine/ContactFilter2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean useTriggers
[[deprecated("Use field access instead!")]] bool& UnityEngine::ContactFilter2D::dyn_useTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_useTriggers");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useTriggers"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useLayerMask
[[deprecated("Use field access instead!")]] bool& UnityEngine::ContactFilter2D::dyn_useLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_useLayerMask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useLayerMask"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useDepth
[[deprecated("Use field access instead!")]] bool& UnityEngine::ContactFilter2D::dyn_useDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_useDepth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useDepth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useOutsideDepth
[[deprecated("Use field access instead!")]] bool& UnityEngine::ContactFilter2D::dyn_useOutsideDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_useOutsideDepth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useOutsideDepth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useNormalAngle
[[deprecated("Use field access instead!")]] bool& UnityEngine::ContactFilter2D::dyn_useNormalAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_useNormalAngle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useNormalAngle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useOutsideNormalAngle
[[deprecated("Use field access instead!")]] bool& UnityEngine::ContactFilter2D::dyn_useOutsideNormalAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_useOutsideNormalAngle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useOutsideNormalAngle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask layerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& UnityEngine::ContactFilter2D::dyn_layerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_layerMask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minDepth
[[deprecated("Use field access instead!")]] float& UnityEngine::ContactFilter2D::dyn_minDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_minDepth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minDepth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDepth
[[deprecated("Use field access instead!")]] float& UnityEngine::ContactFilter2D::dyn_maxDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_maxDepth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDepth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minNormalAngle
[[deprecated("Use field access instead!")]] float& UnityEngine::ContactFilter2D::dyn_minNormalAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_minNormalAngle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minNormalAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxNormalAngle
[[deprecated("Use field access instead!")]] float& UnityEngine::ContactFilter2D::dyn_maxNormalAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::dyn_maxNormalAngle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxNormalAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ContactFilter2D.CheckConsistency
void UnityEngine::ContactFilter2D::CheckConsistency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::CheckConsistency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckConsistency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ContactFilter2D.SetLayerMask
void UnityEngine::ContactFilter2D::SetLayerMask(::UnityEngine::LayerMask layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::SetLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, layerMask);
}
// Autogenerated method: UnityEngine.ContactFilter2D.SetDepth
void UnityEngine::ContactFilter2D::SetDepth(float minDepth, float maxDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::SetDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minDepth), ::il2cpp_utils::ExtractType(maxDepth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, minDepth, maxDepth);
}
// Autogenerated method: UnityEngine.ContactFilter2D.CreateLegacyFilter
::UnityEngine::ContactFilter2D UnityEngine::ContactFilter2D::CreateLegacyFilter(int layerMask, float minDepth, float maxDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::CreateLegacyFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ContactFilter2D", "CreateLegacyFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(minDepth), ::il2cpp_utils::ExtractType(maxDepth)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ContactFilter2D, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerMask, minDepth, maxDepth);
}
// Autogenerated method: UnityEngine.ContactFilter2D.CheckConsistency_Injected
void UnityEngine::ContactFilter2D::CheckConsistency_Injected(ByRef<::UnityEngine::ContactFilter2D> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContactFilter2D::CheckConsistency_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ContactFilter2D", "CheckConsistency_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RaycastHit2D
#include "UnityEngine/RaycastHit2D.hpp"
// Including type: UnityEngine.Collider2D
#include "UnityEngine/Collider2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_Centroid
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::RaycastHit2D::dyn_m_Centroid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Centroid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Centroid"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_Point
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::RaycastHit2D::dyn_m_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Point");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Point"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_Normal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::RaycastHit2D::dyn_m_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Normal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Normal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Distance
[[deprecated("Use field access instead!")]] float& UnityEngine::RaycastHit2D::dyn_m_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Distance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Fraction
[[deprecated("Use field access instead!")]] float& UnityEngine::RaycastHit2D::dyn_m_Fraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Fraction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Fraction"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Collider
[[deprecated("Use field access instead!")]] int& UnityEngine::RaycastHit2D::dyn_m_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::dyn_m_Collider");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Collider"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.RaycastHit2D.get_point
::UnityEngine::Vector2 UnityEngine::RaycastHit2D::get_point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::get_point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit2D.get_normal
::UnityEngine::Vector2 UnityEngine::RaycastHit2D::get_normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::get_normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit2D.get_distance
float UnityEngine::RaycastHit2D::get_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::get_distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit2D.get_fraction
float UnityEngine::RaycastHit2D::get_fraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::get_fraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_fraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit2D.get_collider
::UnityEngine::Collider2D* UnityEngine::RaycastHit2D::get_collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit2D::get_collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider2D*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rigidbody2D
#include "UnityEngine/Rigidbody2D.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Rigidbody2D.get_position
::UnityEngine::Vector2 UnityEngine::Rigidbody2D::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody2D.get_velocity
::UnityEngine::Vector2 UnityEngine::Rigidbody2D::get_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::get_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_velocity
void UnityEngine::Rigidbody2D::set_velocity(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody2D.Sleep
void UnityEngine::Rigidbody2D::Sleep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::Sleep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sleep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody2D.get_position_Injected
void UnityEngine::Rigidbody2D::get_position_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::get_position_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody2D.get_velocity_Injected
void UnityEngine::Rigidbody2D::get_velocity_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::get_velocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody2D.set_velocity_Injected
void UnityEngine::Rigidbody2D::set_velocity_Injected(ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody2D::set_velocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ForceMode
#include "UnityEngine/ForceMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ForceMode Force
::UnityEngine::ForceMode UnityEngine::ForceMode::_get_Force() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_get_Force");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ForceMode>("UnityEngine", "ForceMode", "Force"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ForceMode Force
void UnityEngine::ForceMode::_set_Force(::UnityEngine::ForceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_set_Force");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ForceMode", "Force", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ForceMode Acceleration
::UnityEngine::ForceMode UnityEngine::ForceMode::_get_Acceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_get_Acceleration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ForceMode>("UnityEngine", "ForceMode", "Acceleration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ForceMode Acceleration
void UnityEngine::ForceMode::_set_Acceleration(::UnityEngine::ForceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_set_Acceleration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ForceMode", "Acceleration", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ForceMode Impulse
::UnityEngine::ForceMode UnityEngine::ForceMode::_get_Impulse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_get_Impulse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ForceMode>("UnityEngine", "ForceMode", "Impulse"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ForceMode Impulse
void UnityEngine::ForceMode::_set_Impulse(::UnityEngine::ForceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_set_Impulse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ForceMode", "Impulse", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ForceMode VelocityChange
::UnityEngine::ForceMode UnityEngine::ForceMode::_get_VelocityChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_get_VelocityChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ForceMode>("UnityEngine", "ForceMode", "VelocityChange"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ForceMode VelocityChange
void UnityEngine::ForceMode::_set_VelocityChange(::UnityEngine::ForceMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::_set_VelocityChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ForceMode", "VelocityChange", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::ForceMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ForceMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CollisionFlags
#include "UnityEngine/CollisionFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags None
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags None
void UnityEngine::CollisionFlags::_set_None(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags Sides
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_Sides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_Sides");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "Sides"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags Sides
void UnityEngine::CollisionFlags::_set_Sides(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_Sides");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "Sides", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags Above
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_Above() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_Above");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "Above"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags Above
void UnityEngine::CollisionFlags::_set_Above(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_Above");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "Above", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags Below
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_Below() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_Below");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "Below"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags Below
void UnityEngine::CollisionFlags::_set_Below(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_Below");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "Below", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags CollidedSides
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_CollidedSides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_CollidedSides");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "CollidedSides"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags CollidedSides
void UnityEngine::CollisionFlags::_set_CollidedSides(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_CollidedSides");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "CollidedSides", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags CollidedAbove
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_CollidedAbove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_CollidedAbove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "CollidedAbove"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags CollidedAbove
void UnityEngine::CollisionFlags::_set_CollidedAbove(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_CollidedAbove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "CollidedAbove", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionFlags CollidedBelow
::UnityEngine::CollisionFlags UnityEngine::CollisionFlags::_get_CollidedBelow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_get_CollidedBelow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionFlags>("UnityEngine", "CollisionFlags", "CollidedBelow"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionFlags CollidedBelow
void UnityEngine::CollisionFlags::_set_CollidedBelow(::UnityEngine::CollisionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::_set_CollidedBelow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionFlags", "CollidedBelow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::CollisionFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.QueryTriggerInteraction
#include "UnityEngine/QueryTriggerInteraction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.QueryTriggerInteraction UseGlobal
::UnityEngine::QueryTriggerInteraction UnityEngine::QueryTriggerInteraction::_get_UseGlobal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_get_UseGlobal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::QueryTriggerInteraction>("UnityEngine", "QueryTriggerInteraction", "UseGlobal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.QueryTriggerInteraction UseGlobal
void UnityEngine::QueryTriggerInteraction::_set_UseGlobal(::UnityEngine::QueryTriggerInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_set_UseGlobal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "QueryTriggerInteraction", "UseGlobal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.QueryTriggerInteraction Ignore
::UnityEngine::QueryTriggerInteraction UnityEngine::QueryTriggerInteraction::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::QueryTriggerInteraction>("UnityEngine", "QueryTriggerInteraction", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.QueryTriggerInteraction Ignore
void UnityEngine::QueryTriggerInteraction::_set_Ignore(::UnityEngine::QueryTriggerInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "QueryTriggerInteraction", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.QueryTriggerInteraction Collide
::UnityEngine::QueryTriggerInteraction UnityEngine::QueryTriggerInteraction::_get_Collide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_get_Collide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::QueryTriggerInteraction>("UnityEngine", "QueryTriggerInteraction", "Collide"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.QueryTriggerInteraction Collide
void UnityEngine::QueryTriggerInteraction::_set_Collide(::UnityEngine::QueryTriggerInteraction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::_set_Collide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "QueryTriggerInteraction", "Collide", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::QueryTriggerInteraction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::QueryTriggerInteraction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CollisionDetectionMode
#include "UnityEngine/CollisionDetectionMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionDetectionMode Discrete
::UnityEngine::CollisionDetectionMode UnityEngine::CollisionDetectionMode::_get_Discrete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_get_Discrete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionDetectionMode>("UnityEngine", "CollisionDetectionMode", "Discrete"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionDetectionMode Discrete
void UnityEngine::CollisionDetectionMode::_set_Discrete(::UnityEngine::CollisionDetectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_set_Discrete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionDetectionMode", "Discrete", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionDetectionMode Continuous
::UnityEngine::CollisionDetectionMode UnityEngine::CollisionDetectionMode::_get_Continuous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_get_Continuous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionDetectionMode>("UnityEngine", "CollisionDetectionMode", "Continuous"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionDetectionMode Continuous
void UnityEngine::CollisionDetectionMode::_set_Continuous(::UnityEngine::CollisionDetectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_set_Continuous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionDetectionMode", "Continuous", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionDetectionMode ContinuousDynamic
::UnityEngine::CollisionDetectionMode UnityEngine::CollisionDetectionMode::_get_ContinuousDynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_get_ContinuousDynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionDetectionMode>("UnityEngine", "CollisionDetectionMode", "ContinuousDynamic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionDetectionMode ContinuousDynamic
void UnityEngine::CollisionDetectionMode::_set_ContinuousDynamic(::UnityEngine::CollisionDetectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_set_ContinuousDynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionDetectionMode", "ContinuousDynamic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.CollisionDetectionMode ContinuousSpeculative
::UnityEngine::CollisionDetectionMode UnityEngine::CollisionDetectionMode::_get_ContinuousSpeculative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_get_ContinuousSpeculative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::CollisionDetectionMode>("UnityEngine", "CollisionDetectionMode", "ContinuousSpeculative"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.CollisionDetectionMode ContinuousSpeculative
void UnityEngine::CollisionDetectionMode::_set_ContinuousSpeculative(::UnityEngine::CollisionDetectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::_set_ContinuousSpeculative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "CollisionDetectionMode", "ContinuousSpeculative", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::CollisionDetectionMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CollisionDetectionMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 m_Point
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::RaycastHit::dyn_m_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_Point");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Point"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector3 m_Normal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::RaycastHit::dyn_m_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_Normal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Normal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_FaceID
[[deprecated("Use field access instead!")]] uint& UnityEngine::RaycastHit::dyn_m_FaceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_FaceID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FaceID"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_Distance
[[deprecated("Use field access instead!")]] float& UnityEngine::RaycastHit::dyn_m_Distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_Distance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Vector2 m_UV
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::RaycastHit::dyn_m_UV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_UV");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UV"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_Collider
[[deprecated("Use field access instead!")]] int& UnityEngine::RaycastHit::dyn_m_Collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::dyn_m_Collider");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Collider"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.RaycastHit.get_collider
::UnityEngine::Collider* UnityEngine::RaycastHit::get_collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_collider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_collider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Collider*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit.get_point
::UnityEngine::Vector3 UnityEngine::RaycastHit::get_point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit.set_point
void UnityEngine::RaycastHit::set_point(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::set_point");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_point", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RaycastHit.get_normal
::UnityEngine::Vector3 UnityEngine::RaycastHit::get_normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit.set_normal
void UnityEngine::RaycastHit::set_normal(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::set_normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RaycastHit.get_distance
float UnityEngine::RaycastHit::get_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::get_distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RaycastHit.set_distance
void UnityEngine::RaycastHit::set_distance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RaycastHit::set_distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.CollisionDetectionMode
#include "UnityEngine/CollisionDetectionMode.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.ForceMode
#include "UnityEngine/ForceMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Rigidbody.set_velocity
void UnityEngine::Rigidbody::set_velocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_velocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.set_angularVelocity
void UnityEngine::Rigidbody::set_angularVelocity(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_angularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.set_mass
void UnityEngine::Rigidbody::set_mass(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_mass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.set_useGravity
void UnityEngine::Rigidbody::set_useGravity(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_useGravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useGravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_isKinematic
bool UnityEngine::Rigidbody::get_isKinematic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_isKinematic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isKinematic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_isKinematic
void UnityEngine::Rigidbody::set_isKinematic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_isKinematic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isKinematic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.set_collisionDetectionMode
void UnityEngine::Rigidbody::set_collisionDetectionMode(::UnityEngine::CollisionDetectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_collisionDetectionMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_collisionDetectionMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_worldCenterOfMass
::UnityEngine::Vector3 UnityEngine::Rigidbody::get_worldCenterOfMass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_worldCenterOfMass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldCenterOfMass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.get_position
::UnityEngine::Vector3 UnityEngine::Rigidbody::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.set_position
void UnityEngine::Rigidbody::set_position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.set_rotation
void UnityEngine::Rigidbody::set_rotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rigidbody.get_maxAngularVelocity
float UnityEngine::Rigidbody::get_maxAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_maxAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.MovePosition
void UnityEngine::Rigidbody::MovePosition(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::MovePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Rigidbody.MoveRotation
void UnityEngine::Rigidbody::MoveRotation(::UnityEngine::Quaternion rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::MoveRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rot);
}
// Autogenerated method: UnityEngine.Rigidbody.WakeUp
void UnityEngine::Rigidbody::WakeUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::WakeUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WakeUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rigidbody.AddForce
void UnityEngine::Rigidbody::AddForce(::UnityEngine::Vector3 force, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddForce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force, mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddForceAtPosition
void UnityEngine::Rigidbody::AddForceAtPosition(::UnityEngine::Vector3 force, ::UnityEngine::Vector3 position, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddForceAtPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForceAtPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force, position, mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddForceAtPosition
void UnityEngine::Rigidbody::AddForceAtPosition(::UnityEngine::Vector3 force, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddForceAtPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForceAtPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force, position);
}
// Autogenerated method: UnityEngine.Rigidbody.set_velocity_Injected
void UnityEngine::Rigidbody::set_velocity_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_velocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.set_angularVelocity_Injected
void UnityEngine::Rigidbody::set_angularVelocity_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_angularVelocity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_angularVelocity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.get_worldCenterOfMass_Injected
void UnityEngine::Rigidbody::get_worldCenterOfMass_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_worldCenterOfMass_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldCenterOfMass_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.get_position_Injected
void UnityEngine::Rigidbody::get_position_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::get_position_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Rigidbody.set_position_Injected
void UnityEngine::Rigidbody::set_position_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_position_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.set_rotation_Injected
void UnityEngine::Rigidbody::set_rotation_Injected(ByRef<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::set_rotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Rigidbody.MovePosition_Injected
void UnityEngine::Rigidbody::MovePosition_Injected(ByRef<::UnityEngine::Vector3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::MovePosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(position));
}
// Autogenerated method: UnityEngine.Rigidbody.MoveRotation_Injected
void UnityEngine::Rigidbody::MoveRotation_Injected(ByRef<::UnityEngine::Quaternion> rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::MoveRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(rot));
}
// Autogenerated method: UnityEngine.Rigidbody.AddForce_Injected
void UnityEngine::Rigidbody::AddForce_Injected(ByRef<::UnityEngine::Vector3> force, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddForce_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForce_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(force), mode);
}
// Autogenerated method: UnityEngine.Rigidbody.AddForceAtPosition_Injected
void UnityEngine::Rigidbody::AddForceAtPosition_Injected(ByRef<::UnityEngine::Vector3> force, ByRef<::UnityEngine::Vector3> position, ::UnityEngine::ForceMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rigidbody::AddForceAtPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForceAtPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(force), byref(position), mode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Collider.get_enabled
bool UnityEngine::Collider::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::get_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collider.set_enabled
void UnityEngine::Collider::set_enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::set_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Collider.get_attachedRigidbody
::UnityEngine::Rigidbody* UnityEngine::Collider::get_attachedRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::get_attachedRigidbody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_attachedRigidbody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collider.get_isTrigger
bool UnityEngine::Collider::get_isTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::get_isTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collider.set_isTrigger
void UnityEngine::Collider::set_isTrigger(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::set_isTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Collider.get_bounds
::UnityEngine::Bounds UnityEngine::Collider::get_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::get_bounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Collider.Internal_ClosestPointOnBounds
void UnityEngine::Collider::Internal_ClosestPointOnBounds(::UnityEngine::Vector3 point, ByRef<::UnityEngine::Vector3> outPos, ByRef<float> distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::Internal_ClosestPointOnBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_ClosestPointOnBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(outPos), ::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, point, byref(outPos), byref(distance));
}
// Autogenerated method: UnityEngine.Collider.ClosestPointOnBounds
::UnityEngine::Vector3 UnityEngine::Collider::ClosestPointOnBounds(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::ClosestPointOnBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClosestPointOnBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Collider.get_bounds_Injected
void UnityEngine::Collider::get_bounds_Injected(ByRef<::UnityEngine::Bounds> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::get_bounds_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Bounds&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Collider.Internal_ClosestPointOnBounds_Injected
void UnityEngine::Collider::Internal_ClosestPointOnBounds_Injected(ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> outPos, ByRef<float> distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Collider::Internal_ClosestPointOnBounds_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_ClosestPointOnBounds_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(outPos), ::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(point), byref(outPos), byref(distance));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CharacterController
#include "UnityEngine/CharacterController.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.CollisionFlags
#include "UnityEngine/CollisionFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CharacterController.get_isGrounded
bool UnityEngine::CharacterController::get_isGrounded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_isGrounded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isGrounded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterController.get_height
float UnityEngine::CharacterController::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterController.get_center
::UnityEngine::Vector3 UnityEngine::CharacterController::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterController.get_stepOffset
float UnityEngine::CharacterController::get_stepOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_stepOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stepOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CharacterController.Move
::UnityEngine::CollisionFlags UnityEngine::CharacterController::Move(::UnityEngine::Vector3 motion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::Move");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Move", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(motion)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::CollisionFlags, false>(this, ___internal__method, motion);
}
// Autogenerated method: UnityEngine.CharacterController.Move_Injected
::UnityEngine::CollisionFlags UnityEngine::CharacterController::Move_Injected(ByRef<::UnityEngine::Vector3> motion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::Move_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Move_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(motion)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::CollisionFlags, false>(this, ___internal__method, byref(motion));
}
// Autogenerated method: UnityEngine.CharacterController.get_center_Injected
void UnityEngine::CharacterController::get_center_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CharacterController::get_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.MeshCollider
#include "UnityEngine/MeshCollider.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.MeshCollider.get_sharedMesh
::UnityEngine::Mesh* UnityEngine::MeshCollider::get_sharedMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshCollider::get_sharedMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharedMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MeshCollider.set_sharedMesh
void UnityEngine::MeshCollider::set_sharedMesh(::UnityEngine::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshCollider::set_sharedMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharedMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.MeshCollider.set_convex
void UnityEngine::MeshCollider::set_convex(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MeshCollider::set_convex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_convex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CapsuleCollider
#include "UnityEngine/CapsuleCollider.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CapsuleCollider.get_center
::UnityEngine::Vector3 UnityEngine::CapsuleCollider::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CapsuleCollider.set_center
void UnityEngine::CapsuleCollider::set_center(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::set_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CapsuleCollider.get_radius
float UnityEngine::CapsuleCollider::get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::get_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CapsuleCollider.set_radius
void UnityEngine::CapsuleCollider::set_radius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::set_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CapsuleCollider.get_height
float UnityEngine::CapsuleCollider::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CapsuleCollider.set_height
void UnityEngine::CapsuleCollider::set_height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::set_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CapsuleCollider.set_direction
void UnityEngine::CapsuleCollider::set_direction(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::set_direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CapsuleCollider.get_center_Injected
void UnityEngine::CapsuleCollider::get_center_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::get_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.CapsuleCollider.set_center_Injected
void UnityEngine::CapsuleCollider::set_center_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CapsuleCollider::set_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.BoxCollider
#include "UnityEngine/BoxCollider.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.BoxCollider.get_center
::UnityEngine::Vector3 UnityEngine::BoxCollider::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoxCollider.set_center
void UnityEngine::BoxCollider::set_center(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::set_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoxCollider.get_size
::UnityEngine::Vector3 UnityEngine::BoxCollider::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.BoxCollider.set_size
void UnityEngine::BoxCollider::set_size(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::set_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.BoxCollider.get_center_Injected
void UnityEngine::BoxCollider::get_center_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::get_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.BoxCollider.set_center_Injected
void UnityEngine::BoxCollider::set_center_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::set_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.BoxCollider.get_size_Injected
void UnityEngine::BoxCollider::get_size_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::get_size_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.BoxCollider.set_size_Injected
void UnityEngine::BoxCollider::set_size_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::BoxCollider::set_size_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_size_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SphereCollider
#include "UnityEngine/SphereCollider.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SphereCollider.set_center
void UnityEngine::SphereCollider::set_center(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SphereCollider::set_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SphereCollider.get_radius
float UnityEngine::SphereCollider::get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SphereCollider::get_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SphereCollider.set_radius
void UnityEngine::SphereCollider::set_radius(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SphereCollider::set_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SphereCollider.set_center_Injected
void UnityEngine::SphereCollider::set_center_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SphereCollider::set_center_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_center_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Joint
#include "UnityEngine/Joint.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Joint.get_connectedBody
::UnityEngine::Rigidbody* UnityEngine::Joint::get_connectedBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::get_connectedBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rigidbody*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Joint.set_connectedAnchor
void UnityEngine::Joint::set_connectedAnchor(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_connectedAnchor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectedAnchor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Joint.set_connectedAnchor_Injected
void UnityEngine::Joint::set_connectedAnchor_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Joint::set_connectedAnchor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectedAnchor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpringJoint
#include "UnityEngine/SpringJoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SpringJoint.set_minDistance
void UnityEngine::SpringJoint::set_minDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpringJoint::set_minDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_minDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SpringJoint.set_maxDistance
void UnityEngine::SpringJoint::set_maxDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpringJoint::set_maxDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.PhysicsScene
#include "UnityEngine/PhysicsScene.hpp"
// Including type: UnityEngine.QueryTriggerInteraction
#include "UnityEngine/QueryTriggerInteraction.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Handle
[[deprecated("Use field access instead!")]] int& UnityEngine::PhysicsScene::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.PhysicsScene.Equals
bool UnityEngine::PhysicsScene::Equals(::UnityEngine::PhysicsScene other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.PhysicsScene.Raycast
bool UnityEngine::PhysicsScene::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, origin, direction, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_RaycastTest
bool UnityEngine::PhysicsScene::Internal_RaycastTest(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Ray ray, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_RaycastTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_RaycastTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, ray, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Raycast
bool UnityEngine::PhysicsScene::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, origin, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_Raycast
bool UnityEngine::PhysicsScene::Internal_Raycast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Ray ray, float maxDistance, ByRef<::UnityEngine::RaycastHit> hit, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hit), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, ray, maxDistance, byref(hit), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Raycast
int UnityEngine::PhysicsScene::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, origin, direction, raycastHits, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_RaycastNonAlloc
int UnityEngine::PhysicsScene::Internal_RaycastNonAlloc(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, ray, raycastHits, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Query_CapsuleCast
bool UnityEngine::PhysicsScene::Query_CapsuleCast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2, float radius, ::UnityEngine::Vector3 direction, float maxDistance, ByRef<::UnityEngine::RaycastHit> hitInfo, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Query_CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Query_CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, point1, point2, radius, direction, maxDistance, byref(hitInfo), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_CapsuleCast
bool UnityEngine::PhysicsScene::Internal_CapsuleCast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, point1, point2, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.CapsuleCast
bool UnityEngine::PhysicsScene::CapsuleCast(::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, point1, point2, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Query_SphereCast
bool UnityEngine::PhysicsScene::Query_SphereCast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, float maxDistance, ByRef<::UnityEngine::RaycastHit> hitInfo, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Query_SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Query_SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, maxDistance, byref(hitInfo), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_SphereCast
bool UnityEngine::PhysicsScene::Internal_SphereCast(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.SphereCast
bool UnityEngine::PhysicsScene::SphereCast(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, origin, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapBoxNonAlloc_Internal
int UnityEngine::PhysicsScene::OverlapBoxNonAlloc_Internal(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::ArrayW<::UnityEngine::Collider*> results, ::UnityEngine::Quaternion orientation, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::OverlapBoxNonAlloc_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "OverlapBoxNonAlloc_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, center, halfExtents, results, orientation, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapBox
int UnityEngine::PhysicsScene::OverlapBox(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::ArrayW<::UnityEngine::Collider*> results, ::UnityEngine::Quaternion orientation, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::OverlapBox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OverlapBox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, center, halfExtents, results, orientation, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_RaycastTest_Injected
bool UnityEngine::PhysicsScene::Internal_RaycastTest_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Ray> ray, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_RaycastTest_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_RaycastTest_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(ray), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_Raycast_Injected
bool UnityEngine::PhysicsScene::Internal_Raycast_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Ray> ray, float maxDistance, ByRef<::UnityEngine::RaycastHit> hit, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_Raycast_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_Raycast_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hit), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(ray), maxDistance, byref(hit), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Internal_RaycastNonAlloc_Injected
int UnityEngine::PhysicsScene::Internal_RaycastNonAlloc_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Ray> ray, ::ArrayW<::UnityEngine::RaycastHit> raycastHits, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Internal_RaycastNonAlloc_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Internal_RaycastNonAlloc_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(ray), raycastHits, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Query_CapsuleCast_Injected
bool UnityEngine::PhysicsScene::Query_CapsuleCast_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> point1, ByRef<::UnityEngine::Vector3> point2, float radius, ByRef<::UnityEngine::Vector3> direction, float maxDistance, ByRef<::UnityEngine::RaycastHit> hitInfo, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Query_CapsuleCast_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Query_CapsuleCast_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(point1), byref(point2), radius, byref(direction), maxDistance, byref(hitInfo), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.Query_SphereCast_Injected
bool UnityEngine::PhysicsScene::Query_SphereCast_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> origin, float radius, ByRef<::UnityEngine::Vector3> direction, float maxDistance, ByRef<::UnityEngine::RaycastHit> hitInfo, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Query_SphereCast_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "Query_SphereCast_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(hitInfo), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), radius, byref(direction), maxDistance, byref(hitInfo), layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.OverlapBoxNonAlloc_Internal_Injected
int UnityEngine::PhysicsScene::OverlapBoxNonAlloc_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> center, ByRef<::UnityEngine::Vector3> halfExtents, ::ArrayW<::UnityEngine::Collider*> results, ByRef<::UnityEngine::Quaternion> orientation, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::OverlapBoxNonAlloc_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PhysicsScene", "OverlapBoxNonAlloc_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(center), byref(halfExtents), results, byref(orientation), mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.PhysicsScene.ToString
::StringW UnityEngine::PhysicsScene::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicsScene.GetHashCode
int UnityEngine::PhysicsScene::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PhysicsScene.Equals
bool UnityEngine::PhysicsScene::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PhysicsScene::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Physics
#include "UnityEngine/Physics.hpp"
// Including type: UnityEngine.PhysicsScene
#include "UnityEngine/PhysicsScene.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.QueryTriggerInteraction
#include "UnityEngine/QueryTriggerInteraction.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Physics.get_gravity
::UnityEngine::Vector3 UnityEngine::Physics::get_gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_gravity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_gravity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics.get_defaultPhysicsScene
::UnityEngine::PhysicsScene UnityEngine::Physics::get_defaultPhysicsScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_defaultPhysicsScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_defaultPhysicsScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::PhysicsScene, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Physics.IgnoreCollision
void UnityEngine::Physics::IgnoreCollision(::UnityEngine::Collider* collider1, ::UnityEngine::Collider* collider2, bool ignore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::IgnoreCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "IgnoreCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider1), ::il2cpp_utils::ExtractType(collider2), ::il2cpp_utils::ExtractType(ignore)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, collider1, collider2, ignore);
}
// Autogenerated method: UnityEngine.Physics.IgnoreCollision
void UnityEngine::Physics::IgnoreCollision(::UnityEngine::Collider* collider1, ::UnityEngine::Collider* collider2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::IgnoreCollision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "IgnoreCollision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collider1), ::il2cpp_utils::ExtractType(collider2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, collider1, collider2);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(hitInfo), maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(hitInfo), maxDistance);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(hitInfo));
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, byref(hitInfo), maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, byref(hitInfo), maxDistance);
}
// Autogenerated method: UnityEngine.Physics.Raycast
bool UnityEngine::Physics::Raycast(::UnityEngine::Ray ray, ByRef<::UnityEngine::RaycastHit> hitInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Raycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, byref(hitInfo));
}
// Autogenerated method: UnityEngine.Physics.CapsuleCast
bool UnityEngine::Physics::CapsuleCast(::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point1, point2, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CapsuleCast
bool UnityEngine::Physics::CapsuleCast(::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CapsuleCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CapsuleCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, point1, point2, radius, direction, byref(hitInfo), maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.SphereCast
bool UnityEngine::Physics::SphereCast(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, radius, direction, byref(hitInfo), maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCast
bool UnityEngine::Physics::SphereCast(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::RaycastHit> hitInfo, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, radius, direction, byref(hitInfo), maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.Internal_RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::Internal_RaycastAll(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Ray ray, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Internal_RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Internal_RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, ray, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Ray ray, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Ray ray, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Ray ray, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.RaycastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::RaycastAll(::UnityEngine::Ray ray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Ray ray, ::ArrayW<::UnityEngine::RaycastHit> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, results);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, results, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, results, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results, float maxDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(maxDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, results, maxDistance);
}
// Autogenerated method: UnityEngine.Physics.RaycastNonAlloc
int UnityEngine::Physics::RaycastNonAlloc(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ::ArrayW<::UnityEngine::RaycastHit> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::RaycastNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "RaycastNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, results);
}
// Autogenerated method: UnityEngine.Physics.Query_SphereCastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::Query_SphereCastAll(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Query_SphereCastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Query_SphereCastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, origin, radius, direction, maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::SphereCastAll(::UnityEngine::Vector3 origin, float radius, ::UnityEngine::Vector3 direction, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, radius, direction, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::SphereCastAll(::UnityEngine::Ray ray, float radius, float maxDistance, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, radius, maxDistance, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.SphereCastAll
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::SphereCastAll(::UnityEngine::Ray ray, float radius, float maxDistance, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::SphereCastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "SphereCastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ray, radius, maxDistance, layerMask);
}
// Autogenerated method: UnityEngine.Physics.CheckSphere_Internal
bool UnityEngine::Physics::CheckSphere_Internal(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 position, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckSphere_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckSphere_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, position, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckSphere
bool UnityEngine::Physics::CheckSphere(::UnityEngine::Vector3 position, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckSphere
bool UnityEngine::Physics::CheckSphere(::UnityEngine::Vector3 position, float radius, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, radius, layerMask);
}
// Autogenerated method: UnityEngine.Physics.CheckCapsule_Internal
bool UnityEngine::Physics::CheckCapsule_Internal(::UnityEngine::PhysicsScene physicsScene, ::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckCapsule_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckCapsule_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, physicsScene, start, end, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckCapsule
bool UnityEngine::Physics::CheckCapsule(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckCapsule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckCapsule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckCapsule
bool UnityEngine::Physics::CheckCapsule(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, float radius, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckCapsule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckCapsule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, end, radius, layerMask);
}
// Autogenerated method: UnityEngine.Physics.OverlapBoxNonAlloc
int UnityEngine::Physics::OverlapBoxNonAlloc(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::ArrayW<::UnityEngine::Collider*> results, ::UnityEngine::Quaternion orientation, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapBoxNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapBoxNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, halfExtents, results, orientation, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.OverlapBoxNonAlloc
int UnityEngine::Physics::OverlapBoxNonAlloc(::UnityEngine::Vector3 center, ::UnityEngine::Vector3 halfExtents, ::ArrayW<::UnityEngine::Collider*> results, ::UnityEngine::Quaternion orientation, int mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::OverlapBoxNonAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "OverlapBoxNonAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(halfExtents), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(mask)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, center, halfExtents, results, orientation, mask);
}
// Autogenerated method: UnityEngine.Physics.get_gravity_Injected
void UnityEngine::Physics::get_gravity_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_gravity_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_gravity_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Physics.get_defaultPhysicsScene_Injected
void UnityEngine::Physics::get_defaultPhysicsScene_Injected(ByRef<::UnityEngine::PhysicsScene> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::get_defaultPhysicsScene_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "get_defaultPhysicsScene_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::PhysicsScene&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Physics.Internal_RaycastAll_Injected
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::Internal_RaycastAll_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Ray> ray, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Internal_RaycastAll_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Internal_RaycastAll_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(ray), maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.Query_SphereCastAll_Injected
::ArrayW<::UnityEngine::RaycastHit> UnityEngine::Physics::Query_SphereCastAll_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> origin, float radius, ByRef<::UnityEngine::Vector3> direction, float maxDistance, int mask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::Query_SphereCastAll_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "Query_SphereCastAll_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(maxDistance), ::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::RaycastHit>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(origin), radius, byref(direction), maxDistance, mask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckSphere_Internal_Injected
bool UnityEngine::Physics::CheckSphere_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> position, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckSphere_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckSphere_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(position), radius, layerMask, queryTriggerInteraction);
}
// Autogenerated method: UnityEngine.Physics.CheckCapsule_Internal_Injected
bool UnityEngine::Physics::CheckCapsule_Internal_Injected(ByRef<::UnityEngine::PhysicsScene> physicsScene, ByRef<::UnityEngine::Vector3> start, ByRef<::UnityEngine::Vector3> end, float radius, int layerMask, ::UnityEngine::QueryTriggerInteraction queryTriggerInteraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Physics::CheckCapsule_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Physics", "CheckCapsule_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(physicsScene), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(queryTriggerInteraction)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(physicsScene), byref(start), byref(end), radius, layerMask, queryTriggerInteraction);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AssetFileNameExtensionAttribute
#include "UnityEngine/AssetFileNameExtensionAttribute.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <preferredExtension>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::AssetFileNameExtensionAttribute::dyn_$preferredExtension$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetFileNameExtensionAttribute::dyn_$preferredExtension$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<preferredExtension>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IEnumerable`1<System.String> <otherExtensions>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::StringW>*& UnityEngine::AssetFileNameExtensionAttribute::dyn_$otherExtensions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AssetFileNameExtensionAttribute::dyn_$otherExtensions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<otherExtensions>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ThreadAndSerializationSafeAttribute
#include "UnityEngine/ThreadAndSerializationSafeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.WritableAttribute
#include "UnityEngine/WritableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UnityEngineModuleAssembly
#include "UnityEngine/UnityEngineModuleAssembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.NativeClassAttribute
#include "UnityEngine/NativeClassAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <QualifiedNativeName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::NativeClassAttribute::dyn_$QualifiedNativeName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NativeClassAttribute::dyn_$QualifiedNativeName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<QualifiedNativeName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Declaration>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::NativeClassAttribute::dyn_$Declaration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NativeClassAttribute::dyn_$Declaration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Declaration>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.NativeClassAttribute.set_QualifiedNativeName
void UnityEngine::NativeClassAttribute::set_QualifiedNativeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NativeClassAttribute::set_QualifiedNativeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_QualifiedNativeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.NativeClassAttribute.set_Declaration
void UnityEngine::NativeClassAttribute::set_Declaration(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NativeClassAttribute::set_Declaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Declaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UnityString
#include "UnityEngine/UnityString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UnityString.Format
::StringW UnityEngine::UnityString::Format(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnityString::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnityString", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fmt), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fmt, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.VisibleToOtherModulesAttribute
#include "UnityEngine/Bindings/VisibleToOtherModulesAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeConditionalAttribute
#include "UnityEngine/Bindings/NativeConditionalAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Condition>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::NativeConditionalAttribute::dyn_$Condition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeConditionalAttribute::dyn_$Condition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Condition>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Enabled>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeConditionalAttribute::dyn_$Enabled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeConditionalAttribute::dyn_$Enabled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Enabled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeConditionalAttribute.set_Condition
void UnityEngine::Bindings::NativeConditionalAttribute::set_Condition(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeConditionalAttribute::set_Condition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Condition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeConditionalAttribute.set_Enabled
void UnityEngine::Bindings::NativeConditionalAttribute::set_Enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeConditionalAttribute::set_Enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeHeaderAttribute
#include "UnityEngine/Bindings/NativeHeaderAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Header>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::NativeHeaderAttribute::dyn_$Header$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeHeaderAttribute::dyn_$Header$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Header>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeHeaderAttribute.set_Header
void UnityEngine::Bindings::NativeHeaderAttribute::set_Header(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeHeaderAttribute::set_Header");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Header", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeNameAttribute
#include "UnityEngine/Bindings/NativeNameAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::NativeNameAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeNameAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeNameAttribute.set_Name
void UnityEngine::Bindings::NativeNameAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeNameAttribute::set_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeWritableSelfAttribute
#include "UnityEngine/Bindings/NativeWritableSelfAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <WritableSelf>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeWritableSelfAttribute::dyn_$WritableSelf$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeWritableSelfAttribute::dyn_$WritableSelf$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WritableSelf>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeWritableSelfAttribute.set_WritableSelf
void UnityEngine::Bindings::NativeWritableSelfAttribute::set_WritableSelf(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeWritableSelfAttribute::set_WritableSelf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WritableSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeMethodAttribute
#include "UnityEngine/Bindings/NativeMethodAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::NativeMethodAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsThreadSafe>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeMethodAttribute::dyn_$IsThreadSafe$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::dyn_$IsThreadSafe$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsThreadSafe>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsFreeFunction>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeMethodAttribute::dyn_$IsFreeFunction$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::dyn_$IsFreeFunction$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsFreeFunction>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ThrowsException>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeMethodAttribute::dyn_$ThrowsException$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::dyn_$ThrowsException$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ThrowsException>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <HasExplicitThis>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeMethodAttribute::dyn_$HasExplicitThis$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::dyn_$HasExplicitThis$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HasExplicitThis>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeMethodAttribute.set_Name
void UnityEngine::Bindings::NativeMethodAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::set_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeMethodAttribute.set_IsThreadSafe
void UnityEngine::Bindings::NativeMethodAttribute::set_IsThreadSafe(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::set_IsThreadSafe");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsThreadSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeMethodAttribute.set_IsFreeFunction
void UnityEngine::Bindings::NativeMethodAttribute::set_IsFreeFunction(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::set_IsFreeFunction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsFreeFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeMethodAttribute.set_ThrowsException
void UnityEngine::Bindings::NativeMethodAttribute::set_ThrowsException(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::set_ThrowsException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ThrowsException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeMethodAttribute.set_HasExplicitThis
void UnityEngine::Bindings::NativeMethodAttribute::set_HasExplicitThis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeMethodAttribute::set_HasExplicitThis");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HasExplicitThis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.TargetType
#include "UnityEngine/Bindings/TargetType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.TargetType Function
::UnityEngine::Bindings::TargetType UnityEngine::Bindings::TargetType::_get_Function() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::TargetType::_get_Function");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::TargetType>("UnityEngine.Bindings", "TargetType", "Function"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.TargetType Function
void UnityEngine::Bindings::TargetType::_set_Function(::UnityEngine::Bindings::TargetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::TargetType::_set_Function");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "TargetType", "Function", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.TargetType Field
::UnityEngine::Bindings::TargetType UnityEngine::Bindings::TargetType::_get_Field() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::TargetType::_get_Field");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::TargetType>("UnityEngine.Bindings", "TargetType", "Field"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.TargetType Field
void UnityEngine::Bindings::TargetType::_set_Field(::UnityEngine::Bindings::TargetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::TargetType::_set_Field");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "TargetType", "Field", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Bindings::TargetType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::TargetType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativePropertyAttribute
#include "UnityEngine/Bindings/NativePropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bindings.TargetType <TargetType>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Bindings::TargetType& UnityEngine::Bindings::NativePropertyAttribute::dyn_$TargetType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativePropertyAttribute::dyn_$TargetType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TargetType>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Bindings::TargetType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativePropertyAttribute.set_TargetType
void UnityEngine::Bindings::NativePropertyAttribute::set_TargetType(::UnityEngine::Bindings::TargetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativePropertyAttribute::set_TargetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.CodegenOptions
#include "UnityEngine/Bindings/CodegenOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.CodegenOptions Auto
::UnityEngine::Bindings::CodegenOptions UnityEngine::Bindings::CodegenOptions::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::CodegenOptions>("UnityEngine.Bindings", "CodegenOptions", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.CodegenOptions Auto
void UnityEngine::Bindings::CodegenOptions::_set_Auto(::UnityEngine::Bindings::CodegenOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "CodegenOptions", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.CodegenOptions Custom
::UnityEngine::Bindings::CodegenOptions UnityEngine::Bindings::CodegenOptions::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::CodegenOptions>("UnityEngine.Bindings", "CodegenOptions", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.CodegenOptions Custom
void UnityEngine::Bindings::CodegenOptions::_set_Custom(::UnityEngine::Bindings::CodegenOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "CodegenOptions", "Custom", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.CodegenOptions Force
::UnityEngine::Bindings::CodegenOptions UnityEngine::Bindings::CodegenOptions::_get_Force() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::_get_Force");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::CodegenOptions>("UnityEngine.Bindings", "CodegenOptions", "Force"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.CodegenOptions Force
void UnityEngine::Bindings::CodegenOptions::_set_Force(::UnityEngine::Bindings::CodegenOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::_set_Force");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "CodegenOptions", "Force", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Bindings::CodegenOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::CodegenOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeAsStructAttribute
#include "UnityEngine/Bindings/NativeAsStructAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeTypeAttribute
#include "UnityEngine/Bindings/NativeTypeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Header>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::NativeTypeAttribute::dyn_$Header$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeTypeAttribute::dyn_$Header$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Header>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <IntermediateScriptingStructName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::NativeTypeAttribute::dyn_$IntermediateScriptingStructName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeTypeAttribute::dyn_$IntermediateScriptingStructName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IntermediateScriptingStructName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bindings.CodegenOptions <CodegenOptions>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Bindings::CodegenOptions& UnityEngine::Bindings::NativeTypeAttribute::dyn_$CodegenOptions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeTypeAttribute::dyn_$CodegenOptions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CodegenOptions>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Bindings::CodegenOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeTypeAttribute.set_Header
void UnityEngine::Bindings::NativeTypeAttribute::set_Header(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeTypeAttribute::set_Header");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Header", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeTypeAttribute.set_IntermediateScriptingStructName
void UnityEngine::Bindings::NativeTypeAttribute::set_IntermediateScriptingStructName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeTypeAttribute::set_IntermediateScriptingStructName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IntermediateScriptingStructName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.NativeTypeAttribute.set_CodegenOptions
void UnityEngine::Bindings::NativeTypeAttribute::set_CodegenOptions(::UnityEngine::Bindings::CodegenOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeTypeAttribute::set_CodegenOptions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CodegenOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NotNullAttribute
#include "UnityEngine/Bindings/NotNullAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.UnmarshalledAttribute
#include "UnityEngine/Bindings/UnmarshalledAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.FreeFunctionAttribute
#include "UnityEngine/Bindings/FreeFunctionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.ThreadSafeAttribute
#include "UnityEngine/Bindings/ThreadSafeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.StaticAccessorType
#include "UnityEngine/Bindings/StaticAccessorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.StaticAccessorType Dot
::UnityEngine::Bindings::StaticAccessorType UnityEngine::Bindings::StaticAccessorType::_get_Dot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_get_Dot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::StaticAccessorType>("UnityEngine.Bindings", "StaticAccessorType", "Dot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.StaticAccessorType Dot
void UnityEngine::Bindings::StaticAccessorType::_set_Dot(::UnityEngine::Bindings::StaticAccessorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_set_Dot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "StaticAccessorType", "Dot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.StaticAccessorType Arrow
::UnityEngine::Bindings::StaticAccessorType UnityEngine::Bindings::StaticAccessorType::_get_Arrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_get_Arrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::StaticAccessorType>("UnityEngine.Bindings", "StaticAccessorType", "Arrow"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.StaticAccessorType Arrow
void UnityEngine::Bindings::StaticAccessorType::_set_Arrow(::UnityEngine::Bindings::StaticAccessorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_set_Arrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "StaticAccessorType", "Arrow", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.StaticAccessorType DoubleColon
::UnityEngine::Bindings::StaticAccessorType UnityEngine::Bindings::StaticAccessorType::_get_DoubleColon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_get_DoubleColon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::StaticAccessorType>("UnityEngine.Bindings", "StaticAccessorType", "DoubleColon"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.StaticAccessorType DoubleColon
void UnityEngine::Bindings::StaticAccessorType::_set_DoubleColon(::UnityEngine::Bindings::StaticAccessorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_set_DoubleColon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "StaticAccessorType", "DoubleColon", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Bindings.StaticAccessorType ArrowWithDefaultReturnIfNull
::UnityEngine::Bindings::StaticAccessorType UnityEngine::Bindings::StaticAccessorType::_get_ArrowWithDefaultReturnIfNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_get_ArrowWithDefaultReturnIfNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bindings::StaticAccessorType>("UnityEngine.Bindings", "StaticAccessorType", "ArrowWithDefaultReturnIfNull"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Bindings.StaticAccessorType ArrowWithDefaultReturnIfNull
void UnityEngine::Bindings::StaticAccessorType::_set_ArrowWithDefaultReturnIfNull(::UnityEngine::Bindings::StaticAccessorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::_set_ArrowWithDefaultReturnIfNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Bindings", "StaticAccessorType", "ArrowWithDefaultReturnIfNull", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Bindings::StaticAccessorType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.StaticAccessorAttribute
#include "UnityEngine/Bindings/StaticAccessorAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Bindings::StaticAccessorAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bindings.StaticAccessorType <Type>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Bindings::StaticAccessorType& UnityEngine::Bindings::StaticAccessorAttribute::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorAttribute::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Bindings::StaticAccessorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.StaticAccessorAttribute.set_Name
void UnityEngine::Bindings::StaticAccessorAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorAttribute::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Bindings.StaticAccessorAttribute.set_Type
void UnityEngine::Bindings::StaticAccessorAttribute::set_Type(::UnityEngine::Bindings::StaticAccessorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::StaticAccessorAttribute::set_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.NativeThrowsAttribute
#include "UnityEngine/Bindings/NativeThrowsAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ThrowsException>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::NativeThrowsAttribute::dyn_$ThrowsException$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeThrowsAttribute::dyn_$ThrowsException$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ThrowsException>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.NativeThrowsAttribute.set_ThrowsException
void UnityEngine::Bindings::NativeThrowsAttribute::set_ThrowsException(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::NativeThrowsAttribute::set_ThrowsException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ThrowsException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Bindings.IgnoreAttribute
#include "UnityEngine/Bindings/IgnoreAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <DoesNotContributeToSize>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Bindings::IgnoreAttribute::dyn_$DoesNotContributeToSize$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::IgnoreAttribute::dyn_$DoesNotContributeToSize$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DoesNotContributeToSize>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Bindings.IgnoreAttribute.set_DoesNotContributeToSize
void UnityEngine::Bindings::IgnoreAttribute::set_DoesNotContributeToSize(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Bindings::IgnoreAttribute::set_DoesNotContributeToSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DoesNotContributeToSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Scripting.UsedByNativeCodeAttribute
#include "UnityEngine/Scripting/UsedByNativeCodeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Scripting::UsedByNativeCodeAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::UsedByNativeCodeAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Scripting.UsedByNativeCodeAttribute.set_Name
void UnityEngine::Scripting::UsedByNativeCodeAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::UsedByNativeCodeAttribute::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Scripting.RequiredByNativeCodeAttribute
#include "UnityEngine/Scripting/RequiredByNativeCodeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::Scripting::RequiredByNativeCodeAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::RequiredByNativeCodeAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Optional>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Scripting::RequiredByNativeCodeAttribute::dyn_$Optional$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::RequiredByNativeCodeAttribute::dyn_$Optional$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Optional>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <GenerateProxy>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Scripting::RequiredByNativeCodeAttribute::dyn_$GenerateProxy$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::RequiredByNativeCodeAttribute::dyn_$GenerateProxy$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GenerateProxy>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Scripting.RequiredByNativeCodeAttribute.set_Name
void UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Scripting.RequiredByNativeCodeAttribute.set_Optional
void UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_Optional(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_Optional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Optional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Scripting.RequiredByNativeCodeAttribute.set_GenerateProxy
void UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_GenerateProxy(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::RequiredByNativeCodeAttribute::set_GenerateProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GenerateProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Scripting.GeneratedByOldBindingsGeneratorAttribute
#include "UnityEngine/Scripting/GeneratedByOldBindingsGeneratorAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ISubsystemDescriptorImpl
#include "UnityEngine/ISubsystemDescriptorImpl.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ISubsystemDescriptorImpl.set_ptr
void UnityEngine::ISubsystemDescriptorImpl::set_ptr(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ISubsystemDescriptorImpl::set_ptr");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ptr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.IntegratedSubsystemDescriptor
#include "UnityEngine/IntegratedSubsystemDescriptor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::IntegratedSubsystemDescriptor::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IntegratedSubsystemDescriptor::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.IntegratedSubsystemDescriptor.UnityEngine.ISubsystemDescriptorImpl.set_ptr
void UnityEngine::IntegratedSubsystemDescriptor::UnityEngine_ISubsystemDescriptorImpl_set_ptr(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IntegratedSubsystemDescriptor::UnityEngine.ISubsystemDescriptorImpl.set_ptr");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ISubsystemDescriptorImpl.set_ptr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SubsystemDescriptor
#include "UnityEngine/SubsystemDescriptor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <id>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::SubsystemDescriptor::dyn_$id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemDescriptor::dyn_$id$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<id>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.SubsystemDescriptor.get_id
::StringW UnityEngine::SubsystemDescriptor::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemDescriptor::get_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Internal_SubsystemInstances
#include "UnityEngine/Internal_SubsystemInstances.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ISubsystem
#include "UnityEngine/ISubsystem.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.IntegratedSubsystem
#include "UnityEngine/IntegratedSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystem> s_IntegratedSubsystemInstances
::System::Collections::Generic::List_1<::UnityEngine::ISubsystem*>* UnityEngine::Internal_SubsystemInstances::_get_s_IntegratedSubsystemInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemInstances::_get_s_IntegratedSubsystemInstances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::ISubsystem*>*>("UnityEngine", "Internal_SubsystemInstances", "s_IntegratedSubsystemInstances"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystem> s_IntegratedSubsystemInstances
void UnityEngine::Internal_SubsystemInstances::_set_s_IntegratedSubsystemInstances(::System::Collections::Generic::List_1<::UnityEngine::ISubsystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemInstances::_set_s_IntegratedSubsystemInstances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Internal_SubsystemInstances", "s_IntegratedSubsystemInstances", value));
}
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystem> s_StandaloneSubsystemInstances
::System::Collections::Generic::List_1<::UnityEngine::ISubsystem*>* UnityEngine::Internal_SubsystemInstances::_get_s_StandaloneSubsystemInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemInstances::_get_s_StandaloneSubsystemInstances");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::ISubsystem*>*>("UnityEngine", "Internal_SubsystemInstances", "s_StandaloneSubsystemInstances"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystem> s_StandaloneSubsystemInstances
void UnityEngine::Internal_SubsystemInstances::_set_s_StandaloneSubsystemInstances(::System::Collections::Generic::List_1<::UnityEngine::ISubsystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemInstances::_set_s_StandaloneSubsystemInstances");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Internal_SubsystemInstances", "s_StandaloneSubsystemInstances", value));
}
// Autogenerated method: UnityEngine.Internal_SubsystemInstances..cctor
void UnityEngine::Internal_SubsystemInstances::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemInstances::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemInstances", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Internal_SubsystemInstances.Internal_InitializeManagedInstance
void UnityEngine::Internal_SubsystemInstances::Internal_InitializeManagedInstance(::System::IntPtr ptr, ::UnityEngine::IntegratedSubsystem* inst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemInstances::Internal_InitializeManagedInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemInstances", "Internal_InitializeManagedInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(inst)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, inst);
}
// Autogenerated method: UnityEngine.Internal_SubsystemInstances.Internal_ClearManagedInstances
void UnityEngine::Internal_SubsystemInstances::Internal_ClearManagedInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemInstances::Internal_ClearManagedInstances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemInstances", "Internal_ClearManagedInstances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Internal_SubsystemInstances.Internal_RemoveInstanceByPtr
void UnityEngine::Internal_SubsystemInstances::Internal_RemoveInstanceByPtr(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemInstances::Internal_RemoveInstanceByPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemInstances", "Internal_RemoveInstanceByPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.Internal_SubsystemInstances.Internal_GetInstanceByPtr
::UnityEngine::IntegratedSubsystem* UnityEngine::Internal_SubsystemInstances::Internal_GetInstanceByPtr(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemInstances::Internal_GetInstanceByPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemInstances", "Internal_GetInstanceByPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::IntegratedSubsystem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ISubsystemDescriptor
#include "UnityEngine/ISubsystemDescriptor.hpp"
// Including type: UnityEngine.SubsystemDescriptor
#include "UnityEngine/SubsystemDescriptor.hpp"
// Including type: UnityEngine.Internal_SubsystemDescriptors
#include "UnityEngine/Internal_SubsystemDescriptors.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ISubsystemDescriptorImpl
#include "UnityEngine/ISubsystemDescriptorImpl.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystemDescriptorImpl> s_IntegratedSubsystemDescriptors
::System::Collections::Generic::List_1<::UnityEngine::ISubsystemDescriptorImpl*>* UnityEngine::Internal_SubsystemDescriptors::_get_s_IntegratedSubsystemDescriptors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemDescriptors::_get_s_IntegratedSubsystemDescriptors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::ISubsystemDescriptorImpl*>*>("UnityEngine", "Internal_SubsystemDescriptors", "s_IntegratedSubsystemDescriptors"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystemDescriptorImpl> s_IntegratedSubsystemDescriptors
void UnityEngine::Internal_SubsystemDescriptors::_set_s_IntegratedSubsystemDescriptors(::System::Collections::Generic::List_1<::UnityEngine::ISubsystemDescriptorImpl*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemDescriptors::_set_s_IntegratedSubsystemDescriptors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Internal_SubsystemDescriptors", "s_IntegratedSubsystemDescriptors", value));
}
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystemDescriptor> s_StandaloneSubsystemDescriptors
::System::Collections::Generic::List_1<::UnityEngine::ISubsystemDescriptor*>* UnityEngine::Internal_SubsystemDescriptors::_get_s_StandaloneSubsystemDescriptors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemDescriptors::_get_s_StandaloneSubsystemDescriptors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::ISubsystemDescriptor*>*>("UnityEngine", "Internal_SubsystemDescriptors", "s_StandaloneSubsystemDescriptors"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<UnityEngine.ISubsystemDescriptor> s_StandaloneSubsystemDescriptors
void UnityEngine::Internal_SubsystemDescriptors::_set_s_StandaloneSubsystemDescriptors(::System::Collections::Generic::List_1<::UnityEngine::ISubsystemDescriptor*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemDescriptors::_set_s_StandaloneSubsystemDescriptors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Internal_SubsystemDescriptors", "s_StandaloneSubsystemDescriptors", value));
}
// Autogenerated method: UnityEngine.Internal_SubsystemDescriptors..cctor
void UnityEngine::Internal_SubsystemDescriptors::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemDescriptors::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemDescriptors", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Internal_SubsystemDescriptors.Internal_AddDescriptor
bool UnityEngine::Internal_SubsystemDescriptors::Internal_AddDescriptor(::UnityEngine::SubsystemDescriptor* descriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemDescriptors::Internal_AddDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemDescriptors", "Internal_AddDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(descriptor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, descriptor);
}
// Autogenerated method: UnityEngine.Internal_SubsystemDescriptors.Internal_InitializeManagedDescriptor
void UnityEngine::Internal_SubsystemDescriptors::Internal_InitializeManagedDescriptor(::System::IntPtr ptr, ::UnityEngine::ISubsystemDescriptorImpl* desc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemDescriptors::Internal_InitializeManagedDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemDescriptors", "Internal_InitializeManagedDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(desc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, desc);
}
// Autogenerated method: UnityEngine.Internal_SubsystemDescriptors.Internal_ClearManagedDescriptors
void UnityEngine::Internal_SubsystemDescriptors::Internal_ClearManagedDescriptors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal_SubsystemDescriptors::Internal_ClearManagedDescriptors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Internal_SubsystemDescriptors", "Internal_ClearManagedDescriptors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SubsystemManager
#include "UnityEngine/SubsystemManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x10AA05C
// Autogenerated static field getter
// Get static field: static private System.Action reloadSubsytemsStarted
::System::Action* UnityEngine::SubsystemManager::_get_reloadSubsytemsStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemManager::_get_reloadSubsytemsStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("UnityEngine", "SubsystemManager", "reloadSubsytemsStarted"));
}
// Autogenerated static field setter
// Set static field: static private System.Action reloadSubsytemsStarted
void UnityEngine::SubsystemManager::_set_reloadSubsytemsStarted(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemManager::_set_reloadSubsytemsStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SubsystemManager", "reloadSubsytemsStarted", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x10AA098
// Autogenerated static field getter
// Get static field: static private System.Action reloadSubsytemsCompleted
::System::Action* UnityEngine::SubsystemManager::_get_reloadSubsytemsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemManager::_get_reloadSubsytemsCompleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("UnityEngine", "SubsystemManager", "reloadSubsytemsCompleted"));
}
// Autogenerated static field setter
// Set static field: static private System.Action reloadSubsytemsCompleted
void UnityEngine::SubsystemManager::_set_reloadSubsytemsCompleted(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemManager::_set_reloadSubsytemsCompleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SubsystemManager", "reloadSubsytemsCompleted", value));
}
// Autogenerated method: UnityEngine.SubsystemManager..cctor
void UnityEngine::SubsystemManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SubsystemManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SubsystemManager.ReportSingleSubsystemAnalytics
void UnityEngine::SubsystemManager::ReportSingleSubsystemAnalytics(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemManager::ReportSingleSubsystemAnalytics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SubsystemManager", "ReportSingleSubsystemAnalytics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: UnityEngine.SubsystemManager.StaticConstructScriptingClassMap
void UnityEngine::SubsystemManager::StaticConstructScriptingClassMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemManager::StaticConstructScriptingClassMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SubsystemManager", "StaticConstructScriptingClassMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SubsystemManager.Internal_ReloadSubsystemsStarted
void UnityEngine::SubsystemManager::Internal_ReloadSubsystemsStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemManager::Internal_ReloadSubsystemsStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SubsystemManager", "Internal_ReloadSubsystemsStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SubsystemManager.Internal_ReloadSubsystemsCompleted
void UnityEngine::SubsystemManager::Internal_ReloadSubsystemsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SubsystemManager::Internal_ReloadSubsystemsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SubsystemManager", "Internal_ReloadSubsystemsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ISubsystemDescriptor
#include "UnityEngine/ISubsystemDescriptor.hpp"
// Including type: UnityEngine.IntegratedSubsystem
#include "UnityEngine/IntegratedSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::IntegratedSubsystem::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IntegratedSubsystem::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.ISubsystemDescriptor m_subsystemDescriptor
[[deprecated("Use field access instead!")]] ::UnityEngine::ISubsystemDescriptor*& UnityEngine::IntegratedSubsystem::dyn_m_subsystemDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IntegratedSubsystem::dyn_m_subsystemDescriptor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_subsystemDescriptor"))->offset;
  return *reinterpret_cast<::UnityEngine::ISubsystemDescriptor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.IntegratedSubsystem.SetHandle
void UnityEngine::IntegratedSubsystem::SetHandle(::UnityEngine::IntegratedSubsystem* inst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IntegratedSubsystem::SetHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inst)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inst);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
// Including type: UnityEngine.TerrainData
#include "UnityEngine/TerrainData.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Terrain.get_terrainData
::UnityEngine::TerrainData* UnityEngine::Terrain::get_terrainData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::get_terrainData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_terrainData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TerrainData*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Terrain.set_terrainData
void UnityEngine::Terrain::set_terrainData(::UnityEngine::TerrainData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::set_terrainData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_terrainData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Terrain.set_detailObjectDistance
void UnityEngine::Terrain::set_detailObjectDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::set_detailObjectDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_detailObjectDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Terrain.set_detailObjectDensity
void UnityEngine::Terrain::set_detailObjectDensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::set_detailObjectDensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_detailObjectDensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Terrain.get_materialTemplate
::UnityEngine::Material* UnityEngine::Terrain::get_materialTemplate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::get_materialTemplate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_materialTemplate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Terrain.set_materialTemplate
void UnityEngine::Terrain::set_materialTemplate(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::set_materialTemplate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_materialTemplate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Terrain.get_allowAutoConnect
bool UnityEngine::Terrain::get_allowAutoConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::get_allowAutoConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowAutoConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Terrain.set_allowAutoConnect
void UnityEngine::Terrain::set_allowAutoConnect(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::set_allowAutoConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowAutoConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Terrain.get_groupingID
int UnityEngine::Terrain::get_groupingID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::get_groupingID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_groupingID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Terrain.set_drawInstanced
void UnityEngine::Terrain::set_drawInstanced(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::set_drawInstanced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_drawInstanced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Terrain.get_activeTerrains
::ArrayW<::UnityEngine::Terrain*> UnityEngine::Terrain::get_activeTerrains() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::get_activeTerrains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Terrain", "get_activeTerrains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Terrain*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Terrain.SetNeighbors
void UnityEngine::Terrain::SetNeighbors(::UnityEngine::Terrain* left, ::UnityEngine::Terrain* top, ::UnityEngine::Terrain* right, ::UnityEngine::Terrain* bottom) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::SetNeighbors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNeighbors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(top), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(bottom)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, left, top, right, bottom);
}
// Autogenerated method: UnityEngine.Terrain.Flush
void UnityEngine::Terrain::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Terrain::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TerrainData
#include "UnityEngine/TerrainData.hpp"
// Including type: UnityEngine.TerrainData/UnityEngine.BoundaryValueType
#include "UnityEngine/TerrainData_BoundaryValueType.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.DetailPrototype
#include "UnityEngine/DetailPrototype.hpp"
// Including type: UnityEngine.TreePrototype
#include "UnityEngine/TreePrototype.hpp"
// Including type: UnityEngine.TerrainLayer
#include "UnityEngine/TerrainLayer.hpp"
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String k_ScriptingInterfaceName
::StringW UnityEngine::TerrainData::_get_k_ScriptingInterfaceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_ScriptingInterfaceName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine", "TerrainData", "k_ScriptingInterfaceName"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_ScriptingInterfaceName
void UnityEngine::TerrainData::_set_k_ScriptingInterfaceName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_ScriptingInterfaceName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_ScriptingInterfaceName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_ScriptingInterfacePrefix
::StringW UnityEngine::TerrainData::_get_k_ScriptingInterfacePrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_ScriptingInterfacePrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine", "TerrainData", "k_ScriptingInterfacePrefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_ScriptingInterfacePrefix
void UnityEngine::TerrainData::_set_k_ScriptingInterfacePrefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_ScriptingInterfacePrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_ScriptingInterfacePrefix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_HeightmapPrefix
::StringW UnityEngine::TerrainData::_get_k_HeightmapPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_HeightmapPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine", "TerrainData", "k_HeightmapPrefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_HeightmapPrefix
void UnityEngine::TerrainData::_set_k_HeightmapPrefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_HeightmapPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_HeightmapPrefix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_DetailDatabasePrefix
::StringW UnityEngine::TerrainData::_get_k_DetailDatabasePrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_DetailDatabasePrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine", "TerrainData", "k_DetailDatabasePrefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_DetailDatabasePrefix
void UnityEngine::TerrainData::_set_k_DetailDatabasePrefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_DetailDatabasePrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_DetailDatabasePrefix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_TreeDatabasePrefix
::StringW UnityEngine::TerrainData::_get_k_TreeDatabasePrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_TreeDatabasePrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine", "TerrainData", "k_TreeDatabasePrefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_TreeDatabasePrefix
void UnityEngine::TerrainData::_set_k_TreeDatabasePrefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_TreeDatabasePrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_TreeDatabasePrefix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_SplatDatabasePrefix
::StringW UnityEngine::TerrainData::_get_k_SplatDatabasePrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_SplatDatabasePrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine", "TerrainData", "k_SplatDatabasePrefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_SplatDatabasePrefix
void UnityEngine::TerrainData::_set_k_SplatDatabasePrefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_SplatDatabasePrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_SplatDatabasePrefix", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 k_MaximumResolution
int UnityEngine::TerrainData::_get_k_MaximumResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MaximumResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MaximumResolution"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 k_MaximumResolution
void UnityEngine::TerrainData::_set_k_MaximumResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MaximumResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MaximumResolution", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 k_MinimumDetailResolutionPerPatch
int UnityEngine::TerrainData::_get_k_MinimumDetailResolutionPerPatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MinimumDetailResolutionPerPatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MinimumDetailResolutionPerPatch"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 k_MinimumDetailResolutionPerPatch
void UnityEngine::TerrainData::_set_k_MinimumDetailResolutionPerPatch(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MinimumDetailResolutionPerPatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MinimumDetailResolutionPerPatch", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 k_MaximumDetailResolutionPerPatch
int UnityEngine::TerrainData::_get_k_MaximumDetailResolutionPerPatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MaximumDetailResolutionPerPatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MaximumDetailResolutionPerPatch"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 k_MaximumDetailResolutionPerPatch
void UnityEngine::TerrainData::_set_k_MaximumDetailResolutionPerPatch(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MaximumDetailResolutionPerPatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MaximumDetailResolutionPerPatch", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 k_MaximumDetailPatchCount
int UnityEngine::TerrainData::_get_k_MaximumDetailPatchCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MaximumDetailPatchCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MaximumDetailPatchCount"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 k_MaximumDetailPatchCount
void UnityEngine::TerrainData::_set_k_MaximumDetailPatchCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MaximumDetailPatchCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MaximumDetailPatchCount", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 k_MaximumDetailsPerRes
int UnityEngine::TerrainData::_get_k_MaximumDetailsPerRes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MaximumDetailsPerRes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MaximumDetailsPerRes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 k_MaximumDetailsPerRes
void UnityEngine::TerrainData::_set_k_MaximumDetailsPerRes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MaximumDetailsPerRes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MaximumDetailsPerRes", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 k_MinimumAlphamapResolution
int UnityEngine::TerrainData::_get_k_MinimumAlphamapResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MinimumAlphamapResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MinimumAlphamapResolution"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 k_MinimumAlphamapResolution
void UnityEngine::TerrainData::_set_k_MinimumAlphamapResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MinimumAlphamapResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MinimumAlphamapResolution", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 k_MaximumAlphamapResolution
int UnityEngine::TerrainData::_get_k_MaximumAlphamapResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MaximumAlphamapResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MaximumAlphamapResolution"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 k_MaximumAlphamapResolution
void UnityEngine::TerrainData::_set_k_MaximumAlphamapResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MaximumAlphamapResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MaximumAlphamapResolution", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 k_MinimumBaseMapResolution
int UnityEngine::TerrainData::_get_k_MinimumBaseMapResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MinimumBaseMapResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MinimumBaseMapResolution"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 k_MinimumBaseMapResolution
void UnityEngine::TerrainData::_set_k_MinimumBaseMapResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MinimumBaseMapResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MinimumBaseMapResolution", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 k_MaximumBaseMapResolution
int UnityEngine::TerrainData::_get_k_MaximumBaseMapResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_get_k_MaximumBaseMapResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "TerrainData", "k_MaximumBaseMapResolution"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 k_MaximumBaseMapResolution
void UnityEngine::TerrainData::_set_k_MaximumBaseMapResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::_set_k_MaximumBaseMapResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData", "k_MaximumBaseMapResolution", value));
}
// Autogenerated method: UnityEngine.TerrainData.get_heightmapResolution
int UnityEngine::TerrainData::get_heightmapResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_heightmapResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_heightmapResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.set_heightmapResolution
void UnityEngine::TerrainData::set_heightmapResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::set_heightmapResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_heightmapResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainData.get_internalHeightmapResolution
int UnityEngine::TerrainData::get_internalHeightmapResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_internalHeightmapResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_internalHeightmapResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.set_internalHeightmapResolution
void UnityEngine::TerrainData::set_internalHeightmapResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::set_internalHeightmapResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_internalHeightmapResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainData.get_size
::UnityEngine::Vector3 UnityEngine::TerrainData::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.set_size
void UnityEngine::TerrainData::set_size(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::set_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainData.get_detailResolutionPerPatch
int UnityEngine::TerrainData::get_detailResolutionPerPatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_detailResolutionPerPatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_detailResolutionPerPatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.set_detailPrototypes
void UnityEngine::TerrainData::set_detailPrototypes(::ArrayW<::UnityEngine::DetailPrototype*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::set_detailPrototypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_detailPrototypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainData.get_treeInstances
::ArrayW<::UnityEngine::TreeInstance> UnityEngine::TerrainData::get_treeInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_treeInstances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_treeInstances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::TreeInstance>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.get_treePrototypes
::ArrayW<::UnityEngine::TreePrototype*> UnityEngine::TerrainData::get_treePrototypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_treePrototypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_treePrototypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::TreePrototype*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.set_treePrototypes
void UnityEngine::TerrainData::set_treePrototypes(::ArrayW<::UnityEngine::TreePrototype*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::set_treePrototypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_treePrototypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainData.get_alphamapLayers
int UnityEngine::TerrainData::get_alphamapLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_alphamapLayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alphamapLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.get_alphamapResolution
int UnityEngine::TerrainData::get_alphamapResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_alphamapResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alphamapResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.set_alphamapResolution
void UnityEngine::TerrainData::set_alphamapResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::set_alphamapResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alphamapResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainData.get_Internal_alphamapResolution
int UnityEngine::TerrainData::get_Internal_alphamapResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_Internal_alphamapResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Internal_alphamapResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.set_Internal_alphamapResolution
void UnityEngine::TerrainData::set_Internal_alphamapResolution(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::set_Internal_alphamapResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Internal_alphamapResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainData.get_alphamapWidth
int UnityEngine::TerrainData::get_alphamapWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_alphamapWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alphamapWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.get_alphamapHeight
int UnityEngine::TerrainData::get_alphamapHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_alphamapHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alphamapHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.get_terrainLayers
::ArrayW<::UnityEngine::TerrainLayer*> UnityEngine::TerrainData::get_terrainLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_terrainLayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_terrainLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::TerrainLayer*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.set_terrainLayers
void UnityEngine::TerrainData::set_terrainLayers(::ArrayW<::UnityEngine::TerrainLayer*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::set_terrainLayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_terrainLayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainData.get_users
::ArrayW<::UnityEngine::Terrain*> UnityEngine::TerrainData::get_users() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_users");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_users", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Terrain*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData..cctor
void UnityEngine::TerrainData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TerrainData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.GetBoundaryValue
int UnityEngine::TerrainData::GetBoundaryValue(::UnityEngine::TerrainData::BoundaryValueType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::GetBoundaryValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TerrainData", "GetBoundaryValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.TerrainData.Internal_Create
void UnityEngine::TerrainData::Internal_Create(::UnityEngine::TerrainData* terrainData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TerrainData", "Internal_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(terrainData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, terrainData);
}
// Autogenerated method: UnityEngine.TerrainData.GetHeights
::ArrayW<float> UnityEngine::TerrainData::GetHeights(int xBase, int yBase, int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::GetHeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xBase), ::il2cpp_utils::ExtractType(yBase), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method, xBase, yBase, width, height);
}
// Autogenerated method: UnityEngine.TerrainData.Internal_GetHeights
::ArrayW<float> UnityEngine::TerrainData::Internal_GetHeights(int xBase, int yBase, int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::Internal_GetHeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_GetHeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xBase), ::il2cpp_utils::ExtractType(yBase), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method, xBase, yBase, width, height);
}
// Autogenerated method: UnityEngine.TerrainData.SetHeights
void UnityEngine::TerrainData::SetHeights(int xBase, int yBase, ::ArrayW<float> heights) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::SetHeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xBase), ::il2cpp_utils::ExtractType(yBase), ::il2cpp_utils::ExtractType(heights)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xBase, yBase, heights);
}
// Autogenerated method: UnityEngine.TerrainData.Internal_SetHeights
void UnityEngine::TerrainData::Internal_SetHeights(int xBase, int yBase, int width, int height, ::ArrayW<float> heights) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::Internal_SetHeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_SetHeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xBase), ::il2cpp_utils::ExtractType(yBase), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(heights)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xBase, yBase, width, height, heights);
}
// Autogenerated method: UnityEngine.TerrainData.SetDetailResolution
void UnityEngine::TerrainData::SetDetailResolution(int detailResolution, int resolutionPerPatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::SetDetailResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDetailResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(detailResolution), ::il2cpp_utils::ExtractType(resolutionPerPatch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, detailResolution, resolutionPerPatch);
}
// Autogenerated method: UnityEngine.TerrainData.Internal_SetDetailResolution
void UnityEngine::TerrainData::Internal_SetDetailResolution(int patchCount, int resolutionPerPatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::Internal_SetDetailResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_SetDetailResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(patchCount), ::il2cpp_utils::ExtractType(resolutionPerPatch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, patchCount, resolutionPerPatch);
}
// Autogenerated method: UnityEngine.TerrainData.RefreshPrototypes
void UnityEngine::TerrainData::RefreshPrototypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::RefreshPrototypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshPrototypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.SetDetailLayer
void UnityEngine::TerrainData::SetDetailLayer(int xBase, int yBase, int layer, ::ArrayW<int> details) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::SetDetailLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDetailLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xBase), ::il2cpp_utils::ExtractType(yBase), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(details)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xBase, yBase, layer, details);
}
// Autogenerated method: UnityEngine.TerrainData.Internal_SetDetailLayer
void UnityEngine::TerrainData::Internal_SetDetailLayer(int xBase, int yBase, int totalWidth, int totalHeight, int detailIndex, ::ArrayW<int> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::Internal_SetDetailLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_SetDetailLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xBase), ::il2cpp_utils::ExtractType(yBase), ::il2cpp_utils::ExtractType(totalWidth), ::il2cpp_utils::ExtractType(totalHeight), ::il2cpp_utils::ExtractType(detailIndex), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xBase, yBase, totalWidth, totalHeight, detailIndex, data);
}
// Autogenerated method: UnityEngine.TerrainData.Internal_GetTreeInstances
::ArrayW<::UnityEngine::TreeInstance> UnityEngine::TerrainData::Internal_GetTreeInstances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::Internal_GetTreeInstances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_GetTreeInstances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::TreeInstance>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.SetTreeInstances
void UnityEngine::TerrainData::SetTreeInstances(::ArrayW<::UnityEngine::TreeInstance> instances, bool snapToHeightmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::SetTreeInstances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTreeInstances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instances), ::il2cpp_utils::ExtractType(snapToHeightmap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instances, snapToHeightmap);
}
// Autogenerated method: UnityEngine.TerrainData.GetAlphamaps
::ArrayW<float> UnityEngine::TerrainData::GetAlphamaps(int x, int y, int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::GetAlphamaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAlphamaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method, x, y, width, height);
}
// Autogenerated method: UnityEngine.TerrainData.Internal_GetAlphamaps
::ArrayW<float> UnityEngine::TerrainData::Internal_GetAlphamaps(int x, int y, int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::Internal_GetAlphamaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_GetAlphamaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method, x, y, width, height);
}
// Autogenerated method: UnityEngine.TerrainData.GetAlphamapResolutionInternal
float UnityEngine::TerrainData::GetAlphamapResolutionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::GetAlphamapResolutionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAlphamapResolutionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainData.SetAlphamaps
void UnityEngine::TerrainData::SetAlphamaps(int x, int y, ::ArrayW<float> map) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::SetAlphamaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAlphamaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(map)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, map);
}
// Autogenerated method: UnityEngine.TerrainData.Internal_SetAlphamaps
void UnityEngine::TerrainData::Internal_SetAlphamaps(int x, int y, int width, int height, ::ArrayW<float> map) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::Internal_SetAlphamaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_SetAlphamaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(map)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, width, height, map);
}
// Autogenerated method: UnityEngine.TerrainData.get_size_Injected
void UnityEngine::TerrainData::get_size_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::get_size_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.TerrainData.set_size_Injected
void UnityEngine::TerrainData::set_size_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::set_size_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_size_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TerrainData/UnityEngine.BoundaryValueType
#include "UnityEngine/TerrainData_BoundaryValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxHeightmapRes
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MaxHeightmapRes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MaxHeightmapRes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MaxHeightmapRes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxHeightmapRes
void UnityEngine::TerrainData::BoundaryValueType::_set_MaxHeightmapRes(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MaxHeightmapRes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MaxHeightmapRes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MinDetailResPerPatch
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MinDetailResPerPatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MinDetailResPerPatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MinDetailResPerPatch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MinDetailResPerPatch
void UnityEngine::TerrainData::BoundaryValueType::_set_MinDetailResPerPatch(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MinDetailResPerPatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MinDetailResPerPatch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxDetailResPerPatch
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MaxDetailResPerPatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MaxDetailResPerPatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MaxDetailResPerPatch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxDetailResPerPatch
void UnityEngine::TerrainData::BoundaryValueType::_set_MaxDetailResPerPatch(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MaxDetailResPerPatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MaxDetailResPerPatch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxDetailPatchCount
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MaxDetailPatchCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MaxDetailPatchCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MaxDetailPatchCount"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxDetailPatchCount
void UnityEngine::TerrainData::BoundaryValueType::_set_MaxDetailPatchCount(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MaxDetailPatchCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MaxDetailPatchCount", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxDetailsPerRes
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MaxDetailsPerRes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MaxDetailsPerRes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MaxDetailsPerRes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxDetailsPerRes
void UnityEngine::TerrainData::BoundaryValueType::_set_MaxDetailsPerRes(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MaxDetailsPerRes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MaxDetailsPerRes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MinAlphamapRes
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MinAlphamapRes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MinAlphamapRes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MinAlphamapRes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MinAlphamapRes
void UnityEngine::TerrainData::BoundaryValueType::_set_MinAlphamapRes(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MinAlphamapRes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MinAlphamapRes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxAlphamapRes
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MaxAlphamapRes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MaxAlphamapRes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MaxAlphamapRes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxAlphamapRes
void UnityEngine::TerrainData::BoundaryValueType::_set_MaxAlphamapRes(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MaxAlphamapRes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MaxAlphamapRes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MinBaseMapRes
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MinBaseMapRes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MinBaseMapRes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MinBaseMapRes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MinBaseMapRes
void UnityEngine::TerrainData::BoundaryValueType::_set_MinBaseMapRes(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MinBaseMapRes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MinBaseMapRes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxBaseMapRes
::UnityEngine::TerrainData::BoundaryValueType UnityEngine::TerrainData::BoundaryValueType::_get_MaxBaseMapRes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_get_MaxBaseMapRes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TerrainData::BoundaryValueType>("UnityEngine", "TerrainData/BoundaryValueType", "MaxBaseMapRes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TerrainData/UnityEngine.BoundaryValueType MaxBaseMapRes
void UnityEngine::TerrainData::BoundaryValueType::_set_MaxBaseMapRes(::UnityEngine::TerrainData::BoundaryValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::_set_MaxBaseMapRes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TerrainData/BoundaryValueType", "MaxBaseMapRes", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::TerrainData::BoundaryValueType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainData::BoundaryValueType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TreePrototype
#include "UnityEngine/TreePrototype.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.GameObject m_Prefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::TreePrototype::dyn_m_Prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::dyn_m_Prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Prefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_BendFactor
[[deprecated("Use field access instead!")]] float& UnityEngine::TreePrototype::dyn_m_BendFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::dyn_m_BendFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BendFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.TreePrototype.get_prefab
::UnityEngine::GameObject* UnityEngine::TreePrototype::get_prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::get_prefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TreePrototype.set_prefab
void UnityEngine::TreePrototype::set_prefab(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::set_prefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_prefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TreePrototype.get_bendFactor
float UnityEngine::TreePrototype::get_bendFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::get_bendFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bendFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TreePrototype.set_bendFactor
void UnityEngine::TreePrototype::set_bendFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::set_bendFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bendFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TreePrototype.Equals
bool UnityEngine::TreePrototype::Equals(::UnityEngine::TreePrototype* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.TreePrototype.Equals
bool UnityEngine::TreePrototype::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.TreePrototype.GetHashCode
int UnityEngine::TreePrototype::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TreePrototype::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.DetailRenderMode
#include "UnityEngine/DetailRenderMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.DetailRenderMode GrassBillboard
::UnityEngine::DetailRenderMode UnityEngine::DetailRenderMode::_get_GrassBillboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailRenderMode::_get_GrassBillboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DetailRenderMode>("UnityEngine", "DetailRenderMode", "GrassBillboard"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DetailRenderMode GrassBillboard
void UnityEngine::DetailRenderMode::_set_GrassBillboard(::UnityEngine::DetailRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailRenderMode::_set_GrassBillboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DetailRenderMode", "GrassBillboard", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DetailRenderMode VertexLit
::UnityEngine::DetailRenderMode UnityEngine::DetailRenderMode::_get_VertexLit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailRenderMode::_get_VertexLit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DetailRenderMode>("UnityEngine", "DetailRenderMode", "VertexLit"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DetailRenderMode VertexLit
void UnityEngine::DetailRenderMode::_set_VertexLit(::UnityEngine::DetailRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailRenderMode::_set_VertexLit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DetailRenderMode", "VertexLit", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DetailRenderMode Grass
::UnityEngine::DetailRenderMode UnityEngine::DetailRenderMode::_get_Grass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailRenderMode::_get_Grass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DetailRenderMode>("UnityEngine", "DetailRenderMode", "Grass"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DetailRenderMode Grass
void UnityEngine::DetailRenderMode::_set_Grass(::UnityEngine::DetailRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailRenderMode::_set_Grass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DetailRenderMode", "Grass", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::DetailRenderMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailRenderMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.DetailPrototype
#include "UnityEngine/DetailPrototype.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.DetailRenderMode
#include "UnityEngine/DetailRenderMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.GameObject m_Prototype
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& UnityEngine::DetailPrototype::dyn_m_Prototype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::dyn_m_Prototype");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Prototype"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Texture2D m_PrototypeTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& UnityEngine::DetailPrototype::dyn_m_PrototypeTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::dyn_m_PrototypeTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PrototypeTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Color m_HealthyColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& UnityEngine::DetailPrototype::dyn_m_HealthyColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::dyn_m_HealthyColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HealthyColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Color m_DryColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& UnityEngine::DetailPrototype::dyn_m_DryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::dyn_m_DryColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DryColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_MinWidth
[[deprecated("Use field access instead!")]] float& UnityEngine::DetailPrototype::dyn_m_MinWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::dyn_m_MinWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MinWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_MaxWidth
[[deprecated("Use field access instead!")]] float& UnityEngine::DetailPrototype::dyn_m_MaxWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::dyn_m_MaxWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_MinHeight
[[deprecated("Use field access instead!")]] float& UnityEngine::DetailPrototype::dyn_m_MinHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::dyn_m_MinHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MinHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_MaxHeight
[[deprecated("Use field access instead!")]] float& UnityEngine::DetailPrototype::dyn_m_MaxHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::dyn_m_MaxHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_NoiseSpread
[[deprecated("Use field access instead!")]] float& UnityEngine::DetailPrototype::dyn_m_NoiseSpread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::dyn_m_NoiseSpread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NoiseSpread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_BendFactor
[[deprecated("Use field access instead!")]] float& UnityEngine::DetailPrototype::dyn_m_BendFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::dyn_m_BendFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BendFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_RenderMode
[[deprecated("Use field access instead!")]] int& UnityEngine::DetailPrototype::dyn_m_RenderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::dyn_m_RenderMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RenderMode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_UsePrototypeMesh
[[deprecated("Use field access instead!")]] int& UnityEngine::DetailPrototype::dyn_m_UsePrototypeMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::dyn_m_UsePrototypeMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UsePrototypeMesh"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.DetailPrototype.set_prototype
void UnityEngine::DetailPrototype::set_prototype(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::set_prototype");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_prototype", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.DetailPrototype.set_prototypeTexture
void UnityEngine::DetailPrototype::set_prototypeTexture(::UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::set_prototypeTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_prototypeTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.DetailPrototype.get_minWidth
float UnityEngine::DetailPrototype::get_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::get_minWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.DetailPrototype.set_minWidth
void UnityEngine::DetailPrototype::set_minWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::set_minWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_minWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.DetailPrototype.get_maxWidth
float UnityEngine::DetailPrototype::get_maxWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::get_maxWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.DetailPrototype.set_maxWidth
void UnityEngine::DetailPrototype::set_maxWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::set_maxWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.DetailPrototype.get_minHeight
float UnityEngine::DetailPrototype::get_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::get_minHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.DetailPrototype.set_minHeight
void UnityEngine::DetailPrototype::set_minHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::set_minHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_minHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.DetailPrototype.get_maxHeight
float UnityEngine::DetailPrototype::get_maxHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::get_maxHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.DetailPrototype.set_maxHeight
void UnityEngine::DetailPrototype::set_maxHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::set_maxHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.DetailPrototype.get_noiseSpread
float UnityEngine::DetailPrototype::get_noiseSpread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::get_noiseSpread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noiseSpread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.DetailPrototype.set_noiseSpread
void UnityEngine::DetailPrototype::set_noiseSpread(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::set_noiseSpread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_noiseSpread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.DetailPrototype.get_bendFactor
float UnityEngine::DetailPrototype::get_bendFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::get_bendFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bendFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.DetailPrototype.set_bendFactor
void UnityEngine::DetailPrototype::set_bendFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::set_bendFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bendFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.DetailPrototype.get_healthyColor
::UnityEngine::Color UnityEngine::DetailPrototype::get_healthyColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::get_healthyColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_healthyColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.DetailPrototype.set_healthyColor
void UnityEngine::DetailPrototype::set_healthyColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::set_healthyColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_healthyColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.DetailPrototype.get_dryColor
::UnityEngine::Color UnityEngine::DetailPrototype::get_dryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::get_dryColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dryColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.DetailPrototype.set_dryColor
void UnityEngine::DetailPrototype::set_dryColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::set_dryColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dryColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.DetailPrototype.get_renderMode
::UnityEngine::DetailRenderMode UnityEngine::DetailPrototype::get_renderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::get_renderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::DetailRenderMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.DetailPrototype.set_renderMode
void UnityEngine::DetailPrototype::set_renderMode(::UnityEngine::DetailRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::set_renderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_renderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.DetailPrototype.set_usePrototypeMesh
void UnityEngine::DetailPrototype::set_usePrototypeMesh(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::set_usePrototypeMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_usePrototypeMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.DetailPrototype.Equals
bool UnityEngine::DetailPrototype::Equals(::UnityEngine::DetailPrototype* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.DetailPrototype.Equals
bool UnityEngine::DetailPrototype::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.DetailPrototype.GetHashCode
int UnityEngine::DetailPrototype::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DetailPrototype::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TerrainLayer
#include "UnityEngine/TerrainLayer.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TerrainLayer.get_diffuseTexture
::UnityEngine::Texture2D* UnityEngine::TerrainLayer::get_diffuseTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::get_diffuseTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_diffuseTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainLayer.set_diffuseTexture
void UnityEngine::TerrainLayer::set_diffuseTexture(::UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::set_diffuseTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_diffuseTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainLayer.get_normalMapTexture
::UnityEngine::Texture2D* UnityEngine::TerrainLayer::get_normalMapTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::get_normalMapTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalMapTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainLayer.set_normalMapTexture
void UnityEngine::TerrainLayer::set_normalMapTexture(::UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::set_normalMapTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_normalMapTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainLayer.get_maskMapTexture
::UnityEngine::Texture2D* UnityEngine::TerrainLayer::get_maskMapTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::get_maskMapTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maskMapTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainLayer.set_maskMapTexture
void UnityEngine::TerrainLayer::set_maskMapTexture(::UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::set_maskMapTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maskMapTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainLayer.get_tileSize
::UnityEngine::Vector2 UnityEngine::TerrainLayer::get_tileSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::get_tileSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tileSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainLayer.set_tileSize
void UnityEngine::TerrainLayer::set_tileSize(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::set_tileSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tileSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainLayer.get_tileOffset
::UnityEngine::Vector2 UnityEngine::TerrainLayer::get_tileOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::get_tileOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tileOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainLayer.set_tileOffset
void UnityEngine::TerrainLayer::set_tileOffset(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::set_tileOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tileOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainLayer.get_specular
::UnityEngine::Color UnityEngine::TerrainLayer::get_specular() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::get_specular");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_specular", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainLayer.set_specular
void UnityEngine::TerrainLayer::set_specular(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::set_specular");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_specular", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainLayer.get_metallic
float UnityEngine::TerrainLayer::get_metallic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::get_metallic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_metallic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainLayer.set_metallic
void UnityEngine::TerrainLayer::set_metallic(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::set_metallic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_metallic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainLayer.get_smoothness
float UnityEngine::TerrainLayer::get_smoothness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::get_smoothness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_smoothness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TerrainLayer.set_smoothness
void UnityEngine::TerrainLayer::set_smoothness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::set_smoothness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_smoothness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainLayer.set_normalScale
void UnityEngine::TerrainLayer::set_normalScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::set_normalScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_normalScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainLayer.set_diffuseRemapMin
void UnityEngine::TerrainLayer::set_diffuseRemapMin(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::set_diffuseRemapMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_diffuseRemapMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainLayer.set_diffuseRemapMax
void UnityEngine::TerrainLayer::set_diffuseRemapMax(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::set_diffuseRemapMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_diffuseRemapMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainLayer.set_maskMapRemapMin
void UnityEngine::TerrainLayer::set_maskMapRemapMin(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::set_maskMapRemapMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maskMapRemapMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainLayer.set_maskMapRemapMax
void UnityEngine::TerrainLayer::set_maskMapRemapMax(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::set_maskMapRemapMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maskMapRemapMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TerrainLayer.Internal_Create
void UnityEngine::TerrainLayer::Internal_Create(::UnityEngine::TerrainLayer* layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TerrainLayer", "Internal_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layer);
}
// Autogenerated method: UnityEngine.TerrainLayer.get_tileSize_Injected
void UnityEngine::TerrainLayer::get_tileSize_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::get_tileSize_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tileSize_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.TerrainLayer.set_tileSize_Injected
void UnityEngine::TerrainLayer::set_tileSize_Injected(ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::set_tileSize_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tileSize_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.TerrainLayer.get_tileOffset_Injected
void UnityEngine::TerrainLayer::get_tileOffset_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::get_tileOffset_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tileOffset_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.TerrainLayer.set_tileOffset_Injected
void UnityEngine::TerrainLayer::set_tileOffset_Injected(ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::set_tileOffset_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tileOffset_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.TerrainLayer.get_specular_Injected
void UnityEngine::TerrainLayer::get_specular_Injected(ByRef<::UnityEngine::Color> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::get_specular_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_specular_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Color&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.TerrainLayer.set_specular_Injected
void UnityEngine::TerrainLayer::set_specular_Injected(ByRef<::UnityEngine::Color> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::set_specular_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_specular_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.TerrainLayer.set_diffuseRemapMin_Injected
void UnityEngine::TerrainLayer::set_diffuseRemapMin_Injected(ByRef<::UnityEngine::Vector4> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::set_diffuseRemapMin_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_diffuseRemapMin_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.TerrainLayer.set_diffuseRemapMax_Injected
void UnityEngine::TerrainLayer::set_diffuseRemapMax_Injected(ByRef<::UnityEngine::Vector4> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::set_diffuseRemapMax_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_diffuseRemapMax_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.TerrainLayer.set_maskMapRemapMin_Injected
void UnityEngine::TerrainLayer::set_maskMapRemapMin_Injected(ByRef<::UnityEngine::Vector4> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::set_maskMapRemapMin_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maskMapRemapMin_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.TerrainLayer.set_maskMapRemapMax_Injected
void UnityEngine::TerrainLayer::set_maskMapRemapMax_Injected(ByRef<::UnityEngine::Vector4> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TerrainLayer::set_maskMapRemapMax_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maskMapRemapMax_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks
#include "UnityEngine/Experimental/TerrainAPI/TerrainCallbacks.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.HeightmapChangedCallback
#include "UnityEngine/Experimental/TerrainAPI/TerrainCallbacks_HeightmapChangedCallback.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.TextureChangedCallback
#include "UnityEngine/Experimental/TerrainAPI/TerrainCallbacks_TextureChangedCallback.hpp"
// Including type: UnityEngine.TerrainData
#include "UnityEngine/TerrainData.hpp"
// Including type: UnityEngine.RectInt
#include "UnityEngine/RectInt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x10C84B8
// Autogenerated static field getter
// Get static field: static private UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.HeightmapChangedCallback heightmapChanged
::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback* UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::_get_heightmapChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::_get_heightmapChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback*>("UnityEngine.Experimental.TerrainAPI", "TerrainCallbacks", "heightmapChanged"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.HeightmapChangedCallback heightmapChanged
void UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::_set_heightmapChanged(::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::_set_heightmapChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.TerrainAPI", "TerrainCallbacks", "heightmapChanged", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x10C84F4
// Autogenerated static field getter
// Get static field: static private UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.TextureChangedCallback textureChanged
::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback* UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::_get_textureChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::_get_textureChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback*>("UnityEngine.Experimental.TerrainAPI", "TerrainCallbacks", "textureChanged"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.TextureChangedCallback textureChanged
void UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::_set_textureChanged(::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::_set_textureChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.TerrainAPI", "TerrainCallbacks", "textureChanged", value));
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks.InvokeHeightmapChangedCallback
void UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::InvokeHeightmapChangedCallback(::UnityEngine::TerrainData* terrainData, ::UnityEngine::RectInt heightRegion, bool synched) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::InvokeHeightmapChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.TerrainAPI", "TerrainCallbacks", "InvokeHeightmapChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(terrainData), ::il2cpp_utils::ExtractType(heightRegion), ::il2cpp_utils::ExtractType(synched)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, terrainData, heightRegion, synched);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks.InvokeTextureChangedCallback
void UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::InvokeTextureChangedCallback(::UnityEngine::TerrainData* terrainData, ::StringW textureName, ::UnityEngine::RectInt texelRegion, bool synched) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::InvokeTextureChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.TerrainAPI", "TerrainCallbacks", "InvokeTextureChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(terrainData), ::il2cpp_utils::ExtractType(textureName), ::il2cpp_utils::ExtractType(texelRegion), ::il2cpp_utils::ExtractType(synched)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, terrainData, textureName, texelRegion, synched);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.HeightmapChangedCallback
#include "UnityEngine/Experimental/TerrainAPI/TerrainCallbacks_HeightmapChangedCallback.hpp"
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
// Including type: UnityEngine.RectInt
#include "UnityEngine/RectInt.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.HeightmapChangedCallback.Invoke
void UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback::Invoke(::UnityEngine::Terrain* terrain, ::UnityEngine::RectInt heightRegion, bool synched) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(terrain), ::il2cpp_utils::ExtractType(heightRegion), ::il2cpp_utils::ExtractType(synched)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, terrain, heightRegion, synched);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.HeightmapChangedCallback.BeginInvoke
::System::IAsyncResult* UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback::BeginInvoke(::UnityEngine::Terrain* terrain, ::UnityEngine::RectInt heightRegion, bool synched, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(terrain), ::il2cpp_utils::ExtractType(heightRegion), ::il2cpp_utils::ExtractType(synched), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, terrain, heightRegion, synched, callback, object);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.HeightmapChangedCallback.EndInvoke
void UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::HeightmapChangedCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.TextureChangedCallback
#include "UnityEngine/Experimental/TerrainAPI/TerrainCallbacks_TextureChangedCallback.hpp"
// Including type: UnityEngine.Terrain
#include "UnityEngine/Terrain.hpp"
// Including type: UnityEngine.RectInt
#include "UnityEngine/RectInt.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.TextureChangedCallback.Invoke
void UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback::Invoke(::UnityEngine::Terrain* terrain, ::StringW textureName, ::UnityEngine::RectInt texelRegion, bool synched) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(terrain), ::il2cpp_utils::ExtractType(textureName), ::il2cpp_utils::ExtractType(texelRegion), ::il2cpp_utils::ExtractType(synched)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, terrain, textureName, texelRegion, synched);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.TextureChangedCallback.BeginInvoke
::System::IAsyncResult* UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback::BeginInvoke(::UnityEngine::Terrain* terrain, ::StringW textureName, ::UnityEngine::RectInt texelRegion, bool synched, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(terrain), ::il2cpp_utils::ExtractType(textureName), ::il2cpp_utils::ExtractType(texelRegion), ::il2cpp_utils::ExtractType(synched), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, terrain, textureName, texelRegion, synched, callback, object);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainCallbacks/UnityEngine.Experimental.TerrainAPI.TextureChangedCallback.EndInvoke
void UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainCallbacks::TextureChangedCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainMap
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainMap.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.TerrainGroups
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_TerrainGroups.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.<>c__DisplayClass4_0
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_--c__DisplayClass4_0.hpp"
// Including type: UnityEngine.Experimental.TerrainAPI.TerrainUtility/UnityEngine.Experimental.TerrainAPI.<>c__DisplayClass4_1
#include "UnityEngine/Experimental/TerrainAPI/TerrainUtility_--c__DisplayClass4_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility.HasValidTerrains
bool UnityEngine::Experimental::TerrainAPI::TerrainUtility::HasValidTerrains() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::HasValidTerrains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.TerrainAPI", "TerrainUtility", "HasValidTerrains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility.ClearConnectivity
void UnityEngine::Experimental::TerrainAPI::TerrainUtility::ClearConnectivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::ClearConnectivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.TerrainAPI", "TerrainUtility", "ClearConnectivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility.CollectTerrains
::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainGroups* UnityEngine::Experimental::TerrainAPI::TerrainUtility::CollectTerrains(bool onlyAutoConnectedTerrains) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::CollectTerrains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.TerrainAPI", "TerrainUtility", "CollectTerrains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onlyAutoConnectedTerrains)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::TerrainAPI::TerrainUtility::TerrainGroups*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, onlyAutoConnectedTerrains);
}
// Autogenerated method: UnityEngine.Experimental.TerrainAPI.TerrainUtility.AutoConnect
void UnityEngine::Experimental::TerrainAPI::TerrainUtility::AutoConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::TerrainAPI::TerrainUtility::AutoConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.TerrainAPI", "TerrainUtility", "AutoConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
