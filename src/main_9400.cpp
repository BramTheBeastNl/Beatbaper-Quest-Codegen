// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TouchScreenKeyboard
#include "UnityEngine/TouchScreenKeyboard.hpp"
// Including type: UnityEngine.TouchScreenKeyboard/Status
#include "UnityEngine/TouchScreenKeyboard_Status.hpp"
// Including type: UnityEngine.TouchScreenKeyboard_InternalConstructorHelperArguments
#include "UnityEngine/TouchScreenKeyboard_InternalConstructorHelperArguments.hpp"
// Including type: UnityEngine.RangeInt
#include "UnityEngine/RangeInt.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TouchScreenKeyboard.Internal_Destroy
void UnityEngine::TouchScreenKeyboard::Internal_Destroy(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::Internal_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "Internal_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.Destroy
void UnityEngine::TouchScreenKeyboard::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.TouchScreenKeyboard_InternalConstructorHelper
System::IntPtr UnityEngine::TouchScreenKeyboard::TouchScreenKeyboard_InternalConstructorHelper(UnityEngine::TouchScreenKeyboard_InternalConstructorHelperArguments& arguments, ::Il2CppString* text, ::Il2CppString* textPlaceholder) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::TouchScreenKeyboard_InternalConstructorHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "TouchScreenKeyboard_InternalConstructorHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arguments), ::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(textPlaceholder)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, arguments, text, textPlaceholder);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_isSupported
bool UnityEngine::TouchScreenKeyboard::get_isSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::get_isSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "get_isSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_isInPlaceEditingAllowed
bool UnityEngine::TouchScreenKeyboard::get_isInPlaceEditingAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::get_isInPlaceEditingAllowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "get_isInPlaceEditingAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.Open
UnityEngine::TouchScreenKeyboard* UnityEngine::TouchScreenKeyboard::Open(::Il2CppString* text, UnityEngine::TouchScreenKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure, bool alert, ::Il2CppString* textPlaceholder, int characterLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(keyboardType), ::il2cpp_utils::ExtractType(autocorrection), ::il2cpp_utils::ExtractType(multiline), ::il2cpp_utils::ExtractType(secure), ::il2cpp_utils::ExtractType(alert), ::il2cpp_utils::ExtractType(textPlaceholder), ::il2cpp_utils::ExtractType(characterLimit)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TouchScreenKeyboard*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, keyboardType, autocorrection, multiline, secure, alert, textPlaceholder, characterLimit);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.Open
UnityEngine::TouchScreenKeyboard* UnityEngine::TouchScreenKeyboard::Open(::Il2CppString* text, UnityEngine::TouchScreenKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(keyboardType), ::il2cpp_utils::ExtractType(autocorrection), ::il2cpp_utils::ExtractType(multiline), ::il2cpp_utils::ExtractType(secure)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TouchScreenKeyboard*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, keyboardType, autocorrection, multiline, secure);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_text
::Il2CppString* UnityEngine::TouchScreenKeyboard::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.set_text
void UnityEngine::TouchScreenKeyboard::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.set_hideInput
void UnityEngine::TouchScreenKeyboard::set_hideInput(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::set_hideInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "set_hideInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_active
bool UnityEngine::TouchScreenKeyboard::get_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::get_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.set_active
void UnityEngine::TouchScreenKeyboard::set_active(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::set_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_status
UnityEngine::TouchScreenKeyboard::Status UnityEngine::TouchScreenKeyboard::get_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::get_status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TouchScreenKeyboard::Status, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.set_characterLimit
void UnityEngine::TouchScreenKeyboard::set_characterLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::set_characterLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_characterLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_canGetSelection
bool UnityEngine::TouchScreenKeyboard::get_canGetSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::get_canGetSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canGetSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_canSetSelection
bool UnityEngine::TouchScreenKeyboard::get_canSetSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::get_canSetSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canSetSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_selection
UnityEngine::RangeInt UnityEngine::TouchScreenKeyboard::get_selection() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::get_selection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RangeInt, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.set_selection
void UnityEngine::TouchScreenKeyboard::set_selection(UnityEngine::RangeInt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::set_selection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.GetSelection
void UnityEngine::TouchScreenKeyboard::GetSelection(int& start, int& length) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::GetSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "GetSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, start, length);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.SetSelection
void UnityEngine::TouchScreenKeyboard::SetSelection(int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::SetSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "SetSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, start, length);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.Finalize
void UnityEngine::TouchScreenKeyboard::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: TouchScreenKeyboard::Internal_Destroy
// Il2CppName: Internal_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&TouchScreenKeyboard::Internal_Destroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "Internal_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::Destroy
// Il2CppName: Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TouchScreenKeyboard::*)()>(&TouchScreenKeyboard::Destroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TouchScreenKeyboard::*)(::Il2CppString*, UnityEngine::TouchScreenKeyboardType, bool, bool, bool, bool, ::Il2CppString*, int)>(&TouchScreenKeyboard::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TouchScreenKeyboardType>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TouchScreenKeyboard::*)(::Il2CppString*, UnityEngine::TouchScreenKeyboardType, bool, bool, bool, bool, ::Il2CppString*, int)>(&TouchScreenKeyboard::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TouchScreenKeyboardType>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::TouchScreenKeyboard_InternalConstructorHelper
// Il2CppName: TouchScreenKeyboard_InternalConstructorHelper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(UnityEngine::TouchScreenKeyboard_InternalConstructorHelperArguments&, ::Il2CppString*, ::Il2CppString*)>(&TouchScreenKeyboard::TouchScreenKeyboard_InternalConstructorHelper)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "TouchScreenKeyboard_InternalConstructorHelper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TouchScreenKeyboard_InternalConstructorHelperArguments&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::get_isSupported
// Il2CppName: get_isSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&TouchScreenKeyboard::get_isSupported)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "get_isSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::get_isInPlaceEditingAllowed
// Il2CppName: get_isInPlaceEditingAllowed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&TouchScreenKeyboard::get_isInPlaceEditingAllowed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "get_isInPlaceEditingAllowed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::Open
// Il2CppName: Open
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TouchScreenKeyboard* (*)(::Il2CppString*, UnityEngine::TouchScreenKeyboardType, bool, bool, bool, bool, ::Il2CppString*, int)>(&TouchScreenKeyboard::Open)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "Open", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TouchScreenKeyboardType>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::Open
// Il2CppName: Open
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TouchScreenKeyboard* (*)(::Il2CppString*, UnityEngine::TouchScreenKeyboardType, bool, bool, bool)>(&TouchScreenKeyboard::Open)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "Open", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TouchScreenKeyboardType>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::get_text
// Il2CppName: get_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (TouchScreenKeyboard::*)()>(&TouchScreenKeyboard::get_text)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "get_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::set_text
// Il2CppName: set_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TouchScreenKeyboard::*)(::Il2CppString*)>(&TouchScreenKeyboard::set_text)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "set_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::set_hideInput
// Il2CppName: set_hideInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&TouchScreenKeyboard::set_hideInput)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "set_hideInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::get_active
// Il2CppName: get_active
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TouchScreenKeyboard::*)()>(&TouchScreenKeyboard::get_active)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "get_active", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::set_active
// Il2CppName: set_active
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TouchScreenKeyboard::*)(bool)>(&TouchScreenKeyboard::set_active)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "set_active", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::get_status
// Il2CppName: get_status
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TouchScreenKeyboard::Status (TouchScreenKeyboard::*)()>(&TouchScreenKeyboard::get_status)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "get_status", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::set_characterLimit
// Il2CppName: set_characterLimit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TouchScreenKeyboard::*)(int)>(&TouchScreenKeyboard::set_characterLimit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "set_characterLimit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::get_canGetSelection
// Il2CppName: get_canGetSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TouchScreenKeyboard::*)()>(&TouchScreenKeyboard::get_canGetSelection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "get_canGetSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::get_canSetSelection
// Il2CppName: get_canSetSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TouchScreenKeyboard::*)()>(&TouchScreenKeyboard::get_canSetSelection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "get_canSetSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::get_selection
// Il2CppName: get_selection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RangeInt (TouchScreenKeyboard::*)()>(&TouchScreenKeyboard::get_selection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "get_selection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::set_selection
// Il2CppName: set_selection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TouchScreenKeyboard::*)(UnityEngine::RangeInt)>(&TouchScreenKeyboard::set_selection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "set_selection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RangeInt>()});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::GetSelection
// Il2CppName: GetSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int&, int&)>(&TouchScreenKeyboard::GetSelection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "GetSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::SetSelection
// Il2CppName: SetSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, int)>(&TouchScreenKeyboard::SetSelection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "SetSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TouchScreenKeyboard::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TouchScreenKeyboard::*)()>(&TouchScreenKeyboard::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchScreenKeyboard*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TouchScreenKeyboard/Status
#include "UnityEngine/TouchScreenKeyboard_Status.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboard/Status Visible
UnityEngine::TouchScreenKeyboard::Status UnityEngine::TouchScreenKeyboard::Status::_get_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::Status::_get_Visible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TouchScreenKeyboard::Status>("UnityEngine", "TouchScreenKeyboard/Status", "Visible"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboard/Status Visible
void UnityEngine::TouchScreenKeyboard::Status::_set_Visible(UnityEngine::TouchScreenKeyboard::Status value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::Status::_set_Visible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboard/Status", "Visible", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboard/Status Done
UnityEngine::TouchScreenKeyboard::Status UnityEngine::TouchScreenKeyboard::Status::_get_Done() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::Status::_get_Done");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TouchScreenKeyboard::Status>("UnityEngine", "TouchScreenKeyboard/Status", "Done"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboard/Status Done
void UnityEngine::TouchScreenKeyboard::Status::_set_Done(UnityEngine::TouchScreenKeyboard::Status value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::Status::_set_Done");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboard/Status", "Done", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboard/Status Canceled
UnityEngine::TouchScreenKeyboard::Status UnityEngine::TouchScreenKeyboard::Status::_get_Canceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::Status::_get_Canceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TouchScreenKeyboard::Status>("UnityEngine", "TouchScreenKeyboard/Status", "Canceled"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboard/Status Canceled
void UnityEngine::TouchScreenKeyboard::Status::_set_Canceled(UnityEngine::TouchScreenKeyboard::Status value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::Status::_set_Canceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboard/Status", "Canceled", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboard/Status LostFocus
UnityEngine::TouchScreenKeyboard::Status UnityEngine::TouchScreenKeyboard::Status::_get_LostFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::Status::_get_LostFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TouchScreenKeyboard::Status>("UnityEngine", "TouchScreenKeyboard/Status", "LostFocus"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboard/Status LostFocus
void UnityEngine::TouchScreenKeyboard::Status::_set_LostFocus(UnityEngine::TouchScreenKeyboard::Status value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboard::Status::_set_LostFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboard/Status", "LostFocus", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TouchScreenKeyboardType
#include "UnityEngine/TouchScreenKeyboardType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType Default
UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "Default"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType Default
void UnityEngine::TouchScreenKeyboardType::_set_Default(UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType ASCIICapable
UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_ASCIICapable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_get_ASCIICapable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "ASCIICapable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType ASCIICapable
void UnityEngine::TouchScreenKeyboardType::_set_ASCIICapable(UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_set_ASCIICapable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "ASCIICapable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType NumbersAndPunctuation
UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_NumbersAndPunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_get_NumbersAndPunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "NumbersAndPunctuation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType NumbersAndPunctuation
void UnityEngine::TouchScreenKeyboardType::_set_NumbersAndPunctuation(UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_set_NumbersAndPunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "NumbersAndPunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType URL
UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_URL() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_get_URL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "URL"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType URL
void UnityEngine::TouchScreenKeyboardType::_set_URL(UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_set_URL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "URL", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType NumberPad
UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_NumberPad() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_get_NumberPad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "NumberPad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType NumberPad
void UnityEngine::TouchScreenKeyboardType::_set_NumberPad(UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_set_NumberPad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "NumberPad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType PhonePad
UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_PhonePad() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_get_PhonePad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "PhonePad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType PhonePad
void UnityEngine::TouchScreenKeyboardType::_set_PhonePad(UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_set_PhonePad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "PhonePad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType NamePhonePad
UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_NamePhonePad() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_get_NamePhonePad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "NamePhonePad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType NamePhonePad
void UnityEngine::TouchScreenKeyboardType::_set_NamePhonePad(UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_set_NamePhonePad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "NamePhonePad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType EmailAddress
UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_EmailAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_get_EmailAddress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "EmailAddress"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType EmailAddress
void UnityEngine::TouchScreenKeyboardType::_set_EmailAddress(UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_set_EmailAddress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "EmailAddress", value));
}
// [ObsoleteAttribute] Offset: 0xD93C58
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType NintendoNetworkAccount
UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_NintendoNetworkAccount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_get_NintendoNetworkAccount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "NintendoNetworkAccount"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType NintendoNetworkAccount
void UnityEngine::TouchScreenKeyboardType::_set_NintendoNetworkAccount(UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_set_NintendoNetworkAccount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "NintendoNetworkAccount", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType Social
UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_Social() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_get_Social");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "Social"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType Social
void UnityEngine::TouchScreenKeyboardType::_set_Social(UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_set_Social");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "Social", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType Search
UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_Search() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_get_Search");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "Search"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType Search
void UnityEngine::TouchScreenKeyboardType::_set_Search(UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_set_Search");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "Search", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType DecimalPad
UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_DecimalPad() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_get_DecimalPad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "DecimalPad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType DecimalPad
void UnityEngine::TouchScreenKeyboardType::_set_DecimalPad(UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TouchScreenKeyboardType::_set_DecimalPad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "DecimalPad", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Pose k_Identity
UnityEngine::Pose UnityEngine::Pose::_get_k_Identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Pose::_get_k_Identity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Pose>("UnityEngine", "Pose", "k_Identity"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Pose k_Identity
void UnityEngine::Pose::_set_k_Identity(UnityEngine::Pose value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Pose::_set_k_Identity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Pose", "k_Identity", value));
}
// Autogenerated method: UnityEngine.Pose.get_forward
UnityEngine::Vector3 UnityEngine::Pose::get_forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Pose::get_forward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_forward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Pose.Equals
bool UnityEngine::Pose::Equals(UnityEngine::Pose other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Pose::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Pose..cctor
void UnityEngine::Pose::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Pose::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Pose", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Pose.ToString
::Il2CppString* UnityEngine::Pose::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Pose::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Pose.Equals
bool UnityEngine::Pose::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Pose::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Pose.GetHashCode
int UnityEngine::Pose::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Pose::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: Pose::Pose
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pose::*)(UnityEngine::Vector3, UnityEngine::Quaternion)>(&Pose::Pose<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pose), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Pose::*)(UnityEngine::Vector3, UnityEngine::Quaternion)>(&Pose::Pose<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pose), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion>()});
  }
};
// Writing MetadataGetter for method: Pose::get_forward
// Il2CppName: get_forward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Pose::*)()>(&Pose::get_forward)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pose), "get_forward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pose::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Pose::*)(UnityEngine::Pose)>(&Pose::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pose), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Pose>()});
  }
};
// Writing MetadataGetter for method: Pose::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Pose::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pose), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pose::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Pose::*)()>(&Pose::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pose), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Pose::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Pose::*)(::Il2CppObject*)>(&Pose::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pose), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Pose::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Pose::*)()>(&Pose::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Pose), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.DrivenTransformProperties
#include "UnityEngine/DrivenTransformProperties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties None
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties None
void UnityEngine::DrivenTransformProperties::_set_None(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties All
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties All
void UnityEngine::DrivenTransformProperties::_set_All(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "All", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchoredPositionX
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchoredPositionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_AnchoredPositionX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchoredPositionX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchoredPositionX
void UnityEngine::DrivenTransformProperties::_set_AnchoredPositionX(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_AnchoredPositionX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchoredPositionX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchoredPositionY
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchoredPositionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_AnchoredPositionY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchoredPositionY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchoredPositionY
void UnityEngine::DrivenTransformProperties::_set_AnchoredPositionY(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_AnchoredPositionY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchoredPositionY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchoredPositionZ
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchoredPositionZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_AnchoredPositionZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchoredPositionZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchoredPositionZ
void UnityEngine::DrivenTransformProperties::_set_AnchoredPositionZ(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_AnchoredPositionZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchoredPositionZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties Rotation
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties Rotation
void UnityEngine::DrivenTransformProperties::_set_Rotation(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "Rotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties ScaleX
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_ScaleX() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_ScaleX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "ScaleX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties ScaleX
void UnityEngine::DrivenTransformProperties::_set_ScaleX(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_ScaleX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "ScaleX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties ScaleY
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_ScaleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_ScaleY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "ScaleY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties ScaleY
void UnityEngine::DrivenTransformProperties::_set_ScaleY(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_ScaleY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "ScaleY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties ScaleZ
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_ScaleZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_ScaleZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "ScaleZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties ScaleZ
void UnityEngine::DrivenTransformProperties::_set_ScaleZ(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_ScaleZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "ScaleZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchorMinX
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchorMinX() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_AnchorMinX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchorMinX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchorMinX
void UnityEngine::DrivenTransformProperties::_set_AnchorMinX(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_AnchorMinX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchorMinX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchorMinY
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchorMinY() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_AnchorMinY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchorMinY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchorMinY
void UnityEngine::DrivenTransformProperties::_set_AnchorMinY(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_AnchorMinY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchorMinY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchorMaxX
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchorMaxX() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_AnchorMaxX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchorMaxX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchorMaxX
void UnityEngine::DrivenTransformProperties::_set_AnchorMaxX(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_AnchorMaxX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchorMaxX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchorMaxY
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchorMaxY() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_AnchorMaxY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchorMaxY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchorMaxY
void UnityEngine::DrivenTransformProperties::_set_AnchorMaxY(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_AnchorMaxY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchorMaxY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties SizeDeltaX
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_SizeDeltaX() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_SizeDeltaX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "SizeDeltaX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties SizeDeltaX
void UnityEngine::DrivenTransformProperties::_set_SizeDeltaX(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_SizeDeltaX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "SizeDeltaX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties SizeDeltaY
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_SizeDeltaY() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_SizeDeltaY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "SizeDeltaY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties SizeDeltaY
void UnityEngine::DrivenTransformProperties::_set_SizeDeltaY(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_SizeDeltaY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "SizeDeltaY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties PivotX
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_PivotX() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_PivotX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "PivotX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties PivotX
void UnityEngine::DrivenTransformProperties::_set_PivotX(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_PivotX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "PivotX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties PivotY
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_PivotY() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_PivotY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "PivotY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties PivotY
void UnityEngine::DrivenTransformProperties::_set_PivotY(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_PivotY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "PivotY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchoredPosition
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchoredPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_AnchoredPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchoredPosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchoredPosition
void UnityEngine::DrivenTransformProperties::_set_AnchoredPosition(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_AnchoredPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchoredPosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchoredPosition3D
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchoredPosition3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_AnchoredPosition3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchoredPosition3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchoredPosition3D
void UnityEngine::DrivenTransformProperties::_set_AnchoredPosition3D(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_AnchoredPosition3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchoredPosition3D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties Scale
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_Scale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "Scale"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties Scale
void UnityEngine::DrivenTransformProperties::_set_Scale(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_Scale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "Scale", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchorMin
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchorMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_AnchorMin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchorMin"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchorMin
void UnityEngine::DrivenTransformProperties::_set_AnchorMin(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_AnchorMin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchorMin", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchorMax
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchorMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_AnchorMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchorMax"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchorMax
void UnityEngine::DrivenTransformProperties::_set_AnchorMax(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_AnchorMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchorMax", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties Anchors
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_Anchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_Anchors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "Anchors"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties Anchors
void UnityEngine::DrivenTransformProperties::_set_Anchors(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_Anchors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "Anchors", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties SizeDelta
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_SizeDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_SizeDelta");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "SizeDelta"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties SizeDelta
void UnityEngine::DrivenTransformProperties::_set_SizeDelta(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_SizeDelta");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "SizeDelta", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties Pivot
UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_Pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_get_Pivot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "Pivot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties Pivot
void UnityEngine::DrivenTransformProperties::_set_Pivot(UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenTransformProperties::_set_Pivot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "Pivot", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.DrivenRectTransformTracker
#include "UnityEngine/DrivenRectTransformTracker.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.DrivenTransformProperties
#include "UnityEngine/DrivenTransformProperties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.DrivenRectTransformTracker.Add
void UnityEngine::DrivenRectTransformTracker::Add(UnityEngine::Object* driver, UnityEngine::RectTransform* rectTransform, UnityEngine::DrivenTransformProperties drivenProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenRectTransformTracker::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driver), ::il2cpp_utils::ExtractType(rectTransform), ::il2cpp_utils::ExtractType(drivenProperties)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, driver, rectTransform, drivenProperties);
}
// Autogenerated method: UnityEngine.DrivenRectTransformTracker.Clear
void UnityEngine::DrivenRectTransformTracker::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::DrivenRectTransformTracker::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: DrivenRectTransformTracker::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DrivenRectTransformTracker::*)(UnityEngine::Object*, UnityEngine::RectTransform*, UnityEngine::DrivenTransformProperties)>(&DrivenRectTransformTracker::Add)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DrivenRectTransformTracker), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::DrivenTransformProperties>()});
  }
};
// Writing MetadataGetter for method: DrivenRectTransformTracker::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DrivenRectTransformTracker::*)()>(&DrivenRectTransformTracker::Clear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DrivenRectTransformTracker), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.RectTransform/Axis
#include "UnityEngine/RectTransform_Axis.hpp"
// Including type: UnityEngine.RectTransform/ReapplyDrivenProperties
#include "UnityEngine/RectTransform_ReapplyDrivenProperties.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0xD93C90
// [CompilerGeneratedAttribute] Offset: 0xD93C90
// Autogenerated static field getter
// Get static field: static private UnityEngine.RectTransform/ReapplyDrivenProperties reapplyDrivenProperties
UnityEngine::RectTransform::ReapplyDrivenProperties* UnityEngine::RectTransform::_get_reapplyDrivenProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::_get_reapplyDrivenProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RectTransform::ReapplyDrivenProperties*>("UnityEngine", "RectTransform", "reapplyDrivenProperties"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.RectTransform/ReapplyDrivenProperties reapplyDrivenProperties
void UnityEngine::RectTransform::_set_reapplyDrivenProperties(UnityEngine::RectTransform::ReapplyDrivenProperties* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::_set_reapplyDrivenProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RectTransform", "reapplyDrivenProperties", value));
}
// Autogenerated method: UnityEngine.RectTransform.add_reapplyDrivenProperties
void UnityEngine::RectTransform::add_reapplyDrivenProperties(UnityEngine::RectTransform::ReapplyDrivenProperties* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::add_reapplyDrivenProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransform", "add_reapplyDrivenProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.remove_reapplyDrivenProperties
void UnityEngine::RectTransform::remove_reapplyDrivenProperties(UnityEngine::RectTransform::ReapplyDrivenProperties* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::remove_reapplyDrivenProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransform", "remove_reapplyDrivenProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_rect
UnityEngine::Rect UnityEngine::RectTransform::get_rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::get_rect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.get_anchorMin
UnityEngine::Vector2 UnityEngine::RectTransform::get_anchorMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::get_anchorMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_anchorMin
void UnityEngine::RectTransform::set_anchorMin(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::set_anchorMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_anchorMax
UnityEngine::Vector2 UnityEngine::RectTransform::get_anchorMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::get_anchorMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_anchorMax
void UnityEngine::RectTransform::set_anchorMax(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::set_anchorMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_anchoredPosition
UnityEngine::Vector2 UnityEngine::RectTransform::get_anchoredPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::get_anchoredPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchoredPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_anchoredPosition
void UnityEngine::RectTransform::set_anchoredPosition(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::set_anchoredPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchoredPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_sizeDelta
UnityEngine::Vector2 UnityEngine::RectTransform::get_sizeDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::get_sizeDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sizeDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_sizeDelta
void UnityEngine::RectTransform::set_sizeDelta(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::set_sizeDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sizeDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_pivot
UnityEngine::Vector2 UnityEngine::RectTransform::get_pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::get_pivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_pivot
void UnityEngine::RectTransform::set_pivot(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::set_pivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.set_anchoredPosition3D
void UnityEngine::RectTransform::set_anchoredPosition3D(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::set_anchoredPosition3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchoredPosition3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.set_offsetMin
void UnityEngine::RectTransform::set_offsetMin(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::set_offsetMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_offsetMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.set_offsetMax
void UnityEngine::RectTransform::set_offsetMax(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::set_offsetMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_offsetMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.GetLocalCorners
void UnityEngine::RectTransform::GetLocalCorners(::Array<UnityEngine::Vector3>* fourCornersArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::GetLocalCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fourCornersArray)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, fourCornersArray);
}
// Autogenerated method: UnityEngine.RectTransform.GetWorldCorners
void UnityEngine::RectTransform::GetWorldCorners(::Array<UnityEngine::Vector3>* fourCornersArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::GetWorldCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorldCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fourCornersArray)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, fourCornersArray);
}
// Autogenerated method: UnityEngine.RectTransform.SetSizeWithCurrentAnchors
void UnityEngine::RectTransform::SetSizeWithCurrentAnchors(UnityEngine::RectTransform::Axis axis, float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::SetSizeWithCurrentAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSizeWithCurrentAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, axis, size);
}
// Autogenerated method: UnityEngine.RectTransform.SendReapplyDrivenProperties
void UnityEngine::RectTransform::SendReapplyDrivenProperties(UnityEngine::RectTransform* driven) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::SendReapplyDrivenProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransform", "SendReapplyDrivenProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driven)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, driven);
}
// Autogenerated method: UnityEngine.RectTransform.GetParentSize
UnityEngine::Vector2 UnityEngine::RectTransform::GetParentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::GetParentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.get_rect_Injected
void UnityEngine::RectTransform::get_rect_Injected(UnityEngine::Rect& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::get_rect_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rect_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.RectTransform.get_anchorMin_Injected
void UnityEngine::RectTransform::get_anchorMin_Injected(UnityEngine::Vector2& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::get_anchorMin_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorMin_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.RectTransform.set_anchorMin_Injected
void UnityEngine::RectTransform::set_anchorMin_Injected(UnityEngine::Vector2& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::set_anchorMin_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorMin_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_anchorMax_Injected
void UnityEngine::RectTransform::get_anchorMax_Injected(UnityEngine::Vector2& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::get_anchorMax_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorMax_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.RectTransform.set_anchorMax_Injected
void UnityEngine::RectTransform::set_anchorMax_Injected(UnityEngine::Vector2& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::set_anchorMax_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorMax_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_anchoredPosition_Injected
void UnityEngine::RectTransform::get_anchoredPosition_Injected(UnityEngine::Vector2& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::get_anchoredPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchoredPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.RectTransform.set_anchoredPosition_Injected
void UnityEngine::RectTransform::set_anchoredPosition_Injected(UnityEngine::Vector2& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::set_anchoredPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchoredPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_sizeDelta_Injected
void UnityEngine::RectTransform::get_sizeDelta_Injected(UnityEngine::Vector2& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::get_sizeDelta_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sizeDelta_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.RectTransform.set_sizeDelta_Injected
void UnityEngine::RectTransform::set_sizeDelta_Injected(UnityEngine::Vector2& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::set_sizeDelta_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sizeDelta_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_pivot_Injected
void UnityEngine::RectTransform::get_pivot_Injected(UnityEngine::Vector2& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::get_pivot_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pivot_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.RectTransform.set_pivot_Injected
void UnityEngine::RectTransform::set_pivot_Injected(UnityEngine::Vector2& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::set_pivot_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pivot_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: RectTransform::add_reapplyDrivenProperties
// Il2CppName: add_reapplyDrivenProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RectTransform::ReapplyDrivenProperties*)>(&RectTransform::add_reapplyDrivenProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "add_reapplyDrivenProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform::ReapplyDrivenProperties*>()});
  }
};
// Writing MetadataGetter for method: RectTransform::remove_reapplyDrivenProperties
// Il2CppName: remove_reapplyDrivenProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RectTransform::ReapplyDrivenProperties*)>(&RectTransform::remove_reapplyDrivenProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "remove_reapplyDrivenProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform::ReapplyDrivenProperties*>()});
  }
};
// Writing MetadataGetter for method: RectTransform::get_rect
// Il2CppName: get_rect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rect (RectTransform::*)()>(&RectTransform::get_rect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "get_rect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectTransform::get_anchorMin
// Il2CppName: get_anchorMin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (RectTransform::*)()>(&RectTransform::get_anchorMin)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "get_anchorMin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectTransform::set_anchorMin
// Il2CppName: set_anchorMin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(UnityEngine::Vector2)>(&RectTransform::set_anchorMin)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "set_anchorMin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: RectTransform::get_anchorMax
// Il2CppName: get_anchorMax
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (RectTransform::*)()>(&RectTransform::get_anchorMax)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "get_anchorMax", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectTransform::set_anchorMax
// Il2CppName: set_anchorMax
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(UnityEngine::Vector2)>(&RectTransform::set_anchorMax)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "set_anchorMax", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: RectTransform::get_anchoredPosition
// Il2CppName: get_anchoredPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (RectTransform::*)()>(&RectTransform::get_anchoredPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "get_anchoredPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectTransform::set_anchoredPosition
// Il2CppName: set_anchoredPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(UnityEngine::Vector2)>(&RectTransform::set_anchoredPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "set_anchoredPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: RectTransform::get_sizeDelta
// Il2CppName: get_sizeDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (RectTransform::*)()>(&RectTransform::get_sizeDelta)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "get_sizeDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectTransform::set_sizeDelta
// Il2CppName: set_sizeDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(UnityEngine::Vector2)>(&RectTransform::set_sizeDelta)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "set_sizeDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: RectTransform::get_pivot
// Il2CppName: get_pivot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (RectTransform::*)()>(&RectTransform::get_pivot)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "get_pivot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectTransform::set_pivot
// Il2CppName: set_pivot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(UnityEngine::Vector2)>(&RectTransform::set_pivot)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "set_pivot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: RectTransform::set_anchoredPosition3D
// Il2CppName: set_anchoredPosition3D
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(UnityEngine::Vector3)>(&RectTransform::set_anchoredPosition3D)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "set_anchoredPosition3D", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: RectTransform::set_offsetMin
// Il2CppName: set_offsetMin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(UnityEngine::Vector2)>(&RectTransform::set_offsetMin)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "set_offsetMin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: RectTransform::set_offsetMax
// Il2CppName: set_offsetMax
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(UnityEngine::Vector2)>(&RectTransform::set_offsetMax)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "set_offsetMax", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: RectTransform::GetLocalCorners
// Il2CppName: GetLocalCorners
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(::Array<UnityEngine::Vector3>*)>(&RectTransform::GetLocalCorners)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "GetLocalCorners", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>()});
  }
};
// Writing MetadataGetter for method: RectTransform::GetWorldCorners
// Il2CppName: GetWorldCorners
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(::Array<UnityEngine::Vector3>*)>(&RectTransform::GetWorldCorners)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "GetWorldCorners", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::Vector3>*>()});
  }
};
// Writing MetadataGetter for method: RectTransform::SetSizeWithCurrentAnchors
// Il2CppName: SetSizeWithCurrentAnchors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(UnityEngine::RectTransform::Axis, float)>(&RectTransform::SetSizeWithCurrentAnchors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "SetSizeWithCurrentAnchors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform::Axis>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: RectTransform::SendReapplyDrivenProperties
// Il2CppName: SendReapplyDrivenProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RectTransform*)>(&RectTransform::SendReapplyDrivenProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "SendReapplyDrivenProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: RectTransform::GetParentSize
// Il2CppName: GetParentSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (RectTransform::*)()>(&RectTransform::GetParentSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "GetParentSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectTransform::get_rect_Injected
// Il2CppName: get_rect_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(UnityEngine::Rect&)>(&RectTransform::get_rect_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "get_rect_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>()});
  }
};
// Writing MetadataGetter for method: RectTransform::get_anchorMin_Injected
// Il2CppName: get_anchorMin_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(UnityEngine::Vector2&)>(&RectTransform::get_anchorMin_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "get_anchorMin_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
  }
};
// Writing MetadataGetter for method: RectTransform::set_anchorMin_Injected
// Il2CppName: set_anchorMin_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(UnityEngine::Vector2&)>(&RectTransform::set_anchorMin_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "set_anchorMin_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
  }
};
// Writing MetadataGetter for method: RectTransform::get_anchorMax_Injected
// Il2CppName: get_anchorMax_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(UnityEngine::Vector2&)>(&RectTransform::get_anchorMax_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "get_anchorMax_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
  }
};
// Writing MetadataGetter for method: RectTransform::set_anchorMax_Injected
// Il2CppName: set_anchorMax_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(UnityEngine::Vector2&)>(&RectTransform::set_anchorMax_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "set_anchorMax_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
  }
};
// Writing MetadataGetter for method: RectTransform::get_anchoredPosition_Injected
// Il2CppName: get_anchoredPosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(UnityEngine::Vector2&)>(&RectTransform::get_anchoredPosition_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "get_anchoredPosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
  }
};
// Writing MetadataGetter for method: RectTransform::set_anchoredPosition_Injected
// Il2CppName: set_anchoredPosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(UnityEngine::Vector2&)>(&RectTransform::set_anchoredPosition_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "set_anchoredPosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
  }
};
// Writing MetadataGetter for method: RectTransform::get_sizeDelta_Injected
// Il2CppName: get_sizeDelta_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(UnityEngine::Vector2&)>(&RectTransform::get_sizeDelta_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "get_sizeDelta_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
  }
};
// Writing MetadataGetter for method: RectTransform::set_sizeDelta_Injected
// Il2CppName: set_sizeDelta_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(UnityEngine::Vector2&)>(&RectTransform::set_sizeDelta_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "set_sizeDelta_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
  }
};
// Writing MetadataGetter for method: RectTransform::get_pivot_Injected
// Il2CppName: get_pivot_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(UnityEngine::Vector2&)>(&RectTransform::get_pivot_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "get_pivot_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
  }
};
// Writing MetadataGetter for method: RectTransform::set_pivot_Injected
// Il2CppName: set_pivot_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::*)(UnityEngine::Vector2&)>(&RectTransform::set_pivot_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform*), "set_pivot_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RectTransform/Axis
#include "UnityEngine/RectTransform_Axis.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RectTransform/Axis Horizontal
UnityEngine::RectTransform::Axis UnityEngine::RectTransform::Axis::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::Axis::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RectTransform::Axis>("UnityEngine", "RectTransform/Axis", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RectTransform/Axis Horizontal
void UnityEngine::RectTransform::Axis::_set_Horizontal(UnityEngine::RectTransform::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::Axis::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RectTransform/Axis", "Horizontal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RectTransform/Axis Vertical
UnityEngine::RectTransform::Axis UnityEngine::RectTransform::Axis::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::Axis::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RectTransform::Axis>("UnityEngine", "RectTransform/Axis", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RectTransform/Axis Vertical
void UnityEngine::RectTransform::Axis::_set_Vertical(UnityEngine::RectTransform::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::Axis::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RectTransform/Axis", "Vertical", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.RectTransform/ReapplyDrivenProperties
#include "UnityEngine/RectTransform_ReapplyDrivenProperties.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.RectTransform/ReapplyDrivenProperties.Invoke
void UnityEngine::RectTransform::ReapplyDrivenProperties::Invoke(UnityEngine::RectTransform* driven) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::ReapplyDrivenProperties::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driven)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, driven);
}
// Autogenerated method: UnityEngine.RectTransform/ReapplyDrivenProperties.BeginInvoke
System::IAsyncResult* UnityEngine::RectTransform::ReapplyDrivenProperties::BeginInvoke(UnityEngine::RectTransform* driven, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::ReapplyDrivenProperties::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driven), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, driven, callback, object);
}
// Autogenerated method: UnityEngine.RectTransform/ReapplyDrivenProperties.EndInvoke
void UnityEngine::RectTransform::ReapplyDrivenProperties::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransform::ReapplyDrivenProperties::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: RectTransform::ReapplyDrivenProperties::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::ReapplyDrivenProperties::*)(::Il2CppObject*, System::IntPtr)>(&RectTransform::ReapplyDrivenProperties::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform::ReapplyDrivenProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::ReapplyDrivenProperties::*)(::Il2CppObject*, System::IntPtr)>(&RectTransform::ReapplyDrivenProperties::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform::ReapplyDrivenProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: RectTransform::ReapplyDrivenProperties::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::ReapplyDrivenProperties::*)(UnityEngine::RectTransform*)>(&RectTransform::ReapplyDrivenProperties::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform::ReapplyDrivenProperties*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: RectTransform::ReapplyDrivenProperties::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (RectTransform::ReapplyDrivenProperties::*)(UnityEngine::RectTransform*, System::AsyncCallback*, ::Il2CppObject*)>(&RectTransform::ReapplyDrivenProperties::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform::ReapplyDrivenProperties*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: RectTransform::ReapplyDrivenProperties::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RectTransform::ReapplyDrivenProperties::*)(System::IAsyncResult*)>(&RectTransform::ReapplyDrivenProperties::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransform::ReapplyDrivenProperties*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RotationOrder
#include "UnityEngine/RotationOrder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RotationOrder OrderXYZ
UnityEngine::RotationOrder UnityEngine::RotationOrder::_get_OrderXYZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RotationOrder::_get_OrderXYZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RotationOrder>("UnityEngine", "RotationOrder", "OrderXYZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RotationOrder OrderXYZ
void UnityEngine::RotationOrder::_set_OrderXYZ(UnityEngine::RotationOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RotationOrder::_set_OrderXYZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RotationOrder", "OrderXYZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RotationOrder OrderXZY
UnityEngine::RotationOrder UnityEngine::RotationOrder::_get_OrderXZY() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RotationOrder::_get_OrderXZY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RotationOrder>("UnityEngine", "RotationOrder", "OrderXZY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RotationOrder OrderXZY
void UnityEngine::RotationOrder::_set_OrderXZY(UnityEngine::RotationOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RotationOrder::_set_OrderXZY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RotationOrder", "OrderXZY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RotationOrder OrderYZX
UnityEngine::RotationOrder UnityEngine::RotationOrder::_get_OrderYZX() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RotationOrder::_get_OrderYZX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RotationOrder>("UnityEngine", "RotationOrder", "OrderYZX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RotationOrder OrderYZX
void UnityEngine::RotationOrder::_set_OrderYZX(UnityEngine::RotationOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RotationOrder::_set_OrderYZX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RotationOrder", "OrderYZX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RotationOrder OrderYXZ
UnityEngine::RotationOrder UnityEngine::RotationOrder::_get_OrderYXZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RotationOrder::_get_OrderYXZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RotationOrder>("UnityEngine", "RotationOrder", "OrderYXZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RotationOrder OrderYXZ
void UnityEngine::RotationOrder::_set_OrderYXZ(UnityEngine::RotationOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RotationOrder::_set_OrderYXZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RotationOrder", "OrderYXZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RotationOrder OrderZXY
UnityEngine::RotationOrder UnityEngine::RotationOrder::_get_OrderZXY() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RotationOrder::_get_OrderZXY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RotationOrder>("UnityEngine", "RotationOrder", "OrderZXY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RotationOrder OrderZXY
void UnityEngine::RotationOrder::_set_OrderZXY(UnityEngine::RotationOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RotationOrder::_set_OrderZXY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RotationOrder", "OrderZXY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RotationOrder OrderZYX
UnityEngine::RotationOrder UnityEngine::RotationOrder::_get_OrderZYX() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RotationOrder::_get_OrderZYX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RotationOrder>("UnityEngine", "RotationOrder", "OrderZYX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RotationOrder OrderZYX
void UnityEngine::RotationOrder::_set_OrderZYX(UnityEngine::RotationOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RotationOrder::_set_OrderZYX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RotationOrder", "OrderZYX", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Transform/Enumerator
#include "UnityEngine/Transform_Enumerator.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.RotationOrder
#include "UnityEngine/RotationOrder.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Space
#include "UnityEngine/Space.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Transform.get_position
UnityEngine::Vector3 UnityEngine::Transform::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_position
void UnityEngine::Transform::set_position(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_localPosition
UnityEngine::Vector3 UnityEngine::Transform::get_localPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_localPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_localPosition
void UnityEngine::Transform::set_localPosition(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::set_localPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.GetLocalEulerAngles
UnityEngine::Vector3 UnityEngine::Transform::GetLocalEulerAngles(UnityEngine::RotationOrder order) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::GetLocalEulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalEulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(order)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, order);
}
// Autogenerated method: UnityEngine.Transform.SetLocalEulerAngles
void UnityEngine::Transform::SetLocalEulerAngles(UnityEngine::Vector3 euler, UnityEngine::RotationOrder order) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::SetLocalEulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalEulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(euler), ::il2cpp_utils::ExtractType(order)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, euler, order);
}
// Autogenerated method: UnityEngine.Transform.SetLocalEulerHint
void UnityEngine::Transform::SetLocalEulerHint(UnityEngine::Vector3 euler) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::SetLocalEulerHint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalEulerHint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(euler)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, euler);
}
// Autogenerated method: UnityEngine.Transform.get_eulerAngles
UnityEngine::Vector3 UnityEngine::Transform::get_eulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_eulerAngles
void UnityEngine::Transform::set_eulerAngles(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::set_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_localEulerAngles
UnityEngine::Vector3 UnityEngine::Transform::get_localEulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_localEulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localEulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_localEulerAngles
void UnityEngine::Transform::set_localEulerAngles(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::set_localEulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localEulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_right
UnityEngine::Vector3 UnityEngine::Transform::get_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_right
void UnityEngine::Transform::set_right(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::set_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_up
UnityEngine::Vector3 UnityEngine::Transform::get_up() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_up");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_up", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_up
void UnityEngine::Transform::set_up(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::set_up");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_up", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_forward
UnityEngine::Vector3 UnityEngine::Transform::get_forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_forward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_forward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_forward
void UnityEngine::Transform::set_forward(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::set_forward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_forward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_rotation
UnityEngine::Quaternion UnityEngine::Transform::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_rotation
void UnityEngine::Transform::set_rotation(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_localRotation
UnityEngine::Quaternion UnityEngine::Transform::get_localRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_localRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_localRotation
void UnityEngine::Transform::set_localRotation(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::set_localRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_rotationOrder
UnityEngine::RotationOrder UnityEngine::Transform::get_rotationOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_rotationOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RotationOrder, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_rotationOrder
void UnityEngine::Transform::set_rotationOrder(UnityEngine::RotationOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::set_rotationOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotationOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.GetRotationOrderInternal
int UnityEngine::Transform::GetRotationOrderInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::GetRotationOrderInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRotationOrderInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.SetRotationOrderInternal
void UnityEngine::Transform::SetRotationOrderInternal(UnityEngine::RotationOrder rotationOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::SetRotationOrderInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRotationOrderInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotationOrder)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rotationOrder);
}
// Autogenerated method: UnityEngine.Transform.get_localScale
UnityEngine::Vector3 UnityEngine::Transform::get_localScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_localScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_localScale
void UnityEngine::Transform::set_localScale(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::set_localScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_parent
UnityEngine::Transform* UnityEngine::Transform::get_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_parent
void UnityEngine::Transform::set_parent(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::set_parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_parentInternal
UnityEngine::Transform* UnityEngine::Transform::get_parentInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_parentInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parentInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_parentInternal
void UnityEngine::Transform::set_parentInternal(UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::set_parentInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_parentInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.GetParent
UnityEngine::Transform* UnityEngine::Transform::GetParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::GetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.SetParent
void UnityEngine::Transform::SetParent(UnityEngine::Transform* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::SetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: UnityEngine.Transform.SetParent
void UnityEngine::Transform::SetParent(UnityEngine::Transform* parent, bool worldPositionStays) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::SetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(worldPositionStays)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parent, worldPositionStays);
}
// Autogenerated method: UnityEngine.Transform.get_worldToLocalMatrix
UnityEngine::Matrix4x4 UnityEngine::Transform::get_worldToLocalMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_worldToLocalMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldToLocalMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.get_localToWorldMatrix
UnityEngine::Matrix4x4 UnityEngine::Transform::get_localToWorldMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_localToWorldMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localToWorldMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.SetPositionAndRotation
void UnityEngine::Transform::SetPositionAndRotation(UnityEngine::Vector3 position, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::SetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: UnityEngine.Transform.Translate
void UnityEngine::Transform::Translate(UnityEngine::Vector3 translation, UnityEngine::Space relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(translation), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, translation, relativeTo);
}
// Autogenerated method: UnityEngine.Transform.Translate
void UnityEngine::Transform::Translate(UnityEngine::Vector3 translation) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(translation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, translation);
}
// Autogenerated method: UnityEngine.Transform.Translate
void UnityEngine::Transform::Translate(float x, float y, float z, UnityEngine::Space relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x, y, z, relativeTo);
}
// Autogenerated method: UnityEngine.Transform.Translate
void UnityEngine::Transform::Translate(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Transform.Translate
void UnityEngine::Transform::Translate(UnityEngine::Vector3 translation, UnityEngine::Transform* relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(translation), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, translation, relativeTo);
}
// Autogenerated method: UnityEngine.Transform.Translate
void UnityEngine::Transform::Translate(float x, float y, float z, UnityEngine::Transform* relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x, y, z, relativeTo);
}
// Autogenerated method: UnityEngine.Transform.Rotate
void UnityEngine::Transform::Rotate(UnityEngine::Vector3 eulers, UnityEngine::Space relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eulers), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eulers, relativeTo);
}
// Autogenerated method: UnityEngine.Transform.Rotate
void UnityEngine::Transform::Rotate(UnityEngine::Vector3 eulers) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eulers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eulers);
}
// Autogenerated method: UnityEngine.Transform.Rotate
void UnityEngine::Transform::Rotate(float xAngle, float yAngle, float zAngle, UnityEngine::Space relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xAngle), ::il2cpp_utils::ExtractType(yAngle), ::il2cpp_utils::ExtractType(zAngle), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, xAngle, yAngle, zAngle, relativeTo);
}
// Autogenerated method: UnityEngine.Transform.Rotate
void UnityEngine::Transform::Rotate(float xAngle, float yAngle, float zAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xAngle), ::il2cpp_utils::ExtractType(yAngle), ::il2cpp_utils::ExtractType(zAngle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, xAngle, yAngle, zAngle);
}
// Autogenerated method: UnityEngine.Transform.RotateAroundInternal
void UnityEngine::Transform::RotateAroundInternal(UnityEngine::Vector3 axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::RotateAroundInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAroundInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, axis, angle);
}
// Autogenerated method: UnityEngine.Transform.Rotate
void UnityEngine::Transform::Rotate(UnityEngine::Vector3 axis, float angle, UnityEngine::Space relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, axis, angle, relativeTo);
}
// Autogenerated method: UnityEngine.Transform.Rotate
void UnityEngine::Transform::Rotate(UnityEngine::Vector3 axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, axis, angle);
}
// Autogenerated method: UnityEngine.Transform.RotateAround
void UnityEngine::Transform::RotateAround(UnityEngine::Vector3 point, UnityEngine::Vector3 axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::RotateAround");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAround", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, point, axis, angle);
}
// Autogenerated method: UnityEngine.Transform.LookAt
void UnityEngine::Transform::LookAt(UnityEngine::Transform* target, UnityEngine::Vector3 worldUp) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::LookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(worldUp)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, target, worldUp);
}
// Autogenerated method: UnityEngine.Transform.LookAt
void UnityEngine::Transform::LookAt(UnityEngine::Transform* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::LookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: UnityEngine.Transform.LookAt
void UnityEngine::Transform::LookAt(UnityEngine::Vector3 worldPosition, UnityEngine::Vector3 worldUp) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::LookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition), ::il2cpp_utils::ExtractType(worldUp)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, worldPosition, worldUp);
}
// Autogenerated method: UnityEngine.Transform.LookAt
void UnityEngine::Transform::LookAt(UnityEngine::Vector3 worldPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::LookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, worldPosition);
}
// Autogenerated method: UnityEngine.Transform.Internal_LookAt
void UnityEngine::Transform::Internal_LookAt(UnityEngine::Vector3 worldPosition, UnityEngine::Vector3 worldUp) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::Internal_LookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_LookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition), ::il2cpp_utils::ExtractType(worldUp)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, worldPosition, worldUp);
}
// Autogenerated method: UnityEngine.Transform.TransformDirection
UnityEngine::Vector3 UnityEngine::Transform::TransformDirection(UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::TransformDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, direction);
}
// Autogenerated method: UnityEngine.Transform.TransformDirection
UnityEngine::Vector3 UnityEngine::Transform::TransformDirection(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::TransformDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformDirection
UnityEngine::Vector3 UnityEngine::Transform::InverseTransformDirection(UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::InverseTransformDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, direction);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformDirection
UnityEngine::Vector3 UnityEngine::Transform::InverseTransformDirection(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::InverseTransformDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Transform.TransformVector
UnityEngine::Vector3 UnityEngine::Transform::TransformVector(UnityEngine::Vector3 vector) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::TransformVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, vector);
}
// Autogenerated method: UnityEngine.Transform.TransformVector
UnityEngine::Vector3 UnityEngine::Transform::TransformVector(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::TransformVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformVector
UnityEngine::Vector3 UnityEngine::Transform::InverseTransformVector(UnityEngine::Vector3 vector) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::InverseTransformVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, vector);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformVector
UnityEngine::Vector3 UnityEngine::Transform::InverseTransformVector(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::InverseTransformVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Transform.TransformPoint
UnityEngine::Vector3 UnityEngine::Transform::TransformPoint(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::TransformPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Transform.TransformPoint
UnityEngine::Vector3 UnityEngine::Transform::TransformPoint(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::TransformPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformPoint
UnityEngine::Vector3 UnityEngine::Transform::InverseTransformPoint(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::InverseTransformPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformPoint
UnityEngine::Vector3 UnityEngine::Transform::InverseTransformPoint(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::InverseTransformPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Transform.get_root
UnityEngine::Transform* UnityEngine::Transform::get_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_root");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_root", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.GetRoot
UnityEngine::Transform* UnityEngine::Transform::GetRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::GetRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.get_childCount
int UnityEngine::Transform::get_childCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_childCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.DetachChildren
void UnityEngine::Transform::DetachChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::DetachChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.SetAsFirstSibling
void UnityEngine::Transform::SetAsFirstSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::SetAsFirstSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAsFirstSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.SetAsLastSibling
void UnityEngine::Transform::SetAsLastSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::SetAsLastSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAsLastSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.SetSiblingIndex
void UnityEngine::Transform::SetSiblingIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::SetSiblingIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSiblingIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Transform.GetSiblingIndex
int UnityEngine::Transform::GetSiblingIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::GetSiblingIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSiblingIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.FindRelativeTransformWithPath
UnityEngine::Transform* UnityEngine::Transform::FindRelativeTransformWithPath(UnityEngine::Transform* transform, ::Il2CppString* path, bool isActiveOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::FindRelativeTransformWithPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Transform", "FindRelativeTransformWithPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(isActiveOnly)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transform, path, isActiveOnly);
}
// Autogenerated method: UnityEngine.Transform.Find
UnityEngine::Transform* UnityEngine::Transform::Find(::Il2CppString* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method, n);
}
// Autogenerated method: UnityEngine.Transform.SendTransformChangedScale
void UnityEngine::Transform::SendTransformChangedScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::SendTransformChangedScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendTransformChangedScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.get_lossyScale
UnityEngine::Vector3 UnityEngine::Transform::get_lossyScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_lossyScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lossyScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.IsChildOf
bool UnityEngine::Transform::IsChildOf(UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::IsChildOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsChildOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, parent);
}
// Autogenerated method: UnityEngine.Transform.get_hasChanged
bool UnityEngine::Transform::get_hasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_hasChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_hasChanged
void UnityEngine::Transform::set_hasChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::set_hasChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.FindChild
UnityEngine::Transform* UnityEngine::Transform::FindChild(::Il2CppString* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::FindChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method, n);
}
// Autogenerated method: UnityEngine.Transform.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Transform::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.RotateAround
void UnityEngine::Transform::RotateAround(UnityEngine::Vector3 axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::RotateAround");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAround", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, axis, angle);
}
// Autogenerated method: UnityEngine.Transform.RotateAroundLocal
void UnityEngine::Transform::RotateAroundLocal(UnityEngine::Vector3 axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::RotateAroundLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAroundLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, axis, angle);
}
// Autogenerated method: UnityEngine.Transform.GetChild
UnityEngine::Transform* UnityEngine::Transform::GetChild(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::GetChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Transform.GetChildCount
int UnityEngine::Transform::GetChildCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::GetChildCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChildCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.get_hierarchyCapacity
int UnityEngine::Transform::get_hierarchyCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_hierarchyCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hierarchyCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_hierarchyCapacity
void UnityEngine::Transform::set_hierarchyCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::set_hierarchyCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hierarchyCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.internal_getHierarchyCapacity
int UnityEngine::Transform::internal_getHierarchyCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::internal_getHierarchyCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_getHierarchyCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.internal_setHierarchyCapacity
void UnityEngine::Transform::internal_setHierarchyCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::internal_setHierarchyCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_setHierarchyCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_hierarchyCount
int UnityEngine::Transform::get_hierarchyCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_hierarchyCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hierarchyCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.internal_getHierarchyCount
int UnityEngine::Transform::internal_getHierarchyCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::internal_getHierarchyCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_getHierarchyCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.IsNonUniformScaleTransform
bool UnityEngine::Transform::IsNonUniformScaleTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::IsNonUniformScaleTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsNonUniformScaleTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.get_position_Injected
void UnityEngine::Transform::get_position_Injected(UnityEngine::Vector3& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_position_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Transform.set_position_Injected
void UnityEngine::Transform::set_position_Injected(UnityEngine::Vector3& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::set_position_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_localPosition_Injected
void UnityEngine::Transform::get_localPosition_Injected(UnityEngine::Vector3& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_localPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Transform.set_localPosition_Injected
void UnityEngine::Transform::set_localPosition_Injected(UnityEngine::Vector3& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::set_localPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.GetLocalEulerAngles_Injected
void UnityEngine::Transform::GetLocalEulerAngles_Injected(UnityEngine::RotationOrder order, UnityEngine::Vector3& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::GetLocalEulerAngles_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalEulerAngles_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(order), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, order, ret);
}
// Autogenerated method: UnityEngine.Transform.SetLocalEulerAngles_Injected
void UnityEngine::Transform::SetLocalEulerAngles_Injected(UnityEngine::Vector3& euler, UnityEngine::RotationOrder order) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::SetLocalEulerAngles_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalEulerAngles_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(euler), ::il2cpp_utils::ExtractType(order)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, euler, order);
}
// Autogenerated method: UnityEngine.Transform.SetLocalEulerHint_Injected
void UnityEngine::Transform::SetLocalEulerHint_Injected(UnityEngine::Vector3& euler) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::SetLocalEulerHint_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalEulerHint_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(euler)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, euler);
}
// Autogenerated method: UnityEngine.Transform.get_rotation_Injected
void UnityEngine::Transform::get_rotation_Injected(UnityEngine::Quaternion& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_rotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Transform.set_rotation_Injected
void UnityEngine::Transform::set_rotation_Injected(UnityEngine::Quaternion& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::set_rotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_localRotation_Injected
void UnityEngine::Transform::get_localRotation_Injected(UnityEngine::Quaternion& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_localRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Transform.set_localRotation_Injected
void UnityEngine::Transform::set_localRotation_Injected(UnityEngine::Quaternion& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::set_localRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_localScale_Injected
void UnityEngine::Transform::get_localScale_Injected(UnityEngine::Vector3& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_localScale_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localScale_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Transform.set_localScale_Injected
void UnityEngine::Transform::set_localScale_Injected(UnityEngine::Vector3& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::set_localScale_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localScale_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_worldToLocalMatrix_Injected
void UnityEngine::Transform::get_worldToLocalMatrix_Injected(UnityEngine::Matrix4x4& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_worldToLocalMatrix_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldToLocalMatrix_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Transform.get_localToWorldMatrix_Injected
void UnityEngine::Transform::get_localToWorldMatrix_Injected(UnityEngine::Matrix4x4& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_localToWorldMatrix_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localToWorldMatrix_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Transform.SetPositionAndRotation_Injected
void UnityEngine::Transform::SetPositionAndRotation_Injected(UnityEngine::Vector3& position, UnityEngine::Quaternion& rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::SetPositionAndRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPositionAndRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: UnityEngine.Transform.RotateAroundInternal_Injected
void UnityEngine::Transform::RotateAroundInternal_Injected(UnityEngine::Vector3& axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::RotateAroundInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAroundInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, axis, angle);
}
// Autogenerated method: UnityEngine.Transform.Internal_LookAt_Injected
void UnityEngine::Transform::Internal_LookAt_Injected(UnityEngine::Vector3& worldPosition, UnityEngine::Vector3& worldUp) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::Internal_LookAt_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_LookAt_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition), ::il2cpp_utils::ExtractType(worldUp)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, worldPosition, worldUp);
}
// Autogenerated method: UnityEngine.Transform.TransformDirection_Injected
void UnityEngine::Transform::TransformDirection_Injected(UnityEngine::Vector3& direction, UnityEngine::Vector3& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::TransformDirection_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformDirection_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, direction, ret);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformDirection_Injected
void UnityEngine::Transform::InverseTransformDirection_Injected(UnityEngine::Vector3& direction, UnityEngine::Vector3& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::InverseTransformDirection_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformDirection_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, direction, ret);
}
// Autogenerated method: UnityEngine.Transform.TransformVector_Injected
void UnityEngine::Transform::TransformVector_Injected(UnityEngine::Vector3& vector, UnityEngine::Vector3& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::TransformVector_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformVector_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vector, ret);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformVector_Injected
void UnityEngine::Transform::InverseTransformVector_Injected(UnityEngine::Vector3& vector, UnityEngine::Vector3& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::InverseTransformVector_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformVector_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vector, ret);
}
// Autogenerated method: UnityEngine.Transform.TransformPoint_Injected
void UnityEngine::Transform::TransformPoint_Injected(UnityEngine::Vector3& position, UnityEngine::Vector3& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::TransformPoint_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformPoint_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position, ret);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformPoint_Injected
void UnityEngine::Transform::InverseTransformPoint_Injected(UnityEngine::Vector3& position, UnityEngine::Vector3& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::InverseTransformPoint_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformPoint_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position, ret);
}
// Autogenerated method: UnityEngine.Transform.get_lossyScale_Injected
void UnityEngine::Transform::get_lossyScale_Injected(UnityEngine::Vector3& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::get_lossyScale_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lossyScale_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Transform.RotateAround_Injected
void UnityEngine::Transform::RotateAround_Injected(UnityEngine::Vector3& axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::RotateAround_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAround_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, axis, angle);
}
// Autogenerated method: UnityEngine.Transform.RotateAroundLocal_Injected
void UnityEngine::Transform::RotateAroundLocal_Injected(UnityEngine::Vector3& axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::RotateAroundLocal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAroundLocal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, axis, angle);
}
// Writing MetadataGetter for method: Transform::get_position
// Il2CppName: get_position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)()>(&Transform::get_position)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::set_position
// Il2CppName: set_position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3)>(&Transform::set_position)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "set_position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::get_localPosition
// Il2CppName: get_localPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)()>(&Transform::get_localPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_localPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::set_localPosition
// Il2CppName: set_localPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3)>(&Transform::set_localPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "set_localPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::GetLocalEulerAngles
// Il2CppName: GetLocalEulerAngles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)(UnityEngine::RotationOrder)>(&Transform::GetLocalEulerAngles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "GetLocalEulerAngles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RotationOrder>()});
  }
};
// Writing MetadataGetter for method: Transform::SetLocalEulerAngles
// Il2CppName: SetLocalEulerAngles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3, UnityEngine::RotationOrder)>(&Transform::SetLocalEulerAngles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "SetLocalEulerAngles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RotationOrder>()});
  }
};
// Writing MetadataGetter for method: Transform::SetLocalEulerHint
// Il2CppName: SetLocalEulerHint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3)>(&Transform::SetLocalEulerHint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "SetLocalEulerHint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::get_eulerAngles
// Il2CppName: get_eulerAngles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)()>(&Transform::get_eulerAngles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_eulerAngles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::set_eulerAngles
// Il2CppName: set_eulerAngles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3)>(&Transform::set_eulerAngles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "set_eulerAngles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::get_localEulerAngles
// Il2CppName: get_localEulerAngles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)()>(&Transform::get_localEulerAngles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_localEulerAngles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::set_localEulerAngles
// Il2CppName: set_localEulerAngles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3)>(&Transform::set_localEulerAngles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "set_localEulerAngles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::get_right
// Il2CppName: get_right
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)()>(&Transform::get_right)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_right", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::set_right
// Il2CppName: set_right
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3)>(&Transform::set_right)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "set_right", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::get_up
// Il2CppName: get_up
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)()>(&Transform::get_up)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_up", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::set_up
// Il2CppName: set_up
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3)>(&Transform::set_up)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "set_up", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::get_forward
// Il2CppName: get_forward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)()>(&Transform::get_forward)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_forward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::set_forward
// Il2CppName: set_forward
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3)>(&Transform::set_forward)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "set_forward", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::get_rotation
// Il2CppName: get_rotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Quaternion (Transform::*)()>(&Transform::get_rotation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_rotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::set_rotation
// Il2CppName: set_rotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Quaternion)>(&Transform::set_rotation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "set_rotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion>()});
  }
};
// Writing MetadataGetter for method: Transform::get_localRotation
// Il2CppName: get_localRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Quaternion (Transform::*)()>(&Transform::get_localRotation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_localRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::set_localRotation
// Il2CppName: set_localRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Quaternion)>(&Transform::set_localRotation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "set_localRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion>()});
  }
};
// Writing MetadataGetter for method: Transform::get_rotationOrder
// Il2CppName: get_rotationOrder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RotationOrder (Transform::*)()>(&Transform::get_rotationOrder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_rotationOrder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::set_rotationOrder
// Il2CppName: set_rotationOrder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::RotationOrder)>(&Transform::set_rotationOrder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "set_rotationOrder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RotationOrder>()});
  }
};
// Writing MetadataGetter for method: Transform::GetRotationOrderInternal
// Il2CppName: GetRotationOrderInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Transform::*)()>(&Transform::GetRotationOrderInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "GetRotationOrderInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::SetRotationOrderInternal
// Il2CppName: SetRotationOrderInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::RotationOrder)>(&Transform::SetRotationOrderInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "SetRotationOrderInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RotationOrder>()});
  }
};
// Writing MetadataGetter for method: Transform::get_localScale
// Il2CppName: get_localScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)()>(&Transform::get_localScale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_localScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::set_localScale
// Il2CppName: set_localScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3)>(&Transform::set_localScale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "set_localScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::get_parent
// Il2CppName: get_parent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (Transform::*)()>(&Transform::get_parent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_parent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::set_parent
// Il2CppName: set_parent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Transform*)>(&Transform::set_parent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "set_parent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>()});
  }
};
// Writing MetadataGetter for method: Transform::get_parentInternal
// Il2CppName: get_parentInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (Transform::*)()>(&Transform::get_parentInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_parentInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::set_parentInternal
// Il2CppName: set_parentInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Transform*)>(&Transform::set_parentInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "set_parentInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>()});
  }
};
// Writing MetadataGetter for method: Transform::GetParent
// Il2CppName: GetParent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (Transform::*)()>(&Transform::GetParent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "GetParent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::SetParent
// Il2CppName: SetParent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Transform*)>(&Transform::SetParent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "SetParent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>()});
  }
};
// Writing MetadataGetter for method: Transform::SetParent
// Il2CppName: SetParent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Transform*, bool)>(&Transform::SetParent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "SetParent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Transform::get_worldToLocalMatrix
// Il2CppName: get_worldToLocalMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Matrix4x4 (Transform::*)()>(&Transform::get_worldToLocalMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_worldToLocalMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::get_localToWorldMatrix
// Il2CppName: get_localToWorldMatrix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Matrix4x4 (Transform::*)()>(&Transform::get_localToWorldMatrix)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_localToWorldMatrix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::SetPositionAndRotation
// Il2CppName: SetPositionAndRotation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3, UnityEngine::Quaternion)>(&Transform::SetPositionAndRotation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "SetPositionAndRotation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion>()});
  }
};
// Writing MetadataGetter for method: Transform::Translate
// Il2CppName: Translate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3, UnityEngine::Space)>(&Transform::Translate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "Translate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Space>()});
  }
};
// Writing MetadataGetter for method: Transform::Translate
// Il2CppName: Translate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3)>(&Transform::Translate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "Translate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::Translate
// Il2CppName: Translate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(float, float, float, UnityEngine::Space)>(&Transform::Translate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "Translate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Space>()});
  }
};
// Writing MetadataGetter for method: Transform::Translate
// Il2CppName: Translate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(float, float, float)>(&Transform::Translate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "Translate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Transform::Translate
// Il2CppName: Translate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3, UnityEngine::Transform*)>(&Transform::Translate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "Translate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>()});
  }
};
// Writing MetadataGetter for method: Transform::Translate
// Il2CppName: Translate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(float, float, float, UnityEngine::Transform*)>(&Transform::Translate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "Translate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>()});
  }
};
// Writing MetadataGetter for method: Transform::Rotate
// Il2CppName: Rotate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3, UnityEngine::Space)>(&Transform::Rotate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "Rotate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Space>()});
  }
};
// Writing MetadataGetter for method: Transform::Rotate
// Il2CppName: Rotate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3)>(&Transform::Rotate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "Rotate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::Rotate
// Il2CppName: Rotate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(float, float, float, UnityEngine::Space)>(&Transform::Rotate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "Rotate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Space>()});
  }
};
// Writing MetadataGetter for method: Transform::Rotate
// Il2CppName: Rotate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(float, float, float)>(&Transform::Rotate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "Rotate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Transform::RotateAroundInternal
// Il2CppName: RotateAroundInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3, float)>(&Transform::RotateAroundInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "RotateAroundInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Transform::Rotate
// Il2CppName: Rotate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3, float, UnityEngine::Space)>(&Transform::Rotate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "Rotate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Space>()});
  }
};
// Writing MetadataGetter for method: Transform::Rotate
// Il2CppName: Rotate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3, float)>(&Transform::Rotate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "Rotate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Transform::RotateAround
// Il2CppName: RotateAround
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3, UnityEngine::Vector3, float)>(&Transform::RotateAround)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "RotateAround", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Transform::LookAt
// Il2CppName: LookAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Transform*, UnityEngine::Vector3)>(&Transform::LookAt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "LookAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::LookAt
// Il2CppName: LookAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Transform*)>(&Transform::LookAt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "LookAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>()});
  }
};
// Writing MetadataGetter for method: Transform::LookAt
// Il2CppName: LookAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3, UnityEngine::Vector3)>(&Transform::LookAt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "LookAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::LookAt
// Il2CppName: LookAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3)>(&Transform::LookAt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "LookAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::Internal_LookAt
// Il2CppName: Internal_LookAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3, UnityEngine::Vector3)>(&Transform::Internal_LookAt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "Internal_LookAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::TransformDirection
// Il2CppName: TransformDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)(UnityEngine::Vector3)>(&Transform::TransformDirection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "TransformDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::TransformDirection
// Il2CppName: TransformDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)(float, float, float)>(&Transform::TransformDirection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "TransformDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Transform::InverseTransformDirection
// Il2CppName: InverseTransformDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)(UnityEngine::Vector3)>(&Transform::InverseTransformDirection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "InverseTransformDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::InverseTransformDirection
// Il2CppName: InverseTransformDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)(float, float, float)>(&Transform::InverseTransformDirection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "InverseTransformDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Transform::TransformVector
// Il2CppName: TransformVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)(UnityEngine::Vector3)>(&Transform::TransformVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "TransformVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::TransformVector
// Il2CppName: TransformVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)(float, float, float)>(&Transform::TransformVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "TransformVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Transform::InverseTransformVector
// Il2CppName: InverseTransformVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)(UnityEngine::Vector3)>(&Transform::InverseTransformVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "InverseTransformVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::InverseTransformVector
// Il2CppName: InverseTransformVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)(float, float, float)>(&Transform::InverseTransformVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "InverseTransformVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Transform::TransformPoint
// Il2CppName: TransformPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)(UnityEngine::Vector3)>(&Transform::TransformPoint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "TransformPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::TransformPoint
// Il2CppName: TransformPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)(float, float, float)>(&Transform::TransformPoint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "TransformPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Transform::InverseTransformPoint
// Il2CppName: InverseTransformPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)(UnityEngine::Vector3)>(&Transform::InverseTransformPoint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "InverseTransformPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Transform::InverseTransformPoint
// Il2CppName: InverseTransformPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)(float, float, float)>(&Transform::InverseTransformPoint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "InverseTransformPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Transform::get_root
// Il2CppName: get_root
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (Transform::*)()>(&Transform::get_root)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_root", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::GetRoot
// Il2CppName: GetRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (Transform::*)()>(&Transform::GetRoot)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "GetRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::get_childCount
// Il2CppName: get_childCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Transform::*)()>(&Transform::get_childCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_childCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::DetachChildren
// Il2CppName: DetachChildren
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)()>(&Transform::DetachChildren)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "DetachChildren", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::SetAsFirstSibling
// Il2CppName: SetAsFirstSibling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)()>(&Transform::SetAsFirstSibling)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "SetAsFirstSibling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::SetAsLastSibling
// Il2CppName: SetAsLastSibling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)()>(&Transform::SetAsLastSibling)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "SetAsLastSibling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::SetSiblingIndex
// Il2CppName: SetSiblingIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(int)>(&Transform::SetSiblingIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "SetSiblingIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Transform::GetSiblingIndex
// Il2CppName: GetSiblingIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Transform::*)()>(&Transform::GetSiblingIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "GetSiblingIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::FindRelativeTransformWithPath
// Il2CppName: FindRelativeTransformWithPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (*)(UnityEngine::Transform*, ::Il2CppString*, bool)>(&Transform::FindRelativeTransformWithPath)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "FindRelativeTransformWithPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Transform::Find
// Il2CppName: Find
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (Transform::*)(::Il2CppString*)>(&Transform::Find)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "Find", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Transform::SendTransformChangedScale
// Il2CppName: SendTransformChangedScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)()>(&Transform::SendTransformChangedScale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "SendTransformChangedScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::get_lossyScale
// Il2CppName: get_lossyScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Transform::*)()>(&Transform::get_lossyScale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_lossyScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::IsChildOf
// Il2CppName: IsChildOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Transform::*)(UnityEngine::Transform*)>(&Transform::IsChildOf)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "IsChildOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>()});
  }
};
// Writing MetadataGetter for method: Transform::get_hasChanged
// Il2CppName: get_hasChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Transform::*)()>(&Transform::get_hasChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_hasChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::set_hasChanged
// Il2CppName: set_hasChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(bool)>(&Transform::set_hasChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "set_hasChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Transform::FindChild
// Il2CppName: FindChild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (Transform::*)(::Il2CppString*)>(&Transform::FindChild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "FindChild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Transform::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (Transform::*)()>(&Transform::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::RotateAround
// Il2CppName: RotateAround
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3, float)>(&Transform::RotateAround)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "RotateAround", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Transform::RotateAroundLocal
// Il2CppName: RotateAroundLocal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3, float)>(&Transform::RotateAroundLocal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "RotateAroundLocal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Transform::GetChild
// Il2CppName: GetChild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (Transform::*)(int)>(&Transform::GetChild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "GetChild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Transform::GetChildCount
// Il2CppName: GetChildCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Transform::*)()>(&Transform::GetChildCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "GetChildCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::get_hierarchyCapacity
// Il2CppName: get_hierarchyCapacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Transform::*)()>(&Transform::get_hierarchyCapacity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_hierarchyCapacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::set_hierarchyCapacity
// Il2CppName: set_hierarchyCapacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(int)>(&Transform::set_hierarchyCapacity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "set_hierarchyCapacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Transform::internal_getHierarchyCapacity
// Il2CppName: internal_getHierarchyCapacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Transform::*)()>(&Transform::internal_getHierarchyCapacity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "internal_getHierarchyCapacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::internal_setHierarchyCapacity
// Il2CppName: internal_setHierarchyCapacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(int)>(&Transform::internal_setHierarchyCapacity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "internal_setHierarchyCapacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Transform::get_hierarchyCount
// Il2CppName: get_hierarchyCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Transform::*)()>(&Transform::get_hierarchyCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_hierarchyCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::internal_getHierarchyCount
// Il2CppName: internal_getHierarchyCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Transform::*)()>(&Transform::internal_getHierarchyCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "internal_getHierarchyCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::IsNonUniformScaleTransform
// Il2CppName: IsNonUniformScaleTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Transform::*)()>(&Transform::IsNonUniformScaleTransform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "IsNonUniformScaleTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::get_position_Injected
// Il2CppName: get_position_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3&)>(&Transform::get_position_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_position_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Transform::set_position_Injected
// Il2CppName: set_position_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3&)>(&Transform::set_position_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "set_position_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Transform::get_localPosition_Injected
// Il2CppName: get_localPosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3&)>(&Transform::get_localPosition_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_localPosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Transform::set_localPosition_Injected
// Il2CppName: set_localPosition_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3&)>(&Transform::set_localPosition_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "set_localPosition_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Transform::GetLocalEulerAngles_Injected
// Il2CppName: GetLocalEulerAngles_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::RotationOrder, UnityEngine::Vector3&)>(&Transform::GetLocalEulerAngles_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "GetLocalEulerAngles_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RotationOrder>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Transform::SetLocalEulerAngles_Injected
// Il2CppName: SetLocalEulerAngles_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3&, UnityEngine::RotationOrder)>(&Transform::SetLocalEulerAngles_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "SetLocalEulerAngles_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RotationOrder>()});
  }
};
// Writing MetadataGetter for method: Transform::SetLocalEulerHint_Injected
// Il2CppName: SetLocalEulerHint_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3&)>(&Transform::SetLocalEulerHint_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "SetLocalEulerHint_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Transform::get_rotation_Injected
// Il2CppName: get_rotation_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Quaternion&)>(&Transform::get_rotation_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_rotation_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>()});
  }
};
// Writing MetadataGetter for method: Transform::set_rotation_Injected
// Il2CppName: set_rotation_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Quaternion&)>(&Transform::set_rotation_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "set_rotation_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>()});
  }
};
// Writing MetadataGetter for method: Transform::get_localRotation_Injected
// Il2CppName: get_localRotation_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Quaternion&)>(&Transform::get_localRotation_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_localRotation_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>()});
  }
};
// Writing MetadataGetter for method: Transform::set_localRotation_Injected
// Il2CppName: set_localRotation_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Quaternion&)>(&Transform::set_localRotation_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "set_localRotation_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>()});
  }
};
// Writing MetadataGetter for method: Transform::get_localScale_Injected
// Il2CppName: get_localScale_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3&)>(&Transform::get_localScale_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_localScale_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Transform::set_localScale_Injected
// Il2CppName: set_localScale_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3&)>(&Transform::set_localScale_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "set_localScale_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Transform::get_worldToLocalMatrix_Injected
// Il2CppName: get_worldToLocalMatrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Matrix4x4&)>(&Transform::get_worldToLocalMatrix_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_worldToLocalMatrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()});
  }
};
// Writing MetadataGetter for method: Transform::get_localToWorldMatrix_Injected
// Il2CppName: get_localToWorldMatrix_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Matrix4x4&)>(&Transform::get_localToWorldMatrix_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_localToWorldMatrix_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>()});
  }
};
// Writing MetadataGetter for method: Transform::SetPositionAndRotation_Injected
// Il2CppName: SetPositionAndRotation_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3&, UnityEngine::Quaternion&)>(&Transform::SetPositionAndRotation_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "SetPositionAndRotation_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>()});
  }
};
// Writing MetadataGetter for method: Transform::RotateAroundInternal_Injected
// Il2CppName: RotateAroundInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3&, float)>(&Transform::RotateAroundInternal_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "RotateAroundInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Transform::Internal_LookAt_Injected
// Il2CppName: Internal_LookAt_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3&, UnityEngine::Vector3&)>(&Transform::Internal_LookAt_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "Internal_LookAt_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Transform::TransformDirection_Injected
// Il2CppName: TransformDirection_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3&, UnityEngine::Vector3&)>(&Transform::TransformDirection_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "TransformDirection_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Transform::InverseTransformDirection_Injected
// Il2CppName: InverseTransformDirection_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3&, UnityEngine::Vector3&)>(&Transform::InverseTransformDirection_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "InverseTransformDirection_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Transform::TransformVector_Injected
// Il2CppName: TransformVector_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3&, UnityEngine::Vector3&)>(&Transform::TransformVector_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "TransformVector_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Transform::InverseTransformVector_Injected
// Il2CppName: InverseTransformVector_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3&, UnityEngine::Vector3&)>(&Transform::InverseTransformVector_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "InverseTransformVector_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Transform::TransformPoint_Injected
// Il2CppName: TransformPoint_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3&, UnityEngine::Vector3&)>(&Transform::TransformPoint_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "TransformPoint_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Transform::InverseTransformPoint_Injected
// Il2CppName: InverseTransformPoint_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3&, UnityEngine::Vector3&)>(&Transform::InverseTransformPoint_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "InverseTransformPoint_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Transform::get_lossyScale_Injected
// Il2CppName: get_lossyScale_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3&)>(&Transform::get_lossyScale_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "get_lossyScale_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: Transform::RotateAround_Injected
// Il2CppName: RotateAround_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3&, float)>(&Transform::RotateAround_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "RotateAround_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Transform::RotateAroundLocal_Injected
// Il2CppName: RotateAroundLocal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)(UnityEngine::Vector3&, float)>(&Transform::RotateAroundLocal_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), "RotateAroundLocal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Transform::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)()>(&Transform::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::*)()>(&Transform::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Transform/Enumerator
#include "UnityEngine/Transform_Enumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Transform/Enumerator.get_Current
::Il2CppObject* UnityEngine::Transform::Enumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::Enumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform/Enumerator.MoveNext
bool UnityEngine::Transform::Enumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::Enumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform/Enumerator.Reset
void UnityEngine::Transform::Enumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Transform::Enumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Transform::Enumerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::Enumerator::*)(UnityEngine::Transform*)>(&Transform::Enumerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform::Enumerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::Enumerator::*)(UnityEngine::Transform*)>(&Transform::Enumerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform::Enumerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>()});
  }
};
// Writing MetadataGetter for method: Transform::Enumerator::get_Current
// Il2CppName: get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Transform::Enumerator::*)()>(&Transform::Enumerator::get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform::Enumerator*), "get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::Enumerator::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Transform::Enumerator::*)()>(&Transform::Enumerator::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform::Enumerator*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Transform::Enumerator::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Transform::Enumerator::*)()>(&Transform::Enumerator::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Transform::Enumerator*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SpriteRenderer.set_sprite
void UnityEngine::SpriteRenderer::set_sprite(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SpriteRenderer::set_sprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SpriteRenderer.get_color
UnityEngine::Color UnityEngine::SpriteRenderer::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SpriteRenderer::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpriteRenderer.set_color
void UnityEngine::SpriteRenderer::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SpriteRenderer::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SpriteRenderer.get_color_Injected
void UnityEngine::SpriteRenderer::get_color_Injected(UnityEngine::Color& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SpriteRenderer::get_color_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.SpriteRenderer.set_color_Injected
void UnityEngine::SpriteRenderer::set_color_Injected(UnityEngine::Color& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SpriteRenderer::set_color_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: SpriteRenderer::set_sprite
// Il2CppName: set_sprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SpriteRenderer::*)(UnityEngine::Sprite*)>(&SpriteRenderer::set_sprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteRenderer*), "set_sprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
  }
};
// Writing MetadataGetter for method: SpriteRenderer::get_color
// Il2CppName: get_color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (SpriteRenderer::*)()>(&SpriteRenderer::get_color)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteRenderer*), "get_color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SpriteRenderer::set_color
// Il2CppName: set_color
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SpriteRenderer::*)(UnityEngine::Color)>(&SpriteRenderer::set_color)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteRenderer*), "set_color", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: SpriteRenderer::get_color_Injected
// Il2CppName: get_color_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SpriteRenderer::*)(UnityEngine::Color&)>(&SpriteRenderer::get_color_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteRenderer*), "get_color_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Writing MetadataGetter for method: SpriteRenderer::set_color_Injected
// Il2CppName: set_color_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SpriteRenderer::*)(UnityEngine::Color&)>(&SpriteRenderer::set_color_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteRenderer*), "set_color_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpriteMeshType
#include "UnityEngine/SpriteMeshType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpriteMeshType FullRect
UnityEngine::SpriteMeshType UnityEngine::SpriteMeshType::_get_FullRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SpriteMeshType::_get_FullRect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::SpriteMeshType>("UnityEngine", "SpriteMeshType", "FullRect"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpriteMeshType FullRect
void UnityEngine::SpriteMeshType::_set_FullRect(UnityEngine::SpriteMeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SpriteMeshType::_set_FullRect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SpriteMeshType", "FullRect", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpriteMeshType Tight
UnityEngine::SpriteMeshType UnityEngine::SpriteMeshType::_get_Tight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SpriteMeshType::_get_Tight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::SpriteMeshType>("UnityEngine", "SpriteMeshType", "Tight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpriteMeshType Tight
void UnityEngine::SpriteMeshType::_set_Tight(UnityEngine::SpriteMeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SpriteMeshType::_set_Tight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SpriteMeshType", "Tight", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpritePackingMode
#include "UnityEngine/SpritePackingMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpritePackingMode Tight
UnityEngine::SpritePackingMode UnityEngine::SpritePackingMode::_get_Tight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SpritePackingMode::_get_Tight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::SpritePackingMode>("UnityEngine", "SpritePackingMode", "Tight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpritePackingMode Tight
void UnityEngine::SpritePackingMode::_set_Tight(UnityEngine::SpritePackingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SpritePackingMode::_set_Tight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SpritePackingMode", "Tight", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpritePackingMode Rectangle
UnityEngine::SpritePackingMode UnityEngine::SpritePackingMode::_get_Rectangle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SpritePackingMode::_get_Rectangle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::SpritePackingMode>("UnityEngine", "SpritePackingMode", "Rectangle"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpritePackingMode Rectangle
void UnityEngine::SpritePackingMode::_set_Rectangle(UnityEngine::SpritePackingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SpritePackingMode::_set_Rectangle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SpritePackingMode", "Rectangle", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.SpriteMeshType
#include "UnityEngine/SpriteMeshType.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.SpritePackingMode
#include "UnityEngine/SpritePackingMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Sprite.GetPackingMode
int UnityEngine::Sprite::GetPackingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::GetPackingMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackingMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetPacked
int UnityEngine::Sprite::GetPacked() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::GetPacked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPacked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetTextureRect
UnityEngine::Rect UnityEngine::Sprite::GetTextureRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::GetTextureRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetInnerUVs
UnityEngine::Vector4 UnityEngine::Sprite::GetInnerUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::GetInnerUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInnerUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetOuterUVs
UnityEngine::Vector4 UnityEngine::Sprite::GetOuterUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::GetOuterUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOuterUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetPadding
UnityEngine::Vector4 UnityEngine::Sprite::GetPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::GetPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.CreateSprite
UnityEngine::Sprite* UnityEngine::Sprite::CreateSprite(UnityEngine::Texture2D* texture, UnityEngine::Rect rect, UnityEngine::Vector2 pivot, float pixelsPerUnit, uint extrude, UnityEngine::SpriteMeshType meshType, UnityEngine::Vector4 border, bool generateFallbackPhysicsShape) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::CreateSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Sprite", "CreateSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(pivot), ::il2cpp_utils::ExtractType(pixelsPerUnit), ::il2cpp_utils::ExtractType(extrude), ::il2cpp_utils::ExtractType(meshType), ::il2cpp_utils::ExtractType(border), ::il2cpp_utils::ExtractType(generateFallbackPhysicsShape)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, texture, rect, pivot, pixelsPerUnit, extrude, meshType, border, generateFallbackPhysicsShape);
}
// Autogenerated method: UnityEngine.Sprite.get_bounds
UnityEngine::Bounds UnityEngine::Sprite::get_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::get_bounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_rect
UnityEngine::Rect UnityEngine::Sprite::get_rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::get_rect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_border
UnityEngine::Vector4 UnityEngine::Sprite::get_border() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::get_border");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_border", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_texture
UnityEngine::Texture2D* UnityEngine::Sprite::get_texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::get_texture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_texture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_pixelsPerUnit
float UnityEngine::Sprite::get_pixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::get_pixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_associatedAlphaSplitTexture
UnityEngine::Texture2D* UnityEngine::Sprite::get_associatedAlphaSplitTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::get_associatedAlphaSplitTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_associatedAlphaSplitTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_pivot
UnityEngine::Vector2 UnityEngine::Sprite::get_pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::get_pivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_packed
bool UnityEngine::Sprite::get_packed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::get_packed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_packingMode
UnityEngine::SpritePackingMode UnityEngine::Sprite::get_packingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::get_packingMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packingMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::SpritePackingMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_textureRect
UnityEngine::Rect UnityEngine::Sprite::get_textureRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::get_textureRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textureRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_vertices
::Array<UnityEngine::Vector2>* UnityEngine::Sprite::get_vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::get_vertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector2>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_triangles
::Array<uint16_t>* UnityEngine::Sprite::get_triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::get_triangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_triangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint16_t>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_uv
::Array<UnityEngine::Vector2>* UnityEngine::Sprite::get_uv() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::get_uv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector2>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.Create
UnityEngine::Sprite* UnityEngine::Sprite::Create(UnityEngine::Texture2D* texture, UnityEngine::Rect rect, UnityEngine::Vector2 pivot, float pixelsPerUnit, uint extrude, UnityEngine::SpriteMeshType meshType, UnityEngine::Vector4 border, bool generateFallbackPhysicsShape) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Sprite", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(pivot), ::il2cpp_utils::ExtractType(pixelsPerUnit), ::il2cpp_utils::ExtractType(extrude), ::il2cpp_utils::ExtractType(meshType), ::il2cpp_utils::ExtractType(border), ::il2cpp_utils::ExtractType(generateFallbackPhysicsShape)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, texture, rect, pivot, pixelsPerUnit, extrude, meshType, border, generateFallbackPhysicsShape);
}
// Autogenerated method: UnityEngine.Sprite.GetTextureRect_Injected
void UnityEngine::Sprite::GetTextureRect_Injected(UnityEngine::Rect& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::GetTextureRect_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureRect_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Sprite.GetInnerUVs_Injected
void UnityEngine::Sprite::GetInnerUVs_Injected(UnityEngine::Vector4& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::GetInnerUVs_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInnerUVs_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Sprite.GetOuterUVs_Injected
void UnityEngine::Sprite::GetOuterUVs_Injected(UnityEngine::Vector4& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::GetOuterUVs_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOuterUVs_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Sprite.GetPadding_Injected
void UnityEngine::Sprite::GetPadding_Injected(UnityEngine::Vector4& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::GetPadding_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPadding_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Sprite.CreateSprite_Injected
UnityEngine::Sprite* UnityEngine::Sprite::CreateSprite_Injected(UnityEngine::Texture2D* texture, UnityEngine::Rect& rect, UnityEngine::Vector2& pivot, float pixelsPerUnit, uint extrude, UnityEngine::SpriteMeshType meshType, UnityEngine::Vector4& border, bool generateFallbackPhysicsShape) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::CreateSprite_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Sprite", "CreateSprite_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(pivot), ::il2cpp_utils::ExtractType(pixelsPerUnit), ::il2cpp_utils::ExtractType(extrude), ::il2cpp_utils::ExtractType(meshType), ::il2cpp_utils::ExtractType(border), ::il2cpp_utils::ExtractType(generateFallbackPhysicsShape)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, texture, rect, pivot, pixelsPerUnit, extrude, meshType, border, generateFallbackPhysicsShape);
}
// Autogenerated method: UnityEngine.Sprite.get_bounds_Injected
void UnityEngine::Sprite::get_bounds_Injected(UnityEngine::Bounds& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::get_bounds_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Sprite.get_rect_Injected
void UnityEngine::Sprite::get_rect_Injected(UnityEngine::Rect& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::get_rect_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rect_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Sprite.get_border_Injected
void UnityEngine::Sprite::get_border_Injected(UnityEngine::Vector4& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::get_border_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_border_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Sprite.get_pivot_Injected
void UnityEngine::Sprite::get_pivot_Injected(UnityEngine::Vector2& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprite::get_pivot_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pivot_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Writing MetadataGetter for method: Sprite::GetPackingMode
// Il2CppName: GetPackingMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Sprite::*)()>(&Sprite::GetPackingMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "GetPackingMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sprite::GetPacked
// Il2CppName: GetPacked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Sprite::*)()>(&Sprite::GetPacked)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "GetPacked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sprite::GetTextureRect
// Il2CppName: GetTextureRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rect (Sprite::*)()>(&Sprite::GetTextureRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "GetTextureRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sprite::GetInnerUVs
// Il2CppName: GetInnerUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (Sprite::*)()>(&Sprite::GetInnerUVs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "GetInnerUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sprite::GetOuterUVs
// Il2CppName: GetOuterUVs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (Sprite::*)()>(&Sprite::GetOuterUVs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "GetOuterUVs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sprite::GetPadding
// Il2CppName: GetPadding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (Sprite::*)()>(&Sprite::GetPadding)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "GetPadding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sprite::CreateSprite
// Il2CppName: CreateSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Sprite* (*)(UnityEngine::Texture2D*, UnityEngine::Rect, UnityEngine::Vector2, float, uint, UnityEngine::SpriteMeshType, UnityEngine::Vector4, bool)>(&Sprite::CreateSprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "CreateSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture2D*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SpriteMeshType>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Sprite::get_bounds
// Il2CppName: get_bounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Bounds (Sprite::*)()>(&Sprite::get_bounds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "get_bounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sprite::get_rect
// Il2CppName: get_rect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rect (Sprite::*)()>(&Sprite::get_rect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "get_rect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sprite::get_border
// Il2CppName: get_border
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (Sprite::*)()>(&Sprite::get_border)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "get_border", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sprite::get_texture
// Il2CppName: get_texture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture2D* (Sprite::*)()>(&Sprite::get_texture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "get_texture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sprite::get_pixelsPerUnit
// Il2CppName: get_pixelsPerUnit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Sprite::*)()>(&Sprite::get_pixelsPerUnit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "get_pixelsPerUnit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sprite::get_associatedAlphaSplitTexture
// Il2CppName: get_associatedAlphaSplitTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture2D* (Sprite::*)()>(&Sprite::get_associatedAlphaSplitTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "get_associatedAlphaSplitTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sprite::get_pivot
// Il2CppName: get_pivot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Sprite::*)()>(&Sprite::get_pivot)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "get_pivot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sprite::get_packed
// Il2CppName: get_packed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Sprite::*)()>(&Sprite::get_packed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "get_packed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sprite::get_packingMode
// Il2CppName: get_packingMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::SpritePackingMode (Sprite::*)()>(&Sprite::get_packingMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "get_packingMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sprite::get_textureRect
// Il2CppName: get_textureRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rect (Sprite::*)()>(&Sprite::get_textureRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "get_textureRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sprite::get_vertices
// Il2CppName: get_vertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector2>* (Sprite::*)()>(&Sprite::get_vertices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "get_vertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sprite::get_triangles
// Il2CppName: get_triangles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint16_t>* (Sprite::*)()>(&Sprite::get_triangles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "get_triangles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sprite::get_uv
// Il2CppName: get_uv
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::Vector2>* (Sprite::*)()>(&Sprite::get_uv)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "get_uv", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Sprite::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Sprite* (*)(UnityEngine::Texture2D*, UnityEngine::Rect, UnityEngine::Vector2, float, uint, UnityEngine::SpriteMeshType, UnityEngine::Vector4, bool)>(&Sprite::Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture2D*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SpriteMeshType>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Sprite::GetTextureRect_Injected
// Il2CppName: GetTextureRect_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sprite::*)(UnityEngine::Rect&)>(&Sprite::GetTextureRect_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "GetTextureRect_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>()});
  }
};
// Writing MetadataGetter for method: Sprite::GetInnerUVs_Injected
// Il2CppName: GetInnerUVs_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sprite::*)(UnityEngine::Vector4&)>(&Sprite::GetInnerUVs_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "GetInnerUVs_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4&>()});
  }
};
// Writing MetadataGetter for method: Sprite::GetOuterUVs_Injected
// Il2CppName: GetOuterUVs_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sprite::*)(UnityEngine::Vector4&)>(&Sprite::GetOuterUVs_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "GetOuterUVs_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4&>()});
  }
};
// Writing MetadataGetter for method: Sprite::GetPadding_Injected
// Il2CppName: GetPadding_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sprite::*)(UnityEngine::Vector4&)>(&Sprite::GetPadding_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "GetPadding_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4&>()});
  }
};
// Writing MetadataGetter for method: Sprite::CreateSprite_Injected
// Il2CppName: CreateSprite_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Sprite* (*)(UnityEngine::Texture2D*, UnityEngine::Rect&, UnityEngine::Vector2&, float, uint, UnityEngine::SpriteMeshType, UnityEngine::Vector4&, bool)>(&Sprite::CreateSprite_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "CreateSprite_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture2D*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SpriteMeshType>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Sprite::get_bounds_Injected
// Il2CppName: get_bounds_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sprite::*)(UnityEngine::Bounds&)>(&Sprite::get_bounds_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "get_bounds_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Bounds&>()});
  }
};
// Writing MetadataGetter for method: Sprite::get_rect_Injected
// Il2CppName: get_rect_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sprite::*)(UnityEngine::Rect&)>(&Sprite::get_rect_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "get_rect_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>()});
  }
};
// Writing MetadataGetter for method: Sprite::get_border_Injected
// Il2CppName: get_border_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sprite::*)(UnityEngine::Vector4&)>(&Sprite::get_border_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "get_border_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4&>()});
  }
};
// Writing MetadataGetter for method: Sprite::get_pivot_Injected
// Il2CppName: get_pivot_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sprite::*)(UnityEngine::Vector2&)>(&Sprite::get_pivot_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), "get_pivot_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
  }
};
// Writing MetadataGetter for method: Sprite::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sprite::*)()>(&Sprite::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Sprite::*)()>(&Sprite::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Sprite*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine._Scripting.APIUpdating.APIUpdaterRuntimeHelpers
#include "UnityEngine/_Scripting/APIUpdating/APIUpdaterRuntimeHelpers.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine._Scripting.APIUpdating.APIUpdaterRuntimeHelpers.GetMovedFromAttributeDataForType
bool UnityEngine::_Scripting::APIUpdating::APIUpdaterRuntimeHelpers::GetMovedFromAttributeDataForType(System::Type* sourceType, ::Il2CppString*& assembly, ::Il2CppString*& nsp, ::Il2CppString*& klass) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_Scripting::APIUpdating::APIUpdaterRuntimeHelpers::GetMovedFromAttributeDataForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine._Scripting.APIUpdating", "APIUpdaterRuntimeHelpers", "GetMovedFromAttributeDataForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceType), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceType, assembly, nsp, klass);
}
// Autogenerated method: UnityEngine._Scripting.APIUpdating.APIUpdaterRuntimeHelpers.GetObsoleteTypeRedirection
bool UnityEngine::_Scripting::APIUpdating::APIUpdaterRuntimeHelpers::GetObsoleteTypeRedirection(System::Type* sourceType, ::Il2CppString*& assemblyName, ::Il2CppString*& nsp, ::Il2CppString*& className) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_Scripting::APIUpdating::APIUpdaterRuntimeHelpers::GetObsoleteTypeRedirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine._Scripting.APIUpdating", "APIUpdaterRuntimeHelpers", "GetObsoleteTypeRedirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceType), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceType, assemblyName, nsp, className);
}
// Writing MetadataGetter for method: APIUpdaterRuntimeHelpers::GetMovedFromAttributeDataForType
// Il2CppName: GetMovedFromAttributeDataForType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Type*, ::Il2CppString*&, ::Il2CppString*&, ::Il2CppString*&)>(&APIUpdaterRuntimeHelpers::GetMovedFromAttributeDataForType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(APIUpdaterRuntimeHelpers*), "GetMovedFromAttributeDataForType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()});
  }
};
// Writing MetadataGetter for method: APIUpdaterRuntimeHelpers::GetObsoleteTypeRedirection
// Il2CppName: GetObsoleteTypeRedirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Type*, ::Il2CppString*&, ::Il2CppString*&, ::Il2CppString*&)>(&APIUpdaterRuntimeHelpers::GetObsoleteTypeRedirection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(APIUpdaterRuntimeHelpers*), "GetObsoleteTypeRedirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Sprites.DataUtility
#include "UnityEngine/Sprites/DataUtility.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Sprites.DataUtility.GetInnerUV
UnityEngine::Vector4 UnityEngine::Sprites::DataUtility::GetInnerUV(UnityEngine::Sprite* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprites::DataUtility::GetInnerUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Sprites", "DataUtility", "GetInnerUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sprite);
}
// Autogenerated method: UnityEngine.Sprites.DataUtility.GetOuterUV
UnityEngine::Vector4 UnityEngine::Sprites::DataUtility::GetOuterUV(UnityEngine::Sprite* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprites::DataUtility::GetOuterUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Sprites", "DataUtility", "GetOuterUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sprite);
}
// Autogenerated method: UnityEngine.Sprites.DataUtility.GetPadding
UnityEngine::Vector4 UnityEngine::Sprites::DataUtility::GetPadding(UnityEngine::Sprite* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprites::DataUtility::GetPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Sprites", "DataUtility", "GetPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sprite);
}
// Autogenerated method: UnityEngine.Sprites.DataUtility.GetMinSize
UnityEngine::Vector2 UnityEngine::Sprites::DataUtility::GetMinSize(UnityEngine::Sprite* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Sprites::DataUtility::GetMinSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Sprites", "DataUtility", "GetMinSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sprite);
}
// Writing MetadataGetter for method: DataUtility::GetInnerUV
// Il2CppName: GetInnerUV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (*)(UnityEngine::Sprite*)>(&DataUtility::GetInnerUV)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DataUtility*), "GetInnerUV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
  }
};
// Writing MetadataGetter for method: DataUtility::GetOuterUV
// Il2CppName: GetOuterUV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (*)(UnityEngine::Sprite*)>(&DataUtility::GetOuterUV)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DataUtility*), "GetOuterUV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
  }
};
// Writing MetadataGetter for method: DataUtility::GetPadding
// Il2CppName: GetPadding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector4 (*)(UnityEngine::Sprite*)>(&DataUtility::GetPadding)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DataUtility*), "GetPadding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
  }
};
// Writing MetadataGetter for method: DataUtility::GetMinSize
// Il2CppName: GetMinSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (*)(UnityEngine::Sprite*)>(&DataUtility::GetMinSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DataUtility*), "GetMinSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.U2D.SpriteAtlasManager
#include "UnityEngine/U2D/SpriteAtlasManager.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.U2D.SpriteAtlas
#include "UnityEngine/U2D/SpriteAtlas.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xD93E48
// [DebuggerBrowsableAttribute] Offset: 0xD93E48
// Autogenerated static field getter
// Get static field: static private System.Action`2<System.String,System.Action`1<UnityEngine.U2D.SpriteAtlas>> atlasRequested
System::Action_2<::Il2CppString*, System::Action_1<UnityEngine::U2D::SpriteAtlas*>*>* UnityEngine::U2D::SpriteAtlasManager::_get_atlasRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::U2D::SpriteAtlasManager::_get_atlasRequested");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_2<::Il2CppString*, System::Action_1<UnityEngine::U2D::SpriteAtlas*>*>*>("UnityEngine.U2D", "SpriteAtlasManager", "atlasRequested")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<System.String,System.Action`1<UnityEngine.U2D.SpriteAtlas>> atlasRequested
void UnityEngine::U2D::SpriteAtlasManager::_set_atlasRequested(System::Action_2<::Il2CppString*, System::Action_1<UnityEngine::U2D::SpriteAtlas*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::U2D::SpriteAtlasManager::_set_atlasRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.U2D", "SpriteAtlasManager", "atlasRequested", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD93E84
// [DebuggerBrowsableAttribute] Offset: 0xD93E84
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.U2D.SpriteAtlas> atlasRegistered
System::Action_1<UnityEngine::U2D::SpriteAtlas*>* UnityEngine::U2D::SpriteAtlasManager::_get_atlasRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::U2D::SpriteAtlasManager::_get_atlasRegistered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<UnityEngine::U2D::SpriteAtlas*>*>("UnityEngine.U2D", "SpriteAtlasManager", "atlasRegistered"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.U2D.SpriteAtlas> atlasRegistered
void UnityEngine::U2D::SpriteAtlasManager::_set_atlasRegistered(System::Action_1<UnityEngine::U2D::SpriteAtlas*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::U2D::SpriteAtlasManager::_set_atlasRegistered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.U2D", "SpriteAtlasManager", "atlasRegistered", value));
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlasManager.RequestAtlas
bool UnityEngine::U2D::SpriteAtlasManager::RequestAtlas(::Il2CppString* tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::U2D::SpriteAtlasManager::RequestAtlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteAtlasManager", "RequestAtlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlasManager.add_atlasRegistered
void UnityEngine::U2D::SpriteAtlasManager::add_atlasRegistered(System::Action_1<UnityEngine::U2D::SpriteAtlas*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::U2D::SpriteAtlasManager::add_atlasRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteAtlasManager", "add_atlasRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlasManager.remove_atlasRegistered
void UnityEngine::U2D::SpriteAtlasManager::remove_atlasRegistered(System::Action_1<UnityEngine::U2D::SpriteAtlas*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::U2D::SpriteAtlasManager::remove_atlasRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteAtlasManager", "remove_atlasRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlasManager.PostRegisteredAtlas
void UnityEngine::U2D::SpriteAtlasManager::PostRegisteredAtlas(UnityEngine::U2D::SpriteAtlas* spriteAtlas) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::U2D::SpriteAtlasManager::PostRegisteredAtlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteAtlasManager", "PostRegisteredAtlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAtlas)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAtlas);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlasManager.Register
void UnityEngine::U2D::SpriteAtlasManager::Register(UnityEngine::U2D::SpriteAtlas* spriteAtlas) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::U2D::SpriteAtlasManager::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteAtlasManager", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAtlas)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAtlas);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlasManager..cctor
void UnityEngine::U2D::SpriteAtlasManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::U2D::SpriteAtlasManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteAtlasManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: SpriteAtlasManager::RequestAtlas
// Il2CppName: RequestAtlas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*)>(&SpriteAtlasManager::RequestAtlas)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteAtlasManager*), "RequestAtlas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SpriteAtlasManager::add_atlasRegistered
// Il2CppName: add_atlasRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Action_1<UnityEngine::U2D::SpriteAtlas*>*)>(&SpriteAtlasManager::add_atlasRegistered)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteAtlasManager*), "add_atlasRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<UnityEngine::U2D::SpriteAtlas*>*>()});
  }
};
// Writing MetadataGetter for method: SpriteAtlasManager::remove_atlasRegistered
// Il2CppName: remove_atlasRegistered
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Action_1<UnityEngine::U2D::SpriteAtlas*>*)>(&SpriteAtlasManager::remove_atlasRegistered)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteAtlasManager*), "remove_atlasRegistered", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<UnityEngine::U2D::SpriteAtlas*>*>()});
  }
};
// Writing MetadataGetter for method: SpriteAtlasManager::PostRegisteredAtlas
// Il2CppName: PostRegisteredAtlas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::U2D::SpriteAtlas*)>(&SpriteAtlasManager::PostRegisteredAtlas)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteAtlasManager*), "PostRegisteredAtlas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::U2D::SpriteAtlas*>()});
  }
};
// Writing MetadataGetter for method: SpriteAtlasManager::Register
// Il2CppName: Register
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::U2D::SpriteAtlas*)>(&SpriteAtlasManager::Register)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteAtlasManager*), "Register", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::U2D::SpriteAtlas*>()});
  }
};
// Writing MetadataGetter for method: SpriteAtlasManager::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SpriteAtlasManager::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteAtlasManager*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.U2D.SpriteAtlas
#include "UnityEngine/U2D/SpriteAtlas.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.U2D.SpriteAtlas.CanBindTo
bool UnityEngine::U2D::SpriteAtlas::CanBindTo(UnityEngine::Sprite* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::U2D::SpriteAtlas::CanBindTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanBindTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sprite);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlas.GetSprite
UnityEngine::Sprite* UnityEngine::U2D::SpriteAtlas::GetSprite(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::U2D::SpriteAtlas::GetSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method, name);
}
// Writing MetadataGetter for method: SpriteAtlas::CanBindTo
// Il2CppName: CanBindTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SpriteAtlas::*)(UnityEngine::Sprite*)>(&SpriteAtlas::CanBindTo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteAtlas*), "CanBindTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
  }
};
// Writing MetadataGetter for method: SpriteAtlas::GetSprite
// Il2CppName: GetSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Sprite* (SpriteAtlas::*)(::Il2CppString*)>(&SpriteAtlas::GetSprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteAtlas*), "GetSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Profiling.Profiler
#include "UnityEngine/Profiling/Profiler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Profiling.Profiler.GetMonoUsedSizeLong
int64_t UnityEngine::Profiling::Profiler::GetMonoUsedSizeLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Profiling::Profiler::GetMonoUsedSizeLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling", "Profiler", "GetMonoUsedSizeLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Profiler::GetMonoUsedSizeLong
// Il2CppName: GetMonoUsedSizeLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (*)()>(&Profiler::GetMonoUsedSizeLong)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Profiler*), "GetMonoUsedSizeLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Profiling.Experimental.DebugScreenCapture
#include "UnityEngine/Profiling/Experimental/DebugScreenCapture.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Profiling.Experimental.DebugScreenCapture.set_rawImageDataReference
void UnityEngine::Profiling::Experimental::DebugScreenCapture::set_rawImageDataReference(Unity::Collections::NativeArray_1<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Profiling::Experimental::DebugScreenCapture::set_rawImageDataReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_rawImageDataReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Profiling.Experimental.DebugScreenCapture.set_imageFormat
void UnityEngine::Profiling::Experimental::DebugScreenCapture::set_imageFormat(UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Profiling::Experimental::DebugScreenCapture::set_imageFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_imageFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Profiling.Experimental.DebugScreenCapture.set_width
void UnityEngine::Profiling::Experimental::DebugScreenCapture::set_width(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Profiling::Experimental::DebugScreenCapture::set_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Profiling.Experimental.DebugScreenCapture.set_height
void UnityEngine::Profiling::Experimental::DebugScreenCapture::set_height(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Profiling::Experimental::DebugScreenCapture::set_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Writing MetadataGetter for method: DebugScreenCapture::set_rawImageDataReference
// Il2CppName: set_rawImageDataReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DebugScreenCapture::*)(Unity::Collections::NativeArray_1<uint8_t>)>(&DebugScreenCapture::set_rawImageDataReference)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DebugScreenCapture), "set_rawImageDataReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Unity::Collections::NativeArray_1<uint8_t>>()});
  }
};
// Writing MetadataGetter for method: DebugScreenCapture::set_imageFormat
// Il2CppName: set_imageFormat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DebugScreenCapture::*)(UnityEngine::TextureFormat)>(&DebugScreenCapture::set_imageFormat)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DebugScreenCapture), "set_imageFormat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>()});
  }
};
// Writing MetadataGetter for method: DebugScreenCapture::set_width
// Il2CppName: set_width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DebugScreenCapture::*)(int)>(&DebugScreenCapture::set_width)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DebugScreenCapture), "set_width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DebugScreenCapture::set_height
// Il2CppName: set_height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DebugScreenCapture::*)(int)>(&DebugScreenCapture::set_height)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DebugScreenCapture), "set_height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Profiling.Memory.Experimental.MetaData
#include "UnityEngine/Profiling/Memory/Experimental/MetaData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: MetaData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MetaData::*)()>(&MetaData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MetaData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MetaData::*)()>(&MetaData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MetaData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Profiling.Memory.Experimental.MemoryProfiler
#include "UnityEngine/Profiling/Memory/Experimental/MemoryProfiler.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Profiling.Memory.Experimental.MetaData
#include "UnityEngine/Profiling/Memory/Experimental/MetaData.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0xD93FB0
// [CompilerGeneratedAttribute] Offset: 0xD93FB0
// Autogenerated static field getter
// Get static field: static private System.Action`2<System.String,System.Boolean> m_SnapshotFinished
System::Action_2<::Il2CppString*, bool>* UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_get_m_SnapshotFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_get_m_SnapshotFinished");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_2<::Il2CppString*, bool>*>("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "m_SnapshotFinished")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<System.String,System.Boolean> m_SnapshotFinished
void UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_set_m_SnapshotFinished(System::Action_2<::Il2CppString*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_set_m_SnapshotFinished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "m_SnapshotFinished", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD93FEC
// [DebuggerBrowsableAttribute] Offset: 0xD93FEC
// Autogenerated static field getter
// Get static field: static private System.Action`3<System.String,System.Boolean,UnityEngine.Profiling.Experimental.DebugScreenCapture> m_SaveScreenshotToDisk
System::Action_3<::Il2CppString*, bool, UnityEngine::Profiling::Experimental::DebugScreenCapture>* UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_get_m_SaveScreenshotToDisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_get_m_SaveScreenshotToDisk");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_3<::Il2CppString*, bool, UnityEngine::Profiling::Experimental::DebugScreenCapture>*>("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "m_SaveScreenshotToDisk")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`3<System.String,System.Boolean,UnityEngine.Profiling.Experimental.DebugScreenCapture> m_SaveScreenshotToDisk
void UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_set_m_SaveScreenshotToDisk(System::Action_3<::Il2CppString*, bool, UnityEngine::Profiling::Experimental::DebugScreenCapture>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_set_m_SaveScreenshotToDisk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "m_SaveScreenshotToDisk", value));
}
// [CompilerGeneratedAttribute] Offset: 0xD94028
// [DebuggerBrowsableAttribute] Offset: 0xD94028
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.Profiling.Memory.Experimental.MetaData> createMetaData
System::Action_1<UnityEngine::Profiling::Memory::Experimental::MetaData*>* UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_get_createMetaData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_get_createMetaData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<UnityEngine::Profiling::Memory::Experimental::MetaData*>*>("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "createMetaData"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.Profiling.Memory.Experimental.MetaData> createMetaData
void UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_set_createMetaData(System::Action_1<UnityEngine::Profiling::Memory::Experimental::MetaData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_set_createMetaData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "createMetaData", value));
}
// Autogenerated method: UnityEngine.Profiling.Memory.Experimental.MemoryProfiler.PrepareMetadata
::Array<uint8_t>* UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::PrepareMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::PrepareMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "PrepareMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Profiling.Memory.Experimental.MemoryProfiler.WriteIntToByteArray
int UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::WriteIntToByteArray(::Array<uint8_t>* array, int offset, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::WriteIntToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "WriteIntToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, offset, value);
}
// Autogenerated method: UnityEngine.Profiling.Memory.Experimental.MemoryProfiler.WriteStringToByteArray
int UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::WriteStringToByteArray(::Array<uint8_t>* array, int offset, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::WriteStringToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "WriteStringToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, offset, value);
}
// Autogenerated method: UnityEngine.Profiling.Memory.Experimental.MemoryProfiler.FinalizeSnapshot
void UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::FinalizeSnapshot(::Il2CppString* path, bool result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::FinalizeSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "FinalizeSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, result);
}
// Autogenerated method: UnityEngine.Profiling.Memory.Experimental.MemoryProfiler.SaveScreenshotToDisk
void UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::SaveScreenshotToDisk(::Il2CppString* path, bool result, System::IntPtr pixelsPtr, int pixelsCount, UnityEngine::TextureFormat format, int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::SaveScreenshotToDisk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "SaveScreenshotToDisk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(pixelsPtr), ::il2cpp_utils::ExtractType(pixelsCount), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, result, pixelsPtr, pixelsCount, format, width, height);
}
// Writing MetadataGetter for method: MemoryProfiler::PrepareMetadata
// Il2CppName: PrepareMetadata
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)()>(&MemoryProfiler::PrepareMetadata)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemoryProfiler*), "PrepareMetadata", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MemoryProfiler::WriteIntToByteArray
// Il2CppName: WriteIntToByteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Array<uint8_t>*, int, int)>(&MemoryProfiler::WriteIntToByteArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemoryProfiler*), "WriteIntToByteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MemoryProfiler::WriteStringToByteArray
// Il2CppName: WriteStringToByteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Array<uint8_t>*, int, ::Il2CppString*)>(&MemoryProfiler::WriteStringToByteArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemoryProfiler*), "WriteStringToByteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: MemoryProfiler::FinalizeSnapshot
// Il2CppName: FinalizeSnapshot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, bool)>(&MemoryProfiler::FinalizeSnapshot)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemoryProfiler*), "FinalizeSnapshot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MemoryProfiler::SaveScreenshotToDisk
// Il2CppName: SaveScreenshotToDisk
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, bool, System::IntPtr, int, UnityEngine::TextureFormat, int, int)>(&MemoryProfiler::SaveScreenshotToDisk)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemoryProfiler*), "SaveScreenshotToDisk", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextureFormat>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Events.PersistentListenerMode
#include "UnityEngine/Events/PersistentListenerMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode EventDefined
UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_EventDefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentListenerMode::_get_EventDefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "EventDefined"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode EventDefined
void UnityEngine::Events::PersistentListenerMode::_set_EventDefined(UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentListenerMode::_set_EventDefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "EventDefined", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode Void
UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_Void() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentListenerMode::_get_Void");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "Void"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode Void
void UnityEngine::Events::PersistentListenerMode::_set_Void(UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentListenerMode::_set_Void");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "Void", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode Object
UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentListenerMode::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "Object"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode Object
void UnityEngine::Events::PersistentListenerMode::_set_Object(UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentListenerMode::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode Int
UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentListenerMode::_get_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "Int"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode Int
void UnityEngine::Events::PersistentListenerMode::_set_Int(UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentListenerMode::_set_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "Int", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode Float
UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentListenerMode::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "Float"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode Float
void UnityEngine::Events::PersistentListenerMode::_set_Float(UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentListenerMode::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode String
UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentListenerMode::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "String"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode String
void UnityEngine::Events::PersistentListenerMode::_set_String(UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentListenerMode::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "String", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode Bool
UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentListenerMode::_get_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "Bool"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode Bool
void UnityEngine::Events::PersistentListenerMode::_set_Bool(UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentListenerMode::_set_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "Bool", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Events.ArgumentCache
#include "UnityEngine/Events/ArgumentCache.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Events.ArgumentCache.get_unityObjectArgument
UnityEngine::Object* UnityEngine::Events::ArgumentCache::get_unityObjectArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::ArgumentCache::get_unityObjectArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_unityObjectArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.get_unityObjectArgumentAssemblyTypeName
::Il2CppString* UnityEngine::Events::ArgumentCache::get_unityObjectArgumentAssemblyTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::ArgumentCache::get_unityObjectArgumentAssemblyTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_unityObjectArgumentAssemblyTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.get_intArgument
int UnityEngine::Events::ArgumentCache::get_intArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::ArgumentCache::get_intArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.get_floatArgument
float UnityEngine::Events::ArgumentCache::get_floatArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::ArgumentCache::get_floatArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_floatArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.get_stringArgument
::Il2CppString* UnityEngine::Events::ArgumentCache::get_stringArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::ArgumentCache::get_stringArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stringArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.get_boolArgument
bool UnityEngine::Events::ArgumentCache::get_boolArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::ArgumentCache::get_boolArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_boolArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.TidyAssemblyTypeName
void UnityEngine::Events::ArgumentCache::TidyAssemblyTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::ArgumentCache::TidyAssemblyTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TidyAssemblyTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.OnBeforeSerialize
void UnityEngine::Events::ArgumentCache::OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::ArgumentCache::OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.OnAfterDeserialize
void UnityEngine::Events::ArgumentCache::OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::ArgumentCache::OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ArgumentCache::get_unityObjectArgument
// Il2CppName: get_unityObjectArgument
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Object* (ArgumentCache::*)()>(&ArgumentCache::get_unityObjectArgument)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ArgumentCache*), "get_unityObjectArgument", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ArgumentCache::get_unityObjectArgumentAssemblyTypeName
// Il2CppName: get_unityObjectArgumentAssemblyTypeName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (ArgumentCache::*)()>(&ArgumentCache::get_unityObjectArgumentAssemblyTypeName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ArgumentCache*), "get_unityObjectArgumentAssemblyTypeName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ArgumentCache::get_intArgument
// Il2CppName: get_intArgument
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ArgumentCache::*)()>(&ArgumentCache::get_intArgument)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ArgumentCache*), "get_intArgument", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ArgumentCache::get_floatArgument
// Il2CppName: get_floatArgument
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ArgumentCache::*)()>(&ArgumentCache::get_floatArgument)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ArgumentCache*), "get_floatArgument", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ArgumentCache::get_stringArgument
// Il2CppName: get_stringArgument
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (ArgumentCache::*)()>(&ArgumentCache::get_stringArgument)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ArgumentCache*), "get_stringArgument", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ArgumentCache::get_boolArgument
// Il2CppName: get_boolArgument
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ArgumentCache::*)()>(&ArgumentCache::get_boolArgument)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ArgumentCache*), "get_boolArgument", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ArgumentCache::TidyAssemblyTypeName
// Il2CppName: TidyAssemblyTypeName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ArgumentCache::*)()>(&ArgumentCache::TidyAssemblyTypeName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ArgumentCache*), "TidyAssemblyTypeName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ArgumentCache::OnBeforeSerialize
// Il2CppName: OnBeforeSerialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ArgumentCache::*)()>(&ArgumentCache::OnBeforeSerialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ArgumentCache*), "OnBeforeSerialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ArgumentCache::OnAfterDeserialize
// Il2CppName: OnAfterDeserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ArgumentCache::*)()>(&ArgumentCache::OnAfterDeserialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ArgumentCache*), "OnAfterDeserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ArgumentCache::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ArgumentCache::*)()>(&ArgumentCache::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ArgumentCache*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ArgumentCache::*)()>(&ArgumentCache::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ArgumentCache*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Events.BaseInvokableCall
#include "UnityEngine/Events/BaseInvokableCall.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Events.BaseInvokableCall.Invoke
void UnityEngine::Events::BaseInvokableCall::Invoke(::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::BaseInvokableCall::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.Events.BaseInvokableCall.AllowInvoke
bool UnityEngine::Events::BaseInvokableCall::AllowInvoke(System::Delegate* delegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::BaseInvokableCall::AllowInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Events", "BaseInvokableCall", "AllowInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegate)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, delegate);
}
// Autogenerated method: UnityEngine.Events.BaseInvokableCall.Find
bool UnityEngine::Events::BaseInvokableCall::Find(::Il2CppObject* targetObj, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::BaseInvokableCall::Find");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetObj), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, targetObj, method);
}
// Writing MetadataGetter for method: BaseInvokableCall::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInvokableCall::*)(::Il2CppObject*, System::Reflection::MethodInfo*)>(&BaseInvokableCall::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInvokableCall*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInvokableCall::*)(::Il2CppObject*, System::Reflection::MethodInfo*)>(&BaseInvokableCall::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInvokableCall*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>()});
  }
};
// Writing MetadataGetter for method: BaseInvokableCall::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInvokableCall::*)(::Array<::Il2CppObject*>*)>(&BaseInvokableCall::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInvokableCall*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: BaseInvokableCall::ThrowOnInvalidArg
// Il2CppName: ThrowOnInvalidArg
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: BaseInvokableCall::AllowInvoke
// Il2CppName: AllowInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Delegate*)>(&BaseInvokableCall::AllowInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInvokableCall*), "AllowInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Delegate*>()});
  }
};
// Writing MetadataGetter for method: BaseInvokableCall::Find
// Il2CppName: Find
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BaseInvokableCall::*)(::Il2CppObject*, System::Reflection::MethodInfo*)>(&BaseInvokableCall::Find)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInvokableCall*), "Find", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>()});
  }
};
// Writing MetadataGetter for method: BaseInvokableCall::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInvokableCall::*)()>(&BaseInvokableCall::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInvokableCall*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInvokableCall::*)()>(&BaseInvokableCall::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInvokableCall*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Events.InvokableCall
#include "UnityEngine/Events/InvokableCall.hpp"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Events.InvokableCall.add_Delegate
void UnityEngine::Events::InvokableCall::add_Delegate(UnityEngine::Events::UnityAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::InvokableCall::add_Delegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Delegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Events.InvokableCall.remove_Delegate
void UnityEngine::Events::InvokableCall::remove_Delegate(UnityEngine::Events::UnityAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::InvokableCall::remove_Delegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Delegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Events.InvokableCall.Invoke
void UnityEngine::Events::InvokableCall::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::InvokableCall::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.InvokableCall.Invoke
void UnityEngine::Events::InvokableCall::Invoke(::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::InvokableCall::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.Events.InvokableCall.Find
bool UnityEngine::Events::InvokableCall::Find(::Il2CppObject* targetObj, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::InvokableCall::Find");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetObj), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, targetObj, method);
}
// Writing MetadataGetter for method: InvokableCall::add_Delegate
// Il2CppName: add_Delegate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvokableCall::*)(UnityEngine::Events::UnityAction*)>(&InvokableCall::add_Delegate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvokableCall*), "add_Delegate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction*>()});
  }
};
// Writing MetadataGetter for method: InvokableCall::remove_Delegate
// Il2CppName: remove_Delegate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvokableCall::*)(UnityEngine::Events::UnityAction*)>(&InvokableCall::remove_Delegate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvokableCall*), "remove_Delegate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction*>()});
  }
};
// Writing MetadataGetter for method: InvokableCall::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvokableCall::*)(UnityEngine::Events::UnityAction*)>(&InvokableCall::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvokableCall*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvokableCall::*)(UnityEngine::Events::UnityAction*)>(&InvokableCall::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvokableCall*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction*>()});
  }
};
// Writing MetadataGetter for method: InvokableCall::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvokableCall::*)()>(&InvokableCall::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvokableCall*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InvokableCall::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvokableCall::*)(::Il2CppObject*, System::Reflection::MethodInfo*)>(&InvokableCall::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvokableCall*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvokableCall::*)(::Il2CppObject*, System::Reflection::MethodInfo*)>(&InvokableCall::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvokableCall*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>()});
  }
};
// Writing MetadataGetter for method: InvokableCall::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvokableCall::*)(::Array<::Il2CppObject*>*)>(&InvokableCall::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvokableCall*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: InvokableCall::Find
// Il2CppName: Find
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (InvokableCall::*)(::Il2CppObject*, System::Reflection::MethodInfo*)>(&InvokableCall::Find)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvokableCall*), "Find", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Events.UnityEventCallState
#include "UnityEngine/Events/UnityEventCallState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.UnityEventCallState Off
UnityEngine::Events::UnityEventCallState UnityEngine::Events::UnityEventCallState::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEventCallState::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Events::UnityEventCallState>("UnityEngine.Events", "UnityEventCallState", "Off"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.UnityEventCallState Off
void UnityEngine::Events::UnityEventCallState::_set_Off(UnityEngine::Events::UnityEventCallState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEventCallState::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "UnityEventCallState", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.UnityEventCallState EditorAndRuntime
UnityEngine::Events::UnityEventCallState UnityEngine::Events::UnityEventCallState::_get_EditorAndRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEventCallState::_get_EditorAndRuntime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Events::UnityEventCallState>("UnityEngine.Events", "UnityEventCallState", "EditorAndRuntime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.UnityEventCallState EditorAndRuntime
void UnityEngine::Events::UnityEventCallState::_set_EditorAndRuntime(UnityEngine::Events::UnityEventCallState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEventCallState::_set_EditorAndRuntime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "UnityEventCallState", "EditorAndRuntime", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.UnityEventCallState RuntimeOnly
UnityEngine::Events::UnityEventCallState UnityEngine::Events::UnityEventCallState::_get_RuntimeOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEventCallState::_get_RuntimeOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Events::UnityEventCallState>("UnityEngine.Events", "UnityEventCallState", "RuntimeOnly"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.UnityEventCallState RuntimeOnly
void UnityEngine::Events::UnityEventCallState::_set_RuntimeOnly(UnityEngine::Events::UnityEventCallState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEventCallState::_set_RuntimeOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "UnityEventCallState", "RuntimeOnly", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Events.PersistentCall
#include "UnityEngine/Events/PersistentCall.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Events.ArgumentCache
#include "UnityEngine/Events/ArgumentCache.hpp"
// Including type: UnityEngine.Events.BaseInvokableCall
#include "UnityEngine/Events/BaseInvokableCall.hpp"
// Including type: UnityEngine.Events.UnityEventBase
#include "UnityEngine/Events/UnityEventBase.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Events.PersistentCall.get_target
UnityEngine::Object* UnityEngine::Events::PersistentCall::get_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentCall::get_target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.get_methodName
::Il2CppString* UnityEngine::Events::PersistentCall::get_methodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentCall::get_methodName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_methodName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.get_mode
UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentCall::get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentCall::get_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Events::PersistentListenerMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.get_arguments
UnityEngine::Events::ArgumentCache* UnityEngine::Events::PersistentCall::get_arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentCall::get_arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Events::ArgumentCache*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.IsValid
bool UnityEngine::Events::PersistentCall::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentCall::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.GetRuntimeCall
UnityEngine::Events::BaseInvokableCall* UnityEngine::Events::PersistentCall::GetRuntimeCall(UnityEngine::Events::UnityEventBase* theEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentCall::GetRuntimeCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRuntimeCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(theEvent)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Events::BaseInvokableCall*, false>(this, ___internal__method, theEvent);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.GetObjectCall
UnityEngine::Events::BaseInvokableCall* UnityEngine::Events::PersistentCall::GetObjectCall(UnityEngine::Object* target, System::Reflection::MethodInfo* method, UnityEngine::Events::ArgumentCache* arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentCall::GetObjectCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Events", "PersistentCall", "GetObjectCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Events::BaseInvokableCall*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, target, method, arguments);
}
// Writing MetadataGetter for method: PersistentCall::get_target
// Il2CppName: get_target
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Object* (PersistentCall::*)()>(&PersistentCall::get_target)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PersistentCall*), "get_target", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PersistentCall::get_methodName
// Il2CppName: get_methodName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PersistentCall::*)()>(&PersistentCall::get_methodName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PersistentCall*), "get_methodName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PersistentCall::get_mode
// Il2CppName: get_mode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Events::PersistentListenerMode (PersistentCall::*)()>(&PersistentCall::get_mode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PersistentCall*), "get_mode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PersistentCall::get_arguments
// Il2CppName: get_arguments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Events::ArgumentCache* (PersistentCall::*)()>(&PersistentCall::get_arguments)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PersistentCall*), "get_arguments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PersistentCall::IsValid
// Il2CppName: IsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PersistentCall::*)()>(&PersistentCall::IsValid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PersistentCall*), "IsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PersistentCall::GetRuntimeCall
// Il2CppName: GetRuntimeCall
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Events::BaseInvokableCall* (PersistentCall::*)(UnityEngine::Events::UnityEventBase*)>(&PersistentCall::GetRuntimeCall)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PersistentCall*), "GetRuntimeCall", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityEventBase*>()});
  }
};
// Writing MetadataGetter for method: PersistentCall::GetObjectCall
// Il2CppName: GetObjectCall
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Events::BaseInvokableCall* (*)(UnityEngine::Object*, System::Reflection::MethodInfo*, UnityEngine::Events::ArgumentCache*)>(&PersistentCall::GetObjectCall)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PersistentCall*), "GetObjectCall", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::ArgumentCache*>()});
  }
};
// Writing MetadataGetter for method: PersistentCall::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PersistentCall::*)()>(&PersistentCall::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PersistentCall*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PersistentCall::*)()>(&PersistentCall::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PersistentCall*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Events.PersistentCallGroup
#include "UnityEngine/Events/PersistentCallGroup.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Events.PersistentCall
#include "UnityEngine/Events/PersistentCall.hpp"
// Including type: UnityEngine.Events.InvokableCallList
#include "UnityEngine/Events/InvokableCallList.hpp"
// Including type: UnityEngine.Events.UnityEventBase
#include "UnityEngine/Events/UnityEventBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Events.PersistentCallGroup.Initialize
void UnityEngine::Events::PersistentCallGroup::Initialize(UnityEngine::Events::InvokableCallList* invokableList, UnityEngine::Events::UnityEventBase* unityEventBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::PersistentCallGroup::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invokableList), ::il2cpp_utils::ExtractType(unityEventBase)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, invokableList, unityEventBase);
}
// Writing MetadataGetter for method: PersistentCallGroup::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PersistentCallGroup::*)(UnityEngine::Events::InvokableCallList*, UnityEngine::Events::UnityEventBase*)>(&PersistentCallGroup::Initialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PersistentCallGroup*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::InvokableCallList*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityEventBase*>()});
  }
};
// Writing MetadataGetter for method: PersistentCallGroup::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PersistentCallGroup::*)()>(&PersistentCallGroup::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PersistentCallGroup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PersistentCallGroup::*)()>(&PersistentCallGroup::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PersistentCallGroup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Events.InvokableCallList
#include "UnityEngine/Events/InvokableCallList.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Events.BaseInvokableCall
#include "UnityEngine/Events/BaseInvokableCall.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Events.InvokableCallList.AddPersistentInvokableCall
void UnityEngine::Events::InvokableCallList::AddPersistentInvokableCall(UnityEngine::Events::BaseInvokableCall* call) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::InvokableCallList::AddPersistentInvokableCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPersistentInvokableCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(call)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, call);
}
// Autogenerated method: UnityEngine.Events.InvokableCallList.AddListener
void UnityEngine::Events::InvokableCallList::AddListener(UnityEngine::Events::BaseInvokableCall* call) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::InvokableCallList::AddListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(call)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, call);
}
// Autogenerated method: UnityEngine.Events.InvokableCallList.RemoveListener
void UnityEngine::Events::InvokableCallList::RemoveListener(::Il2CppObject* targetObj, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::InvokableCallList::RemoveListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetObj), ::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, targetObj, method);
}
// Autogenerated method: UnityEngine.Events.InvokableCallList.ClearPersistent
void UnityEngine::Events::InvokableCallList::ClearPersistent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::InvokableCallList::ClearPersistent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPersistent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.InvokableCallList.PrepareInvoke
System::Collections::Generic::List_1<UnityEngine::Events::BaseInvokableCall*>* UnityEngine::Events::InvokableCallList::PrepareInvoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::InvokableCallList::PrepareInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::Events::BaseInvokableCall*>*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: InvokableCallList::AddPersistentInvokableCall
// Il2CppName: AddPersistentInvokableCall
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvokableCallList::*)(UnityEngine::Events::BaseInvokableCall*)>(&InvokableCallList::AddPersistentInvokableCall)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvokableCallList*), "AddPersistentInvokableCall", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::BaseInvokableCall*>()});
  }
};
// Writing MetadataGetter for method: InvokableCallList::AddListener
// Il2CppName: AddListener
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvokableCallList::*)(UnityEngine::Events::BaseInvokableCall*)>(&InvokableCallList::AddListener)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvokableCallList*), "AddListener", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::BaseInvokableCall*>()});
  }
};
// Writing MetadataGetter for method: InvokableCallList::RemoveListener
// Il2CppName: RemoveListener
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvokableCallList::*)(::Il2CppObject*, System::Reflection::MethodInfo*)>(&InvokableCallList::RemoveListener)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvokableCallList*), "RemoveListener", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>()});
  }
};
// Writing MetadataGetter for method: InvokableCallList::ClearPersistent
// Il2CppName: ClearPersistent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvokableCallList::*)()>(&InvokableCallList::ClearPersistent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvokableCallList*), "ClearPersistent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InvokableCallList::PrepareInvoke
// Il2CppName: PrepareInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::Events::BaseInvokableCall*>* (InvokableCallList::*)()>(&InvokableCallList::PrepareInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvokableCallList*), "PrepareInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: InvokableCallList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvokableCallList::*)()>(&InvokableCallList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvokableCallList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvokableCallList::*)()>(&InvokableCallList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvokableCallList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Events.UnityEventBase
#include "UnityEngine/Events/UnityEventBase.hpp"
// Including type: UnityEngine.Events.InvokableCallList
#include "UnityEngine/Events/InvokableCallList.hpp"
// Including type: UnityEngine.Events.PersistentCallGroup
#include "UnityEngine/Events/PersistentCallGroup.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: UnityEngine.Events.BaseInvokableCall
#include "UnityEngine/Events/BaseInvokableCall.hpp"
// Including type: UnityEngine.Events.PersistentCall
#include "UnityEngine/Events/PersistentCall.hpp"
// Including type: UnityEngine.Events.PersistentListenerMode
#include "UnityEngine/Events/PersistentListenerMode.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Events::UnityEventBase::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEventBase::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Events::UnityEventBase::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEventBase::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.FindMethod_Impl
System::Reflection::MethodInfo* UnityEngine::Events::UnityEventBase::FindMethod_Impl(::Il2CppString* name, ::Il2CppObject* targetObj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEventBase::FindMethod_Impl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindMethod_Impl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(targetObj)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method, name, targetObj);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.GetDelegate
UnityEngine::Events::BaseInvokableCall* UnityEngine::Events::UnityEventBase::GetDelegate(::Il2CppObject* target, System::Reflection::MethodInfo* theFunction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEventBase::GetDelegate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(theFunction)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Events::BaseInvokableCall*, false>(this, ___internal__method, target, theFunction);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.FindMethod
System::Reflection::MethodInfo* UnityEngine::Events::UnityEventBase::FindMethod(UnityEngine::Events::PersistentCall* call) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEventBase::FindMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(call)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method, call);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.FindMethod
System::Reflection::MethodInfo* UnityEngine::Events::UnityEventBase::FindMethod(::Il2CppString* name, ::Il2CppObject* listener, UnityEngine::Events::PersistentListenerMode mode, System::Type* argumentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEventBase::FindMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(argumentType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method, name, listener, mode, argumentType);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.DirtyPersistentCalls
void UnityEngine::Events::UnityEventBase::DirtyPersistentCalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEventBase::DirtyPersistentCalls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DirtyPersistentCalls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.RebuildPersistentCallsIfNeeded
void UnityEngine::Events::UnityEventBase::RebuildPersistentCallsIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEventBase::RebuildPersistentCallsIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildPersistentCallsIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.AddCall
void UnityEngine::Events::UnityEventBase::AddCall(UnityEngine::Events::BaseInvokableCall* call) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEventBase::AddCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(call)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, call);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.RemoveListener
void UnityEngine::Events::UnityEventBase::RemoveListener(::Il2CppObject* targetObj, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEventBase::RemoveListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetObj), ::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, targetObj, method);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.PrepareInvoke
System::Collections::Generic::List_1<UnityEngine::Events::BaseInvokableCall*>* UnityEngine::Events::UnityEventBase::PrepareInvoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEventBase::PrepareInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::Events::BaseInvokableCall*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.GetValidMethodInfo
System::Reflection::MethodInfo* UnityEngine::Events::UnityEventBase::GetValidMethodInfo(::Il2CppObject* obj, ::Il2CppString* functionName, ::Array<System::Type*>* argumentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEventBase::GetValidMethodInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Events", "UnityEventBase", "GetValidMethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(functionName), ::il2cpp_utils::ExtractType(argumentTypes)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, functionName, argumentTypes);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.ToString
::Il2CppString* UnityEngine::Events::UnityEventBase::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEventBase::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UnityEventBase::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize
// Il2CppName: UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEventBase::*)()>(&UnityEventBase::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEventBase*), "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEventBase::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize
// Il2CppName: UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEventBase::*)()>(&UnityEventBase::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEventBase*), "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEventBase::FindMethod_Impl
// Il2CppName: FindMethod_Impl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodInfo* (UnityEventBase::*)(::Il2CppString*, ::Il2CppObject*)>(&UnityEventBase::FindMethod_Impl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEventBase*), "FindMethod_Impl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: UnityEventBase::GetDelegate
// Il2CppName: GetDelegate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Events::BaseInvokableCall* (UnityEventBase::*)(::Il2CppObject*, System::Reflection::MethodInfo*)>(&UnityEventBase::GetDelegate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEventBase*), "GetDelegate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>()});
  }
};
// Writing MetadataGetter for method: UnityEventBase::FindMethod
// Il2CppName: FindMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodInfo* (UnityEventBase::*)(UnityEngine::Events::PersistentCall*)>(&UnityEventBase::FindMethod)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEventBase*), "FindMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::PersistentCall*>()});
  }
};
// Writing MetadataGetter for method: UnityEventBase::FindMethod
// Il2CppName: FindMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodInfo* (UnityEventBase::*)(::Il2CppString*, ::Il2CppObject*, UnityEngine::Events::PersistentListenerMode, System::Type*)>(&UnityEventBase::FindMethod)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEventBase*), "FindMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::PersistentListenerMode>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: UnityEventBase::DirtyPersistentCalls
// Il2CppName: DirtyPersistentCalls
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEventBase::*)()>(&UnityEventBase::DirtyPersistentCalls)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEventBase*), "DirtyPersistentCalls", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEventBase::RebuildPersistentCallsIfNeeded
// Il2CppName: RebuildPersistentCallsIfNeeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEventBase::*)()>(&UnityEventBase::RebuildPersistentCallsIfNeeded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEventBase*), "RebuildPersistentCallsIfNeeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEventBase::AddCall
// Il2CppName: AddCall
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEventBase::*)(UnityEngine::Events::BaseInvokableCall*)>(&UnityEventBase::AddCall)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEventBase*), "AddCall", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::BaseInvokableCall*>()});
  }
};
// Writing MetadataGetter for method: UnityEventBase::RemoveListener
// Il2CppName: RemoveListener
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEventBase::*)(::Il2CppObject*, System::Reflection::MethodInfo*)>(&UnityEventBase::RemoveListener)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEventBase*), "RemoveListener", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>()});
  }
};
// Writing MetadataGetter for method: UnityEventBase::PrepareInvoke
// Il2CppName: PrepareInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::Events::BaseInvokableCall*>* (UnityEventBase::*)()>(&UnityEventBase::PrepareInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEventBase*), "PrepareInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEventBase::GetValidMethodInfo
// Il2CppName: GetValidMethodInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodInfo* (*)(::Il2CppObject*, ::Il2CppString*, ::Array<System::Type*>*)>(&UnityEventBase::GetValidMethodInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEventBase*), "GetValidMethodInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Type*>*>()});
  }
};
// Writing MetadataGetter for method: UnityEventBase::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEventBase::*)()>(&UnityEventBase::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEventBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEventBase::*)()>(&UnityEventBase::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEventBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEventBase::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UnityEventBase::*)()>(&UnityEventBase::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEventBase*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Events.UnityAction.Invoke
void UnityEngine::Events::UnityAction::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityAction::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityAction.BeginInvoke
System::IAsyncResult* UnityEngine::Events::UnityAction::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityAction::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.Events.UnityAction.EndInvoke
void UnityEngine::Events::UnityAction::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityAction::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: UnityAction::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityAction::*)(::Il2CppObject*, System::IntPtr)>(&UnityAction::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityAction*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityAction::*)(::Il2CppObject*, System::IntPtr)>(&UnityAction::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityAction*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: UnityAction::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityAction::*)()>(&UnityAction::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityAction*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityAction::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (UnityAction::*)(System::AsyncCallback*, ::Il2CppObject*)>(&UnityAction::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityAction*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: UnityAction::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityAction::*)(System::IAsyncResult*)>(&UnityAction::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityAction*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
// Including type: UnityEngine.Events.BaseInvokableCall
#include "UnityEngine/Events/BaseInvokableCall.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Events.UnityEvent.AddListener
void UnityEngine::Events::UnityEvent::AddListener(UnityEngine::Events::UnityAction* call) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEvent::AddListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(call)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, call);
}
// Autogenerated method: UnityEngine.Events.UnityEvent.RemoveListener
void UnityEngine::Events::UnityEvent::RemoveListener(UnityEngine::Events::UnityAction* call) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEvent::RemoveListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(call)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, call);
}
// Autogenerated method: UnityEngine.Events.UnityEvent.GetDelegate
UnityEngine::Events::BaseInvokableCall* UnityEngine::Events::UnityEvent::GetDelegate(UnityEngine::Events::UnityAction* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEvent::GetDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Events", "UnityEvent", "GetDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Events::BaseInvokableCall*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, action);
}
// Autogenerated method: UnityEngine.Events.UnityEvent.Invoke
void UnityEngine::Events::UnityEvent::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEvent::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityEvent.FindMethod_Impl
System::Reflection::MethodInfo* UnityEngine::Events::UnityEvent::FindMethod_Impl(::Il2CppString* name, ::Il2CppObject* targetObj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEvent::FindMethod_Impl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindMethod_Impl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(targetObj)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method, name, targetObj);
}
// Autogenerated method: UnityEngine.Events.UnityEvent.GetDelegate
UnityEngine::Events::BaseInvokableCall* UnityEngine::Events::UnityEvent::GetDelegate(::Il2CppObject* target, System::Reflection::MethodInfo* theFunction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Events::UnityEvent::GetDelegate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(theFunction)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Events::BaseInvokableCall*, false>(this, ___internal__method, target, theFunction);
}
// Writing MetadataGetter for method: UnityEvent::AddListener
// Il2CppName: AddListener
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEvent::*)(UnityEngine::Events::UnityAction*)>(&UnityEvent::AddListener)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEvent*), "AddListener", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction*>()});
  }
};
// Writing MetadataGetter for method: UnityEvent::RemoveListener
// Il2CppName: RemoveListener
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEvent::*)(UnityEngine::Events::UnityAction*)>(&UnityEvent::RemoveListener)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEvent*), "RemoveListener", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction*>()});
  }
};
// Writing MetadataGetter for method: UnityEvent::GetDelegate
// Il2CppName: GetDelegate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Events::BaseInvokableCall* (*)(UnityEngine::Events::UnityAction*)>(&UnityEvent::GetDelegate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEvent*), "GetDelegate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction*>()});
  }
};
// Writing MetadataGetter for method: UnityEvent::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEvent::*)()>(&UnityEvent::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEvent*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEvent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEvent::*)()>(&UnityEvent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityEvent::*)()>(&UnityEvent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityEvent::FindMethod_Impl
// Il2CppName: FindMethod_Impl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::MethodInfo* (UnityEvent::*)(::Il2CppString*, ::Il2CppObject*)>(&UnityEvent::FindMethod_Impl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEvent*), "FindMethod_Impl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: UnityEvent::GetDelegate
// Il2CppName: GetDelegate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Events::BaseInvokableCall* (UnityEvent::*)(::Il2CppObject*, System::Reflection::MethodInfo*)>(&UnityEvent::GetDelegate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityEvent*), "GetDelegate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Serialization.FormerlySerializedAsAttribute
#include "UnityEngine/Serialization/FormerlySerializedAsAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: FormerlySerializedAsAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FormerlySerializedAsAttribute::*)(::Il2CppString*)>(&FormerlySerializedAsAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormerlySerializedAsAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FormerlySerializedAsAttribute::*)(::Il2CppString*)>(&FormerlySerializedAsAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormerlySerializedAsAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Scripting.GarbageCollector
#include "UnityEngine/Scripting/GarbageCollector.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0xD94554
// [CompilerGeneratedAttribute] Offset: 0xD94554
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.Scripting.GarbageCollector/Mode> GCModeChanged
System::Action_1<UnityEngine::Scripting::GarbageCollector::Mode>* UnityEngine::Scripting::GarbageCollector::_get_GCModeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Scripting::GarbageCollector::_get_GCModeChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<UnityEngine::Scripting::GarbageCollector::Mode>*>("UnityEngine.Scripting", "GarbageCollector", "GCModeChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.Scripting.GarbageCollector/Mode> GCModeChanged
void UnityEngine::Scripting::GarbageCollector::_set_GCModeChanged(System::Action_1<UnityEngine::Scripting::GarbageCollector::Mode>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Scripting::GarbageCollector::_set_GCModeChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Scripting", "GarbageCollector", "GCModeChanged", value));
}
// Autogenerated method: UnityEngine.Scripting.GarbageCollector.set_GCMode
void UnityEngine::Scripting::GarbageCollector::set_GCMode(UnityEngine::Scripting::GarbageCollector::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Scripting::GarbageCollector::set_GCMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Scripting", "GarbageCollector", "set_GCMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Scripting.GarbageCollector.SetMode
void UnityEngine::Scripting::GarbageCollector::SetMode(UnityEngine::Scripting::GarbageCollector::Mode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Scripting::GarbageCollector::SetMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Scripting", "GarbageCollector", "SetMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mode);
}
// Autogenerated method: UnityEngine.Scripting.GarbageCollector.GetMode
UnityEngine::Scripting::GarbageCollector::Mode UnityEngine::Scripting::GarbageCollector::GetMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Scripting::GarbageCollector::GetMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Scripting", "GarbageCollector", "GetMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Scripting::GarbageCollector::Mode, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: GarbageCollector::set_GCMode
// Il2CppName: set_GCMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Scripting::GarbageCollector::Mode)>(&GarbageCollector::set_GCMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GarbageCollector*), "set_GCMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Scripting::GarbageCollector::Mode>()});
  }
};
// Writing MetadataGetter for method: GarbageCollector::SetMode
// Il2CppName: SetMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Scripting::GarbageCollector::Mode)>(&GarbageCollector::SetMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GarbageCollector*), "SetMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Scripting::GarbageCollector::Mode>()});
  }
};
// Writing MetadataGetter for method: GarbageCollector::GetMode
// Il2CppName: GetMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Scripting::GarbageCollector::Mode (*)()>(&GarbageCollector::GetMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GarbageCollector*), "GetMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Scripting.GarbageCollector/Mode
#include "UnityEngine/Scripting/GarbageCollector.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Scripting.GarbageCollector/Mode Disabled
UnityEngine::Scripting::GarbageCollector::Mode UnityEngine::Scripting::GarbageCollector::Mode::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Scripting::GarbageCollector::Mode::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Scripting::GarbageCollector::Mode>("UnityEngine.Scripting", "GarbageCollector/Mode", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Scripting.GarbageCollector/Mode Disabled
void UnityEngine::Scripting::GarbageCollector::Mode::_set_Disabled(UnityEngine::Scripting::GarbageCollector::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Scripting::GarbageCollector::Mode::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Scripting", "GarbageCollector/Mode", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Scripting.GarbageCollector/Mode Enabled
UnityEngine::Scripting::GarbageCollector::Mode UnityEngine::Scripting::GarbageCollector::Mode::_get_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Scripting::GarbageCollector::Mode::_get_Enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Scripting::GarbageCollector::Mode>("UnityEngine.Scripting", "GarbageCollector/Mode", "Enabled"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Scripting.GarbageCollector/Mode Enabled
void UnityEngine::Scripting::GarbageCollector::Mode::_set_Enabled(UnityEngine::Scripting::GarbageCollector::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Scripting::GarbageCollector::Mode::_set_Enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Scripting", "GarbageCollector/Mode", "Enabled", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Scripting.PreserveAttribute
#include "UnityEngine/Scripting/PreserveAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PreserveAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PreserveAttribute::*)()>(&PreserveAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PreserveAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PreserveAttribute::*)()>(&PreserveAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PreserveAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Scripting.APIUpdating.MovedFromAttributeData
#include "UnityEngine/Scripting/APIUpdating/MovedFromAttributeData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Scripting.APIUpdating.MovedFromAttributeData.Set
void UnityEngine::Scripting::APIUpdating::MovedFromAttributeData::Set(bool autoUpdateAPI, ::Il2CppString* sourceNamespace, ::Il2CppString* sourceAssembly, ::Il2CppString* sourceClassName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Scripting::APIUpdating::MovedFromAttributeData::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(autoUpdateAPI), ::il2cpp_utils::ExtractType(sourceNamespace), ::il2cpp_utils::ExtractType(sourceAssembly), ::il2cpp_utils::ExtractType(sourceClassName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, autoUpdateAPI, sourceNamespace, sourceAssembly, sourceClassName);
}
// Writing MetadataGetter for method: MovedFromAttributeData::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MovedFromAttributeData::*)(bool, ::Il2CppString*, ::Il2CppString*, ::Il2CppString*)>(&MovedFromAttributeData::Set)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MovedFromAttributeData), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Scripting.APIUpdating.MovedFromAttribute
#include "UnityEngine/Scripting/APIUpdating/MovedFromAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: MovedFromAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MovedFromAttribute::*)(bool, ::Il2CppString*, ::Il2CppString*, ::Il2CppString*)>(&MovedFromAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MovedFromAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MovedFromAttribute::*)(bool, ::Il2CppString*, ::Il2CppString*, ::Il2CppString*)>(&MovedFromAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MovedFromAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: MovedFromAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MovedFromAttribute::*)(::Il2CppString*)>(&MovedFromAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MovedFromAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MovedFromAttribute::*)(::Il2CppString*)>(&MovedFromAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MovedFromAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SceneManagement.Scene.IsValidInternal
bool UnityEngine::SceneManagement::Scene::IsValidInternal(int sceneHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::Scene::IsValidInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "Scene", "IsValidInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneHandle)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneHandle);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.GetNameInternal
::Il2CppString* UnityEngine::SceneManagement::Scene::GetNameInternal(int sceneHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::Scene::GetNameInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "Scene", "GetNameInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneHandle)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneHandle);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.GetIsLoadedInternal
bool UnityEngine::SceneManagement::Scene::GetIsLoadedInternal(int sceneHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::Scene::GetIsLoadedInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "Scene", "GetIsLoadedInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneHandle)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneHandle);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.GetRootCountInternal
int UnityEngine::SceneManagement::Scene::GetRootCountInternal(int sceneHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::Scene::GetRootCountInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "Scene", "GetRootCountInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneHandle)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneHandle);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.GetRootGameObjectsInternal
void UnityEngine::SceneManagement::Scene::GetRootGameObjectsInternal(int sceneHandle, ::Il2CppObject* resultRootList) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::Scene::GetRootGameObjectsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "Scene", "GetRootGameObjectsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneHandle), ::il2cpp_utils::ExtractType(resultRootList)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneHandle, resultRootList);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.get_handle
int UnityEngine::SceneManagement::Scene::get_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::Scene::get_handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.IsValid
bool UnityEngine::SceneManagement::Scene::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::Scene::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.get_name
::Il2CppString* UnityEngine::SceneManagement::Scene::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::Scene::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.get_isLoaded
bool UnityEngine::SceneManagement::Scene::get_isLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::Scene::get_isLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_isLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.get_rootCount
int UnityEngine::SceneManagement::Scene::get_rootCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::Scene::get_rootCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_rootCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.GetRootGameObjects
::Array<UnityEngine::GameObject*>* UnityEngine::SceneManagement::Scene::GetRootGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::Scene::GetRootGameObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRootGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::GameObject*>*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.GetRootGameObjects
void UnityEngine::SceneManagement::Scene::GetRootGameObjects(System::Collections::Generic::List_1<UnityEngine::GameObject*>* rootGameObjects) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::Scene::GetRootGameObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRootGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootGameObjects)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, rootGameObjects);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.GetHashCode
int UnityEngine::SceneManagement::Scene::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::Scene::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.Equals
bool UnityEngine::SceneManagement::Scene::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::Scene::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.op_Equality
bool UnityEngine::SceneManagement::operator ==(const UnityEngine::SceneManagement::Scene& lhs, const UnityEngine::SceneManagement::Scene& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::Scene::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "Scene", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Writing MetadataGetter for method: Scene::IsValidInternal
// Il2CppName: IsValidInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int)>(&Scene::IsValidInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scene), "IsValidInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Scene::GetNameInternal
// Il2CppName: GetNameInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(int)>(&Scene::GetNameInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scene), "GetNameInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Scene::GetIsLoadedInternal
// Il2CppName: GetIsLoadedInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int)>(&Scene::GetIsLoadedInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scene), "GetIsLoadedInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Scene::GetRootCountInternal
// Il2CppName: GetRootCountInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&Scene::GetRootCountInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scene), "GetRootCountInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Scene::GetRootGameObjectsInternal
// Il2CppName: GetRootGameObjectsInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, ::Il2CppObject*)>(&Scene::GetRootGameObjectsInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scene), "GetRootGameObjectsInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Scene::get_handle
// Il2CppName: get_handle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Scene::*)()>(&Scene::get_handle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scene), "get_handle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scene::IsValid
// Il2CppName: IsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Scene::*)()>(&Scene::IsValid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scene), "IsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scene::get_name
// Il2CppName: get_name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Scene::*)()>(&Scene::get_name)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scene), "get_name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scene::get_isLoaded
// Il2CppName: get_isLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Scene::*)()>(&Scene::get_isLoaded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scene), "get_isLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scene::get_rootCount
// Il2CppName: get_rootCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Scene::*)()>(&Scene::get_rootCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scene), "get_rootCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scene::GetRootGameObjects
// Il2CppName: GetRootGameObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::GameObject*>* (Scene::*)()>(&Scene::GetRootGameObjects)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scene), "GetRootGameObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scene::GetRootGameObjects
// Il2CppName: GetRootGameObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scene::*)(System::Collections::Generic::List_1<UnityEngine::GameObject*>*)>(&Scene::GetRootGameObjects)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scene), "GetRootGameObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::GameObject*>*>()});
  }
};
// Writing MetadataGetter for method: Scene::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Scene::*)()>(&Scene::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scene), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scene::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Scene::*)(::Il2CppObject*)>(&Scene::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scene), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Scene::operator ==
// Il2CppName: op_Equality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(const UnityEngine::SceneManagement::Scene&, const UnityEngine::SceneManagement::Scene&)>(&Scene::operator ==)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scene), "op_Equality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<const UnityEngine::SceneManagement::Scene&>(), ::il2cpp_utils::ExtractIndependentType<const UnityEngine::SceneManagement::Scene&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.SceneManagement.SceneManagerAPIInternal
#include "UnityEngine/SceneManagement/SceneManagerAPIInternal.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneParameters
#include "UnityEngine/SceneManagement/LoadSceneParameters.hpp"
// Including type: UnityEngine.SceneManagement.UnloadSceneOptions
#include "UnityEngine/SceneManagement/UnloadSceneOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SceneManagement.SceneManagerAPIInternal.LoadSceneAsyncNameIndexInternal
UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManagerAPIInternal::LoadSceneAsyncNameIndexInternal(::Il2CppString* sceneName, int sceneBuildIndex, UnityEngine::SceneManagement::LoadSceneParameters parameters, bool mustCompleteNextFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManagerAPIInternal::LoadSceneAsyncNameIndexInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManagerAPIInternal", "LoadSceneAsyncNameIndexInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(sceneBuildIndex), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(mustCompleteNextFrame)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneName, sceneBuildIndex, parameters, mustCompleteNextFrame);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManagerAPIInternal.UnloadSceneNameIndexInternal
UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManagerAPIInternal::UnloadSceneNameIndexInternal(::Il2CppString* sceneName, int sceneBuildIndex, bool immediately, UnityEngine::SceneManagement::UnloadSceneOptions options, bool& outSuccess) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManagerAPIInternal::UnloadSceneNameIndexInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManagerAPIInternal", "UnloadSceneNameIndexInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(sceneBuildIndex), ::il2cpp_utils::ExtractType(immediately), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneName, sceneBuildIndex, immediately, options, outSuccess);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManagerAPIInternal.LoadSceneAsyncNameIndexInternal_Injected
UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManagerAPIInternal::LoadSceneAsyncNameIndexInternal_Injected(::Il2CppString* sceneName, int sceneBuildIndex, UnityEngine::SceneManagement::LoadSceneParameters& parameters, bool mustCompleteNextFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManagerAPIInternal::LoadSceneAsyncNameIndexInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManagerAPIInternal", "LoadSceneAsyncNameIndexInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(sceneBuildIndex), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(mustCompleteNextFrame)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneName, sceneBuildIndex, parameters, mustCompleteNextFrame);
}
// Writing MetadataGetter for method: SceneManagerAPIInternal::LoadSceneAsyncNameIndexInternal
// Il2CppName: LoadSceneAsyncNameIndexInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AsyncOperation* (*)(::Il2CppString*, int, UnityEngine::SceneManagement::LoadSceneParameters, bool)>(&SceneManagerAPIInternal::LoadSceneAsyncNameIndexInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManagerAPIInternal*), "LoadSceneAsyncNameIndexInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::LoadSceneParameters>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SceneManagerAPIInternal::UnloadSceneNameIndexInternal
// Il2CppName: UnloadSceneNameIndexInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AsyncOperation* (*)(::Il2CppString*, int, bool, UnityEngine::SceneManagement::UnloadSceneOptions, bool&)>(&SceneManagerAPIInternal::UnloadSceneNameIndexInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManagerAPIInternal*), "UnloadSceneNameIndexInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::UnloadSceneOptions>(), ::il2cpp_utils::ExtractIndependentType<bool&>()});
  }
};
// Writing MetadataGetter for method: SceneManagerAPIInternal::LoadSceneAsyncNameIndexInternal_Injected
// Il2CppName: LoadSceneAsyncNameIndexInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AsyncOperation* (*)(::Il2CppString*, int, UnityEngine::SceneManagement::LoadSceneParameters&, bool)>(&SceneManagerAPIInternal::LoadSceneAsyncNameIndexInternal_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManagerAPIInternal*), "LoadSceneAsyncNameIndexInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::LoadSceneParameters&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.SceneManagement.SceneManager
#include "UnityEngine/SceneManagement/SceneManager.hpp"
// Including type: UnityEngine.Events.UnityAction`2
#include "UnityEngine/Events/UnityAction_2.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: UnityEngine.SceneManagement.UnloadSceneOptions
#include "UnityEngine/SceneManagement/UnloadSceneOptions.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneParameters
#include "UnityEngine/SceneManagement/LoadSceneParameters.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Boolean s_AllowLoadScene
bool UnityEngine::SceneManagement::SceneManager::_get_s_AllowLoadScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::_get_s_AllowLoadScene");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngine.SceneManagement", "SceneManager", "s_AllowLoadScene"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean s_AllowLoadScene
void UnityEngine::SceneManagement::SceneManager::_set_s_AllowLoadScene(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::_set_s_AllowLoadScene");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "SceneManager", "s_AllowLoadScene", value));
}
// [DebuggerBrowsableAttribute] Offset: 0xD945A0
// [CompilerGeneratedAttribute] Offset: 0xD945A0
// Autogenerated static field getter
// Get static field: static private UnityEngine.Events.UnityAction`2<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> sceneLoaded
UnityEngine::Events::UnityAction_2<UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::LoadSceneMode>* UnityEngine::SceneManagement::SceneManager::_get_sceneLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::_get_sceneLoaded");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Events::UnityAction_2<UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::LoadSceneMode>*>("UnityEngine.SceneManagement", "SceneManager", "sceneLoaded")));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Events.UnityAction`2<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> sceneLoaded
void UnityEngine::SceneManagement::SceneManager::_set_sceneLoaded(UnityEngine::Events::UnityAction_2<UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::LoadSceneMode>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::_set_sceneLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "SceneManager", "sceneLoaded", value));
}
// [DebuggerBrowsableAttribute] Offset: 0xD945DC
// [CompilerGeneratedAttribute] Offset: 0xD945DC
// Autogenerated static field getter
// Get static field: static private UnityEngine.Events.UnityAction`1<UnityEngine.SceneManagement.Scene> sceneUnloaded
UnityEngine::Events::UnityAction_1<UnityEngine::SceneManagement::Scene>* UnityEngine::SceneManagement::SceneManager::_get_sceneUnloaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::_get_sceneUnloaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Events::UnityAction_1<UnityEngine::SceneManagement::Scene>*>("UnityEngine.SceneManagement", "SceneManager", "sceneUnloaded"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Events.UnityAction`1<UnityEngine.SceneManagement.Scene> sceneUnloaded
void UnityEngine::SceneManagement::SceneManager::_set_sceneUnloaded(UnityEngine::Events::UnityAction_1<UnityEngine::SceneManagement::Scene>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::_set_sceneUnloaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "SceneManager", "sceneUnloaded", value));
}
// [DebuggerBrowsableAttribute] Offset: 0xD94618
// [CompilerGeneratedAttribute] Offset: 0xD94618
// Autogenerated static field getter
// Get static field: static private UnityEngine.Events.UnityAction`2<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> activeSceneChanged
UnityEngine::Events::UnityAction_2<UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::Scene>* UnityEngine::SceneManagement::SceneManager::_get_activeSceneChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::_get_activeSceneChanged");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Events::UnityAction_2<UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::Scene>*>("UnityEngine.SceneManagement", "SceneManager", "activeSceneChanged")));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Events.UnityAction`2<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> activeSceneChanged
void UnityEngine::SceneManagement::SceneManager::_set_activeSceneChanged(UnityEngine::Events::UnityAction_2<UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::Scene>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::_set_activeSceneChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "SceneManager", "activeSceneChanged", value));
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.get_sceneCount
int UnityEngine::SceneManagement::SceneManager::get_sceneCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::get_sceneCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "get_sceneCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.get_sceneCountInBuildSettings
int UnityEngine::SceneManagement::SceneManager::get_sceneCountInBuildSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::get_sceneCountInBuildSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "get_sceneCountInBuildSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.GetActiveScene
UnityEngine::SceneManagement::Scene UnityEngine::SceneManagement::SceneManager::GetActiveScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::GetActiveScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "GetActiveScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::SceneManagement::Scene, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.SetActiveScene
bool UnityEngine::SceneManagement::SceneManager::SetActiveScene(UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::SetActiveScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "SetActiveScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, scene);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.GetSceneByName
UnityEngine::SceneManagement::Scene UnityEngine::SceneManagement::SceneManager::GetSceneByName(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::GetSceneByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "GetSceneByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::SceneManagement::Scene, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.GetSceneAt
UnityEngine::SceneManagement::Scene UnityEngine::SceneManagement::SceneManager::GetSceneAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::GetSceneAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "GetSceneAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::SceneManagement::Scene, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, index);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.UnloadSceneAsyncInternal
UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManager::UnloadSceneAsyncInternal(UnityEngine::SceneManagement::Scene scene, UnityEngine::SceneManagement::UnloadSceneOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::UnloadSceneAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "UnloadSceneAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, scene, options);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.LoadSceneAsyncNameIndexInternal
UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManager::LoadSceneAsyncNameIndexInternal(::Il2CppString* sceneName, int sceneBuildIndex, UnityEngine::SceneManagement::LoadSceneParameters parameters, bool mustCompleteNextFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::LoadSceneAsyncNameIndexInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "LoadSceneAsyncNameIndexInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(sceneBuildIndex), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(mustCompleteNextFrame)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneName, sceneBuildIndex, parameters, mustCompleteNextFrame);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.UnloadSceneNameIndexInternal
UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManager::UnloadSceneNameIndexInternal(::Il2CppString* sceneName, int sceneBuildIndex, bool immediately, UnityEngine::SceneManagement::UnloadSceneOptions options, bool& outSuccess) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::UnloadSceneNameIndexInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "UnloadSceneNameIndexInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(sceneBuildIndex), ::il2cpp_utils::ExtractType(immediately), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneName, sceneBuildIndex, immediately, options, outSuccess);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.MoveGameObjectToScene
void UnityEngine::SceneManagement::SceneManager::MoveGameObjectToScene(UnityEngine::GameObject* go, UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::MoveGameObjectToScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "MoveGameObjectToScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(scene)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, go, scene);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.add_sceneLoaded
void UnityEngine::SceneManagement::SceneManager::add_sceneLoaded(UnityEngine::Events::UnityAction_2<UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::LoadSceneMode>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::add_sceneLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "add_sceneLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.remove_sceneLoaded
void UnityEngine::SceneManagement::SceneManager::remove_sceneLoaded(UnityEngine::Events::UnityAction_2<UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::LoadSceneMode>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::remove_sceneLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "remove_sceneLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.add_sceneUnloaded
void UnityEngine::SceneManagement::SceneManager::add_sceneUnloaded(UnityEngine::Events::UnityAction_1<UnityEngine::SceneManagement::Scene>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::add_sceneUnloaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "add_sceneUnloaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.remove_sceneUnloaded
void UnityEngine::SceneManagement::SceneManager::remove_sceneUnloaded(UnityEngine::Events::UnityAction_1<UnityEngine::SceneManagement::Scene>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::remove_sceneUnloaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "remove_sceneUnloaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.LoadScene
void UnityEngine::SceneManagement::SceneManager::LoadScene(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneName, mode);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.LoadScene
void UnityEngine::SceneManagement::SceneManager::LoadScene(::Il2CppString* sceneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneName);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.LoadScene
UnityEngine::SceneManagement::Scene UnityEngine::SceneManagement::SceneManager::LoadScene(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::SceneManagement::Scene, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneName, parameters);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.LoadScene
void UnityEngine::SceneManagement::SceneManager::LoadScene(int sceneBuildIndex, UnityEngine::SceneManagement::LoadSceneMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneBuildIndex), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneBuildIndex, mode);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.LoadScene
UnityEngine::SceneManagement::Scene UnityEngine::SceneManagement::SceneManager::LoadScene(int sceneBuildIndex, UnityEngine::SceneManagement::LoadSceneParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneBuildIndex), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::SceneManagement::Scene, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneBuildIndex, parameters);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.LoadSceneAsync
UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManager::LoadSceneAsync(int sceneBuildIndex, UnityEngine::SceneManagement::LoadSceneMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneBuildIndex), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneBuildIndex, mode);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.LoadSceneAsync
UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManager::LoadSceneAsync(int sceneBuildIndex, UnityEngine::SceneManagement::LoadSceneParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneBuildIndex), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneBuildIndex, parameters);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.LoadSceneAsync
UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManager::LoadSceneAsync(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneName, mode);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.LoadSceneAsync
UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManager::LoadSceneAsync(::Il2CppString* sceneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneName);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.LoadSceneAsync
UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManager::LoadSceneAsync(::Il2CppString* sceneName, UnityEngine::SceneManagement::LoadSceneParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneName, parameters);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.UnloadSceneAsync
UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManager::UnloadSceneAsync(::Il2CppString* sceneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::UnloadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "UnloadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sceneName);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.UnloadSceneAsync
UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManager::UnloadSceneAsync(UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::UnloadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "UnloadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, scene);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.Internal_SceneLoaded
void UnityEngine::SceneManagement::SceneManager::Internal_SceneLoaded(UnityEngine::SceneManagement::Scene scene, UnityEngine::SceneManagement::LoadSceneMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::Internal_SceneLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "Internal_SceneLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, scene, mode);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.Internal_SceneUnloaded
void UnityEngine::SceneManagement::SceneManager::Internal_SceneUnloaded(UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::Internal_SceneUnloaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "Internal_SceneUnloaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, scene);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.Internal_ActiveSceneChanged
void UnityEngine::SceneManagement::SceneManager::Internal_ActiveSceneChanged(UnityEngine::SceneManagement::Scene previousActiveScene, UnityEngine::SceneManagement::Scene newActiveScene) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::Internal_ActiveSceneChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "Internal_ActiveSceneChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousActiveScene), ::il2cpp_utils::ExtractType(newActiveScene)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, previousActiveScene, newActiveScene);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager..cctor
void UnityEngine::SceneManagement::SceneManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.GetActiveScene_Injected
void UnityEngine::SceneManagement::SceneManager::GetActiveScene_Injected(UnityEngine::SceneManagement::Scene& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::GetActiveScene_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "GetActiveScene_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::Scene&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ret);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.SetActiveScene_Injected
bool UnityEngine::SceneManagement::SceneManager::SetActiveScene_Injected(UnityEngine::SceneManagement::Scene& scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::SetActiveScene_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "SetActiveScene_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, scene);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.GetSceneByName_Injected
void UnityEngine::SceneManagement::SceneManager::GetSceneByName_Injected(::Il2CppString* name, UnityEngine::SceneManagement::Scene& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::GetSceneByName_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "GetSceneByName_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::Scene&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, ret);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.GetSceneAt_Injected
void UnityEngine::SceneManagement::SceneManager::GetSceneAt_Injected(int index, UnityEngine::SceneManagement::Scene& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::GetSceneAt_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "GetSceneAt_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::Scene&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, index, ret);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.UnloadSceneAsyncInternal_Injected
UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManager::UnloadSceneAsyncInternal_Injected(UnityEngine::SceneManagement::Scene& scene, UnityEngine::SceneManagement::UnloadSceneOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::UnloadSceneAsyncInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "UnloadSceneAsyncInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, scene, options);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.MoveGameObjectToScene_Injected
void UnityEngine::SceneManagement::SceneManager::MoveGameObjectToScene_Injected(UnityEngine::GameObject* go, UnityEngine::SceneManagement::Scene& scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::SceneManager::MoveGameObjectToScene_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "MoveGameObjectToScene_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(scene)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, go, scene);
}
// Writing MetadataGetter for method: SceneManager::get_sceneCount
// Il2CppName: get_sceneCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&SceneManager::get_sceneCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "get_sceneCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SceneManager::get_sceneCountInBuildSettings
// Il2CppName: get_sceneCountInBuildSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&SceneManager::get_sceneCountInBuildSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "get_sceneCountInBuildSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SceneManager::GetActiveScene
// Il2CppName: GetActiveScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::SceneManagement::Scene (*)()>(&SceneManager::GetActiveScene)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "GetActiveScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SceneManager::SetActiveScene
// Il2CppName: SetActiveScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::SceneManagement::Scene)>(&SceneManager::SetActiveScene)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "SetActiveScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::Scene>()});
  }
};
// Writing MetadataGetter for method: SceneManager::GetSceneByName
// Il2CppName: GetSceneByName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::SceneManagement::Scene (*)(::Il2CppString*)>(&SceneManager::GetSceneByName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "GetSceneByName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SceneManager::GetSceneAt
// Il2CppName: GetSceneAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::SceneManagement::Scene (*)(int)>(&SceneManager::GetSceneAt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "GetSceneAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SceneManager::UnloadSceneAsyncInternal
// Il2CppName: UnloadSceneAsyncInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AsyncOperation* (*)(UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::UnloadSceneOptions)>(&SceneManager::UnloadSceneAsyncInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "UnloadSceneAsyncInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::Scene>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::UnloadSceneOptions>()});
  }
};
// Writing MetadataGetter for method: SceneManager::LoadSceneAsyncNameIndexInternal
// Il2CppName: LoadSceneAsyncNameIndexInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AsyncOperation* (*)(::Il2CppString*, int, UnityEngine::SceneManagement::LoadSceneParameters, bool)>(&SceneManager::LoadSceneAsyncNameIndexInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "LoadSceneAsyncNameIndexInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::LoadSceneParameters>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SceneManager::UnloadSceneNameIndexInternal
// Il2CppName: UnloadSceneNameIndexInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AsyncOperation* (*)(::Il2CppString*, int, bool, UnityEngine::SceneManagement::UnloadSceneOptions, bool&)>(&SceneManager::UnloadSceneNameIndexInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "UnloadSceneNameIndexInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::UnloadSceneOptions>(), ::il2cpp_utils::ExtractIndependentType<bool&>()});
  }
};
// Writing MetadataGetter for method: SceneManager::MoveGameObjectToScene
// Il2CppName: MoveGameObjectToScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*, UnityEngine::SceneManagement::Scene)>(&SceneManager::MoveGameObjectToScene)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "MoveGameObjectToScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::Scene>()});
  }
};
// Writing MetadataGetter for method: SceneManager::add_sceneLoaded
// Il2CppName: add_sceneLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Events::UnityAction_2<UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::LoadSceneMode>*)>(&SceneManager::add_sceneLoaded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "add_sceneLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction_2<UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::LoadSceneMode>*>()});
  }
};
// Writing MetadataGetter for method: SceneManager::remove_sceneLoaded
// Il2CppName: remove_sceneLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Events::UnityAction_2<UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::LoadSceneMode>*)>(&SceneManager::remove_sceneLoaded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "remove_sceneLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction_2<UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::LoadSceneMode>*>()});
  }
};
// Writing MetadataGetter for method: SceneManager::add_sceneUnloaded
// Il2CppName: add_sceneUnloaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Events::UnityAction_1<UnityEngine::SceneManagement::Scene>*)>(&SceneManager::add_sceneUnloaded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "add_sceneUnloaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction_1<UnityEngine::SceneManagement::Scene>*>()});
  }
};
// Writing MetadataGetter for method: SceneManager::remove_sceneUnloaded
// Il2CppName: remove_sceneUnloaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Events::UnityAction_1<UnityEngine::SceneManagement::Scene>*)>(&SceneManager::remove_sceneUnloaded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "remove_sceneUnloaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction_1<UnityEngine::SceneManagement::Scene>*>()});
  }
};
// Writing MetadataGetter for method: SceneManager::LoadScene
// Il2CppName: LoadScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, UnityEngine::SceneManagement::LoadSceneMode)>(&SceneManager::LoadScene)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "LoadScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::LoadSceneMode>()});
  }
};
// Writing MetadataGetter for method: SceneManager::LoadScene
// Il2CppName: LoadScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*)>(&SceneManager::LoadScene)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "LoadScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SceneManager::LoadScene
// Il2CppName: LoadScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::SceneManagement::Scene (*)(::Il2CppString*, UnityEngine::SceneManagement::LoadSceneParameters)>(&SceneManager::LoadScene)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "LoadScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::LoadSceneParameters>()});
  }
};
// Writing MetadataGetter for method: SceneManager::LoadScene
// Il2CppName: LoadScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, UnityEngine::SceneManagement::LoadSceneMode)>(&SceneManager::LoadScene)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "LoadScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::LoadSceneMode>()});
  }
};
// Writing MetadataGetter for method: SceneManager::LoadScene
// Il2CppName: LoadScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::SceneManagement::Scene (*)(int, UnityEngine::SceneManagement::LoadSceneParameters)>(&SceneManager::LoadScene)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "LoadScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::LoadSceneParameters>()});
  }
};
// Writing MetadataGetter for method: SceneManager::LoadSceneAsync
// Il2CppName: LoadSceneAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AsyncOperation* (*)(int, UnityEngine::SceneManagement::LoadSceneMode)>(&SceneManager::LoadSceneAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "LoadSceneAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::LoadSceneMode>()});
  }
};
// Writing MetadataGetter for method: SceneManager::LoadSceneAsync
// Il2CppName: LoadSceneAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AsyncOperation* (*)(int, UnityEngine::SceneManagement::LoadSceneParameters)>(&SceneManager::LoadSceneAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "LoadSceneAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::LoadSceneParameters>()});
  }
};
// Writing MetadataGetter for method: SceneManager::LoadSceneAsync
// Il2CppName: LoadSceneAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AsyncOperation* (*)(::Il2CppString*, UnityEngine::SceneManagement::LoadSceneMode)>(&SceneManager::LoadSceneAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "LoadSceneAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::LoadSceneMode>()});
  }
};
// Writing MetadataGetter for method: SceneManager::LoadSceneAsync
// Il2CppName: LoadSceneAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AsyncOperation* (*)(::Il2CppString*)>(&SceneManager::LoadSceneAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "LoadSceneAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SceneManager::LoadSceneAsync
// Il2CppName: LoadSceneAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AsyncOperation* (*)(::Il2CppString*, UnityEngine::SceneManagement::LoadSceneParameters)>(&SceneManager::LoadSceneAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "LoadSceneAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::LoadSceneParameters>()});
  }
};
// Writing MetadataGetter for method: SceneManager::UnloadSceneAsync
// Il2CppName: UnloadSceneAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AsyncOperation* (*)(::Il2CppString*)>(&SceneManager::UnloadSceneAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "UnloadSceneAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SceneManager::UnloadSceneAsync
// Il2CppName: UnloadSceneAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AsyncOperation* (*)(UnityEngine::SceneManagement::Scene)>(&SceneManager::UnloadSceneAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "UnloadSceneAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::Scene>()});
  }
};
// Writing MetadataGetter for method: SceneManager::Internal_SceneLoaded
// Il2CppName: Internal_SceneLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::LoadSceneMode)>(&SceneManager::Internal_SceneLoaded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "Internal_SceneLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::Scene>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::LoadSceneMode>()});
  }
};
// Writing MetadataGetter for method: SceneManager::Internal_SceneUnloaded
// Il2CppName: Internal_SceneUnloaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::SceneManagement::Scene)>(&SceneManager::Internal_SceneUnloaded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "Internal_SceneUnloaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::Scene>()});
  }
};
// Writing MetadataGetter for method: SceneManager::Internal_ActiveSceneChanged
// Il2CppName: Internal_ActiveSceneChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::SceneManagement::Scene, UnityEngine::SceneManagement::Scene)>(&SceneManager::Internal_ActiveSceneChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "Internal_ActiveSceneChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::Scene>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::Scene>()});
  }
};
// Writing MetadataGetter for method: SceneManager::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SceneManager::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SceneManager::GetActiveScene_Injected
// Il2CppName: GetActiveScene_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::SceneManagement::Scene&)>(&SceneManager::GetActiveScene_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "GetActiveScene_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::Scene&>()});
  }
};
// Writing MetadataGetter for method: SceneManager::SetActiveScene_Injected
// Il2CppName: SetActiveScene_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::SceneManagement::Scene&)>(&SceneManager::SetActiveScene_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "SetActiveScene_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::Scene&>()});
  }
};
// Writing MetadataGetter for method: SceneManager::GetSceneByName_Injected
// Il2CppName: GetSceneByName_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, UnityEngine::SceneManagement::Scene&)>(&SceneManager::GetSceneByName_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "GetSceneByName_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::Scene&>()});
  }
};
// Writing MetadataGetter for method: SceneManager::GetSceneAt_Injected
// Il2CppName: GetSceneAt_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, UnityEngine::SceneManagement::Scene&)>(&SceneManager::GetSceneAt_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "GetSceneAt_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::Scene&>()});
  }
};
// Writing MetadataGetter for method: SceneManager::UnloadSceneAsyncInternal_Injected
// Il2CppName: UnloadSceneAsyncInternal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AsyncOperation* (*)(UnityEngine::SceneManagement::Scene&, UnityEngine::SceneManagement::UnloadSceneOptions)>(&SceneManager::UnloadSceneAsyncInternal_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "UnloadSceneAsyncInternal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::Scene&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::UnloadSceneOptions>()});
  }
};
// Writing MetadataGetter for method: SceneManager::MoveGameObjectToScene_Injected
// Il2CppName: MoveGameObjectToScene_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*, UnityEngine::SceneManagement::Scene&)>(&SceneManager::MoveGameObjectToScene_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SceneManager*), "MoveGameObjectToScene_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::Scene&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SceneManagement.LoadSceneMode
#include "UnityEngine/SceneManagement/LoadSceneMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SceneManagement.LoadSceneMode Single
UnityEngine::SceneManagement::LoadSceneMode UnityEngine::SceneManagement::LoadSceneMode::_get_Single() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::LoadSceneMode::_get_Single");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::SceneManagement::LoadSceneMode>("UnityEngine.SceneManagement", "LoadSceneMode", "Single"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SceneManagement.LoadSceneMode Single
void UnityEngine::SceneManagement::LoadSceneMode::_set_Single(UnityEngine::SceneManagement::LoadSceneMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::LoadSceneMode::_set_Single");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "LoadSceneMode", "Single", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SceneManagement.LoadSceneMode Additive
UnityEngine::SceneManagement::LoadSceneMode UnityEngine::SceneManagement::LoadSceneMode::_get_Additive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::LoadSceneMode::_get_Additive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::SceneManagement::LoadSceneMode>("UnityEngine.SceneManagement", "LoadSceneMode", "Additive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SceneManagement.LoadSceneMode Additive
void UnityEngine::SceneManagement::LoadSceneMode::_set_Additive(UnityEngine::SceneManagement::LoadSceneMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::LoadSceneMode::_set_Additive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "LoadSceneMode", "Additive", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SceneManagement.LocalPhysicsMode
#include "UnityEngine/SceneManagement/LocalPhysicsMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SceneManagement.LocalPhysicsMode None
UnityEngine::SceneManagement::LocalPhysicsMode UnityEngine::SceneManagement::LocalPhysicsMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::LocalPhysicsMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::SceneManagement::LocalPhysicsMode>("UnityEngine.SceneManagement", "LocalPhysicsMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SceneManagement.LocalPhysicsMode None
void UnityEngine::SceneManagement::LocalPhysicsMode::_set_None(UnityEngine::SceneManagement::LocalPhysicsMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::LocalPhysicsMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "LocalPhysicsMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SceneManagement.LocalPhysicsMode Physics2D
UnityEngine::SceneManagement::LocalPhysicsMode UnityEngine::SceneManagement::LocalPhysicsMode::_get_Physics2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::LocalPhysicsMode::_get_Physics2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::SceneManagement::LocalPhysicsMode>("UnityEngine.SceneManagement", "LocalPhysicsMode", "Physics2D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SceneManagement.LocalPhysicsMode Physics2D
void UnityEngine::SceneManagement::LocalPhysicsMode::_set_Physics2D(UnityEngine::SceneManagement::LocalPhysicsMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::LocalPhysicsMode::_set_Physics2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "LocalPhysicsMode", "Physics2D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SceneManagement.LocalPhysicsMode Physics3D
UnityEngine::SceneManagement::LocalPhysicsMode UnityEngine::SceneManagement::LocalPhysicsMode::_get_Physics3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::LocalPhysicsMode::_get_Physics3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::SceneManagement::LocalPhysicsMode>("UnityEngine.SceneManagement", "LocalPhysicsMode", "Physics3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SceneManagement.LocalPhysicsMode Physics3D
void UnityEngine::SceneManagement::LocalPhysicsMode::_set_Physics3D(UnityEngine::SceneManagement::LocalPhysicsMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::LocalPhysicsMode::_set_Physics3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "LocalPhysicsMode", "Physics3D", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SceneManagement.LoadSceneParameters
#include "UnityEngine/SceneManagement/LoadSceneParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SceneManagement.LoadSceneParameters.set_loadSceneMode
void UnityEngine::SceneManagement::LoadSceneParameters::set_loadSceneMode(UnityEngine::SceneManagement::LoadSceneMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::LoadSceneParameters::set_loadSceneMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_loadSceneMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Writing MetadataGetter for method: LoadSceneParameters::set_loadSceneMode
// Il2CppName: set_loadSceneMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LoadSceneParameters::*)(UnityEngine::SceneManagement::LoadSceneMode)>(&LoadSceneParameters::set_loadSceneMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LoadSceneParameters), "set_loadSceneMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::LoadSceneMode>()});
  }
};
// Writing MetadataGetter for method: LoadSceneParameters::LoadSceneParameters
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LoadSceneParameters::*)(UnityEngine::SceneManagement::LoadSceneMode)>(&LoadSceneParameters::LoadSceneParameters<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LoadSceneParameters), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::LoadSceneMode>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LoadSceneParameters::*)(UnityEngine::SceneManagement::LoadSceneMode)>(&LoadSceneParameters::LoadSceneParameters<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LoadSceneParameters), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::SceneManagement::LoadSceneMode>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SceneManagement.UnloadSceneOptions
#include "UnityEngine/SceneManagement/UnloadSceneOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SceneManagement.UnloadSceneOptions None
UnityEngine::SceneManagement::UnloadSceneOptions UnityEngine::SceneManagement::UnloadSceneOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::UnloadSceneOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::SceneManagement::UnloadSceneOptions>("UnityEngine.SceneManagement", "UnloadSceneOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SceneManagement.UnloadSceneOptions None
void UnityEngine::SceneManagement::UnloadSceneOptions::_set_None(UnityEngine::SceneManagement::UnloadSceneOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::UnloadSceneOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "UnloadSceneOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SceneManagement.UnloadSceneOptions UnloadAllEmbeddedSceneObjects
UnityEngine::SceneManagement::UnloadSceneOptions UnityEngine::SceneManagement::UnloadSceneOptions::_get_UnloadAllEmbeddedSceneObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::UnloadSceneOptions::_get_UnloadAllEmbeddedSceneObjects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::SceneManagement::UnloadSceneOptions>("UnityEngine.SceneManagement", "UnloadSceneOptions", "UnloadAllEmbeddedSceneObjects"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SceneManagement.UnloadSceneOptions UnloadAllEmbeddedSceneObjects
void UnityEngine::SceneManagement::UnloadSceneOptions::_set_UnloadAllEmbeddedSceneObjects(UnityEngine::SceneManagement::UnloadSceneOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::SceneManagement::UnloadSceneOptions::_set_UnloadAllEmbeddedSceneObjects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "UnloadSceneOptions", "UnloadAllEmbeddedSceneObjects", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.LowLevel.PlayerLoopSystem/UpdateFunction
#include "UnityEngine/LowLevel/PlayerLoopSystem_UpdateFunction.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.LowLevel.PlayerLoopSystem/UpdateFunction.Invoke
void UnityEngine::LowLevel::PlayerLoopSystem::UpdateFunction::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LowLevel::PlayerLoopSystem::UpdateFunction::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.LowLevel.PlayerLoopSystem/UpdateFunction.BeginInvoke
System::IAsyncResult* UnityEngine::LowLevel::PlayerLoopSystem::UpdateFunction::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LowLevel::PlayerLoopSystem::UpdateFunction::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.LowLevel.PlayerLoopSystem/UpdateFunction.EndInvoke
void UnityEngine::LowLevel::PlayerLoopSystem::UpdateFunction::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::LowLevel::PlayerLoopSystem::UpdateFunction::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: PlayerLoopSystem::UpdateFunction::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerLoopSystem::UpdateFunction::*)(::Il2CppObject*, System::IntPtr)>(&PlayerLoopSystem::UpdateFunction::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerLoopSystem::UpdateFunction*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerLoopSystem::UpdateFunction::*)(::Il2CppObject*, System::IntPtr)>(&PlayerLoopSystem::UpdateFunction::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerLoopSystem::UpdateFunction*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: PlayerLoopSystem::UpdateFunction::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerLoopSystem::UpdateFunction::*)()>(&PlayerLoopSystem::UpdateFunction::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerLoopSystem::UpdateFunction*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerLoopSystem::UpdateFunction::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (PlayerLoopSystem::UpdateFunction::*)(System::AsyncCallback*, ::Il2CppObject*)>(&PlayerLoopSystem::UpdateFunction::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerLoopSystem::UpdateFunction*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: PlayerLoopSystem::UpdateFunction::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerLoopSystem::UpdateFunction::*)(System::IAsyncResult*)>(&PlayerLoopSystem::UpdateFunction::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerLoopSystem::UpdateFunction*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Networking.PlayerConnection.MessageEventArgs
#include "UnityEngine/Networking/PlayerConnection/MessageEventArgs.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: MessageEventArgs::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageEventArgs::*)()>(&MessageEventArgs::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageEventArgs*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageEventArgs::*)()>(&MessageEventArgs::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageEventArgs*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerConnection
#include "UnityEngine/Networking/PlayerConnection/PlayerConnection.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerConnection/<>c__DisplayClass12_0
#include "UnityEngine/Networking/PlayerConnection/PlayerConnection_--c__DisplayClass12_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerConnection/<>c__DisplayClass13_0
#include "UnityEngine/Networking/PlayerConnection/PlayerConnection_--c__DisplayClass13_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerConnection/<>c__DisplayClass20_0
#include "UnityEngine/Networking/PlayerConnection/PlayerConnection_--c__DisplayClass20_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.IPlayerEditorConnectionNative
#include "UnityEngine/IPlayerEditorConnectionNative.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.MessageEventArgs
#include "UnityEngine/Networking/PlayerConnection/MessageEventArgs.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static UnityEngine.IPlayerEditorConnectionNative connectionNative
UnityEngine::IPlayerEditorConnectionNative* UnityEngine::Networking::PlayerConnection::PlayerConnection::_get_connectionNative() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::_get_connectionNative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::IPlayerEditorConnectionNative*>("UnityEngine.Networking.PlayerConnection", "PlayerConnection", "connectionNative"));
}
// Autogenerated static field setter
// Set static field: static UnityEngine.IPlayerEditorConnectionNative connectionNative
void UnityEngine::Networking::PlayerConnection::PlayerConnection::_set_connectionNative(UnityEngine::IPlayerEditorConnectionNative* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::_set_connectionNative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking.PlayerConnection", "PlayerConnection", "connectionNative", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Networking.PlayerConnection.PlayerConnection s_Instance
UnityEngine::Networking::PlayerConnection::PlayerConnection* UnityEngine::Networking::PlayerConnection::PlayerConnection::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Networking::PlayerConnection::PlayerConnection*>("UnityEngine.Networking.PlayerConnection", "PlayerConnection", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Networking.PlayerConnection.PlayerConnection s_Instance
void UnityEngine::Networking::PlayerConnection::PlayerConnection::_set_s_Instance(UnityEngine::Networking::PlayerConnection::PlayerConnection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking.PlayerConnection", "PlayerConnection", "s_Instance", value));
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.get_instance
UnityEngine::Networking::PlayerConnection::PlayerConnection* UnityEngine::Networking::PlayerConnection::PlayerConnection::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking.PlayerConnection", "PlayerConnection", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Networking::PlayerConnection::PlayerConnection*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.get_isConnected
bool UnityEngine::Networking::PlayerConnection::PlayerConnection::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::get_isConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.CreateInstance
UnityEngine::Networking::PlayerConnection::PlayerConnection* UnityEngine::Networking::PlayerConnection::PlayerConnection::CreateInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking.PlayerConnection", "PlayerConnection", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Networking::PlayerConnection::PlayerConnection*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.OnEnable
void UnityEngine::Networking::PlayerConnection::PlayerConnection::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.GetConnectionNativeApi
UnityEngine::IPlayerEditorConnectionNative* UnityEngine::Networking::PlayerConnection::PlayerConnection::GetConnectionNativeApi() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::GetConnectionNativeApi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectionNativeApi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::IPlayerEditorConnectionNative*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.Register
void UnityEngine::Networking::PlayerConnection::PlayerConnection::Register(System::Guid messageId, UnityEngine::Events::UnityAction_1<UnityEngine::Networking::PlayerConnection::MessageEventArgs*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::Register");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, messageId, callback);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.Unregister
void UnityEngine::Networking::PlayerConnection::PlayerConnection::Unregister(System::Guid messageId, UnityEngine::Events::UnityAction_1<UnityEngine::Networking::PlayerConnection::MessageEventArgs*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::Unregister");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unregister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, messageId, callback);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.RegisterConnection
void UnityEngine::Networking::PlayerConnection::PlayerConnection::RegisterConnection(UnityEngine::Events::UnityAction_1<int>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::RegisterConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.RegisterDisconnection
void UnityEngine::Networking::PlayerConnection::PlayerConnection::RegisterDisconnection(UnityEngine::Events::UnityAction_1<int>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::RegisterDisconnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterDisconnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.UnregisterConnection
void UnityEngine::Networking::PlayerConnection::PlayerConnection::UnregisterConnection(UnityEngine::Events::UnityAction_1<int>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::UnregisterConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.UnregisterDisconnection
void UnityEngine::Networking::PlayerConnection::PlayerConnection::UnregisterDisconnection(UnityEngine::Events::UnityAction_1<int>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::UnregisterDisconnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterDisconnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.Send
void UnityEngine::Networking::PlayerConnection::PlayerConnection::Send(System::Guid messageId, ::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::Send");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, messageId, data);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.TrySend
bool UnityEngine::Networking::PlayerConnection::PlayerConnection::TrySend(System::Guid messageId, ::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::TrySend");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, messageId, data);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.BlockUntilRecvMsg
bool UnityEngine::Networking::PlayerConnection::PlayerConnection::BlockUntilRecvMsg(System::Guid messageId, int timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::BlockUntilRecvMsg");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUntilRecvMsg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, messageId, timeout);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.DisconnectAll
void UnityEngine::Networking::PlayerConnection::PlayerConnection::DisconnectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::DisconnectAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.MessageCallbackInternal
void UnityEngine::Networking::PlayerConnection::PlayerConnection::MessageCallbackInternal(System::IntPtr data, uint64_t size, uint64_t guid, ::Il2CppString* messageId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::MessageCallbackInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking.PlayerConnection", "PlayerConnection", "MessageCallbackInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(guid), ::il2cpp_utils::ExtractType(messageId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data, size, guid, messageId);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.ConnectedCallbackInternal
void UnityEngine::Networking::PlayerConnection::PlayerConnection::ConnectedCallbackInternal(int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::ConnectedCallbackInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking.PlayerConnection", "PlayerConnection", "ConnectedCallbackInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, playerId);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.DisconnectedCallback
void UnityEngine::Networking::PlayerConnection::PlayerConnection::DisconnectedCallback(int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::DisconnectedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking.PlayerConnection", "PlayerConnection", "DisconnectedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, playerId);
}
// Writing MetadataGetter for method: PlayerConnection::get_instance
// Il2CppName: get_instance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Networking::PlayerConnection::PlayerConnection* (*)()>(&PlayerConnection::get_instance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection*), "get_instance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerConnection::get_isConnected
// Il2CppName: get_isConnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayerConnection::*)()>(&PlayerConnection::get_isConnected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection*), "get_isConnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerConnection::CreateInstance
// Il2CppName: CreateInstance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Networking::PlayerConnection::PlayerConnection* (*)()>(&PlayerConnection::CreateInstance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection*), "CreateInstance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerConnection::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerConnection::*)()>(&PlayerConnection::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerConnection::GetConnectionNativeApi
// Il2CppName: GetConnectionNativeApi
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::IPlayerEditorConnectionNative* (PlayerConnection::*)()>(&PlayerConnection::GetConnectionNativeApi)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection*), "GetConnectionNativeApi", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerConnection::Register
// Il2CppName: Register
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerConnection::*)(System::Guid, UnityEngine::Events::UnityAction_1<UnityEngine::Networking::PlayerConnection::MessageEventArgs*>*)>(&PlayerConnection::Register)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection*), "Register", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Guid>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction_1<UnityEngine::Networking::PlayerConnection::MessageEventArgs*>*>()});
  }
};
// Writing MetadataGetter for method: PlayerConnection::Unregister
// Il2CppName: Unregister
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerConnection::*)(System::Guid, UnityEngine::Events::UnityAction_1<UnityEngine::Networking::PlayerConnection::MessageEventArgs*>*)>(&PlayerConnection::Unregister)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection*), "Unregister", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Guid>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction_1<UnityEngine::Networking::PlayerConnection::MessageEventArgs*>*>()});
  }
};
// Writing MetadataGetter for method: PlayerConnection::RegisterConnection
// Il2CppName: RegisterConnection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerConnection::*)(UnityEngine::Events::UnityAction_1<int>*)>(&PlayerConnection::RegisterConnection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection*), "RegisterConnection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction_1<int>*>()});
  }
};
// Writing MetadataGetter for method: PlayerConnection::RegisterDisconnection
// Il2CppName: RegisterDisconnection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerConnection::*)(UnityEngine::Events::UnityAction_1<int>*)>(&PlayerConnection::RegisterDisconnection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection*), "RegisterDisconnection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction_1<int>*>()});
  }
};
// Writing MetadataGetter for method: PlayerConnection::UnregisterConnection
// Il2CppName: UnregisterConnection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerConnection::*)(UnityEngine::Events::UnityAction_1<int>*)>(&PlayerConnection::UnregisterConnection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection*), "UnregisterConnection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction_1<int>*>()});
  }
};
// Writing MetadataGetter for method: PlayerConnection::UnregisterDisconnection
// Il2CppName: UnregisterDisconnection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerConnection::*)(UnityEngine::Events::UnityAction_1<int>*)>(&PlayerConnection::UnregisterDisconnection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection*), "UnregisterDisconnection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction_1<int>*>()});
  }
};
// Writing MetadataGetter for method: PlayerConnection::Send
// Il2CppName: Send
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerConnection::*)(System::Guid, ::Array<uint8_t>*)>(&PlayerConnection::Send)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection*), "Send", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Guid>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: PlayerConnection::TrySend
// Il2CppName: TrySend
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayerConnection::*)(System::Guid, ::Array<uint8_t>*)>(&PlayerConnection::TrySend)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection*), "TrySend", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Guid>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: PlayerConnection::BlockUntilRecvMsg
// Il2CppName: BlockUntilRecvMsg
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayerConnection::*)(System::Guid, int)>(&PlayerConnection::BlockUntilRecvMsg)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection*), "BlockUntilRecvMsg", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Guid>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlayerConnection::DisconnectAll
// Il2CppName: DisconnectAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerConnection::*)()>(&PlayerConnection::DisconnectAll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection*), "DisconnectAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerConnection::MessageCallbackInternal
// Il2CppName: MessageCallbackInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, uint64_t, uint64_t, ::Il2CppString*)>(&PlayerConnection::MessageCallbackInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection*), "MessageCallbackInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PlayerConnection::ConnectedCallbackInternal
// Il2CppName: ConnectedCallbackInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&PlayerConnection::ConnectedCallbackInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection*), "ConnectedCallbackInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlayerConnection::DisconnectedCallback
// Il2CppName: DisconnectedCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&PlayerConnection::DisconnectedCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection*), "DisconnectedCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlayerConnection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerConnection::*)()>(&PlayerConnection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerConnection::*)()>(&PlayerConnection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.PlayerConnection.PlayerConnection/<>c__DisplayClass12_0
#include "UnityEngine/Networking/PlayerConnection/PlayerConnection_--c__DisplayClass12_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/MessageTypeSubscribers
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_MessageTypeSubscribers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection/<>c__DisplayClass12_0.<Register>b__0
bool UnityEngine::Networking::PlayerConnection::PlayerConnection::$$c__DisplayClass12_0::$Register$b__0(UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::$$c__DisplayClass12_0::<Register>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Register>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Writing MetadataGetter for method: PlayerConnection::$$c__DisplayClass12_0::$Register$b__0
// Il2CppName: <Register>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayerConnection::$$c__DisplayClass12_0::*)(UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers*)>(&PlayerConnection::$$c__DisplayClass12_0::$Register$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection::$$c__DisplayClass12_0*), "<Register>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers*>()});
  }
};
// Writing MetadataGetter for method: PlayerConnection::$$c__DisplayClass12_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerConnection::$$c__DisplayClass12_0::*)()>(&PlayerConnection::$$c__DisplayClass12_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection::$$c__DisplayClass12_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerConnection::$$c__DisplayClass12_0::*)()>(&PlayerConnection::$$c__DisplayClass12_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection::$$c__DisplayClass12_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.PlayerConnection.PlayerConnection/<>c__DisplayClass13_0
#include "UnityEngine/Networking/PlayerConnection/PlayerConnection_--c__DisplayClass13_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/MessageTypeSubscribers
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_MessageTypeSubscribers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection/<>c__DisplayClass13_0.<Unregister>b__0
bool UnityEngine::Networking::PlayerConnection::PlayerConnection::$$c__DisplayClass13_0::$Unregister$b__0(UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::$$c__DisplayClass13_0::<Unregister>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Unregister>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Writing MetadataGetter for method: PlayerConnection::$$c__DisplayClass13_0::$Unregister$b__0
// Il2CppName: <Unregister>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayerConnection::$$c__DisplayClass13_0::*)(UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers*)>(&PlayerConnection::$$c__DisplayClass13_0::$Unregister$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection::$$c__DisplayClass13_0*), "<Unregister>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers*>()});
  }
};
// Writing MetadataGetter for method: PlayerConnection::$$c__DisplayClass13_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerConnection::$$c__DisplayClass13_0::*)()>(&PlayerConnection::$$c__DisplayClass13_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection::$$c__DisplayClass13_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerConnection::$$c__DisplayClass13_0::*)()>(&PlayerConnection::$$c__DisplayClass13_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection::$$c__DisplayClass13_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.PlayerConnection.PlayerConnection/<>c__DisplayClass20_0
#include "UnityEngine/Networking/PlayerConnection/PlayerConnection_--c__DisplayClass20_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.MessageEventArgs
#include "UnityEngine/Networking/PlayerConnection/MessageEventArgs.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection/<>c__DisplayClass20_0.<BlockUntilRecvMsg>b__0
void UnityEngine::Networking::PlayerConnection::PlayerConnection::$$c__DisplayClass20_0::$BlockUntilRecvMsg$b__0(UnityEngine::Networking::PlayerConnection::MessageEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerConnection::$$c__DisplayClass20_0::<BlockUntilRecvMsg>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BlockUntilRecvMsg>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, args);
}
// Writing MetadataGetter for method: PlayerConnection::$$c__DisplayClass20_0::$BlockUntilRecvMsg$b__0
// Il2CppName: <BlockUntilRecvMsg>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerConnection::$$c__DisplayClass20_0::*)(UnityEngine::Networking::PlayerConnection::MessageEventArgs*)>(&PlayerConnection::$$c__DisplayClass20_0::$BlockUntilRecvMsg$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection::$$c__DisplayClass20_0*), "<BlockUntilRecvMsg>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::PlayerConnection::MessageEventArgs*>()});
  }
};
// Writing MetadataGetter for method: PlayerConnection::$$c__DisplayClass20_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerConnection::$$c__DisplayClass20_0::*)()>(&PlayerConnection::$$c__DisplayClass20_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection::$$c__DisplayClass20_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerConnection::$$c__DisplayClass20_0::*)()>(&PlayerConnection::$$c__DisplayClass20_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerConnection::$$c__DisplayClass20_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/MessageEvent
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_MessageEvent.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/ConnectionChangeEvent
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_ConnectionChangeEvent.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/MessageTypeSubscribers
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_MessageTypeSubscribers.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/<>c__DisplayClass6_0
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_--c__DisplayClass6_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/<>c__DisplayClass7_0
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_--c__DisplayClass7_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/<>c__DisplayClass8_0
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_--c__DisplayClass8_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: UnityEngine.Events.UnityEvent`1
#include "UnityEngine/Events/UnityEvent_1.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.MessageEventArgs
#include "UnityEngine/Networking/PlayerConnection/MessageEventArgs.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents.InvokeMessageIdSubscribers
void UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::InvokeMessageIdSubscribers(System::Guid messageId, ::Array<uint8_t>* data, int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::InvokeMessageIdSubscribers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeMessageIdSubscribers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(playerId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, messageId, data, playerId);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents.AddAndCreate
UnityEngine::Events::UnityEvent_1<UnityEngine::Networking::PlayerConnection::MessageEventArgs*>* UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::AddAndCreate(System::Guid messageId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::AddAndCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAndCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Events::UnityEvent_1<UnityEngine::Networking::PlayerConnection::MessageEventArgs*>*, false>(this, ___internal__method, messageId);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents.UnregisterManagedCallback
void UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::UnregisterManagedCallback(System::Guid messageId, UnityEngine::Events::UnityAction_1<UnityEngine::Networking::PlayerConnection::MessageEventArgs*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::UnregisterManagedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterManagedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, messageId, callback);
}
// Writing MetadataGetter for method: PlayerEditorConnectionEvents::InvokeMessageIdSubscribers
// Il2CppName: InvokeMessageIdSubscribers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerEditorConnectionEvents::*)(System::Guid, ::Array<uint8_t>*, int)>(&PlayerEditorConnectionEvents::InvokeMessageIdSubscribers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerEditorConnectionEvents*), "InvokeMessageIdSubscribers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Guid>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlayerEditorConnectionEvents::AddAndCreate
// Il2CppName: AddAndCreate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Events::UnityEvent_1<UnityEngine::Networking::PlayerConnection::MessageEventArgs*>* (PlayerEditorConnectionEvents::*)(System::Guid)>(&PlayerEditorConnectionEvents::AddAndCreate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerEditorConnectionEvents*), "AddAndCreate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Guid>()});
  }
};
// Writing MetadataGetter for method: PlayerEditorConnectionEvents::UnregisterManagedCallback
// Il2CppName: UnregisterManagedCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerEditorConnectionEvents::*)(System::Guid, UnityEngine::Events::UnityAction_1<UnityEngine::Networking::PlayerConnection::MessageEventArgs*>*)>(&PlayerEditorConnectionEvents::UnregisterManagedCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerEditorConnectionEvents*), "UnregisterManagedCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Guid>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction_1<UnityEngine::Networking::PlayerConnection::MessageEventArgs*>*>()});
  }
};
// Writing MetadataGetter for method: PlayerEditorConnectionEvents::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerEditorConnectionEvents::*)()>(&PlayerEditorConnectionEvents::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerEditorConnectionEvents*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerEditorConnectionEvents::*)()>(&PlayerEditorConnectionEvents::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerEditorConnectionEvents*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/MessageEvent
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_MessageEvent.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.MessageEventArgs
#include "UnityEngine/Networking/PlayerConnection/MessageEventArgs.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PlayerEditorConnectionEvents::MessageEvent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerEditorConnectionEvents::MessageEvent::*)()>(&PlayerEditorConnectionEvents::MessageEvent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerEditorConnectionEvents::MessageEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerEditorConnectionEvents::MessageEvent::*)()>(&PlayerEditorConnectionEvents::MessageEvent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerEditorConnectionEvents::MessageEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/ConnectionChangeEvent
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_ConnectionChangeEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PlayerEditorConnectionEvents::ConnectionChangeEvent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerEditorConnectionEvents::ConnectionChangeEvent::*)()>(&PlayerEditorConnectionEvents::ConnectionChangeEvent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerEditorConnectionEvents::ConnectionChangeEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerEditorConnectionEvents::ConnectionChangeEvent::*)()>(&PlayerEditorConnectionEvents::ConnectionChangeEvent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerEditorConnectionEvents::ConnectionChangeEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/MessageTypeSubscribers
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_MessageTypeSubscribers.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/MessageEvent
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_MessageEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/MessageTypeSubscribers.get_MessageTypeId
System::Guid UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers::get_MessageTypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers::get_MessageTypeId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MessageTypeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/MessageTypeSubscribers.set_MessageTypeId
void UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers::set_MessageTypeId(System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers::set_MessageTypeId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MessageTypeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: PlayerEditorConnectionEvents::MessageTypeSubscribers::get_MessageTypeId
// Il2CppName: get_MessageTypeId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Guid (PlayerEditorConnectionEvents::MessageTypeSubscribers::*)()>(&PlayerEditorConnectionEvents::MessageTypeSubscribers::get_MessageTypeId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerEditorConnectionEvents::MessageTypeSubscribers*), "get_MessageTypeId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerEditorConnectionEvents::MessageTypeSubscribers::set_MessageTypeId
// Il2CppName: set_MessageTypeId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerEditorConnectionEvents::MessageTypeSubscribers::*)(System::Guid)>(&PlayerEditorConnectionEvents::MessageTypeSubscribers::set_MessageTypeId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerEditorConnectionEvents::MessageTypeSubscribers*), "set_MessageTypeId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Guid>()});
  }
};
// Writing MetadataGetter for method: PlayerEditorConnectionEvents::MessageTypeSubscribers::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerEditorConnectionEvents::MessageTypeSubscribers::*)()>(&PlayerEditorConnectionEvents::MessageTypeSubscribers::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerEditorConnectionEvents::MessageTypeSubscribers*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerEditorConnectionEvents::MessageTypeSubscribers::*)()>(&PlayerEditorConnectionEvents::MessageTypeSubscribers::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerEditorConnectionEvents::MessageTypeSubscribers*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/<>c__DisplayClass6_0
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_--c__DisplayClass6_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/MessageTypeSubscribers
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_MessageTypeSubscribers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/<>c__DisplayClass6_0.<InvokeMessageIdSubscribers>b__0
bool UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::$$c__DisplayClass6_0::$InvokeMessageIdSubscribers$b__0(UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::$$c__DisplayClass6_0::<InvokeMessageIdSubscribers>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InvokeMessageIdSubscribers>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Writing MetadataGetter for method: PlayerEditorConnectionEvents::$$c__DisplayClass6_0::$InvokeMessageIdSubscribers$b__0
// Il2CppName: <InvokeMessageIdSubscribers>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayerEditorConnectionEvents::$$c__DisplayClass6_0::*)(UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers*)>(&PlayerEditorConnectionEvents::$$c__DisplayClass6_0::$InvokeMessageIdSubscribers$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerEditorConnectionEvents::$$c__DisplayClass6_0*), "<InvokeMessageIdSubscribers>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers*>()});
  }
};
// Writing MetadataGetter for method: PlayerEditorConnectionEvents::$$c__DisplayClass6_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerEditorConnectionEvents::$$c__DisplayClass6_0::*)()>(&PlayerEditorConnectionEvents::$$c__DisplayClass6_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerEditorConnectionEvents::$$c__DisplayClass6_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerEditorConnectionEvents::$$c__DisplayClass6_0::*)()>(&PlayerEditorConnectionEvents::$$c__DisplayClass6_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerEditorConnectionEvents::$$c__DisplayClass6_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/<>c__DisplayClass7_0
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_--c__DisplayClass7_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/MessageTypeSubscribers
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_MessageTypeSubscribers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/<>c__DisplayClass7_0.<AddAndCreate>b__0
bool UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::$$c__DisplayClass7_0::$AddAndCreate$b__0(UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::$$c__DisplayClass7_0::<AddAndCreate>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddAndCreate>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Writing MetadataGetter for method: PlayerEditorConnectionEvents::$$c__DisplayClass7_0::$AddAndCreate$b__0
// Il2CppName: <AddAndCreate>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayerEditorConnectionEvents::$$c__DisplayClass7_0::*)(UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers*)>(&PlayerEditorConnectionEvents::$$c__DisplayClass7_0::$AddAndCreate$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerEditorConnectionEvents::$$c__DisplayClass7_0*), "<AddAndCreate>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers*>()});
  }
};
// Writing MetadataGetter for method: PlayerEditorConnectionEvents::$$c__DisplayClass7_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerEditorConnectionEvents::$$c__DisplayClass7_0::*)()>(&PlayerEditorConnectionEvents::$$c__DisplayClass7_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerEditorConnectionEvents::$$c__DisplayClass7_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerEditorConnectionEvents::$$c__DisplayClass7_0::*)()>(&PlayerEditorConnectionEvents::$$c__DisplayClass7_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerEditorConnectionEvents::$$c__DisplayClass7_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
