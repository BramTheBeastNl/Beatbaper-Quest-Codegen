// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__5.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__6.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<DataIsValidAsync>d__7
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-DataIsValidAsync-d__7.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformAdditionalContentModel/<DataIsValidAsync>d__7.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<DataIsValidAsync>d__7.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__8.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__9
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__9.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__9.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__9.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<>c__DisplayClass10_0
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_--c__DisplayClass10_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformAdditionalContentModel/<>c__DisplayClass10_0.<LaunchCheckoutFlow>b__0
void GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass10_0::$LaunchCheckoutFlow$b__0(Oculus::Platform::Message_1<Oculus::Platform::Models::Purchase*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass10_0::<LaunchCheckoutFlow>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LaunchCheckoutFlow>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusPlatformAdditionalContentModel/<LaunchCheckoutFlow>d__10
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-LaunchCheckoutFlow-d__10.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformAdditionalContentModel/<LaunchCheckoutFlow>d__10.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<LaunchCheckoutFlow>d__10.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__11
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-IsPackBetterBuyThanLevelAsync-d__11.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__11.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__11.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<>c__DisplayClass12_0
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_--c__DisplayClass12_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
// Including type: Oculus.Platform.Message`1/Callback
#include "Oculus/Platform/Message_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformAdditionalContentModel/<>c__DisplayClass12_0.<CheckForNewEntitlementsAsync>b__0
void GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::$CheckForNewEntitlementsAsync$b__0(Oculus::Platform::Message_1<Oculus::Platform::Models::AssetDetailsList*>* getListMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::<CheckForNewEntitlementsAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CheckForNewEntitlementsAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(getListMsg)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, getListMsg);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<>c__DisplayClass12_0.<CheckForNewEntitlementsAsync>b__1
void GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::$CheckForNewEntitlementsAsync$b__1(Oculus::Platform::Message_1<Oculus::Platform::Models::PurchaseList*>* getPurchasesMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::<CheckForNewEntitlementsAsync>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CheckForNewEntitlementsAsync>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(getPurchasesMsg)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, getPurchasesMsg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__12
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-CheckForNewEntitlementsAsync-d__12.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__12.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__12.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamPlatformAdditionalContentModel
#include "GlobalNamespace/SteamPlatformAdditionalContentModel.hpp"
// Including type: SteamPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__6.hpp"
// Including type: SteamPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__7
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__7.hpp"
// Including type: SteamPlatformAdditionalContentModel/<DataIsValidAsync>d__8
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-DataIsValidAsync-d__8.hpp"
// Including type: SteamPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__9
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__9.hpp"
// Including type: SteamPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__10.hpp"
// Including type: SteamPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__14
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-CheckForNewEntitlementsAsync-d__14.hpp"
// Including type: SteamLevelProductsModelSO
#include "GlobalNamespace/SteamLevelProductsModelSO.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamPlatformAdditionalContentModel.DataIsValidAsync
System::Threading::Tasks::Task_1<bool>* GlobalNamespace::SteamPlatformAdditionalContentModel::DataIsValidAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::DataIsValidAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DataIsValidAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.OpenProductStore
void GlobalNamespace::SteamPlatformAdditionalContentModel::OpenProductStore(uint appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::OpenProductStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenProductStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, appId);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.OpenBundleUrl
void GlobalNamespace::SteamPlatformAdditionalContentModel::OpenBundleUrl(uint bundleId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::OpenBundleUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenBundleUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bundleId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bundleId);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.CheckForNewEntitlementsAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>* GlobalNamespace::SteamPlatformAdditionalContentModel::CheckForNewEntitlementsAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::CheckForNewEntitlementsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForNewEntitlementsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.HasLevelEntitlement
bool GlobalNamespace::SteamPlatformAdditionalContentModel::HasLevelEntitlement(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::HasLevelEntitlement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasLevelEntitlement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, levelId);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.HasLevelPackEntitlement
bool GlobalNamespace::SteamPlatformAdditionalContentModel::HasLevelPackEntitlement(::Il2CppString* levelPackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::HasLevelPackEntitlement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasLevelPackEntitlement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, levelPackId);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.InvalidateDataInternal
void GlobalNamespace::SteamPlatformAdditionalContentModel::InvalidateDataInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::InvalidateDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.GetLevelEntitlementStatusInternalAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::SteamPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync(::Il2CppString* levelId, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, levelId, cancellationToken);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.GetPackEntitlementStatusInternalAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::SteamPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync(::Il2CppString* packId, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packId), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, packId, cancellationToken);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.OpenLevelProductStoreAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::SteamPlatformAdditionalContentModel::OpenLevelProductStoreAsync(::Il2CppString* levelId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::OpenLevelProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(this, ___internal__method, levelId, token);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.OpenLevelPackProductStoreAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::SteamPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelPackProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.IsPackBetterBuyThanLevelAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>* GlobalNamespace::SteamPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPackBetterBuyThanLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__6.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__6.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__6.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__7
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__7.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__7.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__7.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamPlatformAdditionalContentModel/<DataIsValidAsync>d__8
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-DataIsValidAsync-d__8.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamPlatformAdditionalContentModel/<DataIsValidAsync>d__8.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<DataIsValidAsync>d__8.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__9
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__9.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__9.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__9.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__10.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__14
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-CheckForNewEntitlementsAsync-d__14.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__14.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__14.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestPlatformAdditionalContentModel
#include "GlobalNamespace/TestPlatformAdditionalContentModel.hpp"
// Including type: TestPlatformAdditionalContentModel/Entitlement
#include "GlobalNamespace/TestPlatformAdditionalContentModel_Entitlement.hpp"
// Including type: TestPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__5.hpp"
// Including type: TestPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__6.hpp"
// Including type: TestPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__7
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-IsPackBetterBuyThanLevelAsync-d__7.hpp"
// Including type: TestPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__8.hpp"
// Including type: TestPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__10.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestPlatformAdditionalContentModel.BuyLevel
void GlobalNamespace::TestPlatformAdditionalContentModel::BuyLevel(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::BuyLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuyLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelId);
}
// Autogenerated method: TestPlatformAdditionalContentModel.InvalidateDataInternal
void GlobalNamespace::TestPlatformAdditionalContentModel::InvalidateDataInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::InvalidateDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel.GetLevelEntitlementStatusInternalAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::TestPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync(::Il2CppString* levelId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, levelId, token);
}
// Autogenerated method: TestPlatformAdditionalContentModel.GetPackEntitlementStatusInternalAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::TestPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated method: TestPlatformAdditionalContentModel.IsPackBetterBuyThanLevelAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>* GlobalNamespace::TestPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPackBetterBuyThanLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated method: TestPlatformAdditionalContentModel.OpenLevelProductStoreAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::TestPlatformAdditionalContentModel::OpenLevelProductStoreAsync(::Il2CppString* levelId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::OpenLevelProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(this, ___internal__method, levelId, token);
}
// Autogenerated method: TestPlatformAdditionalContentModel.OpenLevelPackProductStoreAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::TestPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelPackProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestPlatformAdditionalContentModel/Entitlement
#include "GlobalNamespace/TestPlatformAdditionalContentModel_Entitlement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__5.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5.MoveNext
void GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5.SetStateMachine
void GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__6.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6.MoveNext
void GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6.SetStateMachine
void GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__7
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-IsPackBetterBuyThanLevelAsync-d__7.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__7.MoveNext
void GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__7.SetStateMachine
void GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__8.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8.MoveNext
void GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8.SetStateMachine
void GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__10.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10.MoveNext
void GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10.SetStateMachine
void GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppStaticSettingsSO
#include "GlobalNamespace/AppStaticSettingsSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataMirrorTransform
#include "GlobalNamespace/BeatmapDataMirrorTransform.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataMirrorTransform.CreateTransformedData
GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataMirrorTransform::CreateTransformedData(GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDataMirrorTransform::CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataMirrorTransform", "CreateTransformedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapData);
}
// Autogenerated method: BeatmapDataMirrorTransform.MirrorTransformBeatmapObject
void GlobalNamespace::BeatmapDataMirrorTransform::MirrorTransformBeatmapObject(GlobalNamespace::BeatmapObjectData* beatmapObjectData, int beatmapLineCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDataMirrorTransform::MirrorTransformBeatmapObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataMirrorTransform", "MirrorTransformBeatmapObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapObjectData), ::il2cpp_utils::ExtractType(beatmapLineCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapObjectData, beatmapLineCount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataNoArrowsTransform
#include "GlobalNamespace/BeatmapDataNoArrowsTransform.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataNoArrowsTransform.CreateTransformedData
GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataNoArrowsTransform::CreateTransformedData(GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDataNoArrowsTransform::CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataNoArrowsTransform", "CreateTransformedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataNoEnvironmentEffectsTransform
#include "GlobalNamespace/BeatmapDataNoEnvironmentEffectsTransform.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataNoEnvironmentEffectsTransform.CreateTransformedData
GlobalNamespace::BeatmapData* GlobalNamespace::BeatmapDataNoEnvironmentEffectsTransform::CreateTransformedData(GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDataNoEnvironmentEffectsTransform::CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataNoEnvironmentEffectsTransform", "CreateTransformedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataObstaclesAndBombsTransform
#include "GlobalNamespace/BeatmapDataObstaclesAndBombsTransform.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataObstaclesAndBombsTransform.CreateTransformedData
GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::CreateTransformedData(GlobalNamespace::IReadonlyBeatmapData* beatmapData, GlobalNamespace::GameplayModifiers::EnabledObstacleType enabledObstaclesType, bool noBombs) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataObstaclesAndBombsTransform", "CreateTransformedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData), ::il2cpp_utils::ExtractType(enabledObstaclesType), ::il2cpp_utils::ExtractType(noBombs)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapData, enabledObstaclesType, noBombs);
}
// Autogenerated method: BeatmapDataObstaclesAndBombsTransform.ShouldUseBeatmapObject
bool GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::ShouldUseBeatmapObject(GlobalNamespace::BeatmapObjectData* beatmapObjectData, GlobalNamespace::GameplayModifiers::EnabledObstacleType enabledObstaclesType, bool noBombs) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::ShouldUseBeatmapObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataObstaclesAndBombsTransform", "ShouldUseBeatmapObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapObjectData), ::il2cpp_utils::ExtractType(enabledObstaclesType), ::il2cpp_utils::ExtractType(noBombs)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapObjectData, enabledObstaclesType, noBombs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataStrobeFilterTransform
#include "GlobalNamespace/BeatmapDataStrobeFilterTransform.hpp"
// Including type: BeatmapDataStrobeFilterTransform/StrobeStreakData
#include "GlobalNamespace/BeatmapDataStrobeFilterTransform_StrobeStreakData.hpp"
// Including type: BeatmapDataStrobeFilterTransform/<>c__DisplayClass2_0
#include "GlobalNamespace/BeatmapDataStrobeFilterTransform_--c__DisplayClass2_0.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: EnvironmentIntensityReductionOptions
#include "GlobalNamespace/EnvironmentIntensityReductionOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kMaxSecondsToConsiderStrobe
float GlobalNamespace::BeatmapDataStrobeFilterTransform::_get_kMaxSecondsToConsiderStrobe() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDataStrobeFilterTransform::_get_kMaxSecondsToConsiderStrobe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BeatmapDataStrobeFilterTransform", "kMaxSecondsToConsiderStrobe"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMaxSecondsToConsiderStrobe
void GlobalNamespace::BeatmapDataStrobeFilterTransform::_set_kMaxSecondsToConsiderStrobe(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDataStrobeFilterTransform::_set_kMaxSecondsToConsiderStrobe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDataStrobeFilterTransform", "kMaxSecondsToConsiderStrobe", value));
}
// Autogenerated method: BeatmapDataStrobeFilterTransform.CreateTransformedData
GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataStrobeFilterTransform::CreateTransformedData(GlobalNamespace::IReadonlyBeatmapData* beatmapData, GlobalNamespace::EnvironmentIntensityReductionOptions* environmentIntensityReductionOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDataStrobeFilterTransform::CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataStrobeFilterTransform", "CreateTransformedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData), ::il2cpp_utils::ExtractType(environmentIntensityReductionOptions)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapData, environmentIntensityReductionOptions);
}
// Autogenerated method: BeatmapDataStrobeFilterTransform.<CreateTransformedData>g__IncreaseAllLaterStrobeStartEndIndexes|2_0
void GlobalNamespace::BeatmapDataStrobeFilterTransform::$CreateTransformedData$g__IncreaseAllLaterStrobeStartEndIndexes_2_0(float insertionTime, GlobalNamespace::BeatmapDataStrobeFilterTransform::$$c__DisplayClass2_0& param_1) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDataStrobeFilterTransform::<CreateTransformedData>g__IncreaseAllLaterStrobeStartEndIndexes|2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataStrobeFilterTransform", "<CreateTransformedData>g__IncreaseAllLaterStrobeStartEndIndexes|2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(insertionTime), ::il2cpp_utils::ExtractType(param_1)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, insertionTime, param_1);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataStrobeFilterTransform/StrobeStreakData
#include "GlobalNamespace/BeatmapDataStrobeFilterTransform_StrobeStreakData.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataStrobeFilterTransform/StrobeStreakData.StartPotentialStrobe
void GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::StartPotentialStrobe(GlobalNamespace::BeatmapEventData* startEventData, int originalIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::StartPotentialStrobe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPotentialStrobe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startEventData), ::il2cpp_utils::ExtractType(originalIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, startEventData, originalIndex);
}
// Autogenerated method: BeatmapDataStrobeFilterTransform/StrobeStreakData.AddStrobeData
void GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::AddStrobeData(GlobalNamespace::BeatmapEventData* startEventData, int beatmapIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::AddStrobeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddStrobeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startEventData), ::il2cpp_utils::ExtractType(beatmapIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, startEventData, beatmapIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataTransformHelper
#include "GlobalNamespace/BeatmapDataTransformHelper.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: EnvironmentEffectsFilterPreset
#include "GlobalNamespace/EnvironmentEffectsFilterPreset.hpp"
// Including type: EnvironmentIntensityReductionOptions
#include "GlobalNamespace/EnvironmentIntensityReductionOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataTransformHelper.CreateTransformedBeatmapData
GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataTransformHelper::CreateTransformedBeatmapData(GlobalNamespace::IReadonlyBeatmapData* beatmapData, GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel, GlobalNamespace::GameplayModifiers* gameplayModifiers, GlobalNamespace::PracticeSettings* practiceSettings, bool leftHanded, GlobalNamespace::EnvironmentEffectsFilterPreset environmentEffectsFilterPreset, GlobalNamespace::EnvironmentIntensityReductionOptions* environmentIntensityReductionOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDataTransformHelper::CreateTransformedBeatmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataTransformHelper", "CreateTransformedBeatmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData), ::il2cpp_utils::ExtractType(beatmapLevel), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(practiceSettings), ::il2cpp_utils::ExtractType(leftHanded), ::il2cpp_utils::ExtractType(environmentEffectsFilterPreset), ::il2cpp_utils::ExtractType(environmentIntensityReductionOptions)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapData, beatmapLevel, gameplayModifiers, practiceSettings, leftHanded, environmentEffectsFilterPreset, environmentIntensityReductionOptions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataZenModeTransform
#include "GlobalNamespace/BeatmapDataZenModeTransform.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataZenModeTransform.CreateTransformedData
GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataZenModeTransform::CreateTransformedData(GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapDataZenModeTransform::CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataZenModeTransform", "CreateTransformedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectExecutionRating
#include "GlobalNamespace/BeatmapObjectExecutionRating.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapObjectExecutionRating.get_beatmapObjectRatingType
GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType GlobalNamespace::BeatmapObjectExecutionRating::get_beatmapObjectRatingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRating::get_beatmapObjectRatingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapObjectRatingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectExecutionRating.set_beatmapObjectRatingType
void GlobalNamespace::BeatmapObjectExecutionRating::set_beatmapObjectRatingType(GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRating::set_beatmapObjectRatingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmapObjectRatingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectExecutionRating.get_time
float GlobalNamespace::BeatmapObjectExecutionRating::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRating::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectExecutionRating.set_time
void GlobalNamespace::BeatmapObjectExecutionRating::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRating::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectExecutionRating/BeatmapObjectExecutionRatingType
#include "GlobalNamespace/BeatmapObjectExecutionRating.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapObjectExecutionRating/BeatmapObjectExecutionRatingType Note
GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType::_get_Note() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType::_get_Note");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType>("", "BeatmapObjectExecutionRating/BeatmapObjectExecutionRatingType", "Note"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapObjectExecutionRating/BeatmapObjectExecutionRatingType Note
void GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType::_set_Note(GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType::_set_Note");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapObjectExecutionRating/BeatmapObjectExecutionRatingType", "Note", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapObjectExecutionRating/BeatmapObjectExecutionRatingType Bomb
GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType::_get_Bomb() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType::_get_Bomb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType>("", "BeatmapObjectExecutionRating/BeatmapObjectExecutionRatingType", "Bomb"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapObjectExecutionRating/BeatmapObjectExecutionRatingType Bomb
void GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType::_set_Bomb(GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType::_set_Bomb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapObjectExecutionRating/BeatmapObjectExecutionRatingType", "Bomb", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapObjectExecutionRating/BeatmapObjectExecutionRatingType Obstacle
GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType::_get_Obstacle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType::_get_Obstacle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType>("", "BeatmapObjectExecutionRating/BeatmapObjectExecutionRatingType", "Obstacle"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapObjectExecutionRating/BeatmapObjectExecutionRatingType Obstacle
void GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType::_set_Obstacle(GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRating::BeatmapObjectExecutionRatingType::_set_Obstacle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapObjectExecutionRating/BeatmapObjectExecutionRatingType", "Obstacle", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BombExecutionRating
#include "GlobalNamespace/BombExecutionRating.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BombExecutionRating.get_rating
GlobalNamespace::BombExecutionRating::Rating GlobalNamespace::BombExecutionRating::get_rating() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombExecutionRating::get_rating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BombExecutionRating::Rating, false>(this, ___internal__method);
}
// Autogenerated method: BombExecutionRating.set_rating
void GlobalNamespace::BombExecutionRating::set_rating(GlobalNamespace::BombExecutionRating::Rating value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombExecutionRating::set_rating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BombExecutionRating/Rating
#include "GlobalNamespace/BombExecutionRating.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BombExecutionRating/Rating OK
GlobalNamespace::BombExecutionRating::Rating GlobalNamespace::BombExecutionRating::Rating::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombExecutionRating::Rating::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BombExecutionRating::Rating>("", "BombExecutionRating/Rating", "OK"));
}
// Autogenerated static field setter
// Set static field: static public BombExecutionRating/Rating OK
void GlobalNamespace::BombExecutionRating::Rating::_set_OK(GlobalNamespace::BombExecutionRating::Rating value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombExecutionRating::Rating::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BombExecutionRating/Rating", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public BombExecutionRating/Rating NotGood
GlobalNamespace::BombExecutionRating::Rating GlobalNamespace::BombExecutionRating::Rating::_get_NotGood() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombExecutionRating::Rating::_get_NotGood");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BombExecutionRating::Rating>("", "BombExecutionRating/Rating", "NotGood"));
}
// Autogenerated static field setter
// Set static field: static public BombExecutionRating/Rating NotGood
void GlobalNamespace::BombExecutionRating::Rating::_set_NotGood(GlobalNamespace::BombExecutionRating::Rating value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombExecutionRating::Rating::_set_NotGood");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BombExecutionRating/Rating", "NotGood", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BookmarksFoldersModel
#include "GlobalNamespace/BookmarksFoldersModel.hpp"
// Including type: BookmarksFoldersModel/<>c
#include "GlobalNamespace/BookmarksFoldersModel_--c.hpp"
// Including type: FileBrowserItem
#include "GlobalNamespace/FileBrowserItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BookmarksFoldersModel.get_bookmarksFolders
::Array<GlobalNamespace::FileBrowserItem*>* GlobalNamespace::BookmarksFoldersModel::get_bookmarksFolders() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BookmarksFoldersModel::get_bookmarksFolders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bookmarksFolders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::FileBrowserItem*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BookmarksFoldersModel/<>c
#include "GlobalNamespace/BookmarksFoldersModel_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BookmarksFoldersModel/<>c <>9
GlobalNamespace::BookmarksFoldersModel::$$c* GlobalNamespace::BookmarksFoldersModel::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BookmarksFoldersModel::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::BookmarksFoldersModel::$$c*>("", "BookmarksFoldersModel/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BookmarksFoldersModel/<>c <>9
void GlobalNamespace::BookmarksFoldersModel::$$c::_set_$$9(GlobalNamespace::BookmarksFoldersModel::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BookmarksFoldersModel::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BookmarksFoldersModel/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Environment/SpecialFolder,System.String> <>9__3_0
System::Func_2<System::Environment::SpecialFolder, ::Il2CppString*>* GlobalNamespace::BookmarksFoldersModel::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BookmarksFoldersModel::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Environment::SpecialFolder, ::Il2CppString*>*>("", "BookmarksFoldersModel/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Environment/SpecialFolder,System.String> <>9__3_0
void GlobalNamespace::BookmarksFoldersModel::$$c::_set_$$9__3_0(System::Func_2<System::Environment::SpecialFolder, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BookmarksFoldersModel::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BookmarksFoldersModel/<>c", "<>9__3_0", value)));
}
// Autogenerated method: BookmarksFoldersModel/<>c..cctor
void GlobalNamespace::BookmarksFoldersModel::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BookmarksFoldersModel::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BookmarksFoldersModel/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: BookmarksFoldersModel/<>c.<get_bookmarksFolders>b__3_0
::Il2CppString* GlobalNamespace::BookmarksFoldersModel::$$c::$get_bookmarksFolders$b__3_0(System::Environment::SpecialFolder specialFolder) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BookmarksFoldersModel::$$c::<get_bookmarksFolders>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_bookmarksFolders>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specialFolder)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, specialFolder);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomLevelLoader
#include "GlobalNamespace/CustomLevelLoader.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: EnvironmentsListSO
#include "GlobalNamespace/EnvironmentsListSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DeeplinkManagerToDestinationRequestManagerAdapter
#include "GlobalNamespace/DeeplinkManagerToDestinationRequestManagerAdapter.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
// Including type: IDeeplinkManager
#include "GlobalNamespace/IDeeplinkManager.hpp"
// Including type: Deeplink
#include "GlobalNamespace/Deeplink.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.add_didSendMenuDestinationRequestEvent
void GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::add_didSendMenuDestinationRequestEvent(System::Action_1<GlobalNamespace::MenuDestination*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::add_didSendMenuDestinationRequestEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSendMenuDestinationRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.remove_didSendMenuDestinationRequestEvent
void GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::remove_didSendMenuDestinationRequestEvent(System::Action_1<GlobalNamespace::MenuDestination*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::remove_didSendMenuDestinationRequestEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSendMenuDestinationRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.get_currentMenuDestinationRequest
GlobalNamespace::MenuDestination* GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::get_currentMenuDestinationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::get_currentMenuDestinationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentMenuDestinationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MenuDestination*, false>(this, ___internal__method);
}
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.set_currentMenuDestinationRequest
void GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::set_currentMenuDestinationRequest(GlobalNamespace::MenuDestination* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::set_currentMenuDestinationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentMenuDestinationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.Init
void GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::Init(GlobalNamespace::IDeeplinkManager* deeplinkManager) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deeplinkManager)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, deeplinkManager);
}
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.Clear
void GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.HandleDeeplinkManagerDidReceiveDeeplink
void GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::HandleDeeplinkManagerDidReceiveDeeplink(GlobalNamespace::Deeplink* deeplink) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::HandleDeeplinkManagerDidReceiveDeeplink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDeeplinkManagerDidReceiveDeeplink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deeplink)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, deeplink);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IDeeplinkManager
#include "GlobalNamespace/IDeeplinkManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Deeplink
#include "GlobalNamespace/Deeplink.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IDeeplinkManager.add_didReceiveDeeplinkEvent
void GlobalNamespace::IDeeplinkManager::add_didReceiveDeeplinkEvent(System::Action_1<GlobalNamespace::Deeplink*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDeeplinkManager::add_didReceiveDeeplinkEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didReceiveDeeplinkEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IDeeplinkManager.remove_didReceiveDeeplinkEvent
void GlobalNamespace::IDeeplinkManager::remove_didReceiveDeeplinkEvent(System::Action_1<GlobalNamespace::Deeplink*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDeeplinkManager::remove_didReceiveDeeplinkEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didReceiveDeeplinkEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IDeeplinkManager.get_currentDeeplink
GlobalNamespace::Deeplink* GlobalNamespace::IDeeplinkManager::get_currentDeeplink() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDeeplinkManager::get_currentDeeplink");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentDeeplink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::Deeplink*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Deeplink
#include "GlobalNamespace/Deeplink.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IDestinationRequestManager
#include "GlobalNamespace/IDestinationRequestManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IDestinationRequestManager.add_didSendMenuDestinationRequestEvent
void GlobalNamespace::IDestinationRequestManager::add_didSendMenuDestinationRequestEvent(System::Action_1<GlobalNamespace::MenuDestination*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDestinationRequestManager::add_didSendMenuDestinationRequestEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSendMenuDestinationRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IDestinationRequestManager.remove_didSendMenuDestinationRequestEvent
void GlobalNamespace::IDestinationRequestManager::remove_didSendMenuDestinationRequestEvent(System::Action_1<GlobalNamespace::MenuDestination*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDestinationRequestManager::remove_didSendMenuDestinationRequestEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSendMenuDestinationRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IDestinationRequestManager.get_currentMenuDestinationRequest
GlobalNamespace::MenuDestination* GlobalNamespace::IDestinationRequestManager::get_currentMenuDestinationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDestinationRequestManager::get_currentMenuDestinationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentMenuDestinationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MenuDestination*, false>(this, ___internal__method);
}
// Autogenerated method: IDestinationRequestManager.set_currentMenuDestinationRequest
void GlobalNamespace::IDestinationRequestManager::set_currentMenuDestinationRequest(GlobalNamespace::MenuDestination* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDestinationRequestManager::set_currentMenuDestinationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentMenuDestinationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IDestinationRequestManager.Clear
void GlobalNamespace::IDestinationRequestManager::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDestinationRequestManager::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainMenuDestinationRequestController
#include "GlobalNamespace/MainMenuDestinationRequestController.hpp"
// Including type: MainMenuDestinationRequestController/<>c__DisplayClass8_0
#include "GlobalNamespace/MainMenuDestinationRequestController_--c__DisplayClass8_0.hpp"
// Including type: MainMenuDestinationRequestController/<ProcessDestinationRequest>d__8
#include "GlobalNamespace/MainMenuDestinationRequestController_-ProcessDestinationRequest-d__8.hpp"
// Including type: IDestinationRequestManager
#include "GlobalNamespace/IDestinationRequestManager.hpp"
// Including type: MenuScenesTransitionSetupDataSO
#include "GlobalNamespace/MenuScenesTransitionSetupDataSO.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MainMenuDestinationRequestController.Initialize
void GlobalNamespace::MainMenuDestinationRequestController::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuDestinationRequestController::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuDestinationRequestController.Dispose
void GlobalNamespace::MainMenuDestinationRequestController::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuDestinationRequestController::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuDestinationRequestController.HandleGameScenesManagerInstallEarlyBindings
void GlobalNamespace::MainMenuDestinationRequestController::HandleGameScenesManagerInstallEarlyBindings(GlobalNamespace::ScenesTransitionSetupDataSO* scenesTransitionSetupData, Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuDestinationRequestController::HandleGameScenesManagerInstallEarlyBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameScenesManagerInstallEarlyBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scenesTransitionSetupData), ::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, scenesTransitionSetupData, container);
}
// Autogenerated method: MainMenuDestinationRequestController.HandleDestinationRequestManagerDidSendMenuDestinationRequest
void GlobalNamespace::MainMenuDestinationRequestController::HandleDestinationRequestManagerDidSendMenuDestinationRequest(GlobalNamespace::MenuDestination* menuDestination) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuDestinationRequestController::HandleDestinationRequestManagerDidSendMenuDestinationRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDestinationRequestManagerDidSendMenuDestinationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(menuDestination)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, menuDestination);
}
// Autogenerated method: MainMenuDestinationRequestController.ProcessDestinationRequest
void GlobalNamespace::MainMenuDestinationRequestController::ProcessDestinationRequest(GlobalNamespace::MenuDestination* menuDestination) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuDestinationRequestController::ProcessDestinationRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessDestinationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(menuDestination)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, menuDestination);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainMenuDestinationRequestController/<>c__DisplayClass8_0
#include "GlobalNamespace/MainMenuDestinationRequestController_--c__DisplayClass8_0.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MainMenuDestinationRequestController/<>c__DisplayClass8_0.<ProcessDestinationRequest>b__0
void GlobalNamespace::MainMenuDestinationRequestController::$$c__DisplayClass8_0::$ProcessDestinationRequest$b__0(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuDestinationRequestController::$$c__DisplayClass8_0::<ProcessDestinationRequest>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ProcessDestinationRequest>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainMenuDestinationRequestController/<ProcessDestinationRequest>d__8
#include "GlobalNamespace/MainMenuDestinationRequestController_-ProcessDestinationRequest-d__8.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
// Including type: MainMenuDestinationRequestController/<>c__DisplayClass8_0
#include "GlobalNamespace/MainMenuDestinationRequestController_--c__DisplayClass8_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MainMenuDestinationRequestController/<ProcessDestinationRequest>d__8.MoveNext
void GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MainMenuDestinationRequestController/<ProcessDestinationRequest>d__8.SetStateMachine
void GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectSubMenuDestination
#include "GlobalNamespace/SelectSubMenuDestination.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectSubMenuDestination/Destination
#include "GlobalNamespace/SelectSubMenuDestination.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SelectSubMenuDestination/Destination MainMenu
GlobalNamespace::SelectSubMenuDestination::Destination GlobalNamespace::SelectSubMenuDestination::Destination::_get_MainMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectSubMenuDestination::Destination::_get_MainMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectSubMenuDestination::Destination>("", "SelectSubMenuDestination/Destination", "MainMenu"));
}
// Autogenerated static field setter
// Set static field: static public SelectSubMenuDestination/Destination MainMenu
void GlobalNamespace::SelectSubMenuDestination::Destination::_set_MainMenu(GlobalNamespace::SelectSubMenuDestination::Destination value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectSubMenuDestination::Destination::_set_MainMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectSubMenuDestination/Destination", "MainMenu", value));
}
// Autogenerated static field getter
// Get static field: static public SelectSubMenuDestination/Destination Campaign
GlobalNamespace::SelectSubMenuDestination::Destination GlobalNamespace::SelectSubMenuDestination::Destination::_get_Campaign() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectSubMenuDestination::Destination::_get_Campaign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectSubMenuDestination::Destination>("", "SelectSubMenuDestination/Destination", "Campaign"));
}
// Autogenerated static field setter
// Set static field: static public SelectSubMenuDestination/Destination Campaign
void GlobalNamespace::SelectSubMenuDestination::Destination::_set_Campaign(GlobalNamespace::SelectSubMenuDestination::Destination value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectSubMenuDestination::Destination::_set_Campaign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectSubMenuDestination/Destination", "Campaign", value));
}
// Autogenerated static field getter
// Get static field: static public SelectSubMenuDestination/Destination SoloFreePlay
GlobalNamespace::SelectSubMenuDestination::Destination GlobalNamespace::SelectSubMenuDestination::Destination::_get_SoloFreePlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectSubMenuDestination::Destination::_get_SoloFreePlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectSubMenuDestination::Destination>("", "SelectSubMenuDestination/Destination", "SoloFreePlay"));
}
// Autogenerated static field setter
// Set static field: static public SelectSubMenuDestination/Destination SoloFreePlay
void GlobalNamespace::SelectSubMenuDestination::Destination::_set_SoloFreePlay(GlobalNamespace::SelectSubMenuDestination::Destination value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectSubMenuDestination::Destination::_set_SoloFreePlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectSubMenuDestination/Destination", "SoloFreePlay", value));
}
// Autogenerated static field getter
// Get static field: static public SelectSubMenuDestination/Destination PartyFreePlay
GlobalNamespace::SelectSubMenuDestination::Destination GlobalNamespace::SelectSubMenuDestination::Destination::_get_PartyFreePlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectSubMenuDestination::Destination::_get_PartyFreePlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectSubMenuDestination::Destination>("", "SelectSubMenuDestination/Destination", "PartyFreePlay"));
}
// Autogenerated static field setter
// Set static field: static public SelectSubMenuDestination/Destination PartyFreePlay
void GlobalNamespace::SelectSubMenuDestination::Destination::_set_PartyFreePlay(GlobalNamespace::SelectSubMenuDestination::Destination value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectSubMenuDestination::Destination::_set_PartyFreePlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectSubMenuDestination/Destination", "PartyFreePlay", value));
}
// Autogenerated static field getter
// Get static field: static public SelectSubMenuDestination/Destination Settings
GlobalNamespace::SelectSubMenuDestination::Destination GlobalNamespace::SelectSubMenuDestination::Destination::_get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectSubMenuDestination::Destination::_get_Settings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectSubMenuDestination::Destination>("", "SelectSubMenuDestination/Destination", "Settings"));
}
// Autogenerated static field setter
// Set static field: static public SelectSubMenuDestination/Destination Settings
void GlobalNamespace::SelectSubMenuDestination::Destination::_set_Settings(GlobalNamespace::SelectSubMenuDestination::Destination value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectSubMenuDestination::Destination::_set_Settings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectSubMenuDestination/Destination", "Settings", value));
}
// Autogenerated static field getter
// Get static field: static public SelectSubMenuDestination/Destination Tutorial
GlobalNamespace::SelectSubMenuDestination::Destination GlobalNamespace::SelectSubMenuDestination::Destination::_get_Tutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectSubMenuDestination::Destination::_get_Tutorial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectSubMenuDestination::Destination>("", "SelectSubMenuDestination/Destination", "Tutorial"));
}
// Autogenerated static field setter
// Set static field: static public SelectSubMenuDestination/Destination Tutorial
void GlobalNamespace::SelectSubMenuDestination::Destination::_set_Tutorial(GlobalNamespace::SelectSubMenuDestination::Destination value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectSubMenuDestination::Destination::_set_Tutorial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectSubMenuDestination/Destination", "Tutorial", value));
}
// Autogenerated static field getter
// Get static field: static public SelectSubMenuDestination/Destination Multiplayer
GlobalNamespace::SelectSubMenuDestination::Destination GlobalNamespace::SelectSubMenuDestination::Destination::_get_Multiplayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectSubMenuDestination::Destination::_get_Multiplayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectSubMenuDestination::Destination>("", "SelectSubMenuDestination/Destination", "Multiplayer"));
}
// Autogenerated static field setter
// Set static field: static public SelectSubMenuDestination/Destination Multiplayer
void GlobalNamespace::SelectSubMenuDestination::Destination::_set_Multiplayer(GlobalNamespace::SelectSubMenuDestination::Destination value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectSubMenuDestination::Destination::_set_Multiplayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectSubMenuDestination/Destination", "Multiplayer", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectLevelPackDestination
#include "GlobalNamespace/SelectLevelPackDestination.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectLevelDestination
#include "GlobalNamespace/SelectLevelDestination.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SelectMultiplayerLobbyDestination
#include "GlobalNamespace/SelectMultiplayerLobbyDestination.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusDeeplinkManager
#include "GlobalNamespace/OculusDeeplinkManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Deeplink
#include "GlobalNamespace/Deeplink.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.LaunchDetails
#include "Oculus/Platform/Models/LaunchDetails.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusDeeplinkManager.add_didReceiveDeeplinkEvent
void GlobalNamespace::OculusDeeplinkManager::add_didReceiveDeeplinkEvent(System::Action_1<GlobalNamespace::Deeplink*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusDeeplinkManager::add_didReceiveDeeplinkEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didReceiveDeeplinkEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusDeeplinkManager.remove_didReceiveDeeplinkEvent
void GlobalNamespace::OculusDeeplinkManager::remove_didReceiveDeeplinkEvent(System::Action_1<GlobalNamespace::Deeplink*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusDeeplinkManager::remove_didReceiveDeeplinkEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didReceiveDeeplinkEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusDeeplinkManager.get_currentDeeplink
GlobalNamespace::Deeplink* GlobalNamespace::OculusDeeplinkManager::get_currentDeeplink() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusDeeplinkManager::get_currentDeeplink");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentDeeplink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::Deeplink*, false>(this, ___internal__method);
}
// Autogenerated method: OculusDeeplinkManager.Init
void GlobalNamespace::OculusDeeplinkManager::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusDeeplinkManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusDeeplinkManager.OculusPlatformWasInitialized
void GlobalNamespace::OculusDeeplinkManager::OculusPlatformWasInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusDeeplinkManager::OculusPlatformWasInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OculusPlatformWasInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusDeeplinkManager.SetLaunchIntentChangedNotificationCallback
void GlobalNamespace::OculusDeeplinkManager::SetLaunchIntentChangedNotificationCallback(Oculus::Platform::Message_1<::Il2CppString*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusDeeplinkManager::SetLaunchIntentChangedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLaunchIntentChangedNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: OculusDeeplinkManager.ProcessLaunchDetails
void GlobalNamespace::OculusDeeplinkManager::ProcessLaunchDetails(Oculus::Platform::Models::LaunchDetails* launchDetails) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusDeeplinkManager::ProcessLaunchDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLaunchDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(launchDetails)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, launchDetails);
}
// Autogenerated method: OculusDeeplinkManager.UpdateDeeplinkMessage
void GlobalNamespace::OculusDeeplinkManager::UpdateDeeplinkMessage(::Il2CppString* deeplinkMessage, uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusDeeplinkManager::UpdateDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deeplinkMessage), ::il2cpp_utils::ExtractType(roomID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, deeplinkMessage, roomID);
}
// Autogenerated method: OculusDeeplinkManager.IsAtLeastOneFieldPopulated
bool GlobalNamespace::OculusDeeplinkManager::IsAtLeastOneFieldPopulated(GlobalNamespace::Deeplink* deeplink) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusDeeplinkManager::IsAtLeastOneFieldPopulated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAtLeastOneFieldPopulated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deeplink)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, deeplink);
}
// Autogenerated method: OculusDeeplinkManager.Log
void GlobalNamespace::OculusDeeplinkManager::Log(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusDeeplinkManager::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusDeeplinkManager", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestDeeplinkManager
#include "GlobalNamespace/TestDeeplinkManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Deeplink
#include "GlobalNamespace/Deeplink.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE16184
// Autogenerated static field getter
// Get static field: static public TestDeeplinkManager instance
GlobalNamespace::TestDeeplinkManager* GlobalNamespace::TestDeeplinkManager::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestDeeplinkManager::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TestDeeplinkManager*>("", "TestDeeplinkManager", "instance"));
}
// Autogenerated static field setter
// Set static field: static public TestDeeplinkManager instance
void GlobalNamespace::TestDeeplinkManager::_set_instance(GlobalNamespace::TestDeeplinkManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestDeeplinkManager::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TestDeeplinkManager", "instance", value));
}
// Autogenerated method: TestDeeplinkManager.add_didReceiveDeeplinkEvent
void GlobalNamespace::TestDeeplinkManager::add_didReceiveDeeplinkEvent(System::Action_1<GlobalNamespace::Deeplink*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestDeeplinkManager::add_didReceiveDeeplinkEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didReceiveDeeplinkEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TestDeeplinkManager.remove_didReceiveDeeplinkEvent
void GlobalNamespace::TestDeeplinkManager::remove_didReceiveDeeplinkEvent(System::Action_1<GlobalNamespace::Deeplink*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestDeeplinkManager::remove_didReceiveDeeplinkEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didReceiveDeeplinkEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TestDeeplinkManager.get_currentDeeplink
GlobalNamespace::Deeplink* GlobalNamespace::TestDeeplinkManager::get_currentDeeplink() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestDeeplinkManager::get_currentDeeplink");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentDeeplink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::Deeplink*, false>(this, ___internal__method);
}
// Autogenerated method: TestDeeplinkManager.set_currentDeeplink
void GlobalNamespace::TestDeeplinkManager::set_currentDeeplink(GlobalNamespace::Deeplink* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestDeeplinkManager::set_currentDeeplink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentDeeplink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TestDeeplinkManager..cctor
void GlobalNamespace::TestDeeplinkManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestDeeplinkManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TestDeeplinkManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DlcPromoExperimentModel
#include "GlobalNamespace/DlcPromoExperimentModel.hpp"
// Including type: DlcPromoExperimentModel/<InitAfterPlatformWasInitializedAsync>d__8
#include "GlobalNamespace/DlcPromoExperimentModel_-InitAfterPlatformWasInitializedAsync-d__8.hpp"
// Including type: DlcPromoExperimentModel/<UpdateNotOwnedPacksAsync>d__17
#include "GlobalNamespace/DlcPromoExperimentModel_-UpdateNotOwnedPacksAsync-d__17.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: IPlatformUserModel
#include "GlobalNamespace/IPlatformUserModel.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: DlcPromoExperimentDataSO/MusicPackPromoInfo
#include "GlobalNamespace/DlcPromoExperimentDataSO_MusicPackPromoInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DlcPromoExperimentModel.InitAfterPlatformWasInitializedAsync
void GlobalNamespace::DlcPromoExperimentModel::InitAfterPlatformWasInitializedAsync(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DlcPromoExperimentModel::InitAfterPlatformWasInitializedAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitAfterPlatformWasInitializedAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: DlcPromoExperimentModel.GetPackDataForMainMenuPromoBanner
GlobalNamespace::DlcPromoExperimentDataSO::MusicPackPromoInfo* GlobalNamespace::DlcPromoExperimentModel::GetPackDataForMainMenuPromoBanner(bool& probablyOwned) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DlcPromoExperimentModel::GetPackDataForMainMenuPromoBanner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackDataForMainMenuPromoBanner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::DlcPromoExperimentDataSO::MusicPackPromoInfo*, false>(this, ___internal__method, probablyOwned);
}
// Autogenerated method: DlcPromoExperimentModel.MainMenuDlcPromoBannerWasShown
void GlobalNamespace::DlcPromoExperimentModel::MainMenuDlcPromoBannerWasShown(GlobalNamespace::IBeatmapLevelPack* promoPack, ::Il2CppString* customText) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DlcPromoExperimentModel::MainMenuDlcPromoBannerWasShown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MainMenuDlcPromoBannerWasShown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(promoPack), ::il2cpp_utils::ExtractType(customText)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, promoPack, customText);
}
// Autogenerated method: DlcPromoExperimentModel.MainMenuDlcPromoBannerWasPressed
void GlobalNamespace::DlcPromoExperimentModel::MainMenuDlcPromoBannerWasPressed(GlobalNamespace::IBeatmapLevelPack* promoPack, ::Il2CppString* customText) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DlcPromoExperimentModel::MainMenuDlcPromoBannerWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MainMenuDlcPromoBannerWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(promoPack), ::il2cpp_utils::ExtractType(customText)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, promoPack, customText);
}
// Autogenerated method: DlcPromoExperimentModel.BuyLevelButtonWasPressed
void GlobalNamespace::DlcPromoExperimentModel::BuyLevelButtonWasPressed(GlobalNamespace::IPreviewBeatmapLevel* level, ::Il2CppString* page, ::Il2CppString* customText) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DlcPromoExperimentModel::BuyLevelButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuyLevelButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(page), ::il2cpp_utils::ExtractType(customText)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level, page, customText);
}
// Autogenerated method: DlcPromoExperimentModel.BuyLevelButtonWasShown
void GlobalNamespace::DlcPromoExperimentModel::BuyLevelButtonWasShown(GlobalNamespace::IPreviewBeatmapLevel* level, ::Il2CppString* page, ::Il2CppString* customText) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DlcPromoExperimentModel::BuyLevelButtonWasShown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuyLevelButtonWasShown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(page), ::il2cpp_utils::ExtractType(customText)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level, page, customText);
}
// Autogenerated method: DlcPromoExperimentModel.BuyPackButtonWasPressed
void GlobalNamespace::DlcPromoExperimentModel::BuyPackButtonWasPressed(GlobalNamespace::IBeatmapLevelPack* pack, ::Il2CppString* page, ::Il2CppString* customText) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DlcPromoExperimentModel::BuyPackButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuyPackButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack), ::il2cpp_utils::ExtractType(page), ::il2cpp_utils::ExtractType(customText)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pack, page, customText);
}
// Autogenerated method: DlcPromoExperimentModel.BuyPackButtonWasShown
void GlobalNamespace::DlcPromoExperimentModel::BuyPackButtonWasShown(GlobalNamespace::IBeatmapLevelPack* pack, ::Il2CppString* page, ::Il2CppString* customText) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DlcPromoExperimentModel::BuyPackButtonWasShown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuyPackButtonWasShown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack), ::il2cpp_utils::ExtractType(page), ::il2cpp_utils::ExtractType(customText)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pack, page, customText);
}
// Autogenerated method: DlcPromoExperimentModel.GetExperimentEventData
System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* GlobalNamespace::DlcPromoExperimentModel::GetExperimentEventData(::Il2CppString* itemId, ::Il2CppString* page, ::Il2CppString* customText) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DlcPromoExperimentModel::GetExperimentEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExperimentEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(itemId), ::il2cpp_utils::ExtractType(page), ::il2cpp_utils::ExtractType(customText)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*, false>(this, ___internal__method, itemId, page, customText);
}
// Autogenerated method: DlcPromoExperimentModel.UpdateNotOwnedPacksAsync
void GlobalNamespace::DlcPromoExperimentModel::UpdateNotOwnedPacksAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DlcPromoExperimentModel::UpdateNotOwnedPacksAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateNotOwnedPacksAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DlcPromoExperimentModel.HandleAdditionalContentModelDidInvalidateData
void GlobalNamespace::DlcPromoExperimentModel::HandleAdditionalContentModelDidInvalidateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DlcPromoExperimentModel::HandleAdditionalContentModelDidInvalidateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAdditionalContentModelDidInvalidateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DlcPromoExperimentModel/<InitAfterPlatformWasInitializedAsync>d__8
#include "GlobalNamespace/DlcPromoExperimentModel_-InitAfterPlatformWasInitializedAsync-d__8.hpp"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DlcPromoExperimentModel/<InitAfterPlatformWasInitializedAsync>d__8.MoveNext
void GlobalNamespace::DlcPromoExperimentModel::$InitAfterPlatformWasInitializedAsync$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DlcPromoExperimentModel::$InitAfterPlatformWasInitializedAsync$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: DlcPromoExperimentModel/<InitAfterPlatformWasInitializedAsync>d__8.SetStateMachine
void GlobalNamespace::DlcPromoExperimentModel::$InitAfterPlatformWasInitializedAsync$d__8::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DlcPromoExperimentModel::$InitAfterPlatformWasInitializedAsync$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DlcPromoExperimentModel/<UpdateNotOwnedPacksAsync>d__17
#include "GlobalNamespace/DlcPromoExperimentModel_-UpdateNotOwnedPacksAsync-d__17.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: DlcPromoExperimentDataSO/MusicPackPromoInfo
#include "GlobalNamespace/DlcPromoExperimentDataSO_MusicPackPromoInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DlcPromoExperimentModel/<UpdateNotOwnedPacksAsync>d__17.MoveNext
void GlobalNamespace::DlcPromoExperimentModel::$UpdateNotOwnedPacksAsync$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DlcPromoExperimentModel::$UpdateNotOwnedPacksAsync$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: DlcPromoExperimentModel/<UpdateNotOwnedPacksAsync>d__17.SetStateMachine
void GlobalNamespace::DlcPromoExperimentModel::$UpdateNotOwnedPacksAsync$d__17::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DlcPromoExperimentModel::$UpdateNotOwnedPacksAsync$d__17::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
// Including type: SceneInfo
#include "GlobalNamespace/SceneInfo.hpp"
// Including type: EnvironmentTypeSO
#include "GlobalNamespace/EnvironmentTypeSO.hpp"
// Including type: EnvironmentSizeData
#include "GlobalNamespace/EnvironmentSizeData.hpp"
// Including type: EnvironmentIntensityReductionOptions
#include "GlobalNamespace/EnvironmentIntensityReductionOptions.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnvironmentInfoSO.get_sceneInfo
GlobalNamespace::SceneInfo* GlobalNamespace::EnvironmentInfoSO::get_sceneInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentInfoSO::get_sceneInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sceneInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SceneInfo*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentInfoSO.get_environmentName
::Il2CppString* GlobalNamespace::EnvironmentInfoSO::get_environmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentInfoSO::get_environmentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentInfoSO.get_colorScheme
GlobalNamespace::ColorSchemeSO* GlobalNamespace::EnvironmentInfoSO::get_colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentInfoSO::get_colorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorSchemeSO*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentInfoSO.get_serializedName
::Il2CppString* GlobalNamespace::EnvironmentInfoSO::get_serializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentInfoSO::get_serializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentInfoSO.get_environmentType
GlobalNamespace::EnvironmentTypeSO* GlobalNamespace::EnvironmentInfoSO::get_environmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentInfoSO::get_environmentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentTypeSO*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentInfoSO.get_environmentSizeData
GlobalNamespace::EnvironmentSizeData* GlobalNamespace::EnvironmentInfoSO::get_environmentSizeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentInfoSO::get_environmentSizeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentSizeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentSizeData*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentInfoSO.get_environmentIntensityReductionOptions
GlobalNamespace::EnvironmentIntensityReductionOptions* GlobalNamespace::EnvironmentInfoSO::get_environmentIntensityReductionOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentInfoSO::get_environmentIntensityReductionOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentIntensityReductionOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentIntensityReductionOptions*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentInfoSO.get_environmentKeywords
System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>* GlobalNamespace::EnvironmentInfoSO::get_environmentKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentInfoSO::get_environmentKeywords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentKeywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentIntensityReductionOptions
#include "GlobalNamespace/EnvironmentIntensityReductionOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnvironmentIntensityReductionOptions.get_compressExpand
GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType GlobalNamespace::EnvironmentIntensityReductionOptions::get_compressExpand() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentIntensityReductionOptions::get_compressExpand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_compressExpand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentIntensityReductionOptions.get_rotateRings
GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType GlobalNamespace::EnvironmentIntensityReductionOptions::get_rotateRings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentIntensityReductionOptions::get_rotateRings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotateRings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentIntensityReductionOptions/CompressExpandReductionType
#include "GlobalNamespace/EnvironmentIntensityReductionOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EnvironmentIntensityReductionOptions/CompressExpandReductionType Keep
GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType::_get_Keep() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType::_get_Keep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType>("", "EnvironmentIntensityReductionOptions/CompressExpandReductionType", "Keep"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentIntensityReductionOptions/CompressExpandReductionType Keep
void GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType::_set_Keep(GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType::_set_Keep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentIntensityReductionOptions/CompressExpandReductionType", "Keep", value));
}
// Autogenerated static field getter
// Get static field: static public EnvironmentIntensityReductionOptions/CompressExpandReductionType RemoveWithStrobeFilter
GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType::_get_RemoveWithStrobeFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType::_get_RemoveWithStrobeFilter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType>("", "EnvironmentIntensityReductionOptions/CompressExpandReductionType", "RemoveWithStrobeFilter"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentIntensityReductionOptions/CompressExpandReductionType RemoveWithStrobeFilter
void GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType::_set_RemoveWithStrobeFilter(GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType::_set_RemoveWithStrobeFilter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentIntensityReductionOptions/CompressExpandReductionType", "RemoveWithStrobeFilter", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentIntensityReductionOptions/RotateRingsReductionType
#include "GlobalNamespace/EnvironmentIntensityReductionOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EnvironmentIntensityReductionOptions/RotateRingsReductionType Keep
GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType::_get_Keep() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType::_get_Keep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType>("", "EnvironmentIntensityReductionOptions/RotateRingsReductionType", "Keep"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentIntensityReductionOptions/RotateRingsReductionType Keep
void GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType::_set_Keep(GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType::_set_Keep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentIntensityReductionOptions/RotateRingsReductionType", "Keep", value));
}
// Autogenerated static field getter
// Get static field: static public EnvironmentIntensityReductionOptions/RotateRingsReductionType RemoveWithStrobeFilter
GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType::_get_RemoveWithStrobeFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType::_get_RemoveWithStrobeFilter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType>("", "EnvironmentIntensityReductionOptions/RotateRingsReductionType", "RemoveWithStrobeFilter"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentIntensityReductionOptions/RotateRingsReductionType RemoveWithStrobeFilter
void GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType::_set_RemoveWithStrobeFilter(GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType::_set_RemoveWithStrobeFilter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentIntensityReductionOptions/RotateRingsReductionType", "RemoveWithStrobeFilter", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EnvironmentKeywords
#include "GlobalNamespace/EnvironmentKeywords.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnvironmentKeywords.get_environmentKeywords
System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>* GlobalNamespace::EnvironmentKeywords::get_environmentKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentKeywords::get_environmentKeywords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentKeywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentKeywords.HasKeyword
bool GlobalNamespace::EnvironmentKeywords::HasKeyword(::Il2CppString* keyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentKeywords::HasKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyword)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, keyword);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSizeData
#include "GlobalNamespace/EnvironmentSizeData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnvironmentSizeData.get_floorType
GlobalNamespace::EnvironmentSizeData::FloorType GlobalNamespace::EnvironmentSizeData::get_floorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSizeData::get_floorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_floorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentSizeData::FloorType, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentSizeData.get_ceilingType
GlobalNamespace::EnvironmentSizeData::CeilingType GlobalNamespace::EnvironmentSizeData::get_ceilingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSizeData::get_ceilingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ceilingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentSizeData::CeilingType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSizeData/FloorType
#include "GlobalNamespace/EnvironmentSizeData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EnvironmentSizeData/FloorType NoFloor
GlobalNamespace::EnvironmentSizeData::FloorType GlobalNamespace::EnvironmentSizeData::FloorType::_get_NoFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSizeData::FloorType::_get_NoFloor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EnvironmentSizeData::FloorType>("", "EnvironmentSizeData/FloorType", "NoFloor"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentSizeData/FloorType NoFloor
void GlobalNamespace::EnvironmentSizeData::FloorType::_set_NoFloor(GlobalNamespace::EnvironmentSizeData::FloorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSizeData::FloorType::_set_NoFloor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSizeData/FloorType", "NoFloor", value));
}
// Autogenerated static field getter
// Get static field: static public EnvironmentSizeData/FloorType CloseTo0
GlobalNamespace::EnvironmentSizeData::FloorType GlobalNamespace::EnvironmentSizeData::FloorType::_get_CloseTo0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSizeData::FloorType::_get_CloseTo0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EnvironmentSizeData::FloorType>("", "EnvironmentSizeData/FloorType", "CloseTo0"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentSizeData/FloorType CloseTo0
void GlobalNamespace::EnvironmentSizeData::FloorType::_set_CloseTo0(GlobalNamespace::EnvironmentSizeData::FloorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSizeData::FloorType::_set_CloseTo0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSizeData/FloorType", "CloseTo0", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSizeData/CeilingType
#include "GlobalNamespace/EnvironmentSizeData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EnvironmentSizeData/CeilingType NoCeiling
GlobalNamespace::EnvironmentSizeData::CeilingType GlobalNamespace::EnvironmentSizeData::CeilingType::_get_NoCeiling() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSizeData::CeilingType::_get_NoCeiling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EnvironmentSizeData::CeilingType>("", "EnvironmentSizeData/CeilingType", "NoCeiling"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentSizeData/CeilingType NoCeiling
void GlobalNamespace::EnvironmentSizeData::CeilingType::_set_NoCeiling(GlobalNamespace::EnvironmentSizeData::CeilingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSizeData::CeilingType::_set_NoCeiling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSizeData/CeilingType", "NoCeiling", value));
}
// Autogenerated static field getter
// Get static field: static public EnvironmentSizeData/CeilingType LowCeiling
GlobalNamespace::EnvironmentSizeData::CeilingType GlobalNamespace::EnvironmentSizeData::CeilingType::_get_LowCeiling() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSizeData::CeilingType::_get_LowCeiling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EnvironmentSizeData::CeilingType>("", "EnvironmentSizeData/CeilingType", "LowCeiling"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentSizeData/CeilingType LowCeiling
void GlobalNamespace::EnvironmentSizeData::CeilingType::_set_LowCeiling(GlobalNamespace::EnvironmentSizeData::CeilingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSizeData::CeilingType::_set_LowCeiling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSizeData/CeilingType", "LowCeiling", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EnvironmentTypeSO
#include "GlobalNamespace/EnvironmentTypeSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnvironmentTypeSO.get_typeNameLocalizationKey
::Il2CppString* GlobalNamespace::EnvironmentTypeSO::get_typeNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentTypeSO::get_typeNameLocalizationKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_typeNameLocalizationKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EnvironmentsListSO
#include "GlobalNamespace/EnvironmentsListSO.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: EnvironmentTypeSO
#include "GlobalNamespace/EnvironmentTypeSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnvironmentsListSO.get_environmentInfos
::Array<GlobalNamespace::EnvironmentInfoSO*>* GlobalNamespace::EnvironmentsListSO::get_environmentInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentsListSO::get_environmentInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::EnvironmentInfoSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentsListSO.GetEnviromentInfoBySerializedName
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::EnvironmentsListSO::GetEnviromentInfoBySerializedName(::Il2CppString* environmentSerializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentsListSO::GetEnviromentInfoBySerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnviromentInfoBySerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentSerializedName)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method, environmentSerializedName);
}
// Autogenerated method: EnvironmentsListSO.GetAllEnvironmentInfosWithType
System::Collections::Generic::List_1<GlobalNamespace::EnvironmentInfoSO*>* GlobalNamespace::EnvironmentsListSO::GetAllEnvironmentInfosWithType(GlobalNamespace::EnvironmentTypeSO* environmentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentsListSO::GetAllEnvironmentInfosWithType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllEnvironmentInfosWithType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::EnvironmentInfoSO*>*, false>(this, ___internal__method, environmentType);
}
// Autogenerated method: EnvironmentsListSO.GetFirstEnvironmentInfoWithType
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::EnvironmentsListSO::GetFirstEnvironmentInfoWithType(GlobalNamespace::EnvironmentTypeSO* environmentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentsListSO::GetFirstEnvironmentInfoWithType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstEnvironmentInfoWithType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentType)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method, environmentType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongSpeedData
#include "GlobalNamespace/SongSpeedData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FileBrowserModel
#include "GlobalNamespace/FileBrowserModel.hpp"
// Including type: FileBrowserModel/<>c__DisplayClass0_0
#include "GlobalNamespace/FileBrowserModel_--c__DisplayClass0_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: FileBrowserItem
#include "GlobalNamespace/FileBrowserItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FileBrowserModel.GetContentOfDirectory
void GlobalNamespace::FileBrowserModel::GetContentOfDirectory(::Il2CppString* direcotryPath, ::Array<::Il2CppString*>* extensions, System::Action_1<::Array<GlobalNamespace::FileBrowserItem*>*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserModel::GetContentOfDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileBrowserModel", "GetContentOfDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direcotryPath), ::il2cpp_utils::ExtractType(extensions), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, direcotryPath, extensions, callback);
}
// Autogenerated method: FileBrowserModel.GetContentOfDirectory
::Array<GlobalNamespace::FileBrowserItem*>* GlobalNamespace::FileBrowserModel::GetContentOfDirectory(::Il2CppString* directoryPath, ::Array<::Il2CppString*>* extensions) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserModel::GetContentOfDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileBrowserModel", "GetContentOfDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directoryPath), ::il2cpp_utils::ExtractType(extensions)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::FileBrowserItem*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, directoryPath, extensions);
}
// Autogenerated method: FileBrowserModel.CanOpenDirectory
bool GlobalNamespace::FileBrowserModel::CanOpenDirectory(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserModel::CanOpenDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileBrowserModel", "CanOpenDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FileBrowserModel/<>c__DisplayClass0_0
#include "GlobalNamespace/FileBrowserModel_--c__DisplayClass0_0.hpp"
// Including type: FileBrowserItem
#include "GlobalNamespace/FileBrowserItem.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FileBrowserModel/<>c__DisplayClass0_0.<GetContentOfDirectory>b__0
void GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::$GetContentOfDirectory$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::<GetContentOfDirectory>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetContentOfDirectory>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FileBrowserModel/<>c__DisplayClass0_0.<GetContentOfDirectory>b__1
void GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::$GetContentOfDirectory$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::<GetContentOfDirectory>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetContentOfDirectory>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FileBrowserItem
#include "GlobalNamespace/FileBrowserItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FileBrowserItem.get_displayName
::Il2CppString* GlobalNamespace::FileBrowserItem::get_displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserItem::get_displayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_displayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: FileBrowserItem.set_displayName
void GlobalNamespace::FileBrowserItem::set_displayName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserItem::set_displayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_displayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FileBrowserItem.get_fullPath
::Il2CppString* GlobalNamespace::FileBrowserItem::get_fullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserItem::get_fullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: FileBrowserItem.set_fullPath
void GlobalNamespace::FileBrowserItem::set_fullPath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserItem::set_fullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FileBrowserItem.get_isDirectory
bool GlobalNamespace::FileBrowserItem::get_isDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserItem::get_isDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FileBrowserItem.set_isDirectory
void GlobalNamespace::FileBrowserItem::set_isDirectory(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserItem::set_isDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBladeMovementData
#include "GlobalNamespace/IBladeMovementData.hpp"
// Including type: BladeMovementDataElement
#include "GlobalNamespace/BladeMovementDataElement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBladeMovementData.get_bladeSpeed
float GlobalNamespace::IBladeMovementData::get_bladeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBladeMovementData::get_bladeSpeed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bladeSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IBladeMovementData.get_lastAddedData
GlobalNamespace::BladeMovementDataElement GlobalNamespace::IBladeMovementData::get_lastAddedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBladeMovementData::get_lastAddedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastAddedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BladeMovementDataElement, false>(this, ___internal__method);
}
// Autogenerated method: IBladeMovementData.get_prevAddedData
GlobalNamespace::BladeMovementDataElement GlobalNamespace::IBladeMovementData::get_prevAddedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBladeMovementData::get_prevAddedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prevAddedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BladeMovementDataElement, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ISaberMovementDataProcessor
#include "GlobalNamespace/ISaberMovementDataProcessor.hpp"
// Including type: BladeMovementDataElement
#include "GlobalNamespace/BladeMovementDataElement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ISaberMovementDataProcessor.ProcessNewData
void GlobalNamespace::ISaberMovementDataProcessor::ProcessNewData(GlobalNamespace::BladeMovementDataElement newData, GlobalNamespace::BladeMovementDataElement prevData, bool prevDataAreValid) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ISaberMovementDataProcessor::ProcessNewData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessNewData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newData), ::il2cpp_utils::ExtractType(prevData), ::il2cpp_utils::ExtractType(prevDataAreValid)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newData, prevData, prevDataAreValid);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SaberMovementData
#include "GlobalNamespace/SaberMovementData.hpp"
// Including type: LazyCopyHashSet`1
#include "GlobalNamespace/LazyCopyHashSet_1.hpp"
// Including type: ISaberMovementDataProcessor
#include "GlobalNamespace/ISaberMovementDataProcessor.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kOutOfRangeBladeSpeed
float GlobalNamespace::SaberMovementData::_get_kOutOfRangeBladeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::_get_kOutOfRangeBladeSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberMovementData", "kOutOfRangeBladeSpeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kOutOfRangeBladeSpeed
void GlobalNamespace::SaberMovementData::_set_kOutOfRangeBladeSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::_set_kOutOfRangeBladeSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberMovementData", "kOutOfRangeBladeSpeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kSmoothUpBladeSpeedCoef
float GlobalNamespace::SaberMovementData::_get_kSmoothUpBladeSpeedCoef() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::_get_kSmoothUpBladeSpeedCoef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberMovementData", "kSmoothUpBladeSpeedCoef"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSmoothUpBladeSpeedCoef
void GlobalNamespace::SaberMovementData::_set_kSmoothUpBladeSpeedCoef(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::_set_kSmoothUpBladeSpeedCoef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberMovementData", "kSmoothUpBladeSpeedCoef", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kSmoothDownBladeSpeedCoef
float GlobalNamespace::SaberMovementData::_get_kSmoothDownBladeSpeedCoef() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::_get_kSmoothDownBladeSpeedCoef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberMovementData", "kSmoothDownBladeSpeedCoef"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSmoothDownBladeSpeedCoef
void GlobalNamespace::SaberMovementData::_set_kSmoothDownBladeSpeedCoef(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::_set_kSmoothDownBladeSpeedCoef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberMovementData", "kSmoothDownBladeSpeedCoef", value));
}
// Autogenerated method: SaberMovementData.get_dataProcessors
GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::ISaberMovementDataProcessor*>* GlobalNamespace::SaberMovementData::get_dataProcessors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::get_dataProcessors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dataProcessors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::ISaberMovementDataProcessor*>*, false>(this, ___internal__method);
}
// Autogenerated method: SaberMovementData.get_bladeSpeed
float GlobalNamespace::SaberMovementData::get_bladeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::get_bladeSpeed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bladeSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SaberMovementData.get_lastAddedData
GlobalNamespace::BladeMovementDataElement GlobalNamespace::SaberMovementData::get_lastAddedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::get_lastAddedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastAddedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BladeMovementDataElement, false>(this, ___internal__method);
}
// Autogenerated method: SaberMovementData.get_prevAddedData
GlobalNamespace::BladeMovementDataElement GlobalNamespace::SaberMovementData::get_prevAddedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::get_prevAddedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prevAddedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BladeMovementDataElement, false>(this, ___internal__method);
}
// Autogenerated method: SaberMovementData.RequestLastDataProcessing
void GlobalNamespace::SaberMovementData::RequestLastDataProcessing(GlobalNamespace::ISaberMovementDataProcessor* dataProcessor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::RequestLastDataProcessing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestLastDataProcessing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataProcessor)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dataProcessor);
}
// Autogenerated method: SaberMovementData.AddNewData
void GlobalNamespace::SaberMovementData::AddNewData(UnityEngine::Vector3 topPos, UnityEngine::Vector3 bottomPos, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::AddNewData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNewData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topPos), ::il2cpp_utils::ExtractType(bottomPos), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, topPos, bottomPos, time);
}
// Autogenerated method: SaberMovementData.ComputeAdditionalData
void GlobalNamespace::SaberMovementData::ComputeAdditionalData(UnityEngine::Vector3 topPos, UnityEngine::Vector3 bottomPos, int idxOffset, UnityEngine::Vector3& segmentNormal, float& segmentAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::ComputeAdditionalData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeAdditionalData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topPos), ::il2cpp_utils::ExtractType(bottomPos), ::il2cpp_utils::ExtractType(idxOffset), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, topPos, bottomPos, idxOffset, segmentNormal, segmentAngle);
}
// Autogenerated method: SaberMovementData.ComputePlaneNormal
UnityEngine::Vector3 GlobalNamespace::SaberMovementData::ComputePlaneNormal(UnityEngine::Vector3 tp0, UnityEngine::Vector3 bp0, UnityEngine::Vector3 tp1, UnityEngine::Vector3 bp1) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::ComputePlaneNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputePlaneNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tp0), ::il2cpp_utils::ExtractType(bp0), ::il2cpp_utils::ExtractType(tp1), ::il2cpp_utils::ExtractType(bp1)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, tp0, bp0, tp1, bp1);
}
// Autogenerated method: SaberMovementData.ComputeCutPlaneNormal
UnityEngine::Vector3 GlobalNamespace::SaberMovementData::ComputeCutPlaneNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::ComputeCutPlaneNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeCutPlaneNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: SaberMovementData.ComputeSwingRating
float GlobalNamespace::SaberMovementData::ComputeSwingRating(float overrideSegmentAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::ComputeSwingRating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeSwingRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overrideSegmentAngle)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, overrideSegmentAngle);
}
// Autogenerated method: SaberMovementData.ComputeSwingRating
float GlobalNamespace::SaberMovementData::ComputeSwingRating() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::ComputeSwingRating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeSwingRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SaberMovementData.ComputeSwingRating
float GlobalNamespace::SaberMovementData::ComputeSwingRating(bool overrideSegmenAngle, float overrideValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::ComputeSwingRating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeSwingRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overrideSegmenAngle), ::il2cpp_utils::ExtractType(overrideValue)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, overrideSegmenAngle, overrideValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberSwingRating
#include "GlobalNamespace/SaberSwingRating.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kMaxNormalAngleDiff
float GlobalNamespace::SaberSwingRating::_get_kMaxNormalAngleDiff() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_get_kMaxNormalAngleDiff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kMaxNormalAngleDiff"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kMaxNormalAngleDiff
void GlobalNamespace::SaberSwingRating::_set_kMaxNormalAngleDiff(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_set_kMaxNormalAngleDiff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kMaxNormalAngleDiff", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kToleranceNormalAngleDiff
float GlobalNamespace::SaberSwingRating::_get_kToleranceNormalAngleDiff() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_get_kToleranceNormalAngleDiff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kToleranceNormalAngleDiff"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kToleranceNormalAngleDiff
void GlobalNamespace::SaberSwingRating::_set_kToleranceNormalAngleDiff(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_set_kToleranceNormalAngleDiff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kToleranceNormalAngleDiff", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kMaxBeforeCutSwingDuration
float GlobalNamespace::SaberSwingRating::_get_kMaxBeforeCutSwingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_get_kMaxBeforeCutSwingDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kMaxBeforeCutSwingDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kMaxBeforeCutSwingDuration
void GlobalNamespace::SaberSwingRating::_set_kMaxBeforeCutSwingDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_set_kMaxBeforeCutSwingDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kMaxBeforeCutSwingDuration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kMaxAfterCutSwingDuration
float GlobalNamespace::SaberSwingRating::_get_kMaxAfterCutSwingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_get_kMaxAfterCutSwingDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kMaxAfterCutSwingDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kMaxAfterCutSwingDuration
void GlobalNamespace::SaberSwingRating::_set_kMaxAfterCutSwingDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_set_kMaxAfterCutSwingDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kMaxAfterCutSwingDuration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kBeforeCutAngleFor1Rating
float GlobalNamespace::SaberSwingRating::_get_kBeforeCutAngleFor1Rating() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_get_kBeforeCutAngleFor1Rating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kBeforeCutAngleFor1Rating"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kBeforeCutAngleFor1Rating
void GlobalNamespace::SaberSwingRating::_set_kBeforeCutAngleFor1Rating(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_set_kBeforeCutAngleFor1Rating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kBeforeCutAngleFor1Rating", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kAfterCutAngleFor1Rating
float GlobalNamespace::SaberSwingRating::_get_kAfterCutAngleFor1Rating() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_get_kAfterCutAngleFor1Rating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kAfterCutAngleFor1Rating"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kAfterCutAngleFor1Rating
void GlobalNamespace::SaberSwingRating::_set_kAfterCutAngleFor1Rating(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_set_kAfterCutAngleFor1Rating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kAfterCutAngleFor1Rating", value));
}
// Autogenerated method: SaberSwingRating.NormalRating
float GlobalNamespace::SaberSwingRating::NormalRating(float normalDiff) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::NormalRating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SaberSwingRating", "NormalRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(normalDiff)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, normalDiff);
}
// Autogenerated method: SaberSwingRating.BeforeCutStepRating
float GlobalNamespace::SaberSwingRating::BeforeCutStepRating(float angleDiff, float normalDiff) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::BeforeCutStepRating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SaberSwingRating", "BeforeCutStepRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angleDiff), ::il2cpp_utils::ExtractType(normalDiff)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, angleDiff, normalDiff);
}
// Autogenerated method: SaberSwingRating.AfterCutStepRating
float GlobalNamespace::SaberSwingRating::AfterCutStepRating(float angleDiff, float normalDiff) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::AfterCutStepRating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SaberSwingRating", "AfterCutStepRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angleDiff), ::il2cpp_utils::ExtractType(normalDiff)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, angleDiff, normalDiff);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberSwingRatingCounter
#include "GlobalNamespace/SaberSwingRatingCounter.hpp"
// Including type: SaberSwingRatingCounter/Pool
#include "GlobalNamespace/SaberSwingRatingCounter_Pool.hpp"
// Including type: SaberMovementData
#include "GlobalNamespace/SaberMovementData.hpp"
// Including type: LazyCopyHashSet`1
#include "GlobalNamespace/LazyCopyHashSet_1.hpp"
// Including type: ISaberSwingRatingCounterDidChangeReceiver
#include "GlobalNamespace/ISaberSwingRatingCounterDidChangeReceiver.hpp"
// Including type: ISaberSwingRatingCounterDidFinishReceiver
#include "GlobalNamespace/ISaberSwingRatingCounterDidFinishReceiver.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: BladeMovementDataElement
#include "GlobalNamespace/BladeMovementDataElement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SaberSwingRatingCounter.get_beforeCutRating
float GlobalNamespace::SaberSwingRatingCounter::get_beforeCutRating() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::get_beforeCutRating");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beforeCutRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SaberSwingRatingCounter.get_afterCutRating
float GlobalNamespace::SaberSwingRatingCounter::get_afterCutRating() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::get_afterCutRating");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_afterCutRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SaberSwingRatingCounter.RegisterDidChangeReceiver
void GlobalNamespace::SaberSwingRatingCounter::RegisterDidChangeReceiver(GlobalNamespace::ISaberSwingRatingCounterDidChangeReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::RegisterDidChangeReceiver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterDidChangeReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: SaberSwingRatingCounter.RegisterDidFinishReceiver
void GlobalNamespace::SaberSwingRatingCounter::RegisterDidFinishReceiver(GlobalNamespace::ISaberSwingRatingCounterDidFinishReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::RegisterDidFinishReceiver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterDidFinishReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: SaberSwingRatingCounter.UnregisterDidChangeReceiver
void GlobalNamespace::SaberSwingRatingCounter::UnregisterDidChangeReceiver(GlobalNamespace::ISaberSwingRatingCounterDidChangeReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::UnregisterDidChangeReceiver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterDidChangeReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: SaberSwingRatingCounter.UnregisterDidFinishReceiver
void GlobalNamespace::SaberSwingRatingCounter::UnregisterDidFinishReceiver(GlobalNamespace::ISaberSwingRatingCounterDidFinishReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::UnregisterDidFinishReceiver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterDidFinishReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: SaberSwingRatingCounter.Init
void GlobalNamespace::SaberSwingRatingCounter::Init(GlobalNamespace::SaberMovementData* saberMovementData, UnityEngine::Transform* noteTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberMovementData), ::il2cpp_utils::ExtractType(noteTransform)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saberMovementData, noteTransform);
}
// Autogenerated method: SaberSwingRatingCounter.ProcessNewData
void GlobalNamespace::SaberSwingRatingCounter::ProcessNewData(GlobalNamespace::BladeMovementDataElement newData, GlobalNamespace::BladeMovementDataElement prevData, bool prevDataAreValid) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::ProcessNewData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessNewData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newData), ::il2cpp_utils::ExtractType(prevData), ::il2cpp_utils::ExtractType(prevDataAreValid)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newData, prevData, prevDataAreValid);
}
// Autogenerated method: SaberSwingRatingCounter.Finish
void GlobalNamespace::SaberSwingRatingCounter::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberSwingRatingCounter.DrawGizmos
void GlobalNamespace::SaberSwingRatingCounter::DrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::DrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberSwingRatingCounter/Pool
#include "GlobalNamespace/SaberSwingRatingCounter_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameplayModifierParamsSO.get_modifierNameLocalizationKey
::Il2CppString* GlobalNamespace::GameplayModifierParamsSO::get_modifierNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierParamsSO::get_modifierNameLocalizationKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modifierNameLocalizationKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_descriptionLocalizationKey
::Il2CppString* GlobalNamespace::GameplayModifierParamsSO::get_descriptionLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierParamsSO::get_descriptionLocalizationKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_descriptionLocalizationKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_multiplier
float GlobalNamespace::GameplayModifierParamsSO::get_multiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierParamsSO::get_multiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_multiplierConditionallyValid
bool GlobalNamespace::GameplayModifierParamsSO::get_multiplierConditionallyValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierParamsSO::get_multiplierConditionallyValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplierConditionallyValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_icon
UnityEngine::Sprite* GlobalNamespace::GameplayModifierParamsSO::get_icon() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierParamsSO::get_icon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_icon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_mutuallyExclusives
::Array<GlobalNamespace::GameplayModifierParamsSO*>* GlobalNamespace::GameplayModifierParamsSO::get_mutuallyExclusives() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierParamsSO::get_mutuallyExclusives");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mutuallyExclusives", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::GameplayModifierParamsSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_requires
::Array<GlobalNamespace::GameplayModifierParamsSO*>* GlobalNamespace::GameplayModifierParamsSO::get_requires() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierParamsSO::get_requires");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requires", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::GameplayModifierParamsSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_requiredBy
::Array<GlobalNamespace::GameplayModifierParamsSO*>* GlobalNamespace::GameplayModifierParamsSO::get_requiredBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierParamsSO::get_requiredBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requiredBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::GameplayModifierParamsSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierParamsSO.get_isInBeta
bool GlobalNamespace::GameplayModifierParamsSO::get_isInBeta() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierParamsSO::get_isInBeta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInBeta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: GameplayModifiersModelSO/GameplayModifierBoolGetter
#include "GlobalNamespace/GameplayModifiersModelSO_GameplayModifierBoolGetter.hpp"
// Including type: GameplayModifiersModelSO/<>c
#include "GlobalNamespace/GameplayModifiersModelSO_--c.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: GameplayModifiers/SongSpeed
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GameplayModifierMask
#include "GlobalNamespace/GameplayModifierMask.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameplayModifiersModelSO.CreateGameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::GameplayModifiersModelSO::CreateGameplayModifiers(System::Func_2<GlobalNamespace::GameplayModifierParamsSO*, bool>* valueGetter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::CreateGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueGetter)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method, valueGetter);
}
// Autogenerated method: GameplayModifiersModelSO.GetModifierBoolValue
bool GlobalNamespace::GameplayModifiersModelSO::GetModifierBoolValue(GlobalNamespace::GameplayModifiers* gameplayModifiers, GlobalNamespace::GameplayModifierParamsSO* gameplayModifierParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::GetModifierBoolValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModifierBoolValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(gameplayModifierParams)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifiers, gameplayModifierParams);
}
// Autogenerated method: GameplayModifiersModelSO.CreateModifierParamsList
System::Collections::Generic::List_1<GlobalNamespace::GameplayModifierParamsSO*>* GlobalNamespace::GameplayModifiersModelSO::CreateModifierParamsList(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::CreateModifierParamsList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateModifierParamsList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::GameplayModifierParamsSO*>*, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO.GetTotalMultiplier
float GlobalNamespace::GameplayModifiersModelSO::GetTotalMultiplier(System::Collections::Generic::List_1<GlobalNamespace::GameplayModifierParamsSO*>* modifierParams, float energy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::GetTotalMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTotalMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifierParams), ::il2cpp_utils::ExtractType(energy)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, modifierParams, energy);
}
// Autogenerated method: GameplayModifiersModelSO.MaxModifiedScoreForMaxRawScore
int GlobalNamespace::GameplayModifiersModelSO::MaxModifiedScoreForMaxRawScore(int maxRawScore, System::Collections::Generic::List_1<GlobalNamespace::GameplayModifierParamsSO*>* modifierParams, float energy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::MaxModifiedScoreForMaxRawScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaxModifiedScoreForMaxRawScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxRawScore), ::il2cpp_utils::ExtractType(modifierParams), ::il2cpp_utils::ExtractType(energy)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, maxRawScore, modifierParams, energy);
}
// Autogenerated method: GameplayModifiersModelSO.MaxModifiedScoreForMaxRawScore
int GlobalNamespace::GameplayModifiersModelSO::MaxModifiedScoreForMaxRawScore(int maxRawScore, System::Collections::Generic::List_1<GlobalNamespace::GameplayModifierParamsSO*>* modifierParams, GlobalNamespace::GameplayModifiersModelSO* gameplayModifiersModel, float energy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::MaxModifiedScoreForMaxRawScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaxModifiedScoreForMaxRawScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxRawScore), ::il2cpp_utils::ExtractType(modifierParams), ::il2cpp_utils::ExtractType(gameplayModifiersModel), ::il2cpp_utils::ExtractType(energy)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, maxRawScore, modifierParams, gameplayModifiersModel, energy);
}
// Autogenerated method: GameplayModifiersModelSO.GetModifiedScoreForGameplayModifiers
int GlobalNamespace::GameplayModifiersModelSO::GetModifiedScoreForGameplayModifiers(int rawScore, System::Collections::Generic::List_1<GlobalNamespace::GameplayModifierParamsSO*>* modifierParams, float energy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::GetModifiedScoreForGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModifiedScoreForGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawScore), ::il2cpp_utils::ExtractType(modifierParams), ::il2cpp_utils::ExtractType(energy)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, rawScore, modifierParams, energy);
}
// Autogenerated method: GameplayModifiersModelSO.GetGameplayModifierParams
GlobalNamespace::GameplayModifierParamsSO* GlobalNamespace::GameplayModifiersModelSO::GetGameplayModifierParams(GlobalNamespace::GameplayModifierMask modifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::GetGameplayModifierParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGameplayModifierParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifier)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifierParamsSO*, false>(this, ___internal__method, modifier);
}
// Autogenerated method: GameplayModifiersModelSO.GetSongSpeedFromValueGetter
GlobalNamespace::GameplayModifiers::SongSpeed GlobalNamespace::GameplayModifiersModelSO::GetSongSpeedFromValueGetter(System::Func_2<GlobalNamespace::GameplayModifierParamsSO*, bool>* valueGetter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::GetSongSpeedFromValueGetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSongSpeedFromValueGetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueGetter)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers::SongSpeed, false>(this, ___internal__method, valueGetter);
}
// Autogenerated method: GameplayModifiersModelSO.OnEnable
void GlobalNamespace::GameplayModifiersModelSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameplayModifiersModelSO/GameplayModifierBoolGetter
#include "GlobalNamespace/GameplayModifiersModelSO_GameplayModifierBoolGetter.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameplayModifiersModelSO/GameplayModifierBoolGetter.Invoke
bool GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter::Invoke(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/GameplayModifierBoolGetter.BeginInvoke
System::IAsyncResult* GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter::BeginInvoke(GlobalNamespace::GameplayModifiers* gameplayModifiers, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, gameplayModifiers, callback, object);
}
// Autogenerated method: GameplayModifiersModelSO/GameplayModifierBoolGetter.EndInvoke
bool GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiersModelSO/<>c
#include "GlobalNamespace/GameplayModifiersModelSO_--c.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: GameplayModifiersModelSO/GameplayModifierBoolGetter
#include "GlobalNamespace/GameplayModifiersModelSO_GameplayModifierBoolGetter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly GameplayModifiersModelSO/<>c <>9
GlobalNamespace::GameplayModifiersModelSO::$$c* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiersModelSO::$$c*>("", "GameplayModifiersModelSO/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly GameplayModifiersModelSO/<>c <>9
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9(GlobalNamespace::GameplayModifiersModelSO::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_0
GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__20_0")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_0
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_0(GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__20_0", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_1
GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__20_1")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_1
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_1(GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__20_1", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_2
GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__20_2")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_2
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_2(GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__20_2", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_3
GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__20_3")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_3
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_3(GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__20_3", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_4
GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__20_4")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_4
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_4(GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__20_4", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_5
GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_5");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__20_5")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_5
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_5(GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_5");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__20_5", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_6
GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_6");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__20_6")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_6
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_6(GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_6");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__20_6", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_7
GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_7");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__20_7")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_7
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_7(GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_7");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__20_7", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_8
GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_8");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__20_8")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_8
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_8(GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_8");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__20_8", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_9
GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__20_9")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_9
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_9(GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__20_9", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_10
GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_10");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__20_10")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_10
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_10(GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_10");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__20_10", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_11
GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_11");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__20_11")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_11
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_11(GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_11");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__20_11", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_12
GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_12");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__20_12")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_12
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_12(GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_12");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__20_12", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_13
GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_13");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__20_13")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_13
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_13(GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_13");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__20_13", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_14
GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_14");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__20_14")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_14
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_14(GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_14");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__20_14", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_15
GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_15() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_15");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__20_15")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_15
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_15(GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_15");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__20_15", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_16
GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_16() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_16");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__20_16")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_16
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_16(GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_16");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__20_16", value)));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_17
GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_17() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_get_$$9__20_17");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter*>("", "GameplayModifiersModelSO/<>c", "<>9__20_17")));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiersModelSO/GameplayModifierBoolGetter <>9__20_17
void GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_17(GlobalNamespace::GameplayModifiersModelSO::GameplayModifierBoolGetter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::_set_$$9__20_17");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GameplayModifiersModelSO/<>c", "<>9__20_17", value)));
}
// Autogenerated method: GameplayModifiersModelSO/<>c..cctor
void GlobalNamespace::GameplayModifiersModelSO::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GameplayModifiersModelSO/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__20_0
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__20_0(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__20_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__20_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__20_1
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__20_1(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__20_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__20_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__20_2
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__20_2(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__20_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__20_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__20_3
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__20_3(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__20_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__20_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__20_4
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__20_4(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__20_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__20_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__20_5
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__20_5(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__20_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__20_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__20_6
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__20_6(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__20_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__20_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__20_7
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__20_7(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__20_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__20_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__20_8
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__20_8(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__20_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__20_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__20_9
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__20_9(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__20_9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__20_9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__20_10
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__20_10(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__20_10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__20_10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__20_11
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__20_11(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__20_11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__20_11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__20_12
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__20_12(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__20_12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__20_12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__20_13
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__20_13(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__20_13");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__20_13", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__20_14
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__20_14(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__20_14");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__20_14", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__20_15
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__20_15(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__20_15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__20_15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__20_16
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__20_16(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__20_16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__20_16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: GameplayModifiersModelSO/<>c.<OnEnable>b__20_17
bool GlobalNamespace::GameplayModifiersModelSO::$$c::$OnEnable$b__20_17(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifiersModelSO::$$c::<OnEnable>b__20_17");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__20_17", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ScoreFormatter
#include "GlobalNamespace/ScoreFormatter.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE1650C
// Autogenerated static field getter
// Get static field: static private readonly System.Globalization.NumberFormatInfo _numberFormatInfo
System::Globalization::NumberFormatInfo* GlobalNamespace::ScoreFormatter::_get__numberFormatInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreFormatter::_get__numberFormatInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::NumberFormatInfo*>("", "ScoreFormatter", "_numberFormatInfo"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Globalization.NumberFormatInfo _numberFormatInfo
void GlobalNamespace::ScoreFormatter::_set__numberFormatInfo(System::Globalization::NumberFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreFormatter::_set__numberFormatInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreFormatter", "_numberFormatInfo", value));
}
// Autogenerated method: ScoreFormatter..cctor
void GlobalNamespace::ScoreFormatter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreFormatter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ScoreFormatter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: ScoreFormatter.Format
::Il2CppString* GlobalNamespace::ScoreFormatter::Format(int score) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreFormatter::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ScoreFormatter", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(score)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, score);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardPlayerInfo
#include "GlobalNamespace/LeaderboardPlayerInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LeaderboardPlayerInfo.get_playerId
::Il2CppString* GlobalNamespace::LeaderboardPlayerInfo::get_playerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardPlayerInfo::get_playerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardPlayerInfo.set_playerId
void GlobalNamespace::LeaderboardPlayerInfo::set_playerId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardPlayerInfo::set_playerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardPlayerInfo.get_playerName
::Il2CppString* GlobalNamespace::LeaderboardPlayerInfo::get_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardPlayerInfo::get_playerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardPlayerInfo.set_playerName
void GlobalNamespace::LeaderboardPlayerInfo::set_playerName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardPlayerInfo::set_playerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardPlayerInfo.get_playerKey
::Il2CppString* GlobalNamespace::LeaderboardPlayerInfo::get_playerKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardPlayerInfo::get_playerKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardPlayerInfo.set_playerKey
void GlobalNamespace::LeaderboardPlayerInfo::set_playerKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardPlayerInfo::set_playerKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardPlayerInfo.get_authType
::Il2CppString* GlobalNamespace::LeaderboardPlayerInfo::get_authType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardPlayerInfo::get_authType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_authType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardPlayerInfo.set_authType
void GlobalNamespace::LeaderboardPlayerInfo::set_authType(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardPlayerInfo::set_authType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_authType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardPlayerInfo.get_playerFriends
::Il2CppString* GlobalNamespace::LeaderboardPlayerInfo::get_playerFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardPlayerInfo::get_playerFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardPlayerInfo.set_playerFriends
void GlobalNamespace::LeaderboardPlayerInfo::set_playerFriends(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardPlayerInfo::set_playerFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardPlayerInfo.get_succeeded
bool GlobalNamespace::LeaderboardPlayerInfo::get_succeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardPlayerInfo::get_succeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_succeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardPlayerInfo.set_succeeded
void GlobalNamespace::LeaderboardPlayerInfo::set_succeeded(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardPlayerInfo::set_succeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_succeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardUploadData
#include "GlobalNamespace/LeaderboardUploadData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardsModel
#include "GlobalNamespace/LeaderboardsModel.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LeaderboardsModel.GetLeaderboardID
::Il2CppString* GlobalNamespace::LeaderboardsModel::GetLeaderboardID(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardsModel::GetLeaderboardID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LeaderboardsModel", "GetLeaderboardID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, difficultyBeatmap);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardScoreUploader
#include "GlobalNamespace/LeaderboardScoreUploader.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: LeaderboardScoreUploader/ScoresToUploadData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoresToUploadData.hpp"
// Including type: LeaderboardScoreUploader/UploadScoreCallback
#include "GlobalNamespace/LeaderboardScoreUploader_UploadScoreCallback.hpp"
// Including type: LeaderboardScoreUploader/<>c__DisplayClass14_0
#include "GlobalNamespace/LeaderboardScoreUploader_--c__DisplayClass14_0.hpp"
// Including type: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14
#include "GlobalNamespace/LeaderboardScoreUploader_-UploadScoresCoroutine-d__14.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kScoresToUploadFileName
::Il2CppString* GlobalNamespace::LeaderboardScoreUploader::_get_kScoresToUploadFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::_get_kScoresToUploadFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "LeaderboardScoreUploader", "kScoresToUploadFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kScoresToUploadFileName
void GlobalNamespace::LeaderboardScoreUploader::_set_kScoresToUploadFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::_set_kScoresToUploadFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LeaderboardScoreUploader", "kScoresToUploadFileName", value));
}
// Autogenerated method: LeaderboardScoreUploader.add_allScoresDidUploadEvent
void GlobalNamespace::LeaderboardScoreUploader::add_allScoresDidUploadEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::add_allScoresDidUploadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_allScoresDidUploadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader.remove_allScoresDidUploadEvent
void GlobalNamespace::LeaderboardScoreUploader::remove_allScoresDidUploadEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::remove_allScoresDidUploadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_allScoresDidUploadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader.Init
void GlobalNamespace::LeaderboardScoreUploader::Init(GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback* uploadScoreCallback, ::Il2CppString* playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uploadScoreCallback), ::il2cpp_utils::ExtractType(playerId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, uploadScoreCallback, playerId);
}
// Autogenerated method: LeaderboardScoreUploader.OnApplicationQuit
void GlobalNamespace::LeaderboardScoreUploader::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader.UploadScoresCoroutine
System::Collections::IEnumerator* GlobalNamespace::LeaderboardScoreUploader::UploadScoresCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::UploadScoresCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadScoresCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader.LoadScoresToUploadFromFile
void GlobalNamespace::LeaderboardScoreUploader::LoadScoresToUploadFromFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::LoadScoresToUploadFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadScoresToUploadFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader.SaveScoresToUploadToFile
void GlobalNamespace::LeaderboardScoreUploader::SaveScoresToUploadToFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::SaveScoresToUploadToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveScoresToUploadToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader.AddScore
void GlobalNamespace::LeaderboardScoreUploader::AddScore(GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::AddScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, scoreData);
}
// Autogenerated method: LeaderboardScoreUploader.<UploadScoresCoroutine>b__14_1
bool GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$b__14_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::<UploadScoresCoroutine>b__14_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UploadScoresCoroutine>b__14_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_playerId
::Il2CppString* GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_playerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_playerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_playerId
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_playerId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_playerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_beatmap
GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_beatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_beatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_beatmap
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_beatmap(GlobalNamespace::IDifficultyBeatmap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_beatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_gameplayModifiers
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_gameplayModifiers(GlobalNamespace::GameplayModifiers* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_rawScore
int GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_rawScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_rawScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rawScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_rawScore
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_rawScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_rawScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rawScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_modifiedScore
int GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_modifiedScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_modifiedScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_modifiedScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_modifiedScore
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_modifiedScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_modifiedScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_modifiedScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_fullCombo
bool GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_fullCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_fullCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_fullCombo
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_fullCombo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_fullCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fullCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_goodCutsCount
int GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_goodCutsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_goodCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_goodCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_goodCutsCount
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_goodCutsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_goodCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_goodCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_badCutsCount
int GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_badCutsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_badCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_badCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_badCutsCount
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_badCutsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_badCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_badCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_missedCount
int GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_missedCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_missedCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missedCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_missedCount
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_missedCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_missedCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_missedCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.get_maxCombo
int GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_maxCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::ScoreData::get_maxCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/ScoreData.set_maxCombo
void GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_maxCombo(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::ScoreData::set_maxCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardScoreUploader/ScoresToUploadData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoresToUploadData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardScoreUploader/UploadScoreCallback
#include "GlobalNamespace/LeaderboardScoreUploader_UploadScoreCallback.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LeaderboardScoreUploader/UploadScoreCallback.Invoke
GlobalNamespace::HMAsyncRequest* GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback::Invoke(GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData, GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, scoreData, completionHandler);
}
// Autogenerated method: LeaderboardScoreUploader/UploadScoreCallback.BeginInvoke
System::IAsyncResult* GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback::BeginInvoke(GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData, GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData), ::il2cpp_utils::ExtractType(completionHandler), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, scoreData, completionHandler, callback, object);
}
// Autogenerated method: LeaderboardScoreUploader/UploadScoreCallback.EndInvoke
GlobalNamespace::HMAsyncRequest* GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::UploadScoreCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardScoreUploader/<>c__DisplayClass14_0
#include "GlobalNamespace/LeaderboardScoreUploader_--c__DisplayClass14_0.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreResult
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LeaderboardScoreUploader/<>c__DisplayClass14_0.<UploadScoresCoroutine>b__0
void GlobalNamespace::LeaderboardScoreUploader::$$c__DisplayClass14_0::$UploadScoresCoroutine$b__0(GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::$$c__DisplayClass14_0::<UploadScoresCoroutine>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UploadScoresCoroutine>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14
#include "GlobalNamespace/LeaderboardScoreUploader_-UploadScoresCoroutine-d__14.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14.System.IDisposable.Dispose
void GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14.MoveNext
bool GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14.System.Collections.IEnumerator.Reset
void GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardScoreUploader/<UploadScoresCoroutine>d__14.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardScoreUploader::$UploadScoresCoroutine$d__14::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalLeaderboardsModel
#include "GlobalNamespace/LocalLeaderboardsModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: LocalLeaderboardsModel/ScoreData
#include "GlobalNamespace/LocalLeaderboardsModel_ScoreData.hpp"
// Including type: LocalLeaderboardsModel/LeaderboardData
#include "GlobalNamespace/LocalLeaderboardsModel_LeaderboardData.hpp"
// Including type: LocalLeaderboardsModel/SavedLeaderboardsData
#include "GlobalNamespace/LocalLeaderboardsModel_SavedLeaderboardsData.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kLocalLeaderboardsFileName
::Il2CppString* GlobalNamespace::LocalLeaderboardsModel::_get_kLocalLeaderboardsFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::_get_kLocalLeaderboardsFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "LocalLeaderboardsModel", "kLocalLeaderboardsFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kLocalLeaderboardsFileName
void GlobalNamespace::LocalLeaderboardsModel::_set_kLocalLeaderboardsFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::_set_kLocalLeaderboardsFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalLeaderboardsModel", "kLocalLeaderboardsFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kLocalDailyLeaderboardsFileName
::Il2CppString* GlobalNamespace::LocalLeaderboardsModel::_get_kLocalDailyLeaderboardsFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::_get_kLocalDailyLeaderboardsFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "LocalLeaderboardsModel", "kLocalDailyLeaderboardsFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kLocalDailyLeaderboardsFileName
void GlobalNamespace::LocalLeaderboardsModel::_set_kLocalDailyLeaderboardsFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::_set_kLocalDailyLeaderboardsFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalLeaderboardsModel", "kLocalDailyLeaderboardsFileName", value));
}
// Autogenerated method: LocalLeaderboardsModel.add_newScoreWasAddedToLeaderboardEvent
void GlobalNamespace::LocalLeaderboardsModel::add_newScoreWasAddedToLeaderboardEvent(System::Action_2<::Il2CppString*, GlobalNamespace::LocalLeaderboardsModel::LeaderboardType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::add_newScoreWasAddedToLeaderboardEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_newScoreWasAddedToLeaderboardEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalLeaderboardsModel.remove_newScoreWasAddedToLeaderboardEvent
void GlobalNamespace::LocalLeaderboardsModel::remove_newScoreWasAddedToLeaderboardEvent(System::Action_2<::Il2CppString*, GlobalNamespace::LocalLeaderboardsModel::LeaderboardType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::remove_newScoreWasAddedToLeaderboardEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_newScoreWasAddedToLeaderboardEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalLeaderboardsModel.OnDisable
void GlobalNamespace::LocalLeaderboardsModel::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardsModel.LoadLeaderboardsData
void GlobalNamespace::LocalLeaderboardsModel::LoadLeaderboardsData(::Il2CppString* filename, System::Collections::Generic::List_1<GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>*& leaderboardsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::LoadLeaderboardsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocalLeaderboardsModel", "LoadLeaderboardsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>*&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filename, leaderboardsData);
}
// Autogenerated method: LocalLeaderboardsModel.SaveLeaderboardsData
void GlobalNamespace::LocalLeaderboardsModel::SaveLeaderboardsData(::Il2CppString* filename, System::Collections::Generic::List_1<GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>* leaderboardsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::SaveLeaderboardsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocalLeaderboardsModel", "SaveLeaderboardsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractType(leaderboardsData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filename, leaderboardsData);
}
// Autogenerated method: LocalLeaderboardsModel.Load
void GlobalNamespace::LocalLeaderboardsModel::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardsModel.Save
void GlobalNamespace::LocalLeaderboardsModel::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardsModel.GetLeaderboardsData
System::Collections::Generic::List_1<GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>* GlobalNamespace::LocalLeaderboardsModel::GetLeaderboardsData(GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::GetLeaderboardsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*>*, false>(this, ___internal__method, leaderboardType);
}
// Autogenerated method: LocalLeaderboardsModel.GetLeaderboardData
GlobalNamespace::LocalLeaderboardsModel::LeaderboardData* GlobalNamespace::LocalLeaderboardsModel::GetLeaderboardData(::Il2CppString* leaderboardId, GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::GetLeaderboardData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LocalLeaderboardsModel::LeaderboardData*, false>(this, ___internal__method, leaderboardId, leaderboardType);
}
// Autogenerated method: LocalLeaderboardsModel.GetCurrentTimestamp
int64_t GlobalNamespace::LocalLeaderboardsModel::GetCurrentTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::GetCurrentTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardsModel.UpdateDailyLeaderboard
void GlobalNamespace::LocalLeaderboardsModel::UpdateDailyLeaderboard(::Il2CppString* leaderboardId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::UpdateDailyLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDailyLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, leaderboardId);
}
// Autogenerated method: LocalLeaderboardsModel.AddScore
void GlobalNamespace::LocalLeaderboardsModel::AddScore(::Il2CppString* leaderboardId, GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType, ::Il2CppString* playerName, int score, bool fullCombo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::AddScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType), ::il2cpp_utils::ExtractType(playerName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(fullCombo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, leaderboardId, leaderboardType, playerName, score, fullCombo);
}
// Autogenerated method: LocalLeaderboardsModel.WillScoreGoIntoLeaderboard
bool GlobalNamespace::LocalLeaderboardsModel::WillScoreGoIntoLeaderboard(::Il2CppString* leaderboardId, GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType, int score) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::WillScoreGoIntoLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WillScoreGoIntoLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType), ::il2cpp_utils::ExtractType(score)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, leaderboardId, leaderboardType, score);
}
// Autogenerated method: LocalLeaderboardsModel.GetScores
System::Collections::Generic::List_1<GlobalNamespace::LocalLeaderboardsModel::ScoreData*>* GlobalNamespace::LocalLeaderboardsModel::GetScores(::Il2CppString* leaderboardId, GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::GetScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::LocalLeaderboardsModel::ScoreData*>*, false>(this, ___internal__method, leaderboardId, leaderboardType);
}
// Autogenerated method: LocalLeaderboardsModel.GetHighScore
int GlobalNamespace::LocalLeaderboardsModel::GetHighScore(::Il2CppString* leaderboardId, GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::GetHighScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHighScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, leaderboardId, leaderboardType);
}
// Autogenerated method: LocalLeaderboardsModel.GetPositionInLeaderboard
int GlobalNamespace::LocalLeaderboardsModel::GetPositionInLeaderboard(::Il2CppString* leaderboardId, GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType, int score) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::GetPositionInLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPositionInLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType), ::il2cpp_utils::ExtractType(score)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, leaderboardId, leaderboardType, score);
}
// Autogenerated method: LocalLeaderboardsModel.GetLastScorePosition
int GlobalNamespace::LocalLeaderboardsModel::GetLastScorePosition(::Il2CppString* leaderboardId, GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::GetLastScorePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastScorePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(leaderboardType)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, leaderboardId, leaderboardType);
}
// Autogenerated method: LocalLeaderboardsModel.ClearLastScorePosition
void GlobalNamespace::LocalLeaderboardsModel::ClearLastScorePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::ClearLastScorePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLastScorePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardsModel.AddScore
void GlobalNamespace::LocalLeaderboardsModel::AddScore(::Il2CppString* leaderboardId, ::Il2CppString* playerName, int score, bool fullCombo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::AddScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(playerName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(fullCombo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, leaderboardId, playerName, score, fullCombo);
}
// Autogenerated method: LocalLeaderboardsModel.WillScoreGoIntoLeaderboard
bool GlobalNamespace::LocalLeaderboardsModel::WillScoreGoIntoLeaderboard(::Il2CppString* leaderboardId, int score) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::WillScoreGoIntoLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WillScoreGoIntoLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(score)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, leaderboardId, score);
}
// Autogenerated method: LocalLeaderboardsModel.ClearLeaderboard
void GlobalNamespace::LocalLeaderboardsModel::ClearLeaderboard(::Il2CppString* leaderboardId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::ClearLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, leaderboardId);
}
// Autogenerated method: LocalLeaderboardsModel.ClearAllLeaderboards
void GlobalNamespace::LocalLeaderboardsModel::ClearAllLeaderboards(bool deleteLeaderboardFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::ClearAllLeaderboards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearAllLeaderboards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deleteLeaderboardFile)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, deleteLeaderboardFile);
}
// Autogenerated method: LocalLeaderboardsModel.OnEnable
void GlobalNamespace::LocalLeaderboardsModel::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalLeaderboardsModel/LeaderboardType
#include "GlobalNamespace/LocalLeaderboardsModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LocalLeaderboardsModel/LeaderboardType AllTime
GlobalNamespace::LocalLeaderboardsModel::LeaderboardType GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_get_AllTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_get_AllTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalLeaderboardsModel::LeaderboardType>("", "LocalLeaderboardsModel/LeaderboardType", "AllTime"));
}
// Autogenerated static field setter
// Set static field: static public LocalLeaderboardsModel/LeaderboardType AllTime
void GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_set_AllTime(GlobalNamespace::LocalLeaderboardsModel::LeaderboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_set_AllTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalLeaderboardsModel/LeaderboardType", "AllTime", value));
}
// Autogenerated static field getter
// Get static field: static public LocalLeaderboardsModel/LeaderboardType Daily
GlobalNamespace::LocalLeaderboardsModel::LeaderboardType GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_get_Daily() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_get_Daily");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalLeaderboardsModel::LeaderboardType>("", "LocalLeaderboardsModel/LeaderboardType", "Daily"));
}
// Autogenerated static field setter
// Set static field: static public LocalLeaderboardsModel/LeaderboardType Daily
void GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_set_Daily(GlobalNamespace::LocalLeaderboardsModel::LeaderboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardsModel::LeaderboardType::_set_Daily");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalLeaderboardsModel/LeaderboardType", "Daily", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalLeaderboardsModel/ScoreData
#include "GlobalNamespace/LocalLeaderboardsModel_ScoreData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalLeaderboardsModel/LeaderboardData
#include "GlobalNamespace/LocalLeaderboardsModel_LeaderboardData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: LocalLeaderboardsModel/ScoreData
#include "GlobalNamespace/LocalLeaderboardsModel_ScoreData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalLeaderboardsModel/SavedLeaderboardsData
#include "GlobalNamespace/LocalLeaderboardsModel_SavedLeaderboardsData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: LocalLeaderboardsModel/LeaderboardData
#include "GlobalNamespace/LocalLeaderboardsModel_LeaderboardData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusPlatformLeaderboardsHandler
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler.hpp"
// Including type: OculusPlatformLeaderboardsHandler/<>c
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler_--c.hpp"
// Including type: OculusPlatformLeaderboardsHandler/<>c__DisplayClass3_0
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler_--c__DisplayClass3_0.hpp"
// Including type: OculusPlatformLeaderboardsHandler/<>c__DisplayClass5_0
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler_--c__DisplayClass5_0.hpp"
// Including type: OculusPlatformLeaderboardsHandler/<>c__DisplayClass6_0
#include "GlobalNamespace/OculusPlatformLeaderboardsHandler_--c__DisplayClass6_0.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: Oculus.Platform.Request
#include "Oculus/Platform/Request.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: PlatformLeaderboardsModel/ScoresScope
#include "GlobalNamespace/PlatformLeaderboardsModel_ScoresScope.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresCompletionHandler.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformLeaderboardsHandler.AddOculusRequest
void GlobalNamespace::OculusPlatformLeaderboardsHandler::AddOculusRequest(Oculus::Platform::Request* oculusRequest, GlobalNamespace::HMAsyncRequest* asyncRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformLeaderboardsHandler::AddOculusRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOculusRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oculusRequest), ::il2cpp_utils::ExtractType(asyncRequest)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, oculusRequest, asyncRequest);
}
// Autogenerated method: OculusPlatformLeaderboardsHandler.CheckMessageForValidRequest
bool GlobalNamespace::OculusPlatformLeaderboardsHandler::CheckMessageForValidRequest(Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformLeaderboardsHandler::CheckMessageForValidRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckMessageForValidRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: OculusPlatformLeaderboardsHandler.GetScores
GlobalNamespace::HMAsyncRequest* GlobalNamespace::OculusPlatformLeaderboardsHandler::GetScores(GlobalNamespace::IDifficultyBeatmap* beatmap, int count, int fromRank, GlobalNamespace::PlatformLeaderboardsModel::ScoresScope scope, ::Il2CppString* referencePlayerId, GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformLeaderboardsHandler::GetScores");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(fromRank), ::il2cpp_utils::ExtractType(scope), ::il2cpp_utils::ExtractType(referencePlayerId), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, beatmap, count, fromRank, scope, referencePlayerId, completionHandler);
}
// Autogenerated method: OculusPlatformLeaderboardsHandler.UploadScore
GlobalNamespace::HMAsyncRequest* GlobalNamespace::OculusPlatformLeaderboardsHandler::UploadScore(GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData, GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformLeaderboardsHandler::UploadScore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, scoreData, completionHandler);
}
