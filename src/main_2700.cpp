// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HTTPLeaderboardsModel/<SendLevelScoreResultAsync>d__11
#include "GlobalNamespace/HTTPLeaderboardsModel_-SendLevelScoreResultAsync-d__11.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HTTPLeaderboardsModel/<SendLevelScoreResultAsync>d__11.MoveNext
void GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: HTTPLeaderboardsModel/<SendLevelScoreResultAsync>d__11.SetStateMachine
void GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::*)()>(&HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HTTPLeaderboardsModel::$SendLevelScoreResultAsync$d__11), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardsModelLegacyWrapper
#include "GlobalNamespace/LeaderboardsModelLegacyWrapper.hpp"
// Including type: LeaderboardsModelLegacyWrapper/HMAsyncRequestWithCancellationToken
#include "GlobalNamespace/LeaderboardsModelLegacyWrapper_HMAsyncRequestWithCancellationToken.hpp"
// Including type: LeaderboardsModelLegacyWrapper/<GetLeaderboardEntriesAsync>d__4
#include "GlobalNamespace/LeaderboardsModelLegacyWrapper_-GetLeaderboardEntriesAsync-d__4.hpp"
// Including type: LeaderboardsModelLegacyWrapper/<SendLevelScoreResutlAsync>d__5
#include "GlobalNamespace/LeaderboardsModelLegacyWrapper_-SendLevelScoreResutlAsync-d__5.hpp"
// Including type: OnlineServices.ILeaderboardsModel
#include "OnlineServices/ILeaderboardsModel.hpp"
// Including type: OnlineServices.GetLeaderboardFilterData
#include "OnlineServices/GetLeaderboardFilterData.hpp"
// Including type: OnlineServices.LevelScoreResultsData
#include "OnlineServices/LevelScoreResultsData.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresCompletionHandler.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
// Including type: PlatformLeaderboardsModel/ScoresScope
#include "GlobalNamespace/PlatformLeaderboardsModel_ScoresScope.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LeaderboardsModelLegacyWrapper.GetLeaderboardEntriesAsync
void GlobalNamespace::LeaderboardsModelLegacyWrapper::GetLeaderboardEntriesAsync(OnlineServices::GetLeaderboardFilterData leaderboardFilterData, GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken* asyncRequest, GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardsModelLegacyWrapper::GetLeaderboardEntriesAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardEntriesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardFilterData), ::il2cpp_utils::ExtractType(asyncRequest), ::il2cpp_utils::ExtractType(completionHandler)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, leaderboardFilterData, asyncRequest, completionHandler);
}
// Autogenerated method: LeaderboardsModelLegacyWrapper.SendLevelScoreResutlAsync
void GlobalNamespace::LeaderboardsModelLegacyWrapper::SendLevelScoreResutlAsync(OnlineServices::LevelScoreResultsData levelScoreResultsData, GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken* asyncRequest, GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardsModelLegacyWrapper::SendLevelScoreResutlAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendLevelScoreResutlAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelScoreResultsData), ::il2cpp_utils::ExtractType(asyncRequest), ::il2cpp_utils::ExtractType(completionHandler)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelScoreResultsData, asyncRequest, completionHandler);
}
// Autogenerated method: LeaderboardsModelLegacyWrapper.GetScores
GlobalNamespace::HMAsyncRequest* GlobalNamespace::LeaderboardsModelLegacyWrapper::GetScores(GlobalNamespace::IDifficultyBeatmap* beatmap, int count, int fromRank, GlobalNamespace::PlatformLeaderboardsModel::ScoresScope scope, ::Il2CppString* referencePlayerId, GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardsModelLegacyWrapper::GetScores");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(fromRank), ::il2cpp_utils::ExtractType(scope), ::il2cpp_utils::ExtractType(referencePlayerId), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, beatmap, count, fromRank, scope, referencePlayerId, completionHandler);
}
// Autogenerated method: LeaderboardsModelLegacyWrapper.UploadScore
GlobalNamespace::HMAsyncRequest* GlobalNamespace::LeaderboardsModelLegacyWrapper::UploadScore(GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData, GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardsModelLegacyWrapper::UploadScore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, scoreData, completionHandler);
}
// Writing MetadataGetter for method: LeaderboardsModelLegacyWrapper::GetLeaderboardEntriesAsync
// Il2CppName: GetLeaderboardEntriesAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardsModelLegacyWrapper::*)(OnlineServices::GetLeaderboardFilterData, GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken*, GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler*)>(&LeaderboardsModelLegacyWrapper::GetLeaderboardEntriesAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardsModelLegacyWrapper*), "GetLeaderboardEntriesAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<OnlineServices::GetLeaderboardFilterData>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler*>()});
  }
};
// Writing MetadataGetter for method: LeaderboardsModelLegacyWrapper::SendLevelScoreResutlAsync
// Il2CppName: SendLevelScoreResutlAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardsModelLegacyWrapper::*)(OnlineServices::LevelScoreResultsData, GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken*, GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler*)>(&LeaderboardsModelLegacyWrapper::SendLevelScoreResutlAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardsModelLegacyWrapper*), "SendLevelScoreResutlAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<OnlineServices::LevelScoreResultsData>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler*>()});
  }
};
// Writing MetadataGetter for method: LeaderboardsModelLegacyWrapper::GetScores
// Il2CppName: GetScores
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::HMAsyncRequest* (LeaderboardsModelLegacyWrapper::*)(GlobalNamespace::IDifficultyBeatmap*, int, int, GlobalNamespace::PlatformLeaderboardsModel::ScoresScope, ::Il2CppString*, GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler*)>(&LeaderboardsModelLegacyWrapper::GetScores)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardsModelLegacyWrapper*), "GetScores", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformLeaderboardsModel::ScoresScope>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler*>()});
  }
};
// Writing MetadataGetter for method: LeaderboardsModelLegacyWrapper::UploadScore
// Il2CppName: UploadScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::HMAsyncRequest* (LeaderboardsModelLegacyWrapper::*)(GlobalNamespace::LeaderboardScoreUploader::ScoreData*, GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler*)>(&LeaderboardsModelLegacyWrapper::UploadScore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardsModelLegacyWrapper*), "UploadScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LeaderboardScoreUploader::ScoreData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler*>()});
  }
};
// Writing MetadataGetter for method: LeaderboardsModelLegacyWrapper::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardsModelLegacyWrapper::*)()>(&LeaderboardsModelLegacyWrapper::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardsModelLegacyWrapper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardsModelLegacyWrapper::*)()>(&LeaderboardsModelLegacyWrapper::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardsModelLegacyWrapper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardsModelLegacyWrapper/HMAsyncRequestWithCancellationToken
#include "GlobalNamespace/LeaderboardsModelLegacyWrapper_HMAsyncRequestWithCancellationToken.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LeaderboardsModelLegacyWrapper/HMAsyncRequestWithCancellationToken.get_cancellationTokenSource
System::Threading::CancellationTokenSource* GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::get_cancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::get_cancellationTokenSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cancellationTokenSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::CancellationTokenSource*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardsModelLegacyWrapper/HMAsyncRequestWithCancellationToken.Cancel
void GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::Cancel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::get_cancellationTokenSource
// Il2CppName: get_cancellationTokenSource
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::CancellationTokenSource* (LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::*)()>(&LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::get_cancellationTokenSource)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken*), "get_cancellationTokenSource", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::*)()>(&LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::*)()>(&LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::Cancel
// Il2CppName: Cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::*)()>(&LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken::Cancel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardsModelLegacyWrapper::HMAsyncRequestWithCancellationToken*), "Cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardsModelLegacyWrapper/<GetLeaderboardEntriesAsync>d__4
#include "GlobalNamespace/LeaderboardsModelLegacyWrapper_-GetLeaderboardEntriesAsync-d__4.hpp"
// Including type: LeaderboardsModelLegacyWrapper/HMAsyncRequestWithCancellationToken
#include "GlobalNamespace/LeaderboardsModelLegacyWrapper_HMAsyncRequestWithCancellationToken.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresCompletionHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LeaderboardsModelLegacyWrapper/<GetLeaderboardEntriesAsync>d__4.MoveNext
void GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: LeaderboardsModelLegacyWrapper/<GetLeaderboardEntriesAsync>d__4.SetStateMachine
void GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::*)()>(&LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardsModelLegacyWrapper::$GetLeaderboardEntriesAsync$d__4), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardsModelLegacyWrapper/<SendLevelScoreResutlAsync>d__5
#include "GlobalNamespace/LeaderboardsModelLegacyWrapper_-SendLevelScoreResutlAsync-d__5.hpp"
// Including type: LeaderboardsModelLegacyWrapper/HMAsyncRequestWithCancellationToken
#include "GlobalNamespace/LeaderboardsModelLegacyWrapper_HMAsyncRequestWithCancellationToken.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LeaderboardsModelLegacyWrapper/<SendLevelScoreResutlAsync>d__5.MoveNext
void GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: LeaderboardsModelLegacyWrapper/<SendLevelScoreResutlAsync>d__5.SetStateMachine
void GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::*)()>(&LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardsModelLegacyWrapper::$SendLevelScoreResutlAsync$d__5), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TwoLeaderboardsHandlerWrapper
#include "GlobalNamespace/TwoLeaderboardsHandlerWrapper.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresResult
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresResult.hpp"
// Including type: PlatformLeaderboardsModel/LeaderboardScore
#include "GlobalNamespace/PlatformLeaderboardsModel_LeaderboardScore.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreResult
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreResult.hpp"
// Including type: PlatformLeaderboardsModel/ScoresScope
#include "GlobalNamespace/PlatformLeaderboardsModel_ScoresScope.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresCompletionHandler.hpp"
// Including type: LeaderboardScoreUploader/ScoreData
#include "GlobalNamespace/LeaderboardScoreUploader_ScoreData.hpp"
// Including type: PlatformLeaderboardsModel/UploadScoreCompletionHandler
#include "GlobalNamespace/PlatformLeaderboardsModel_UploadScoreCompletionHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TwoLeaderboardsHandlerWrapper.<GetScores>b__5_0
void GlobalNamespace::TwoLeaderboardsHandlerWrapper::$GetScores$b__5_0(GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult result, ::Array<GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore*>* scores, int referencePlayerScoreIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TwoLeaderboardsHandlerWrapper::<GetScores>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetScores>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(scores), ::il2cpp_utils::ExtractType(referencePlayerScoreIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result, scores, referencePlayerScoreIndex);
}
// Autogenerated method: TwoLeaderboardsHandlerWrapper.<UploadScore>b__6_0
void GlobalNamespace::TwoLeaderboardsHandlerWrapper::$UploadScore$b__6_0(GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TwoLeaderboardsHandlerWrapper::<UploadScore>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UploadScore>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: TwoLeaderboardsHandlerWrapper.GetScores
GlobalNamespace::HMAsyncRequest* GlobalNamespace::TwoLeaderboardsHandlerWrapper::GetScores(GlobalNamespace::IDifficultyBeatmap* beatmap, int count, int fromRank, GlobalNamespace::PlatformLeaderboardsModel::ScoresScope scope, ::Il2CppString* referencePlayerId, GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TwoLeaderboardsHandlerWrapper::GetScores");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(fromRank), ::il2cpp_utils::ExtractType(scope), ::il2cpp_utils::ExtractType(referencePlayerId), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, beatmap, count, fromRank, scope, referencePlayerId, completionHandler);
}
// Autogenerated method: TwoLeaderboardsHandlerWrapper.UploadScore
GlobalNamespace::HMAsyncRequest* GlobalNamespace::TwoLeaderboardsHandlerWrapper::UploadScore(GlobalNamespace::LeaderboardScoreUploader::ScoreData* scoreData, GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TwoLeaderboardsHandlerWrapper::UploadScore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreData), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, scoreData, completionHandler);
}
// Writing MetadataGetter for method: TwoLeaderboardsHandlerWrapper::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TwoLeaderboardsHandlerWrapper::*)(GlobalNamespace::PlatformLeaderboardsHandler*, GlobalNamespace::PlatformLeaderboardsHandler*)>(&TwoLeaderboardsHandlerWrapper::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwoLeaderboardsHandlerWrapper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformLeaderboardsHandler*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformLeaderboardsHandler*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TwoLeaderboardsHandlerWrapper::*)(GlobalNamespace::PlatformLeaderboardsHandler*, GlobalNamespace::PlatformLeaderboardsHandler*)>(&TwoLeaderboardsHandlerWrapper::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwoLeaderboardsHandlerWrapper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformLeaderboardsHandler*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformLeaderboardsHandler*>()});
  }
};
// Writing MetadataGetter for method: TwoLeaderboardsHandlerWrapper::$GetScores$b__5_0
// Il2CppName: <GetScores>b__5_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TwoLeaderboardsHandlerWrapper::*)(GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult, ::Array<GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore*>*, int)>(&TwoLeaderboardsHandlerWrapper::$GetScores$b__5_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwoLeaderboardsHandlerWrapper*), "<GetScores>b__5_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult>(), ::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TwoLeaderboardsHandlerWrapper::$UploadScore$b__6_0
// Il2CppName: <UploadScore>b__6_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TwoLeaderboardsHandlerWrapper::*)(GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult)>(&TwoLeaderboardsHandlerWrapper::$UploadScore$b__6_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwoLeaderboardsHandlerWrapper*), "<UploadScore>b__6_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformLeaderboardsModel::UploadScoreResult>()});
  }
};
// Writing MetadataGetter for method: TwoLeaderboardsHandlerWrapper::GetScores
// Il2CppName: GetScores
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::HMAsyncRequest* (TwoLeaderboardsHandlerWrapper::*)(GlobalNamespace::IDifficultyBeatmap*, int, int, GlobalNamespace::PlatformLeaderboardsModel::ScoresScope, ::Il2CppString*, GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler*)>(&TwoLeaderboardsHandlerWrapper::GetScores)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwoLeaderboardsHandlerWrapper*), "GetScores", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformLeaderboardsModel::ScoresScope>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformLeaderboardsModel::GetScoresCompletionHandler*>()});
  }
};
// Writing MetadataGetter for method: TwoLeaderboardsHandlerWrapper::UploadScore
// Il2CppName: UploadScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::HMAsyncRequest* (TwoLeaderboardsHandlerWrapper::*)(GlobalNamespace::LeaderboardScoreUploader::ScoreData*, GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler*)>(&TwoLeaderboardsHandlerWrapper::UploadScore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TwoLeaderboardsHandlerWrapper*), "UploadScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LeaderboardScoreUploader::ScoreData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformLeaderboardsModel::UploadScoreCompletionHandler*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestLeaderboardsModel
#include "GlobalNamespace/TestLeaderboardsModel.hpp"
// Including type: TestLeaderboardsModel/<GetLeaderboardEntriesAsync>d__4
#include "GlobalNamespace/TestLeaderboardsModel_-GetLeaderboardEntriesAsync-d__4.hpp"
// Including type: TestLeaderboardsModel/<SendLevelScoreResultAsync>d__5
#include "GlobalNamespace/TestLeaderboardsModel_-SendLevelScoreResultAsync-d__5.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: OnlineServices.GetLeaderboardFilterData
#include "OnlineServices/GetLeaderboardFilterData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: OnlineServices.LevelScoreResultsData
#include "OnlineServices/LevelScoreResultsData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestLeaderboardsModel.add_scoreForLeaderboardDidUploadEvent
void GlobalNamespace::TestLeaderboardsModel::add_scoreForLeaderboardDidUploadEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestLeaderboardsModel::add_scoreForLeaderboardDidUploadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_scoreForLeaderboardDidUploadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TestLeaderboardsModel.remove_scoreForLeaderboardDidUploadEvent
void GlobalNamespace::TestLeaderboardsModel::remove_scoreForLeaderboardDidUploadEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestLeaderboardsModel::remove_scoreForLeaderboardDidUploadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_scoreForLeaderboardDidUploadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TestLeaderboardsModel.GetLeaderboardId
::Il2CppString* GlobalNamespace::TestLeaderboardsModel::GetLeaderboardId(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestLeaderboardsModel::GetLeaderboardId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, difficultyBeatmap);
}
// Autogenerated method: TestLeaderboardsModel.GetLeaderboardEntriesAsync
System::Threading::Tasks::Task_1<OnlineServices::GetLeaderboardEntriesResult>* GlobalNamespace::TestLeaderboardsModel::GetLeaderboardEntriesAsync(OnlineServices::GetLeaderboardFilterData leaderboardFilterData, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestLeaderboardsModel::GetLeaderboardEntriesAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardEntriesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardFilterData), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<OnlineServices::GetLeaderboardEntriesResult>*, false>(this, ___internal__method, leaderboardFilterData, cancellationToken);
}
// Autogenerated method: TestLeaderboardsModel.SendLevelScoreResultAsync
System::Threading::Tasks::Task_1<OnlineServices::SendLeaderboardEntryResult>* GlobalNamespace::TestLeaderboardsModel::SendLevelScoreResultAsync(OnlineServices::LevelScoreResultsData levelScoreResult, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestLeaderboardsModel::SendLevelScoreResultAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendLevelScoreResultAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelScoreResult), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<OnlineServices::SendLeaderboardEntryResult>*, false>(this, ___internal__method, levelScoreResult, cancellationToken);
}
// Writing MetadataGetter for method: TestLeaderboardsModel::add_scoreForLeaderboardDidUploadEvent
// Il2CppName: add_scoreForLeaderboardDidUploadEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestLeaderboardsModel::*)(System::Action_1<::Il2CppString*>*)>(&TestLeaderboardsModel::add_scoreForLeaderboardDidUploadEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestLeaderboardsModel*), "add_scoreForLeaderboardDidUploadEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: TestLeaderboardsModel::remove_scoreForLeaderboardDidUploadEvent
// Il2CppName: remove_scoreForLeaderboardDidUploadEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestLeaderboardsModel::*)(System::Action_1<::Il2CppString*>*)>(&TestLeaderboardsModel::remove_scoreForLeaderboardDidUploadEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestLeaderboardsModel*), "remove_scoreForLeaderboardDidUploadEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: TestLeaderboardsModel::GetLeaderboardId
// Il2CppName: GetLeaderboardId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (TestLeaderboardsModel::*)(GlobalNamespace::IDifficultyBeatmap*)>(&TestLeaderboardsModel::GetLeaderboardId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestLeaderboardsModel*), "GetLeaderboardId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>()});
  }
};
// Writing MetadataGetter for method: TestLeaderboardsModel::GetLeaderboardEntriesAsync
// Il2CppName: GetLeaderboardEntriesAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<OnlineServices::GetLeaderboardEntriesResult>* (TestLeaderboardsModel::*)(OnlineServices::GetLeaderboardFilterData, System::Threading::CancellationToken)>(&TestLeaderboardsModel::GetLeaderboardEntriesAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestLeaderboardsModel*), "GetLeaderboardEntriesAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<OnlineServices::GetLeaderboardFilterData>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: TestLeaderboardsModel::SendLevelScoreResultAsync
// Il2CppName: SendLevelScoreResultAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<OnlineServices::SendLeaderboardEntryResult>* (TestLeaderboardsModel::*)(OnlineServices::LevelScoreResultsData, System::Threading::CancellationToken)>(&TestLeaderboardsModel::SendLevelScoreResultAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestLeaderboardsModel*), "SendLevelScoreResultAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<OnlineServices::LevelScoreResultsData>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: TestLeaderboardsModel::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestLeaderboardsModel::*)()>(&TestLeaderboardsModel::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestLeaderboardsModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestLeaderboardsModel::*)()>(&TestLeaderboardsModel::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestLeaderboardsModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestLeaderboardsModel/<GetLeaderboardEntriesAsync>d__4
#include "GlobalNamespace/TestLeaderboardsModel_-GetLeaderboardEntriesAsync-d__4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestLeaderboardsModel/<GetLeaderboardEntriesAsync>d__4.MoveNext
void GlobalNamespace::TestLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestLeaderboardsModel/<GetLeaderboardEntriesAsync>d__4.SetStateMachine
void GlobalNamespace::TestLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: TestLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4::*)()>(&TestLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&TestLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestLeaderboardsModel::$GetLeaderboardEntriesAsync$d__4), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestLeaderboardsModel/<SendLevelScoreResultAsync>d__5
#include "GlobalNamespace/TestLeaderboardsModel_-SendLevelScoreResultAsync-d__5.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestLeaderboardsModel/<SendLevelScoreResultAsync>d__5.MoveNext
void GlobalNamespace::TestLeaderboardsModel::$SendLevelScoreResultAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestLeaderboardsModel::$SendLevelScoreResultAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestLeaderboardsModel/<SendLevelScoreResultAsync>d__5.SetStateMachine
void GlobalNamespace::TestLeaderboardsModel::$SendLevelScoreResultAsync$d__5::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestLeaderboardsModel::$SendLevelScoreResultAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: TestLeaderboardsModel::$SendLevelScoreResultAsync$d__5::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestLeaderboardsModel::$SendLevelScoreResultAsync$d__5::*)()>(&TestLeaderboardsModel::$SendLevelScoreResultAsync$d__5::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestLeaderboardsModel::$SendLevelScoreResultAsync$d__5), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestLeaderboardsModel::$SendLevelScoreResultAsync$d__5::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestLeaderboardsModel::$SendLevelScoreResultAsync$d__5::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&TestLeaderboardsModel::$SendLevelScoreResultAsync$d__5::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestLeaderboardsModel::$SendLevelScoreResultAsync$d__5), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UserLoginDtoDataSource
#include "GlobalNamespace/UserLoginDtoDataSource.hpp"
// Including type: UserLoginDtoDataSource/<GetPlatformUserIdAsync>d__2
#include "GlobalNamespace/UserLoginDtoDataSource_-GetPlatformUserIdAsync-d__2.hpp"
// Including type: UserLoginDtoDataSource/<UserAuthenticationDataAsync>d__3
#include "GlobalNamespace/UserLoginDtoDataSource_-UserAuthenticationDataAsync-d__3.hpp"
// Including type: UserLoginDtoDataSource/<GetUserFriendsUserIds>d__4
#include "GlobalNamespace/UserLoginDtoDataSource_-GetUserFriendsUserIds-d__4.hpp"
// Including type: IPlatformUserModel
#include "GlobalNamespace/IPlatformUserModel.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.UserAuthenticationData
#include "BeatSaberAPI/DataTransferObjects/UserAuthenticationData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kVersion
::Il2CppString* GlobalNamespace::UserLoginDtoDataSource::_get_kVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserLoginDtoDataSource::_get_kVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "UserLoginDtoDataSource", "kVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String kVersion
void GlobalNamespace::UserLoginDtoDataSource::_set_kVersion(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserLoginDtoDataSource::_set_kVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserLoginDtoDataSource", "kVersion", value));
}
// Autogenerated method: UserLoginDtoDataSource.GetPlatformUserIdAsync
System::Threading::Tasks::Task_1<::Il2CppString*>* GlobalNamespace::UserLoginDtoDataSource::GetPlatformUserIdAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserLoginDtoDataSource::GetPlatformUserIdAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlatformUserIdAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<::Il2CppString*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: UserLoginDtoDataSource.UserAuthenticationDataAsync
System::Threading::Tasks::Task_1<BeatSaberAPI::DataTransferObjects::UserAuthenticationData*>* GlobalNamespace::UserLoginDtoDataSource::UserAuthenticationDataAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserLoginDtoDataSource::UserAuthenticationDataAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UserAuthenticationDataAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<BeatSaberAPI::DataTransferObjects::UserAuthenticationData*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: UserLoginDtoDataSource.GetUserFriendsUserIds
System::Threading::Tasks::Task_1<::Array<::Il2CppString*>*>* GlobalNamespace::UserLoginDtoDataSource::GetUserFriendsUserIds(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserLoginDtoDataSource::GetUserFriendsUserIds");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserFriendsUserIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<::Array<::Il2CppString*>*>*, false>(this, ___internal__method, cancellationToken);
}
// Writing MetadataGetter for method: UserLoginDtoDataSource::GetPlatformUserIdAsync
// Il2CppName: GetPlatformUserIdAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<::Il2CppString*>* (UserLoginDtoDataSource::*)(System::Threading::CancellationToken)>(&UserLoginDtoDataSource::GetPlatformUserIdAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserLoginDtoDataSource*), "GetPlatformUserIdAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: UserLoginDtoDataSource::UserAuthenticationDataAsync
// Il2CppName: UserAuthenticationDataAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<BeatSaberAPI::DataTransferObjects::UserAuthenticationData*>* (UserLoginDtoDataSource::*)(System::Threading::CancellationToken)>(&UserLoginDtoDataSource::UserAuthenticationDataAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserLoginDtoDataSource*), "UserAuthenticationDataAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: UserLoginDtoDataSource::GetUserFriendsUserIds
// Il2CppName: GetUserFriendsUserIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<::Array<::Il2CppString*>*>* (UserLoginDtoDataSource::*)(System::Threading::CancellationToken)>(&UserLoginDtoDataSource::GetUserFriendsUserIds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserLoginDtoDataSource*), "GetUserFriendsUserIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: UserLoginDtoDataSource::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserLoginDtoDataSource::*)()>(&UserLoginDtoDataSource::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserLoginDtoDataSource*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserLoginDtoDataSource::*)()>(&UserLoginDtoDataSource::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserLoginDtoDataSource*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UserLoginDtoDataSource/<GetPlatformUserIdAsync>d__2
#include "GlobalNamespace/UserLoginDtoDataSource_-GetPlatformUserIdAsync-d__2.hpp"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UserLoginDtoDataSource/<GetPlatformUserIdAsync>d__2.MoveNext
void GlobalNamespace::UserLoginDtoDataSource::$GetPlatformUserIdAsync$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserLoginDtoDataSource::$GetPlatformUserIdAsync$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: UserLoginDtoDataSource/<GetPlatformUserIdAsync>d__2.SetStateMachine
void GlobalNamespace::UserLoginDtoDataSource::$GetPlatformUserIdAsync$d__2::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserLoginDtoDataSource::$GetPlatformUserIdAsync$d__2::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: UserLoginDtoDataSource::$GetPlatformUserIdAsync$d__2::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserLoginDtoDataSource::$GetPlatformUserIdAsync$d__2::*)()>(&UserLoginDtoDataSource::$GetPlatformUserIdAsync$d__2::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserLoginDtoDataSource::$GetPlatformUserIdAsync$d__2), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UserLoginDtoDataSource::$GetPlatformUserIdAsync$d__2::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserLoginDtoDataSource::$GetPlatformUserIdAsync$d__2::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&UserLoginDtoDataSource::$GetPlatformUserIdAsync$d__2::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserLoginDtoDataSource::$GetPlatformUserIdAsync$d__2), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UserLoginDtoDataSource/<UserAuthenticationDataAsync>d__3
#include "GlobalNamespace/UserLoginDtoDataSource_-UserAuthenticationDataAsync-d__3.hpp"
// Including type: BeatSaberAPI.DataTransferObjects.UserAuthenticationData
#include "BeatSaberAPI/DataTransferObjects/UserAuthenticationData.hpp"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: PlatformUserAuthTokenData
#include "GlobalNamespace/PlatformUserAuthTokenData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UserLoginDtoDataSource/<UserAuthenticationDataAsync>d__3.MoveNext
void GlobalNamespace::UserLoginDtoDataSource::$UserAuthenticationDataAsync$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserLoginDtoDataSource::$UserAuthenticationDataAsync$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: UserLoginDtoDataSource/<UserAuthenticationDataAsync>d__3.SetStateMachine
void GlobalNamespace::UserLoginDtoDataSource::$UserAuthenticationDataAsync$d__3::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserLoginDtoDataSource::$UserAuthenticationDataAsync$d__3::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: UserLoginDtoDataSource::$UserAuthenticationDataAsync$d__3::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserLoginDtoDataSource::$UserAuthenticationDataAsync$d__3::*)()>(&UserLoginDtoDataSource::$UserAuthenticationDataAsync$d__3::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserLoginDtoDataSource::$UserAuthenticationDataAsync$d__3), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UserLoginDtoDataSource::$UserAuthenticationDataAsync$d__3::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserLoginDtoDataSource::$UserAuthenticationDataAsync$d__3::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&UserLoginDtoDataSource::$UserAuthenticationDataAsync$d__3::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserLoginDtoDataSource::$UserAuthenticationDataAsync$d__3), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UserLoginDtoDataSource/<GetUserFriendsUserIds>d__4
#include "GlobalNamespace/UserLoginDtoDataSource_-GetUserFriendsUserIds-d__4.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UserLoginDtoDataSource/<GetUserFriendsUserIds>d__4.MoveNext
void GlobalNamespace::UserLoginDtoDataSource::$GetUserFriendsUserIds$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserLoginDtoDataSource::$GetUserFriendsUserIds$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: UserLoginDtoDataSource/<GetUserFriendsUserIds>d__4.SetStateMachine
void GlobalNamespace::UserLoginDtoDataSource::$GetUserFriendsUserIds$d__4::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserLoginDtoDataSource::$GetUserFriendsUserIds$d__4::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: UserLoginDtoDataSource::$GetUserFriendsUserIds$d__4::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserLoginDtoDataSource::$GetUserFriendsUserIds$d__4::*)()>(&UserLoginDtoDataSource::$GetUserFriendsUserIds$d__4::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserLoginDtoDataSource::$GetUserFriendsUserIds$d__4), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UserLoginDtoDataSource::$GetUserFriendsUserIds$d__4::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserLoginDtoDataSource::$GetUserFriendsUserIds$d__4::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&UserLoginDtoDataSource::$GetUserFriendsUserIds$d__4::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserLoginDtoDataSource::$GetUserFriendsUserIds$d__4), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PerceivedLoudnessPerLevelSO
#include "GlobalNamespace/PerceivedLoudnessPerLevelSO.hpp"
// Including type: PerceivedLoudnessPerLevelSO/PerceivedLevelLoudnessPair
#include "GlobalNamespace/PerceivedLoudnessPerLevelSO_PerceivedLevelLoudnessPair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PerceivedLoudnessPerLevelSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PerceivedLoudnessPerLevelSO::*)()>(&PerceivedLoudnessPerLevelSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PerceivedLoudnessPerLevelSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PerceivedLoudnessPerLevelSO::*)()>(&PerceivedLoudnessPerLevelSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PerceivedLoudnessPerLevelSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PerceivedLoudnessPerLevelSO/PerceivedLevelLoudnessPair
#include "GlobalNamespace/PerceivedLoudnessPerLevelSO_PerceivedLevelLoudnessPair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PerceivedLoudnessPerLevelSO/PerceivedLevelLoudnessPair.get_levelId
::Il2CppString* GlobalNamespace::PerceivedLoudnessPerLevelSO::PerceivedLevelLoudnessPair::get_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PerceivedLoudnessPerLevelSO::PerceivedLevelLoudnessPair::get_levelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PerceivedLoudnessPerLevelSO/PerceivedLevelLoudnessPair.get_perceivedLoudness
float GlobalNamespace::PerceivedLoudnessPerLevelSO::PerceivedLevelLoudnessPair::get_perceivedLoudness() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PerceivedLoudnessPerLevelSO::PerceivedLevelLoudnessPair::get_perceivedLoudness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_perceivedLoudness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PerceivedLoudnessPerLevelSO::PerceivedLevelLoudnessPair::get_levelId
// Il2CppName: get_levelId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PerceivedLoudnessPerLevelSO::PerceivedLevelLoudnessPair::*)()>(&PerceivedLoudnessPerLevelSO::PerceivedLevelLoudnessPair::get_levelId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PerceivedLoudnessPerLevelSO::PerceivedLevelLoudnessPair*), "get_levelId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PerceivedLoudnessPerLevelSO::PerceivedLevelLoudnessPair::get_perceivedLoudness
// Il2CppName: get_perceivedLoudness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (PerceivedLoudnessPerLevelSO::PerceivedLevelLoudnessPair::*)()>(&PerceivedLoudnessPerLevelSO::PerceivedLevelLoudnessPair::get_perceivedLoudness)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PerceivedLoudnessPerLevelSO::PerceivedLevelLoudnessPair*), "get_perceivedLoudness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PerceivedLoudnessPerLevelSO::PerceivedLevelLoudnessPair::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PerceivedLoudnessPerLevelSO::PerceivedLevelLoudnessPair::*)(::Il2CppString*, float)>(&PerceivedLoudnessPerLevelSO::PerceivedLevelLoudnessPair::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PerceivedLoudnessPerLevelSO::PerceivedLevelLoudnessPair*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PerceivedLoudnessPerLevelSO::PerceivedLevelLoudnessPair::*)(::Il2CppString*, float)>(&PerceivedLoudnessPerLevelSO::PerceivedLevelLoudnessPair::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PerceivedLoudnessPerLevelSO::PerceivedLevelLoudnessPair*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlatformUserAuthTokenData
#include "GlobalNamespace/PlatformUserAuthTokenData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlatformUserAuthTokenData.get_token
::Il2CppString* GlobalNamespace::PlatformUserAuthTokenData::get_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformUserAuthTokenData::get_token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PlatformUserAuthTokenData.set_token
void GlobalNamespace::PlatformUserAuthTokenData::set_token(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformUserAuthTokenData::set_token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlatformUserAuthTokenData.get_validPlatformEnvironment
GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment GlobalNamespace::PlatformUserAuthTokenData::get_validPlatformEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformUserAuthTokenData::get_validPlatformEnvironment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_validPlatformEnvironment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment, false>(this, ___internal__method);
}
// Autogenerated method: PlatformUserAuthTokenData.set_validPlatformEnvironment
void GlobalNamespace::PlatformUserAuthTokenData::set_validPlatformEnvironment(GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformUserAuthTokenData::set_validPlatformEnvironment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_validPlatformEnvironment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: PlatformUserAuthTokenData::get_token
// Il2CppName: get_token
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PlatformUserAuthTokenData::*)()>(&PlatformUserAuthTokenData::get_token)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformUserAuthTokenData*), "get_token", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlatformUserAuthTokenData::set_token
// Il2CppName: set_token
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformUserAuthTokenData::*)(::Il2CppString*)>(&PlatformUserAuthTokenData::set_token)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformUserAuthTokenData*), "set_token", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PlatformUserAuthTokenData::get_validPlatformEnvironment
// Il2CppName: get_validPlatformEnvironment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment (PlatformUserAuthTokenData::*)()>(&PlatformUserAuthTokenData::get_validPlatformEnvironment)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformUserAuthTokenData*), "get_validPlatformEnvironment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlatformUserAuthTokenData::set_validPlatformEnvironment
// Il2CppName: set_validPlatformEnvironment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformUserAuthTokenData::*)(GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment)>(&PlatformUserAuthTokenData::set_validPlatformEnvironment)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformUserAuthTokenData*), "set_validPlatformEnvironment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment>()});
  }
};
// Writing MetadataGetter for method: PlatformUserAuthTokenData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformUserAuthTokenData::*)(::Il2CppString*, GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment)>(&PlatformUserAuthTokenData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformUserAuthTokenData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformUserAuthTokenData::*)(::Il2CppString*, GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment)>(&PlatformUserAuthTokenData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformUserAuthTokenData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformUserAuthTokenData/PlatformEnviroment
#include "GlobalNamespace/PlatformUserAuthTokenData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlatformUserAuthTokenData/PlatformEnviroment Development
GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment::_get_Development() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment::_get_Development");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment>("", "PlatformUserAuthTokenData/PlatformEnviroment", "Development"));
}
// Autogenerated static field setter
// Set static field: static public PlatformUserAuthTokenData/PlatformEnviroment Development
void GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment::_set_Development(GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment::_set_Development");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformUserAuthTokenData/PlatformEnviroment", "Development", value));
}
// Autogenerated static field getter
// Get static field: static public PlatformUserAuthTokenData/PlatformEnviroment Certification
GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment::_get_Certification() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment::_get_Certification");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment>("", "PlatformUserAuthTokenData/PlatformEnviroment", "Certification"));
}
// Autogenerated static field setter
// Set static field: static public PlatformUserAuthTokenData/PlatformEnviroment Certification
void GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment::_set_Certification(GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment::_set_Certification");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformUserAuthTokenData/PlatformEnviroment", "Certification", value));
}
// Autogenerated static field getter
// Get static field: static public PlatformUserAuthTokenData/PlatformEnviroment Production
GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment::_get_Production() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment::_get_Production");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment>("", "PlatformUserAuthTokenData/PlatformEnviroment", "Production"));
}
// Autogenerated static field setter
// Set static field: static public PlatformUserAuthTokenData/PlatformEnviroment Production
void GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment::_set_Production(GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformUserAuthTokenData::PlatformEnviroment::_set_Production");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformUserAuthTokenData/PlatformEnviroment", "Production", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IPlatformUserModel
#include "GlobalNamespace/IPlatformUserModel.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: PlatformUserAuthTokenData
#include "GlobalNamespace/PlatformUserAuthTokenData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IPlatformUserModel.GetUserInfo
System::Threading::Tasks::Task_1<GlobalNamespace::UserInfo*>* GlobalNamespace::IPlatformUserModel::GetUserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPlatformUserModel::GetUserInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::UserInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: IPlatformUserModel.GetUserFriendsUserIds
System::Threading::Tasks::Task_1<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>* GlobalNamespace::IPlatformUserModel::GetUserFriendsUserIds(bool cached) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPlatformUserModel::GetUserFriendsUserIds");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserFriendsUserIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cached)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>*, false>(this, ___internal__method, cached);
}
// Autogenerated method: IPlatformUserModel.GetUserAuthToken
System::Threading::Tasks::Task_1<GlobalNamespace::PlatformUserAuthTokenData*>* GlobalNamespace::IPlatformUserModel::GetUserAuthToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPlatformUserModel::GetUserAuthToken");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserAuthToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::PlatformUserAuthTokenData*>*, false>(this, ___internal__method);
}
// Autogenerated method: IPlatformUserModel.GetUserNamesForUserIds
System::Threading::Tasks::Task_1<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>* GlobalNamespace::IPlatformUserModel::GetUserNamesForUserIds(System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>* userIds) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPlatformUserModel::GetUserNamesForUserIds");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserNamesForUserIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userIds)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>*, false>(this, ___internal__method, userIds);
}
// Writing MetadataGetter for method: IPlatformUserModel::GetUserInfo
// Il2CppName: GetUserInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<GlobalNamespace::UserInfo*>* (IPlatformUserModel::*)()>(&IPlatformUserModel::GetUserInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPlatformUserModel*), "GetUserInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IPlatformUserModel::GetUserFriendsUserIds
// Il2CppName: GetUserFriendsUserIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>* (IPlatformUserModel::*)(bool)>(&IPlatformUserModel::GetUserFriendsUserIds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPlatformUserModel*), "GetUserFriendsUserIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: IPlatformUserModel::GetUserAuthToken
// Il2CppName: GetUserAuthToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<GlobalNamespace::PlatformUserAuthTokenData*>* (IPlatformUserModel::*)()>(&IPlatformUserModel::GetUserAuthToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPlatformUserModel*), "GetUserAuthToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IPlatformUserModel::GetUserNamesForUserIds
// Il2CppName: GetUserNamesForUserIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>* (IPlatformUserModel::*)(System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*)>(&IPlatformUserModel::GetUserNamesForUserIds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPlatformUserModel*), "GetUserNamesForUserIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusPlatformUserModel
#include "GlobalNamespace/OculusPlatformUserModel.hpp"
// Including type: OculusPlatformUserModel/<>c__DisplayClass2_0
#include "GlobalNamespace/OculusPlatformUserModel_--c__DisplayClass2_0.hpp"
// Including type: OculusPlatformUserModel/<GetUserInfo>d__2
#include "GlobalNamespace/OculusPlatformUserModel_-GetUserInfo-d__2.hpp"
// Including type: OculusPlatformUserModel/<>c__DisplayClass3_0
#include "GlobalNamespace/OculusPlatformUserModel_--c__DisplayClass3_0.hpp"
// Including type: OculusPlatformUserModel/<GetUserFriendsUserIds>d__3
#include "GlobalNamespace/OculusPlatformUserModel_-GetUserFriendsUserIds-d__3.hpp"
// Including type: OculusPlatformUserModel/<>c__DisplayClass4_0
#include "GlobalNamespace/OculusPlatformUserModel_--c__DisplayClass4_0.hpp"
// Including type: OculusPlatformUserModel/<GetUserAuthToken>d__4
#include "GlobalNamespace/OculusPlatformUserModel_-GetUserAuthToken-d__4.hpp"
// Including type: OculusPlatformUserModel/<>c__DisplayClass5_0
#include "GlobalNamespace/OculusPlatformUserModel_--c__DisplayClass5_0.hpp"
// Including type: OculusPlatformUserModel/<>c__DisplayClass5_1
#include "GlobalNamespace/OculusPlatformUserModel_--c__DisplayClass5_1.hpp"
// Including type: OculusPlatformUserModel/<GetUserNamesForUserIds>d__5
#include "GlobalNamespace/OculusPlatformUserModel_-GetUserNamesForUserIds-d__5.hpp"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: PlatformUserAuthTokenData
#include "GlobalNamespace/PlatformUserAuthTokenData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformUserModel.GetUserInfo
System::Threading::Tasks::Task_1<GlobalNamespace::UserInfo*>* GlobalNamespace::OculusPlatformUserModel::GetUserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformUserModel::GetUserInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::UserInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusPlatformUserModel.GetUserFriendsUserIds
System::Threading::Tasks::Task_1<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>* GlobalNamespace::OculusPlatformUserModel::GetUserFriendsUserIds(bool cached) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformUserModel::GetUserFriendsUserIds");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserFriendsUserIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cached)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>*, false>(this, ___internal__method, cached);
}
// Autogenerated method: OculusPlatformUserModel.GetUserAuthToken
System::Threading::Tasks::Task_1<GlobalNamespace::PlatformUserAuthTokenData*>* GlobalNamespace::OculusPlatformUserModel::GetUserAuthToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformUserModel::GetUserAuthToken");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserAuthToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::PlatformUserAuthTokenData*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusPlatformUserModel.GetUserNamesForUserIds
System::Threading::Tasks::Task_1<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>* GlobalNamespace::OculusPlatformUserModel::GetUserNamesForUserIds(System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>* userIds) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformUserModel::GetUserNamesForUserIds");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserNamesForUserIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userIds)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>*, false>(this, ___internal__method, userIds);
}
// Writing MetadataGetter for method: OculusPlatformUserModel::GetUserInfo
// Il2CppName: GetUserInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<GlobalNamespace::UserInfo*>* (OculusPlatformUserModel::*)()>(&OculusPlatformUserModel::GetUserInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel*), "GetUserInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OculusPlatformUserModel::GetUserFriendsUserIds
// Il2CppName: GetUserFriendsUserIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>* (OculusPlatformUserModel::*)(bool)>(&OculusPlatformUserModel::GetUserFriendsUserIds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel*), "GetUserFriendsUserIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: OculusPlatformUserModel::GetUserAuthToken
// Il2CppName: GetUserAuthToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<GlobalNamespace::PlatformUserAuthTokenData*>* (OculusPlatformUserModel::*)()>(&OculusPlatformUserModel::GetUserAuthToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel*), "GetUserAuthToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OculusPlatformUserModel::GetUserNamesForUserIds
// Il2CppName: GetUserNamesForUserIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>* (OculusPlatformUserModel::*)(System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*)>(&OculusPlatformUserModel::GetUserNamesForUserIds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel*), "GetUserNamesForUserIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: OculusPlatformUserModel::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::*)()>(&OculusPlatformUserModel::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::*)()>(&OculusPlatformUserModel::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformUserModel/<>c__DisplayClass2_0
#include "GlobalNamespace/OculusPlatformUserModel_--c__DisplayClass2_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformUserModel/<>c__DisplayClass2_0.<GetUserInfo>b__0
void GlobalNamespace::OculusPlatformUserModel::$$c__DisplayClass2_0::$GetUserInfo$b__0(Oculus::Platform::Message_1<Oculus::Platform::Models::User*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformUserModel::$$c__DisplayClass2_0::<GetUserInfo>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserInfo>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Writing MetadataGetter for method: OculusPlatformUserModel::$$c__DisplayClass2_0::$GetUserInfo$b__0
// Il2CppName: <GetUserInfo>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$$c__DisplayClass2_0::*)(Oculus::Platform::Message_1<Oculus::Platform::Models::User*>*)>(&OculusPlatformUserModel::$$c__DisplayClass2_0::$GetUserInfo$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$$c__DisplayClass2_0*), "<GetUserInfo>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message_1<Oculus::Platform::Models::User*>*>()});
  }
};
// Writing MetadataGetter for method: OculusPlatformUserModel::$$c__DisplayClass2_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$$c__DisplayClass2_0::*)()>(&OculusPlatformUserModel::$$c__DisplayClass2_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$$c__DisplayClass2_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$$c__DisplayClass2_0::*)()>(&OculusPlatformUserModel::$$c__DisplayClass2_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$$c__DisplayClass2_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformUserModel/<GetUserInfo>d__2
#include "GlobalNamespace/OculusPlatformUserModel_-GetUserInfo-d__2.hpp"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
// Including type: OculusPlatformUserModel/<>c__DisplayClass2_0
#include "GlobalNamespace/OculusPlatformUserModel_--c__DisplayClass2_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformUserModel/<GetUserInfo>d__2.MoveNext
void GlobalNamespace::OculusPlatformUserModel::$GetUserInfo$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformUserModel::$GetUserInfo$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusPlatformUserModel/<GetUserInfo>d__2.SetStateMachine
void GlobalNamespace::OculusPlatformUserModel::$GetUserInfo$d__2::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformUserModel::$GetUserInfo$d__2::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: OculusPlatformUserModel::$GetUserInfo$d__2::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$GetUserInfo$d__2::*)()>(&OculusPlatformUserModel::$GetUserInfo$d__2::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$GetUserInfo$d__2), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OculusPlatformUserModel::$GetUserInfo$d__2::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$GetUserInfo$d__2::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&OculusPlatformUserModel::$GetUserInfo$d__2::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$GetUserInfo$d__2), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusPlatformUserModel/<>c__DisplayClass3_0
#include "GlobalNamespace/OculusPlatformUserModel_--c__DisplayClass3_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformUserModel/<>c__DisplayClass3_0.<GetUserFriendsUserIds>b__0
void GlobalNamespace::OculusPlatformUserModel::$$c__DisplayClass3_0::$GetUserFriendsUserIds$b__0(Oculus::Platform::Message_1<Oculus::Platform::Models::UserList*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformUserModel::$$c__DisplayClass3_0::<GetUserFriendsUserIds>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserFriendsUserIds>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Writing MetadataGetter for method: OculusPlatformUserModel::$$c__DisplayClass3_0::$GetUserFriendsUserIds$b__0
// Il2CppName: <GetUserFriendsUserIds>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$$c__DisplayClass3_0::*)(Oculus::Platform::Message_1<Oculus::Platform::Models::UserList*>*)>(&OculusPlatformUserModel::$$c__DisplayClass3_0::$GetUserFriendsUserIds$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$$c__DisplayClass3_0*), "<GetUserFriendsUserIds>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message_1<Oculus::Platform::Models::UserList*>*>()});
  }
};
// Writing MetadataGetter for method: OculusPlatformUserModel::$$c__DisplayClass3_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$$c__DisplayClass3_0::*)()>(&OculusPlatformUserModel::$$c__DisplayClass3_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$$c__DisplayClass3_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$$c__DisplayClass3_0::*)()>(&OculusPlatformUserModel::$$c__DisplayClass3_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$$c__DisplayClass3_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusPlatformUserModel/<GetUserFriendsUserIds>d__3
#include "GlobalNamespace/OculusPlatformUserModel_-GetUserFriendsUserIds-d__3.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformUserModel/<GetUserFriendsUserIds>d__3.MoveNext
void GlobalNamespace::OculusPlatformUserModel::$GetUserFriendsUserIds$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformUserModel::$GetUserFriendsUserIds$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusPlatformUserModel/<GetUserFriendsUserIds>d__3.SetStateMachine
void GlobalNamespace::OculusPlatformUserModel::$GetUserFriendsUserIds$d__3::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformUserModel::$GetUserFriendsUserIds$d__3::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: OculusPlatformUserModel::$GetUserFriendsUserIds$d__3::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$GetUserFriendsUserIds$d__3::*)()>(&OculusPlatformUserModel::$GetUserFriendsUserIds$d__3::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$GetUserFriendsUserIds$d__3), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OculusPlatformUserModel::$GetUserFriendsUserIds$d__3::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$GetUserFriendsUserIds$d__3::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&OculusPlatformUserModel::$GetUserFriendsUserIds$d__3::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$GetUserFriendsUserIds$d__3), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformUserModel/<>c__DisplayClass4_0
#include "GlobalNamespace/OculusPlatformUserModel_--c__DisplayClass4_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: PlatformUserAuthTokenData
#include "GlobalNamespace/PlatformUserAuthTokenData.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.UserProof
#include "Oculus/Platform/Models/UserProof.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformUserModel/<>c__DisplayClass4_0.<GetUserAuthToken>b__0
void GlobalNamespace::OculusPlatformUserModel::$$c__DisplayClass4_0::$GetUserAuthToken$b__0(Oculus::Platform::Message_1<Oculus::Platform::Models::UserProof*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformUserModel::$$c__DisplayClass4_0::<GetUserAuthToken>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserAuthToken>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Writing MetadataGetter for method: OculusPlatformUserModel::$$c__DisplayClass4_0::$GetUserAuthToken$b__0
// Il2CppName: <GetUserAuthToken>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$$c__DisplayClass4_0::*)(Oculus::Platform::Message_1<Oculus::Platform::Models::UserProof*>*)>(&OculusPlatformUserModel::$$c__DisplayClass4_0::$GetUserAuthToken$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$$c__DisplayClass4_0*), "<GetUserAuthToken>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message_1<Oculus::Platform::Models::UserProof*>*>()});
  }
};
// Writing MetadataGetter for method: OculusPlatformUserModel::$$c__DisplayClass4_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$$c__DisplayClass4_0::*)()>(&OculusPlatformUserModel::$$c__DisplayClass4_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$$c__DisplayClass4_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$$c__DisplayClass4_0::*)()>(&OculusPlatformUserModel::$$c__DisplayClass4_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$$c__DisplayClass4_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformUserModel/<GetUserAuthToken>d__4
#include "GlobalNamespace/OculusPlatformUserModel_-GetUserAuthToken-d__4.hpp"
// Including type: PlatformUserAuthTokenData
#include "GlobalNamespace/PlatformUserAuthTokenData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformUserModel/<GetUserAuthToken>d__4.MoveNext
void GlobalNamespace::OculusPlatformUserModel::$GetUserAuthToken$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformUserModel::$GetUserAuthToken$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusPlatformUserModel/<GetUserAuthToken>d__4.SetStateMachine
void GlobalNamespace::OculusPlatformUserModel::$GetUserAuthToken$d__4::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformUserModel::$GetUserAuthToken$d__4::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: OculusPlatformUserModel::$GetUserAuthToken$d__4::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$GetUserAuthToken$d__4::*)()>(&OculusPlatformUserModel::$GetUserAuthToken$d__4::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$GetUserAuthToken$d__4), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OculusPlatformUserModel::$GetUserAuthToken$d__4::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$GetUserAuthToken$d__4::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&OculusPlatformUserModel::$GetUserAuthToken$d__4::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$GetUserAuthToken$d__4), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusPlatformUserModel/<>c__DisplayClass5_0
#include "GlobalNamespace/OculusPlatformUserModel_--c__DisplayClass5_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformUserModel/<>c__DisplayClass5_0.<GetUserNamesForUserIds>g__Fetch|0
void GlobalNamespace::OculusPlatformUserModel::$$c__DisplayClass5_0::$GetUserNamesForUserIds$g__Fetch_0(int index, uint64_t platformId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformUserModel::$$c__DisplayClass5_0::<GetUserNamesForUserIds>g__Fetch|0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserNamesForUserIds>g__Fetch|0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(platformId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, platformId);
}
// Writing MetadataGetter for method: OculusPlatformUserModel::$$c__DisplayClass5_0::$GetUserNamesForUserIds$g__Fetch_0
// Il2CppName: <GetUserNamesForUserIds>g__Fetch|0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$$c__DisplayClass5_0::*)(int, uint64_t)>(&OculusPlatformUserModel::$$c__DisplayClass5_0::$GetUserNamesForUserIds$g__Fetch_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$$c__DisplayClass5_0*), "<GetUserNamesForUserIds>g__Fetch|0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: OculusPlatformUserModel::$$c__DisplayClass5_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$$c__DisplayClass5_0::*)()>(&OculusPlatformUserModel::$$c__DisplayClass5_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$$c__DisplayClass5_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$$c__DisplayClass5_0::*)()>(&OculusPlatformUserModel::$$c__DisplayClass5_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$$c__DisplayClass5_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformUserModel/<>c__DisplayClass5_1
#include "GlobalNamespace/OculusPlatformUserModel_--c__DisplayClass5_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: OculusPlatformUserModel/<>c__DisplayClass5_0
#include "GlobalNamespace/OculusPlatformUserModel_--c__DisplayClass5_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformUserModel/<>c__DisplayClass5_1.<GetUserNamesForUserIds>b__1
void GlobalNamespace::OculusPlatformUserModel::$$c__DisplayClass5_1::$GetUserNamesForUserIds$b__1(Oculus::Platform::Message_1<Oculus::Platform::Models::User*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformUserModel::$$c__DisplayClass5_1::<GetUserNamesForUserIds>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserNamesForUserIds>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: OculusPlatformUserModel::$$c__DisplayClass5_1::$GetUserNamesForUserIds$b__1
// Il2CppName: <GetUserNamesForUserIds>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$$c__DisplayClass5_1::*)(Oculus::Platform::Message_1<Oculus::Platform::Models::User*>*)>(&OculusPlatformUserModel::$$c__DisplayClass5_1::$GetUserNamesForUserIds$b__1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$$c__DisplayClass5_1*), "<GetUserNamesForUserIds>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message_1<Oculus::Platform::Models::User*>*>()});
  }
};
// Writing MetadataGetter for method: OculusPlatformUserModel::$$c__DisplayClass5_1::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$$c__DisplayClass5_1::*)()>(&OculusPlatformUserModel::$$c__DisplayClass5_1::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$$c__DisplayClass5_1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$$c__DisplayClass5_1::*)()>(&OculusPlatformUserModel::$$c__DisplayClass5_1::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$$c__DisplayClass5_1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusPlatformUserModel/<GetUserNamesForUserIds>d__5
#include "GlobalNamespace/OculusPlatformUserModel_-GetUserNamesForUserIds-d__5.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformUserModel/<GetUserNamesForUserIds>d__5.MoveNext
void GlobalNamespace::OculusPlatformUserModel::$GetUserNamesForUserIds$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformUserModel::$GetUserNamesForUserIds$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusPlatformUserModel/<GetUserNamesForUserIds>d__5.SetStateMachine
void GlobalNamespace::OculusPlatformUserModel::$GetUserNamesForUserIds$d__5::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformUserModel::$GetUserNamesForUserIds$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: OculusPlatformUserModel::$GetUserNamesForUserIds$d__5::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$GetUserNamesForUserIds$d__5::*)()>(&OculusPlatformUserModel::$GetUserNamesForUserIds$d__5::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$GetUserNamesForUserIds$d__5), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OculusPlatformUserModel::$GetUserNamesForUserIds$d__5::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformUserModel::$GetUserNamesForUserIds$d__5::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&OculusPlatformUserModel::$GetUserNamesForUserIds$d__5::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformUserModel::$GetUserNamesForUserIds$d__5), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestPlatformUserModel
#include "GlobalNamespace/TestPlatformUserModel.hpp"
// Including type: TestPlatformUserModel/<GetUserInfo>d__0
#include "GlobalNamespace/TestPlatformUserModel_-GetUserInfo-d__0.hpp"
// Including type: TestPlatformUserModel/<GetUserFriendsUserIds>d__1
#include "GlobalNamespace/TestPlatformUserModel_-GetUserFriendsUserIds-d__1.hpp"
// Including type: TestPlatformUserModel/<GetUserAuthToken>d__2
#include "GlobalNamespace/TestPlatformUserModel_-GetUserAuthToken-d__2.hpp"
// Including type: TestPlatformUserModel/<GetUserNamesForUserIds>d__3
#include "GlobalNamespace/TestPlatformUserModel_-GetUserNamesForUserIds-d__3.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: PlatformUserAuthTokenData
#include "GlobalNamespace/PlatformUserAuthTokenData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestPlatformUserModel.GetUserInfo
System::Threading::Tasks::Task_1<GlobalNamespace::UserInfo*>* GlobalNamespace::TestPlatformUserModel::GetUserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformUserModel::GetUserInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::UserInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: TestPlatformUserModel.GetUserFriendsUserIds
System::Threading::Tasks::Task_1<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>* GlobalNamespace::TestPlatformUserModel::GetUserFriendsUserIds(bool cached) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformUserModel::GetUserFriendsUserIds");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserFriendsUserIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cached)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>*, false>(this, ___internal__method, cached);
}
// Autogenerated method: TestPlatformUserModel.GetUserAuthToken
System::Threading::Tasks::Task_1<GlobalNamespace::PlatformUserAuthTokenData*>* GlobalNamespace::TestPlatformUserModel::GetUserAuthToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformUserModel::GetUserAuthToken");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserAuthToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::PlatformUserAuthTokenData*>*, false>(this, ___internal__method);
}
// Autogenerated method: TestPlatformUserModel.GetUserNamesForUserIds
System::Threading::Tasks::Task_1<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>* GlobalNamespace::TestPlatformUserModel::GetUserNamesForUserIds(System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>* userIds) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformUserModel::GetUserNamesForUserIds");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserNamesForUserIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userIds)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>*, false>(this, ___internal__method, userIds);
}
// Writing MetadataGetter for method: TestPlatformUserModel::GetUserInfo
// Il2CppName: GetUserInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<GlobalNamespace::UserInfo*>* (TestPlatformUserModel::*)()>(&TestPlatformUserModel::GetUserInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestPlatformUserModel*), "GetUserInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestPlatformUserModel::GetUserFriendsUserIds
// Il2CppName: GetUserFriendsUserIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>* (TestPlatformUserModel::*)(bool)>(&TestPlatformUserModel::GetUserFriendsUserIds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestPlatformUserModel*), "GetUserFriendsUserIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: TestPlatformUserModel::GetUserAuthToken
// Il2CppName: GetUserAuthToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<GlobalNamespace::PlatformUserAuthTokenData*>* (TestPlatformUserModel::*)()>(&TestPlatformUserModel::GetUserAuthToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestPlatformUserModel*), "GetUserAuthToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestPlatformUserModel::GetUserNamesForUserIds
// Il2CppName: GetUserNamesForUserIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>* (TestPlatformUserModel::*)(System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*)>(&TestPlatformUserModel::GetUserNamesForUserIds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestPlatformUserModel*), "GetUserNamesForUserIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IReadOnlyList_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: TestPlatformUserModel::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestPlatformUserModel::*)()>(&TestPlatformUserModel::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestPlatformUserModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestPlatformUserModel::*)()>(&TestPlatformUserModel::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestPlatformUserModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestPlatformUserModel/<GetUserInfo>d__0
#include "GlobalNamespace/TestPlatformUserModel_-GetUserInfo-d__0.hpp"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestPlatformUserModel/<GetUserInfo>d__0.MoveNext
void GlobalNamespace::TestPlatformUserModel::$GetUserInfo$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformUserModel::$GetUserInfo$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestPlatformUserModel/<GetUserInfo>d__0.SetStateMachine
void GlobalNamespace::TestPlatformUserModel::$GetUserInfo$d__0::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformUserModel::$GetUserInfo$d__0::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: TestPlatformUserModel::$GetUserInfo$d__0::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestPlatformUserModel::$GetUserInfo$d__0::*)()>(&TestPlatformUserModel::$GetUserInfo$d__0::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestPlatformUserModel::$GetUserInfo$d__0), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestPlatformUserModel::$GetUserInfo$d__0::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestPlatformUserModel::$GetUserInfo$d__0::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&TestPlatformUserModel::$GetUserInfo$d__0::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestPlatformUserModel::$GetUserInfo$d__0), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestPlatformUserModel/<GetUserFriendsUserIds>d__1
#include "GlobalNamespace/TestPlatformUserModel_-GetUserFriendsUserIds-d__1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestPlatformUserModel/<GetUserFriendsUserIds>d__1.MoveNext
void GlobalNamespace::TestPlatformUserModel::$GetUserFriendsUserIds$d__1::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformUserModel::$GetUserFriendsUserIds$d__1::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestPlatformUserModel/<GetUserFriendsUserIds>d__1.SetStateMachine
void GlobalNamespace::TestPlatformUserModel::$GetUserFriendsUserIds$d__1::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformUserModel::$GetUserFriendsUserIds$d__1::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: TestPlatformUserModel::$GetUserFriendsUserIds$d__1::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestPlatformUserModel::$GetUserFriendsUserIds$d__1::*)()>(&TestPlatformUserModel::$GetUserFriendsUserIds$d__1::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestPlatformUserModel::$GetUserFriendsUserIds$d__1), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestPlatformUserModel::$GetUserFriendsUserIds$d__1::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestPlatformUserModel::$GetUserFriendsUserIds$d__1::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&TestPlatformUserModel::$GetUserFriendsUserIds$d__1::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestPlatformUserModel::$GetUserFriendsUserIds$d__1), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestPlatformUserModel/<GetUserAuthToken>d__2
#include "GlobalNamespace/TestPlatformUserModel_-GetUserAuthToken-d__2.hpp"
// Including type: PlatformUserAuthTokenData
#include "GlobalNamespace/PlatformUserAuthTokenData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestPlatformUserModel/<GetUserAuthToken>d__2.MoveNext
void GlobalNamespace::TestPlatformUserModel::$GetUserAuthToken$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformUserModel::$GetUserAuthToken$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestPlatformUserModel/<GetUserAuthToken>d__2.SetStateMachine
void GlobalNamespace::TestPlatformUserModel::$GetUserAuthToken$d__2::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformUserModel::$GetUserAuthToken$d__2::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: TestPlatformUserModel::$GetUserAuthToken$d__2::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestPlatformUserModel::$GetUserAuthToken$d__2::*)()>(&TestPlatformUserModel::$GetUserAuthToken$d__2::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestPlatformUserModel::$GetUserAuthToken$d__2), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestPlatformUserModel::$GetUserAuthToken$d__2::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestPlatformUserModel::$GetUserAuthToken$d__2::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&TestPlatformUserModel::$GetUserAuthToken$d__2::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestPlatformUserModel::$GetUserAuthToken$d__2), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestPlatformUserModel/<GetUserNamesForUserIds>d__3
#include "GlobalNamespace/TestPlatformUserModel_-GetUserNamesForUserIds-d__3.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestPlatformUserModel/<GetUserNamesForUserIds>d__3.MoveNext
void GlobalNamespace::TestPlatformUserModel::$GetUserNamesForUserIds$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformUserModel::$GetUserNamesForUserIds$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestPlatformUserModel/<GetUserNamesForUserIds>d__3.SetStateMachine
void GlobalNamespace::TestPlatformUserModel::$GetUserNamesForUserIds$d__3::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformUserModel::$GetUserNamesForUserIds$d__3::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: TestPlatformUserModel::$GetUserNamesForUserIds$d__3::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestPlatformUserModel::$GetUserNamesForUserIds$d__3::*)()>(&TestPlatformUserModel::$GetUserNamesForUserIds$d__3::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestPlatformUserModel::$GetUserNamesForUserIds$d__3), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestPlatformUserModel::$GetUserNamesForUserIds$d__3::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestPlatformUserModel::$GetUserNamesForUserIds$d__3::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&TestPlatformUserModel::$GetUserNamesForUserIds$d__3::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestPlatformUserModel::$GetUserNamesForUserIds$d__3), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: UserInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserInfo::*)(GlobalNamespace::UserInfo::Platform, ::Il2CppString*, ::Il2CppString*)>(&UserInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::UserInfo::Platform>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UserInfo::*)(GlobalNamespace::UserInfo::Platform, ::Il2CppString*, ::Il2CppString*)>(&UserInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UserInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::UserInfo::Platform>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UserInfo/Platform
#include "GlobalNamespace/UserInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UserInfo/Platform Test
GlobalNamespace::UserInfo::Platform GlobalNamespace::UserInfo::Platform::_get_Test() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserInfo::Platform::_get_Test");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UserInfo::Platform>("", "UserInfo/Platform", "Test"));
}
// Autogenerated static field setter
// Set static field: static public UserInfo/Platform Test
void GlobalNamespace::UserInfo::Platform::_set_Test(GlobalNamespace::UserInfo::Platform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserInfo::Platform::_set_Test");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserInfo/Platform", "Test", value));
}
// Autogenerated static field getter
// Get static field: static public UserInfo/Platform Steam
GlobalNamespace::UserInfo::Platform GlobalNamespace::UserInfo::Platform::_get_Steam() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserInfo::Platform::_get_Steam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UserInfo::Platform>("", "UserInfo/Platform", "Steam"));
}
// Autogenerated static field setter
// Set static field: static public UserInfo/Platform Steam
void GlobalNamespace::UserInfo::Platform::_set_Steam(GlobalNamespace::UserInfo::Platform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserInfo::Platform::_set_Steam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserInfo/Platform", "Steam", value));
}
// Autogenerated static field getter
// Get static field: static public UserInfo/Platform Oculus
GlobalNamespace::UserInfo::Platform GlobalNamespace::UserInfo::Platform::_get_Oculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserInfo::Platform::_get_Oculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UserInfo::Platform>("", "UserInfo/Platform", "Oculus"));
}
// Autogenerated static field setter
// Set static field: static public UserInfo/Platform Oculus
void GlobalNamespace::UserInfo::Platform::_set_Oculus(GlobalNamespace::UserInfo::Platform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserInfo::Platform::_set_Oculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserInfo/Platform", "Oculus", value));
}
// Autogenerated static field getter
// Get static field: static public UserInfo/Platform PS4
GlobalNamespace::UserInfo::Platform GlobalNamespace::UserInfo::Platform::_get_PS4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserInfo::Platform::_get_PS4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UserInfo::Platform>("", "UserInfo/Platform", "PS4"));
}
// Autogenerated static field setter
// Set static field: static public UserInfo/Platform PS4
void GlobalNamespace::UserInfo::Platform::_set_PS4(GlobalNamespace::UserInfo::Platform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UserInfo::Platform::_set_PS4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UserInfo/Platform", "PS4", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusBeatmapDataAssetFileModel
#include "GlobalNamespace/OculusBeatmapDataAssetFileModel.hpp"
// Including type: OculusBeatmapDataAssetFileModel/LevelDownloadingData
#include "GlobalNamespace/OculusBeatmapDataAssetFileModel_LevelDownloadingData.hpp"
// Including type: OculusBeatmapDataAssetFileModel/<>c__DisplayClass13_0
#include "GlobalNamespace/OculusBeatmapDataAssetFileModel_--c__DisplayClass13_0.hpp"
// Including type: OculusBeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__13
#include "GlobalNamespace/OculusBeatmapDataAssetFileModel_-TryDeleteAssetBundleFileForPreviewLevelAsync-d__13.hpp"
// Including type: OculusBeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__14
#include "GlobalNamespace/OculusBeatmapDataAssetFileModel_-GetAssetBundleFileForPreviewLevelAsync-d__14.hpp"
// Including type: OculusBeatmapDataAssetFileModel/<>c__DisplayClass15_0
#include "GlobalNamespace/OculusBeatmapDataAssetFileModel_--c__DisplayClass15_0.hpp"
// Including type: OculusBeatmapDataAssetFileModel/<ReloadAssetDetailsForAllLevelsAsync>d__15
#include "GlobalNamespace/OculusBeatmapDataAssetFileModel_-ReloadAssetDetailsForAllLevelsAsync-d__15.hpp"
// Including type: OculusBeatmapDataAssetFileModel/<>c__DisplayClass16_0
#include "GlobalNamespace/OculusBeatmapDataAssetFileModel_--c__DisplayClass16_0.hpp"
// Including type: OculusBeatmapDataAssetFileModel/<GetDownloadAssetBundleFileAsync>d__16
#include "GlobalNamespace/OculusBeatmapDataAssetFileModel_-GetDownloadAssetBundleFileAsync-d__16.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadUpdate
#include "Oculus/Platform/Models/AssetFileDownloadUpdate.hpp"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
// Including type: OculusLevelProductsModelSO
#include "GlobalNamespace/OculusLevelProductsModelSO.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kMaxTimeOutBeforeFail
float GlobalNamespace::OculusBeatmapDataAssetFileModel::_get_kMaxTimeOutBeforeFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::_get_kMaxTimeOutBeforeFail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OculusBeatmapDataAssetFileModel", "kMaxTimeOutBeforeFail"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMaxTimeOutBeforeFail
void GlobalNamespace::OculusBeatmapDataAssetFileModel::_set_kMaxTimeOutBeforeFail(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::_set_kMaxTimeOutBeforeFail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusBeatmapDataAssetFileModel", "kMaxTimeOutBeforeFail", value));
}
// Autogenerated method: OculusBeatmapDataAssetFileModel.add_levelDataAssetDownloadUpdateEvent
void GlobalNamespace::OculusBeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusBeatmapDataAssetFileModel.remove_levelDataAssetDownloadUpdateEvent
void GlobalNamespace::OculusBeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusBeatmapDataAssetFileModel.TryDeleteAssetBundleFileForPreviewLevelAsync
System::Threading::Tasks::Task_1<bool>* GlobalNamespace::OculusBeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDeleteAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, previewBeatmapLevel, cancellationToken);
}
// Autogenerated method: OculusBeatmapDataAssetFileModel.GetAssetBundleFileForPreviewLevelAsync
System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>* GlobalNamespace::OculusBeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>*, false>(this, ___internal__method, previewBeatmapLevel, cancellationToken);
}
// Autogenerated method: OculusBeatmapDataAssetFileModel.ReloadAssetDetailsForAllLevelsAsync
System::Threading::Tasks::Task_1<bool>* GlobalNamespace::OculusBeatmapDataAssetFileModel::ReloadAssetDetailsForAllLevelsAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::ReloadAssetDetailsForAllLevelsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadAssetDetailsForAllLevelsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: OculusBeatmapDataAssetFileModel.GetDownloadAssetBundleFileAsync
System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>* GlobalNamespace::OculusBeatmapDataAssetFileModel::GetDownloadAssetBundleFileAsync(::Il2CppString* levelId, Oculus::Platform::Models::AssetDetails* assetDetails, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::GetDownloadAssetBundleFileAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDownloadAssetBundleFileAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(assetDetails), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>*, false>(this, ___internal__method, levelId, assetDetails, cancellationToken);
}
// Autogenerated method: OculusBeatmapDataAssetFileModel.GetTaskCompletionSourceForDownload
System::Threading::Tasks::TaskCompletionSource_1<GlobalNamespace::GetAssetBundleFileResult>* GlobalNamespace::OculusBeatmapDataAssetFileModel::GetTaskCompletionSourceForDownload(::Il2CppString* levelId, Oculus::Platform::Models::AssetDetails* assetDetail) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::GetTaskCompletionSourceForDownload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTaskCompletionSourceForDownload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(assetDetail)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::TaskCompletionSource_1<GlobalNamespace::GetAssetBundleFileResult>*, false>(this, ___internal__method, levelId, assetDetail);
}
// Autogenerated method: OculusBeatmapDataAssetFileModel.HandleAssetFileDownloadUpdate
void GlobalNamespace::OculusBeatmapDataAssetFileModel::HandleAssetFileDownloadUpdate(Oculus::Platform::Message_1<Oculus::Platform::Models::AssetFileDownloadUpdate*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::HandleAssetFileDownloadUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAssetFileDownloadUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: OculusBeatmapDataAssetFileModel.<.ctor>b__12_0
void GlobalNamespace::OculusBeatmapDataAssetFileModel::$_ctor$b__12_0(Oculus::Platform::Message_1<Oculus::Platform::Models::AssetFileDownloadUpdate*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::<.ctor>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, msg);
}
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent
// Il2CppName: add_levelDataAssetDownloadUpdateEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::*)(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>*)>(&OculusBeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel*), "add_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>*>()});
  }
};
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent
// Il2CppName: remove_levelDataAssetDownloadUpdateEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::*)(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>*)>(&OculusBeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel*), "remove_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>*>()});
  }
};
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::*)(GlobalNamespace::OculusLevelProductsModelSO*)>(&OculusBeatmapDataAssetFileModel::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OculusLevelProductsModelSO*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::*)(GlobalNamespace::OculusLevelProductsModelSO*)>(&OculusBeatmapDataAssetFileModel::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OculusLevelProductsModelSO*>()});
  }
};
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync
// Il2CppName: TryDeleteAssetBundleFileForPreviewLevelAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<bool>* (OculusBeatmapDataAssetFileModel::*)(GlobalNamespace::IPreviewBeatmapLevel*, System::Threading::CancellationToken)>(&OculusBeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel*), "TryDeleteAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync
// Il2CppName: GetAssetBundleFileForPreviewLevelAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>* (OculusBeatmapDataAssetFileModel::*)(GlobalNamespace::IPreviewBeatmapLevel*, System::Threading::CancellationToken)>(&OculusBeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel*), "GetAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::ReloadAssetDetailsForAllLevelsAsync
// Il2CppName: ReloadAssetDetailsForAllLevelsAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<bool>* (OculusBeatmapDataAssetFileModel::*)(System::Threading::CancellationToken)>(&OculusBeatmapDataAssetFileModel::ReloadAssetDetailsForAllLevelsAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel*), "ReloadAssetDetailsForAllLevelsAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::GetDownloadAssetBundleFileAsync
// Il2CppName: GetDownloadAssetBundleFileAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>* (OculusBeatmapDataAssetFileModel::*)(::Il2CppString*, Oculus::Platform::Models::AssetDetails*, System::Threading::CancellationToken)>(&OculusBeatmapDataAssetFileModel::GetDownloadAssetBundleFileAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel*), "GetDownloadAssetBundleFileAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Models::AssetDetails*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::GetTaskCompletionSourceForDownload
// Il2CppName: GetTaskCompletionSourceForDownload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::TaskCompletionSource_1<GlobalNamespace::GetAssetBundleFileResult>* (OculusBeatmapDataAssetFileModel::*)(::Il2CppString*, Oculus::Platform::Models::AssetDetails*)>(&OculusBeatmapDataAssetFileModel::GetTaskCompletionSourceForDownload)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel*), "GetTaskCompletionSourceForDownload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Models::AssetDetails*>()});
  }
};
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::HandleAssetFileDownloadUpdate
// Il2CppName: HandleAssetFileDownloadUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::*)(Oculus::Platform::Message_1<Oculus::Platform::Models::AssetFileDownloadUpdate*>*)>(&OculusBeatmapDataAssetFileModel::HandleAssetFileDownloadUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel*), "HandleAssetFileDownloadUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message_1<Oculus::Platform::Models::AssetFileDownloadUpdate*>*>()});
  }
};
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::$_ctor$b__12_0
// Il2CppName: <.ctor>b__12_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::*)(Oculus::Platform::Message_1<Oculus::Platform::Models::AssetFileDownloadUpdate*>*)>(&OculusBeatmapDataAssetFileModel::$_ctor$b__12_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel*), "<.ctor>b__12_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message_1<Oculus::Platform::Models::AssetFileDownloadUpdate*>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusBeatmapDataAssetFileModel/LevelDownloadingData
#include "GlobalNamespace/OculusBeatmapDataAssetFileModel_LevelDownloadingData.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::LevelDownloadingData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::LevelDownloadingData::*)(::Il2CppString*, ::Il2CppString*)>(&OculusBeatmapDataAssetFileModel::LevelDownloadingData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel::LevelDownloadingData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::LevelDownloadingData::*)(::Il2CppString*, ::Il2CppString*)>(&OculusBeatmapDataAssetFileModel::LevelDownloadingData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel::LevelDownloadingData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusBeatmapDataAssetFileModel/<>c__DisplayClass13_0
#include "GlobalNamespace/OculusBeatmapDataAssetFileModel_--c__DisplayClass13_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.AssetFileDeleteResult
#include "Oculus/Platform/Models/AssetFileDeleteResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusBeatmapDataAssetFileModel/<>c__DisplayClass13_0.<TryDeleteAssetBundleFileForPreviewLevelAsync>b__0
void GlobalNamespace::OculusBeatmapDataAssetFileModel::$$c__DisplayClass13_0::$TryDeleteAssetBundleFileForPreviewLevelAsync$b__0(Oculus::Platform::Message_1<Oculus::Platform::Models::AssetFileDeleteResult*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::$$c__DisplayClass13_0::<TryDeleteAssetBundleFileForPreviewLevelAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryDeleteAssetBundleFileForPreviewLevelAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, msg);
}
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::$$c__DisplayClass13_0::$TryDeleteAssetBundleFileForPreviewLevelAsync$b__0
// Il2CppName: <TryDeleteAssetBundleFileForPreviewLevelAsync>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::$$c__DisplayClass13_0::*)(Oculus::Platform::Message_1<Oculus::Platform::Models::AssetFileDeleteResult*>*)>(&OculusBeatmapDataAssetFileModel::$$c__DisplayClass13_0::$TryDeleteAssetBundleFileForPreviewLevelAsync$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel::$$c__DisplayClass13_0*), "<TryDeleteAssetBundleFileForPreviewLevelAsync>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message_1<Oculus::Platform::Models::AssetFileDeleteResult*>*>()});
  }
};
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::$$c__DisplayClass13_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::$$c__DisplayClass13_0::*)()>(&OculusBeatmapDataAssetFileModel::$$c__DisplayClass13_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel::$$c__DisplayClass13_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::$$c__DisplayClass13_0::*)()>(&OculusBeatmapDataAssetFileModel::$$c__DisplayClass13_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel::$$c__DisplayClass13_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusBeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__13
#include "GlobalNamespace/OculusBeatmapDataAssetFileModel_-TryDeleteAssetBundleFileForPreviewLevelAsync-d__13.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: OculusBeatmapDataAssetFileModel/<>c__DisplayClass13_0
#include "GlobalNamespace/OculusBeatmapDataAssetFileModel_--c__DisplayClass13_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusBeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__13.MoveNext
void GlobalNamespace::OculusBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusBeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__13.SetStateMachine
void GlobalNamespace::OculusBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__13::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__13::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__13::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__13::*)()>(&OculusBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__13::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__13), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__13::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__13::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&OculusBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__13::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__13), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusBeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__14
#include "GlobalNamespace/OculusBeatmapDataAssetFileModel_-GetAssetBundleFileForPreviewLevelAsync-d__14.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusBeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__14.MoveNext
void GlobalNamespace::OculusBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__14::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__14::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusBeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__14.SetStateMachine
void GlobalNamespace::OculusBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__14::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__14::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__14::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__14::*)()>(&OculusBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__14::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__14), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__14::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__14::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&OculusBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__14::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__14), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusBeatmapDataAssetFileModel/<>c__DisplayClass15_0
#include "GlobalNamespace/OculusBeatmapDataAssetFileModel_--c__DisplayClass15_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusBeatmapDataAssetFileModel/<>c__DisplayClass15_0.<ReloadAssetDetailsForAllLevelsAsync>b__0
void GlobalNamespace::OculusBeatmapDataAssetFileModel::$$c__DisplayClass15_0::$ReloadAssetDetailsForAllLevelsAsync$b__0(Oculus::Platform::Message_1<Oculus::Platform::Models::AssetDetailsList*>* getListMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::$$c__DisplayClass15_0::<ReloadAssetDetailsForAllLevelsAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ReloadAssetDetailsForAllLevelsAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(getListMsg)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, getListMsg);
}
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::$$c__DisplayClass15_0::$ReloadAssetDetailsForAllLevelsAsync$b__0
// Il2CppName: <ReloadAssetDetailsForAllLevelsAsync>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::$$c__DisplayClass15_0::*)(Oculus::Platform::Message_1<Oculus::Platform::Models::AssetDetailsList*>*)>(&OculusBeatmapDataAssetFileModel::$$c__DisplayClass15_0::$ReloadAssetDetailsForAllLevelsAsync$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel::$$c__DisplayClass15_0*), "<ReloadAssetDetailsForAllLevelsAsync>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message_1<Oculus::Platform::Models::AssetDetailsList*>*>()});
  }
};
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::$$c__DisplayClass15_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::$$c__DisplayClass15_0::*)()>(&OculusBeatmapDataAssetFileModel::$$c__DisplayClass15_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel::$$c__DisplayClass15_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::$$c__DisplayClass15_0::*)()>(&OculusBeatmapDataAssetFileModel::$$c__DisplayClass15_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel::$$c__DisplayClass15_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusBeatmapDataAssetFileModel/<ReloadAssetDetailsForAllLevelsAsync>d__15
#include "GlobalNamespace/OculusBeatmapDataAssetFileModel_-ReloadAssetDetailsForAllLevelsAsync-d__15.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusBeatmapDataAssetFileModel/<ReloadAssetDetailsForAllLevelsAsync>d__15.MoveNext
void GlobalNamespace::OculusBeatmapDataAssetFileModel::$ReloadAssetDetailsForAllLevelsAsync$d__15::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::$ReloadAssetDetailsForAllLevelsAsync$d__15::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusBeatmapDataAssetFileModel/<ReloadAssetDetailsForAllLevelsAsync>d__15.SetStateMachine
void GlobalNamespace::OculusBeatmapDataAssetFileModel::$ReloadAssetDetailsForAllLevelsAsync$d__15::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::$ReloadAssetDetailsForAllLevelsAsync$d__15::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::$ReloadAssetDetailsForAllLevelsAsync$d__15::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::$ReloadAssetDetailsForAllLevelsAsync$d__15::*)()>(&OculusBeatmapDataAssetFileModel::$ReloadAssetDetailsForAllLevelsAsync$d__15::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel::$ReloadAssetDetailsForAllLevelsAsync$d__15), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::$ReloadAssetDetailsForAllLevelsAsync$d__15::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::$ReloadAssetDetailsForAllLevelsAsync$d__15::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&OculusBeatmapDataAssetFileModel::$ReloadAssetDetailsForAllLevelsAsync$d__15::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel::$ReloadAssetDetailsForAllLevelsAsync$d__15), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusBeatmapDataAssetFileModel/<>c__DisplayClass16_0
#include "GlobalNamespace/OculusBeatmapDataAssetFileModel_--c__DisplayClass16_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.AssetFileDownloadResult
#include "Oculus/Platform/Models/AssetFileDownloadResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusBeatmapDataAssetFileModel/<>c__DisplayClass16_0.<GetDownloadAssetBundleFileAsync>b__0
void GlobalNamespace::OculusBeatmapDataAssetFileModel::$$c__DisplayClass16_0::$GetDownloadAssetBundleFileAsync$b__0(Oculus::Platform::Message_1<Oculus::Platform::Models::AssetFileDownloadResult*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::$$c__DisplayClass16_0::<GetDownloadAssetBundleFileAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetDownloadAssetBundleFileAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, msg);
}
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::$$c__DisplayClass16_0::$GetDownloadAssetBundleFileAsync$b__0
// Il2CppName: <GetDownloadAssetBundleFileAsync>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::$$c__DisplayClass16_0::*)(Oculus::Platform::Message_1<Oculus::Platform::Models::AssetFileDownloadResult*>*)>(&OculusBeatmapDataAssetFileModel::$$c__DisplayClass16_0::$GetDownloadAssetBundleFileAsync$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel::$$c__DisplayClass16_0*), "<GetDownloadAssetBundleFileAsync>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message_1<Oculus::Platform::Models::AssetFileDownloadResult*>*>()});
  }
};
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::$$c__DisplayClass16_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::$$c__DisplayClass16_0::*)()>(&OculusBeatmapDataAssetFileModel::$$c__DisplayClass16_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel::$$c__DisplayClass16_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::$$c__DisplayClass16_0::*)()>(&OculusBeatmapDataAssetFileModel::$$c__DisplayClass16_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel::$$c__DisplayClass16_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusBeatmapDataAssetFileModel/<GetDownloadAssetBundleFileAsync>d__16
#include "GlobalNamespace/OculusBeatmapDataAssetFileModel_-GetDownloadAssetBundleFileAsync-d__16.hpp"
// Including type: Oculus.Platform.Models.AssetDetails
#include "Oculus/Platform/Models/AssetDetails.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusBeatmapDataAssetFileModel/<GetDownloadAssetBundleFileAsync>d__16.MoveNext
void GlobalNamespace::OculusBeatmapDataAssetFileModel::$GetDownloadAssetBundleFileAsync$d__16::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::$GetDownloadAssetBundleFileAsync$d__16::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusBeatmapDataAssetFileModel/<GetDownloadAssetBundleFileAsync>d__16.SetStateMachine
void GlobalNamespace::OculusBeatmapDataAssetFileModel::$GetDownloadAssetBundleFileAsync$d__16::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusBeatmapDataAssetFileModel::$GetDownloadAssetBundleFileAsync$d__16::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::$GetDownloadAssetBundleFileAsync$d__16::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::$GetDownloadAssetBundleFileAsync$d__16::*)()>(&OculusBeatmapDataAssetFileModel::$GetDownloadAssetBundleFileAsync$d__16::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel::$GetDownloadAssetBundleFileAsync$d__16), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OculusBeatmapDataAssetFileModel::$GetDownloadAssetBundleFileAsync$d__16::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusBeatmapDataAssetFileModel::$GetDownloadAssetBundleFileAsync$d__16::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&OculusBeatmapDataAssetFileModel::$GetDownloadAssetBundleFileAsync$d__16::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusBeatmapDataAssetFileModel::$GetDownloadAssetBundleFileAsync$d__16), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusLevelProductsModelSO
#include "GlobalNamespace/OculusLevelProductsModelSO.hpp"
// Including type: OculusLevelProductsModelSO/LevelProductData
#include "GlobalNamespace/OculusLevelProductsModelSO_LevelProductData.hpp"
// Including type: OculusLevelProductsModelSO/LevelPackProductData
#include "GlobalNamespace/OculusLevelProductsModelSO_LevelPackProductData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusLevelProductsModelSO.get_levelPackProductsData
::Array<GlobalNamespace::OculusLevelProductsModelSO::LevelPackProductData*>* GlobalNamespace::OculusLevelProductsModelSO::get_levelPackProductsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusLevelProductsModelSO::get_levelPackProductsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelPackProductsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::OculusLevelProductsModelSO::LevelPackProductData*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusLevelProductsModelSO.GetLevelProductData
GlobalNamespace::OculusLevelProductsModelSO::LevelProductData* GlobalNamespace::OculusLevelProductsModelSO::GetLevelProductData(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusLevelProductsModelSO::GetLevelProductData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelProductData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OculusLevelProductsModelSO::LevelProductData*, false>(this, ___internal__method, levelId);
}
// Autogenerated method: OculusLevelProductsModelSO.GetLevelPackProductData
GlobalNamespace::OculusLevelProductsModelSO::LevelPackProductData* GlobalNamespace::OculusLevelProductsModelSO::GetLevelPackProductData(::Il2CppString* levelPackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusLevelProductsModelSO::GetLevelPackProductData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelPackProductData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OculusLevelProductsModelSO::LevelPackProductData*, false>(this, ___internal__method, levelPackId);
}
// Autogenerated method: OculusLevelProductsModelSO.GetLevelSku
::Il2CppString* GlobalNamespace::OculusLevelProductsModelSO::GetLevelSku(::Il2CppString* assetFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusLevelProductsModelSO::GetLevelSku");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelSku", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFile)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, assetFile);
}
// Autogenerated method: OculusLevelProductsModelSO.OnEnable
void GlobalNamespace::OculusLevelProductsModelSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusLevelProductsModelSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: OculusLevelProductsModelSO::get_levelPackProductsData
// Il2CppName: get_levelPackProductsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<GlobalNamespace::OculusLevelProductsModelSO::LevelPackProductData*>* (OculusLevelProductsModelSO::*)()>(&OculusLevelProductsModelSO::get_levelPackProductsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusLevelProductsModelSO*), "get_levelPackProductsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OculusLevelProductsModelSO::GetLevelProductData
// Il2CppName: GetLevelProductData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::OculusLevelProductsModelSO::LevelProductData* (OculusLevelProductsModelSO::*)(::Il2CppString*)>(&OculusLevelProductsModelSO::GetLevelProductData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusLevelProductsModelSO*), "GetLevelProductData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: OculusLevelProductsModelSO::GetLevelPackProductData
// Il2CppName: GetLevelPackProductData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::OculusLevelProductsModelSO::LevelPackProductData* (OculusLevelProductsModelSO::*)(::Il2CppString*)>(&OculusLevelProductsModelSO::GetLevelPackProductData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusLevelProductsModelSO*), "GetLevelPackProductData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: OculusLevelProductsModelSO::GetLevelSku
// Il2CppName: GetLevelSku
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (OculusLevelProductsModelSO::*)(::Il2CppString*)>(&OculusLevelProductsModelSO::GetLevelSku)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusLevelProductsModelSO*), "GetLevelSku", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: OculusLevelProductsModelSO::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusLevelProductsModelSO::*)()>(&OculusLevelProductsModelSO::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusLevelProductsModelSO*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OculusLevelProductsModelSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusLevelProductsModelSO::*)()>(&OculusLevelProductsModelSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusLevelProductsModelSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusLevelProductsModelSO::*)()>(&OculusLevelProductsModelSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusLevelProductsModelSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusLevelProductsModelSO/LevelProductData
#include "GlobalNamespace/OculusLevelProductsModelSO_LevelProductData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusLevelProductsModelSO/LevelProductData.get_sku
::Il2CppString* GlobalNamespace::OculusLevelProductsModelSO::LevelProductData::get_sku() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusLevelProductsModelSO::LevelProductData::get_sku");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sku", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: OculusLevelProductsModelSO/LevelProductData.get_levelId
::Il2CppString* GlobalNamespace::OculusLevelProductsModelSO::LevelProductData::get_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusLevelProductsModelSO::LevelProductData::get_levelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: OculusLevelProductsModelSO/LevelProductData.get_assetFile
::Il2CppString* GlobalNamespace::OculusLevelProductsModelSO::LevelProductData::get_assetFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusLevelProductsModelSO::LevelProductData::get_assetFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_assetFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: OculusLevelProductsModelSO::LevelProductData::get_sku
// Il2CppName: get_sku
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (OculusLevelProductsModelSO::LevelProductData::*)()>(&OculusLevelProductsModelSO::LevelProductData::get_sku)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusLevelProductsModelSO::LevelProductData*), "get_sku", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OculusLevelProductsModelSO::LevelProductData::get_levelId
// Il2CppName: get_levelId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (OculusLevelProductsModelSO::LevelProductData::*)()>(&OculusLevelProductsModelSO::LevelProductData::get_levelId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusLevelProductsModelSO::LevelProductData*), "get_levelId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OculusLevelProductsModelSO::LevelProductData::get_assetFile
// Il2CppName: get_assetFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (OculusLevelProductsModelSO::LevelProductData::*)()>(&OculusLevelProductsModelSO::LevelProductData::get_assetFile)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusLevelProductsModelSO::LevelProductData*), "get_assetFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OculusLevelProductsModelSO::LevelProductData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusLevelProductsModelSO::LevelProductData::*)()>(&OculusLevelProductsModelSO::LevelProductData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusLevelProductsModelSO::LevelProductData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusLevelProductsModelSO::LevelProductData::*)()>(&OculusLevelProductsModelSO::LevelProductData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusLevelProductsModelSO::LevelProductData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusLevelProductsModelSO/LevelPackProductData
#include "GlobalNamespace/OculusLevelProductsModelSO_LevelPackProductData.hpp"
// Including type: OculusLevelProductsModelSO/LevelProductData
#include "GlobalNamespace/OculusLevelProductsModelSO_LevelProductData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusLevelProductsModelSO/LevelPackProductData.get_sku
::Il2CppString* GlobalNamespace::OculusLevelProductsModelSO::LevelPackProductData::get_sku() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusLevelProductsModelSO::LevelPackProductData::get_sku");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sku", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: OculusLevelProductsModelSO/LevelPackProductData.get_levelPackId
::Il2CppString* GlobalNamespace::OculusLevelProductsModelSO::LevelPackProductData::get_levelPackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusLevelProductsModelSO::LevelPackProductData::get_levelPackId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelPackId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: OculusLevelProductsModelSO/LevelPackProductData.get_levelProductsData
::Array<GlobalNamespace::OculusLevelProductsModelSO::LevelProductData*>* GlobalNamespace::OculusLevelProductsModelSO::LevelPackProductData::get_levelProductsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusLevelProductsModelSO::LevelPackProductData::get_levelProductsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelProductsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::OculusLevelProductsModelSO::LevelProductData*>*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: OculusLevelProductsModelSO::LevelPackProductData::get_sku
// Il2CppName: get_sku
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (OculusLevelProductsModelSO::LevelPackProductData::*)()>(&OculusLevelProductsModelSO::LevelPackProductData::get_sku)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusLevelProductsModelSO::LevelPackProductData*), "get_sku", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OculusLevelProductsModelSO::LevelPackProductData::get_levelPackId
// Il2CppName: get_levelPackId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (OculusLevelProductsModelSO::LevelPackProductData::*)()>(&OculusLevelProductsModelSO::LevelPackProductData::get_levelPackId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusLevelProductsModelSO::LevelPackProductData*), "get_levelPackId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OculusLevelProductsModelSO::LevelPackProductData::get_levelProductsData
// Il2CppName: get_levelProductsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<GlobalNamespace::OculusLevelProductsModelSO::LevelProductData*>* (OculusLevelProductsModelSO::LevelPackProductData::*)()>(&OculusLevelProductsModelSO::LevelPackProductData::get_levelProductsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusLevelProductsModelSO::LevelPackProductData*), "get_levelProductsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OculusLevelProductsModelSO::LevelPackProductData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusLevelProductsModelSO::LevelPackProductData::*)()>(&OculusLevelProductsModelSO::LevelPackProductData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusLevelProductsModelSO::LevelPackProductData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusLevelProductsModelSO::LevelPackProductData::*)()>(&OculusLevelProductsModelSO::LevelPackProductData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusLevelProductsModelSO::LevelPackProductData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusPlatformAchievementHandler
#include "GlobalNamespace/OculusPlatformAchievementHandler.hpp"
// Including type: OculusPlatformAchievementHandler/<>c__DisplayClass2_0
#include "GlobalNamespace/OculusPlatformAchievementHandler_--c__DisplayClass2_0.hpp"
// Including type: OculusPlatformAchievementHandler/<>c__DisplayClass3_0
#include "GlobalNamespace/OculusPlatformAchievementHandler_--c__DisplayClass3_0.hpp"
// Including type: OculusPlatformAchievementHandler/<>c__DisplayClass3_1
#include "GlobalNamespace/OculusPlatformAchievementHandler_--c__DisplayClass3_1.hpp"
// Including type: AchievementIdsModelSO
#include "GlobalNamespace/AchievementIdsModelSO.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: PlatformAchievementsModelSO/UnlockAchievementCompletionHandler
#include "GlobalNamespace/PlatformAchievementsModelSO_UnlockAchievementCompletionHandler.hpp"
// Including type: PlatformAchievementsModelSO/GetUnlockedAchievementsCompletionHandler
#include "GlobalNamespace/PlatformAchievementsModelSO_GetUnlockedAchievementsCompletionHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformAchievementHandler.UnlockAchievement
GlobalNamespace::HMAsyncRequest* GlobalNamespace::OculusPlatformAchievementHandler::UnlockAchievement(::Il2CppString* achievementId, GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAchievementHandler::UnlockAchievement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlockAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementId), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, achievementId, completionHandler);
}
// Autogenerated method: OculusPlatformAchievementHandler.GetUnlockedAchievements
GlobalNamespace::HMAsyncRequest* GlobalNamespace::OculusPlatformAchievementHandler::GetUnlockedAchievements(GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAchievementHandler::GetUnlockedAchievements");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnlockedAchievements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::HMAsyncRequest*, false>(this, ___internal__method, completionHandler);
}
// Writing MetadataGetter for method: OculusPlatformAchievementHandler::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformAchievementHandler::*)(GlobalNamespace::AchievementIdsModelSO*)>(&OculusPlatformAchievementHandler::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformAchievementHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AchievementIdsModelSO*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformAchievementHandler::*)(GlobalNamespace::AchievementIdsModelSO*)>(&OculusPlatformAchievementHandler::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformAchievementHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AchievementIdsModelSO*>()});
  }
};
// Writing MetadataGetter for method: OculusPlatformAchievementHandler::UnlockAchievement
// Il2CppName: UnlockAchievement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::HMAsyncRequest* (OculusPlatformAchievementHandler::*)(::Il2CppString*, GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementCompletionHandler*)>(&OculusPlatformAchievementHandler::UnlockAchievement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformAchievementHandler*), "UnlockAchievement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementCompletionHandler*>()});
  }
};
// Writing MetadataGetter for method: OculusPlatformAchievementHandler::GetUnlockedAchievements
// Il2CppName: GetUnlockedAchievements
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::HMAsyncRequest* (OculusPlatformAchievementHandler::*)(GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsCompletionHandler*)>(&OculusPlatformAchievementHandler::GetUnlockedAchievements)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformAchievementHandler*), "GetUnlockedAchievements", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsCompletionHandler*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAchievementHandler/<>c__DisplayClass2_0
#include "GlobalNamespace/OculusPlatformAchievementHandler_--c__DisplayClass2_0.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.AchievementUpdate
#include "Oculus/Platform/Models/AchievementUpdate.hpp"
// Including type: PlatformAchievementsModelSO/UnlockAchievementCompletionHandler
#include "GlobalNamespace/PlatformAchievementsModelSO_UnlockAchievementCompletionHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformAchievementHandler/<>c__DisplayClass2_0.<UnlockAchievement>b__0
void GlobalNamespace::OculusPlatformAchievementHandler::$$c__DisplayClass2_0::$UnlockAchievement$b__0(Oculus::Platform::Message_1<Oculus::Platform::Models::AchievementUpdate*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAchievementHandler::$$c__DisplayClass2_0::<UnlockAchievement>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UnlockAchievement>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Writing MetadataGetter for method: OculusPlatformAchievementHandler::$$c__DisplayClass2_0::$UnlockAchievement$b__0
// Il2CppName: <UnlockAchievement>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformAchievementHandler::$$c__DisplayClass2_0::*)(Oculus::Platform::Message_1<Oculus::Platform::Models::AchievementUpdate*>*)>(&OculusPlatformAchievementHandler::$$c__DisplayClass2_0::$UnlockAchievement$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformAchievementHandler::$$c__DisplayClass2_0*), "<UnlockAchievement>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message_1<Oculus::Platform::Models::AchievementUpdate*>*>()});
  }
};
// Writing MetadataGetter for method: OculusPlatformAchievementHandler::$$c__DisplayClass2_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformAchievementHandler::$$c__DisplayClass2_0::*)()>(&OculusPlatformAchievementHandler::$$c__DisplayClass2_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformAchievementHandler::$$c__DisplayClass2_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformAchievementHandler::$$c__DisplayClass2_0::*)()>(&OculusPlatformAchievementHandler::$$c__DisplayClass2_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformAchievementHandler::$$c__DisplayClass2_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAchievementHandler/<>c__DisplayClass3_0
#include "GlobalNamespace/OculusPlatformAchievementHandler_--c__DisplayClass3_0.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.AchievementProgressList
#include "Oculus/Platform/Models/AchievementProgressList.hpp"
// Including type: PlatformAchievementsModelSO/GetUnlockedAchievementsCompletionHandler
#include "GlobalNamespace/PlatformAchievementsModelSO_GetUnlockedAchievementsCompletionHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformAchievementHandler/<>c__DisplayClass3_0.<GetUnlockedAchievements>b__0
void GlobalNamespace::OculusPlatformAchievementHandler::$$c__DisplayClass3_0::$GetUnlockedAchievements$b__0(Oculus::Platform::Message_1<Oculus::Platform::Models::AchievementProgressList*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAchievementHandler::$$c__DisplayClass3_0::<GetUnlockedAchievements>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUnlockedAchievements>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Writing MetadataGetter for method: OculusPlatformAchievementHandler::$$c__DisplayClass3_0::$GetUnlockedAchievements$b__0
// Il2CppName: <GetUnlockedAchievements>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformAchievementHandler::$$c__DisplayClass3_0::*)(Oculus::Platform::Message_1<Oculus::Platform::Models::AchievementProgressList*>*)>(&OculusPlatformAchievementHandler::$$c__DisplayClass3_0::$GetUnlockedAchievements$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformAchievementHandler::$$c__DisplayClass3_0*), "<GetUnlockedAchievements>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Oculus::Platform::Message_1<Oculus::Platform::Models::AchievementProgressList*>*>()});
  }
};
// Writing MetadataGetter for method: OculusPlatformAchievementHandler::$$c__DisplayClass3_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformAchievementHandler::$$c__DisplayClass3_0::*)()>(&OculusPlatformAchievementHandler::$$c__DisplayClass3_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformAchievementHandler::$$c__DisplayClass3_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformAchievementHandler::$$c__DisplayClass3_0::*)()>(&OculusPlatformAchievementHandler::$$c__DisplayClass3_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformAchievementHandler::$$c__DisplayClass3_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAchievementHandler/<>c__DisplayClass3_1
#include "GlobalNamespace/OculusPlatformAchievementHandler_--c__DisplayClass3_1.hpp"
// Including type: Oculus.Platform.Models.AchievementProgress
#include "Oculus/Platform/Models/AchievementProgress.hpp"
// Including type: AchievementSO
#include "GlobalNamespace/AchievementSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusPlatformAchievementHandler/<>c__DisplayClass3_1.<GetUnlockedAchievements>b__1
bool GlobalNamespace::OculusPlatformAchievementHandler::$$c__DisplayClass3_1::$GetUnlockedAchievements$b__1(GlobalNamespace::AchievementSO* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAchievementHandler::$$c__DisplayClass3_1::<GetUnlockedAchievements>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUnlockedAchievements>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Writing MetadataGetter for method: OculusPlatformAchievementHandler::$$c__DisplayClass3_1::$GetUnlockedAchievements$b__1
// Il2CppName: <GetUnlockedAchievements>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (OculusPlatformAchievementHandler::$$c__DisplayClass3_1::*)(GlobalNamespace::AchievementSO*)>(&OculusPlatformAchievementHandler::$$c__DisplayClass3_1::$GetUnlockedAchievements$b__1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformAchievementHandler::$$c__DisplayClass3_1*), "<GetUnlockedAchievements>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AchievementSO*>()});
  }
};
// Writing MetadataGetter for method: OculusPlatformAchievementHandler::$$c__DisplayClass3_1::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformAchievementHandler::$$c__DisplayClass3_1::*)()>(&OculusPlatformAchievementHandler::$$c__DisplayClass3_1::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformAchievementHandler::$$c__DisplayClass3_1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OculusPlatformAchievementHandler::$$c__DisplayClass3_1::*)()>(&OculusPlatformAchievementHandler::$$c__DisplayClass3_1::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OculusPlatformAchievementHandler::$$c__DisplayClass3_1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamLevelProductsModelSO
#include "GlobalNamespace/SteamLevelProductsModelSO.hpp"
// Including type: SteamLevelProductsModelSO/LevelProductData
#include "GlobalNamespace/SteamLevelProductsModelSO_LevelProductData.hpp"
// Including type: SteamLevelProductsModelSO/LevelPackProductData
#include "GlobalNamespace/SteamLevelProductsModelSO_LevelPackProductData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamLevelProductsModelSO.get_levelPackProductsData
::Array<GlobalNamespace::SteamLevelProductsModelSO::LevelPackProductData*>* GlobalNamespace::SteamLevelProductsModelSO::get_levelPackProductsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamLevelProductsModelSO::get_levelPackProductsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelPackProductsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::SteamLevelProductsModelSO::LevelPackProductData*>*, false>(this, ___internal__method);
}
// Autogenerated method: SteamLevelProductsModelSO.GetLevelProductData
GlobalNamespace::SteamLevelProductsModelSO::LevelProductData* GlobalNamespace::SteamLevelProductsModelSO::GetLevelProductData(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamLevelProductsModelSO::GetLevelProductData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelProductData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SteamLevelProductsModelSO::LevelProductData*, false>(this, ___internal__method, levelId);
}
// Autogenerated method: SteamLevelProductsModelSO.GetLevelPackProductData
GlobalNamespace::SteamLevelProductsModelSO::LevelPackProductData* GlobalNamespace::SteamLevelProductsModelSO::GetLevelPackProductData(::Il2CppString* levelPackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamLevelProductsModelSO::GetLevelPackProductData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelPackProductData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SteamLevelProductsModelSO::LevelPackProductData*, false>(this, ___internal__method, levelPackId);
}
// Autogenerated method: SteamLevelProductsModelSO.OnEnable
void GlobalNamespace::SteamLevelProductsModelSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamLevelProductsModelSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SteamLevelProductsModelSO::get_levelPackProductsData
// Il2CppName: get_levelPackProductsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<GlobalNamespace::SteamLevelProductsModelSO::LevelPackProductData*>* (SteamLevelProductsModelSO::*)()>(&SteamLevelProductsModelSO::get_levelPackProductsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SteamLevelProductsModelSO*), "get_levelPackProductsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SteamLevelProductsModelSO::GetLevelProductData
// Il2CppName: GetLevelProductData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::SteamLevelProductsModelSO::LevelProductData* (SteamLevelProductsModelSO::*)(::Il2CppString*)>(&SteamLevelProductsModelSO::GetLevelProductData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SteamLevelProductsModelSO*), "GetLevelProductData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SteamLevelProductsModelSO::GetLevelPackProductData
// Il2CppName: GetLevelPackProductData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::SteamLevelProductsModelSO::LevelPackProductData* (SteamLevelProductsModelSO::*)(::Il2CppString*)>(&SteamLevelProductsModelSO::GetLevelPackProductData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SteamLevelProductsModelSO*), "GetLevelPackProductData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SteamLevelProductsModelSO::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SteamLevelProductsModelSO::*)()>(&SteamLevelProductsModelSO::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SteamLevelProductsModelSO*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SteamLevelProductsModelSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SteamLevelProductsModelSO::*)()>(&SteamLevelProductsModelSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SteamLevelProductsModelSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SteamLevelProductsModelSO::*)()>(&SteamLevelProductsModelSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SteamLevelProductsModelSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamLevelProductsModelSO/LevelProductData
#include "GlobalNamespace/SteamLevelProductsModelSO_LevelProductData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamLevelProductsModelSO/LevelProductData.get_appId
uint GlobalNamespace::SteamLevelProductsModelSO::LevelProductData::get_appId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamLevelProductsModelSO::LevelProductData::get_appId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_appId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: SteamLevelProductsModelSO/LevelProductData.get_levelId
::Il2CppString* GlobalNamespace::SteamLevelProductsModelSO::LevelProductData::get_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamLevelProductsModelSO::LevelProductData::get_levelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SteamLevelProductsModelSO::LevelProductData::get_appId
// Il2CppName: get_appId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (SteamLevelProductsModelSO::LevelProductData::*)()>(&SteamLevelProductsModelSO::LevelProductData::get_appId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SteamLevelProductsModelSO::LevelProductData*), "get_appId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SteamLevelProductsModelSO::LevelProductData::get_levelId
// Il2CppName: get_levelId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (SteamLevelProductsModelSO::LevelProductData::*)()>(&SteamLevelProductsModelSO::LevelProductData::get_levelId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SteamLevelProductsModelSO::LevelProductData*), "get_levelId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SteamLevelProductsModelSO::LevelProductData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SteamLevelProductsModelSO::LevelProductData::*)()>(&SteamLevelProductsModelSO::LevelProductData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SteamLevelProductsModelSO::LevelProductData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SteamLevelProductsModelSO::LevelProductData::*)()>(&SteamLevelProductsModelSO::LevelProductData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SteamLevelProductsModelSO::LevelProductData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamLevelProductsModelSO/LevelPackProductData
#include "GlobalNamespace/SteamLevelProductsModelSO_LevelPackProductData.hpp"
// Including type: SteamLevelProductsModelSO/LevelProductData
#include "GlobalNamespace/SteamLevelProductsModelSO_LevelProductData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamLevelProductsModelSO/LevelPackProductData.get_bundleId
uint GlobalNamespace::SteamLevelProductsModelSO::LevelPackProductData::get_bundleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamLevelProductsModelSO::LevelPackProductData::get_bundleId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bundleId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: SteamLevelProductsModelSO/LevelPackProductData.get_levelPackId
::Il2CppString* GlobalNamespace::SteamLevelProductsModelSO::LevelPackProductData::get_levelPackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamLevelProductsModelSO::LevelPackProductData::get_levelPackId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelPackId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: SteamLevelProductsModelSO/LevelPackProductData.get_levelProductsData
::Array<GlobalNamespace::SteamLevelProductsModelSO::LevelProductData*>* GlobalNamespace::SteamLevelProductsModelSO::LevelPackProductData::get_levelProductsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamLevelProductsModelSO::LevelPackProductData::get_levelProductsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelProductsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::SteamLevelProductsModelSO::LevelProductData*>*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SteamLevelProductsModelSO::LevelPackProductData::get_bundleId
// Il2CppName: get_bundleId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (SteamLevelProductsModelSO::LevelPackProductData::*)()>(&SteamLevelProductsModelSO::LevelPackProductData::get_bundleId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SteamLevelProductsModelSO::LevelPackProductData*), "get_bundleId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SteamLevelProductsModelSO::LevelPackProductData::get_levelPackId
// Il2CppName: get_levelPackId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (SteamLevelProductsModelSO::LevelPackProductData::*)()>(&SteamLevelProductsModelSO::LevelPackProductData::get_levelPackId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SteamLevelProductsModelSO::LevelPackProductData*), "get_levelPackId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SteamLevelProductsModelSO::LevelPackProductData::get_levelProductsData
// Il2CppName: get_levelProductsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<GlobalNamespace::SteamLevelProductsModelSO::LevelProductData*>* (SteamLevelProductsModelSO::LevelPackProductData::*)()>(&SteamLevelProductsModelSO::LevelPackProductData::get_levelProductsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SteamLevelProductsModelSO::LevelPackProductData*), "get_levelProductsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SteamLevelProductsModelSO::LevelPackProductData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SteamLevelProductsModelSO::LevelPackProductData::*)()>(&SteamLevelProductsModelSO::LevelPackProductData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SteamLevelProductsModelSO::LevelPackProductData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SteamLevelProductsModelSO::LevelPackProductData::*)()>(&SteamLevelProductsModelSO::LevelPackProductData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SteamLevelProductsModelSO::LevelPackProductData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PS4AchievementIdsModelSO
#include "GlobalNamespace/PS4AchievementIdsModelSO.hpp"
// Including type: PS4AchievementIdsModelSO/AchievementIdData
#include "GlobalNamespace/PS4AchievementIdsModelSO_AchievementIdData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PS4AchievementIdsModelSO.get_achievementsIds
System::Collections::Generic::List_1<GlobalNamespace::PS4AchievementIdsModelSO::AchievementIdData*>* GlobalNamespace::PS4AchievementIdsModelSO::get_achievementsIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4AchievementIdsModelSO::get_achievementsIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_achievementsIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::PS4AchievementIdsModelSO::AchievementIdData*>*, false>(this, ___internal__method);
}
// Autogenerated method: PS4AchievementIdsModelSO.GetTrophyId
bool GlobalNamespace::PS4AchievementIdsModelSO::GetTrophyId(::Il2CppString* achievementId, int& trophyId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4AchievementIdsModelSO::GetTrophyId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTrophyId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementId), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, achievementId, trophyId);
}
// Autogenerated method: PS4AchievementIdsModelSO.GetAchievementId
bool GlobalNamespace::PS4AchievementIdsModelSO::GetAchievementId(int trophyId, ::Il2CppString*& achievementId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4AchievementIdsModelSO::GetAchievementId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAchievementId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trophyId), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, trophyId, achievementId);
}
// Autogenerated method: PS4AchievementIdsModelSO.OnEnable
void GlobalNamespace::PS4AchievementIdsModelSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4AchievementIdsModelSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PS4AchievementIdsModelSO::get_achievementsIds
// Il2CppName: get_achievementsIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<GlobalNamespace::PS4AchievementIdsModelSO::AchievementIdData*>* (PS4AchievementIdsModelSO::*)()>(&PS4AchievementIdsModelSO::get_achievementsIds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4AchievementIdsModelSO*), "get_achievementsIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4AchievementIdsModelSO::GetTrophyId
// Il2CppName: GetTrophyId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PS4AchievementIdsModelSO::*)(::Il2CppString*, int&)>(&PS4AchievementIdsModelSO::GetTrophyId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4AchievementIdsModelSO*), "GetTrophyId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: PS4AchievementIdsModelSO::GetAchievementId
// Il2CppName: GetAchievementId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PS4AchievementIdsModelSO::*)(int, ::Il2CppString*&)>(&PS4AchievementIdsModelSO::GetAchievementId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4AchievementIdsModelSO*), "GetAchievementId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()});
  }
};
// Writing MetadataGetter for method: PS4AchievementIdsModelSO::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4AchievementIdsModelSO::*)()>(&PS4AchievementIdsModelSO::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4AchievementIdsModelSO*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4AchievementIdsModelSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4AchievementIdsModelSO::*)()>(&PS4AchievementIdsModelSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4AchievementIdsModelSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4AchievementIdsModelSO::*)()>(&PS4AchievementIdsModelSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4AchievementIdsModelSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PS4AchievementIdsModelSO/AchievementIdData
#include "GlobalNamespace/PS4AchievementIdsModelSO_AchievementIdData.hpp"
// Including type: AchievementSO
#include "GlobalNamespace/AchievementSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PS4AchievementIdsModelSO/AchievementIdData.get_ps4TrophyId
int GlobalNamespace::PS4AchievementIdsModelSO::AchievementIdData::get_ps4TrophyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4AchievementIdsModelSO::AchievementIdData::get_ps4TrophyId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ps4TrophyId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PS4AchievementIdsModelSO/AchievementIdData.get_achievementId
::Il2CppString* GlobalNamespace::PS4AchievementIdsModelSO::AchievementIdData::get_achievementId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4AchievementIdsModelSO::AchievementIdData::get_achievementId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_achievementId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PS4AchievementIdsModelSO::AchievementIdData::get_ps4TrophyId
// Il2CppName: get_ps4TrophyId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PS4AchievementIdsModelSO::AchievementIdData::*)()>(&PS4AchievementIdsModelSO::AchievementIdData::get_ps4TrophyId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4AchievementIdsModelSO::AchievementIdData*), "get_ps4TrophyId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4AchievementIdsModelSO::AchievementIdData::get_achievementId
// Il2CppName: get_achievementId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PS4AchievementIdsModelSO::AchievementIdData::*)()>(&PS4AchievementIdsModelSO::AchievementIdData::get_achievementId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4AchievementIdsModelSO::AchievementIdData*), "get_achievementId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4AchievementIdsModelSO::AchievementIdData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4AchievementIdsModelSO::AchievementIdData::*)()>(&PS4AchievementIdsModelSO::AchievementIdData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4AchievementIdsModelSO::AchievementIdData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4AchievementIdsModelSO::AchievementIdData::*)()>(&PS4AchievementIdsModelSO::AchievementIdData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4AchievementIdsModelSO::AchievementIdData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PS4ActivePublisherSKUSettingsSO
#include "GlobalNamespace/PS4ActivePublisherSKUSettingsSO.hpp"
// Including type: PS4PublisherSKUSettingsSO
#include "GlobalNamespace/PS4PublisherSKUSettingsSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PS4ActivePublisherSKUSettingsSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4ActivePublisherSKUSettingsSO::*)()>(&PS4ActivePublisherSKUSettingsSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4ActivePublisherSKUSettingsSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4ActivePublisherSKUSettingsSO::*)()>(&PS4ActivePublisherSKUSettingsSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4ActivePublisherSKUSettingsSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PS4BeatmapDataAssetFileModel
#include "GlobalNamespace/PS4BeatmapDataAssetFileModel.hpp"
// Including type: PS4BeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__3
#include "GlobalNamespace/PS4BeatmapDataAssetFileModel_-GetAssetBundleFileForPreviewLevelAsync-d__3.hpp"
// Including type: PS4BeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__4
#include "GlobalNamespace/PS4BeatmapDataAssetFileModel_-TryDeleteAssetBundleFileForPreviewLevelAsync-d__4.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PS4BeatmapDataAssetFileModel.add_levelDataAssetDownloadUpdateEvent
void GlobalNamespace::PS4BeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4BeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PS4BeatmapDataAssetFileModel.remove_levelDataAssetDownloadUpdateEvent
void GlobalNamespace::PS4BeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4BeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PS4BeatmapDataAssetFileModel.GetAssetBundleFileForPreviewLevelAsync
System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>* GlobalNamespace::PS4BeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4BeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>*, false>(this, ___internal__method, previewBeatmapLevel, cancellationToken);
}
// Autogenerated method: PS4BeatmapDataAssetFileModel.TryDeleteAssetBundleFileForPreviewLevelAsync
System::Threading::Tasks::Task_1<bool>* GlobalNamespace::PS4BeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4BeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDeleteAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, previewBeatmapLevel, cancellationToken);
}
// Writing MetadataGetter for method: PS4BeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent
// Il2CppName: add_levelDataAssetDownloadUpdateEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4BeatmapDataAssetFileModel::*)(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>*)>(&PS4BeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4BeatmapDataAssetFileModel*), "add_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>*>()});
  }
};
// Writing MetadataGetter for method: PS4BeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent
// Il2CppName: remove_levelDataAssetDownloadUpdateEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4BeatmapDataAssetFileModel::*)(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>*)>(&PS4BeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4BeatmapDataAssetFileModel*), "remove_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>*>()});
  }
};
// Writing MetadataGetter for method: PS4BeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync
// Il2CppName: GetAssetBundleFileForPreviewLevelAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>* (PS4BeatmapDataAssetFileModel::*)(GlobalNamespace::IPreviewBeatmapLevel*, System::Threading::CancellationToken)>(&PS4BeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4BeatmapDataAssetFileModel*), "GetAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: PS4BeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync
// Il2CppName: TryDeleteAssetBundleFileForPreviewLevelAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<bool>* (PS4BeatmapDataAssetFileModel::*)(GlobalNamespace::IPreviewBeatmapLevel*, System::Threading::CancellationToken)>(&PS4BeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4BeatmapDataAssetFileModel*), "TryDeleteAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: PS4BeatmapDataAssetFileModel::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4BeatmapDataAssetFileModel::*)()>(&PS4BeatmapDataAssetFileModel::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4BeatmapDataAssetFileModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4BeatmapDataAssetFileModel::*)()>(&PS4BeatmapDataAssetFileModel::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4BeatmapDataAssetFileModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PS4BeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__3
#include "GlobalNamespace/PS4BeatmapDataAssetFileModel_-GetAssetBundleFileForPreviewLevelAsync-d__3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PS4BeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__3.MoveNext
void GlobalNamespace::PS4BeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4BeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: PS4BeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__3.SetStateMachine
void GlobalNamespace::PS4BeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__3::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4BeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__3::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: PS4BeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__3::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4BeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__3::*)()>(&PS4BeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__3::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4BeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__3), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4BeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__3::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4BeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__3::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&PS4BeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__3::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4BeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__3), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PS4BeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__4
#include "GlobalNamespace/PS4BeatmapDataAssetFileModel_-TryDeleteAssetBundleFileForPreviewLevelAsync-d__4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PS4BeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__4.MoveNext
void GlobalNamespace::PS4BeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4BeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: PS4BeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__4.SetStateMachine
void GlobalNamespace::PS4BeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__4::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4BeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__4::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: PS4BeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__4::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4BeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__4::*)()>(&PS4BeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__4::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4BeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__4), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4BeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__4::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4BeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__4::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&PS4BeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__4::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4BeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__4), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PS4Helper
#include "GlobalNamespace/PS4Helper.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PS4Helper.add_didGoToBackgroundExecutionEvent
void GlobalNamespace::PS4Helper::add_didGoToBackgroundExecutionEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4Helper::add_didGoToBackgroundExecutionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didGoToBackgroundExecutionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PS4Helper.remove_didGoToBackgroundExecutionEvent
void GlobalNamespace::PS4Helper::remove_didGoToBackgroundExecutionEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4Helper::remove_didGoToBackgroundExecutionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didGoToBackgroundExecutionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PS4Helper.add_didGoToForegroundExecutionEvent
void GlobalNamespace::PS4Helper::add_didGoToForegroundExecutionEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4Helper::add_didGoToForegroundExecutionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didGoToForegroundExecutionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PS4Helper.remove_didGoToForegroundExecutionEvent
void GlobalNamespace::PS4Helper::remove_didGoToForegroundExecutionEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4Helper::remove_didGoToForegroundExecutionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didGoToForegroundExecutionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PS4Helper.Update
void GlobalNamespace::PS4Helper::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4Helper::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PS4Helper::add_didGoToBackgroundExecutionEvent
// Il2CppName: add_didGoToBackgroundExecutionEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4Helper::*)(System::Action*)>(&PS4Helper::add_didGoToBackgroundExecutionEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4Helper*), "add_didGoToBackgroundExecutionEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: PS4Helper::remove_didGoToBackgroundExecutionEvent
// Il2CppName: remove_didGoToBackgroundExecutionEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4Helper::*)(System::Action*)>(&PS4Helper::remove_didGoToBackgroundExecutionEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4Helper*), "remove_didGoToBackgroundExecutionEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: PS4Helper::add_didGoToForegroundExecutionEvent
// Il2CppName: add_didGoToForegroundExecutionEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4Helper::*)(System::Action*)>(&PS4Helper::add_didGoToForegroundExecutionEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4Helper*), "add_didGoToForegroundExecutionEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: PS4Helper::remove_didGoToForegroundExecutionEvent
// Il2CppName: remove_didGoToForegroundExecutionEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4Helper::*)(System::Action*)>(&PS4Helper::remove_didGoToForegroundExecutionEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4Helper*), "remove_didGoToForegroundExecutionEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: PS4Helper::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4Helper::*)()>(&PS4Helper::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4Helper*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4Helper::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4Helper::*)()>(&PS4Helper::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4Helper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4Helper::*)()>(&PS4Helper::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4Helper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PS4LeaderboardIdsModelSO
#include "GlobalNamespace/PS4LeaderboardIdsModelSO.hpp"
// Including type: PS4LeaderboardIdsModelSO/LeaderboardIdData
#include "GlobalNamespace/PS4LeaderboardIdsModelSO_LeaderboardIdData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PS4LeaderboardIdsModelSO.get_leaderboardIds
System::Collections::Generic::List_1<GlobalNamespace::PS4LeaderboardIdsModelSO::LeaderboardIdData*>* GlobalNamespace::PS4LeaderboardIdsModelSO::get_leaderboardIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4LeaderboardIdsModelSO::get_leaderboardIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leaderboardIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::PS4LeaderboardIdsModelSO::LeaderboardIdData*>*, false>(this, ___internal__method);
}
// Autogenerated method: PS4LeaderboardIdsModelSO.GetPS4LeaderboardId
bool GlobalNamespace::PS4LeaderboardIdsModelSO::GetPS4LeaderboardId(::Il2CppString* leaderboardId, uint& ps4LeaderboardId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4LeaderboardIdsModelSO::GetPS4LeaderboardId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPS4LeaderboardId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, leaderboardId, ps4LeaderboardId);
}
// Autogenerated method: PS4LeaderboardIdsModelSO.OnEnable
void GlobalNamespace::PS4LeaderboardIdsModelSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4LeaderboardIdsModelSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PS4LeaderboardIdsModelSO::get_leaderboardIds
// Il2CppName: get_leaderboardIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<GlobalNamespace::PS4LeaderboardIdsModelSO::LeaderboardIdData*>* (PS4LeaderboardIdsModelSO::*)()>(&PS4LeaderboardIdsModelSO::get_leaderboardIds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LeaderboardIdsModelSO*), "get_leaderboardIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4LeaderboardIdsModelSO::GetPS4LeaderboardId
// Il2CppName: GetPS4LeaderboardId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PS4LeaderboardIdsModelSO::*)(::Il2CppString*, uint&)>(&PS4LeaderboardIdsModelSO::GetPS4LeaderboardId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LeaderboardIdsModelSO*), "GetPS4LeaderboardId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<uint&>()});
  }
};
// Writing MetadataGetter for method: PS4LeaderboardIdsModelSO::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4LeaderboardIdsModelSO::*)()>(&PS4LeaderboardIdsModelSO::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LeaderboardIdsModelSO*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4LeaderboardIdsModelSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4LeaderboardIdsModelSO::*)()>(&PS4LeaderboardIdsModelSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LeaderboardIdsModelSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4LeaderboardIdsModelSO::*)()>(&PS4LeaderboardIdsModelSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LeaderboardIdsModelSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PS4LeaderboardIdsModelSO/LeaderboardIdData
#include "GlobalNamespace/PS4LeaderboardIdsModelSO_LeaderboardIdData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PS4LeaderboardIdsModelSO/LeaderboardIdData.get_ps4LeaderboardId
uint GlobalNamespace::PS4LeaderboardIdsModelSO::LeaderboardIdData::get_ps4LeaderboardId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4LeaderboardIdsModelSO::LeaderboardIdData::get_ps4LeaderboardId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ps4LeaderboardId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: PS4LeaderboardIdsModelSO/LeaderboardIdData.get_leaderboardId
::Il2CppString* GlobalNamespace::PS4LeaderboardIdsModelSO::LeaderboardIdData::get_leaderboardId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4LeaderboardIdsModelSO::LeaderboardIdData::get_leaderboardId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leaderboardId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PS4LeaderboardIdsModelSO::LeaderboardIdData::get_ps4LeaderboardId
// Il2CppName: get_ps4LeaderboardId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (PS4LeaderboardIdsModelSO::LeaderboardIdData::*)()>(&PS4LeaderboardIdsModelSO::LeaderboardIdData::get_ps4LeaderboardId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LeaderboardIdsModelSO::LeaderboardIdData*), "get_ps4LeaderboardId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4LeaderboardIdsModelSO::LeaderboardIdData::get_leaderboardId
// Il2CppName: get_leaderboardId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PS4LeaderboardIdsModelSO::LeaderboardIdData::*)()>(&PS4LeaderboardIdsModelSO::LeaderboardIdData::get_leaderboardId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LeaderboardIdsModelSO::LeaderboardIdData*), "get_leaderboardId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4LeaderboardIdsModelSO::LeaderboardIdData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4LeaderboardIdsModelSO::LeaderboardIdData::*)(uint, ::Il2CppString*)>(&PS4LeaderboardIdsModelSO::LeaderboardIdData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LeaderboardIdsModelSO::LeaderboardIdData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4LeaderboardIdsModelSO::LeaderboardIdData::*)(uint, ::Il2CppString*)>(&PS4LeaderboardIdsModelSO::LeaderboardIdData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LeaderboardIdsModelSO::LeaderboardIdData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PS4LevelProductsModelSO
#include "GlobalNamespace/PS4LevelProductsModelSO.hpp"
// Including type: PS4LevelProductsModelSO/LevelProductData
#include "GlobalNamespace/PS4LevelProductsModelSO_LevelProductData.hpp"
// Including type: PS4LevelProductsModelSO/LevelPackProductData
#include "GlobalNamespace/PS4LevelProductsModelSO_LevelPackProductData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PS4LevelProductsModelSO.get_levelPackProductsData
::Array<GlobalNamespace::PS4LevelProductsModelSO::LevelPackProductData*>* GlobalNamespace::PS4LevelProductsModelSO::get_levelPackProductsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4LevelProductsModelSO::get_levelPackProductsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelPackProductsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::PS4LevelProductsModelSO::LevelPackProductData*>*, false>(this, ___internal__method);
}
// Autogenerated method: PS4LevelProductsModelSO.GetLevelProductData
GlobalNamespace::PS4LevelProductsModelSO::LevelProductData* GlobalNamespace::PS4LevelProductsModelSO::GetLevelProductData(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4LevelProductsModelSO::GetLevelProductData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelProductData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PS4LevelProductsModelSO::LevelProductData*, false>(this, ___internal__method, levelId);
}
// Autogenerated method: PS4LevelProductsModelSO.GetLevelPackProductData
GlobalNamespace::PS4LevelProductsModelSO::LevelPackProductData* GlobalNamespace::PS4LevelProductsModelSO::GetLevelPackProductData(::Il2CppString* levelPackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4LevelProductsModelSO::GetLevelPackProductData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelPackProductData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PS4LevelProductsModelSO::LevelPackProductData*, false>(this, ___internal__method, levelPackId);
}
// Autogenerated method: PS4LevelProductsModelSO.OnEnable
void GlobalNamespace::PS4LevelProductsModelSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4LevelProductsModelSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PS4LevelProductsModelSO::get_levelPackProductsData
// Il2CppName: get_levelPackProductsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<GlobalNamespace::PS4LevelProductsModelSO::LevelPackProductData*>* (PS4LevelProductsModelSO::*)()>(&PS4LevelProductsModelSO::get_levelPackProductsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LevelProductsModelSO*), "get_levelPackProductsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4LevelProductsModelSO::GetLevelProductData
// Il2CppName: GetLevelProductData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PS4LevelProductsModelSO::LevelProductData* (PS4LevelProductsModelSO::*)(::Il2CppString*)>(&PS4LevelProductsModelSO::GetLevelProductData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LevelProductsModelSO*), "GetLevelProductData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PS4LevelProductsModelSO::GetLevelPackProductData
// Il2CppName: GetLevelPackProductData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PS4LevelProductsModelSO::LevelPackProductData* (PS4LevelProductsModelSO::*)(::Il2CppString*)>(&PS4LevelProductsModelSO::GetLevelPackProductData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LevelProductsModelSO*), "GetLevelPackProductData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PS4LevelProductsModelSO::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4LevelProductsModelSO::*)()>(&PS4LevelProductsModelSO::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LevelProductsModelSO*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4LevelProductsModelSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4LevelProductsModelSO::*)()>(&PS4LevelProductsModelSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LevelProductsModelSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4LevelProductsModelSO::*)()>(&PS4LevelProductsModelSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LevelProductsModelSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PS4LevelProductsModelSO/LevelProductData
#include "GlobalNamespace/PS4LevelProductsModelSO_LevelProductData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PS4LevelProductsModelSO/LevelProductData.get_entitlementLabel
::Il2CppString* GlobalNamespace::PS4LevelProductsModelSO::LevelProductData::get_entitlementLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4LevelProductsModelSO::LevelProductData::get_entitlementLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_entitlementLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PS4LevelProductsModelSO/LevelProductData.get_productLabel
::Il2CppString* GlobalNamespace::PS4LevelProductsModelSO::LevelProductData::get_productLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4LevelProductsModelSO::LevelProductData::get_productLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_productLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PS4LevelProductsModelSO/LevelProductData.get_levelId
::Il2CppString* GlobalNamespace::PS4LevelProductsModelSO::LevelProductData::get_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4LevelProductsModelSO::LevelProductData::get_levelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PS4LevelProductsModelSO::LevelProductData::get_entitlementLabel
// Il2CppName: get_entitlementLabel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PS4LevelProductsModelSO::LevelProductData::*)()>(&PS4LevelProductsModelSO::LevelProductData::get_entitlementLabel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LevelProductsModelSO::LevelProductData*), "get_entitlementLabel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4LevelProductsModelSO::LevelProductData::get_productLabel
// Il2CppName: get_productLabel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PS4LevelProductsModelSO::LevelProductData::*)()>(&PS4LevelProductsModelSO::LevelProductData::get_productLabel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LevelProductsModelSO::LevelProductData*), "get_productLabel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4LevelProductsModelSO::LevelProductData::get_levelId
// Il2CppName: get_levelId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PS4LevelProductsModelSO::LevelProductData::*)()>(&PS4LevelProductsModelSO::LevelProductData::get_levelId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LevelProductsModelSO::LevelProductData*), "get_levelId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4LevelProductsModelSO::LevelProductData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4LevelProductsModelSO::LevelProductData::*)()>(&PS4LevelProductsModelSO::LevelProductData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LevelProductsModelSO::LevelProductData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4LevelProductsModelSO::LevelProductData::*)()>(&PS4LevelProductsModelSO::LevelProductData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LevelProductsModelSO::LevelProductData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PS4LevelProductsModelSO/LevelPackProductData
#include "GlobalNamespace/PS4LevelProductsModelSO_LevelPackProductData.hpp"
// Including type: PS4LevelProductsModelSO/LevelProductData
#include "GlobalNamespace/PS4LevelProductsModelSO_LevelProductData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PS4LevelProductsModelSO/LevelPackProductData.get_productLabel
::Il2CppString* GlobalNamespace::PS4LevelProductsModelSO::LevelPackProductData::get_productLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4LevelProductsModelSO::LevelPackProductData::get_productLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_productLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PS4LevelProductsModelSO/LevelPackProductData.get_categoryLabel
::Il2CppString* GlobalNamespace::PS4LevelProductsModelSO::LevelPackProductData::get_categoryLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4LevelProductsModelSO::LevelPackProductData::get_categoryLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_categoryLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PS4LevelProductsModelSO/LevelPackProductData.get_levelPackId
::Il2CppString* GlobalNamespace::PS4LevelProductsModelSO::LevelPackProductData::get_levelPackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4LevelProductsModelSO::LevelPackProductData::get_levelPackId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelPackId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PS4LevelProductsModelSO/LevelPackProductData.get_packLevelPriceDiscountMul
float GlobalNamespace::PS4LevelProductsModelSO::LevelPackProductData::get_packLevelPriceDiscountMul() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4LevelProductsModelSO::LevelPackProductData::get_packLevelPriceDiscountMul");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packLevelPriceDiscountMul", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PS4LevelProductsModelSO/LevelPackProductData.get_levelProductsData
::Array<GlobalNamespace::PS4LevelProductsModelSO::LevelProductData*>* GlobalNamespace::PS4LevelProductsModelSO::LevelPackProductData::get_levelProductsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4LevelProductsModelSO::LevelPackProductData::get_levelProductsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelProductsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::PS4LevelProductsModelSO::LevelProductData*>*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PS4LevelProductsModelSO::LevelPackProductData::get_productLabel
// Il2CppName: get_productLabel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PS4LevelProductsModelSO::LevelPackProductData::*)()>(&PS4LevelProductsModelSO::LevelPackProductData::get_productLabel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LevelProductsModelSO::LevelPackProductData*), "get_productLabel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4LevelProductsModelSO::LevelPackProductData::get_categoryLabel
// Il2CppName: get_categoryLabel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PS4LevelProductsModelSO::LevelPackProductData::*)()>(&PS4LevelProductsModelSO::LevelPackProductData::get_categoryLabel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LevelProductsModelSO::LevelPackProductData*), "get_categoryLabel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4LevelProductsModelSO::LevelPackProductData::get_levelPackId
// Il2CppName: get_levelPackId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PS4LevelProductsModelSO::LevelPackProductData::*)()>(&PS4LevelProductsModelSO::LevelPackProductData::get_levelPackId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LevelProductsModelSO::LevelPackProductData*), "get_levelPackId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4LevelProductsModelSO::LevelPackProductData::get_packLevelPriceDiscountMul
// Il2CppName: get_packLevelPriceDiscountMul
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (PS4LevelProductsModelSO::LevelPackProductData::*)()>(&PS4LevelProductsModelSO::LevelPackProductData::get_packLevelPriceDiscountMul)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LevelProductsModelSO::LevelPackProductData*), "get_packLevelPriceDiscountMul", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4LevelProductsModelSO::LevelPackProductData::get_levelProductsData
// Il2CppName: get_levelProductsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<GlobalNamespace::PS4LevelProductsModelSO::LevelProductData*>* (PS4LevelProductsModelSO::LevelPackProductData::*)()>(&PS4LevelProductsModelSO::LevelPackProductData::get_levelProductsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LevelProductsModelSO::LevelPackProductData*), "get_levelProductsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4LevelProductsModelSO::LevelPackProductData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4LevelProductsModelSO::LevelPackProductData::*)()>(&PS4LevelProductsModelSO::LevelPackProductData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LevelProductsModelSO::LevelPackProductData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4LevelProductsModelSO::LevelPackProductData::*)()>(&PS4LevelProductsModelSO::LevelPackProductData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4LevelProductsModelSO::LevelPackProductData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PS4OnGoingToBackgroundSaveHandler
#include "GlobalNamespace/PS4OnGoingToBackgroundSaveHandler.hpp"
// Including type: LocalLeaderboardsModel
#include "GlobalNamespace/LocalLeaderboardsModel.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PS4OnGoingToBackgroundSaveHandler.OnEnable
void GlobalNamespace::PS4OnGoingToBackgroundSaveHandler::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4OnGoingToBackgroundSaveHandler::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PS4OnGoingToBackgroundSaveHandler.OnDisable
void GlobalNamespace::PS4OnGoingToBackgroundSaveHandler::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4OnGoingToBackgroundSaveHandler::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PS4OnGoingToBackgroundSaveHandler.HandlePS4HelperDidGoToBackgroundExecution
void GlobalNamespace::PS4OnGoingToBackgroundSaveHandler::HandlePS4HelperDidGoToBackgroundExecution() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4OnGoingToBackgroundSaveHandler::HandlePS4HelperDidGoToBackgroundExecution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePS4HelperDidGoToBackgroundExecution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PS4OnGoingToBackgroundSaveHandler::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4OnGoingToBackgroundSaveHandler::*)()>(&PS4OnGoingToBackgroundSaveHandler::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4OnGoingToBackgroundSaveHandler*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4OnGoingToBackgroundSaveHandler::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4OnGoingToBackgroundSaveHandler::*)()>(&PS4OnGoingToBackgroundSaveHandler::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4OnGoingToBackgroundSaveHandler*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4OnGoingToBackgroundSaveHandler::HandlePS4HelperDidGoToBackgroundExecution
// Il2CppName: HandlePS4HelperDidGoToBackgroundExecution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4OnGoingToBackgroundSaveHandler::*)()>(&PS4OnGoingToBackgroundSaveHandler::HandlePS4HelperDidGoToBackgroundExecution)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4OnGoingToBackgroundSaveHandler*), "HandlePS4HelperDidGoToBackgroundExecution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4OnGoingToBackgroundSaveHandler::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4OnGoingToBackgroundSaveHandler::*)()>(&PS4OnGoingToBackgroundSaveHandler::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4OnGoingToBackgroundSaveHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4OnGoingToBackgroundSaveHandler::*)()>(&PS4OnGoingToBackgroundSaveHandler::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4OnGoingToBackgroundSaveHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PS4PlatformAdditionalContentModel
#include "GlobalNamespace/PS4PlatformAdditionalContentModel.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PS4PlatformAdditionalContentModel.InvalidateDataInternal
void GlobalNamespace::PS4PlatformAdditionalContentModel::InvalidateDataInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4PlatformAdditionalContentModel::InvalidateDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PS4PlatformAdditionalContentModel.GetLevelEntitlementStatusInternalAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::PS4PlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync(::Il2CppString* levelId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4PlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, levelId, token);
}
// Autogenerated method: PS4PlatformAdditionalContentModel.GetPackEntitlementStatusInternalAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::PS4PlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4PlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated method: PS4PlatformAdditionalContentModel.IsPackBetterBuyThanLevelAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>* GlobalNamespace::PS4PlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4PlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPackBetterBuyThanLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated method: PS4PlatformAdditionalContentModel.OpenLevelProductStoreAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::PS4PlatformAdditionalContentModel::OpenLevelProductStoreAsync(::Il2CppString* levelId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4PlatformAdditionalContentModel::OpenLevelProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(this, ___internal__method, levelId, token);
}
// Autogenerated method: PS4PlatformAdditionalContentModel.OpenLevelPackProductStoreAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::PS4PlatformAdditionalContentModel::OpenLevelPackProductStoreAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4PlatformAdditionalContentModel::OpenLevelPackProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelPackProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(this, ___internal__method, levelPackId, token);
}
// Writing MetadataGetter for method: PS4PlatformAdditionalContentModel::InvalidateDataInternal
// Il2CppName: InvalidateDataInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4PlatformAdditionalContentModel::*)()>(&PS4PlatformAdditionalContentModel::InvalidateDataInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4PlatformAdditionalContentModel*), "InvalidateDataInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4PlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync
// Il2CppName: GetLevelEntitlementStatusInternalAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* (PS4PlatformAdditionalContentModel::*)(::Il2CppString*, System::Threading::CancellationToken)>(&PS4PlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4PlatformAdditionalContentModel*), "GetLevelEntitlementStatusInternalAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: PS4PlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync
// Il2CppName: GetPackEntitlementStatusInternalAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* (PS4PlatformAdditionalContentModel::*)(::Il2CppString*, System::Threading::CancellationToken)>(&PS4PlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4PlatformAdditionalContentModel*), "GetPackEntitlementStatusInternalAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: PS4PlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync
// Il2CppName: IsPackBetterBuyThanLevelAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>* (PS4PlatformAdditionalContentModel::*)(::Il2CppString*, System::Threading::CancellationToken)>(&PS4PlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4PlatformAdditionalContentModel*), "IsPackBetterBuyThanLevelAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: PS4PlatformAdditionalContentModel::OpenLevelProductStoreAsync
// Il2CppName: OpenLevelProductStoreAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* (PS4PlatformAdditionalContentModel::*)(::Il2CppString*, System::Threading::CancellationToken)>(&PS4PlatformAdditionalContentModel::OpenLevelProductStoreAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4PlatformAdditionalContentModel*), "OpenLevelProductStoreAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: PS4PlatformAdditionalContentModel::OpenLevelPackProductStoreAsync
// Il2CppName: OpenLevelPackProductStoreAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* (PS4PlatformAdditionalContentModel::*)(::Il2CppString*, System::Threading::CancellationToken)>(&PS4PlatformAdditionalContentModel::OpenLevelPackProductStoreAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4PlatformAdditionalContentModel*), "OpenLevelPackProductStoreAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: PS4PlatformAdditionalContentModel::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4PlatformAdditionalContentModel::*)()>(&PS4PlatformAdditionalContentModel::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4PlatformAdditionalContentModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4PlatformAdditionalContentModel::*)()>(&PS4PlatformAdditionalContentModel::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4PlatformAdditionalContentModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PS4PublisherSKUSettingsSO
#include "GlobalNamespace/PS4PublisherSKUSettingsSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PS4PublisherSKUSettingsSO.get_skuName
::Il2CppString* GlobalNamespace::PS4PublisherSKUSettingsSO::get_skuName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4PublisherSKUSettingsSO::get_skuName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_skuName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PS4PublisherSKUSettingsSO.get_contentId
::Il2CppString* GlobalNamespace::PS4PublisherSKUSettingsSO::get_contentId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4PublisherSKUSettingsSO::get_contentId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contentId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PS4PublisherSKUSettingsSO.get_parentalLockLevel
int GlobalNamespace::PS4PublisherSKUSettingsSO::get_parentalLockLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4PublisherSKUSettingsSO::get_parentalLockLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parentalLockLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PS4PublisherSKUSettingsSO.get_npTitleFilenamePath
::Il2CppString* GlobalNamespace::PS4PublisherSKUSettingsSO::get_npTitleFilenamePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4PublisherSKUSettingsSO::get_npTitleFilenamePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_npTitleFilenamePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PS4PublisherSKUSettingsSO.get_defaultAgeRestriction
int GlobalNamespace::PS4PublisherSKUSettingsSO::get_defaultAgeRestriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PS4PublisherSKUSettingsSO::get_defaultAgeRestriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultAgeRestriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PS4PublisherSKUSettingsSO::get_skuName
// Il2CppName: get_skuName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PS4PublisherSKUSettingsSO::*)()>(&PS4PublisherSKUSettingsSO::get_skuName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4PublisherSKUSettingsSO*), "get_skuName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4PublisherSKUSettingsSO::get_contentId
// Il2CppName: get_contentId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PS4PublisherSKUSettingsSO::*)()>(&PS4PublisherSKUSettingsSO::get_contentId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4PublisherSKUSettingsSO*), "get_contentId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4PublisherSKUSettingsSO::get_parentalLockLevel
// Il2CppName: get_parentalLockLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PS4PublisherSKUSettingsSO::*)()>(&PS4PublisherSKUSettingsSO::get_parentalLockLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4PublisherSKUSettingsSO*), "get_parentalLockLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4PublisherSKUSettingsSO::get_npTitleFilenamePath
// Il2CppName: get_npTitleFilenamePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PS4PublisherSKUSettingsSO::*)()>(&PS4PublisherSKUSettingsSO::get_npTitleFilenamePath)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4PublisherSKUSettingsSO*), "get_npTitleFilenamePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4PublisherSKUSettingsSO::get_defaultAgeRestriction
// Il2CppName: get_defaultAgeRestriction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PS4PublisherSKUSettingsSO::*)()>(&PS4PublisherSKUSettingsSO::get_defaultAgeRestriction)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4PublisherSKUSettingsSO*), "get_defaultAgeRestriction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PS4PublisherSKUSettingsSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4PublisherSKUSettingsSO::*)()>(&PS4PublisherSKUSettingsSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4PublisherSKUSettingsSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PS4PublisherSKUSettingsSO::*)()>(&PS4PublisherSKUSettingsSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PS4PublisherSKUSettingsSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ColorSchemesSettings
#include "GlobalNamespace/ColorSchemesSettings.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorSchemesSettings.set_selectedColorSchemeId
void GlobalNamespace::ColorSchemesSettings::set_selectedColorSchemeId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemesSettings::set_selectedColorSchemeId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectedColorSchemeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorSchemesSettings.get_selectedColorSchemeId
::Il2CppString* GlobalNamespace::ColorSchemesSettings::get_selectedColorSchemeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemesSettings::get_selectedColorSchemeId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedColorSchemeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemesSettings.ConvertColorSchemeSOs
::Array<GlobalNamespace::ColorScheme*>* GlobalNamespace::ColorSchemesSettings::ConvertColorSchemeSOs(::Array<GlobalNamespace::ColorSchemeSO*>* colorSchemeSOs) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemesSettings::ConvertColorSchemeSOs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ColorSchemesSettings", "ConvertColorSchemeSOs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorSchemeSOs)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::ColorScheme*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, colorSchemeSOs);
}
// Autogenerated method: ColorSchemesSettings.GetNumberOfColorSchemes
int GlobalNamespace::ColorSchemesSettings::GetNumberOfColorSchemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemesSettings::GetNumberOfColorSchemes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNumberOfColorSchemes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemesSettings.GetColorSchemeForIdx
GlobalNamespace::ColorScheme* GlobalNamespace::ColorSchemesSettings::GetColorSchemeForIdx(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemesSettings::GetColorSchemeForIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColorSchemeForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorScheme*, false>(this, ___internal__method, idx);
}
// Autogenerated method: ColorSchemesSettings.GetColorSchemeForId
GlobalNamespace::ColorScheme* GlobalNamespace::ColorSchemesSettings::GetColorSchemeForId(::Il2CppString* id) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemesSettings::GetColorSchemeForId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColorSchemeForId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorScheme*, false>(this, ___internal__method, id);
}
// Autogenerated method: ColorSchemesSettings.SetColorSchemeForId
void GlobalNamespace::ColorSchemesSettings::SetColorSchemeForId(GlobalNamespace::ColorScheme* colorScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemesSettings::SetColorSchemeForId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorSchemeForId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorScheme)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colorScheme);
}
// Autogenerated method: ColorSchemesSettings.GetSelectedColorScheme
GlobalNamespace::ColorScheme* GlobalNamespace::ColorSchemesSettings::GetSelectedColorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemesSettings::GetSelectedColorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedColorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorScheme*, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemesSettings.GetSelectedColorSchemeIdx
int GlobalNamespace::ColorSchemesSettings::GetSelectedColorSchemeIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemesSettings::GetSelectedColorSchemeIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedColorSchemeIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemesSettings.GetOverrideColorScheme
GlobalNamespace::ColorScheme* GlobalNamespace::ColorSchemesSettings::GetOverrideColorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemesSettings::GetOverrideColorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverrideColorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorScheme*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ColorSchemesSettings::set_selectedColorSchemeId
// Il2CppName: set_selectedColorSchemeId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorSchemesSettings::*)(::Il2CppString*)>(&ColorSchemesSettings::set_selectedColorSchemeId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorSchemesSettings*), "set_selectedColorSchemeId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ColorSchemesSettings::get_selectedColorSchemeId
// Il2CppName: get_selectedColorSchemeId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (ColorSchemesSettings::*)()>(&ColorSchemesSettings::get_selectedColorSchemeId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorSchemesSettings*), "get_selectedColorSchemeId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorSchemesSettings::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorSchemesSettings::*)(::Array<GlobalNamespace::ColorScheme*>*)>(&ColorSchemesSettings::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorSchemesSettings*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::ColorScheme*>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorSchemesSettings::*)(::Array<GlobalNamespace::ColorScheme*>*)>(&ColorSchemesSettings::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorSchemesSettings*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::ColorScheme*>*>()});
  }
};
// Writing MetadataGetter for method: ColorSchemesSettings::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorSchemesSettings::*)(::Array<GlobalNamespace::ColorSchemeSO*>*)>(&ColorSchemesSettings::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorSchemesSettings*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::ColorSchemeSO*>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorSchemesSettings::*)(::Array<GlobalNamespace::ColorSchemeSO*>*)>(&ColorSchemesSettings::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorSchemesSettings*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::ColorSchemeSO*>*>()});
  }
};
// Writing MetadataGetter for method: ColorSchemesSettings::ConvertColorSchemeSOs
// Il2CppName: ConvertColorSchemeSOs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<GlobalNamespace::ColorScheme*>* (*)(::Array<GlobalNamespace::ColorSchemeSO*>*)>(&ColorSchemesSettings::ConvertColorSchemeSOs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorSchemesSettings*), "ConvertColorSchemeSOs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::ColorSchemeSO*>*>()});
  }
};
// Writing MetadataGetter for method: ColorSchemesSettings::GetNumberOfColorSchemes
// Il2CppName: GetNumberOfColorSchemes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ColorSchemesSettings::*)()>(&ColorSchemesSettings::GetNumberOfColorSchemes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorSchemesSettings*), "GetNumberOfColorSchemes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorSchemesSettings::GetColorSchemeForIdx
// Il2CppName: GetColorSchemeForIdx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::ColorScheme* (ColorSchemesSettings::*)(int)>(&ColorSchemesSettings::GetColorSchemeForIdx)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorSchemesSettings*), "GetColorSchemeForIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ColorSchemesSettings::GetColorSchemeForId
// Il2CppName: GetColorSchemeForId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::ColorScheme* (ColorSchemesSettings::*)(::Il2CppString*)>(&ColorSchemesSettings::GetColorSchemeForId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorSchemesSettings*), "GetColorSchemeForId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ColorSchemesSettings::SetColorSchemeForId
// Il2CppName: SetColorSchemeForId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorSchemesSettings::*)(GlobalNamespace::ColorScheme*)>(&ColorSchemesSettings::SetColorSchemeForId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorSchemesSettings*), "SetColorSchemeForId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorScheme*>()});
  }
};
// Writing MetadataGetter for method: ColorSchemesSettings::GetSelectedColorScheme
// Il2CppName: GetSelectedColorScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::ColorScheme* (ColorSchemesSettings::*)()>(&ColorSchemesSettings::GetSelectedColorScheme)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorSchemesSettings*), "GetSelectedColorScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorSchemesSettings::GetSelectedColorSchemeIdx
// Il2CppName: GetSelectedColorSchemeIdx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ColorSchemesSettings::*)()>(&ColorSchemesSettings::GetSelectedColorSchemeIdx)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorSchemesSettings*), "GetSelectedColorSchemeIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorSchemesSettings::GetOverrideColorScheme
// Il2CppName: GetOverrideColorScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::ColorScheme* (ColorSchemesSettings::*)()>(&ColorSchemesSettings::GetOverrideColorScheme)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorSchemesSettings*), "GetOverrideColorScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayerSaveDataV1_0_1
#include "GlobalNamespace/PlayerSaveDataV1_0_1.hpp"
// Including type: PlayerSaveDataV1_0_1/GameplayModifiers
#include "GlobalNamespace/PlayerSaveDataV1_0_1_GameplayModifiers.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerSpecificSettings
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerSpecificSettings.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerAllOverallStatsData.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerOverallStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerOverallStatsData.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerLevelStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerLevelStatsData.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerMissionStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerMissionStatsData.hpp"
// Including type: PlayerSaveDataV1_0_1/AchievementsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_AchievementsData.hpp"
// Including type: PlayerSaveDataV1_0_1/LocalPlayer
#include "GlobalNamespace/PlayerSaveDataV1_0_1_LocalPlayer.hpp"
// Including type: PlayerSaveDataV1_0_1/GuestPlayer
#include "GlobalNamespace/PlayerSaveDataV1_0_1_GuestPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private BeatmapDifficulty kDefaulLastSelectedBeatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::PlayerSaveDataV1_0_1::_get_kDefaulLastSelectedBeatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveDataV1_0_1::_get_kDefaulLastSelectedBeatmapDifficulty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapDifficulty>("", "PlayerSaveDataV1_0_1", "kDefaulLastSelectedBeatmapDifficulty"));
}
// Autogenerated static field setter
// Set static field: static private BeatmapDifficulty kDefaulLastSelectedBeatmapDifficulty
void GlobalNamespace::PlayerSaveDataV1_0_1::_set_kDefaulLastSelectedBeatmapDifficulty(GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveDataV1_0_1::_set_kDefaulLastSelectedBeatmapDifficulty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveDataV1_0_1", "kDefaulLastSelectedBeatmapDifficulty", value));
}
// Autogenerated static field getter
// Get static field: static public System.String kCurrentVersion
::Il2CppString* GlobalNamespace::PlayerSaveDataV1_0_1::_get_kCurrentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveDataV1_0_1::_get_kCurrentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "PlayerSaveDataV1_0_1", "kCurrentVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.String kCurrentVersion
void GlobalNamespace::PlayerSaveDataV1_0_1::_set_kCurrentVersion(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveDataV1_0_1::_set_kCurrentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveDataV1_0_1", "kCurrentVersion", value));
}
// Writing MetadataGetter for method: PlayerSaveDataV1_0_1::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::*)()>(&PlayerSaveDataV1_0_1::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::*)()>(&PlayerSaveDataV1_0_1::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveDataV1_0_1/GameplayModifiers
#include "GlobalNamespace/PlayerSaveDataV1_0_1_GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PlayerSaveDataV1_0_1::GameplayModifiers::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::GameplayModifiers::*)()>(&PlayerSaveDataV1_0_1::GameplayModifiers::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::GameplayModifiers*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::GameplayModifiers::*)()>(&PlayerSaveDataV1_0_1::GameplayModifiers::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::GameplayModifiers*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType
#include "GlobalNamespace/PlayerSaveDataV1_0_1_GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType All
GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType>("", "PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType", "All"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType All
void GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_set_All(GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType", "All", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType FullHeightOnly
GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_get_FullHeightOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_get_FullHeightOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType>("", "PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType", "FullHeightOnly"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType FullHeightOnly
void GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_set_FullHeightOnly(GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_set_FullHeightOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType", "FullHeightOnly", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType None
GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType>("", "PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType", "None"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType None
void GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_set_None(GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType", "None", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveDataV1_0_1/GameplayModifiers/EnergyType
#include "GlobalNamespace/PlayerSaveDataV1_0_1_GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/EnergyType Bar
GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType::_get_Bar() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType::_get_Bar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType>("", "PlayerSaveDataV1_0_1/GameplayModifiers/EnergyType", "Bar"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/EnergyType Bar
void GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType::_set_Bar(GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType::_set_Bar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveDataV1_0_1/GameplayModifiers/EnergyType", "Bar", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/EnergyType Battery
GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType::_get_Battery() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType::_get_Battery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType>("", "PlayerSaveDataV1_0_1/GameplayModifiers/EnergyType", "Battery"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/EnergyType Battery
void GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType::_set_Battery(GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType::_set_Battery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveDataV1_0_1/GameplayModifiers/EnergyType", "Battery", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed
#include "GlobalNamespace/PlayerSaveDataV1_0_1_GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed Normal
GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed>("", "PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed Normal
void GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_set_Normal(GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed Faster
GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_get_Faster() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_get_Faster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed>("", "PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed", "Faster"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed Faster
void GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_set_Faster(GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_set_Faster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed", "Faster", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed Slower
GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_get_Slower() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_get_Slower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed>("", "PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed", "Slower"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed Slower
void GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_set_Slower(GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_set_Slower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed", "Slower", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveDataV1_0_1/PlayerSpecificSettings
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerSpecificSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PlayerSaveDataV1_0_1::PlayerSpecificSettings::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::PlayerSpecificSettings::*)()>(&PlayerSaveDataV1_0_1::PlayerSpecificSettings::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::PlayerSpecificSettings*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::PlayerSpecificSettings::*)()>(&PlayerSaveDataV1_0_1::PlayerSpecificSettings::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::PlayerSpecificSettings*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveDataV1_0_1/PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerAllOverallStatsData.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerOverallStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerOverallStatsData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PlayerSaveDataV1_0_1::PlayerAllOverallStatsData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::PlayerAllOverallStatsData::*)(GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData*, GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData*, GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData*)>(&PlayerSaveDataV1_0_1::PlayerAllOverallStatsData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::PlayerAllOverallStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::PlayerAllOverallStatsData::*)(GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData*, GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData*, GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData*)>(&PlayerSaveDataV1_0_1::PlayerAllOverallStatsData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::PlayerAllOverallStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData*>()});
  }
};
// Writing MetadataGetter for method: PlayerSaveDataV1_0_1::PlayerAllOverallStatsData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::PlayerAllOverallStatsData::*)()>(&PlayerSaveDataV1_0_1::PlayerAllOverallStatsData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::PlayerAllOverallStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::PlayerAllOverallStatsData::*)()>(&PlayerSaveDataV1_0_1::PlayerAllOverallStatsData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::PlayerAllOverallStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveDataV1_0_1/PlayerOverallStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerOverallStatsData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PlayerSaveDataV1_0_1::PlayerOverallStatsData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::PlayerOverallStatsData::*)(int, int, int, int64_t, int, int, int, int, float, int, int64_t)>(&PlayerSaveDataV1_0_1::PlayerOverallStatsData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::PlayerOverallStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::PlayerOverallStatsData::*)(int, int, int, int64_t, int, int, int, int, float, int, int64_t)>(&PlayerSaveDataV1_0_1::PlayerOverallStatsData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::PlayerOverallStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: PlayerSaveDataV1_0_1::PlayerOverallStatsData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::PlayerOverallStatsData::*)()>(&PlayerSaveDataV1_0_1::PlayerOverallStatsData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::PlayerOverallStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::PlayerOverallStatsData::*)()>(&PlayerSaveDataV1_0_1::PlayerOverallStatsData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::PlayerOverallStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayerSaveDataV1_0_1/PlayerLevelStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerLevelStatsData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PlayerSaveDataV1_0_1::PlayerLevelStatsData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::PlayerLevelStatsData::*)()>(&PlayerSaveDataV1_0_1::PlayerLevelStatsData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::PlayerLevelStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::PlayerLevelStatsData::*)()>(&PlayerSaveDataV1_0_1::PlayerLevelStatsData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::PlayerLevelStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayerSaveDataV1_0_1/PlayerMissionStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerMissionStatsData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PlayerSaveDataV1_0_1::PlayerMissionStatsData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::PlayerMissionStatsData::*)()>(&PlayerSaveDataV1_0_1::PlayerMissionStatsData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::PlayerMissionStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::PlayerMissionStatsData::*)()>(&PlayerSaveDataV1_0_1::PlayerMissionStatsData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::PlayerMissionStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayerSaveDataV1_0_1/AchievementsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_AchievementsData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PlayerSaveDataV1_0_1::AchievementsData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::AchievementsData::*)()>(&PlayerSaveDataV1_0_1::AchievementsData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::AchievementsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::AchievementsData::*)()>(&PlayerSaveDataV1_0_1::AchievementsData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::AchievementsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayerSaveDataV1_0_1/LocalPlayer
#include "GlobalNamespace/PlayerSaveDataV1_0_1_LocalPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayerSaveDataV1_0_1/GameplayModifiers
#include "GlobalNamespace/PlayerSaveDataV1_0_1_GameplayModifiers.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerSpecificSettings
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerSpecificSettings.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerAllOverallStatsData.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerLevelStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerLevelStatsData.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerMissionStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerMissionStatsData.hpp"
// Including type: PlayerSaveDataV1_0_1/AchievementsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_AchievementsData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PlayerSaveDataV1_0_1::LocalPlayer::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::LocalPlayer::*)()>(&PlayerSaveDataV1_0_1::LocalPlayer::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::LocalPlayer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::LocalPlayer::*)()>(&PlayerSaveDataV1_0_1::LocalPlayer::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::LocalPlayer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayerSaveDataV1_0_1/GuestPlayer
#include "GlobalNamespace/PlayerSaveDataV1_0_1_GuestPlayer.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerSpecificSettings
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerSpecificSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PlayerSaveDataV1_0_1::GuestPlayer::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::GuestPlayer::*)()>(&PlayerSaveDataV1_0_1::GuestPlayer::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::GuestPlayer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveDataV1_0_1::GuestPlayer::*)()>(&PlayerSaveDataV1_0_1::GuestPlayer::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveDataV1_0_1::GuestPlayer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentEffectsFilterPreset
#include "GlobalNamespace/EnvironmentEffectsFilterPreset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EnvironmentEffectsFilterPreset AllEffects
GlobalNamespace::EnvironmentEffectsFilterPreset GlobalNamespace::EnvironmentEffectsFilterPreset::_get_AllEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPreset::_get_AllEffects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EnvironmentEffectsFilterPreset>("", "EnvironmentEffectsFilterPreset", "AllEffects"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentEffectsFilterPreset AllEffects
void GlobalNamespace::EnvironmentEffectsFilterPreset::_set_AllEffects(GlobalNamespace::EnvironmentEffectsFilterPreset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPreset::_set_AllEffects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentEffectsFilterPreset", "AllEffects", value));
}
// Autogenerated static field getter
// Get static field: static public EnvironmentEffectsFilterPreset StrobeFilter
GlobalNamespace::EnvironmentEffectsFilterPreset GlobalNamespace::EnvironmentEffectsFilterPreset::_get_StrobeFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPreset::_get_StrobeFilter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EnvironmentEffectsFilterPreset>("", "EnvironmentEffectsFilterPreset", "StrobeFilter"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentEffectsFilterPreset StrobeFilter
void GlobalNamespace::EnvironmentEffectsFilterPreset::_set_StrobeFilter(GlobalNamespace::EnvironmentEffectsFilterPreset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPreset::_set_StrobeFilter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentEffectsFilterPreset", "StrobeFilter", value));
}
// Autogenerated static field getter
// Get static field: static public EnvironmentEffectsFilterPreset NoEffects
GlobalNamespace::EnvironmentEffectsFilterPreset GlobalNamespace::EnvironmentEffectsFilterPreset::_get_NoEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPreset::_get_NoEffects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::EnvironmentEffectsFilterPreset>("", "EnvironmentEffectsFilterPreset", "NoEffects"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentEffectsFilterPreset NoEffects
void GlobalNamespace::EnvironmentEffectsFilterPreset::_set_NoEffects(GlobalNamespace::EnvironmentEffectsFilterPreset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentEffectsFilterPreset::_set_NoEffects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentEffectsFilterPreset", "NoEffects", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OverrideEnvironmentSettings
#include "GlobalNamespace/OverrideEnvironmentSettings.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: EnvironmentTypeSO
#include "GlobalNamespace/EnvironmentTypeSO.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OverrideEnvironmentSettings.SetEnvironmentInfoForType
void GlobalNamespace::OverrideEnvironmentSettings::SetEnvironmentInfoForType(GlobalNamespace::EnvironmentTypeSO* environmentType, GlobalNamespace::EnvironmentInfoSO* environmentInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverrideEnvironmentSettings::SetEnvironmentInfoForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnvironmentInfoForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentType), ::il2cpp_utils::ExtractType(environmentInfo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, environmentType, environmentInfo);
}
// Autogenerated method: OverrideEnvironmentSettings.GetOverrideEnvironmentInfoForType
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::OverrideEnvironmentSettings::GetOverrideEnvironmentInfoForType(GlobalNamespace::EnvironmentTypeSO* environmentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverrideEnvironmentSettings::GetOverrideEnvironmentInfoForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverrideEnvironmentInfoForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentType)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method, environmentType);
}
// Writing MetadataGetter for method: OverrideEnvironmentSettings::SetEnvironmentInfoForType
// Il2CppName: SetEnvironmentInfoForType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OverrideEnvironmentSettings::*)(GlobalNamespace::EnvironmentTypeSO*, GlobalNamespace::EnvironmentInfoSO*)>(&OverrideEnvironmentSettings::SetEnvironmentInfoForType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OverrideEnvironmentSettings*), "SetEnvironmentInfoForType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EnvironmentTypeSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EnvironmentInfoSO*>()});
  }
};
// Writing MetadataGetter for method: OverrideEnvironmentSettings::GetOverrideEnvironmentInfoForType
// Il2CppName: GetOverrideEnvironmentInfoForType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::EnvironmentInfoSO* (OverrideEnvironmentSettings::*)(GlobalNamespace::EnvironmentTypeSO*)>(&OverrideEnvironmentSettings::GetOverrideEnvironmentInfoForType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OverrideEnvironmentSettings*), "GetOverrideEnvironmentInfoForType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EnvironmentTypeSO*>()});
  }
};
// Writing MetadataGetter for method: OverrideEnvironmentSettings::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OverrideEnvironmentSettings::*)()>(&OverrideEnvironmentSettings::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OverrideEnvironmentSettings*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OverrideEnvironmentSettings::*)()>(&OverrideEnvironmentSettings::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OverrideEnvironmentSettings*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerAllOverallStatsData.hpp"
// Including type: PlayerAllOverallStatsData/PlayerOverallStatsData
#include "GlobalNamespace/PlayerAllOverallStatsData_PlayerOverallStatsData.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayerAllOverallStatsData.get_allOverallStatsData
GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerAllOverallStatsData::get_allOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::get_allOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData.get_campaignOverallStatsData
GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerAllOverallStatsData::get_campaignOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::get_campaignOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_campaignOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData.set_campaignOverallStatsData
void GlobalNamespace::PlayerAllOverallStatsData::set_campaignOverallStatsData(GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::set_campaignOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_campaignOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData.get_soloFreePlayOverallStatsData
GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerAllOverallStatsData::get_soloFreePlayOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::get_soloFreePlayOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_soloFreePlayOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData.set_soloFreePlayOverallStatsData
void GlobalNamespace::PlayerAllOverallStatsData::set_soloFreePlayOverallStatsData(GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::set_soloFreePlayOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_soloFreePlayOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData.get_partyFreePlayOverallStatsData
GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerAllOverallStatsData::get_partyFreePlayOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::get_partyFreePlayOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyFreePlayOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData.set_partyFreePlayOverallStatsData
void GlobalNamespace::PlayerAllOverallStatsData::set_partyFreePlayOverallStatsData(GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::set_partyFreePlayOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_partyFreePlayOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData.get_onlinePlayOverallStatsData
GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerAllOverallStatsData::get_onlinePlayOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::get_onlinePlayOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onlinePlayOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData.set_onlinePlayOverallStatsData
void GlobalNamespace::PlayerAllOverallStatsData::set_onlinePlayOverallStatsData(GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::set_onlinePlayOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onlinePlayOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData.add_didUpdateSoloFreePlayOverallStatsDataEvent
void GlobalNamespace::PlayerAllOverallStatsData::add_didUpdateSoloFreePlayOverallStatsDataEvent(System::Action_2<GlobalNamespace::LevelCompletionResults*, GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::add_didUpdateSoloFreePlayOverallStatsDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didUpdateSoloFreePlayOverallStatsDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData.remove_didUpdateSoloFreePlayOverallStatsDataEvent
void GlobalNamespace::PlayerAllOverallStatsData::remove_didUpdateSoloFreePlayOverallStatsDataEvent(System::Action_2<GlobalNamespace::LevelCompletionResults*, GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::remove_didUpdateSoloFreePlayOverallStatsDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didUpdateSoloFreePlayOverallStatsDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData.add_didUpdatePartyFreePlayOverallStatsDataEvent
void GlobalNamespace::PlayerAllOverallStatsData::add_didUpdatePartyFreePlayOverallStatsDataEvent(System::Action_2<GlobalNamespace::LevelCompletionResults*, GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::add_didUpdatePartyFreePlayOverallStatsDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didUpdatePartyFreePlayOverallStatsDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData.remove_didUpdatePartyFreePlayOverallStatsDataEvent
void GlobalNamespace::PlayerAllOverallStatsData::remove_didUpdatePartyFreePlayOverallStatsDataEvent(System::Action_2<GlobalNamespace::LevelCompletionResults*, GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::remove_didUpdatePartyFreePlayOverallStatsDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didUpdatePartyFreePlayOverallStatsDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData.add_didUpdateCampaignOverallStatsDataEvent
void GlobalNamespace::PlayerAllOverallStatsData::add_didUpdateCampaignOverallStatsDataEvent(System::Action_2<GlobalNamespace::MissionCompletionResults*, GlobalNamespace::MissionNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::add_didUpdateCampaignOverallStatsDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didUpdateCampaignOverallStatsDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData.remove_didUpdateCampaignOverallStatsDataEvent
void GlobalNamespace::PlayerAllOverallStatsData::remove_didUpdateCampaignOverallStatsDataEvent(System::Action_2<GlobalNamespace::MissionCompletionResults*, GlobalNamespace::MissionNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::remove_didUpdateCampaignOverallStatsDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didUpdateCampaignOverallStatsDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData.UpdateSoloFreePlayOverallStatsData
void GlobalNamespace::PlayerAllOverallStatsData::UpdateSoloFreePlayOverallStatsData(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::UpdateSoloFreePlayOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSoloFreePlayOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelCompletionResults, difficultyBeatmap);
}
// Autogenerated method: PlayerAllOverallStatsData.UpdatePartyFreePlayOverallStatsData
void GlobalNamespace::PlayerAllOverallStatsData::UpdatePartyFreePlayOverallStatsData(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::UpdatePartyFreePlayOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePartyFreePlayOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelCompletionResults, difficultyBeatmap);
}
// Autogenerated method: PlayerAllOverallStatsData.UpdateCampaignOverallStatsData
void GlobalNamespace::PlayerAllOverallStatsData::UpdateCampaignOverallStatsData(GlobalNamespace::MissionCompletionResults* missionCompletionResults, GlobalNamespace::MissionNode* missionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::UpdateCampaignOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCampaignOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionCompletionResults), ::il2cpp_utils::ExtractType(missionNode)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionCompletionResults, missionNode);
}
// Autogenerated method: PlayerAllOverallStatsData.UpdateOnlinePlayOverallStatsData
void GlobalNamespace::PlayerAllOverallStatsData::UpdateOnlinePlayOverallStatsData(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::UpdateOnlinePlayOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateOnlinePlayOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelCompletionResults, difficultyBeatmap);
}
// Writing MetadataGetter for method: PlayerAllOverallStatsData::get_allOverallStatsData
// Il2CppName: get_allOverallStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* (PlayerAllOverallStatsData::*)()>(&PlayerAllOverallStatsData::get_allOverallStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), "get_allOverallStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::get_campaignOverallStatsData
// Il2CppName: get_campaignOverallStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* (PlayerAllOverallStatsData::*)()>(&PlayerAllOverallStatsData::get_campaignOverallStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), "get_campaignOverallStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::set_campaignOverallStatsData
// Il2CppName: set_campaignOverallStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::*)(GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*)>(&PlayerAllOverallStatsData::set_campaignOverallStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), "set_campaignOverallStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::get_soloFreePlayOverallStatsData
// Il2CppName: get_soloFreePlayOverallStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* (PlayerAllOverallStatsData::*)()>(&PlayerAllOverallStatsData::get_soloFreePlayOverallStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), "get_soloFreePlayOverallStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::set_soloFreePlayOverallStatsData
// Il2CppName: set_soloFreePlayOverallStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::*)(GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*)>(&PlayerAllOverallStatsData::set_soloFreePlayOverallStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), "set_soloFreePlayOverallStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::get_partyFreePlayOverallStatsData
// Il2CppName: get_partyFreePlayOverallStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* (PlayerAllOverallStatsData::*)()>(&PlayerAllOverallStatsData::get_partyFreePlayOverallStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), "get_partyFreePlayOverallStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::set_partyFreePlayOverallStatsData
// Il2CppName: set_partyFreePlayOverallStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::*)(GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*)>(&PlayerAllOverallStatsData::set_partyFreePlayOverallStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), "set_partyFreePlayOverallStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::get_onlinePlayOverallStatsData
// Il2CppName: get_onlinePlayOverallStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* (PlayerAllOverallStatsData::*)()>(&PlayerAllOverallStatsData::get_onlinePlayOverallStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), "get_onlinePlayOverallStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::set_onlinePlayOverallStatsData
// Il2CppName: set_onlinePlayOverallStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::*)(GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*)>(&PlayerAllOverallStatsData::set_onlinePlayOverallStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), "set_onlinePlayOverallStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::add_didUpdateSoloFreePlayOverallStatsDataEvent
// Il2CppName: add_didUpdateSoloFreePlayOverallStatsDataEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::*)(System::Action_2<GlobalNamespace::LevelCompletionResults*, GlobalNamespace::IDifficultyBeatmap*>*)>(&PlayerAllOverallStatsData::add_didUpdateSoloFreePlayOverallStatsDataEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), "add_didUpdateSoloFreePlayOverallStatsDataEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelCompletionResults*, GlobalNamespace::IDifficultyBeatmap*>*>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::remove_didUpdateSoloFreePlayOverallStatsDataEvent
// Il2CppName: remove_didUpdateSoloFreePlayOverallStatsDataEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::*)(System::Action_2<GlobalNamespace::LevelCompletionResults*, GlobalNamespace::IDifficultyBeatmap*>*)>(&PlayerAllOverallStatsData::remove_didUpdateSoloFreePlayOverallStatsDataEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), "remove_didUpdateSoloFreePlayOverallStatsDataEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelCompletionResults*, GlobalNamespace::IDifficultyBeatmap*>*>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::add_didUpdatePartyFreePlayOverallStatsDataEvent
// Il2CppName: add_didUpdatePartyFreePlayOverallStatsDataEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::*)(System::Action_2<GlobalNamespace::LevelCompletionResults*, GlobalNamespace::IDifficultyBeatmap*>*)>(&PlayerAllOverallStatsData::add_didUpdatePartyFreePlayOverallStatsDataEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), "add_didUpdatePartyFreePlayOverallStatsDataEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelCompletionResults*, GlobalNamespace::IDifficultyBeatmap*>*>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::remove_didUpdatePartyFreePlayOverallStatsDataEvent
// Il2CppName: remove_didUpdatePartyFreePlayOverallStatsDataEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::*)(System::Action_2<GlobalNamespace::LevelCompletionResults*, GlobalNamespace::IDifficultyBeatmap*>*)>(&PlayerAllOverallStatsData::remove_didUpdatePartyFreePlayOverallStatsDataEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), "remove_didUpdatePartyFreePlayOverallStatsDataEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelCompletionResults*, GlobalNamespace::IDifficultyBeatmap*>*>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::add_didUpdateCampaignOverallStatsDataEvent
// Il2CppName: add_didUpdateCampaignOverallStatsDataEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::*)(System::Action_2<GlobalNamespace::MissionCompletionResults*, GlobalNamespace::MissionNode*>*)>(&PlayerAllOverallStatsData::add_didUpdateCampaignOverallStatsDataEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), "add_didUpdateCampaignOverallStatsDataEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::MissionCompletionResults*, GlobalNamespace::MissionNode*>*>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::remove_didUpdateCampaignOverallStatsDataEvent
// Il2CppName: remove_didUpdateCampaignOverallStatsDataEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::*)(System::Action_2<GlobalNamespace::MissionCompletionResults*, GlobalNamespace::MissionNode*>*)>(&PlayerAllOverallStatsData::remove_didUpdateCampaignOverallStatsDataEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), "remove_didUpdateCampaignOverallStatsDataEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::MissionCompletionResults*, GlobalNamespace::MissionNode*>*>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::*)(GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*)>(&PlayerAllOverallStatsData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::*)(GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*)>(&PlayerAllOverallStatsData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::UpdateSoloFreePlayOverallStatsData
// Il2CppName: UpdateSoloFreePlayOverallStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::*)(GlobalNamespace::LevelCompletionResults*, GlobalNamespace::IDifficultyBeatmap*)>(&PlayerAllOverallStatsData::UpdateSoloFreePlayOverallStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), "UpdateSoloFreePlayOverallStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelCompletionResults*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::UpdatePartyFreePlayOverallStatsData
// Il2CppName: UpdatePartyFreePlayOverallStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::*)(GlobalNamespace::LevelCompletionResults*, GlobalNamespace::IDifficultyBeatmap*)>(&PlayerAllOverallStatsData::UpdatePartyFreePlayOverallStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), "UpdatePartyFreePlayOverallStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelCompletionResults*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::UpdateCampaignOverallStatsData
// Il2CppName: UpdateCampaignOverallStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::*)(GlobalNamespace::MissionCompletionResults*, GlobalNamespace::MissionNode*)>(&PlayerAllOverallStatsData::UpdateCampaignOverallStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), "UpdateCampaignOverallStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MissionCompletionResults*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MissionNode*>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::UpdateOnlinePlayOverallStatsData
// Il2CppName: UpdateOnlinePlayOverallStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::*)(GlobalNamespace::LevelCompletionResults*, GlobalNamespace::IDifficultyBeatmap*)>(&PlayerAllOverallStatsData::UpdateOnlinePlayOverallStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), "UpdateOnlinePlayOverallStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelCompletionResults*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::*)()>(&PlayerAllOverallStatsData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::*)()>(&PlayerAllOverallStatsData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerAllOverallStatsData/PlayerOverallStatsData
#include "GlobalNamespace/PlayerAllOverallStatsData_PlayerOverallStatsData.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_goodCutsCount
int GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_goodCutsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_goodCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_goodCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_goodCutsCount
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_goodCutsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_goodCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_goodCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_badCutsCount
int GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_badCutsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_badCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_badCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_badCutsCount
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_badCutsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_badCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_badCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_missedCutsCount
int GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_missedCutsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_missedCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missedCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_missedCutsCount
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_missedCutsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_missedCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_missedCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_totalScore
int64_t GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_totalScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_totalScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_totalScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_totalScore
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_totalScore(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_totalScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_totalScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_playedLevelsCount
int GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_playedLevelsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_playedLevelsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playedLevelsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_playedLevelsCount
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_playedLevelsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_playedLevelsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playedLevelsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_cleardLevelsCount
int GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_cleardLevelsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_cleardLevelsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cleardLevelsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_cleardLevelsCount
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_cleardLevelsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_cleardLevelsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cleardLevelsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_failedLevelsCount
int GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_failedLevelsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_failedLevelsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_failedLevelsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_failedLevelsCount
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_failedLevelsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_failedLevelsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_failedLevelsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_fullComboCount
int GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_fullComboCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_fullComboCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullComboCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_fullComboCount
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_fullComboCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_fullComboCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fullComboCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_timePlayed
float GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_timePlayed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_timePlayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timePlayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_timePlayed
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_timePlayed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_timePlayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timePlayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_handDistanceTravelled
int GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_handDistanceTravelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_handDistanceTravelled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_handDistanceTravelled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_handDistanceTravelled
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_handDistanceTravelled(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_handDistanceTravelled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_handDistanceTravelled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_cummulativeCutScoreWithoutMultiplier
int64_t GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_cummulativeCutScoreWithoutMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_cummulativeCutScoreWithoutMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cummulativeCutScoreWithoutMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_cummulativeCutScoreWithoutMultiplier
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_cummulativeCutScoreWithoutMultiplier(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_cummulativeCutScoreWithoutMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cummulativeCutScoreWithoutMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_averageCutScore
int GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_averageCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_averageCutScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_averageCutScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.UpdateWithLevelCompletionResults
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::UpdateWithLevelCompletionResults(GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::UpdateWithLevelCompletionResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateWithLevelCompletionResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelCompletionResults);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.op_Addition
GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::operator+(GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* a, GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerAllOverallStatsData/PlayerOverallStatsData", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, &b);
}
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::get_goodCutsCount
// Il2CppName: get_goodCutsCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PlayerAllOverallStatsData::PlayerOverallStatsData::*)()>(&PlayerAllOverallStatsData::PlayerOverallStatsData::get_goodCutsCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "get_goodCutsCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::set_goodCutsCount
// Il2CppName: set_goodCutsCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::PlayerOverallStatsData::*)(int)>(&PlayerAllOverallStatsData::PlayerOverallStatsData::set_goodCutsCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "set_goodCutsCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::get_badCutsCount
// Il2CppName: get_badCutsCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PlayerAllOverallStatsData::PlayerOverallStatsData::*)()>(&PlayerAllOverallStatsData::PlayerOverallStatsData::get_badCutsCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "get_badCutsCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::set_badCutsCount
// Il2CppName: set_badCutsCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::PlayerOverallStatsData::*)(int)>(&PlayerAllOverallStatsData::PlayerOverallStatsData::set_badCutsCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "set_badCutsCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::get_missedCutsCount
// Il2CppName: get_missedCutsCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PlayerAllOverallStatsData::PlayerOverallStatsData::*)()>(&PlayerAllOverallStatsData::PlayerOverallStatsData::get_missedCutsCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "get_missedCutsCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::set_missedCutsCount
// Il2CppName: set_missedCutsCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::PlayerOverallStatsData::*)(int)>(&PlayerAllOverallStatsData::PlayerOverallStatsData::set_missedCutsCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "set_missedCutsCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::get_totalScore
// Il2CppName: get_totalScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (PlayerAllOverallStatsData::PlayerOverallStatsData::*)()>(&PlayerAllOverallStatsData::PlayerOverallStatsData::get_totalScore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "get_totalScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::set_totalScore
// Il2CppName: set_totalScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::PlayerOverallStatsData::*)(int64_t)>(&PlayerAllOverallStatsData::PlayerOverallStatsData::set_totalScore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "set_totalScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::get_playedLevelsCount
// Il2CppName: get_playedLevelsCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PlayerAllOverallStatsData::PlayerOverallStatsData::*)()>(&PlayerAllOverallStatsData::PlayerOverallStatsData::get_playedLevelsCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "get_playedLevelsCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::set_playedLevelsCount
// Il2CppName: set_playedLevelsCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::PlayerOverallStatsData::*)(int)>(&PlayerAllOverallStatsData::PlayerOverallStatsData::set_playedLevelsCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "set_playedLevelsCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::get_cleardLevelsCount
// Il2CppName: get_cleardLevelsCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PlayerAllOverallStatsData::PlayerOverallStatsData::*)()>(&PlayerAllOverallStatsData::PlayerOverallStatsData::get_cleardLevelsCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "get_cleardLevelsCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::set_cleardLevelsCount
// Il2CppName: set_cleardLevelsCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::PlayerOverallStatsData::*)(int)>(&PlayerAllOverallStatsData::PlayerOverallStatsData::set_cleardLevelsCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "set_cleardLevelsCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::get_failedLevelsCount
// Il2CppName: get_failedLevelsCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PlayerAllOverallStatsData::PlayerOverallStatsData::*)()>(&PlayerAllOverallStatsData::PlayerOverallStatsData::get_failedLevelsCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "get_failedLevelsCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::set_failedLevelsCount
// Il2CppName: set_failedLevelsCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::PlayerOverallStatsData::*)(int)>(&PlayerAllOverallStatsData::PlayerOverallStatsData::set_failedLevelsCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "set_failedLevelsCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::get_fullComboCount
// Il2CppName: get_fullComboCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PlayerAllOverallStatsData::PlayerOverallStatsData::*)()>(&PlayerAllOverallStatsData::PlayerOverallStatsData::get_fullComboCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "get_fullComboCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::set_fullComboCount
// Il2CppName: set_fullComboCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::PlayerOverallStatsData::*)(int)>(&PlayerAllOverallStatsData::PlayerOverallStatsData::set_fullComboCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "set_fullComboCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::get_timePlayed
// Il2CppName: get_timePlayed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (PlayerAllOverallStatsData::PlayerOverallStatsData::*)()>(&PlayerAllOverallStatsData::PlayerOverallStatsData::get_timePlayed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "get_timePlayed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::set_timePlayed
// Il2CppName: set_timePlayed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::PlayerOverallStatsData::*)(float)>(&PlayerAllOverallStatsData::PlayerOverallStatsData::set_timePlayed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "set_timePlayed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::get_handDistanceTravelled
// Il2CppName: get_handDistanceTravelled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PlayerAllOverallStatsData::PlayerOverallStatsData::*)()>(&PlayerAllOverallStatsData::PlayerOverallStatsData::get_handDistanceTravelled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "get_handDistanceTravelled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::set_handDistanceTravelled
// Il2CppName: set_handDistanceTravelled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::PlayerOverallStatsData::*)(int)>(&PlayerAllOverallStatsData::PlayerOverallStatsData::set_handDistanceTravelled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "set_handDistanceTravelled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::get_cummulativeCutScoreWithoutMultiplier
// Il2CppName: get_cummulativeCutScoreWithoutMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (PlayerAllOverallStatsData::PlayerOverallStatsData::*)()>(&PlayerAllOverallStatsData::PlayerOverallStatsData::get_cummulativeCutScoreWithoutMultiplier)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "get_cummulativeCutScoreWithoutMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::set_cummulativeCutScoreWithoutMultiplier
// Il2CppName: set_cummulativeCutScoreWithoutMultiplier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::PlayerOverallStatsData::*)(int64_t)>(&PlayerAllOverallStatsData::PlayerOverallStatsData::set_cummulativeCutScoreWithoutMultiplier)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "set_cummulativeCutScoreWithoutMultiplier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::get_averageCutScore
// Il2CppName: get_averageCutScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PlayerAllOverallStatsData::PlayerOverallStatsData::*)()>(&PlayerAllOverallStatsData::PlayerOverallStatsData::get_averageCutScore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "get_averageCutScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::PlayerOverallStatsData::*)(int, int, int, int64_t, int, int, int, int, float, int, int64_t)>(&PlayerAllOverallStatsData::PlayerOverallStatsData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::PlayerOverallStatsData::*)(int, int, int, int64_t, int, int, int, int, float, int, int64_t)>(&PlayerAllOverallStatsData::PlayerOverallStatsData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::UpdateWithLevelCompletionResults
// Il2CppName: UpdateWithLevelCompletionResults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::PlayerOverallStatsData::*)(GlobalNamespace::LevelCompletionResults*)>(&PlayerAllOverallStatsData::PlayerOverallStatsData::UpdateWithLevelCompletionResults)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "UpdateWithLevelCompletionResults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelCompletionResults*>()});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::PlayerOverallStatsData::*)()>(&PlayerAllOverallStatsData::PlayerOverallStatsData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerAllOverallStatsData::PlayerOverallStatsData::*)()>(&PlayerAllOverallStatsData::PlayerOverallStatsData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerAllOverallStatsData::PlayerOverallStatsData::operator+
// Il2CppName: op_Addition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* (*)(GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData&)>(&PlayerAllOverallStatsData::PlayerOverallStatsData::operator+)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerAllOverallStatsData::PlayerOverallStatsData*), "op_Addition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayerData
#include "GlobalNamespace/PlayerData.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerAllOverallStatsData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayerLevelStatsData
#include "GlobalNamespace/PlayerLevelStatsData.hpp"
// Including type: PlayerMissionStatsData
#include "GlobalNamespace/PlayerMissionStatsData.hpp"
// Including type: ColorSchemesSettings
#include "GlobalNamespace/ColorSchemesSettings.hpp"
// Including type: OverrideEnvironmentSettings
#include "GlobalNamespace/OverrideEnvironmentSettings.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: MultiplayerModeSettings
#include "GlobalNamespace/MultiplayerModeSettings.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: MissionHelpSO
#include "GlobalNamespace/MissionHelpSO.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxGuestPlayers
int GlobalNamespace::PlayerData::_get_kMaxGuestPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::_get_kMaxGuestPlayers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PlayerData", "kMaxGuestPlayers"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxGuestPlayers
void GlobalNamespace::PlayerData::_set_kMaxGuestPlayers(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::_set_kMaxGuestPlayers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerData", "kMaxGuestPlayers", value));
}
// Autogenerated method: PlayerData.get_playerId
::Il2CppString* GlobalNamespace::PlayerData::get_playerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_playerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_playerId
void GlobalNamespace::PlayerData::set_playerId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_playerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_playerName
::Il2CppString* GlobalNamespace::PlayerData::get_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_playerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_playerName
void GlobalNamespace::PlayerData::set_playerName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_playerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_shouldShowTutorialPrompt
bool GlobalNamespace::PlayerData::get_shouldShowTutorialPrompt() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_shouldShowTutorialPrompt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shouldShowTutorialPrompt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_shouldShowTutorialPrompt
void GlobalNamespace::PlayerData::set_shouldShowTutorialPrompt(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_shouldShowTutorialPrompt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_shouldShowTutorialPrompt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_shouldShow360Warning
bool GlobalNamespace::PlayerData::get_shouldShow360Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_shouldShow360Warning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shouldShow360Warning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_shouldShow360Warning
void GlobalNamespace::PlayerData::set_shouldShow360Warning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_shouldShow360Warning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_shouldShow360Warning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_agreedToEula
bool GlobalNamespace::PlayerData::get_agreedToEula() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_agreedToEula");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_agreedToEula", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_agreedToEula
void GlobalNamespace::PlayerData::set_agreedToEula(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_agreedToEula");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_agreedToEula", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_didSelectLanguage
bool GlobalNamespace::PlayerData::get_didSelectLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_didSelectLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_didSelectLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_didSelectLanguage
void GlobalNamespace::PlayerData::set_didSelectLanguage(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_didSelectLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_didSelectLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_agreedToMultiplayerDisclaimer
bool GlobalNamespace::PlayerData::get_agreedToMultiplayerDisclaimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_agreedToMultiplayerDisclaimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_agreedToMultiplayerDisclaimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_agreedToMultiplayerDisclaimer
void GlobalNamespace::PlayerData::set_agreedToMultiplayerDisclaimer(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_agreedToMultiplayerDisclaimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_agreedToMultiplayerDisclaimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_avatarCreated
bool GlobalNamespace::PlayerData::get_avatarCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_avatarCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_avatarCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_avatarCreated
void GlobalNamespace::PlayerData::set_avatarCreated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_avatarCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_avatarCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_shareMultiplayerLobbyCodeInRichPresence
bool GlobalNamespace::PlayerData::get_shareMultiplayerLobbyCodeInRichPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_shareMultiplayerLobbyCodeInRichPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shareMultiplayerLobbyCodeInRichPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_shareMultiplayerLobbyCodeInRichPresence
void GlobalNamespace::PlayerData::set_shareMultiplayerLobbyCodeInRichPresence(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_shareMultiplayerLobbyCodeInRichPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_shareMultiplayerLobbyCodeInRichPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_lastSelectedBeatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::PlayerData::get_lastSelectedBeatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_lastSelectedBeatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastSelectedBeatmapDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_lastSelectedBeatmapDifficulty
void GlobalNamespace::PlayerData::set_lastSelectedBeatmapDifficulty(GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_lastSelectedBeatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lastSelectedBeatmapDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_lastSelectedBeatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::PlayerData::get_lastSelectedBeatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_lastSelectedBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastSelectedBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_lastSelectedBeatmapCharacteristic
void GlobalNamespace::PlayerData::set_lastSelectedBeatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_lastSelectedBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lastSelectedBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::PlayerData::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_gameplayModifiers
void GlobalNamespace::PlayerData::set_gameplayModifiers(GlobalNamespace::GameplayModifiers* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_playerSpecificSettings
GlobalNamespace::PlayerSpecificSettings* GlobalNamespace::PlayerData::get_playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_playerSpecificSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerSpecificSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerSpecificSettings*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_playerSpecificSettings
void GlobalNamespace::PlayerData::set_playerSpecificSettings(GlobalNamespace::PlayerSpecificSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_playerSpecificSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerSpecificSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_practiceSettings
GlobalNamespace::PracticeSettings* GlobalNamespace::PlayerData::get_practiceSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_practiceSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_practiceSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PracticeSettings*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_practiceSettings
void GlobalNamespace::PlayerData::set_practiceSettings(GlobalNamespace::PracticeSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_practiceSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_practiceSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_playerAllOverallStatsData
GlobalNamespace::PlayerAllOverallStatsData* GlobalNamespace::PlayerData::get_playerAllOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_playerAllOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerAllOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerAllOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_playerAllOverallStatsData
void GlobalNamespace::PlayerData::set_playerAllOverallStatsData(GlobalNamespace::PlayerAllOverallStatsData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_playerAllOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerAllOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_levelsStatsData
System::Collections::Generic::List_1<GlobalNamespace::PlayerLevelStatsData*>* GlobalNamespace::PlayerData::get_levelsStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_levelsStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelsStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::PlayerLevelStatsData*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_levelsStatsData
void GlobalNamespace::PlayerData::set_levelsStatsData(System::Collections::Generic::List_1<GlobalNamespace::PlayerLevelStatsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_levelsStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_levelsStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_missionsStatsData
System::Collections::Generic::List_1<GlobalNamespace::PlayerMissionStatsData*>* GlobalNamespace::PlayerData::get_missionsStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_missionsStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionsStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::PlayerMissionStatsData*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_missionsStatsData
void GlobalNamespace::PlayerData::set_missionsStatsData(System::Collections::Generic::List_1<GlobalNamespace::PlayerMissionStatsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_missionsStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_missionsStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_showedMissionHelpIds
System::Collections::Generic::List_1<::Il2CppString*>* GlobalNamespace::PlayerData::get_showedMissionHelpIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_showedMissionHelpIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showedMissionHelpIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_showedMissionHelpIds
void GlobalNamespace::PlayerData::set_showedMissionHelpIds(System::Collections::Generic::List_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_showedMissionHelpIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showedMissionHelpIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_guestPlayerNames
System::Collections::Generic::List_1<::Il2CppString*>* GlobalNamespace::PlayerData::get_guestPlayerNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_guestPlayerNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_guestPlayerNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_guestPlayerNames
void GlobalNamespace::PlayerData::set_guestPlayerNames(System::Collections::Generic::List_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_guestPlayerNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_guestPlayerNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_colorSchemesSettings
GlobalNamespace::ColorSchemesSettings* GlobalNamespace::PlayerData::get_colorSchemesSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_colorSchemesSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorSchemesSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorSchemesSettings*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_colorSchemesSettings
void GlobalNamespace::PlayerData::set_colorSchemesSettings(GlobalNamespace::ColorSchemesSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_colorSchemesSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorSchemesSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_overrideEnvironmentSettings
GlobalNamespace::OverrideEnvironmentSettings* GlobalNamespace::PlayerData::get_overrideEnvironmentSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_overrideEnvironmentSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideEnvironmentSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OverrideEnvironmentSettings*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_overrideEnvironmentSettings
void GlobalNamespace::PlayerData::set_overrideEnvironmentSettings(GlobalNamespace::OverrideEnvironmentSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_overrideEnvironmentSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overrideEnvironmentSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_favoritesLevelIds
System::Collections::Generic::HashSet_1<::Il2CppString*>* GlobalNamespace::PlayerData::get_favoritesLevelIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_favoritesLevelIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_favoritesLevelIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::HashSet_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_favoritesLevelIds
void GlobalNamespace::PlayerData::set_favoritesLevelIds(System::Collections::Generic::HashSet_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_favoritesLevelIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_favoritesLevelIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_multiplayerModeSettings
GlobalNamespace::MultiplayerModeSettings* GlobalNamespace::PlayerData::get_multiplayerModeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::get_multiplayerModeSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerModeSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerModeSettings*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_multiplayerModeSettings
void GlobalNamespace::PlayerData::set_multiplayerModeSettings(GlobalNamespace::MultiplayerModeSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::set_multiplayerModeSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_multiplayerModeSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.add_favoriteLevelsSetDidChangeEvent
void GlobalNamespace::PlayerData::add_favoriteLevelsSetDidChangeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::add_favoriteLevelsSetDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_favoriteLevelsSetDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.remove_favoriteLevelsSetDidChangeEvent
void GlobalNamespace::PlayerData::remove_favoriteLevelsSetDidChangeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::remove_favoriteLevelsSetDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_favoriteLevelsSetDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.add_didIncreaseNumberOfGameplaysEvent
void GlobalNamespace::PlayerData::add_didIncreaseNumberOfGameplaysEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::add_didIncreaseNumberOfGameplaysEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didIncreaseNumberOfGameplaysEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.remove_didIncreaseNumberOfGameplaysEvent
void GlobalNamespace::PlayerData::remove_didIncreaseNumberOfGameplaysEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::remove_didIncreaseNumberOfGameplaysEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didIncreaseNumberOfGameplaysEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.add_didChangeShareMultiplayerLobbyCodeInRichPresenceEvent
void GlobalNamespace::PlayerData::add_didChangeShareMultiplayerLobbyCodeInRichPresenceEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::add_didChangeShareMultiplayerLobbyCodeInRichPresenceEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeShareMultiplayerLobbyCodeInRichPresenceEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.remove_didChangeShareMultiplayerLobbyCodeInRichPresenceEvent
void GlobalNamespace::PlayerData::remove_didChangeShareMultiplayerLobbyCodeInRichPresenceEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::remove_didChangeShareMultiplayerLobbyCodeInRichPresenceEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeShareMultiplayerLobbyCodeInRichPresenceEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.GetPlayerLevelStatsData
GlobalNamespace::PlayerLevelStatsData* GlobalNamespace::PlayerData::GetPlayerLevelStatsData(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::GetPlayerLevelStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerLevelStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerLevelStatsData*, false>(this, ___internal__method, difficultyBeatmap);
}
// Autogenerated method: PlayerData.GetPlayerLevelStatsData
GlobalNamespace::PlayerLevelStatsData* GlobalNamespace::PlayerData::GetPlayerLevelStatsData(::Il2CppString* levelId, GlobalNamespace::BeatmapDifficulty difficulty, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::GetPlayerLevelStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerLevelStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(difficulty), ::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerLevelStatsData*, false>(this, ___internal__method, levelId, difficulty, beatmapCharacteristic);
}
// Autogenerated method: PlayerData.GetPlayerMissionStatsData
GlobalNamespace::PlayerMissionStatsData* GlobalNamespace::PlayerData::GetPlayerMissionStatsData(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::GetPlayerMissionStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerMissionStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerMissionStatsData*, false>(this, ___internal__method, missionId);
}
// Autogenerated method: PlayerData.WasMissionHelpShowed
bool GlobalNamespace::PlayerData::WasMissionHelpShowed(GlobalNamespace::MissionHelpSO* missionHelp) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::WasMissionHelpShowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WasMissionHelpShowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionHelp)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, missionHelp);
}
// Autogenerated method: PlayerData.MissionHelpWasShowed
void GlobalNamespace::PlayerData::MissionHelpWasShowed(GlobalNamespace::MissionHelpSO* missionHelp) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::MissionHelpWasShowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MissionHelpWasShowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionHelp)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionHelp);
}
// Autogenerated method: PlayerData.IncreaseNumberOfGameplays
void GlobalNamespace::PlayerData::IncreaseNumberOfGameplays(GlobalNamespace::PlayerLevelStatsData* playerLevelStats) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::IncreaseNumberOfGameplays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncreaseNumberOfGameplays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerLevelStats)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playerLevelStats);
}
// Autogenerated method: PlayerData.IsLevelUserFavorite
bool GlobalNamespace::PlayerData::IsLevelUserFavorite(GlobalNamespace::IPreviewBeatmapLevel* level) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::IsLevelUserFavorite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLevelUserFavorite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, level);
}
// Autogenerated method: PlayerData.AddLevelToFavorites
void GlobalNamespace::PlayerData::AddLevelToFavorites(GlobalNamespace::IPreviewBeatmapLevel* level) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::AddLevelToFavorites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLevelToFavorites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level);
}
// Autogenerated method: PlayerData.RemoveLevelFromFavorites
void GlobalNamespace::PlayerData::RemoveLevelFromFavorites(GlobalNamespace::IPreviewBeatmapLevel* level) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::RemoveLevelFromFavorites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveLevelFromFavorites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level);
}
// Autogenerated method: PlayerData.MarkTutorialAsShown
void GlobalNamespace::PlayerData::MarkTutorialAsShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::MarkTutorialAsShown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkTutorialAsShown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.Mark360WarningAsShown
void GlobalNamespace::PlayerData::Mark360WarningAsShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::Mark360WarningAsShown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mark360WarningAsShown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.MarkEulaAsAgreed
void GlobalNamespace::PlayerData::MarkEulaAsAgreed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::MarkEulaAsAgreed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkEulaAsAgreed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.MarkLanguageAsSelected
void GlobalNamespace::PlayerData::MarkLanguageAsSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::MarkLanguageAsSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkLanguageAsSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.MarkMultiplayerDisclaimerAsAgreed
void GlobalNamespace::PlayerData::MarkMultiplayerDisclaimerAsAgreed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::MarkMultiplayerDisclaimerAsAgreed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkMultiplayerDisclaimerAsAgreed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.MarkAvatarCreated
void GlobalNamespace::PlayerData::MarkAvatarCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::MarkAvatarCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkAvatarCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.AddGuestPlayerName
void GlobalNamespace::PlayerData::AddGuestPlayerName(::Il2CppString* guestPlayerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::AddGuestPlayerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGuestPlayerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guestPlayerName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, guestPlayerName);
}
// Autogenerated method: PlayerData.DeleteAllGuestPlayers
void GlobalNamespace::PlayerData::DeleteAllGuestPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::DeleteAllGuestPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteAllGuestPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.SetLastSelectedBeatmapDifficulty
void GlobalNamespace::PlayerData::SetLastSelectedBeatmapDifficulty(GlobalNamespace::BeatmapDifficulty beatmapDifficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::SetLastSelectedBeatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLastSelectedBeatmapDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDifficulty)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapDifficulty);
}
// Autogenerated method: PlayerData.SetLastSelectedBeatmapCharacteristic
void GlobalNamespace::PlayerData::SetLastSelectedBeatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::SetLastSelectedBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLastSelectedBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapCharacteristic);
}
// Autogenerated method: PlayerData.SetGameplayModifiers
void GlobalNamespace::PlayerData::SetGameplayModifiers(GlobalNamespace::GameplayModifiers* newGameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::SetGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newGameplayModifiers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newGameplayModifiers);
}
// Autogenerated method: PlayerData.SetPlayerSpecificSettings
void GlobalNamespace::PlayerData::SetPlayerSpecificSettings(GlobalNamespace::PlayerSpecificSettings* newPlayerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::SetPlayerSpecificSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerSpecificSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newPlayerSpecificSettings)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newPlayerSpecificSettings);
}
// Autogenerated method: PlayerData.SetMultiplayerModeSettings
void GlobalNamespace::PlayerData::SetMultiplayerModeSettings(GlobalNamespace::MultiplayerModeSettings* multiplayerModeSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::SetMultiplayerModeSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMultiplayerModeSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerModeSettings)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, multiplayerModeSettings);
}
// Autogenerated method: PlayerData.SetShareMultiplayerLobbyCodeInRichPresence
void GlobalNamespace::PlayerData::SetShareMultiplayerLobbyCodeInRichPresence(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerData::SetShareMultiplayerLobbyCodeInRichPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetShareMultiplayerLobbyCodeInRichPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: PlayerData::get_playerId
// Il2CppName: get_playerId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PlayerData::*)()>(&PlayerData::get_playerId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_playerId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_playerId
// Il2CppName: set_playerId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(::Il2CppString*)>(&PlayerData::set_playerId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_playerId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_playerName
// Il2CppName: get_playerName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PlayerData::*)()>(&PlayerData::get_playerName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_playerName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_playerName
// Il2CppName: set_playerName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(::Il2CppString*)>(&PlayerData::set_playerName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_playerName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_shouldShowTutorialPrompt
// Il2CppName: get_shouldShowTutorialPrompt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayerData::*)()>(&PlayerData::get_shouldShowTutorialPrompt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_shouldShowTutorialPrompt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_shouldShowTutorialPrompt
// Il2CppName: set_shouldShowTutorialPrompt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(bool)>(&PlayerData::set_shouldShowTutorialPrompt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_shouldShowTutorialPrompt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_shouldShow360Warning
// Il2CppName: get_shouldShow360Warning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayerData::*)()>(&PlayerData::get_shouldShow360Warning)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_shouldShow360Warning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_shouldShow360Warning
// Il2CppName: set_shouldShow360Warning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(bool)>(&PlayerData::set_shouldShow360Warning)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_shouldShow360Warning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_agreedToEula
// Il2CppName: get_agreedToEula
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayerData::*)()>(&PlayerData::get_agreedToEula)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_agreedToEula", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_agreedToEula
// Il2CppName: set_agreedToEula
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(bool)>(&PlayerData::set_agreedToEula)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_agreedToEula", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_didSelectLanguage
// Il2CppName: get_didSelectLanguage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayerData::*)()>(&PlayerData::get_didSelectLanguage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_didSelectLanguage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_didSelectLanguage
// Il2CppName: set_didSelectLanguage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(bool)>(&PlayerData::set_didSelectLanguage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_didSelectLanguage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_agreedToMultiplayerDisclaimer
// Il2CppName: get_agreedToMultiplayerDisclaimer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayerData::*)()>(&PlayerData::get_agreedToMultiplayerDisclaimer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_agreedToMultiplayerDisclaimer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_agreedToMultiplayerDisclaimer
// Il2CppName: set_agreedToMultiplayerDisclaimer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(bool)>(&PlayerData::set_agreedToMultiplayerDisclaimer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_agreedToMultiplayerDisclaimer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_avatarCreated
// Il2CppName: get_avatarCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayerData::*)()>(&PlayerData::get_avatarCreated)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_avatarCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_avatarCreated
// Il2CppName: set_avatarCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(bool)>(&PlayerData::set_avatarCreated)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_avatarCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_shareMultiplayerLobbyCodeInRichPresence
// Il2CppName: get_shareMultiplayerLobbyCodeInRichPresence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayerData::*)()>(&PlayerData::get_shareMultiplayerLobbyCodeInRichPresence)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_shareMultiplayerLobbyCodeInRichPresence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_shareMultiplayerLobbyCodeInRichPresence
// Il2CppName: set_shareMultiplayerLobbyCodeInRichPresence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(bool)>(&PlayerData::set_shareMultiplayerLobbyCodeInRichPresence)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_shareMultiplayerLobbyCodeInRichPresence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_lastSelectedBeatmapDifficulty
// Il2CppName: get_lastSelectedBeatmapDifficulty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::BeatmapDifficulty (PlayerData::*)()>(&PlayerData::get_lastSelectedBeatmapDifficulty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_lastSelectedBeatmapDifficulty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_lastSelectedBeatmapDifficulty
// Il2CppName: set_lastSelectedBeatmapDifficulty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(GlobalNamespace::BeatmapDifficulty)>(&PlayerData::set_lastSelectedBeatmapDifficulty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_lastSelectedBeatmapDifficulty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_lastSelectedBeatmapCharacteristic
// Il2CppName: get_lastSelectedBeatmapCharacteristic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::BeatmapCharacteristicSO* (PlayerData::*)()>(&PlayerData::get_lastSelectedBeatmapCharacteristic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_lastSelectedBeatmapCharacteristic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_lastSelectedBeatmapCharacteristic
// Il2CppName: set_lastSelectedBeatmapCharacteristic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(GlobalNamespace::BeatmapCharacteristicSO*)>(&PlayerData::set_lastSelectedBeatmapCharacteristic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_lastSelectedBeatmapCharacteristic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_gameplayModifiers
// Il2CppName: get_gameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::GameplayModifiers* (PlayerData::*)()>(&PlayerData::get_gameplayModifiers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_gameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_gameplayModifiers
// Il2CppName: set_gameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(GlobalNamespace::GameplayModifiers*)>(&PlayerData::set_gameplayModifiers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_gameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_playerSpecificSettings
// Il2CppName: get_playerSpecificSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerSpecificSettings* (PlayerData::*)()>(&PlayerData::get_playerSpecificSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_playerSpecificSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_playerSpecificSettings
// Il2CppName: set_playerSpecificSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(GlobalNamespace::PlayerSpecificSettings*)>(&PlayerData::set_playerSpecificSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_playerSpecificSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSpecificSettings*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_practiceSettings
// Il2CppName: get_practiceSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PracticeSettings* (PlayerData::*)()>(&PlayerData::get_practiceSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_practiceSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_practiceSettings
// Il2CppName: set_practiceSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(GlobalNamespace::PracticeSettings*)>(&PlayerData::set_practiceSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_practiceSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PracticeSettings*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_playerAllOverallStatsData
// Il2CppName: get_playerAllOverallStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerAllOverallStatsData* (PlayerData::*)()>(&PlayerData::get_playerAllOverallStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_playerAllOverallStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_playerAllOverallStatsData
// Il2CppName: set_playerAllOverallStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(GlobalNamespace::PlayerAllOverallStatsData*)>(&PlayerData::set_playerAllOverallStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_playerAllOverallStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerAllOverallStatsData*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_levelsStatsData
// Il2CppName: get_levelsStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<GlobalNamespace::PlayerLevelStatsData*>* (PlayerData::*)()>(&PlayerData::get_levelsStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_levelsStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_levelsStatsData
// Il2CppName: set_levelsStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(System::Collections::Generic::List_1<GlobalNamespace::PlayerLevelStatsData*>*)>(&PlayerData::set_levelsStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_levelsStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<GlobalNamespace::PlayerLevelStatsData*>*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_missionsStatsData
// Il2CppName: get_missionsStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<GlobalNamespace::PlayerMissionStatsData*>* (PlayerData::*)()>(&PlayerData::get_missionsStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_missionsStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_missionsStatsData
// Il2CppName: set_missionsStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(System::Collections::Generic::List_1<GlobalNamespace::PlayerMissionStatsData*>*)>(&PlayerData::set_missionsStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_missionsStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<GlobalNamespace::PlayerMissionStatsData*>*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_showedMissionHelpIds
// Il2CppName: get_showedMissionHelpIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<::Il2CppString*>* (PlayerData::*)()>(&PlayerData::get_showedMissionHelpIds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_showedMissionHelpIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_showedMissionHelpIds
// Il2CppName: set_showedMissionHelpIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(System::Collections::Generic::List_1<::Il2CppString*>*)>(&PlayerData::set_showedMissionHelpIds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_showedMissionHelpIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_guestPlayerNames
// Il2CppName: get_guestPlayerNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<::Il2CppString*>* (PlayerData::*)()>(&PlayerData::get_guestPlayerNames)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_guestPlayerNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_guestPlayerNames
// Il2CppName: set_guestPlayerNames
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(System::Collections::Generic::List_1<::Il2CppString*>*)>(&PlayerData::set_guestPlayerNames)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_guestPlayerNames", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_colorSchemesSettings
// Il2CppName: get_colorSchemesSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::ColorSchemesSettings* (PlayerData::*)()>(&PlayerData::get_colorSchemesSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_colorSchemesSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_colorSchemesSettings
// Il2CppName: set_colorSchemesSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(GlobalNamespace::ColorSchemesSettings*)>(&PlayerData::set_colorSchemesSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_colorSchemesSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorSchemesSettings*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_overrideEnvironmentSettings
// Il2CppName: get_overrideEnvironmentSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::OverrideEnvironmentSettings* (PlayerData::*)()>(&PlayerData::get_overrideEnvironmentSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_overrideEnvironmentSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_overrideEnvironmentSettings
// Il2CppName: set_overrideEnvironmentSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(GlobalNamespace::OverrideEnvironmentSettings*)>(&PlayerData::set_overrideEnvironmentSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_overrideEnvironmentSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OverrideEnvironmentSettings*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_favoritesLevelIds
// Il2CppName: get_favoritesLevelIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::HashSet_1<::Il2CppString*>* (PlayerData::*)()>(&PlayerData::get_favoritesLevelIds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_favoritesLevelIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_favoritesLevelIds
// Il2CppName: set_favoritesLevelIds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(System::Collections::Generic::HashSet_1<::Il2CppString*>*)>(&PlayerData::set_favoritesLevelIds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_favoritesLevelIds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::HashSet_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::get_multiplayerModeSettings
// Il2CppName: get_multiplayerModeSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::MultiplayerModeSettings* (PlayerData::*)()>(&PlayerData::get_multiplayerModeSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "get_multiplayerModeSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::set_multiplayerModeSettings
// Il2CppName: set_multiplayerModeSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(GlobalNamespace::MultiplayerModeSettings*)>(&PlayerData::set_multiplayerModeSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "set_multiplayerModeSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MultiplayerModeSettings*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::add_favoriteLevelsSetDidChangeEvent
// Il2CppName: add_favoriteLevelsSetDidChangeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(System::Action*)>(&PlayerData::add_favoriteLevelsSetDidChangeEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "add_favoriteLevelsSetDidChangeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::remove_favoriteLevelsSetDidChangeEvent
// Il2CppName: remove_favoriteLevelsSetDidChangeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(System::Action*)>(&PlayerData::remove_favoriteLevelsSetDidChangeEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "remove_favoriteLevelsSetDidChangeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::add_didIncreaseNumberOfGameplaysEvent
// Il2CppName: add_didIncreaseNumberOfGameplaysEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(System::Action*)>(&PlayerData::add_didIncreaseNumberOfGameplaysEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "add_didIncreaseNumberOfGameplaysEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::remove_didIncreaseNumberOfGameplaysEvent
// Il2CppName: remove_didIncreaseNumberOfGameplaysEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(System::Action*)>(&PlayerData::remove_didIncreaseNumberOfGameplaysEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "remove_didIncreaseNumberOfGameplaysEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::add_didChangeShareMultiplayerLobbyCodeInRichPresenceEvent
// Il2CppName: add_didChangeShareMultiplayerLobbyCodeInRichPresenceEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(System::Action*)>(&PlayerData::add_didChangeShareMultiplayerLobbyCodeInRichPresenceEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "add_didChangeShareMultiplayerLobbyCodeInRichPresenceEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::remove_didChangeShareMultiplayerLobbyCodeInRichPresenceEvent
// Il2CppName: remove_didChangeShareMultiplayerLobbyCodeInRichPresenceEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(System::Action*)>(&PlayerData::remove_didChangeShareMultiplayerLobbyCodeInRichPresenceEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "remove_didChangeShareMultiplayerLobbyCodeInRichPresenceEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(::Il2CppString*, ::Il2CppString*, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::ColorSchemesSettings*, GlobalNamespace::OverrideEnvironmentSettings*)>(&PlayerData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorSchemesSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OverrideEnvironmentSettings*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(::Il2CppString*, ::Il2CppString*, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::ColorSchemesSettings*, GlobalNamespace::OverrideEnvironmentSettings*)>(&PlayerData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorSchemesSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OverrideEnvironmentSettings*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(::Il2CppString*, ::Il2CppString*, bool, bool, bool, bool, bool, bool, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::GameplayModifiers*, GlobalNamespace::PlayerSpecificSettings*, GlobalNamespace::PracticeSettings*, GlobalNamespace::PlayerAllOverallStatsData*, System::Collections::Generic::List_1<GlobalNamespace::PlayerLevelStatsData*>*, System::Collections::Generic::List_1<GlobalNamespace::PlayerMissionStatsData*>*, System::Collections::Generic::List_1<::Il2CppString*>*, System::Collections::Generic::List_1<::Il2CppString*>*, GlobalNamespace::ColorSchemesSettings*, GlobalNamespace::OverrideEnvironmentSettings*, System::Collections::Generic::List_1<::Il2CppString*>*, GlobalNamespace::MultiplayerModeSettings*)>(&PlayerData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSpecificSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PracticeSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerAllOverallStatsData*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<GlobalNamespace::PlayerLevelStatsData*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<GlobalNamespace::PlayerMissionStatsData*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorSchemesSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OverrideEnvironmentSettings*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MultiplayerModeSettings*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(::Il2CppString*, ::Il2CppString*, bool, bool, bool, bool, bool, bool, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::GameplayModifiers*, GlobalNamespace::PlayerSpecificSettings*, GlobalNamespace::PracticeSettings*, GlobalNamespace::PlayerAllOverallStatsData*, System::Collections::Generic::List_1<GlobalNamespace::PlayerLevelStatsData*>*, System::Collections::Generic::List_1<GlobalNamespace::PlayerMissionStatsData*>*, System::Collections::Generic::List_1<::Il2CppString*>*, System::Collections::Generic::List_1<::Il2CppString*>*, GlobalNamespace::ColorSchemesSettings*, GlobalNamespace::OverrideEnvironmentSettings*, System::Collections::Generic::List_1<::Il2CppString*>*, GlobalNamespace::MultiplayerModeSettings*)>(&PlayerData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSpecificSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PracticeSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerAllOverallStatsData*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<GlobalNamespace::PlayerLevelStatsData*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<GlobalNamespace::PlayerMissionStatsData*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorSchemesSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OverrideEnvironmentSettings*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MultiplayerModeSettings*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::GetPlayerLevelStatsData
// Il2CppName: GetPlayerLevelStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerLevelStatsData* (PlayerData::*)(GlobalNamespace::IDifficultyBeatmap*)>(&PlayerData::GetPlayerLevelStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "GetPlayerLevelStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::GetPlayerLevelStatsData
// Il2CppName: GetPlayerLevelStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerLevelStatsData* (PlayerData::*)(::Il2CppString*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*)>(&PlayerData::GetPlayerLevelStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "GetPlayerLevelStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::GetPlayerMissionStatsData
// Il2CppName: GetPlayerMissionStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerMissionStatsData* (PlayerData::*)(::Il2CppString*)>(&PlayerData::GetPlayerMissionStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "GetPlayerMissionStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::WasMissionHelpShowed
// Il2CppName: WasMissionHelpShowed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayerData::*)(GlobalNamespace::MissionHelpSO*)>(&PlayerData::WasMissionHelpShowed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "WasMissionHelpShowed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MissionHelpSO*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::MissionHelpWasShowed
// Il2CppName: MissionHelpWasShowed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(GlobalNamespace::MissionHelpSO*)>(&PlayerData::MissionHelpWasShowed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "MissionHelpWasShowed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MissionHelpSO*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::IncreaseNumberOfGameplays
// Il2CppName: IncreaseNumberOfGameplays
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(GlobalNamespace::PlayerLevelStatsData*)>(&PlayerData::IncreaseNumberOfGameplays)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "IncreaseNumberOfGameplays", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerLevelStatsData*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::IsLevelUserFavorite
// Il2CppName: IsLevelUserFavorite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayerData::*)(GlobalNamespace::IPreviewBeatmapLevel*)>(&PlayerData::IsLevelUserFavorite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "IsLevelUserFavorite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::AddLevelToFavorites
// Il2CppName: AddLevelToFavorites
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(GlobalNamespace::IPreviewBeatmapLevel*)>(&PlayerData::AddLevelToFavorites)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "AddLevelToFavorites", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::RemoveLevelFromFavorites
// Il2CppName: RemoveLevelFromFavorites
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(GlobalNamespace::IPreviewBeatmapLevel*)>(&PlayerData::RemoveLevelFromFavorites)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "RemoveLevelFromFavorites", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::MarkTutorialAsShown
// Il2CppName: MarkTutorialAsShown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)()>(&PlayerData::MarkTutorialAsShown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "MarkTutorialAsShown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::Mark360WarningAsShown
// Il2CppName: Mark360WarningAsShown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)()>(&PlayerData::Mark360WarningAsShown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "Mark360WarningAsShown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::MarkEulaAsAgreed
// Il2CppName: MarkEulaAsAgreed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)()>(&PlayerData::MarkEulaAsAgreed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "MarkEulaAsAgreed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::MarkLanguageAsSelected
// Il2CppName: MarkLanguageAsSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)()>(&PlayerData::MarkLanguageAsSelected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "MarkLanguageAsSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::MarkMultiplayerDisclaimerAsAgreed
// Il2CppName: MarkMultiplayerDisclaimerAsAgreed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)()>(&PlayerData::MarkMultiplayerDisclaimerAsAgreed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "MarkMultiplayerDisclaimerAsAgreed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::MarkAvatarCreated
// Il2CppName: MarkAvatarCreated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)()>(&PlayerData::MarkAvatarCreated)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "MarkAvatarCreated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::AddGuestPlayerName
// Il2CppName: AddGuestPlayerName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(::Il2CppString*)>(&PlayerData::AddGuestPlayerName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "AddGuestPlayerName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::DeleteAllGuestPlayers
// Il2CppName: DeleteAllGuestPlayers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)()>(&PlayerData::DeleteAllGuestPlayers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "DeleteAllGuestPlayers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerData::SetLastSelectedBeatmapDifficulty
// Il2CppName: SetLastSelectedBeatmapDifficulty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(GlobalNamespace::BeatmapDifficulty)>(&PlayerData::SetLastSelectedBeatmapDifficulty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "SetLastSelectedBeatmapDifficulty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>()});
  }
};
// Writing MetadataGetter for method: PlayerData::SetLastSelectedBeatmapCharacteristic
// Il2CppName: SetLastSelectedBeatmapCharacteristic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(GlobalNamespace::BeatmapCharacteristicSO*)>(&PlayerData::SetLastSelectedBeatmapCharacteristic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "SetLastSelectedBeatmapCharacteristic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::SetGameplayModifiers
// Il2CppName: SetGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(GlobalNamespace::GameplayModifiers*)>(&PlayerData::SetGameplayModifiers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "SetGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::SetPlayerSpecificSettings
// Il2CppName: SetPlayerSpecificSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(GlobalNamespace::PlayerSpecificSettings*)>(&PlayerData::SetPlayerSpecificSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "SetPlayerSpecificSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSpecificSettings*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::SetMultiplayerModeSettings
// Il2CppName: SetMultiplayerModeSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(GlobalNamespace::MultiplayerModeSettings*)>(&PlayerData::SetMultiplayerModeSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "SetMultiplayerModeSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MultiplayerModeSettings*>()});
  }
};
// Writing MetadataGetter for method: PlayerData::SetShareMultiplayerLobbyCodeInRichPresence
// Il2CppName: SetShareMultiplayerLobbyCodeInRichPresence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerData::*)(bool)>(&PlayerData::SetShareMultiplayerLobbyCodeInRichPresence)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerData*), "SetShareMultiplayerLobbyCodeInRichPresence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayerDataFileManagerSO
#include "GlobalNamespace/PlayerDataFileManagerSO.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: ColorSchemesListSO
#include "GlobalNamespace/ColorSchemesListSO.hpp"
// Including type: EnvironmentsListSO
#include "GlobalNamespace/EnvironmentsListSO.hpp"
// Including type: EnvironmentTypeSO
#include "GlobalNamespace/EnvironmentTypeSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: PlayerData
#include "GlobalNamespace/PlayerData.hpp"
// Including type: PlayerSaveData
#include "GlobalNamespace/PlayerSaveData.hpp"
// Including type: PlayerSaveDataV1_0_1
#include "GlobalNamespace/PlayerSaveDataV1_0_1.hpp"
// Including type: OverrideEnvironmentSettings
#include "GlobalNamespace/OverrideEnvironmentSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kPlayerDataFileName
::Il2CppString* GlobalNamespace::PlayerDataFileManagerSO::_get_kPlayerDataFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataFileManagerSO::_get_kPlayerDataFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "PlayerDataFileManagerSO", "kPlayerDataFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPlayerDataFileName
void GlobalNamespace::PlayerDataFileManagerSO::_set_kPlayerDataFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataFileManagerSO::_set_kPlayerDataFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerDataFileManagerSO", "kPlayerDataFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kTempFileName
::Il2CppString* GlobalNamespace::PlayerDataFileManagerSO::_get_kTempFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataFileManagerSO::_get_kTempFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "PlayerDataFileManagerSO", "kTempFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kTempFileName
void GlobalNamespace::PlayerDataFileManagerSO::_set_kTempFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataFileManagerSO::_set_kTempFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerDataFileManagerSO", "kTempFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kBackupFileName
::Il2CppString* GlobalNamespace::PlayerDataFileManagerSO::_get_kBackupFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataFileManagerSO::_get_kBackupFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "PlayerDataFileManagerSO", "kBackupFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kBackupFileName
void GlobalNamespace::PlayerDataFileManagerSO::_set_kBackupFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataFileManagerSO::_set_kBackupFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerDataFileManagerSO", "kBackupFileName", value));
}
// Autogenerated method: PlayerDataFileManagerSO.Save
void GlobalNamespace::PlayerDataFileManagerSO::Save(GlobalNamespace::PlayerData* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataFileManagerSO::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playerData);
}
// Autogenerated method: PlayerDataFileManagerSO.Load
GlobalNamespace::PlayerData* GlobalNamespace::PlayerDataFileManagerSO::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataFileManagerSO::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerDataFileManagerSO.LoadFromJSONString
GlobalNamespace::PlayerData* GlobalNamespace::PlayerDataFileManagerSO::LoadFromJSONString(::Il2CppString* jsonString) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataFileManagerSO::LoadFromJSONString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadFromJSONString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonString)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerData*, false>(this, ___internal__method, jsonString);
}
// Autogenerated method: PlayerDataFileManagerSO.LoadFromCurrentVersion
GlobalNamespace::PlayerData* GlobalNamespace::PlayerDataFileManagerSO::LoadFromCurrentVersion(GlobalNamespace::PlayerSaveData* playerSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataFileManagerSO::LoadFromCurrentVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadFromCurrentVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerSaveData)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerData*, false>(this, ___internal__method, playerSaveData);
}
// Autogenerated method: PlayerDataFileManagerSO.LoadFromVersionV1_0_1
GlobalNamespace::PlayerData* GlobalNamespace::PlayerDataFileManagerSO::LoadFromVersionV1_0_1(GlobalNamespace::PlayerSaveDataV1_0_1* playerDataModelSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataFileManagerSO::LoadFromVersionV1_0_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadFromVersionV1_0_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerDataModelSaveData)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerData*, false>(this, ___internal__method, playerDataModelSaveData);
}
// Autogenerated method: PlayerDataFileManagerSO.CreateDefaultPlayerData
GlobalNamespace::PlayerData* GlobalNamespace::PlayerDataFileManagerSO::CreateDefaultPlayerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataFileManagerSO::CreateDefaultPlayerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDefaultPlayerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerDataFileManagerSO.GetLevelIdFromV_1_0_1LevelId
::Il2CppString* GlobalNamespace::PlayerDataFileManagerSO::GetLevelIdFromV_1_0_1LevelId(::Il2CppString* oldLevelId, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataFileManagerSO::GetLevelIdFromV_1_0_1LevelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerDataFileManagerSO", "GetLevelIdFromV_1_0_1LevelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldLevelId), ::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, oldLevelId, beatmapCharacteristic);
}
// Autogenerated method: PlayerDataFileManagerSO.GetBeatmapCharacteristicFromV_1_0_1LevelId
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::PlayerDataFileManagerSO::GetBeatmapCharacteristicFromV_1_0_1LevelId(GlobalNamespace::BeatmapCharacteristicCollectionSO* beatmapCharacteristicCollection, ::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataFileManagerSO::GetBeatmapCharacteristicFromV_1_0_1LevelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerDataFileManagerSO", "GetBeatmapCharacteristicFromV_1_0_1LevelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapCharacteristicCollection), ::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapCharacteristicCollection, levelId);
}
// Autogenerated method: PlayerDataFileManagerSO.CreateDefaultOverrideEnvironmentSettings
GlobalNamespace::OverrideEnvironmentSettings* GlobalNamespace::PlayerDataFileManagerSO::CreateDefaultOverrideEnvironmentSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataFileManagerSO::CreateDefaultOverrideEnvironmentSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDefaultOverrideEnvironmentSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OverrideEnvironmentSettings*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerDataFileManagerSO.LoadCorrectedSongPackMask
::Il2CppString* GlobalNamespace::PlayerDataFileManagerSO::LoadCorrectedSongPackMask(::Array<uint8_t>* songMaskPackBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataFileManagerSO::LoadCorrectedSongPackMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadCorrectedSongPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songMaskPackBytes)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, songMaskPackBytes);
}
// Writing MetadataGetter for method: PlayerDataFileManagerSO::Save
// Il2CppName: Save
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerDataFileManagerSO::*)(GlobalNamespace::PlayerData*)>(&PlayerDataFileManagerSO::Save)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataFileManagerSO*), "Save", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerData*>()});
  }
};
// Writing MetadataGetter for method: PlayerDataFileManagerSO::Load
// Il2CppName: Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerData* (PlayerDataFileManagerSO::*)()>(&PlayerDataFileManagerSO::Load)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataFileManagerSO*), "Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerDataFileManagerSO::LoadFromJSONString
// Il2CppName: LoadFromJSONString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerData* (PlayerDataFileManagerSO::*)(::Il2CppString*)>(&PlayerDataFileManagerSO::LoadFromJSONString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataFileManagerSO*), "LoadFromJSONString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PlayerDataFileManagerSO::LoadFromCurrentVersion
// Il2CppName: LoadFromCurrentVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerData* (PlayerDataFileManagerSO::*)(GlobalNamespace::PlayerSaveData*)>(&PlayerDataFileManagerSO::LoadFromCurrentVersion)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataFileManagerSO*), "LoadFromCurrentVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSaveData*>()});
  }
};
// Writing MetadataGetter for method: PlayerDataFileManagerSO::LoadFromVersionV1_0_1
// Il2CppName: LoadFromVersionV1_0_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerData* (PlayerDataFileManagerSO::*)(GlobalNamespace::PlayerSaveDataV1_0_1*)>(&PlayerDataFileManagerSO::LoadFromVersionV1_0_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataFileManagerSO*), "LoadFromVersionV1_0_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSaveDataV1_0_1*>()});
  }
};
// Writing MetadataGetter for method: PlayerDataFileManagerSO::CreateDefaultPlayerData
// Il2CppName: CreateDefaultPlayerData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerData* (PlayerDataFileManagerSO::*)()>(&PlayerDataFileManagerSO::CreateDefaultPlayerData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataFileManagerSO*), "CreateDefaultPlayerData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerDataFileManagerSO::GetLevelIdFromV_1_0_1LevelId
// Il2CppName: GetLevelIdFromV_1_0_1LevelId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*, GlobalNamespace::BeatmapCharacteristicSO*)>(&PlayerDataFileManagerSO::GetLevelIdFromV_1_0_1LevelId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataFileManagerSO*), "GetLevelIdFromV_1_0_1LevelId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>()});
  }
};
// Writing MetadataGetter for method: PlayerDataFileManagerSO::GetBeatmapCharacteristicFromV_1_0_1LevelId
// Il2CppName: GetBeatmapCharacteristicFromV_1_0_1LevelId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::BeatmapCharacteristicSO* (*)(GlobalNamespace::BeatmapCharacteristicCollectionSO*, ::Il2CppString*)>(&PlayerDataFileManagerSO::GetBeatmapCharacteristicFromV_1_0_1LevelId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataFileManagerSO*), "GetBeatmapCharacteristicFromV_1_0_1LevelId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicCollectionSO*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PlayerDataFileManagerSO::CreateDefaultOverrideEnvironmentSettings
// Il2CppName: CreateDefaultOverrideEnvironmentSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::OverrideEnvironmentSettings* (PlayerDataFileManagerSO::*)()>(&PlayerDataFileManagerSO::CreateDefaultOverrideEnvironmentSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataFileManagerSO*), "CreateDefaultOverrideEnvironmentSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerDataFileManagerSO::LoadCorrectedSongPackMask
// Il2CppName: LoadCorrectedSongPackMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PlayerDataFileManagerSO::*)(::Array<uint8_t>*)>(&PlayerDataFileManagerSO::LoadCorrectedSongPackMask)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataFileManagerSO*), "LoadCorrectedSongPackMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: PlayerDataFileManagerSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerDataFileManagerSO::*)()>(&PlayerDataFileManagerSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataFileManagerSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerDataFileManagerSO::*)()>(&PlayerDataFileManagerSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataFileManagerSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: PlayerDataFileManagerSO
#include "GlobalNamespace/PlayerDataFileManagerSO.hpp"
// Including type: PlayerData
#include "GlobalNamespace/PlayerData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayerDataModel.get_playerData
GlobalNamespace::PlayerData* GlobalNamespace::PlayerDataModel::get_playerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataModel::get_playerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerDataModel.OnEnable
void GlobalNamespace::PlayerDataModel::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataModel::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerDataModel.OnApplicationPause
void GlobalNamespace::PlayerDataModel::OnApplicationPause(bool pauseStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataModel::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pauseStatus)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pauseStatus);
}
// Autogenerated method: PlayerDataModel.OnDisable
void GlobalNamespace::PlayerDataModel::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataModel::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerDataModel.ResetData
void GlobalNamespace::PlayerDataModel::ResetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataModel::ResetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerDataModel.Save
void GlobalNamespace::PlayerDataModel::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataModel::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerDataModel.Load
void GlobalNamespace::PlayerDataModel::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataModel::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PlayerDataModel::get_playerData
// Il2CppName: get_playerData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerData* (PlayerDataModel::*)()>(&PlayerDataModel::get_playerData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataModel*), "get_playerData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerDataModel::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerDataModel::*)()>(&PlayerDataModel::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataModel*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerDataModel::OnApplicationPause
// Il2CppName: OnApplicationPause
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerDataModel::*)(bool)>(&PlayerDataModel::OnApplicationPause)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataModel*), "OnApplicationPause", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerDataModel::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerDataModel::*)()>(&PlayerDataModel::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataModel*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerDataModel::ResetData
// Il2CppName: ResetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerDataModel::*)()>(&PlayerDataModel::ResetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataModel*), "ResetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerDataModel::Save
// Il2CppName: Save
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerDataModel::*)()>(&PlayerDataModel::Save)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataModel*), "Save", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerDataModel::Load
// Il2CppName: Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerDataModel::*)()>(&PlayerDataModel::Load)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataModel*), "Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerDataModel::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerDataModel::*)()>(&PlayerDataModel::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerDataModel::*)()>(&PlayerDataModel::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataModel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerDataModelHelper
#include "GlobalNamespace/PlayerDataModelHelper.hpp"
// Including type: PlayerSaveData/PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerAllOverallStatsData.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerAllOverallStatsData.hpp"
// Including type: PlayerAllOverallStatsData/PlayerOverallStatsData
#include "GlobalNamespace/PlayerAllOverallStatsData_PlayerOverallStatsData.hpp"
// Including type: PlayerSaveData/PlayerOverallStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerOverallStatsData.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerOverallStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerOverallStatsData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayerDataModelHelper.ToPlayerAllOverallStatsData
GlobalNamespace::PlayerAllOverallStatsData* GlobalNamespace::PlayerDataModelHelper::ToPlayerAllOverallStatsData(GlobalNamespace::PlayerSaveData::PlayerAllOverallStatsData* playerAllOverallStatsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataModelHelper::ToPlayerAllOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerDataModelHelper", "ToPlayerAllOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerAllOverallStatsData)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerAllOverallStatsData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, playerAllOverallStatsData);
}
// Autogenerated method: PlayerDataModelHelper.ToPlayerAllOverallStatsData
GlobalNamespace::PlayerAllOverallStatsData* GlobalNamespace::PlayerDataModelHelper::ToPlayerAllOverallStatsData(GlobalNamespace::PlayerSaveDataV1_0_1::PlayerAllOverallStatsData* playerAllOverallStatsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataModelHelper::ToPlayerAllOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerDataModelHelper", "ToPlayerAllOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerAllOverallStatsData)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerAllOverallStatsData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, playerAllOverallStatsData);
}
// Autogenerated method: PlayerDataModelHelper.ToPlayerOverallStats
GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerDataModelHelper::ToPlayerOverallStats(GlobalNamespace::PlayerSaveData::PlayerOverallStatsData* playerAllOverallStatsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataModelHelper::ToPlayerOverallStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerDataModelHelper", "ToPlayerOverallStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerAllOverallStatsData)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, playerAllOverallStatsData);
}
// Autogenerated method: PlayerDataModelHelper.ToPlayerOverallStats
GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerDataModelHelper::ToPlayerOverallStats(GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData* playerAllOverallStatsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataModelHelper::ToPlayerOverallStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerDataModelHelper", "ToPlayerOverallStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerAllOverallStatsData)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, playerAllOverallStatsData);
}
// Autogenerated method: PlayerDataModelHelper.ToPlayerAllOverallStatsData
GlobalNamespace::PlayerSaveData::PlayerAllOverallStatsData* GlobalNamespace::PlayerDataModelHelper::ToPlayerAllOverallStatsData(GlobalNamespace::PlayerAllOverallStatsData* playerAllOverallStatsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataModelHelper::ToPlayerAllOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerDataModelHelper", "ToPlayerAllOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerAllOverallStatsData)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerSaveData::PlayerAllOverallStatsData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, playerAllOverallStatsData);
}
// Autogenerated method: PlayerDataModelHelper.ToPlayerOverallStatsData
GlobalNamespace::PlayerSaveData::PlayerOverallStatsData* GlobalNamespace::PlayerDataModelHelper::ToPlayerOverallStatsData(GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* playerOverallStatsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerDataModelHelper::ToPlayerOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerDataModelHelper", "ToPlayerOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerOverallStatsData)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, playerOverallStatsData);
}
// Writing MetadataGetter for method: PlayerDataModelHelper::ToPlayerAllOverallStatsData
// Il2CppName: ToPlayerAllOverallStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerAllOverallStatsData* (*)(GlobalNamespace::PlayerSaveData::PlayerAllOverallStatsData*)>(&PlayerDataModelHelper::ToPlayerAllOverallStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataModelHelper*), "ToPlayerAllOverallStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSaveData::PlayerAllOverallStatsData*>()});
  }
};
// Writing MetadataGetter for method: PlayerDataModelHelper::ToPlayerAllOverallStatsData
// Il2CppName: ToPlayerAllOverallStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerAllOverallStatsData* (*)(GlobalNamespace::PlayerSaveDataV1_0_1::PlayerAllOverallStatsData*)>(&PlayerDataModelHelper::ToPlayerAllOverallStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataModelHelper*), "ToPlayerAllOverallStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSaveDataV1_0_1::PlayerAllOverallStatsData*>()});
  }
};
// Writing MetadataGetter for method: PlayerDataModelHelper::ToPlayerOverallStats
// Il2CppName: ToPlayerOverallStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* (*)(GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*)>(&PlayerDataModelHelper::ToPlayerOverallStats)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataModelHelper*), "ToPlayerOverallStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*>()});
  }
};
// Writing MetadataGetter for method: PlayerDataModelHelper::ToPlayerOverallStats
// Il2CppName: ToPlayerOverallStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* (*)(GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData*)>(&PlayerDataModelHelper::ToPlayerOverallStats)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataModelHelper*), "ToPlayerOverallStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData*>()});
  }
};
// Writing MetadataGetter for method: PlayerDataModelHelper::ToPlayerAllOverallStatsData
// Il2CppName: ToPlayerAllOverallStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerSaveData::PlayerAllOverallStatsData* (*)(GlobalNamespace::PlayerAllOverallStatsData*)>(&PlayerDataModelHelper::ToPlayerAllOverallStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataModelHelper*), "ToPlayerAllOverallStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerAllOverallStatsData*>()});
  }
};
// Writing MetadataGetter for method: PlayerDataModelHelper::ToPlayerOverallStatsData
// Il2CppName: ToPlayerOverallStatsData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerSaveData::PlayerOverallStatsData* (*)(GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*)>(&PlayerDataModelHelper::ToPlayerOverallStatsData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerDataModelHelper*), "ToPlayerOverallStatsData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayerLevelStatsData
#include "GlobalNamespace/PlayerLevelStatsData.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayerLevelStatsData.get_levelID
::Il2CppString* GlobalNamespace::PlayerLevelStatsData::get_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerLevelStatsData::get_levelID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLevelStatsData.get_difficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::PlayerLevelStatsData::get_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerLevelStatsData::get_difficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLevelStatsData.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::PlayerLevelStatsData::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerLevelStatsData::get_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLevelStatsData.get_highScore
int GlobalNamespace::PlayerLevelStatsData::get_highScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerLevelStatsData::get_highScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLevelStatsData.get_maxCombo
int GlobalNamespace::PlayerLevelStatsData::get_maxCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerLevelStatsData::get_maxCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLevelStatsData.get_fullCombo
bool GlobalNamespace::PlayerLevelStatsData::get_fullCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerLevelStatsData::get_fullCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLevelStatsData.get_maxRank
GlobalNamespace::RankModel::Rank GlobalNamespace::PlayerLevelStatsData::get_maxRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerLevelStatsData::get_maxRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::RankModel::Rank, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLevelStatsData.get_validScore
bool GlobalNamespace::PlayerLevelStatsData::get_validScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerLevelStatsData::get_validScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_validScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLevelStatsData.get_playCount
int GlobalNamespace::PlayerLevelStatsData::get_playCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerLevelStatsData::get_playCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLevelStatsData.UpdateScoreData
void GlobalNamespace::PlayerLevelStatsData::UpdateScoreData(int score, int maxCombo, bool fullCombo, GlobalNamespace::RankModel::Rank rank) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerLevelStatsData::UpdateScoreData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScoreData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(maxCombo), ::il2cpp_utils::ExtractType(fullCombo), ::il2cpp_utils::ExtractType(rank)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, score, maxCombo, fullCombo, rank);
}
// Autogenerated method: PlayerLevelStatsData.IncreaseNumberOfGameplays
void GlobalNamespace::PlayerLevelStatsData::IncreaseNumberOfGameplays() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerLevelStatsData::IncreaseNumberOfGameplays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncreaseNumberOfGameplays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PlayerLevelStatsData::get_levelID
// Il2CppName: get_levelID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PlayerLevelStatsData::*)()>(&PlayerLevelStatsData::get_levelID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerLevelStatsData*), "get_levelID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerLevelStatsData::get_difficulty
// Il2CppName: get_difficulty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::BeatmapDifficulty (PlayerLevelStatsData::*)()>(&PlayerLevelStatsData::get_difficulty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerLevelStatsData*), "get_difficulty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerLevelStatsData::get_beatmapCharacteristic
// Il2CppName: get_beatmapCharacteristic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::BeatmapCharacteristicSO* (PlayerLevelStatsData::*)()>(&PlayerLevelStatsData::get_beatmapCharacteristic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerLevelStatsData*), "get_beatmapCharacteristic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerLevelStatsData::get_highScore
// Il2CppName: get_highScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PlayerLevelStatsData::*)()>(&PlayerLevelStatsData::get_highScore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerLevelStatsData*), "get_highScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerLevelStatsData::get_maxCombo
// Il2CppName: get_maxCombo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PlayerLevelStatsData::*)()>(&PlayerLevelStatsData::get_maxCombo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerLevelStatsData*), "get_maxCombo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerLevelStatsData::get_fullCombo
// Il2CppName: get_fullCombo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayerLevelStatsData::*)()>(&PlayerLevelStatsData::get_fullCombo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerLevelStatsData*), "get_fullCombo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerLevelStatsData::get_maxRank
// Il2CppName: get_maxRank
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::RankModel::Rank (PlayerLevelStatsData::*)()>(&PlayerLevelStatsData::get_maxRank)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerLevelStatsData*), "get_maxRank", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerLevelStatsData::get_validScore
// Il2CppName: get_validScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayerLevelStatsData::*)()>(&PlayerLevelStatsData::get_validScore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerLevelStatsData*), "get_validScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerLevelStatsData::get_playCount
// Il2CppName: get_playCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PlayerLevelStatsData::*)()>(&PlayerLevelStatsData::get_playCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerLevelStatsData*), "get_playCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerLevelStatsData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerLevelStatsData::*)(::Il2CppString*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*)>(&PlayerLevelStatsData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerLevelStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerLevelStatsData::*)(::Il2CppString*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*)>(&PlayerLevelStatsData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerLevelStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>()});
  }
};
// Writing MetadataGetter for method: PlayerLevelStatsData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerLevelStatsData::*)(::Il2CppString*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, int, int, bool, GlobalNamespace::RankModel::Rank, bool, int)>(&PlayerLevelStatsData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerLevelStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::RankModel::Rank>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerLevelStatsData::*)(::Il2CppString*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, int, int, bool, GlobalNamespace::RankModel::Rank, bool, int)>(&PlayerLevelStatsData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerLevelStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::RankModel::Rank>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlayerLevelStatsData::UpdateScoreData
// Il2CppName: UpdateScoreData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerLevelStatsData::*)(int, int, bool, GlobalNamespace::RankModel::Rank)>(&PlayerLevelStatsData::UpdateScoreData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerLevelStatsData*), "UpdateScoreData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::RankModel::Rank>()});
  }
};
// Writing MetadataGetter for method: PlayerLevelStatsData::IncreaseNumberOfGameplays
// Il2CppName: IncreaseNumberOfGameplays
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerLevelStatsData::*)()>(&PlayerLevelStatsData::IncreaseNumberOfGameplays)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerLevelStatsData*), "IncreaseNumberOfGameplays", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayerMissionStatsData
#include "GlobalNamespace/PlayerMissionStatsData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayerMissionStatsData.get_missionId
::Il2CppString* GlobalNamespace::PlayerMissionStatsData::get_missionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerMissionStatsData::get_missionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerMissionStatsData.get_cleared
bool GlobalNamespace::PlayerMissionStatsData::get_cleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerMissionStatsData::get_cleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerMissionStatsData.set_cleared
void GlobalNamespace::PlayerMissionStatsData::set_cleared(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerMissionStatsData::set_cleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: PlayerMissionStatsData::get_missionId
// Il2CppName: get_missionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PlayerMissionStatsData::*)()>(&PlayerMissionStatsData::get_missionId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerMissionStatsData*), "get_missionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerMissionStatsData::get_cleared
// Il2CppName: get_cleared
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlayerMissionStatsData::*)()>(&PlayerMissionStatsData::get_cleared)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerMissionStatsData*), "get_cleared", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerMissionStatsData::set_cleared
// Il2CppName: set_cleared
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerMissionStatsData::*)(bool)>(&PlayerMissionStatsData::set_cleared)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerMissionStatsData*), "set_cleared", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerMissionStatsData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerMissionStatsData::*)(::Il2CppString*, bool)>(&PlayerMissionStatsData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerMissionStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerMissionStatsData::*)(::Il2CppString*, bool)>(&PlayerMissionStatsData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerMissionStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayerSaveData
#include "GlobalNamespace/PlayerSaveData.hpp"
// Including type: PlayerSaveData/GameplayModifiers
#include "GlobalNamespace/PlayerSaveData_GameplayModifiers.hpp"
// Including type: PlayerSaveData/PlayerSpecificSettings
#include "GlobalNamespace/PlayerSaveData_PlayerSpecificSettings.hpp"
// Including type: PlayerSaveData/PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerAllOverallStatsData.hpp"
// Including type: PlayerSaveData/PlayerOverallStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerOverallStatsData.hpp"
// Including type: PlayerSaveData/PlayerLevelStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerLevelStatsData.hpp"
// Including type: PlayerSaveData/PlayerMissionStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerMissionStatsData.hpp"
// Including type: PlayerSaveData/PracticeSettings
#include "GlobalNamespace/PlayerSaveData_PracticeSettings.hpp"
// Including type: PlayerSaveData/ColorScheme
#include "GlobalNamespace/PlayerSaveData_ColorScheme.hpp"
// Including type: PlayerSaveData/ColorSchemesSettings
#include "GlobalNamespace/PlayerSaveData_ColorSchemesSettings.hpp"
// Including type: PlayerSaveData/OverrideEnvironmentSettings
#include "GlobalNamespace/PlayerSaveData_OverrideEnvironmentSettings.hpp"
// Including type: PlayerSaveData/GuestPlayer
#include "GlobalNamespace/PlayerSaveData_GuestPlayer.hpp"
// Including type: PlayerSaveData/MultiplayerModeSettings
#include "GlobalNamespace/PlayerSaveData_MultiplayerModeSettings.hpp"
// Including type: PlayerSaveData/LocalPlayer
#include "GlobalNamespace/PlayerSaveData_LocalPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String kCurrentVersion
::Il2CppString* GlobalNamespace::PlayerSaveData::_get_kCurrentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveData::_get_kCurrentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "PlayerSaveData", "kCurrentVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.String kCurrentVersion
void GlobalNamespace::PlayerSaveData::_set_kCurrentVersion(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveData::_set_kCurrentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData", "kCurrentVersion", value));
}
// Writing MetadataGetter for method: PlayerSaveData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveData::*)()>(&PlayerSaveData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveData::*)()>(&PlayerSaveData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/GameplayModifiers
#include "GlobalNamespace/PlayerSaveData_GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PlayerSaveData::GameplayModifiers::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveData::GameplayModifiers::*)()>(&PlayerSaveData::GameplayModifiers::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveData::GameplayModifiers*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveData::GameplayModifiers::*)()>(&PlayerSaveData::GameplayModifiers::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveData::GameplayModifiers*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/GameplayModifiers/EnabledObstacleType
#include "GlobalNamespace/PlayerSaveData_GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/GameplayModifiers/EnabledObstacleType All
GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType>("", "PlayerSaveData/GameplayModifiers/EnabledObstacleType", "All"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/GameplayModifiers/EnabledObstacleType All
void GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_set_All(GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/GameplayModifiers/EnabledObstacleType", "All", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/GameplayModifiers/EnabledObstacleType FullHeightOnly
GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_get_FullHeightOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_get_FullHeightOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType>("", "PlayerSaveData/GameplayModifiers/EnabledObstacleType", "FullHeightOnly"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/GameplayModifiers/EnabledObstacleType FullHeightOnly
void GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_set_FullHeightOnly(GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_set_FullHeightOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/GameplayModifiers/EnabledObstacleType", "FullHeightOnly", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/GameplayModifiers/EnabledObstacleType None
GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType>("", "PlayerSaveData/GameplayModifiers/EnabledObstacleType", "None"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/GameplayModifiers/EnabledObstacleType None
void GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_set_None(GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/GameplayModifiers/EnabledObstacleType", "None", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/GameplayModifiers/EnergyType
#include "GlobalNamespace/PlayerSaveData_GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/GameplayModifiers/EnergyType Bar
GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType::_get_Bar() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType::_get_Bar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType>("", "PlayerSaveData/GameplayModifiers/EnergyType", "Bar"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/GameplayModifiers/EnergyType Bar
void GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType::_set_Bar(GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType::_set_Bar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/GameplayModifiers/EnergyType", "Bar", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/GameplayModifiers/EnergyType Battery
GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType::_get_Battery() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType::_get_Battery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType>("", "PlayerSaveData/GameplayModifiers/EnergyType", "Battery"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/GameplayModifiers/EnergyType Battery
void GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType::_set_Battery(GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType::_set_Battery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/GameplayModifiers/EnergyType", "Battery", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/GameplayModifiers/SongSpeed
#include "GlobalNamespace/PlayerSaveData_GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/GameplayModifiers/SongSpeed Normal
GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed>("", "PlayerSaveData/GameplayModifiers/SongSpeed", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/GameplayModifiers/SongSpeed Normal
void GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_set_Normal(GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/GameplayModifiers/SongSpeed", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/GameplayModifiers/SongSpeed Faster
GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_get_Faster() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_get_Faster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed>("", "PlayerSaveData/GameplayModifiers/SongSpeed", "Faster"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/GameplayModifiers/SongSpeed Faster
void GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_set_Faster(GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_set_Faster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/GameplayModifiers/SongSpeed", "Faster", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/GameplayModifiers/SongSpeed Slower
GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_get_Slower() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_get_Slower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed>("", "PlayerSaveData/GameplayModifiers/SongSpeed", "Slower"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/GameplayModifiers/SongSpeed Slower
void GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_set_Slower(GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_set_Slower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/GameplayModifiers/SongSpeed", "Slower", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/PlayerSpecificSettings
#include "GlobalNamespace/PlayerSaveData_PlayerSpecificSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PlayerSaveData::PlayerSpecificSettings::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveData::PlayerSpecificSettings::*)()>(&PlayerSaveData::PlayerSpecificSettings::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveData::PlayerSpecificSettings*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveData::PlayerSpecificSettings::*)()>(&PlayerSaveData::PlayerSpecificSettings::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveData::PlayerSpecificSettings*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerAllOverallStatsData.hpp"
// Including type: PlayerSaveData/PlayerOverallStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerOverallStatsData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PlayerSaveData::PlayerAllOverallStatsData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveData::PlayerAllOverallStatsData::*)(GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*, GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*, GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*, GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*)>(&PlayerSaveData::PlayerAllOverallStatsData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveData::PlayerAllOverallStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveData::PlayerAllOverallStatsData::*)(GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*, GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*, GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*, GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*)>(&PlayerSaveData::PlayerAllOverallStatsData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveData::PlayerAllOverallStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*>()});
  }
};
// Writing MetadataGetter for method: PlayerSaveData::PlayerAllOverallStatsData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveData::PlayerAllOverallStatsData::*)()>(&PlayerSaveData::PlayerAllOverallStatsData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveData::PlayerAllOverallStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerSaveData::PlayerAllOverallStatsData::*)()>(&PlayerSaveData::PlayerAllOverallStatsData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerSaveData::PlayerAllOverallStatsData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
