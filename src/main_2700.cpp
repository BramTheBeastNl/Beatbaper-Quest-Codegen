// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LIV.SDK.Unity.LIV/LIV.SDK.Unity.<WaitForUnityEndOfFrame>d__68
#include "LIV/SDK/Unity/LIV_-WaitForUnityEndOfFrame-d__68.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.LIV <>4__this
::LIV::SDK::Unity::LIV*& LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::LIV**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.LIV/LIV.SDK.Unity.<WaitForUnityEndOfFrame>d__68.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV/LIV.SDK.Unity.<WaitForUnityEndOfFrame>d__68.System.Collections.IEnumerator.get_Current
::Il2CppObject* LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV/LIV.SDK.Unity.<WaitForUnityEndOfFrame>d__68.System.IDisposable.Dispose
void LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV/LIV.SDK.Unity.<WaitForUnityEndOfFrame>d__68.MoveNext
bool LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV/LIV.SDK.Unity.<WaitForUnityEndOfFrame>d__68.System.Collections.IEnumerator.Reset
void LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKBridge
#include "LIV/SDK/Unity/SDKBridge.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: LIV.SDK.Unity.SDKTexture
#include "LIV/SDK/Unity/SDKTexture.hpp"
// Including type: LIV.SDK.Unity.SDKApplicationOutput
#include "LIV/SDK/Unity/SDKApplicationOutput.hpp"
// Including type: LIV.SDK.Unity.SDKOutputFrame
#include "LIV/SDK/Unity/SDKOutputFrame.hpp"
// Including type: LIV.SDK.Unity.SDKPlane
#include "LIV/SDK/Unity/SDKPlane.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<LIV.SDK.Unity.SDKInputFrame> _injection_SDKInputFrame
::LIV::SDK::Unity::SDKBridge::SDKInjection_1<::LIV::SDK::Unity::SDKInputFrame> LIV::SDK::Unity::SDKBridge::_get__injection_SDKInputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_SDKInputFrame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::SDKBridge::SDKInjection_1<::LIV::SDK::Unity::SDKInputFrame>>("LIV.SDK.Unity", "SDKBridge", "_injection_SDKInputFrame"));
}
// Autogenerated static field setter
// Set static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<LIV.SDK.Unity.SDKInputFrame> _injection_SDKInputFrame
void LIV::SDK::Unity::SDKBridge::_set__injection_SDKInputFrame(::LIV::SDK::Unity::SDKBridge::SDKInjection_1<::LIV::SDK::Unity::SDKInputFrame> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_SDKInputFrame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_SDKInputFrame", value));
}
// Autogenerated static field getter
// Get static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<LIV.SDK.Unity.SDKResolution> _injection_SDKResolution
::LIV::SDK::Unity::SDKBridge::SDKInjection_1<::LIV::SDK::Unity::SDKResolution> LIV::SDK::Unity::SDKBridge::_get__injection_SDKResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_SDKResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::SDKBridge::SDKInjection_1<::LIV::SDK::Unity::SDKResolution>>("LIV.SDK.Unity", "SDKBridge", "_injection_SDKResolution"));
}
// Autogenerated static field setter
// Set static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<LIV.SDK.Unity.SDKResolution> _injection_SDKResolution
void LIV::SDK::Unity::SDKBridge::_set__injection_SDKResolution(::LIV::SDK::Unity::SDKBridge::SDKInjection_1<::LIV::SDK::Unity::SDKResolution> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_SDKResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_SDKResolution", value));
}
// Autogenerated static field getter
// Get static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<System.Boolean> _injection_IsActive
::LIV::SDK::Unity::SDKBridge::SDKInjection_1<bool> LIV::SDK::Unity::SDKBridge::_get__injection_IsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_IsActive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::SDKBridge::SDKInjection_1<bool>>("LIV.SDK.Unity", "SDKBridge", "_injection_IsActive"));
}
// Autogenerated static field setter
// Set static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<System.Boolean> _injection_IsActive
void LIV::SDK::Unity::SDKBridge::_set__injection_IsActive(::LIV::SDK::Unity::SDKBridge::SDKInjection_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_IsActive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_IsActive", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _injection_DisableSubmit
bool LIV::SDK::Unity::SDKBridge::_get__injection_DisableSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_DisableSubmit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("LIV.SDK.Unity", "SDKBridge", "_injection_DisableSubmit"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _injection_DisableSubmit
void LIV::SDK::Unity::SDKBridge::_set__injection_DisableSubmit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_DisableSubmit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_DisableSubmit", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _injection_DisableSubmitApplicationOutput
bool LIV::SDK::Unity::SDKBridge::_get__injection_DisableSubmitApplicationOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_DisableSubmitApplicationOutput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("LIV.SDK.Unity", "SDKBridge", "_injection_DisableSubmitApplicationOutput"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _injection_DisableSubmitApplicationOutput
void LIV::SDK::Unity::SDKBridge::_set__injection_DisableSubmitApplicationOutput(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_DisableSubmitApplicationOutput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_DisableSubmitApplicationOutput", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _injection_DisableAddTexture
bool LIV::SDK::Unity::SDKBridge::_get__injection_DisableAddTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_DisableAddTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("LIV.SDK.Unity", "SDKBridge", "_injection_DisableAddTexture"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _injection_DisableAddTexture
void LIV::SDK::Unity::SDKBridge::_set__injection_DisableAddTexture(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_DisableAddTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_DisableAddTexture", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _injection_DisableCreateFrame
bool LIV::SDK::Unity::SDKBridge::_get__injection_DisableCreateFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_DisableCreateFrame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("LIV.SDK.Unity", "SDKBridge", "_injection_DisableCreateFrame"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _injection_DisableCreateFrame
void LIV::SDK::Unity::SDKBridge::_set__injection_DisableCreateFrame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_DisableCreateFrame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_DisableCreateFrame", value));
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.get_IsActive
bool LIV::SDK::Unity::SDKBridge::get_IsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::get_IsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "get_IsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge..cctor
void LIV::SDK::Unity::SDKBridge::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddStringToChannel
int LIV::SDK::Unity::SDKBridge::AddStringToChannel(int slot, ::System::IntPtr str, int length, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddStringToChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddStringToChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slot, str, length, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.addtexture
int LIV::SDK::Unity::SDKBridge::addtexture(::System::IntPtr sourcetexture, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::addtexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "addtexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcetexture), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourcetexture, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetObjectTimeStamp
uint64_t LIV::SDK::Unity::SDKBridge::GetObjectTimeStamp(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetObjectTimeStamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetObjectTimeStamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetCurrentTimeTicks
uint64_t LIV::SDK::Unity::SDKBridge::GetCurrentTimeTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetCurrentTimeTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetCurrentTimeTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetIsCaptureActive
bool LIV::SDK::Unity::SDKBridge::GetIsCaptureActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetIsCaptureActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetIsCaptureActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetRenderEventFunc
::System::IntPtr LIV::SDK::Unity::SDKBridge::GetRenderEventFunc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetRenderEventFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetRenderEventFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetCompositorChannelObject
::System::IntPtr LIV::SDK::Unity::SDKBridge::GetCompositorChannelObject(int slot, uint64_t tag, uint64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetCompositorChannelObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetCompositorChannelObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slot, tag, timestamp);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddObjectToCompositorChannel
int LIV::SDK::Unity::SDKBridge::AddObjectToCompositorChannel(int slot, ::System::IntPtr obj, int objectsize, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddObjectToCompositorChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddObjectToCompositorChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(objectsize), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slot, obj, objectsize, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddObjectToFrame
int LIV::SDK::Unity::SDKBridge::AddObjectToFrame(::System::IntPtr obj, int objectsize, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddObjectToFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddObjectToFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(objectsize), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, objectsize, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.updatinputframe
::System::IntPtr LIV::SDK::Unity::SDKBridge::updatinputframe(::System::IntPtr InputFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::updatinputframe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "updatinputframe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(InputFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, InputFrame);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetViewportTexture
::System::IntPtr LIV::SDK::Unity::SDKBridge::GetViewportTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetViewportTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetViewportTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetChannelObject
::System::IntPtr LIV::SDK::Unity::SDKBridge::GetChannelObject(int slot, uint64_t tag, uint64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetChannelObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetChannelObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slot, tag, timestamp);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddObjectToChannel
int LIV::SDK::Unity::SDKBridge::AddObjectToChannel(int slot, ::System::IntPtr obj, int objectsize, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddObjectToChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddObjectToChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(objectsize), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slot, obj, objectsize, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.Tag
uint64_t LIV::SDK::Unity::SDKBridge::Tag(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddString
void LIV::SDK::Unity::SDKBridge::AddString(::StringW tag, ::StringW value, int slot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(slot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag, value, slot);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddTexture
void LIV::SDK::Unity::SDKBridge::AddTexture(::LIV::SDK::Unity::SDKTexture texture, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(tag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetObjectTime
uint64_t LIV::SDK::Unity::SDKBridge::GetObjectTime(::System::IntPtr objectptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetObjectTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetObjectTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectptr)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectptr);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetCurrentTime
uint64_t LIV::SDK::Unity::SDKBridge::GetCurrentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetCurrentTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetCurrentTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.IssuePluginEvent
void LIV::SDK::Unity::SDKBridge::IssuePluginEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::IssuePluginEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "IssuePluginEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.SubmitApplicationOutput
void LIV::SDK::Unity::SDKBridge::SubmitApplicationOutput(::LIV::SDK::Unity::SDKApplicationOutput applicationOutput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::SubmitApplicationOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "SubmitApplicationOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(applicationOutput)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, applicationOutput);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.UpdateInputFrame
bool LIV::SDK::Unity::SDKBridge::UpdateInputFrame(ByRef<::LIV::SDK::Unity::SDKInputFrame> setframe) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::UpdateInputFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "UpdateInputFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(setframe)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(setframe));
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetViewfinderTexture
::LIV::SDK::Unity::SDKTexture LIV::SDK::Unity::SDKBridge::GetViewfinderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetViewfinderTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetViewfinderTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKTexture, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddTexture
void LIV::SDK::Unity::SDKBridge::AddTexture(::LIV::SDK::Unity::SDKTexture texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.CreateFrame
void LIV::SDK::Unity::SDKBridge::CreateFrame(::LIV::SDK::Unity::SDKOutputFrame frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::CreateFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "CreateFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frame);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.SetGroundPlane
void LIV::SDK::Unity::SDKBridge::SetGroundPlane(::LIV::SDK::Unity::SDKPlane groundPlane) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::SetGroundPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "SetGroundPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groundPlane)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groundPlane);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetResolution
bool LIV::SDK::Unity::SDKBridge::GetResolution(ByRef<::LIV::SDK::Unity::SDKResolution> sdkResolution) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sdkResolution)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sdkResolution));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKRender
#include "LIV/SDK/Unity/SDKRender.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: LIV.SDK.Unity.LIV
#include "LIV/SDK/Unity/LIV.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Rendering.ColorWriteMask
#include "UnityEngine/Rendering/ColorWriteMask.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Plane
#include "UnityEngine/Plane.hpp"
// Including type: LIV.SDK.Unity.TEXTURE_ID
#include "LIV/SDK/Unity/TEXTURE_ID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _clipPlaneCommandBuffer
::UnityEngine::Rendering::CommandBuffer*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneCommandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneCommandBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _combineAlphaCommandBuffer
::UnityEngine::Rendering::CommandBuffer*& LIV::SDK::Unity::SDKRender::dyn__combineAlphaCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__combineAlphaCommandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_combineAlphaCommandBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _captureTextureCommandBuffer
::UnityEngine::Rendering::CommandBuffer*& LIV::SDK::Unity::SDKRender::dyn__captureTextureCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__captureTextureCommandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_captureTextureCommandBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _applyTextureCommandBuffer
::UnityEngine::Rendering::CommandBuffer*& LIV::SDK::Unity::SDKRender::dyn__applyTextureCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__applyTextureCommandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_applyTextureCommandBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _optimizedRenderingCommandBuffer
::UnityEngine::Rendering::CommandBuffer*& LIV::SDK::Unity::SDKRender::dyn__optimizedRenderingCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__optimizedRenderingCommandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optimizedRenderingCommandBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CameraEvent _clipPlaneCameraEvent
::UnityEngine::Rendering::CameraEvent& LIV::SDK::Unity::SDKRender::dyn__clipPlaneCameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneCameraEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneCameraEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CameraEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CameraEvent _optimizedRenderingCameraEvent
::UnityEngine::Rendering::CameraEvent& LIV::SDK::Unity::SDKRender::dyn__optimizedRenderingCameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__optimizedRenderingCameraEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optimizedRenderingCameraEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CameraEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _clipPlaneMesh
::UnityEngine::Mesh*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _clipPlaneSimpleMaterial
::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneSimpleMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneSimpleMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneSimpleMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _clipPlaneSimpleDebugMaterial
::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneSimpleDebugMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneSimpleDebugMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneSimpleDebugMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _clipPlaneComplexMaterial
::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneComplexMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneComplexMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneComplexMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _clipPlaneComplexDebugMaterial
::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneComplexDebugMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneComplexDebugMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneComplexDebugMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _writeOpaqueToAlphaMaterial
::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__writeOpaqueToAlphaMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__writeOpaqueToAlphaMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeOpaqueToAlphaMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _combineAlphaMaterial
::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__combineAlphaMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__combineAlphaMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_combineAlphaMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _writeMaterial
::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__writeMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__writeMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _forceForwardRenderingMaterial
::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__forceForwardRenderingMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__forceForwardRenderingMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forceForwardRenderingMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _backgroundRenderTexture
::UnityEngine::RenderTexture*& LIV::SDK::Unity::SDKRender::dyn__backgroundRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__backgroundRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _foregroundRenderTexture
::UnityEngine::RenderTexture*& LIV::SDK::Unity::SDKRender::dyn__foregroundRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__foregroundRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_foregroundRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _optimizedRenderTexture
::UnityEngine::RenderTexture*& LIV::SDK::Unity::SDKRender::dyn__optimizedRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__optimizedRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optimizedRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _complexClipPlaneRenderTexture
::UnityEngine::RenderTexture*& LIV::SDK::Unity::SDKRender::dyn__complexClipPlaneRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__complexClipPlaneRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_complexClipPlaneRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.LIV _liv
::LIV::SDK::Unity::LIV*& LIV::SDK::Unity::SDKRender::dyn__liv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__liv");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_liv"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::LIV**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.SDKOutputFrame _outputFrame
::LIV::SDK::Unity::SDKOutputFrame& LIV::SDK::Unity::SDKRender::dyn__outputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__outputFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outputFrame"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKOutputFrame*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.SDKInputFrame _inputFrame
::LIV::SDK::Unity::SDKInputFrame& LIV::SDK::Unity::SDKRender::dyn__inputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__inputFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputFrame"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKInputFrame*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.SDKResolution _resolution
::LIV::SDK::Unity::SDKResolution& LIV::SDK::Unity::SDKRender::dyn__resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__resolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resolution"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKResolution*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _cameraInstance
::UnityEngine::Camera*& LIV::SDK::Unity::SDKRender::dyn__cameraInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__cameraInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraInstance"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.SDKPose _requestedPose
::LIV::SDK::Unity::SDKPose& LIV::SDK::Unity::SDKRender::dyn__requestedPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__requestedPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestedPose"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKPose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _requestedPoseFrameIndex
int& LIV::SDK::Unity::SDKRender::dyn__requestedPoseFrameIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__requestedPoseFrameIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestedPoseFrameIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_useDeferredRendering
bool LIV::SDK::Unity::SDKRender::get_useDeferredRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_useDeferredRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useDeferredRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_interlacedRendering
bool LIV::SDK::Unity::SDKRender::get_interlacedRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_interlacedRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interlacedRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_canRenderBackground
bool LIV::SDK::Unity::SDKRender::get_canRenderBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_canRenderBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canRenderBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_canRenderForeground
bool LIV::SDK::Unity::SDKRender::get_canRenderForeground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_canRenderForeground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canRenderForeground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_canRenderOptimized
bool LIV::SDK::Unity::SDKRender::get_canRenderOptimized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_canRenderOptimized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canRenderOptimized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_liv
::LIV::SDK::Unity::LIV* LIV::SDK::Unity::SDKRender::get_liv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_liv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_liv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::LIV*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_outputFrame
::LIV::SDK::Unity::SDKOutputFrame LIV::SDK::Unity::SDKRender::get_outputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_outputFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKOutputFrame, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_inputFrame
::LIV::SDK::Unity::SDKInputFrame LIV::SDK::Unity::SDKRender::get_inputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_inputFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKInputFrame, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_resolution
::LIV::SDK::Unity::SDKResolution LIV::SDK::Unity::SDKRender::get_resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_resolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKResolution, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_cameraInstance
::UnityEngine::Camera* LIV::SDK::Unity::SDKRender::get_cameraInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_cameraInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cameraInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_cameraReference
::UnityEngine::Camera* LIV::SDK::Unity::SDKRender::get_cameraReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_cameraReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cameraReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_hmdCamera
::UnityEngine::Camera* LIV::SDK::Unity::SDKRender::get_hmdCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_hmdCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hmdCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_stage
::UnityEngine::Transform* LIV::SDK::Unity::SDKRender::get_stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_stage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_stageTransform
::UnityEngine::Transform* LIV::SDK::Unity::SDKRender::get_stageTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_stageTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stageTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_stageLocalToWorldMatrix
::UnityEngine::Matrix4x4 LIV::SDK::Unity::SDKRender::get_stageLocalToWorldMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_stageLocalToWorldMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stageLocalToWorldMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_localToWorldMatrix
::UnityEngine::Matrix4x4 LIV::SDK::Unity::SDKRender::get_localToWorldMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_localToWorldMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localToWorldMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_spectatorLayerMask
int LIV::SDK::Unity::SDKRender::get_spectatorLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_spectatorLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spectatorLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_disableStandardAssets
bool LIV::SDK::Unity::SDKRender::get_disableStandardAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_disableStandardAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disableStandardAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_canSetPose
bool LIV::SDK::Unity::SDKRender::get_canSetPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_canSetPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canSetPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.GetClipPlaneMaterial
::UnityEngine::Material* LIV::SDK::Unity::SDKRender::GetClipPlaneMaterial(bool debugClipPlane, bool complexClipPlane, ::UnityEngine::Rendering::ColorWriteMask colorWriteMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::GetClipPlaneMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipPlaneMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(debugClipPlane), ::il2cpp_utils::ExtractType(complexClipPlane), ::il2cpp_utils::ExtractType(colorWriteMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, debugClipPlane, complexClipPlane, colorWriteMask);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.GetGroundClipPlaneMaterial
::UnityEngine::Material* LIV::SDK::Unity::SDKRender::GetGroundClipPlaneMaterial(bool debugClipPlane, ::UnityEngine::Rendering::ColorWriteMask colorWriteMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::GetGroundClipPlaneMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGroundClipPlaneMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(debugClipPlane), ::il2cpp_utils::ExtractType(colorWriteMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, debugClipPlane, colorWriteMask);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.Render
void LIV::SDK::Unity::SDKRender::Render() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::Render");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.RenderBackground
void LIV::SDK::Unity::SDKRender::RenderBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::RenderBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.RenderForeground
void LIV::SDK::Unity::SDKRender::RenderForeground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::RenderForeground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderForeground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.RenderOptimized
void LIV::SDK::Unity::SDKRender::RenderOptimized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::RenderOptimized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderOptimized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.CreateAssets
void LIV::SDK::Unity::SDKRender::CreateAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::CreateAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.DestroyAssets
void LIV::SDK::Unity::SDKRender::DestroyAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::DestroyAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.Dispose
void LIV::SDK::Unity::SDKRender::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.SetPose
bool LIV::SDK::Unity::SDKRender::SetPose(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, float verticalFieldOfView, bool useLocalSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::SetPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(verticalFieldOfView), ::il2cpp_utils::ExtractType(useLocalSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, position, rotation, verticalFieldOfView, useLocalSpace);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.SetGroundPlane
void LIV::SDK::Unity::SDKRender::SetGroundPlane(float distance, ::UnityEngine::Vector3 normal, bool useLocalSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::SetGroundPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGroundPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(useLocalSpace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, distance, normal, useLocalSpace);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.SetGroundPlane
void LIV::SDK::Unity::SDKRender::SetGroundPlane(::UnityEngine::Plane plane, bool useLocalSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::SetGroundPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGroundPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plane), ::il2cpp_utils::ExtractType(useLocalSpace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, plane, useLocalSpace);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.SetGroundPlane
void LIV::SDK::Unity::SDKRender::SetGroundPlane(::UnityEngine::Transform* transform, bool useLocalSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::SetGroundPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGroundPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(useLocalSpace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform, useLocalSpace);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.ReleaseBridgePoseControl
void LIV::SDK::Unity::SDKRender::ReleaseBridgePoseControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::ReleaseBridgePoseControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseBridgePoseControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.UpdateBridgeResolution
void LIV::SDK::Unity::SDKRender::UpdateBridgeResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::UpdateBridgeResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBridgeResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.UpdateBridgeInputFrame
void LIV::SDK::Unity::SDKRender::UpdateBridgeInputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::UpdateBridgeInputFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBridgeInputFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.InvokePreRender
void LIV::SDK::Unity::SDKRender::InvokePreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::InvokePreRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.IvokePostRender
void LIV::SDK::Unity::SDKRender::IvokePostRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::IvokePostRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IvokePostRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.InvokePreRenderBackground
void LIV::SDK::Unity::SDKRender::InvokePreRenderBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::InvokePreRenderBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePreRenderBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.InvokePostRenderBackground
void LIV::SDK::Unity::SDKRender::InvokePostRenderBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::InvokePostRenderBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePostRenderBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.InvokePreRenderForeground
void LIV::SDK::Unity::SDKRender::InvokePreRenderForeground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::InvokePreRenderForeground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePreRenderForeground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.InvokePostRenderForeground
void LIV::SDK::Unity::SDKRender::InvokePostRenderForeground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::InvokePostRenderForeground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePostRenderForeground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.CreateBackgroundTexture
void LIV::SDK::Unity::SDKRender::CreateBackgroundTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::CreateBackgroundTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBackgroundTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.CreateForegroundTexture
void LIV::SDK::Unity::SDKRender::CreateForegroundTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::CreateForegroundTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateForegroundTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.CreateOptimizedTexture
void LIV::SDK::Unity::SDKRender::CreateOptimizedTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::CreateOptimizedTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOptimizedTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.CreateComplexClipPlaneTexture
void LIV::SDK::Unity::SDKRender::CreateComplexClipPlaneTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::CreateComplexClipPlaneTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateComplexClipPlaneTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.UpdateTextures
void LIV::SDK::Unity::SDKRender::UpdateTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::UpdateTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.SendTextureToBridge
void LIV::SDK::Unity::SDKRender::SendTextureToBridge(::UnityEngine::RenderTexture* texture, ::LIV::SDK::Unity::TEXTURE_ID id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::SendTextureToBridge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendTextureToBridge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, texture, id);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKShaders
#include "LIV/SDK/Unity/SDKShaders.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 LIV_COLOR_MASK
int LIV::SDK::Unity::SDKShaders::_get_LIV_COLOR_MASK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_COLOR_MASK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LIV.SDK.Unity", "SDKShaders", "LIV_COLOR_MASK"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 LIV_COLOR_MASK
void LIV::SDK::Unity::SDKShaders::_set_LIV_COLOR_MASK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_COLOR_MASK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_COLOR_MASK", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 LIV_TESSELLATION_PROPERTY
int LIV::SDK::Unity::SDKShaders::_get_LIV_TESSELLATION_PROPERTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_TESSELLATION_PROPERTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LIV.SDK.Unity", "SDKShaders", "LIV_TESSELLATION_PROPERTY"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 LIV_TESSELLATION_PROPERTY
void LIV::SDK::Unity::SDKShaders::_set_LIV_TESSELLATION_PROPERTY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_TESSELLATION_PROPERTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_TESSELLATION_PROPERTY", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY
int LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY
void LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_MR_FOREGROUND_KEYWORD
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_MR_FOREGROUND_KEYWORD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_MR_FOREGROUND_KEYWORD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_MR_FOREGROUND_KEYWORD"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_MR_FOREGROUND_KEYWORD
void LIV::SDK::Unity::SDKShaders::_set_LIV_MR_FOREGROUND_KEYWORD(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_MR_FOREGROUND_KEYWORD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_MR_FOREGROUND_KEYWORD", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_MR_BACKGROUND_KEYWORD
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_MR_BACKGROUND_KEYWORD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_MR_BACKGROUND_KEYWORD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_MR_BACKGROUND_KEYWORD"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_MR_BACKGROUND_KEYWORD
void LIV::SDK::Unity::SDKShaders::_set_LIV_MR_BACKGROUND_KEYWORD(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_MR_BACKGROUND_KEYWORD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_MR_BACKGROUND_KEYWORD", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_MR_KEYWORD
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_MR_KEYWORD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_MR_KEYWORD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_MR_KEYWORD"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_MR_KEYWORD
void LIV::SDK::Unity::SDKShaders::_set_LIV_MR_KEYWORD(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_MR_KEYWORD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_MR_KEYWORD", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_CLIP_PLANE_SIMPLE_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_SIMPLE_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_SIMPLE_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_SIMPLE_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_CLIP_PLANE_SIMPLE_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_SIMPLE_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_SIMPLE_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_SIMPLE_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_CLIP_PLANE_COMPLEX_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_COMPLEX_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_COMPLEX_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_COMPLEX_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_CLIP_PLANE_COMPLEX_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_COMPLEX_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_COMPLEX_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_COMPLEX_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_WRITE_OPAQUE_TO_ALPHA_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_WRITE_OPAQUE_TO_ALPHA_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_WRITE_OPAQUE_TO_ALPHA_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_WRITE_OPAQUE_TO_ALPHA_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_WRITE_OPAQUE_TO_ALPHA_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_WRITE_OPAQUE_TO_ALPHA_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_WRITE_OPAQUE_TO_ALPHA_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_WRITE_OPAQUE_TO_ALPHA_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_COMBINE_ALPHA_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_COMBINE_ALPHA_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_COMBINE_ALPHA_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_COMBINE_ALPHA_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_COMBINE_ALPHA_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_COMBINE_ALPHA_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_COMBINE_ALPHA_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_COMBINE_ALPHA_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_WRITE_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_WRITE_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_WRITE_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_WRITE_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_WRITE_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_WRITE_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_WRITE_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_WRITE_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_FORCE_FORWARD_RENDERING_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_FORCE_FORWARD_RENDERING_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_FORCE_FORWARD_RENDERING_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_FORCE_FORWARD_RENDERING_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_FORCE_FORWARD_RENDERING_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_FORCE_FORWARD_RENDERING_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_FORCE_FORWARD_RENDERING_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_FORCE_FORWARD_RENDERING_SHADER", value));
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders..cctor
void LIV::SDK::Unity::SDKShaders::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StartRendering
void LIV::SDK::Unity::SDKShaders::StartRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::StartRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StartRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StopRendering
void LIV::SDK::Unity::SDKShaders::StopRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::StopRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StopRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StartForegroundRendering
void LIV::SDK::Unity::SDKShaders::StartForegroundRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::StartForegroundRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StartForegroundRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StopForegroundRendering
void LIV::SDK::Unity::SDKShaders::StopForegroundRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::StopForegroundRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StopForegroundRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StartBackgroundRendering
void LIV::SDK::Unity::SDKShaders::StartBackgroundRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::StartBackgroundRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StartBackgroundRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StopBackgroundRendering
void LIV::SDK::Unity::SDKShaders::StopBackgroundRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::StopBackgroundRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StopBackgroundRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKConstants
#include "LIV/SDK/Unity/SDKConstants.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String SDK_ID
::StringW LIV::SDK::Unity::SDKConstants::_get_SDK_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKConstants::_get_SDK_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKConstants", "SDK_ID"));
}
// Autogenerated static field setter
// Set static field: static public System.String SDK_ID
void LIV::SDK::Unity::SDKConstants::_set_SDK_ID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKConstants::_set_SDK_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKConstants", "SDK_ID", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SDK_VERSION
::StringW LIV::SDK::Unity::SDKConstants::_get_SDK_VERSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKConstants::_get_SDK_VERSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKConstants", "SDK_VERSION"));
}
// Autogenerated static field setter
// Set static field: static public System.String SDK_VERSION
void LIV::SDK::Unity::SDKConstants::_set_SDK_VERSION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKConstants::_set_SDK_VERSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKConstants", "SDK_VERSION", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ENGINE_NAME
::StringW LIV::SDK::Unity::SDKConstants::_get_ENGINE_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKConstants::_get_ENGINE_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKConstants", "ENGINE_NAME"));
}
// Autogenerated static field setter
// Set static field: static public System.String ENGINE_NAME
void LIV::SDK::Unity::SDKConstants::_set_ENGINE_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKConstants::_set_ENGINE_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKConstants", "ENGINE_NAME", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.PRIORITY
#include "LIV/SDK/Unity/PRIORITY.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.PRIORITY NONE
::LIV::SDK::Unity::PRIORITY LIV::SDK::Unity::PRIORITY::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::PRIORITY::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::PRIORITY>("LIV.SDK.Unity", "PRIORITY", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.PRIORITY NONE
void LIV::SDK::Unity::PRIORITY::_set_NONE(::LIV::SDK::Unity::PRIORITY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::PRIORITY::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "PRIORITY", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.PRIORITY GAME
::LIV::SDK::Unity::PRIORITY LIV::SDK::Unity::PRIORITY::_get_GAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::PRIORITY::_get_GAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::PRIORITY>("LIV.SDK.Unity", "PRIORITY", "GAME"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.PRIORITY GAME
void LIV::SDK::Unity::PRIORITY::_set_GAME(::LIV::SDK::Unity::PRIORITY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::PRIORITY::_set_GAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "PRIORITY", "GAME", value));
}
// Autogenerated instance field getter
// Get instance field: public System.SByte value__
int8_t& LIV::SDK::Unity::PRIORITY::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::PRIORITY::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.FEATURES
#include "LIV/SDK/Unity/FEATURES.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES NONE
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES NONE
void LIV::SDK::Unity::FEATURES::_set_NONE(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES BACKGROUND_RENDER
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_BACKGROUND_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_BACKGROUND_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "BACKGROUND_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES BACKGROUND_RENDER
void LIV::SDK::Unity::FEATURES::_set_BACKGROUND_RENDER(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_BACKGROUND_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "BACKGROUND_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES FOREGROUND_RENDER
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_FOREGROUND_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_FOREGROUND_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "FOREGROUND_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES FOREGROUND_RENDER
void LIV::SDK::Unity::FEATURES::_set_FOREGROUND_RENDER(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_FOREGROUND_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "FOREGROUND_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES COMPLEX_CLIP_PLANE
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_COMPLEX_CLIP_PLANE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_COMPLEX_CLIP_PLANE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "COMPLEX_CLIP_PLANE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES COMPLEX_CLIP_PLANE
void LIV::SDK::Unity::FEATURES::_set_COMPLEX_CLIP_PLANE(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_COMPLEX_CLIP_PLANE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "COMPLEX_CLIP_PLANE", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES BACKGROUND_DEPTH_RENDER
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_BACKGROUND_DEPTH_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_BACKGROUND_DEPTH_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "BACKGROUND_DEPTH_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES BACKGROUND_DEPTH_RENDER
void LIV::SDK::Unity::FEATURES::_set_BACKGROUND_DEPTH_RENDER(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_BACKGROUND_DEPTH_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "BACKGROUND_DEPTH_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES OVERRIDE_POST_PROCESSING
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_OVERRIDE_POST_PROCESSING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_OVERRIDE_POST_PROCESSING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "OVERRIDE_POST_PROCESSING"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES OVERRIDE_POST_PROCESSING
void LIV::SDK::Unity::FEATURES::_set_OVERRIDE_POST_PROCESSING(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_OVERRIDE_POST_PROCESSING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "OVERRIDE_POST_PROCESSING", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES FIX_FOREGROUND_ALPHA
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_FIX_FOREGROUND_ALPHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_FIX_FOREGROUND_ALPHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "FIX_FOREGROUND_ALPHA"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES FIX_FOREGROUND_ALPHA
void LIV::SDK::Unity::FEATURES::_set_FIX_FOREGROUND_ALPHA(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_FIX_FOREGROUND_ALPHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "FIX_FOREGROUND_ALPHA", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES GROUND_CLIP_PLANE
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_GROUND_CLIP_PLANE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_GROUND_CLIP_PLANE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "GROUND_CLIP_PLANE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES GROUND_CLIP_PLANE
void LIV::SDK::Unity::FEATURES::_set_GROUND_CLIP_PLANE(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_GROUND_CLIP_PLANE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "GROUND_CLIP_PLANE", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES RELEASE_CONTROL
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_RELEASE_CONTROL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_RELEASE_CONTROL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "RELEASE_CONTROL"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES RELEASE_CONTROL
void LIV::SDK::Unity::FEATURES::_set_RELEASE_CONTROL(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_RELEASE_CONTROL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "RELEASE_CONTROL", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES OPTIMIZED_RENDER
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_OPTIMIZED_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_OPTIMIZED_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "OPTIMIZED_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES OPTIMIZED_RENDER
void LIV::SDK::Unity::FEATURES::_set_OPTIMIZED_RENDER(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_OPTIMIZED_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "OPTIMIZED_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES INTERLACED_RENDER
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_INTERLACED_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_INTERLACED_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "INTERLACED_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES INTERLACED_RENDER
void LIV::SDK::Unity::FEATURES::_set_INTERLACED_RENDER(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_INTERLACED_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "INTERLACED_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES DEBUG_CLIP_PLANE
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_DEBUG_CLIP_PLANE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_DEBUG_CLIP_PLANE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "DEBUG_CLIP_PLANE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES DEBUG_CLIP_PLANE
void LIV::SDK::Unity::FEATURES::_set_DEBUG_CLIP_PLANE(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_DEBUG_CLIP_PLANE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "DEBUG_CLIP_PLANE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 value__
uint64_t& LIV::SDK::Unity::FEATURES::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.TEXTURE_ID
#include "LIV/SDK/Unity/TEXTURE_ID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_ID UNDEFINED
::LIV::SDK::Unity::TEXTURE_ID LIV::SDK::Unity::TEXTURE_ID::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_ID>("LIV.SDK.Unity", "TEXTURE_ID", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_ID UNDEFINED
void LIV::SDK::Unity::TEXTURE_ID::_set_UNDEFINED(::LIV::SDK::Unity::TEXTURE_ID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_ID", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_ID BACKGROUND_COLOR_BUFFER_ID
::LIV::SDK::Unity::TEXTURE_ID LIV::SDK::Unity::TEXTURE_ID::_get_BACKGROUND_COLOR_BUFFER_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_get_BACKGROUND_COLOR_BUFFER_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_ID>("LIV.SDK.Unity", "TEXTURE_ID", "BACKGROUND_COLOR_BUFFER_ID"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_ID BACKGROUND_COLOR_BUFFER_ID
void LIV::SDK::Unity::TEXTURE_ID::_set_BACKGROUND_COLOR_BUFFER_ID(::LIV::SDK::Unity::TEXTURE_ID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_set_BACKGROUND_COLOR_BUFFER_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_ID", "BACKGROUND_COLOR_BUFFER_ID", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_ID FOREGROUND_COLOR_BUFFER_ID
::LIV::SDK::Unity::TEXTURE_ID LIV::SDK::Unity::TEXTURE_ID::_get_FOREGROUND_COLOR_BUFFER_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_get_FOREGROUND_COLOR_BUFFER_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_ID>("LIV.SDK.Unity", "TEXTURE_ID", "FOREGROUND_COLOR_BUFFER_ID"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_ID FOREGROUND_COLOR_BUFFER_ID
void LIV::SDK::Unity::TEXTURE_ID::_set_FOREGROUND_COLOR_BUFFER_ID(::LIV::SDK::Unity::TEXTURE_ID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_set_FOREGROUND_COLOR_BUFFER_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_ID", "FOREGROUND_COLOR_BUFFER_ID", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_ID OPTIMIZED_COLOR_BUFFER_ID
::LIV::SDK::Unity::TEXTURE_ID LIV::SDK::Unity::TEXTURE_ID::_get_OPTIMIZED_COLOR_BUFFER_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_get_OPTIMIZED_COLOR_BUFFER_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_ID>("LIV.SDK.Unity", "TEXTURE_ID", "OPTIMIZED_COLOR_BUFFER_ID"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_ID OPTIMIZED_COLOR_BUFFER_ID
void LIV::SDK::Unity::TEXTURE_ID::_set_OPTIMIZED_COLOR_BUFFER_ID(::LIV::SDK::Unity::TEXTURE_ID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_set_OPTIMIZED_COLOR_BUFFER_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_ID", "OPTIMIZED_COLOR_BUFFER_ID", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& LIV::SDK::Unity::TEXTURE_ID::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.TEXTURE_TYPE
#include "LIV/SDK/Unity/TEXTURE_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_TYPE UNDEFINED
::LIV::SDK::Unity::TEXTURE_TYPE LIV::SDK::Unity::TEXTURE_TYPE::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_TYPE::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_TYPE>("LIV.SDK.Unity", "TEXTURE_TYPE", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_TYPE UNDEFINED
void LIV::SDK::Unity::TEXTURE_TYPE::_set_UNDEFINED(::LIV::SDK::Unity::TEXTURE_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_TYPE::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_TYPE", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_TYPE COLOR_BUFFER
::LIV::SDK::Unity::TEXTURE_TYPE LIV::SDK::Unity::TEXTURE_TYPE::_get_COLOR_BUFFER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_TYPE::_get_COLOR_BUFFER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_TYPE>("LIV.SDK.Unity", "TEXTURE_TYPE", "COLOR_BUFFER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_TYPE COLOR_BUFFER
void LIV::SDK::Unity::TEXTURE_TYPE::_set_COLOR_BUFFER(::LIV::SDK::Unity::TEXTURE_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_TYPE::_set_COLOR_BUFFER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_TYPE", "COLOR_BUFFER", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& LIV::SDK::Unity::TEXTURE_TYPE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_TYPE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.TEXTURE_FORMAT
#include "LIV/SDK/Unity/TEXTURE_FORMAT.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_FORMAT UNDEFINED
::LIV::SDK::Unity::TEXTURE_FORMAT LIV::SDK::Unity::TEXTURE_FORMAT::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_FORMAT::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_FORMAT>("LIV.SDK.Unity", "TEXTURE_FORMAT", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_FORMAT UNDEFINED
void LIV::SDK::Unity::TEXTURE_FORMAT::_set_UNDEFINED(::LIV::SDK::Unity::TEXTURE_FORMAT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_FORMAT::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_FORMAT", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_FORMAT ARGB32
::LIV::SDK::Unity::TEXTURE_FORMAT LIV::SDK::Unity::TEXTURE_FORMAT::_get_ARGB32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_FORMAT::_get_ARGB32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_FORMAT>("LIV.SDK.Unity", "TEXTURE_FORMAT", "ARGB32"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_FORMAT ARGB32
void LIV::SDK::Unity::TEXTURE_FORMAT::_set_ARGB32(::LIV::SDK::Unity::TEXTURE_FORMAT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_FORMAT::_set_ARGB32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_FORMAT", "ARGB32", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& LIV::SDK::Unity::TEXTURE_FORMAT::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_FORMAT::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.TEXTURE_DEVICE
#include "LIV/SDK/Unity/TEXTURE_DEVICE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE UNDEFINED
::LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE UNDEFINED
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_UNDEFINED(::LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE RAW
::LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_RAW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_get_RAW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "RAW"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE RAW
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_RAW(::LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_set_RAW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "RAW", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE DIRECTX
::LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_DIRECTX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_get_DIRECTX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "DIRECTX"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE DIRECTX
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_DIRECTX(::LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_set_DIRECTX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "DIRECTX", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE OPENGL
::LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_OPENGL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_get_OPENGL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "OPENGL"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE OPENGL
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_OPENGL(::LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_set_OPENGL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "OPENGL", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE VULKAN
::LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_VULKAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_get_VULKAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "VULKAN"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE VULKAN
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_VULKAN(::LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_set_VULKAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "VULKAN", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE METAL
::LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_METAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_get_METAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "METAL"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE METAL
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_METAL(::LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_set_METAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "METAL", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& LIV::SDK::Unity::TEXTURE_DEVICE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.TEXTURE_COLOR_SPACE
#include "LIV/SDK/Unity/TEXTURE_COLOR_SPACE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE UNDEFINED
::LIV::SDK::Unity::TEXTURE_COLOR_SPACE LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_COLOR_SPACE>("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE UNDEFINED
void LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_UNDEFINED(::LIV::SDK::Unity::TEXTURE_COLOR_SPACE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE LINEAR
::LIV::SDK::Unity::TEXTURE_COLOR_SPACE LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_LINEAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_LINEAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_COLOR_SPACE>("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "LINEAR"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE LINEAR
void LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_LINEAR(::LIV::SDK::Unity::TEXTURE_COLOR_SPACE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_LINEAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "LINEAR", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE SRGB
::LIV::SDK::Unity::TEXTURE_COLOR_SPACE LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_SRGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_SRGB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_COLOR_SPACE>("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "SRGB"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE SRGB
void LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_SRGB(::LIV::SDK::Unity::TEXTURE_COLOR_SPACE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_SRGB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "SRGB", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& LIV::SDK::Unity::TEXTURE_COLOR_SPACE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.RENDERING_PIPELINE
#include "LIV/SDK/Unity/RENDERING_PIPELINE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE UNDEFINED
::LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE UNDEFINED
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_UNDEFINED(::LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE FORWARD
::LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_FORWARD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_get_FORWARD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "FORWARD"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE FORWARD
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_FORWARD(::LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_set_FORWARD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "FORWARD", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE DEFERRED
::LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_DEFERRED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_get_DEFERRED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "DEFERRED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE DEFERRED
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_DEFERRED(::LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_set_DEFERRED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "DEFERRED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE VERTEX_LIT
::LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_VERTEX_LIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_get_VERTEX_LIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "VERTEX_LIT"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE VERTEX_LIT
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_VERTEX_LIT(::LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_set_VERTEX_LIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "VERTEX_LIT", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE UNIVERSAL
::LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_UNIVERSAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_get_UNIVERSAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "UNIVERSAL"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE UNIVERSAL
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_UNIVERSAL(::LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_set_UNIVERSAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "UNIVERSAL", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE HIGH_DEFINITION
::LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_HIGH_DEFINITION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_get_HIGH_DEFINITION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "HIGH_DEFINITION"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE HIGH_DEFINITION
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_HIGH_DEFINITION(::LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_set_HIGH_DEFINITION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "HIGH_DEFINITION", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& LIV::SDK::Unity::RENDERING_PIPELINE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKResolution
#include "LIV/SDK/Unity/SDKResolution.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 width
int& LIV::SDK::Unity::SDKResolution::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKResolution::dyn_width");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 height
int& LIV::SDK::Unity::SDKResolution::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKResolution::dyn_height");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKResolution.get_zero
::LIV::SDK::Unity::SDKResolution LIV::SDK::Unity::SDKResolution::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKResolution::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKResolution", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKResolution, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKResolution.ToString
::StringW LIV::SDK::Unity::SDKResolution::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKResolution::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKVector3
#include "LIV/SDK/Unity/SDKVector3.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single x
float& LIV::SDK::Unity::SDKVector3::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
float& LIV::SDK::Unity::SDKVector3::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single z
float& LIV::SDK::Unity::SDKVector3::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.get_zero
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::SDKVector3::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.get_one
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::SDKVector3::get_one() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::get_one");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "get_one", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.get_forward
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::SDKVector3::get_forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::get_forward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "get_forward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.get_up
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::SDKVector3::get_up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::get_up");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "get_up", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.get_right
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::SDKVector3::get_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::get_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "get_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.ToString
::StringW LIV::SDK::Unity::SDKVector3::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.op_Addition
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator+(const ::LIV::SDK::Unity::SDKVector3& lhs, const ::LIV::SDK::Unity::SDKVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.op_Subtraction
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator-(const ::LIV::SDK::Unity::SDKVector3& lhs, const ::LIV::SDK::Unity::SDKVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.op_Multiply
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator*(const ::LIV::SDK::Unity::SDKVector3& lhs, const ::LIV::SDK::Unity::SDKVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.op_Multiply
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator*(const ::LIV::SDK::Unity::SDKVector3& lhs, const float& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKQuaternion
#include "LIV/SDK/Unity/SDKQuaternion.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: LIV.SDK.Unity.SDKVector3
#include "LIV/SDK/Unity/SDKVector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single x
float& LIV::SDK::Unity::SDKQuaternion::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
float& LIV::SDK::Unity::SDKQuaternion::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single z
float& LIV::SDK::Unity::SDKQuaternion::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single w
float& LIV::SDK::Unity::SDKQuaternion::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::dyn_w");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKQuaternion.get_identity
::LIV::SDK::Unity::SDKQuaternion LIV::SDK::Unity::SDKQuaternion::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKQuaternion", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKQuaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKQuaternion.Euler
::LIV::SDK::Unity::SDKQuaternion LIV::SDK::Unity::SDKQuaternion::Euler(float pitch, float yaw, float roll) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::Euler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKQuaternion", "Euler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pitch), ::il2cpp_utils::ExtractType(yaw), ::il2cpp_utils::ExtractType(roll)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKQuaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pitch, yaw, roll);
}
// Autogenerated method: LIV.SDK.Unity.SDKQuaternion.ToString
::StringW LIV::SDK::Unity::SDKQuaternion::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKQuaternion.op_Multiply
::LIV::SDK::Unity::SDKQuaternion LIV::SDK::Unity::operator*(const ::LIV::SDK::Unity::SDKQuaternion& lhs, const ::LIV::SDK::Unity::SDKQuaternion& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKQuaternion", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKQuaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: LIV.SDK.Unity.SDKQuaternion.op_Multiply
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator*(const ::LIV::SDK::Unity::SDKQuaternion& lhs, const ::LIV::SDK::Unity::SDKVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKQuaternion", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKMatrix4x4
#include "LIV/SDK/Unity/SDKMatrix4x4.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: LIV.SDK.Unity.SDKVector3
#include "LIV/SDK/Unity/SDKVector3.hpp"
// Including type: LIV.SDK.Unity.SDKQuaternion
#include "LIV/SDK/Unity/SDKQuaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single m00
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m00() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m00");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m00"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m01
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m01() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m01");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m01"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m02
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m02() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m02");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m02"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m03
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m03() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m03");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m03"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m10
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m10"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m11
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m11"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m12
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m12");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m12"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m13
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m13");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m13"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m20
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m20");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m20"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m21
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m21() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m21");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m21"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m22
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m22() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m22");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m22"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m23
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m23() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m23");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m23"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m30
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m30() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m30");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m30"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m31
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m31() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m31");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m31"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m32
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m32");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m32"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m33
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m33() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m33");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m33"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.get_identity
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.Perspective
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::Perspective(float vFov, float aspect, float zNear, float zFar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::Perspective");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "Perspective", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vFov), ::il2cpp_utils::ExtractType(aspect), ::il2cpp_utils::ExtractType(zNear), ::il2cpp_utils::ExtractType(zFar)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vFov, aspect, zNear, zFar);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.Translate
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::Translate(::LIV::SDK::Unity::SDKVector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.Rotate
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::Rotate(::LIV::SDK::Unity::SDKQuaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.Scale
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::Scale(::LIV::SDK::Unity::SDKVector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.TRS
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::TRS(::LIV::SDK::Unity::SDKVector3 translation, ::LIV::SDK::Unity::SDKQuaternion rotation, ::LIV::SDK::Unity::SDKVector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::TRS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "TRS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(translation), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, translation, rotation, scale);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.ToString
::StringW LIV::SDK::Unity::SDKMatrix4x4::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.op_Multiply
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::operator*(const ::LIV::SDK::Unity::SDKMatrix4x4& lhs, const ::LIV::SDK::Unity::SDKMatrix4x4& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.op_Multiply
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator*(const ::LIV::SDK::Unity::SDKMatrix4x4& lhs, const ::LIV::SDK::Unity::SDKVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKPlane
#include "LIV/SDK/Unity/SDKPlane.hpp"
// Including type: UnityEngine.Plane
#include "UnityEngine/Plane.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single distance
float& LIV::SDK::Unity::SDKPlane::dyn_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPlane::dyn_distance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 normal
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKPlane::dyn_normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPlane::dyn_normal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normal"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKPlane.get_empty
::LIV::SDK::Unity::SDKPlane LIV::SDK::Unity::SDKPlane::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPlane::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKPlane", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKPlane, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKPlane.ToString
::StringW LIV::SDK::Unity::SDKPlane::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPlane::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKPriority
#include "LIV/SDK/Unity/SDKPriority.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.SByte pose
int8_t& LIV::SDK::Unity::SDKPriority::dyn_pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_pose");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pose"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte clipPlane
int8_t& LIV::SDK::Unity::SDKPriority::dyn_clipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_clipPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipPlane"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte stage
int8_t& LIV::SDK::Unity::SDKPriority::dyn_stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_stage");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stage"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte resolution
int8_t& LIV::SDK::Unity::SDKPriority::dyn_resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_resolution");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resolution"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte feature
int8_t& LIV::SDK::Unity::SDKPriority::dyn_feature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_feature");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "feature"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte nearFarAdjustment
int8_t& LIV::SDK::Unity::SDKPriority::dyn_nearFarAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_nearFarAdjustment");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearFarAdjustment"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte groundPlane
int8_t& LIV::SDK::Unity::SDKPriority::dyn_groundPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_groundPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groundPlane"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte reserved2
int8_t& LIV::SDK::Unity::SDKPriority::dyn_reserved2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_reserved2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reserved2"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKPriority.get_empty
::LIV::SDK::Unity::SDKPriority LIV::SDK::Unity::SDKPriority::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKPriority", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKPriority, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKPriority.ToString
::StringW LIV::SDK::Unity::SDKPriority::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKApplicationOutput
#include "LIV/SDK/Unity/SDKApplicationOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.FEATURES supportedFeatures
::LIV::SDK::Unity::FEATURES& LIV::SDK::Unity::SDKApplicationOutput::dyn_supportedFeatures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_supportedFeatures");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "supportedFeatures"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::FEATURES*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String engineName
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_engineName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_engineName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "engineName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String engineVersion
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_engineVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_engineVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "engineVersion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String applicationName
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_applicationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_applicationName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applicationName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String applicationVersion
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_applicationVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_applicationVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applicationVersion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String xrDeviceName
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_xrDeviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_xrDeviceName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xrDeviceName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String graphicsAPI
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_graphicsAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_graphicsAPI");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphicsAPI"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sdkID
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_sdkID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_sdkID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sdkID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sdkVersion
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_sdkVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_sdkVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sdkVersion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKApplicationOutput.get_empty
::LIV::SDK::Unity::SDKApplicationOutput LIV::SDK::Unity::SDKApplicationOutput::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKApplicationOutput", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKApplicationOutput, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKApplicationOutput.ToString
::StringW LIV::SDK::Unity::SDKApplicationOutput::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKInputFrame
#include "LIV/SDK/Unity/SDKInputFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKPose pose
::LIV::SDK::Unity::SDKPose& LIV::SDK::Unity::SDKInputFrame::dyn_pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_pose");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pose"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKPose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKClipPlane clipPlane
::LIV::SDK::Unity::SDKClipPlane& LIV::SDK::Unity::SDKInputFrame::dyn_clipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_clipPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipPlane"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKClipPlane*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKTransform stageTransform
::LIV::SDK::Unity::SDKTransform& LIV::SDK::Unity::SDKInputFrame::dyn_stageTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_stageTransform");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stageTransform"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKTransform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.FEATURES features
::LIV::SDK::Unity::FEATURES& LIV::SDK::Unity::SDKInputFrame::dyn_features() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_features");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "features"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::FEATURES*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKClipPlane groundClipPlane
::LIV::SDK::Unity::SDKClipPlane& LIV::SDK::Unity::SDKInputFrame::dyn_groundClipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_groundClipPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groundClipPlane"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKClipPlane*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 frameid
uint64_t& LIV::SDK::Unity::SDKInputFrame::dyn_frameid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_frameid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameid"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 referenceframe
uint64_t& LIV::SDK::Unity::SDKInputFrame::dyn_referenceframe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_referenceframe");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referenceframe"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKPriority priority
::LIV::SDK::Unity::SDKPriority& LIV::SDK::Unity::SDKInputFrame::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_priority");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKInputFrame.get_empty
::LIV::SDK::Unity::SDKInputFrame LIV::SDK::Unity::SDKInputFrame::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKInputFrame", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKInputFrame, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKInputFrame.ReleaseControl
void LIV::SDK::Unity::SDKInputFrame::ReleaseControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::ReleaseControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReleaseControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKInputFrame.ObtainControl
void LIV::SDK::Unity::SDKInputFrame::ObtainControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::ObtainControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ObtainControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKInputFrame.ToString
::StringW LIV::SDK::Unity::SDKInputFrame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKOutputFrame
#include "LIV/SDK/Unity/SDKOutputFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.RENDERING_PIPELINE renderingPipeline
::LIV::SDK::Unity::RENDERING_PIPELINE& LIV::SDK::Unity::SDKOutputFrame::dyn_renderingPipeline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKOutputFrame::dyn_renderingPipeline");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderingPipeline"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::RENDERING_PIPELINE*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKTrackedSpace trackedSpace
::LIV::SDK::Unity::SDKTrackedSpace& LIV::SDK::Unity::SDKOutputFrame::dyn_trackedSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKOutputFrame::dyn_trackedSpace");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpace"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKTrackedSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKOutputFrame.get_empty
::LIV::SDK::Unity::SDKOutputFrame LIV::SDK::Unity::SDKOutputFrame::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKOutputFrame::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKOutputFrame", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKOutputFrame, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKOutputFrame.ToString
::StringW LIV::SDK::Unity::SDKOutputFrame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKOutputFrame::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKTrackedSpace
#include "LIV/SDK/Unity/SDKTrackedSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 trackedSpaceWorldPosition
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpaceWorldPosition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion trackedSpaceWorldRotation
::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpaceWorldRotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 trackedSpaceLocalScale
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceLocalScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceLocalScale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpaceLocalScale"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKMatrix4x4 trackedSpaceLocalToWorldMatrix
::LIV::SDK::Unity::SDKMatrix4x4& LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceLocalToWorldMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceLocalToWorldMatrix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpaceLocalToWorldMatrix"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKMatrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKMatrix4x4 trackedSpaceWorldToLocalMatrix
::LIV::SDK::Unity::SDKMatrix4x4& LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldToLocalMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldToLocalMatrix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpaceWorldToLocalMatrix"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKMatrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKTrackedSpace.get_empty
::LIV::SDK::Unity::SDKTrackedSpace LIV::SDK::Unity::SDKTrackedSpace::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKTrackedSpace", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKTrackedSpace, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKTrackedSpace.ToString
::StringW LIV::SDK::Unity::SDKTrackedSpace::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKTexture
#include "LIV/SDK/Unity/SDKTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.TEXTURE_ID id
::LIV::SDK::Unity::TEXTURE_ID& LIV::SDK::Unity::SDKTexture::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_id");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::TEXTURE_ID*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr texturePtr
::System::IntPtr& LIV::SDK::Unity::SDKTexture::dyn_texturePtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_texturePtr");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texturePtr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr SharedHandle
::System::IntPtr& LIV::SDK::Unity::SDKTexture::dyn_SharedHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_SharedHandle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SharedHandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.TEXTURE_DEVICE device
::LIV::SDK::Unity::TEXTURE_DEVICE& LIV::SDK::Unity::SDKTexture::dyn_device() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_device");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "device"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::TEXTURE_DEVICE*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 dummy
int& LIV::SDK::Unity::SDKTexture::dyn_dummy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_dummy");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dummy"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.TEXTURE_TYPE type
::LIV::SDK::Unity::TEXTURE_TYPE& LIV::SDK::Unity::SDKTexture::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::TEXTURE_TYPE*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.TEXTURE_FORMAT format
::LIV::SDK::Unity::TEXTURE_FORMAT& LIV::SDK::Unity::SDKTexture::dyn_format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_format");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "format"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::TEXTURE_FORMAT*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.TEXTURE_COLOR_SPACE colorSpace
::LIV::SDK::Unity::TEXTURE_COLOR_SPACE& LIV::SDK::Unity::SDKTexture::dyn_colorSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_colorSpace");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorSpace"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::TEXTURE_COLOR_SPACE*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 width
int& LIV::SDK::Unity::SDKTexture::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_width");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 height
int& LIV::SDK::Unity::SDKTexture::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_height");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKTexture.get_empty
::LIV::SDK::Unity::SDKTexture LIV::SDK::Unity::SDKTexture::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKTexture", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKTexture, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKTexture.ToString
::StringW LIV::SDK::Unity::SDKTexture::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKTransform
#include "LIV/SDK/Unity/SDKTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 localPosition
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKTransform::dyn_localPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTransform::dyn_localPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPosition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion localRotation
::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKTransform::dyn_localRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTransform::dyn_localRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localRotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 localScale
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKTransform::dyn_localScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTransform::dyn_localScale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localScale"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKTransform.get_empty
::LIV::SDK::Unity::SDKTransform LIV::SDK::Unity::SDKTransform::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTransform::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKTransform", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKTransform.ToString
::StringW LIV::SDK::Unity::SDKTransform::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTransform::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKClipPlane
#include "LIV/SDK/Unity/SDKClipPlane.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKMatrix4x4 transform
::LIV::SDK::Unity::SDKMatrix4x4& LIV::SDK::Unity::SDKClipPlane::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKClipPlane::dyn_transform");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKMatrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 width
int& LIV::SDK::Unity::SDKClipPlane::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKClipPlane::dyn_width");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 height
int& LIV::SDK::Unity::SDKClipPlane::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKClipPlane::dyn_height");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tesselation
float& LIV::SDK::Unity::SDKClipPlane::dyn_tesselation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKClipPlane::dyn_tesselation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tesselation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKClipPlane.get_empty
::LIV::SDK::Unity::SDKClipPlane LIV::SDK::Unity::SDKClipPlane::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKClipPlane::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKClipPlane", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKClipPlane, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKClipPlane.ToString
::StringW LIV::SDK::Unity::SDKClipPlane::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKClipPlane::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKControllerState
#include "LIV/SDK/Unity/SDKControllerState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 hmdposition
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKControllerState::dyn_hmdposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_hmdposition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hmdposition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion hmdrotation
::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKControllerState::dyn_hmdrotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_hmdrotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hmdrotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 calibrationcameraposition
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKControllerState::dyn_calibrationcameraposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_calibrationcameraposition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calibrationcameraposition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion calibrationcamerarotation
::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKControllerState::dyn_calibrationcamerarotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_calibrationcamerarotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calibrationcamerarotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 cameraposition
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKControllerState::dyn_cameraposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_cameraposition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraposition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion camerarotation
::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKControllerState::dyn_camerarotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_camerarotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "camerarotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 leftposition
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKControllerState::dyn_leftposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_leftposition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftposition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion leftrotation
::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKControllerState::dyn_leftrotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_leftrotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftrotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 rightposition
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKControllerState::dyn_rightposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_rightposition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightposition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion rightrotation
::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKControllerState::dyn_rightrotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_rightrotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightrotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKControllerState.get_empty
::LIV::SDK::Unity::SDKControllerState LIV::SDK::Unity::SDKControllerState::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKControllerState", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKControllerState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKControllerState.ToString
::StringW LIV::SDK::Unity::SDKControllerState::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKPose
#include "LIV/SDK/Unity/SDKPose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKMatrix4x4 projectionMatrix
::LIV::SDK::Unity::SDKMatrix4x4& LIV::SDK::Unity::SDKPose::dyn_projectionMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPose::dyn_projectionMatrix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "projectionMatrix"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKMatrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 localPosition
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKPose::dyn_localPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPose::dyn_localPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPosition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion localRotation
::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKPose::dyn_localRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPose::dyn_localRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localRotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single verticalFieldOfView
float& LIV::SDK::Unity::SDKPose::dyn_verticalFieldOfView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPose::dyn_verticalFieldOfView");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verticalFieldOfView"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single nearClipPlane
float& LIV::SDK::Unity::SDKPose::dyn_nearClipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPose::dyn_nearClipPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearClipPlane"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single farClipPlane
float& LIV::SDK::Unity::SDKPose::dyn_farClipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPose::dyn_farClipPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "farClipPlane"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 unused0
int& LIV::SDK::Unity::SDKPose::dyn_unused0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPose::dyn_unused0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unused0"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 unused1
int& LIV::SDK::Unity::SDKPose::dyn_unused1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPose::dyn_unused1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unused1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKPose.get_empty
::LIV::SDK::Unity::SDKPose LIV::SDK::Unity::SDKPose::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPose::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKPose", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKPose, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKPose.ToString
::StringW LIV::SDK::Unity::SDKPose::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPose::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKUtils
#include "LIV/SDK/Unity/SDKUtils.hpp"
// Including type: LIV.SDK.Unity.TEXTURE_COLOR_SPACE
#include "LIV/SDK/Unity/TEXTURE_COLOR_SPACE.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.RenderTextureReadWrite
#include "UnityEngine/RenderTextureReadWrite.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: LIV.SDK.Unity.RENDERING_PIPELINE
#include "LIV/SDK/Unity/RENDERING_PIPELINE.hpp"
// Including type: UnityEngine.RenderingPath
#include "UnityEngine/RenderingPath.hpp"
// Including type: LIV.SDK.Unity.TEXTURE_DEVICE
#include "LIV/SDK/Unity/TEXTURE_DEVICE.hpp"
// Including type: LIV.SDK.Unity.SDKPose
#include "LIV/SDK/Unity/SDKPose.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: LIV.SDK.Unity.SDKInputFrame
#include "LIV/SDK/Unity/SDKInputFrame.hpp"
// Including type: LIV.SDK.Unity.SDKTrackedSpace
#include "LIV/SDK/Unity/SDKTrackedSpace.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.IDisposable
#include "System/IDisposable.hpp"
// Including type: UnityEngine.RenderTextureFormat
#include "UnityEngine/RenderTextureFormat.hpp"
// Including type: LIV.SDK.Unity.SDKRender
#include "LIV/SDK/Unity/SDKRender.hpp"
// Including type: LIV.SDK.Unity.FEATURES
#include "LIV/SDK/Unity/FEATURES.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LIV.SDK.Unity.SDKUtils.get_GetDefaultColorSpace
::LIV::SDK::Unity::TEXTURE_COLOR_SPACE LIV::SDK::Unity::SDKUtils::get_GetDefaultColorSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::get_GetDefaultColorSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "get_GetDefaultColorSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::TEXTURE_COLOR_SPACE, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.CreateClipPlane
void LIV::SDK::Unity::SDKUtils::CreateClipPlane(::UnityEngine::Mesh* mesh, int resX, int resY, bool useQuads, float skirtLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::CreateClipPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "CreateClipPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(resX), ::il2cpp_utils::ExtractType(resY), ::il2cpp_utils::ExtractType(useQuads), ::il2cpp_utils::ExtractType(skirtLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mesh, resX, resY, useQuads, skirtLength);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.GetReadWriteFromColorSpace
::UnityEngine::RenderTextureReadWrite LIV::SDK::Unity::SDKUtils::GetReadWriteFromColorSpace(::LIV::SDK::Unity::TEXTURE_COLOR_SPACE colorSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::GetReadWriteFromColorSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "GetReadWriteFromColorSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTextureReadWrite, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorSpace);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.GetColorSpace
::LIV::SDK::Unity::TEXTURE_COLOR_SPACE LIV::SDK::Unity::SDKUtils::GetColorSpace(::UnityEngine::RenderTexture* renderTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::GetColorSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "GetColorSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderTexture)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::TEXTURE_COLOR_SPACE, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderTexture);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.GetRenderingPipeline
::LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::SDKUtils::GetRenderingPipeline(::UnityEngine::RenderingPath renderingPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::GetRenderingPipeline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "GetRenderingPipeline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderingPath)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::RENDERING_PIPELINE, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderingPath);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.GetDevice
::LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::SDKUtils::GetDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::GetDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "GetDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::TEXTURE_DEVICE, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.ContainsFlag
bool LIV::SDK::Unity::SDKUtils::ContainsFlag(uint64_t flags, uint64_t flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::ContainsFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "ContainsFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flags, flag);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.SetFlag
uint64_t LIV::SDK::Unity::SDKUtils::SetFlag(uint64_t flags, uint64_t flag, bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::SetFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "SetFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(flag), ::il2cpp_utils::ExtractType(enabled)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flags, flag, enabled);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.GetCameraPositionAndRotation
void LIV::SDK::Unity::SDKUtils::GetCameraPositionAndRotation(::LIV::SDK::Unity::SDKPose pose, ::UnityEngine::Matrix4x4 originLocalToWorldMatrix, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::GetCameraPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "GetCameraPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pose), ::il2cpp_utils::ExtractType(originLocalToWorldMatrix), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pose, originLocalToWorldMatrix, byref(position), byref(rotation));
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.CleanCameraBehaviours
void LIV::SDK::Unity::SDKUtils::CleanCameraBehaviours(::UnityEngine::Camera* camera, ::ArrayW<::StringW> excludeBehaviours) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::CleanCameraBehaviours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "CleanCameraBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(excludeBehaviours)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, camera, excludeBehaviours);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.SetCamera
void LIV::SDK::Unity::SDKUtils::SetCamera(::UnityEngine::Camera* camera, ::UnityEngine::Transform* cameraTransform, ::LIV::SDK::Unity::SDKInputFrame inputFrame, ::UnityEngine::Matrix4x4 originLocalToWorldMatrix, int layerMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::SetCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "SetCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(cameraTransform), ::il2cpp_utils::ExtractType(inputFrame), ::il2cpp_utils::ExtractType(originLocalToWorldMatrix), ::il2cpp_utils::ExtractType(layerMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, camera, cameraTransform, inputFrame, originLocalToWorldMatrix, layerMask);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.RotateQuaternionByMatrix
::UnityEngine::Quaternion LIV::SDK::Unity::SDKUtils::RotateQuaternionByMatrix(::UnityEngine::Matrix4x4 matrix, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::RotateQuaternionByMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "RotateQuaternionByMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matrix), ::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matrix, rotation);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.GetTrackedSpace
::LIV::SDK::Unity::SDKTrackedSpace LIV::SDK::Unity::SDKUtils::GetTrackedSpace(::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::GetTrackedSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "GetTrackedSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKTrackedSpace, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.CreateTexture
bool LIV::SDK::Unity::SDKUtils::CreateTexture(ByRef<::UnityEngine::RenderTexture*> renderTexture, int width, int height, int depth, ::UnityEngine::RenderTextureFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::CreateTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "CreateTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderTexture), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(depth), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(renderTexture), width, height, depth, format);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.DestroyTexture
void LIV::SDK::Unity::SDKUtils::DestroyTexture(ByRef<::UnityEngine::RenderTexture*> _renderTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::DestroyTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "DestroyTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_renderTexture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_renderTexture));
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.ApplyUserSpaceTransform
void LIV::SDK::Unity::SDKUtils::ApplyUserSpaceTransform(::LIV::SDK::Unity::SDKRender* render) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::ApplyUserSpaceTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "ApplyUserSpaceTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(render)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, render);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.CreateBridgeOutputFrame
void LIV::SDK::Unity::SDKUtils::CreateBridgeOutputFrame(::LIV::SDK::Unity::SDKRender* render) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::CreateBridgeOutputFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "CreateBridgeOutputFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(render)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, render);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.FeatureEnabled
bool LIV::SDK::Unity::SDKUtils::FeatureEnabled(::LIV::SDK::Unity::FEATURES features, ::LIV::SDK::Unity::FEATURES feature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::FeatureEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "FeatureEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(features), ::il2cpp_utils::ExtractType(feature)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, features, feature);
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.DisableStandardAssets
void LIV::SDK::Unity::SDKUtils::DisableStandardAssets(::UnityEngine::Camera* cameraInstance, ByRef<::ArrayW<::UnityEngine::MonoBehaviour*>> behaviours, ByRef<::ArrayW<bool>> wasBehaviourEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::DisableStandardAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "DisableStandardAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraInstance), ::il2cpp_utils::ExtractType(behaviours), ::il2cpp_utils::ExtractType(wasBehaviourEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraInstance, byref(behaviours), byref(wasBehaviourEnabled));
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.RestoreStandardAssets
void LIV::SDK::Unity::SDKUtils::RestoreStandardAssets(ByRef<::ArrayW<::UnityEngine::MonoBehaviour*>> behaviours, ByRef<::ArrayW<bool>> wasBehaviourEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::RestoreStandardAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "RestoreStandardAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(behaviours), ::il2cpp_utils::ExtractType(wasBehaviourEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(behaviours), byref(wasBehaviourEnabled));
}
// Autogenerated method: LIV.SDK.Unity.SDKUtils.ForceForwardRendering
void LIV::SDK::Unity::SDKUtils::ForceForwardRendering(::UnityEngine::Camera* cameraInstance, ::UnityEngine::Mesh* clipPlaneMesh, ::UnityEngine::Material* forceForwardRenderingMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKUtils::ForceForwardRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKUtils", "ForceForwardRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraInstance), ::il2cpp_utils::ExtractType(clipPlaneMesh), ::il2cpp_utils::ExtractType(forceForwardRenderingMaterial)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraInstance, clipPlaneMesh, forceForwardRenderingMaterial);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentShaderWarmup
#include "GlobalNamespace/EnvironmentShaderWarmup.hpp"
// Including type: EnvironmentShaderWarmup/<Start>d__6
#include "GlobalNamespace/EnvironmentShaderWarmup_-Start-d__6.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: MainCamera
#include "GlobalNamespace/MainCamera.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kNumberOfColumns
int GlobalNamespace::EnvironmentShaderWarmup::_get_kNumberOfColumns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentShaderWarmup::_get_kNumberOfColumns");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EnvironmentShaderWarmup", "kNumberOfColumns"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kNumberOfColumns
void GlobalNamespace::EnvironmentShaderWarmup::_set_kNumberOfColumns(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentShaderWarmup::_set_kNumberOfColumns");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentShaderWarmup", "kNumberOfColumns", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kNumberOfRows
int GlobalNamespace::EnvironmentShaderWarmup::_get_kNumberOfRows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentShaderWarmup::_get_kNumberOfRows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EnvironmentShaderWarmup", "kNumberOfRows"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kNumberOfRows
void GlobalNamespace::EnvironmentShaderWarmup::_set_kNumberOfRows(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentShaderWarmup::_set_kNumberOfRows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentShaderWarmup", "kNumberOfRows", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material[] _materials
::ArrayW<::UnityEngine::Material*>& GlobalNamespace::EnvironmentShaderWarmup::dyn__materials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentShaderWarmup::dyn__materials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materials"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MainCamera _mainCamera
::GlobalNamespace::MainCamera*& GlobalNamespace::EnvironmentShaderWarmup::dyn__mainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentShaderWarmup::dyn__mainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainCamera"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameScenesManager _gameScenesManager
::GlobalNamespace::GameScenesManager*& GlobalNamespace::EnvironmentShaderWarmup::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentShaderWarmup::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _parentingTransform
::UnityEngine::Transform*& GlobalNamespace::EnvironmentShaderWarmup::dyn__parentingTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentShaderWarmup::dyn__parentingTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentingTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentShaderWarmup.Start
::System::Collections::IEnumerator* GlobalNamespace::EnvironmentShaderWarmup::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentShaderWarmup::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: EnvironmentShaderWarmup/<Start>d__6
#include "GlobalNamespace/EnvironmentShaderWarmup_-Start-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnvironmentShaderWarmup <>4__this
::GlobalNamespace::EnvironmentShaderWarmup*& GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentShaderWarmup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentShaderWarmup/<Start>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentShaderWarmup/<Start>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentShaderWarmup/<Start>d__6.System.IDisposable.Dispose
void GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentShaderWarmup/<Start>d__6.MoveNext
bool GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentShaderWarmup/<Start>d__6.System.Collections.IEnumerator.Reset
void GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentShaderWarmup::$Start$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacter
#include "GlobalNamespace/BTSCharacter.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: BTSCharacterMaterialSwitcher
#include "GlobalNamespace/BTSCharacterMaterialSwitcher.hpp"
// Including type: MaterialPropertyBlockController
#include "GlobalNamespace/MaterialPropertyBlockController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _characterName
::StringW& GlobalNamespace::BTSCharacter::dyn__characterName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacter::dyn__characterName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_characterName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator _animator
::UnityEngine::Animator*& GlobalNamespace::BTSCharacter::dyn__animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacter::dyn__animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BTSCharacterMaterialSwitcher _btsCharacterMaterialSwitcher
::GlobalNamespace::BTSCharacterMaterialSwitcher*& GlobalNamespace::BTSCharacter::dyn__btsCharacterMaterialSwitcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacter::dyn__btsCharacterMaterialSwitcher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_btsCharacterMaterialSwitcher"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BTSCharacterMaterialSwitcher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockController _materialPropertyBlockController
::GlobalNamespace::MaterialPropertyBlockController*& GlobalNamespace::BTSCharacter::dyn__materialPropertyBlockController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacter::dyn__materialPropertyBlockController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlockController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MaterialPropertyBlockController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _headTransform
::UnityEngine::Transform*& GlobalNamespace::BTSCharacter::dyn__headTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacter::dyn__headTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSCharacter.get_characterName
::StringW GlobalNamespace::BTSCharacter::get_characterName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacter::get_characterName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacter.get_materialPropertyBlockController
::GlobalNamespace::MaterialPropertyBlockController* GlobalNamespace::BTSCharacter::get_materialPropertyBlockController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacter::get_materialPropertyBlockController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_materialPropertyBlockController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MaterialPropertyBlockController*, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacter.get_animator
::UnityEngine::Animator* GlobalNamespace::BTSCharacter::get_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacter::get_animator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animator*, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacter.get_headTransform
::UnityEngine::Transform* GlobalNamespace::BTSCharacter::get_headTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacter::get_headTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacter.SetAlternativeAnimationAndMaterial
void GlobalNamespace::BTSCharacter::SetAlternativeAnimationAndMaterial(::UnityEngine::AnimationClip* animation, bool alternativeMaterialOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacter::SetAlternativeAnimationAndMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAlternativeAnimationAndMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animation), ::il2cpp_utils::ExtractType(alternativeMaterialOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animation, alternativeMaterialOn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterDataModel
#include "GlobalNamespace/BTSCharacterDataModel.hpp"
// Including type: BTSCharacterDataModel/PrefabWithId
#include "GlobalNamespace/BTSCharacterDataModel_PrefabWithId.hpp"
// Including type: BTSCharacterDataModel/AnimationClipWithId
#include "GlobalNamespace/BTSCharacterDataModel_AnimationClipWithId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BTSCharacterDataModel/PrefabWithId[] _prefabsWithIds
::ArrayW<::GlobalNamespace::BTSCharacterDataModel::PrefabWithId*>& GlobalNamespace::BTSCharacterDataModel::dyn__prefabsWithIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterDataModel::dyn__prefabsWithIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefabsWithIds"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BTSCharacterDataModel::PrefabWithId*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BTSCharacterDataModel/AnimationClipWithId[] _animationClipsWithIds
::ArrayW<::GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId*>& GlobalNamespace::BTSCharacterDataModel::dyn__animationClipsWithIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterDataModel::dyn__animationClipsWithIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationClipsWithIds"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSCharacterDataModel.get_prefabsWithIds
::ArrayW<::GlobalNamespace::BTSCharacterDataModel::PrefabWithId*> GlobalNamespace::BTSCharacterDataModel::get_prefabsWithIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterDataModel::get_prefabsWithIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabsWithIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::BTSCharacterDataModel::PrefabWithId*>, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterDataModel.get_animationClipsWithIds
::ArrayW<::GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId*> GlobalNamespace::BTSCharacterDataModel::get_animationClipsWithIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterDataModel::get_animationClipsWithIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animationClipsWithIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterDataModel/PrefabWithId
#include "GlobalNamespace/BTSCharacterDataModel_PrefabWithId.hpp"
// Including type: UnityEngine.AddressableAssets.AssetReference
#include "UnityEngine/AddressableAssets/AssetReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _id
int& GlobalNamespace::BTSCharacterDataModel::PrefabWithId::dyn__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterDataModel::PrefabWithId::dyn__id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AddressableAssets.AssetReference _prefabAssetReference
::UnityEngine::AddressableAssets::AssetReference*& GlobalNamespace::BTSCharacterDataModel::PrefabWithId::dyn__prefabAssetReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterDataModel::PrefabWithId::dyn__prefabAssetReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefabAssetReference"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::AssetReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSCharacterDataModel/PrefabWithId.get_id
int GlobalNamespace::BTSCharacterDataModel::PrefabWithId::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterDataModel::PrefabWithId::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterDataModel/PrefabWithId.get_prefabAssetReference
::UnityEngine::AddressableAssets::AssetReference* GlobalNamespace::BTSCharacterDataModel::PrefabWithId::get_prefabAssetReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterDataModel::PrefabWithId::get_prefabAssetReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabAssetReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AddressableAssets::AssetReference*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterDataModel/AnimationClipWithId
#include "GlobalNamespace/BTSCharacterDataModel_AnimationClipWithId.hpp"
// Including type: UnityEngine.AddressableAssets.AssetReference
#include "UnityEngine/AddressableAssets/AssetReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _id
int& GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId::dyn__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId::dyn__id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AddressableAssets.AssetReference _animationClipAssetReference
::UnityEngine::AddressableAssets::AssetReference*& GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId::dyn__animationClipAssetReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId::dyn__animationClipAssetReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationClipAssetReference"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::AssetReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSCharacterDataModel/AnimationClipWithId.get_id
int GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterDataModel/AnimationClipWithId.get_animationClipAssetReference
::UnityEngine::AddressableAssets::AssetReference* GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId::get_animationClipAssetReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterDataModel::AnimationClipWithId::get_animationClipAssetReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animationClipAssetReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AddressableAssets::AssetReference*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterMaterialSwitcher
#include "GlobalNamespace/BTSCharacterMaterialSwitcher.hpp"
// Including type: BTSCharacterMaterialSwitcher/RendererMaterialsPairs
#include "GlobalNamespace/BTSCharacterMaterialSwitcher_RendererMaterialsPairs.hpp"
// Including type: BTSCharacterMaterialSwitcher/MaterialPairs
#include "GlobalNamespace/BTSCharacterMaterialSwitcher_MaterialPairs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BTSCharacterMaterialSwitcher/RendererMaterialsPairs[] _rendererMaterialsPairs
::ArrayW<::GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs*>& GlobalNamespace::BTSCharacterMaterialSwitcher::dyn__rendererMaterialsPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterMaterialSwitcher::dyn__rendererMaterialsPairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rendererMaterialsPairs"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSCharacterMaterialSwitcher.SwapMaterials
void GlobalNamespace::BTSCharacterMaterialSwitcher::SwapMaterials(bool alternative) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterMaterialSwitcher::SwapMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwapMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alternative)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alternative);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterMaterialSwitcher/RendererMaterialsPairs
#include "GlobalNamespace/BTSCharacterMaterialSwitcher_RendererMaterialsPairs.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BTSCharacterMaterialSwitcher/MaterialPairs
#include "GlobalNamespace/BTSCharacterMaterialSwitcher_MaterialPairs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
::UnityEngine::Renderer*& GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<BTSCharacterMaterialSwitcher/MaterialPairs> _materialPairs
::System::Collections::Generic::List_1<::GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs*>*& GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs::dyn__materialPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs::dyn__materialPairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPairs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSCharacterMaterialSwitcher/RendererMaterialsPairs.get_renderer
::UnityEngine::Renderer* GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs::get_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs::get_renderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Renderer*, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterMaterialSwitcher/RendererMaterialsPairs.get_materialPairs
::System::Collections::Generic::List_1<::GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs*>* GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs::get_materialPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterMaterialSwitcher::RendererMaterialsPairs::get_materialPairs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_materialPairs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterMaterialSwitcher/MaterialPairs
#include "GlobalNamespace/BTSCharacterMaterialSwitcher_MaterialPairs.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 materialIndex
int& GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs::dyn_materialIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs::dyn_materialIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material defaultMaterial
::UnityEngine::Material*& GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs::dyn_defaultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs::dyn_defaultMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material alternativeMaterial
::UnityEngine::Material*& GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs::dyn_alternativeMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterMaterialSwitcher::MaterialPairs::dyn_alternativeMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alternativeMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterResultAnimationController
#include "GlobalNamespace/BTSCharacterResultAnimationController.hpp"
// Including type: MaterialPropertyBlockColorSetter
#include "GlobalNamespace/MaterialPropertyBlockColorSetter.hpp"
// Including type: MaterialPropertyBlockFloatAnimator
#include "GlobalNamespace/MaterialPropertyBlockFloatAnimator.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: BTSCharacter
#include "GlobalNamespace/BTSCharacter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockColorSetter _rimLightColorSetter
::GlobalNamespace::MaterialPropertyBlockColorSetter*& GlobalNamespace::BTSCharacterResultAnimationController::dyn__rimLightColorSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterResultAnimationController::dyn__rimLightColorSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rimLightColorSetter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MaterialPropertyBlockColorSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockFloatAnimator _rimLightIntensityAnimator
::GlobalNamespace::MaterialPropertyBlockFloatAnimator*& GlobalNamespace::BTSCharacterResultAnimationController::dyn__rimLightIntensityAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterResultAnimationController::dyn__rimLightIntensityAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rimLightIntensityAnimator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MaterialPropertyBlockFloatAnimator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockFloatAnimator _rimLightEdgeStartAnimator
::GlobalNamespace::MaterialPropertyBlockFloatAnimator*& GlobalNamespace::BTSCharacterResultAnimationController::dyn__rimLightEdgeStartAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterResultAnimationController::dyn__rimLightEdgeStartAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rimLightEdgeStartAnimator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MaterialPropertyBlockFloatAnimator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _collidersGameObject
::UnityEngine::GameObject*& GlobalNamespace::BTSCharacterResultAnimationController::dyn__collidersGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterResultAnimationController::dyn__collidersGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collidersGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSCharacterResultAnimationController.SetCharacter
void GlobalNamespace::BTSCharacterResultAnimationController::SetCharacter(::GlobalNamespace::BTSCharacter* btsCharacter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterResultAnimationController::SetCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btsCharacter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, btsCharacter);
}
// Autogenerated method: BTSCharacterResultAnimationController.StopAnimation
void GlobalNamespace::BTSCharacterResultAnimationController::StopAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterResultAnimationController::StopAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterSpawnAnimationController
#include "GlobalNamespace/BTSCharacterSpawnAnimationController.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: JumpReceiver
#include "GlobalNamespace/JumpReceiver.hpp"
// Including type: MaterialPropertyBlockColorSetter
#include "GlobalNamespace/MaterialPropertyBlockColorSetter.hpp"
// Including type: MaterialPropertyBlockFloatAnimator
#include "GlobalNamespace/MaterialPropertyBlockFloatAnimator.hpp"
// Including type: SongSpeedData
#include "GlobalNamespace/SongSpeedData.hpp"
// Including type: UnityEngine.Timeline.ActivationTrack
#include "UnityEngine/Timeline/ActivationTrack.hpp"
// Including type: BTSCharacter
#include "GlobalNamespace/BTSCharacter.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCharacterActivationStreamName
::StringW GlobalNamespace::BTSCharacterSpawnAnimationController::_get_kCharacterActivationStreamName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::_get_kCharacterActivationStreamName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BTSCharacterSpawnAnimationController", "kCharacterActivationStreamName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCharacterActivationStreamName
void GlobalNamespace::BTSCharacterSpawnAnimationController::_set_kCharacterActivationStreamName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::_set_kCharacterActivationStreamName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSCharacterSpawnAnimationController", "kCharacterActivationStreamName", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableDirector _spawnCharacterPlayableDirector
::UnityEngine::Playables::PlayableDirector*& GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__spawnCharacterPlayableDirector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__spawnCharacterPlayableDirector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnCharacterPlayableDirector"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableDirector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private JumpReceiver _jumpReceiver
::GlobalNamespace::JumpReceiver*& GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__jumpReceiver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__jumpReceiver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jumpReceiver"))->offset;
  return *reinterpret_cast<::GlobalNamespace::JumpReceiver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _appearAnimationEndTime
float& GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__appearAnimationEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__appearAnimationEndTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearAnimationEndTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _disappearAnimationStartTime
float& GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__disappearAnimationStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__disappearAnimationStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disappearAnimationStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockColorSetter _rimLightColorSetter
::GlobalNamespace::MaterialPropertyBlockColorSetter*& GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__rimLightColorSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__rimLightColorSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rimLightColorSetter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MaterialPropertyBlockColorSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockFloatAnimator _rimLightIntensityAnimator
::GlobalNamespace::MaterialPropertyBlockFloatAnimator*& GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__rimLightIntensityAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__rimLightIntensityAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rimLightIntensityAnimator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MaterialPropertyBlockFloatAnimator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockFloatAnimator _rimLightEdgeStartAnimator
::GlobalNamespace::MaterialPropertyBlockFloatAnimator*& GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__rimLightEdgeStartAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__rimLightEdgeStartAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rimLightEdgeStartAnimator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MaterialPropertyBlockFloatAnimator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongSpeedData _songSpeedData
::GlobalNamespace::SongSpeedData*& GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__songSpeedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__songSpeedData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songSpeedData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongSpeedData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.ActivationTrack _characterActivationTrack
::UnityEngine::Timeline::ActivationTrack*& GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__characterActivationTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__characterActivationTrack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_characterActivationTrack"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::ActivationTrack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BTSCharacter _currentBtsCharacter
::GlobalNamespace::BTSCharacter*& GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__currentBtsCharacter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__currentBtsCharacter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentBtsCharacter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BTSCharacter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _defaultSpawnCharacterDuration
float& GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__defaultSpawnCharacterDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__defaultSpawnCharacterDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultSpawnCharacterDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _playableDirectorTimeBeforePause
double& GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__playableDirectorTimeBeforePause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__playableDirectorTimeBeforePause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playableDirectorTimeBeforePause"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _animatorNormalizedTimeBeforePause
float& GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__animatorNormalizedTimeBeforePause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::dyn__animatorNormalizedTimeBeforePause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animatorNormalizedTimeBeforePause"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSCharacterSpawnAnimationController.get_isCharacterVisible
bool GlobalNamespace::BTSCharacterSpawnAnimationController::get_isCharacterVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::get_isCharacterVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isCharacterVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnAnimationController.get_duration
float GlobalNamespace::BTSCharacterSpawnAnimationController::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::get_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnAnimationController.get_characterActivationTrack
::UnityEngine::Timeline::ActivationTrack* GlobalNamespace::BTSCharacterSpawnAnimationController::get_characterActivationTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::get_characterActivationTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterActivationTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ActivationTrack*, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnAnimationController.PlayAnimation
void GlobalNamespace::BTSCharacterSpawnAnimationController::PlayAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::PlayAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnAnimationController.EndEarlyAnimation
void GlobalNamespace::BTSCharacterSpawnAnimationController::EndEarlyAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::EndEarlyAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndEarlyAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnAnimationController.StopAnimation
void GlobalNamespace::BTSCharacterSpawnAnimationController::StopAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::StopAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnAnimationController.SetCharacter
void GlobalNamespace::BTSCharacterSpawnAnimationController::SetCharacter(::GlobalNamespace::BTSCharacter* btsCharacter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::SetCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btsCharacter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, btsCharacter);
}
// Autogenerated method: BTSCharacterSpawnAnimationController.WillResumeAnimation
void GlobalNamespace::BTSCharacterSpawnAnimationController::WillResumeAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::WillResumeAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WillResumeAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnAnimationController.ResumeAnimation
void GlobalNamespace::BTSCharacterSpawnAnimationController::ResumeAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::ResumeAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResumeAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnAnimationController.PauseAnimation
void GlobalNamespace::BTSCharacterSpawnAnimationController::PauseAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnAnimationController::PauseAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterSpawnController
#include "GlobalNamespace/BTSCharacterSpawnController.hpp"
// Including type: BTSCharacterSpawnController/<TimelineStoppedDelayed>d__19
#include "GlobalNamespace/BTSCharacterSpawnController_-TimelineStoppedDelayed-d__19.hpp"
// Including type: BTSCharacterSpawnAnimationController
#include "GlobalNamespace/BTSCharacterSpawnAnimationController.hpp"
// Including type: BTSCharacterSpawnEventEffect
#include "GlobalNamespace/BTSCharacterSpawnEventEffect.hpp"
// Including type: IGamePause
#include "GlobalNamespace/IGamePause.hpp"
// Including type: ILevelEndActions
#include "GlobalNamespace/ILevelEndActions.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: BTSCharacter
#include "GlobalNamespace/BTSCharacter.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BTSCharacterSpawnAnimationController _characterSpawnAnimationController
::GlobalNamespace::BTSCharacterSpawnAnimationController*& GlobalNamespace::BTSCharacterSpawnController::dyn__characterSpawnAnimationController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::dyn__characterSpawnAnimationController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_characterSpawnAnimationController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BTSCharacterSpawnAnimationController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BTSCharacterSpawnEventEffect _btsCharacterSpawnEventEffect
::GlobalNamespace::BTSCharacterSpawnEventEffect*& GlobalNamespace::BTSCharacterSpawnController::dyn__btsCharacterSpawnEventEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::dyn__btsCharacterSpawnEventEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_btsCharacterSpawnEventEffect"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BTSCharacterSpawnEventEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IGamePause _gamePause
::GlobalNamespace::IGamePause*& GlobalNamespace::BTSCharacterSpawnController::dyn__gamePause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::dyn__gamePause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gamePause"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IGamePause**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILevelEndActions _levelEndActions
::GlobalNamespace::ILevelEndActions*& GlobalNamespace::BTSCharacterSpawnController::dyn__levelEndActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::dyn__levelEndActions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelEndActions"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILevelEndActions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _characterSpawned
bool& GlobalNamespace::BTSCharacterSpawnController::dyn__characterSpawned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::dyn__characterSpawned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_characterSpawned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _playableDirectorTimeBeforePause
double& GlobalNamespace::BTSCharacterSpawnController::dyn__playableDirectorTimeBeforePause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::dyn__playableDirectorTimeBeforePause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playableDirectorTimeBeforePause"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _animatorNormalizedTimeBeforePause
float& GlobalNamespace::BTSCharacterSpawnController::dyn__animatorNormalizedTimeBeforePause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::dyn__animatorNormalizedTimeBeforePause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animatorNormalizedTimeBeforePause"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _despawnCharacterCoroutine
::UnityEngine::Coroutine*& GlobalNamespace::BTSCharacterSpawnController::dyn__despawnCharacterCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::dyn__despawnCharacterCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_despawnCharacterCoroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSCharacterSpawnController.get_isCharacterVisible
bool GlobalNamespace::BTSCharacterSpawnController::get_isCharacterVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::get_isCharacterVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isCharacterVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController.get_isSpawned
bool GlobalNamespace::BTSCharacterSpawnController::get_isSpawned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::get_isSpawned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSpawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController.Start
void GlobalNamespace::BTSCharacterSpawnController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController.OnDestroy
void GlobalNamespace::BTSCharacterSpawnController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController.HandleStartCharacterAnimation
void GlobalNamespace::BTSCharacterSpawnController::HandleStartCharacterAnimation(::GlobalNamespace::BTSCharacter* btsCharacter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::HandleStartCharacterAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStartCharacterAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btsCharacter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, btsCharacter);
}
// Autogenerated method: BTSCharacterSpawnController.HandleGamePauseDidPause
void GlobalNamespace::BTSCharacterSpawnController::HandleGamePauseDidPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::HandleGamePauseDidPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGamePauseDidPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController.HandleGamePauseWillResume
void GlobalNamespace::BTSCharacterSpawnController::HandleGamePauseWillResume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::HandleGamePauseWillResume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGamePauseWillResume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController.HandleGamePauseDidResume
void GlobalNamespace::BTSCharacterSpawnController::HandleGamePauseDidResume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::HandleGamePauseDidResume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGamePauseDidResume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController.HandleLevelEndActionsLevelFailed
void GlobalNamespace::BTSCharacterSpawnController::HandleLevelEndActionsLevelFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::HandleLevelEndActionsLevelFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelEndActionsLevelFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController.TimelineStoppedDelayed
::System::Collections::IEnumerator* GlobalNamespace::BTSCharacterSpawnController::TimelineStoppedDelayed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::TimelineStoppedDelayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TimelineStoppedDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BTSCharacterSpawnController/<TimelineStoppedDelayed>d__19
#include "GlobalNamespace/BTSCharacterSpawnController_-TimelineStoppedDelayed-d__19.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BTSCharacterSpawnController <>4__this
::GlobalNamespace::BTSCharacterSpawnController*& GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BTSCharacterSpawnController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSCharacterSpawnController/<TimelineStoppedDelayed>d__19.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController/<TimelineStoppedDelayed>d__19.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController/<TimelineStoppedDelayed>d__19.System.IDisposable.Dispose
void GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController/<TimelineStoppedDelayed>d__19.MoveNext
bool GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnController/<TimelineStoppedDelayed>d__19.System.Collections.IEnumerator.Reset
void GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnController::$TimelineStoppedDelayed$d__19::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterSpawnEventEffect
#include "GlobalNamespace/BTSCharacterSpawnEventEffect.hpp"
// Including type: BTSCharacterDataModel
#include "GlobalNamespace/BTSCharacterDataModel.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: BTSCharacter
#include "GlobalNamespace/BTSCharacter.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private BasicBeatmapEventType kCharacterDisplayEventType
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BTSCharacterSpawnEventEffect::_get_kCharacterDisplayEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::_get_kCharacterDisplayEventType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BTSCharacterSpawnEventEffect", "kCharacterDisplayEventType"));
}
// Autogenerated static field setter
// Set static field: static private BasicBeatmapEventType kCharacterDisplayEventType
void GlobalNamespace::BTSCharacterSpawnEventEffect::_set_kCharacterDisplayEventType(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::_set_kCharacterDisplayEventType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSCharacterSpawnEventEffect", "kCharacterDisplayEventType", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _animationStartAheadTime
float& GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__animationStartAheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__animationStartAheadTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationStartAheadTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BTSCharacterDataModel _btsCharacterDataModel
::GlobalNamespace::BTSCharacterDataModel*& GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__btsCharacterDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__btsCharacterDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_btsCharacterDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BTSCharacterDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _characterWrapper
::UnityEngine::Transform*& GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__characterWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__characterWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_characterWrapper"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IReadonlyBeatmapData _beatmapData
::GlobalNamespace::IReadonlyBeatmapData*& GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__beatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__beatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IReadonlyBeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSource
::GlobalNamespace::IAudioTimeSource*& GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__audioTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__audioTimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSource"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<BTSCharacter> startCharacterAnimationEvent
::System::Action_1<::GlobalNamespace::BTSCharacter*>*& GlobalNamespace::BTSCharacterSpawnEventEffect::dyn_startCharacterAnimationEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::dyn_startCharacterAnimationEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startCharacterAnimationEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::BTSCharacter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Int32,BTSCharacter> _idsToCharacterPrefabsDictionary
::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::BTSCharacter*>*& GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__idsToCharacterPrefabsDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__idsToCharacterPrefabsDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_idsToCharacterPrefabsDictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::BTSCharacter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Int32,BTSCharacter> _idsToCharactersDictionary
::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::BTSCharacter*>*& GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__idsToCharactersDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__idsToCharactersDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_idsToCharactersDictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::BTSCharacter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.AnimationClip> _idsToAnimationClipsDictionary
::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::AnimationClip*>*& GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__idsToAnimationClipsDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__idsToAnimationClipsDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_idsToAnimationClipsDictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::AnimationClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
bool& GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _beatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__beatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__beatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> _asyncOperationHandles
::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*& GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__asyncOperationHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::dyn__asyncOperationHandles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncOperationHandles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSCharacterSpawnEventEffect.get_isInitialized
bool GlobalNamespace::BTSCharacterSpawnEventEffect::get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::get_isInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnEventEffect.add_startCharacterAnimationEvent
void GlobalNamespace::BTSCharacterSpawnEventEffect::add_startCharacterAnimationEvent(::System::Action_1<::GlobalNamespace::BTSCharacter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::add_startCharacterAnimationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startCharacterAnimationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BTSCharacterSpawnEventEffect.remove_startCharacterAnimationEvent
void GlobalNamespace::BTSCharacterSpawnEventEffect::remove_startCharacterAnimationEvent(::System::Action_1<::GlobalNamespace::BTSCharacter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::remove_startCharacterAnimationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startCharacterAnimationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BTSCharacterSpawnEventEffect.Start
void GlobalNamespace::BTSCharacterSpawnEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnEventEffect.LoadAddressables
void GlobalNamespace::BTSCharacterSpawnEventEffect::LoadAddressables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::LoadAddressables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAddressables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnEventEffect.CleanupAddressables
void GlobalNamespace::BTSCharacterSpawnEventEffect::CleanupAddressables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::CleanupAddressables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanupAddressables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnEventEffect.OnDestroy
void GlobalNamespace::BTSCharacterSpawnEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSCharacterSpawnEventEffect.HandleBeatmapEvent
void GlobalNamespace::BTSCharacterSpawnEventEffect::HandleBeatmapEvent(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::HandleBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated method: BTSCharacterSpawnEventEffect.GetCharacterWithAnimationClip
::System::Tuple_2<::GlobalNamespace::BTSCharacter*, ::UnityEngine::AnimationClip*>* GlobalNamespace::BTSCharacterSpawnEventEffect::GetCharacterWithAnimationClip(::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::BTSCharacter*>* charDictionary, ::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::AnimationClip*>* animDictionary, int prefabId, int animationId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventEffect::GetCharacterWithAnimationClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BTSCharacterSpawnEventEffect", "GetCharacterWithAnimationClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charDictionary), ::il2cpp_utils::ExtractType(animDictionary), ::il2cpp_utils::ExtractType(prefabId), ::il2cpp_utils::ExtractType(animationId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Tuple_2<::GlobalNamespace::BTSCharacter*, ::UnityEngine::AnimationClip*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charDictionary, animDictionary, prefabId, animationId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSCharacterSpawnEventValueParser
#include "GlobalNamespace/BTSCharacterSpawnEventValueParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kPrefabMask
int GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kPrefabMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kPrefabMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BTSCharacterSpawnEventValueParser", "kPrefabMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kPrefabMask
void GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kPrefabMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kPrefabMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSCharacterSpawnEventValueParser", "kPrefabMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kPrefabBitOffset
int GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kPrefabBitOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kPrefabBitOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BTSCharacterSpawnEventValueParser", "kPrefabBitOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kPrefabBitOffset
void GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kPrefabBitOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kPrefabBitOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSCharacterSpawnEventValueParser", "kPrefabBitOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kAnimationMask
int GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kAnimationMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kAnimationMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BTSCharacterSpawnEventValueParser", "kAnimationMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kAnimationMask
void GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kAnimationMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kAnimationMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSCharacterSpawnEventValueParser", "kAnimationMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kAnimationBitOffset
int GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kAnimationBitOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kAnimationBitOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BTSCharacterSpawnEventValueParser", "kAnimationBitOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kAnimationBitOffset
void GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kAnimationBitOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kAnimationBitOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSCharacterSpawnEventValueParser", "kAnimationBitOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kAlternativeMaterialMask
int GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kAlternativeMaterialMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kAlternativeMaterialMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BTSCharacterSpawnEventValueParser", "kAlternativeMaterialMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kAlternativeMaterialMask
void GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kAlternativeMaterialMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kAlternativeMaterialMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSCharacterSpawnEventValueParser", "kAlternativeMaterialMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kAlternativeMaterialOffset
int GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kAlternativeMaterialOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventValueParser::_get_kAlternativeMaterialOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BTSCharacterSpawnEventValueParser", "kAlternativeMaterialOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kAlternativeMaterialOffset
void GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kAlternativeMaterialOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventValueParser::_set_kAlternativeMaterialOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSCharacterSpawnEventValueParser", "kAlternativeMaterialOffset", value));
}
// Autogenerated method: BTSCharacterSpawnEventValueParser.GetPrefabId
int GlobalNamespace::BTSCharacterSpawnEventValueParser::GetPrefabId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventValueParser::GetPrefabId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BTSCharacterSpawnEventValueParser", "GetPrefabId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: BTSCharacterSpawnEventValueParser.GetAnimationId
int GlobalNamespace::BTSCharacterSpawnEventValueParser::GetAnimationId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventValueParser::GetAnimationId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BTSCharacterSpawnEventValueParser", "GetAnimationId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: BTSCharacterSpawnEventValueParser.GetIsAlternativeMaterial
bool GlobalNamespace::BTSCharacterSpawnEventValueParser::GetIsAlternativeMaterial(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventValueParser::GetIsAlternativeMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BTSCharacterSpawnEventValueParser", "GetIsAlternativeMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: BTSCharacterSpawnEventValueParser.MergeValuesIntoOneInt
int GlobalNamespace::BTSCharacterSpawnEventValueParser::MergeValuesIntoOneInt(int prefabId, int animationId, bool isAlternativeMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSCharacterSpawnEventValueParser::MergeValuesIntoOneInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BTSCharacterSpawnEventValueParser", "MergeValuesIntoOneInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabId), ::il2cpp_utils::ExtractType(animationId), ::il2cpp_utils::ExtractType(isAlternativeMaterial)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefabId, animationId, isAlternativeMaterial);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSStarTextEffectController
#include "GlobalNamespace/BTSStarTextEffectController.hpp"
// Including type: BTSStarTextEffectController/Pool
#include "GlobalNamespace/BTSStarTextEffectController_Pool.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: UnityEngine.Animation
#include "UnityEngine/Animation.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kAnimationName
::StringW GlobalNamespace::BTSStarTextEffectController::_get_kAnimationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectController::_get_kAnimationName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BTSStarTextEffectController", "kAnimationName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kAnimationName
void GlobalNamespace::BTSStarTextEffectController::_set_kAnimationName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectController::_set_kAnimationName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSStarTextEffectController", "kAnimationName", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
::UnityEngine::Transform*& GlobalNamespace::BTSStarTextEffectController::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectController::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpriteRenderer _spriteRenderer
::UnityEngine::SpriteRenderer*& GlobalNamespace::BTSStarTextEffectController::dyn__spriteRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectController::dyn__spriteRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spriteRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animation _animation
::UnityEngine::Animation*& GlobalNamespace::BTSStarTextEffectController::dyn__animation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectController::dyn__animation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animation"))->offset;
  return *reinterpret_cast<::UnityEngine::Animation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentAnimationDuration
float& GlobalNamespace::BTSStarTextEffectController::dyn__currentAnimationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectController::dyn__currentAnimationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentAnimationDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSStarTextEffectController.get_animationDuration
float GlobalNamespace::BTSStarTextEffectController::get_animationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectController::get_animationDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animationDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEffectController.Reinitialize
void GlobalNamespace::BTSStarTextEffectController::Reinitialize(::UnityEngine::Sprite* sprite, ::UnityEngine::Transform* parentTransform, float desiredAnimationLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectController::Reinitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reinitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite), ::il2cpp_utils::ExtractType(parentTransform), ::il2cpp_utils::ExtractType(desiredAnimationLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sprite, parentTransform, desiredAnimationLength);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSStarTextEffectController/Pool
#include "GlobalNamespace/BTSStarTextEffectController_Pool.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BTSStarTextEffectController/Pool.Reinitialize
void GlobalNamespace::BTSStarTextEffectController::Pool::Reinitialize(::UnityEngine::Sprite* sprite, ::UnityEngine::Transform* transform, float desiredAnimationLength, ::GlobalNamespace::BTSStarTextEffectController* starTextEffectController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectController::Pool::Reinitialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reinitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite), ::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(desiredAnimationLength), ::il2cpp_utils::ExtractType(starTextEffectController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sprite, transform, desiredAnimationLength, starTextEffectController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSStarTextEffectValueParser
#include "GlobalNamespace/BTSStarTextEffectValueParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kTextMask
int GlobalNamespace::BTSStarTextEffectValueParser::_get_kTextMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectValueParser::_get_kTextMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BTSStarTextEffectValueParser", "kTextMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kTextMask
void GlobalNamespace::BTSStarTextEffectValueParser::_set_kTextMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectValueParser::_set_kTextMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSStarTextEffectValueParser", "kTextMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kTextBitOffset
int GlobalNamespace::BTSStarTextEffectValueParser::_get_kTextBitOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectValueParser::_get_kTextBitOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BTSStarTextEffectValueParser", "kTextBitOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kTextBitOffset
void GlobalNamespace::BTSStarTextEffectValueParser::_set_kTextBitOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectValueParser::_set_kTextBitOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSStarTextEffectValueParser", "kTextBitOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kPositionMask
int GlobalNamespace::BTSStarTextEffectValueParser::_get_kPositionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectValueParser::_get_kPositionMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BTSStarTextEffectValueParser", "kPositionMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kPositionMask
void GlobalNamespace::BTSStarTextEffectValueParser::_set_kPositionMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectValueParser::_set_kPositionMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSStarTextEffectValueParser", "kPositionMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kPositionBitOffset
int GlobalNamespace::BTSStarTextEffectValueParser::_get_kPositionBitOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectValueParser::_get_kPositionBitOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BTSStarTextEffectValueParser", "kPositionBitOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kPositionBitOffset
void GlobalNamespace::BTSStarTextEffectValueParser::_set_kPositionBitOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectValueParser::_set_kPositionBitOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSStarTextEffectValueParser", "kPositionBitOffset", value));
}
// Autogenerated method: BTSStarTextEffectValueParser.GetTextId
int GlobalNamespace::BTSStarTextEffectValueParser::GetTextId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectValueParser::GetTextId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BTSStarTextEffectValueParser", "GetTextId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: BTSStarTextEffectValueParser.GetPositionId
int GlobalNamespace::BTSStarTextEffectValueParser::GetPositionId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectValueParser::GetPositionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BTSStarTextEffectValueParser", "GetPositionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: BTSStarTextEffectValueParser.MergeValuesIntoOneInt
int GlobalNamespace::BTSStarTextEffectValueParser::MergeValuesIntoOneInt(int textId, int positionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectValueParser::MergeValuesIntoOneInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BTSStarTextEffectValueParser", "MergeValuesIntoOneInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textId), ::il2cpp_utils::ExtractType(positionId)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, textId, positionId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSStarTextEffectsManager
#include "GlobalNamespace/BTSStarTextEffectsManager.hpp"
// Including type: BTSStarTextEffectsManager/<DespawnEffectDelayed>d__5
#include "GlobalNamespace/BTSStarTextEffectsManager_-DespawnEffectDelayed-d__5.hpp"
// Including type: BTSStarTextEventEffect
#include "GlobalNamespace/BTSStarTextEventEffect.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: BTSStarTextEffectController/Pool
#include "GlobalNamespace/BTSStarTextEffectController_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BTSStarTextEventEffect _btsStarTextEventEffect
::GlobalNamespace::BTSStarTextEventEffect*& GlobalNamespace::BTSStarTextEffectsManager::dyn__btsStarTextEventEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectsManager::dyn__btsStarTextEventEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_btsStarTextEventEffect"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BTSStarTextEventEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BTSStarTextEffectController/Pool _btsStarTextEffectControllerPool
::GlobalNamespace::BTSStarTextEffectController::Pool*& GlobalNamespace::BTSStarTextEffectsManager::dyn__btsStarTextEffectControllerPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectsManager::dyn__btsStarTextEffectControllerPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_btsStarTextEffectControllerPool"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BTSStarTextEffectController::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSStarTextEffectsManager.Start
void GlobalNamespace::BTSStarTextEffectsManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectsManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEffectsManager.OnDestroy
void GlobalNamespace::BTSStarTextEffectsManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectsManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEffectsManager.HandleBTSStarTextEventEffect
void GlobalNamespace::BTSStarTextEffectsManager::HandleBTSStarTextEventEffect(::UnityEngine::Sprite* sprite, ::UnityEngine::Transform* parentTransform, float desiredAnimationLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectsManager::HandleBTSStarTextEventEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBTSStarTextEventEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite), ::il2cpp_utils::ExtractType(parentTransform), ::il2cpp_utils::ExtractType(desiredAnimationLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sprite, parentTransform, desiredAnimationLength);
}
// Autogenerated method: BTSStarTextEffectsManager.DespawnEffectDelayed
::System::Collections::IEnumerator* GlobalNamespace::BTSStarTextEffectsManager::DespawnEffectDelayed(::GlobalNamespace::BTSStarTextEffectController* effectController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectsManager::DespawnEffectDelayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnEffectDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(effectController)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, effectController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BTSStarTextEffectsManager/<DespawnEffectDelayed>d__5
#include "GlobalNamespace/BTSStarTextEffectsManager_-DespawnEffectDelayed-d__5.hpp"
// Including type: BTSStarTextEffectController
#include "GlobalNamespace/BTSStarTextEffectController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BTSStarTextEffectController effectController
::GlobalNamespace::BTSStarTextEffectController*& GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::dyn_effectController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::dyn_effectController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "effectController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BTSStarTextEffectController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BTSStarTextEffectsManager <>4__this
::GlobalNamespace::BTSStarTextEffectsManager*& GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BTSStarTextEffectsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSStarTextEffectsManager/<DespawnEffectDelayed>d__5.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEffectsManager/<DespawnEffectDelayed>d__5.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEffectsManager/<DespawnEffectDelayed>d__5.System.IDisposable.Dispose
void GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEffectsManager/<DespawnEffectDelayed>d__5.MoveNext
bool GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEffectsManager/<DespawnEffectDelayed>d__5.System.Collections.IEnumerator.Reset
void GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEffectsManager::$DespawnEffectDelayed$d__5::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSStarTextEventEffect
#include "GlobalNamespace/BTSStarTextEventEffect.hpp"
// Including type: BTSStarTextEventEffect/StarTextSprite
#include "GlobalNamespace/BTSStarTextEventEffect_StarTextSprite.hpp"
// Including type: BTSStarTextEventEffect/StartTextPosition
#include "GlobalNamespace/BTSStarTextEventEffect_StartTextPosition.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private BasicBeatmapEventType kStarTextAppearEventType
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BTSStarTextEventEffect::_get_kStarTextAppearEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::_get_kStarTextAppearEventType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BTSStarTextEventEffect", "kStarTextAppearEventType"));
}
// Autogenerated static field setter
// Set static field: static private BasicBeatmapEventType kStarTextAppearEventType
void GlobalNamespace::BTSStarTextEventEffect::_set_kStarTextAppearEventType(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::_set_kStarTextAppearEventType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BTSStarTextEventEffect", "kStarTextAppearEventType", value));
}
// Autogenerated instance field getter
// Get instance field: private BTSStarTextEventEffect/StarTextSprite[] _starTextSprites
::ArrayW<::GlobalNamespace::BTSStarTextEventEffect::StarTextSprite*>& GlobalNamespace::BTSStarTextEventEffect::dyn__starTextSprites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::dyn__starTextSprites");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_starTextSprites"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BTSStarTextEventEffect::StarTextSprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BTSStarTextEventEffect/StartTextPosition[] _startTextPositions
::ArrayW<::GlobalNamespace::BTSStarTextEventEffect::StartTextPosition*>& GlobalNamespace::BTSStarTextEventEffect::dyn__startTextPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::dyn__startTextPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTextPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BTSStarTextEventEffect::StartTextPosition*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::BTSStarTextEventEffect::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSource
::GlobalNamespace::IAudioTimeSource*& GlobalNamespace::BTSStarTextEventEffect::dyn__audioTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::dyn__audioTimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSource"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<UnityEngine.Sprite,UnityEngine.Transform,System.Single> startStarTextAnimationEvent
::System::Action_3<::UnityEngine::Sprite*, ::UnityEngine::Transform*, float>*& GlobalNamespace::BTSStarTextEventEffect::dyn_startStarTextAnimationEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::dyn_startStarTextAnimationEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startStarTextAnimationEvent"))->offset;
  return *reinterpret_cast<::System::Action_3<::UnityEngine::Sprite*, ::UnityEngine::Transform*, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _beatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::BTSStarTextEventEffect::dyn__beatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::dyn__beatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Int32,BTSStarTextEventEffect/StarTextSprite> _idsToStarTextSpriteDictionary
::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::BTSStarTextEventEffect::StarTextSprite*>*& GlobalNamespace::BTSStarTextEventEffect::dyn__idsToStarTextSpriteDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::dyn__idsToStarTextSpriteDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_idsToStarTextSpriteDictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::BTSStarTextEventEffect::StarTextSprite*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.Transform> _idsToStarTextPositionDictionary
::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::Transform*>*& GlobalNamespace::BTSStarTextEventEffect::dyn__idsToStarTextPositionDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::dyn__idsToStarTextPositionDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_idsToStarTextPositionDictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSStarTextEventEffect.add_startStarTextAnimationEvent
void GlobalNamespace::BTSStarTextEventEffect::add_startStarTextAnimationEvent(::System::Action_3<::UnityEngine::Sprite*, ::UnityEngine::Transform*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::add_startStarTextAnimationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startStarTextAnimationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BTSStarTextEventEffect.remove_startStarTextAnimationEvent
void GlobalNamespace::BTSStarTextEventEffect::remove_startStarTextAnimationEvent(::System::Action_3<::UnityEngine::Sprite*, ::UnityEngine::Transform*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::remove_startStarTextAnimationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startStarTextAnimationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BTSStarTextEventEffect.Start
void GlobalNamespace::BTSStarTextEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEventEffect.OnDestroy
void GlobalNamespace::BTSStarTextEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEventEffect.HandleBeatmapEvent
void GlobalNamespace::BTSStarTextEventEffect::HandleBeatmapEvent(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::HandleBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSStarTextEventEffect/StarTextSprite
#include "GlobalNamespace/BTSStarTextEventEffect_StarTextSprite.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _id
int& GlobalNamespace::BTSStarTextEventEffect::StarTextSprite::dyn__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::StarTextSprite::dyn__id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _starTextSprite
::UnityEngine::Sprite*& GlobalNamespace::BTSStarTextEventEffect::StarTextSprite::dyn__starTextSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::StarTextSprite::dyn__starTextSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_starTextSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _animationLength
float& GlobalNamespace::BTSStarTextEventEffect::StarTextSprite::dyn__animationLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::StarTextSprite::dyn__animationLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSStarTextEventEffect/StarTextSprite.get_id
int GlobalNamespace::BTSStarTextEventEffect::StarTextSprite::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::StarTextSprite::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEventEffect/StarTextSprite.get_starTextSprite
::UnityEngine::Sprite* GlobalNamespace::BTSStarTextEventEffect::StarTextSprite::get_starTextSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::StarTextSprite::get_starTextSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_starTextSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEventEffect/StarTextSprite.get_animationLength
float GlobalNamespace::BTSStarTextEventEffect::StarTextSprite::get_animationLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::StarTextSprite::get_animationLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animationLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSStarTextEventEffect/StartTextPosition
#include "GlobalNamespace/BTSStarTextEventEffect_StartTextPosition.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _id
int& GlobalNamespace::BTSStarTextEventEffect::StartTextPosition::dyn__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::StartTextPosition::dyn__id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
::UnityEngine::Transform*& GlobalNamespace::BTSStarTextEventEffect::StartTextPosition::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::StartTextPosition::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSStarTextEventEffect/StartTextPosition.get_id
int GlobalNamespace::BTSStarTextEventEffect::StartTextPosition::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::StartTextPosition::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BTSStarTextEventEffect/StartTextPosition.get_transform
::UnityEngine::Transform* GlobalNamespace::BTSStarTextEventEffect::StartTextPosition::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventEffect::StartTextPosition::get_transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BTSStarTextEventInstaller
#include "GlobalNamespace/BTSStarTextEventInstaller.hpp"
// Including type: BTSStarTextEffectController
#include "GlobalNamespace/BTSStarTextEffectController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BTSStarTextEffectController _btsStarTextEffectController
::GlobalNamespace::BTSStarTextEffectController*& GlobalNamespace::BTSStarTextEventInstaller::dyn__btsStarTextEffectController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventInstaller::dyn__btsStarTextEffectController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_btsStarTextEffectController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BTSStarTextEffectController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BTSStarTextEventInstaller.InstallBindings
void GlobalNamespace::BTSStarTextEventInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BTSStarTextEventInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectAvoidancePathEvaluator
#include "GlobalNamespace/BeatmapObjectAvoidancePathEvaluator.hpp"
// Including type: BezierSplineEvaluator
#include "GlobalNamespace/BezierSplineEvaluator.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Single _jumpStartZ
float& GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::dyn__jumpStartZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::dyn__jumpStartZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jumpStartZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single _jumpEndZ
float& GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::dyn__jumpEndZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::dyn__jumpEndZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jumpEndZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single _zOffset
float& GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::dyn__zOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::dyn__zOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single _yOffset
float& GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::dyn__yOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::dyn__yOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single _noteJumpSpeed
float& GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::dyn__noteJumpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::dyn__noteJumpSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single _moveToPlayerHeadTParam
float& GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::dyn__moveToPlayerHeadTParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::dyn__moveToPlayerHeadTParam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveToPlayerHeadTParam"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BezierSplineEvaluator _pathBezierCurveEvaluator
::GlobalNamespace::BezierSplineEvaluator*& GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::dyn__pathBezierCurveEvaluator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::dyn__pathBezierCurveEvaluator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pathBezierCurveEvaluator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BezierSplineEvaluator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSource
::GlobalNamespace::IAudioTimeSource*& GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::dyn__audioTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::dyn__audioTimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSource"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerTransforms _playerTransforms
::GlobalNamespace::PlayerTransforms*& GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::dyn__playerTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::dyn__playerTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerTransforms"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerTransforms**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectAvoidancePathEvaluator.GetCurrentPathPosition
::UnityEngine::Vector3 GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::GetCurrentPathPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidancePathEvaluator::GetCurrentPathPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentPathPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectAvoidanceTiltEvaluator
#include "GlobalNamespace/BeatmapObjectAvoidanceTiltEvaluator.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: BezierSplineEvaluator
#include "GlobalNamespace/BezierSplineEvaluator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kLookAheadTime
float GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::_get_kLookAheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::_get_kLookAheadTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BeatmapObjectAvoidanceTiltEvaluator", "kLookAheadTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kLookAheadTime
void GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::_set_kLookAheadTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::_set_kLookAheadTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapObjectAvoidanceTiltEvaluator", "kLookAheadTime", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSource
::GlobalNamespace::IAudioTimeSource*& GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::dyn__audioTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::dyn__audioTimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSource"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector2 _gravity
::UnityEngine::Vector2& GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::dyn__gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::dyn__gravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gravity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector2 _normalizedGravity
::UnityEngine::Vector2& GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::dyn__normalizedGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::dyn__normalizedGravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalizedGravity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BezierSplineEvaluator _bezierSplineEvaluator
::GlobalNamespace::BezierSplineEvaluator*& GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::dyn__bezierSplineEvaluator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::dyn__bezierSplineEvaluator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bezierSplineEvaluator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BezierSplineEvaluator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentAcceleration
float& GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::dyn__currentAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::dyn__currentAcceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentAcceleration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectAvoidanceTiltEvaluator.GetTiltAngle
float GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::GetTiltAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator::GetTiltAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTiltAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectAvoidanceYOffsetEvaluator
#include "GlobalNamespace/BeatmapObjectAvoidanceYOffsetEvaluator.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: IBeatmapObjectSpawnController
#include "GlobalNamespace/IBeatmapObjectSpawnController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kYJumpOffsetBufferLength
int GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::_get_kYJumpOffsetBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::_get_kYJumpOffsetBufferLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapObjectAvoidanceYOffsetEvaluator", "kYJumpOffsetBufferLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kYJumpOffsetBufferLength
void GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::_set_kYJumpOffsetBufferLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::_set_kYJumpOffsetBufferLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapObjectAvoidanceYOffsetEvaluator", "kYJumpOffsetBufferLength", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kYJumpOffsetBufferSongTimeInitValue
float GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::_get_kYJumpOffsetBufferSongTimeInitValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::_get_kYJumpOffsetBufferSongTimeInitValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BeatmapObjectAvoidanceYOffsetEvaluator", "kYJumpOffsetBufferSongTimeInitValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kYJumpOffsetBufferSongTimeInitValue
void GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::_set_kYJumpOffsetBufferSongTimeInitValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::_set_kYJumpOffsetBufferSongTimeInitValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapObjectAvoidanceYOffsetEvaluator", "kYJumpOffsetBufferSongTimeInitValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentYJumpOffsetBufferEndIndex
int& GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::dyn__currentYJumpOffsetBufferEndIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::dyn__currentYJumpOffsetBufferEndIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentYJumpOffsetBufferEndIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single _jumpDurationToDesiredZPosition
float& GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::dyn__jumpDurationToDesiredZPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::dyn__jumpDurationToDesiredZPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jumpDurationToDesiredZPosition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectAvoidanceYOffsetEvaluator/BufferData[] _yJumpOffsetBuffer
::ArrayW<::GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::BufferData>& GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::dyn__yJumpOffsetBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::dyn__yJumpOffsetBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yJumpOffsetBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::BufferData>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSource
::GlobalNamespace::IAudioTimeSource*& GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::dyn__audioTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::dyn__audioTimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSource"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapObjectSpawnController _beatmapObjectSpawnController
::GlobalNamespace::IBeatmapObjectSpawnController*& GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::dyn__beatmapObjectSpawnController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::dyn__beatmapObjectSpawnController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectSpawnController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapObjectSpawnController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectAvoidanceYOffsetEvaluator.ManualUpdate
void GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::ManualUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectAvoidanceYOffsetEvaluator.GetJumpOffsetYAtJumpStartSongTime
float GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::GetJumpOffsetYAtJumpStartSongTime(float lastDeltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::GetJumpOffsetYAtJumpStartSongTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetJumpOffsetYAtJumpStartSongTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lastDeltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, lastDeltaTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectAvoidanceYOffsetEvaluator/BufferData
#include "GlobalNamespace/BeatmapObjectAvoidanceYOffsetEvaluator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single songTime
float& GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::BufferData::dyn_songTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::BufferData::dyn_songTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single yOffset
float& GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::BufferData::dyn_yOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::BufferData::dyn_yOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "yOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectAvoidanceYOffsetEvaluator/BufferData..ctor
// ABORTED elsewhere.  GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator::BufferData::BufferData(float songTime, float yOffset)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectsAvoidance
#include "GlobalNamespace/BeatmapObjectsAvoidance.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: IBeatmapObjectSpawnController
#include "GlobalNamespace/IBeatmapObjectSpawnController.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: BeatmapObjectAvoidanceYOffsetEvaluator
#include "GlobalNamespace/BeatmapObjectAvoidanceYOffsetEvaluator.hpp"
// Including type: BeatmapObjectAvoidancePathEvaluator
#include "GlobalNamespace/BeatmapObjectAvoidancePathEvaluator.hpp"
// Including type: BeatmapObjectAvoidanceTiltEvaluator
#include "GlobalNamespace/BeatmapObjectAvoidanceTiltEvaluator.hpp"
// Including type: BezierSplineEvaluator
#include "GlobalNamespace/BezierSplineEvaluator.hpp"
// Including type: OffsetDirection
#include "GlobalNamespace/OffsetDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _zOffset
float& GlobalNamespace::BeatmapObjectsAvoidance::dyn__zOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::dyn__zOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _yOffset
float& GlobalNamespace::BeatmapObjectsAvoidance::dyn__yOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::dyn__yOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _gravity
::UnityEngine::Vector2& GlobalNamespace::BeatmapObjectsAvoidance::dyn__gravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::dyn__gravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gravity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _towardsPlayerWrapperTransform
::UnityEngine::Transform*& GlobalNamespace::BeatmapObjectsAvoidance::dyn__towardsPlayerWrapperTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::dyn__towardsPlayerWrapperTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_towardsPlayerWrapperTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSource
::GlobalNamespace::IAudioTimeSource*& GlobalNamespace::BeatmapObjectsAvoidance::dyn__audioTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::dyn__audioTimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSource"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IReadonlyBeatmapData _beatmapData
::GlobalNamespace::IReadonlyBeatmapData*& GlobalNamespace::BeatmapObjectsAvoidance::dyn__beatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::dyn__beatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IReadonlyBeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapObjectSpawnController _beatmapObjectSpawnController
::GlobalNamespace::IBeatmapObjectSpawnController*& GlobalNamespace::BeatmapObjectsAvoidance::dyn__beatmapObjectSpawnController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::dyn__beatmapObjectSpawnController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectSpawnController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapObjectSpawnController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerTransforms _playerTransforms
::GlobalNamespace::PlayerTransforms*& GlobalNamespace::BeatmapObjectsAvoidance::dyn__playerTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::dyn__playerTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerTransforms"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerTransforms**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapObjectAvoidanceYOffsetEvaluator _avoidanceYOffsetEvaluatorProvider
::GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator*& GlobalNamespace::BeatmapObjectsAvoidance::dyn__avoidanceYOffsetEvaluatorProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::dyn__avoidanceYOffsetEvaluatorProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avoidanceYOffsetEvaluatorProvider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectAvoidanceYOffsetEvaluator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapObjectAvoidancePathEvaluator _pathEvaluator
::GlobalNamespace::BeatmapObjectAvoidancePathEvaluator*& GlobalNamespace::BeatmapObjectsAvoidance::dyn__pathEvaluator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::dyn__pathEvaluator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pathEvaluator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectAvoidancePathEvaluator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapObjectAvoidanceTiltEvaluator _tiltEvaluator
::GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator*& GlobalNamespace::BeatmapObjectsAvoidance::dyn__tiltEvaluator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::dyn__tiltEvaluator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tiltEvaluator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectAvoidanceTiltEvaluator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BezierSplineEvaluator _pathBezierSplineEvaluator
::GlobalNamespace::BezierSplineEvaluator*& GlobalNamespace::BeatmapObjectsAvoidance::dyn__pathBezierSplineEvaluator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::dyn__pathBezierSplineEvaluator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pathBezierSplineEvaluator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BezierSplineEvaluator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BezierSplineEvaluator _accelerationBezierSplineEvaluator
::GlobalNamespace::BezierSplineEvaluator*& GlobalNamespace::BeatmapObjectsAvoidance::dyn__accelerationBezierSplineEvaluator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::dyn__accelerationBezierSplineEvaluator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_accelerationBezierSplineEvaluator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BezierSplineEvaluator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
::UnityEngine::Transform*& GlobalNamespace::BeatmapObjectsAvoidance::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectsAvoidance.Awake
void GlobalNamespace::BeatmapObjectsAvoidance::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectsAvoidance.Start
void GlobalNamespace::BeatmapObjectsAvoidance::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectsAvoidance.OnDestroy
void GlobalNamespace::BeatmapObjectsAvoidance::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectsAvoidance.Update
void GlobalNamespace::BeatmapObjectsAvoidance::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectsAvoidance.SetupAndRun
void GlobalNamespace::BeatmapObjectsAvoidance::SetupAndRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::SetupAndRun");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupAndRun", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectsAvoidance.BuildAnimationCurvePath
bool GlobalNamespace::BeatmapObjectsAvoidance::BuildAnimationCurvePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::BuildAnimationCurvePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildAnimationCurvePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectsAvoidance.AdjustPositionWithOffsetDirection
void GlobalNamespace::BeatmapObjectsAvoidance::AdjustPositionWithOffsetDirection(ByRef<::UnityEngine::Vector2> position, int lineIndex, ::GlobalNamespace::OffsetDirection offsetDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::AdjustPositionWithOffsetDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdjustPositionWithOffsetDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(lineIndex), ::il2cpp_utils::ExtractType(offsetDirection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(position), lineIndex, offsetDirection);
}
// Autogenerated method: BeatmapObjectsAvoidance.HandleBeatmapObjectSpawnControllerDidInit
void GlobalNamespace::BeatmapObjectsAvoidance::HandleBeatmapObjectSpawnControllerDidInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsAvoidance::HandleBeatmapObjectSpawnControllerDidInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectSpawnControllerDidInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BtsResultsEnvironmentController
#include "GlobalNamespace/BtsResultsEnvironmentController.hpp"
// Including type: BtsResultsEnvironmentController/BTSResultCharacterPlaceWithAnimation
#include "GlobalNamespace/BtsResultsEnvironmentController_BTSResultCharacterPlaceWithAnimation.hpp"
// Including type: BtsResultsEnvironmentController/<DestroyCharactersDelayed>d__11
#include "GlobalNamespace/BtsResultsEnvironmentController_-DestroyCharactersDelayed-d__11.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: BTSCharacterDataModel/PrefabWithId
#include "GlobalNamespace/BTSCharacterDataModel_PrefabWithId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private BasicBeatmapEventType kCharacterDisplayEventType
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BtsResultsEnvironmentController::_get_kCharacterDisplayEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::_get_kCharacterDisplayEventType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BtsResultsEnvironmentController", "kCharacterDisplayEventType"));
}
// Autogenerated static field setter
// Set static field: static private BasicBeatmapEventType kCharacterDisplayEventType
void GlobalNamespace::BtsResultsEnvironmentController::_set_kCharacterDisplayEventType(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::_set_kCharacterDisplayEventType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BtsResultsEnvironmentController", "kCharacterDisplayEventType", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _btsCharacterAnimationWrapper
::UnityEngine::GameObject*& GlobalNamespace::BtsResultsEnvironmentController::dyn__btsCharacterAnimationWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::dyn__btsCharacterAnimationWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_btsCharacterAnimationWrapper"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BTSCharacterDataModel _btsCharacterDataModel
::GlobalNamespace::BTSCharacterDataModel*& GlobalNamespace::BtsResultsEnvironmentController::dyn__btsCharacterDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::dyn__btsCharacterDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_btsCharacterDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BTSCharacterDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableDirector _btsCharactersResultsAppearPlayableDirector
::UnityEngine::Playables::PlayableDirector*& GlobalNamespace::BtsResultsEnvironmentController::dyn__btsCharactersResultsAppearPlayableDirector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::dyn__btsCharactersResultsAppearPlayableDirector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_btsCharactersResultsAppearPlayableDirector"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableDirector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BtsResultsEnvironmentController/BTSResultCharacterPlaceWithAnimation[] _resultPlacesWithAnimations
::ArrayW<::GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation*>& GlobalNamespace::BtsResultsEnvironmentController::dyn__resultPlacesWithAnimations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::dyn__resultPlacesWithAnimations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultPlacesWithAnimations"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> _handles
::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*& GlobalNamespace::BtsResultsEnvironmentController::dyn__handles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::dyn__handles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BtsResultsEnvironmentController.SpawnBtsCharacters
void GlobalNamespace::BtsResultsEnvironmentController::SpawnBtsCharacters(::GlobalNamespace::BTSCharacterDataModel::PrefabWithId* btsCharacterPrefabToSpawn, bool useAlternativeMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::SpawnBtsCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnBtsCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btsCharacterPrefabToSpawn), ::il2cpp_utils::ExtractType(useAlternativeMaterial)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, btsCharacterPrefabToSpawn, useAlternativeMaterial);
}
// Autogenerated method: BtsResultsEnvironmentController.DestroyCharactersDelayed
::System::Collections::IEnumerator* GlobalNamespace::BtsResultsEnvironmentController::DestroyCharactersDelayed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::DestroyCharactersDelayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyCharactersDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: BtsResultsEnvironmentController.DestroyCharactersAndStopAnimations
void GlobalNamespace::BtsResultsEnvironmentController::DestroyCharactersAndStopAnimations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::DestroyCharactersAndStopAnimations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyCharactersAndStopAnimations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BtsResultsEnvironmentController.Setup
void GlobalNamespace::BtsResultsEnvironmentController::Setup(::GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::Setup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapData);
}
// Autogenerated method: BtsResultsEnvironmentController.Activate
void GlobalNamespace::BtsResultsEnvironmentController::Activate(bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(immediately)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, immediately);
}
// Autogenerated method: BtsResultsEnvironmentController.Deactivate
void GlobalNamespace::BtsResultsEnvironmentController::Deactivate(bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(immediately)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, immediately);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BtsResultsEnvironmentController/BTSResultCharacterPlaceWithAnimation
#include "GlobalNamespace/BtsResultsEnvironmentController_BTSResultCharacterPlaceWithAnimation.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: BTSCharacterResultAnimationController
#include "GlobalNamespace/BTSCharacterResultAnimationController.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: BTSCharacter
#include "GlobalNamespace/BTSCharacter.hpp"
// Including type: UnityEngine.AddressableAssets.AssetReference
#include "UnityEngine/AddressableAssets/AssetReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _name
::StringW& GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _placeTransform
::UnityEngine::Transform*& GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::dyn__placeTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::dyn__placeTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_placeTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BTSCharacterResultAnimationController _animationController
::GlobalNamespace::BTSCharacterResultAnimationController*& GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::dyn__animationController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::dyn__animationController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BTSCharacterResultAnimationController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _animationClip
::UnityEngine::AnimationClip*& GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::dyn__animationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::dyn__animationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BTSCharacter _btsCharacter
::GlobalNamespace::BTSCharacter*& GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::dyn__btsCharacter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::dyn__btsCharacter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_btsCharacter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BTSCharacter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AddressableAssets.AssetReference _btsCharacterAssetReference
::UnityEngine::AddressableAssets::AssetReference*& GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::dyn__btsCharacterAssetReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::dyn__btsCharacterAssetReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_btsCharacterAssetReference"))->offset;
  return *reinterpret_cast<::UnityEngine::AddressableAssets::AssetReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BtsResultsEnvironmentController/BTSResultCharacterPlaceWithAnimation.get_name
::StringW GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BtsResultsEnvironmentController/BTSResultCharacterPlaceWithAnimation.Clean
void GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::Clean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::Clean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BtsResultsEnvironmentController/BTSResultCharacterPlaceWithAnimation.SetCharacter
void GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::SetCharacter(::UnityEngine::AddressableAssets::AssetReference* assetReference, ::GlobalNamespace::BTSCharacter* btsCharacter, bool alternativeMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::BTSResultCharacterPlaceWithAnimation::SetCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetReference), ::il2cpp_utils::ExtractType(btsCharacter), ::il2cpp_utils::ExtractType(alternativeMaterial)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, assetReference, btsCharacter, alternativeMaterial);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BtsResultsEnvironmentController/<DestroyCharactersDelayed>d__11
#include "GlobalNamespace/BtsResultsEnvironmentController_-DestroyCharactersDelayed-d__11.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__11::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__11::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__11::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__11::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BtsResultsEnvironmentController <>4__this
::GlobalNamespace::BtsResultsEnvironmentController*& GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__11::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__11::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BtsResultsEnvironmentController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BtsResultsEnvironmentController/<DestroyCharactersDelayed>d__11.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__11::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__11::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BtsResultsEnvironmentController/<DestroyCharactersDelayed>d__11.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__11::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__11::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BtsResultsEnvironmentController/<DestroyCharactersDelayed>d__11.System.IDisposable.Dispose
void GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__11::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__11::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BtsResultsEnvironmentController/<DestroyCharactersDelayed>d__11.MoveNext
bool GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__11::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__11::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BtsResultsEnvironmentController/<DestroyCharactersDelayed>d__11.System.Collections.IEnumerator.Reset
void GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__11::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BtsResultsEnvironmentController::$DestroyCharactersDelayed$d__11::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CloudsMeshGenerator
#include "GlobalNamespace/CloudsMeshGenerator.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _meshFilter
::UnityEngine::MeshFilter*& GlobalNamespace::CloudsMeshGenerator::dyn__meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__meshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _meshName
::StringW& GlobalNamespace::CloudsMeshGenerator::dyn__meshName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__meshName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _pauseGenerator
bool& GlobalNamespace::CloudsMeshGenerator::dyn__pauseGenerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__pauseGenerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pauseGenerator"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _bottomPushEnabled
bool& GlobalNamespace::CloudsMeshGenerator::dyn__bottomPushEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__bottomPushEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bottomPushEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bottomPushDistance
float& GlobalNamespace::CloudsMeshGenerator::dyn__bottomPushDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__bottomPushDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bottomPushDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _bottomScaleTopBottom
::UnityEngine::Vector2& GlobalNamespace::CloudsMeshGenerator::dyn__bottomScaleTopBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__bottomScaleTopBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bottomScaleTopBottom"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bottomHorizontalScale
float& GlobalNamespace::CloudsMeshGenerator::dyn__bottomHorizontalScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__bottomHorizontalScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bottomHorizontalScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _drawRingGizmos
bool& GlobalNamespace::CloudsMeshGenerator::dyn__drawRingGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__drawRingGizmos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_drawRingGizmos"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CloudsMeshGenerator/ProhibitedRadius[] _prohibitedRadii
::ArrayW<::GlobalNamespace::CloudsMeshGenerator::ProhibitedRadius>& GlobalNamespace::CloudsMeshGenerator::dyn__prohibitedRadii() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__prohibitedRadii");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prohibitedRadii"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::CloudsMeshGenerator::ProhibitedRadius>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _meshSize
::UnityEngine::Vector2& GlobalNamespace::CloudsMeshGenerator::dyn__meshSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__meshSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sizeRandomness
float& GlobalNamespace::CloudsMeshGenerator::dyn__sizeRandomness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__sizeRandomness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sizeRandomness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _ratioRandomness
float& GlobalNamespace::CloudsMeshGenerator::dyn__ratioRandomness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__ratioRandomness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ratioRandomness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _perMeshRadiusOffset
float& GlobalNamespace::CloudsMeshGenerator::dyn__perMeshRadiusOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__perMeshRadiusOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_perMeshRadiusOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient _possibleColors
::UnityEngine::Gradient*& GlobalNamespace::CloudsMeshGenerator::dyn__possibleColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__possibleColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_possibleColors"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _randomSeed
int& GlobalNamespace::CloudsMeshGenerator::dyn__randomSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__randomSeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomSeed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _heightRandomness
float& GlobalNamespace::CloudsMeshGenerator::dyn__heightRandomness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__heightRandomness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_heightRandomness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _ringRotationRandomness
float& GlobalNamespace::CloudsMeshGenerator::dyn__ringRotationRandomness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__ringRotationRandomness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringRotationRandomness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _ringCount
int& GlobalNamespace::CloudsMeshGenerator::dyn__ringCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__ringCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _meshesPerRadius
float& GlobalNamespace::CloudsMeshGenerator::dyn__meshesPerRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__meshesPerRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshesPerRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _radiusCloseFar
::UnityEngine::Vector2& GlobalNamespace::CloudsMeshGenerator::dyn__radiusCloseFar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__radiusCloseFar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radiusCloseFar"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _sizeCloseFar
::UnityEngine::Vector2& GlobalNamespace::CloudsMeshGenerator::dyn__sizeCloseFar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__sizeCloseFar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sizeCloseFar"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _heightCloseFar
::UnityEngine::AnimationCurve*& GlobalNamespace::CloudsMeshGenerator::dyn__heightCloseFar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__heightCloseFar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_heightCloseFar"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lowPolyThreshold
float& GlobalNamespace::CloudsMeshGenerator::dyn__lowPolyThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__lowPolyThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lowPolyThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _flipNormals
bool& GlobalNamespace::CloudsMeshGenerator::dyn__flipNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__flipNormals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flipNormals"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _curveMesh
bool& GlobalNamespace::CloudsMeshGenerator::dyn__curveMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__curveMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curveMesh"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CloudsMeshGenerator/Cloud[] _clouds
::ArrayW<::GlobalNamespace::CloudsMeshGenerator::Cloud>& GlobalNamespace::CloudsMeshGenerator::dyn__clouds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__clouds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clouds"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::CloudsMeshGenerator::Cloud>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _meshCount
int& GlobalNamespace::CloudsMeshGenerator::dyn__meshCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__meshCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _vertexCount
int& GlobalNamespace::CloudsMeshGenerator::dyn__vertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__vertexCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vertexCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _generatedMesh
::UnityEngine::Mesh*& GlobalNamespace::CloudsMeshGenerator::dyn__generatedMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__generatedMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_generatedMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Bounds _meshBounds
::UnityEngine::Bounds& GlobalNamespace::CloudsMeshGenerator::dyn__meshBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__meshBounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshBounds"))->offset;
  return *reinterpret_cast<::UnityEngine::Bounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CloudsMeshGenerator/RadiusChunk[] _radiusChunks
::ArrayW<::GlobalNamespace::CloudsMeshGenerator::RadiusChunk>& GlobalNamespace::CloudsMeshGenerator::dyn__radiusChunks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__radiusChunks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radiusChunks"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::CloudsMeshGenerator::RadiusChunk>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CloudsMeshGenerator/Ring[] _rings
::ArrayW<::GlobalNamespace::CloudsMeshGenerator::Ring>& GlobalNamespace::CloudsMeshGenerator::dyn__rings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__rings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rings"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::CloudsMeshGenerator::Ring>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CloudsMeshGenerator/ProhibitedRadius[] _sortedProhibitedRadii
::ArrayW<::GlobalNamespace::CloudsMeshGenerator::ProhibitedRadius>& GlobalNamespace::CloudsMeshGenerator::dyn__sortedProhibitedRadii() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CloudsMeshGenerator::dyn__sortedProhibitedRadii");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sortedProhibitedRadii"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::CloudsMeshGenerator::ProhibitedRadius>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BezierCurve
#include "GlobalNamespace/BezierCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 p0
::UnityEngine::Vector3& GlobalNamespace::BezierCurve::dyn_p0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierCurve::dyn_p0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "p0"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 p1
::UnityEngine::Vector3& GlobalNamespace::BezierCurve::dyn_p1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierCurve::dyn_p1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "p1"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 p2
::UnityEngine::Vector3& GlobalNamespace::BezierCurve::dyn_p2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierCurve::dyn_p2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "p2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 p3
::UnityEngine::Vector3& GlobalNamespace::BezierCurve::dyn_p3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierCurve::dyn_p3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "p3"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BezierCurve..ctor
// ABORTED elsewhere.  GlobalNamespace::BezierCurve::BezierCurve(::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 p2, ::UnityEngine::Vector3 p3)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BezierSpline
#include "GlobalNamespace/BezierSpline.hpp"
// Including type: BezierSpline/ComputeControlPointsResults
#include "GlobalNamespace/BezierSpline_ComputeControlPointsResults.hpp"
// Including type: BezierSpline/<>c
#include "GlobalNamespace/BezierSpline_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<BezierCurve> _segments
::System::Collections::Generic::List_1<::GlobalNamespace::BezierCurve>*& GlobalNamespace::BezierSpline::dyn__segments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::dyn__segments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_segments"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BezierCurve>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Vector3> _sourceDataPoints
::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::BezierSpline::dyn__sourceDataPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::dyn__sourceDataPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sourceDataPoints"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BezierSpline.get_segments
::System::Collections::Generic::List_1<::GlobalNamespace::BezierCurve>* GlobalNamespace::BezierSpline::get_segments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::get_segments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_segments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::BezierCurve>*, false>(this, ___internal__method);
}
// Autogenerated method: BezierSpline.AddPoint
void GlobalNamespace::BezierSpline::AddPoint(float distance, ::UnityEngine::Vector2 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::AddPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(point)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, distance, point);
}
// Autogenerated method: BezierSpline.SortSourceData
void GlobalNamespace::BezierSpline::SortSourceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::SortSourceData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortSourceData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BezierSpline.AddArtificialStartAndFinishPoint
void GlobalNamespace::BezierSpline::AddArtificialStartAndFinishPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::AddArtificialStartAndFinishPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddArtificialStartAndFinishPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BezierSpline.ComputeControlPoints
void GlobalNamespace::BezierSpline::ComputeControlPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::ComputeControlPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeControlPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BezierSpline.Clear
void GlobalNamespace::BezierSpline::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BezierSpline.ComputeControlPoints
::GlobalNamespace::BezierSpline::ComputeControlPointsResults GlobalNamespace::BezierSpline::ComputeControlPoints(::System::Collections::Generic::List_1<float>* k) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::ComputeControlPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeControlPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(k)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BezierSpline::ComputeControlPointsResults, false>(this, ___internal__method, k);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BezierSpline/ComputeControlPointsResults
#include "GlobalNamespace/BezierSpline_ComputeControlPointsResults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single[] p1
::ArrayW<float>& GlobalNamespace::BezierSpline::ComputeControlPointsResults::dyn_p1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::ComputeControlPointsResults::dyn_p1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "p1"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single[] p2
::ArrayW<float>& GlobalNamespace::BezierSpline::ComputeControlPointsResults::dyn_p2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::ComputeControlPointsResults::dyn_p2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "p2"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BezierSpline/ComputeControlPointsResults..ctor
// ABORTED elsewhere.  GlobalNamespace::BezierSpline::ComputeControlPointsResults::ComputeControlPointsResults(::ArrayW<float> p1, ::ArrayW<float> p2)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BezierSpline/<>c
#include "GlobalNamespace/BezierSpline_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BezierSpline/<>c <>9
::GlobalNamespace::BezierSpline::$$c* GlobalNamespace::BezierSpline::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::BezierSpline::$$c*>("", "BezierSpline/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BezierSpline/<>c <>9
void GlobalNamespace::BezierSpline::$$c::_set_$$9(::GlobalNamespace::BezierSpline::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BezierSpline/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Vector3> <>9__6_0
::System::Comparison_1<::UnityEngine::Vector3>* GlobalNamespace::BezierSpline::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::Vector3>*>("", "BezierSpline/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Vector3> <>9__6_0
void GlobalNamespace::BezierSpline::$$c::_set_$$9__6_0(::System::Comparison_1<::UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BezierSpline/<>c", "<>9__6_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.Vector3,System.Single> <>9__8_0
::System::Func_2<::UnityEngine::Vector3, float>* GlobalNamespace::BezierSpline::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::Vector3, float>*>("", "BezierSpline/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.Vector3,System.Single> <>9__8_0
void GlobalNamespace::BezierSpline::$$c::_set_$$9__8_0(::System::Func_2<::UnityEngine::Vector3, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BezierSpline/<>c", "<>9__8_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.Vector3,System.Single> <>9__8_1
::System::Func_2<::UnityEngine::Vector3, float>* GlobalNamespace::BezierSpline::$$c::_get_$$9__8_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::$$c::_get_$$9__8_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::Vector3, float>*>("", "BezierSpline/<>c", "<>9__8_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.Vector3,System.Single> <>9__8_1
void GlobalNamespace::BezierSpline::$$c::_set_$$9__8_1(::System::Func_2<::UnityEngine::Vector3, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::$$c::_set_$$9__8_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BezierSpline/<>c", "<>9__8_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.Vector3,System.Single> <>9__8_2
::System::Func_2<::UnityEngine::Vector3, float>* GlobalNamespace::BezierSpline::$$c::_get_$$9__8_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::$$c::_get_$$9__8_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::Vector3, float>*>("", "BezierSpline/<>c", "<>9__8_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.Vector3,System.Single> <>9__8_2
void GlobalNamespace::BezierSpline::$$c::_set_$$9__8_2(::System::Func_2<::UnityEngine::Vector3, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::$$c::_set_$$9__8_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BezierSpline/<>c", "<>9__8_2", value)));
}
// Autogenerated method: BezierSpline/<>c..cctor
void GlobalNamespace::BezierSpline::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BezierSpline/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BezierSpline/<>c.<SortSourceData>b__6_0
int GlobalNamespace::BezierSpline::$$c::$SortSourceData$b__6_0(::UnityEngine::Vector3 point1, ::UnityEngine::Vector3 point2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::$$c::<SortSourceData>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortSourceData>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point1), ::il2cpp_utils::ExtractType(point2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, point1, point2);
}
// Autogenerated method: BezierSpline/<>c.<ComputeControlPoints>b__8_0
float GlobalNamespace::BezierSpline::$$c::$ComputeControlPoints$b__8_0(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::$$c::<ComputeControlPoints>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ComputeControlPoints>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, p);
}
// Autogenerated method: BezierSpline/<>c.<ComputeControlPoints>b__8_1
float GlobalNamespace::BezierSpline::$$c::$ComputeControlPoints$b__8_1(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::$$c::<ComputeControlPoints>b__8_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ComputeControlPoints>b__8_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, p);
}
// Autogenerated method: BezierSpline/<>c.<ComputeControlPoints>b__8_2
float GlobalNamespace::BezierSpline::$$c::$ComputeControlPoints$b__8_2(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSpline::$$c::<ComputeControlPoints>b__8_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ComputeControlPoints>b__8_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BezierSplineEvaluator
#include "GlobalNamespace/BezierSplineEvaluator.hpp"
// Including type: BezierSplineEvaluator/CubicSolveResult
#include "GlobalNamespace/BezierSplineEvaluator_CubicSolveResult.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BezierSpline
#include "GlobalNamespace/BezierSpline.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kSlightAboveOne
float GlobalNamespace::BezierSplineEvaluator::_get_kSlightAboveOne() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::_get_kSlightAboveOne");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BezierSplineEvaluator", "kSlightAboveOne"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSlightAboveOne
void GlobalNamespace::BezierSplineEvaluator::_set_kSlightAboveOne(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::_set_kSlightAboveOne");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BezierSplineEvaluator", "kSlightAboveOne", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kSlightBelowZero
float GlobalNamespace::BezierSplineEvaluator::_get_kSlightBelowZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::_get_kSlightBelowZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BezierSplineEvaluator", "kSlightBelowZero"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSlightBelowZero
void GlobalNamespace::BezierSplineEvaluator::_set_kSlightBelowZero(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::_set_kSlightBelowZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BezierSplineEvaluator", "kSlightBelowZero", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<BezierCurve> _segments
::System::Collections::Generic::List_1<::GlobalNamespace::BezierCurve>*& GlobalNamespace::BezierSplineEvaluator::dyn__segments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::dyn__segments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_segments"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BezierCurve>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentSegmentIndex
int& GlobalNamespace::BezierSplineEvaluator::dyn__currentSegmentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::dyn__currentSegmentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentSegmentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BezierSplineEvaluator.EvaluatePosition
::UnityEngine::Vector3 GlobalNamespace::BezierSplineEvaluator::EvaluatePosition(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::EvaluatePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluatePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, time);
}
// Autogenerated method: BezierSplineEvaluator.Evaluate
::UnityEngine::Vector3 GlobalNamespace::BezierSplineEvaluator::Evaluate(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::Evaluate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, t);
}
// Autogenerated method: BezierSplineEvaluator.EvaluateFirstDerivation
::UnityEngine::Vector3 GlobalNamespace::BezierSplineEvaluator::EvaluateFirstDerivation(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::EvaluateFirstDerivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateFirstDerivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, t);
}
// Autogenerated method: BezierSplineEvaluator.EvaluateSecondDerivation
::UnityEngine::Vector3 GlobalNamespace::BezierSplineEvaluator::EvaluateSecondDerivation(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::EvaluateSecondDerivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateSecondDerivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, t);
}
// Autogenerated method: BezierSplineEvaluator.OffsetSegmentAndGetT
float GlobalNamespace::BezierSplineEvaluator::OffsetSegmentAndGetT(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::OffsetSegmentAndGetT");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OffsetSegmentAndGetT", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, time);
}
// Autogenerated method: BezierSplineEvaluator.GetTForSegment
float GlobalNamespace::BezierSplineEvaluator::GetTForSegment(int segmentIndex, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::GetTForSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTForSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentIndex), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, segmentIndex, time);
}
// Autogenerated method: BezierSplineEvaluator.GetTimeValuesForSegment
void GlobalNamespace::BezierSplineEvaluator::GetTimeValuesForSegment(int segmentIndex, ByRef<float> t0Value, ByRef<float> t1Value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::GetTimeValuesForSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTimeValuesForSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentIndex), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, segmentIndex, byref(t0Value), byref(t1Value));
}
// Autogenerated method: BezierSplineEvaluator.OffsetStartIndexToDistance
void GlobalNamespace::BezierSplineEvaluator::OffsetStartIndexToDistance(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::OffsetStartIndexToDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OffsetStartIndexToDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: BezierSplineEvaluator.CubeRoot
float GlobalNamespace::BezierSplineEvaluator::CubeRoot(float x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::CubeRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BezierSplineEvaluator", "CubeRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: BezierSplineEvaluator.SolveCubic
::GlobalNamespace::BezierSplineEvaluator::CubicSolveResult GlobalNamespace::BezierSplineEvaluator::SolveCubic(float a, float b, float c, float d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::SolveCubic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BezierSplineEvaluator", "SolveCubic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BezierSplineEvaluator::CubicSolveResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c, d);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BezierSplineEvaluator/CubicSolveResult
#include "GlobalNamespace/BezierSplineEvaluator_CubicSolveResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 numberOfSolutions
int& GlobalNamespace::BezierSplineEvaluator::CubicSolveResult::dyn_numberOfSolutions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::CubicSolveResult::dyn_numberOfSolutions");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberOfSolutions"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single solution1
float& GlobalNamespace::BezierSplineEvaluator::CubicSolveResult::dyn_solution1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::CubicSolveResult::dyn_solution1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solution1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single solution2
float& GlobalNamespace::BezierSplineEvaluator::CubicSolveResult::dyn_solution2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::CubicSolveResult::dyn_solution2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solution2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single solution3
float& GlobalNamespace::BezierSplineEvaluator::CubicSolveResult::dyn_solution3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::CubicSolveResult::dyn_solution3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "solution3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BezierSplineEvaluator/CubicSolveResult..ctor
GlobalNamespace::BezierSplineEvaluator::CubicSolveResult::CubicSolveResult(float solution1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::CubicSolveResult::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solution1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solution1);
}
// Autogenerated method: BezierSplineEvaluator/CubicSolveResult..ctor
GlobalNamespace::BezierSplineEvaluator::CubicSolveResult::CubicSolveResult(float solution1, float solution2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::CubicSolveResult::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solution1), ::il2cpp_utils::ExtractType(solution2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solution1, solution2);
}
// Autogenerated method: BezierSplineEvaluator/CubicSolveResult..ctor
GlobalNamespace::BezierSplineEvaluator::CubicSolveResult::CubicSolveResult(float solution1, float solution2, float solution3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierSplineEvaluator::CubicSolveResult::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(solution1), ::il2cpp_utils::ExtractType(solution2), ::il2cpp_utils::ExtractType(solution3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, solution1, solution2, solution3);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WaypointsTestMenuViewController
#include "GlobalNamespace/WaypointsTestMenuViewController.hpp"
// Including type: WaypointsTestMenuViewController/<CheckBeatmaps>d__13
#include "GlobalNamespace/WaypointsTestMenuViewController_-CheckBeatmaps-d__13.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _btsButton
::UnityEngine::UI::Button*& GlobalNamespace::WaypointsTestMenuViewController::dyn__btsButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::dyn__btsButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_btsButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _cancelButton
::UnityEngine::UI::Button*& GlobalNamespace::WaypointsTestMenuViewController::dyn__cancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::dyn__cancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _progressText
::TMPro::TextMeshProUGUI*& GlobalNamespace::WaypointsTestMenuViewController::dyn__progressText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::dyn__progressText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progressText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private StandardLevelScenesTransitionSetupDataSO _waypointsTestScenesTransitionSetupData
::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*& GlobalNamespace::WaypointsTestMenuViewController::dyn__waypointsTestScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::dyn__waypointsTestScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waypointsTestScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<BeatmapLevelSO> _levels
::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelSO*>*& GlobalNamespace::WaypointsTestMenuViewController::dyn__levels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::dyn__levels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levels"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<BeatmapCharacteristicSO> _characteristics
::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapCharacteristicSO*>*& GlobalNamespace::WaypointsTestMenuViewController::dyn__characteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::dyn__characteristics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_characteristics"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapCharacteristicSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameScenesManager _gameScenesManager
::GlobalNamespace::GameScenesManager*& GlobalNamespace::WaypointsTestMenuViewController::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
::GlobalNamespace::PlayerDataModel*& GlobalNamespace::WaypointsTestMenuViewController::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder _buttonBinder
::HMUI::ButtonBinder*& GlobalNamespace::WaypointsTestMenuViewController::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isCancelled
bool& GlobalNamespace::WaypointsTestMenuViewController::dyn__isCancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::dyn__isCancelled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isCancelled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _waitingForLevelFinish
bool& GlobalNamespace::WaypointsTestMenuViewController::dyn__waitingForLevelFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::dyn__waitingForLevelFinish");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waitingForLevelFinish"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WaypointsTestMenuViewController.Start
void GlobalNamespace::WaypointsTestMenuViewController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController.OnDestroy
void GlobalNamespace::WaypointsTestMenuViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController.CheckBeatmaps
::System::Collections::IEnumerator* GlobalNamespace::WaypointsTestMenuViewController::CheckBeatmaps(::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelSO*>* levels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::CheckBeatmaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levels)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, levels);
}
// Autogenerated method: WaypointsTestMenuViewController.HandleMainGameSceneDidFinish
void GlobalNamespace::WaypointsTestMenuViewController::HandleMainGameSceneDidFinish(::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* data, ::GlobalNamespace::LevelCompletionResults* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::HandleMainGameSceneDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMainGameSceneDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, results);
}
// Autogenerated method: WaypointsTestMenuViewController.<Start>b__11_0
void GlobalNamespace::WaypointsTestMenuViewController::$Start$b__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::<Start>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController.<Start>b__11_1
void GlobalNamespace::WaypointsTestMenuViewController::$Start$b__11_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::<Start>b__11_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__11_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController.<HandleMainGameSceneDidFinish>b__14_0
void GlobalNamespace::WaypointsTestMenuViewController::$HandleMainGameSceneDidFinish$b__14_0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::<HandleMainGameSceneDidFinish>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMainGameSceneDidFinish>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: WaypointsTestMenuViewController/<CheckBeatmaps>d__13
#include "GlobalNamespace/WaypointsTestMenuViewController_-CheckBeatmaps-d__13.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public WaypointsTestMenuViewController <>4__this
::GlobalNamespace::WaypointsTestMenuViewController*& GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::WaypointsTestMenuViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapLevelSO> levels
::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelSO*>*& GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_levels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_levels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levels"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <count>5__2
int& GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$count$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$count$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<count>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<BeatmapDifficulty> <difficultiesToCheck>5__3
::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapDifficulty>*& GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$difficultiesToCheck$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$difficultiesToCheck$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<difficultiesToCheck>5__3"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapDifficulty>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1/System.Collections.Generic.Enumerator<BeatmapLevelSO> <>7__wrap3
typename ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelSO*>::Enumerator& GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$$7__wrap3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$$7__wrap3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap3"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelSO*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO <level>5__5
::GlobalNamespace::BeatmapLevelSO*& GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$level$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$level$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<level>5__5"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1/System.Collections.Generic.Enumerator<BeatmapCharacteristicSO> <>7__wrap5
typename ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapCharacteristicSO*>::Enumerator& GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$$7__wrap5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$$7__wrap5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap5"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapCharacteristicSO*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO <characteristic>5__7
::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$characteristic$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$characteristic$5__7");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<characteristic>5__7"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1/System.Collections.Generic.Enumerator<BeatmapDifficulty> <>7__wrap7
typename ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapDifficulty>::Enumerator& GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$$7__wrap7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$$7__wrap7");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap7"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapDifficulty>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficulty <difficulty>5__9
::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$difficulty$5__9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::dyn_$difficulty$5__9");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<difficulty>5__9"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WaypointsTestMenuViewController/<CheckBeatmaps>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController/<CheckBeatmaps>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController/<CheckBeatmaps>d__13.System.IDisposable.Dispose
void GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController/<CheckBeatmaps>d__13.MoveNext
bool GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController/<CheckBeatmaps>d__13.<>m__Finally1
void GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController/<CheckBeatmaps>d__13.<>m__Finally2
void GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::$$m__Finally2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::<>m__Finally2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController/<CheckBeatmaps>d__13.<>m__Finally3
void GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::$$m__Finally3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::<>m__Finally3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointsTestMenuViewController/<CheckBeatmaps>d__13.System.Collections.IEnumerator.Reset
void GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointsTestMenuViewController::$CheckBeatmaps$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HydraulicCarJumpEffect
#include "GlobalNamespace/HydraulicCarJumpEffect.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _event
::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::HydraulicCarJumpEffect::dyn__event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarJumpEffect::dyn__event");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_event"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] _eventValues
::ArrayW<int>& GlobalNamespace::HydraulicCarJumpEffect::dyn__eventValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarJumpEffect::dyn__eventValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventValues"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _impulse
::UnityEngine::Vector3& GlobalNamespace::HydraulicCarJumpEffect::dyn__impulse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarJumpEffect::dyn__impulse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_impulse"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _randomness
float& GlobalNamespace::HydraulicCarJumpEffect::dyn__randomness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarJumpEffect::dyn__randomness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _position
::UnityEngine::Vector3& GlobalNamespace::HydraulicCarJumpEffect::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarJumpEffect::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minDelayBetweenEvents
float& GlobalNamespace::HydraulicCarJumpEffect::dyn__minDelayBetweenEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarJumpEffect::dyn__minDelayBetweenEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minDelayBetweenEvents"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _rigidbody
::UnityEngine::Rigidbody*& GlobalNamespace::HydraulicCarJumpEffect::dyn__rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarJumpEffect::dyn__rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::HydraulicCarJumpEffect::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarJumpEffect::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastEventTime
float& GlobalNamespace::HydraulicCarJumpEffect::dyn__lastEventTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarJumpEffect::dyn__lastEventTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastEventTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.Int32> _eventValuesHashSet
::System::Collections::Generic::HashSet_1<int>*& GlobalNamespace::HydraulicCarJumpEffect::dyn__eventValuesHashSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarJumpEffect::dyn__eventValuesHashSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventValuesHashSet"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _beatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::HydraulicCarJumpEffect::dyn__beatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarJumpEffect::dyn__beatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HydraulicCarJumpEffect.Start
void GlobalNamespace::HydraulicCarJumpEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarJumpEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HydraulicCarJumpEffect.OnDestroy
void GlobalNamespace::HydraulicCarJumpEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarJumpEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HydraulicCarJumpEffect.HandleBeatmapEvent
void GlobalNamespace::HydraulicCarJumpEffect::HandleBeatmapEvent(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarJumpEffect::HandleBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HydraulicCarSuspensionEffect
#include "GlobalNamespace/HydraulicCarSuspensionEffect.hpp"
// Including type: UnityEngine.SpringJoint
#include "UnityEngine/SpringJoint.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _contractEvent
::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::HydraulicCarSuspensionEffect::dyn__contractEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarSuspensionEffect::dyn__contractEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contractEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] _contractEventValues
::ArrayW<int>& GlobalNamespace::HydraulicCarSuspensionEffect::dyn__contractEventValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarSuspensionEffect::dyn__contractEventValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contractEventValues"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _expandEvent
::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::HydraulicCarSuspensionEffect::dyn__expandEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarSuspensionEffect::dyn__expandEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expandEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] _expandEventValues
::ArrayW<int>& GlobalNamespace::HydraulicCarSuspensionEffect::dyn__expandEventValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarSuspensionEffect::dyn__expandEventValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expandEventValues"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpringJoint _springJoint
::UnityEngine::SpringJoint*& GlobalNamespace::HydraulicCarSuspensionEffect::dyn__springJoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarSuspensionEffect::dyn__springJoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_springJoint"))->offset;
  return *reinterpret_cast<::UnityEngine::SpringJoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _contractDistance
float& GlobalNamespace::HydraulicCarSuspensionEffect::dyn__contractDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarSuspensionEffect::dyn__contractDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contractDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _expandDistance
float& GlobalNamespace::HydraulicCarSuspensionEffect::dyn__expandDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarSuspensionEffect::dyn__expandDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expandDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody _rigidbody
::UnityEngine::Rigidbody*& GlobalNamespace::HydraulicCarSuspensionEffect::dyn__rigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarSuspensionEffect::dyn__rigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::HydraulicCarSuspensionEffect::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarSuspensionEffect::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.Int32> _contractEventValuesHashSet
::System::Collections::Generic::HashSet_1<int>*& GlobalNamespace::HydraulicCarSuspensionEffect::dyn__contractEventValuesHashSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarSuspensionEffect::dyn__contractEventValuesHashSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contractEventValuesHashSet"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.Int32> _expandEventValuesHashSet
::System::Collections::Generic::HashSet_1<int>*& GlobalNamespace::HydraulicCarSuspensionEffect::dyn__expandEventValuesHashSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarSuspensionEffect::dyn__expandEventValuesHashSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expandEventValuesHashSet"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _contractBeatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::HydraulicCarSuspensionEffect::dyn__contractBeatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarSuspensionEffect::dyn__contractBeatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contractBeatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _expandBeatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::HydraulicCarSuspensionEffect::dyn__expandBeatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarSuspensionEffect::dyn__expandBeatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expandBeatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HydraulicCarSuspensionEffect.Start
void GlobalNamespace::HydraulicCarSuspensionEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarSuspensionEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HydraulicCarSuspensionEffect.OnDestroy
void GlobalNamespace::HydraulicCarSuspensionEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarSuspensionEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HydraulicCarSuspensionEffect.HandleContractBeatmapEvent
void GlobalNamespace::HydraulicCarSuspensionEffect::HandleContractBeatmapEvent(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarSuspensionEffect::HandleContractBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleContractBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated method: HydraulicCarSuspensionEffect.HandleExpandBeatmapEvent
void GlobalNamespace::HydraulicCarSuspensionEffect::HandleExpandBeatmapEvent(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HydraulicCarSuspensionEffect::HandleExpandBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleExpandBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusDeviceConfig
#include "GlobalNamespace/OculusDeviceConfig.hpp"
// Including type: OculusDeviceConfig/State
#include "GlobalNamespace/OculusDeviceConfig_State.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
// Including type: UnityEngine.AndroidJavaClass
#include "UnityEngine/AndroidJavaClass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.AndroidJavaObject _context
::UnityEngine::AndroidJavaObject* GlobalNamespace::OculusDeviceConfig::_get__context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::_get__context");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AndroidJavaObject*>("", "OculusDeviceConfig", "_context"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AndroidJavaObject _context
void GlobalNamespace::OculusDeviceConfig::_set__context(::UnityEngine::AndroidJavaObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::_set__context");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusDeviceConfig", "_context", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.AndroidJavaClass _oculusDeviceConfig
::UnityEngine::AndroidJavaClass* GlobalNamespace::OculusDeviceConfig::_get__oculusDeviceConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::_get__oculusDeviceConfig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AndroidJavaClass*>("", "OculusDeviceConfig", "_oculusDeviceConfig"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AndroidJavaClass _oculusDeviceConfig
void GlobalNamespace::OculusDeviceConfig::_set__oculusDeviceConfig(::UnityEngine::AndroidJavaClass* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::_set__oculusDeviceConfig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusDeviceConfig", "_oculusDeviceConfig", value));
}
// Autogenerated method: OculusDeviceConfig..cctor
void GlobalNamespace::OculusDeviceConfig::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusDeviceConfig", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusDeviceConfig.Init
void GlobalNamespace::OculusDeviceConfig::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusDeviceConfig", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusDeviceConfig.GetCurrentState
::GlobalNamespace::OculusDeviceConfig::State GlobalNamespace::OculusDeviceConfig::GetCurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::GetCurrentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusDeviceConfig", "GetCurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OculusDeviceConfig::State, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusDeviceConfig.DidPrefetchParamName
bool GlobalNamespace::OculusDeviceConfig::DidPrefetchParamName(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::DidPrefetchParamName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusDeviceConfig", "DidPrefetchParamName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: OculusDeviceConfig.GetError
::StringW GlobalNamespace::OculusDeviceConfig::GetError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::GetError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusDeviceConfig", "GetError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OculusDeviceConfig.GetBoolean
bool GlobalNamespace::OculusDeviceConfig::GetBoolean(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::GetBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusDeviceConfig", "GetBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: OculusDeviceConfig.GetLong
int64_t GlobalNamespace::OculusDeviceConfig::GetLong(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::GetLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusDeviceConfig", "GetLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: OculusDeviceConfig.GetDouble
double GlobalNamespace::OculusDeviceConfig::GetDouble(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::GetDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusDeviceConfig", "GetDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: OculusDeviceConfig.GetString
::StringW GlobalNamespace::OculusDeviceConfig::GetString(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusDeviceConfig", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusDeviceConfig/State
#include "GlobalNamespace/OculusDeviceConfig_State.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusDeviceConfig/State Uninitialized
::GlobalNamespace::OculusDeviceConfig::State GlobalNamespace::OculusDeviceConfig::State::_get_Uninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::State::_get_Uninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OculusDeviceConfig::State>("", "OculusDeviceConfig/State", "Uninitialized"));
}
// Autogenerated static field setter
// Set static field: static public OculusDeviceConfig/State Uninitialized
void GlobalNamespace::OculusDeviceConfig::State::_set_Uninitialized(::GlobalNamespace::OculusDeviceConfig::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::State::_set_Uninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusDeviceConfig/State", "Uninitialized", value));
}
// Autogenerated static field getter
// Get static field: static public OculusDeviceConfig/State Initialized
::GlobalNamespace::OculusDeviceConfig::State GlobalNamespace::OculusDeviceConfig::State::_get_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::State::_get_Initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OculusDeviceConfig::State>("", "OculusDeviceConfig/State", "Initialized"));
}
// Autogenerated static field setter
// Set static field: static public OculusDeviceConfig/State Initialized
void GlobalNamespace::OculusDeviceConfig::State::_set_Initialized(::GlobalNamespace::OculusDeviceConfig::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::State::_set_Initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusDeviceConfig/State", "Initialized", value));
}
// Autogenerated static field getter
// Get static field: static public OculusDeviceConfig/State Prefetched
::GlobalNamespace::OculusDeviceConfig::State GlobalNamespace::OculusDeviceConfig::State::_get_Prefetched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::State::_get_Prefetched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OculusDeviceConfig::State>("", "OculusDeviceConfig/State", "Prefetched"));
}
// Autogenerated static field setter
// Set static field: static public OculusDeviceConfig/State Prefetched
void GlobalNamespace::OculusDeviceConfig::State::_set_Prefetched(::GlobalNamespace::OculusDeviceConfig::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::State::_set_Prefetched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusDeviceConfig/State", "Prefetched", value));
}
// Autogenerated static field getter
// Get static field: static public OculusDeviceConfig/State Failed
::GlobalNamespace::OculusDeviceConfig::State GlobalNamespace::OculusDeviceConfig::State::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::State::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OculusDeviceConfig::State>("", "OculusDeviceConfig/State", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public OculusDeviceConfig/State Failed
void GlobalNamespace::OculusDeviceConfig::State::_set_Failed(::GlobalNamespace::OculusDeviceConfig::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::State::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusDeviceConfig/State", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::OculusDeviceConfig::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfig::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AnniversaryManager
#include "GlobalNamespace/AnniversaryManager.hpp"
// Including type: FireworksController
#include "GlobalNamespace/FireworksController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FireworksController _fireworksController
::GlobalNamespace::FireworksController*& GlobalNamespace::AnniversaryManager::dyn__fireworksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnniversaryManager::dyn__fireworksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fireworksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FireworksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MainMenuViewController _mainMenuViewController
::GlobalNamespace::MainMenuViewController*& GlobalNamespace::AnniversaryManager::dyn__mainMenuViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnniversaryManager::dyn__mainMenuViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainMenuViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainMenuViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AnniversaryManager.Start
void GlobalNamespace::AnniversaryManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnniversaryManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnniversaryManager.OnDestroy
void GlobalNamespace::AnniversaryManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnniversaryManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnniversaryManager.HandleMainMenuViewControllerDidFinish
void GlobalNamespace::AnniversaryManager::HandleMainMenuViewControllerDidFinish(::GlobalNamespace::MainMenuViewController* mainMenuViewController, ::GlobalNamespace::MainMenuViewController::MenuButton menuButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnniversaryManager::HandleMainMenuViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMainMenuViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainMenuViewController), ::il2cpp_utils::ExtractType(menuButton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mainMenuViewController, menuButton);
}
// Autogenerated method: AnniversaryManager.StartFireworks
void GlobalNamespace::AnniversaryManager::StartFireworks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnniversaryManager::StartFireworks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartFireworks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnniversaryManager.StopFireworks
void GlobalNamespace::AnniversaryManager::StopFireworks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnniversaryManager::StopFireworks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopFireworks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClothRandomFluctuation
#include "GlobalNamespace/ClothRandomFluctuation.hpp"
// Including type: ClothRandomFluctuation/SineLayer
#include "GlobalNamespace/ClothRandomFluctuation_SineLayer.hpp"
// Including type: UnityEngine.Cloth
#include "UnityEngine/Cloth.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Cloth _cloth
::UnityEngine::Cloth*& GlobalNamespace::ClothRandomFluctuation::dyn__cloth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ClothRandomFluctuation::dyn__cloth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cloth"))->offset;
  return *reinterpret_cast<::UnityEngine::Cloth**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useLocalExternalFluctuations
bool& GlobalNamespace::ClothRandomFluctuation::dyn__useLocalExternalFluctuations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ClothRandomFluctuation::dyn__useLocalExternalFluctuations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useLocalExternalFluctuations"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _externalFluctuations
::UnityEngine::Vector3& GlobalNamespace::ClothRandomFluctuation::dyn__externalFluctuations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ClothRandomFluctuation::dyn__externalFluctuations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_externalFluctuations"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useLocalRandomFluctuations
bool& GlobalNamespace::ClothRandomFluctuation::dyn__useLocalRandomFluctuations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ClothRandomFluctuation::dyn__useLocalRandomFluctuations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useLocalRandomFluctuations"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _minFluctuations
::UnityEngine::Vector3& GlobalNamespace::ClothRandomFluctuation::dyn__minFluctuations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ClothRandomFluctuation::dyn__minFluctuations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minFluctuations"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _maxFluctuations
::UnityEngine::Vector3& GlobalNamespace::ClothRandomFluctuation::dyn__maxFluctuations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ClothRandomFluctuation::dyn__maxFluctuations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxFluctuations"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<ClothRandomFluctuation/SineLayer> _compoundSins
::System::Collections::Generic::List_1<::GlobalNamespace::ClothRandomFluctuation::SineLayer*>*& GlobalNamespace::ClothRandomFluctuation::dyn__compoundSins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ClothRandomFluctuation::dyn__compoundSins");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compoundSins"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::ClothRandomFluctuation::SineLayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _speed
float& GlobalNamespace::ClothRandomFluctuation::dyn__speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ClothRandomFluctuation::dyn__speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ClothRandomFluctuation.Update
void GlobalNamespace::ClothRandomFluctuation::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ClothRandomFluctuation::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ClothRandomFluctuation.FluctuateCloth
void GlobalNamespace::ClothRandomFluctuation::FluctuateCloth(::UnityEngine::Cloth* cloth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ClothRandomFluctuation::FluctuateCloth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FluctuateCloth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cloth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cloth);
}
// Autogenerated method: ClothRandomFluctuation.GetNoise
float GlobalNamespace::ClothRandomFluctuation::GetNoise(float time, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ClothRandomFluctuation::GetNoise");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNoise", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, time, offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClothRandomFluctuation/SineLayer
#include "GlobalNamespace/ClothRandomFluctuation_SineLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single multiplier
float& GlobalNamespace::ClothRandomFluctuation::SineLayer::dyn_multiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ClothRandomFluctuation::SineLayer::dyn_multiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "multiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single offset
float& GlobalNamespace::ClothRandomFluctuation::SineLayer::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ClothRandomFluctuation::SineLayer::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DroneHover
#include "GlobalNamespace/DroneHover.hpp"
// Including type: DroneHover/SineLayer
#include "GlobalNamespace/DroneHover_SineLayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Cloth
#include "UnityEngine/Cloth.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _hoverAreaPerAxis
::UnityEngine::Vector3& GlobalNamespace::DroneHover::dyn__hoverAreaPerAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroneHover::dyn__hoverAreaPerAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverAreaPerAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _speed
float& GlobalNamespace::DroneHover::dyn__speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroneHover::dyn__speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<DroneHover/SineLayer> _compoundSins
::System::Collections::Generic::List_1<::GlobalNamespace::DroneHover::SineLayer*>*& GlobalNamespace::DroneHover::dyn__compoundSins() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroneHover::dyn__compoundSins");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compoundSins"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::DroneHover::SineLayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Transform> _tiltTransforms
::System::Collections::Generic::List_1<::UnityEngine::Transform*>*& GlobalNamespace::DroneHover::dyn__tiltTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroneHover::dyn__tiltTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tiltTransforms"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxTiltAmount
float& GlobalNamespace::DroneHover::dyn__maxTiltAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroneHover::dyn__maxTiltAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxTiltAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _tiltSpeed
float& GlobalNamespace::DroneHover::dyn__tiltSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroneHover::dyn__tiltSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tiltSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _tiltAheadOfTime
float& GlobalNamespace::DroneHover::dyn__tiltAheadOfTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroneHover::dyn__tiltAheadOfTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tiltAheadOfTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _tiltToTarget
bool& GlobalNamespace::DroneHover::dyn__tiltToTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroneHover::dyn__tiltToTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tiltToTarget"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _startPos
::UnityEngine::Vector3& GlobalNamespace::DroneHover::dyn__startPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroneHover::dyn__startPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Cloth _cloth
::UnityEngine::Cloth*& GlobalNamespace::DroneHover::dyn__cloth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroneHover::dyn__cloth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cloth"))->offset;
  return *reinterpret_cast<::UnityEngine::Cloth**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DroneHover.Start
void GlobalNamespace::DroneHover::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroneHover::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DroneHover.Update
void GlobalNamespace::DroneHover::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroneHover::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DroneHover.GetNoiseVec3
::UnityEngine::Vector3 GlobalNamespace::DroneHover::GetNoiseVec3(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroneHover::GetNoiseVec3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNoiseVec3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, time);
}
// Autogenerated method: DroneHover.GetNoise
float GlobalNamespace::DroneHover::GetNoise(float time, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroneHover::GetNoise");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNoise", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, time, offset);
}
// Autogenerated method: DroneHover.UpdateTiltTransform
void GlobalNamespace::DroneHover::UpdateTiltTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroneHover::UpdateTiltTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTiltTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DroneHover/SineLayer
#include "GlobalNamespace/DroneHover_SineLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single multiplier
float& GlobalNamespace::DroneHover::SineLayer::dyn_multiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroneHover::SineLayer::dyn_multiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "multiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single offset
float& GlobalNamespace::DroneHover::SineLayer::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroneHover::SineLayer::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRsenalLogger
#include "GlobalNamespace/VRsenalLogger.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
// Including type: StringSignal
#include "GlobalNamespace/StringSignal.hpp"
// Including type: VRsenalScoreLogger
#include "GlobalNamespace/VRsenalScoreLogger.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ScenesTransitionSetupDataSO _standardLevelScenesTransitionSetupData
::GlobalNamespace::ScenesTransitionSetupDataSO*& GlobalNamespace::VRsenalLogger::dyn__standardLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalLogger::dyn__standardLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ScenesTransitionSetupDataSO _tutorialScenesTransitionSetupData
::GlobalNamespace::ScenesTransitionSetupDataSO*& GlobalNamespace::VRsenalLogger::dyn__tutorialScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalLogger::dyn__tutorialScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private StringSignal _playerNameWasEnteredSignal
::GlobalNamespace::StringSignal*& GlobalNamespace::VRsenalLogger::dyn__playerNameWasEnteredSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalLogger::dyn__playerNameWasEnteredSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerNameWasEnteredSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StringSignal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRsenalScoreLogger _vRsenalScoreLoggerPrefab
::GlobalNamespace::VRsenalScoreLogger*& GlobalNamespace::VRsenalLogger::dyn__vRsenalScoreLoggerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalLogger::dyn__vRsenalScoreLoggerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vRsenalScoreLoggerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRsenalScoreLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameScenesManager _gameScenesManager
::GlobalNamespace::GameScenesManager*& GlobalNamespace::VRsenalLogger::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalLogger::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRsenalLogger.Awake
void GlobalNamespace::VRsenalLogger::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalLogger::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRsenalLogger.OnDestroy
void GlobalNamespace::VRsenalLogger::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalLogger::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRsenalLogger.HandleGameScenesManagerInstallEarlyBindings
void GlobalNamespace::VRsenalLogger::HandleGameScenesManagerInstallEarlyBindings(::GlobalNamespace::ScenesTransitionSetupDataSO* scenesTransitionSetupData, ::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalLogger::HandleGameScenesManagerInstallEarlyBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameScenesManagerInstallEarlyBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scenesTransitionSetupData), ::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scenesTransitionSetupData, container);
}
// Autogenerated method: VRsenalLogger.HandlePlayerNameWasEntered
void GlobalNamespace::VRsenalLogger::HandlePlayerNameWasEntered(::StringW playerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalLogger::HandlePlayerNameWasEntered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerNameWasEntered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRsenalScoreLogger
#include "GlobalNamespace/VRsenalScoreLogger.hpp"
// Including type: VRsenalScoreLogger/<Start>d__3
#include "GlobalNamespace/VRsenalScoreLogger_-Start-d__3.hpp"
// Including type: IScoreController
#include "GlobalNamespace/IScoreController.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: ILevelEndActions
#include "GlobalNamespace/ILevelEndActions.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private IScoreController _scoreController
::GlobalNamespace::IScoreController*& GlobalNamespace::VRsenalScoreLogger::dyn__scoreController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::dyn__scoreController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IScoreController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDifficultyBeatmap _difficultyBeatmap
::GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::VRsenalScoreLogger::dyn__difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::dyn__difficultyBeatmap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ILevelEndActions _levelEndActions
::GlobalNamespace::ILevelEndActions*& GlobalNamespace::VRsenalScoreLogger::dyn__levelEndActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::dyn__levelEndActions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelEndActions"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILevelEndActions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRsenalScoreLogger.Start
::System::Collections::IEnumerator* GlobalNamespace::VRsenalScoreLogger::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: VRsenalScoreLogger.OnDestroy
void GlobalNamespace::VRsenalScoreLogger::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRsenalScoreLogger.HandleLevelFinishedEvent
void GlobalNamespace::VRsenalScoreLogger::HandleLevelFinishedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::HandleLevelFinishedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRsenalScoreLogger.LogScore
void GlobalNamespace::VRsenalScoreLogger::LogScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::LogScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRsenalScoreLogger/<Start>d__3
#include "GlobalNamespace/VRsenalScoreLogger_-Start-d__3.hpp"
// Including type: UnityEngine.YieldInstruction
#include "UnityEngine/YieldInstruction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::VRsenalScoreLogger::$Start$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::$Start$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::VRsenalScoreLogger::$Start$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::$Start$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRsenalScoreLogger <>4__this
::GlobalNamespace::VRsenalScoreLogger*& GlobalNamespace::VRsenalScoreLogger::$Start$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::$Start$d__3::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRsenalScoreLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.YieldInstruction <yieldInstruction>5__2
::UnityEngine::YieldInstruction*& GlobalNamespace::VRsenalScoreLogger::$Start$d__3::dyn_$yieldInstruction$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::$Start$d__3::dyn_$yieldInstruction$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<yieldInstruction>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::YieldInstruction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRsenalScoreLogger/<Start>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::VRsenalScoreLogger::$Start$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::$Start$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VRsenalScoreLogger/<Start>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::VRsenalScoreLogger::$Start$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::$Start$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VRsenalScoreLogger/<Start>d__3.System.IDisposable.Dispose
void GlobalNamespace::VRsenalScoreLogger::$Start$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::$Start$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRsenalScoreLogger/<Start>d__3.MoveNext
bool GlobalNamespace::VRsenalScoreLogger::$Start$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::$Start$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRsenalScoreLogger/<Start>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::VRsenalScoreLogger::$Start$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRsenalScoreLogger::$Start$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditAvatarAnalytics
#include "GlobalNamespace/EditAvatarAnalytics.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: AvatarDataModel
#include "GlobalNamespace/AvatarDataModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private EditAvatarFlowCoordinator _editAvatarFlowCoordinator
::GlobalNamespace::EditAvatarFlowCoordinator*& GlobalNamespace::EditAvatarAnalytics::dyn__editAvatarFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::dyn__editAvatarFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editAvatarFlowCoordinator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EditAvatarFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EditAvatarViewController _editAvatarViewController
::GlobalNamespace::EditAvatarViewController*& GlobalNamespace::EditAvatarAnalytics::dyn__editAvatarViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::dyn__editAvatarViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editAvatarViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EditAvatarViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
::GlobalNamespace::IAnalyticsModel*& GlobalNamespace::EditAvatarAnalytics::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarDataModel _avatarDataModel
::GlobalNamespace::AvatarDataModel*& GlobalNamespace::EditAvatarAnalytics::dyn__avatarDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::dyn__avatarDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EditAvatarFlowCoordinator/EditAvatarType _lastEditAvatarType
::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType& GlobalNamespace::EditAvatarAnalytics::dyn__lastEditAvatarType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::dyn__lastEditAvatarType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastEditAvatarType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EditAvatarAnalytics.Awake
void GlobalNamespace::EditAvatarAnalytics::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarAnalytics.OnDestroy
void GlobalNamespace::EditAvatarAnalytics::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarAnalytics.HandleEditAvatarFlowCoordinatorWasSetup
void GlobalNamespace::EditAvatarAnalytics::HandleEditAvatarFlowCoordinatorWasSetup(::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType editAvatarType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::HandleEditAvatarFlowCoordinatorWasSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditAvatarFlowCoordinatorWasSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(editAvatarType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, editAvatarType);
}
// Autogenerated method: EditAvatarAnalytics.HandleEditAvatarViewControllerDidFinish
void GlobalNamespace::EditAvatarAnalytics::HandleEditAvatarViewControllerDidFinish(::GlobalNamespace::EditAvatarViewController::FinishAction finishAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::HandleEditAvatarViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditAvatarViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishAction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finishAction);
}
// Autogenerated method: EditAvatarAnalytics.HandleEditAvatarViewControllerRandomizeAllButtonWasPressed
void GlobalNamespace::EditAvatarAnalytics::HandleEditAvatarViewControllerRandomizeAllButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::HandleEditAvatarViewControllerRandomizeAllButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditAvatarViewControllerRandomizeAllButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditAvatarAnalytics.CreateEditAvatarEventData
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* GlobalNamespace::EditAvatarAnalytics::CreateEditAvatarEventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarAnalytics::CreateEditAvatarEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEditAvatarEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IAnalyticsModel.get_supportsOpenDataPrivacyPage
bool GlobalNamespace::IAnalyticsModel::get_supportsOpenDataPrivacyPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAnalyticsModel::get_supportsOpenDataPrivacyPage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_supportsOpenDataPrivacyPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IAnalyticsModel.OpenDataPrivacyPage
void GlobalNamespace::IAnalyticsModel::OpenDataPrivacyPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAnalyticsModel::OpenDataPrivacyPage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenDataPrivacyPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IAnalyticsModel.LogEvent
void GlobalNamespace::IAnalyticsModel::LogEvent(::StringW eventType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAnalyticsModel::LogEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, eventData);
}
// Autogenerated method: IAnalyticsModel.LogEditAvatarEvent
void GlobalNamespace::IAnalyticsModel::LogEditAvatarEvent(::StringW eventType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAnalyticsModel::LogEditAvatarEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEditAvatarEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, eventData);
}
// Autogenerated method: IAnalyticsModel.LogClick
void GlobalNamespace::IAnalyticsModel::LogClick(::StringW clickType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* clickData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAnalyticsModel::LogClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickType), ::il2cpp_utils::ExtractType(clickData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clickType, clickData);
}
// Autogenerated method: IAnalyticsModel.LogImpression
void GlobalNamespace::IAnalyticsModel::LogImpression(::StringW impressionType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* impressionData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAnalyticsModel::LogImpression");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogImpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impressionType), ::il2cpp_utils::ExtractType(impressionData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, impressionType, impressionData);
}
// Autogenerated method: IAnalyticsModel.LogExposure
void GlobalNamespace::IAnalyticsModel::LogExposure(::StringW exposureType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* exposureData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAnalyticsModel::LogExposure");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogExposure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exposureType), ::il2cpp_utils::ExtractType(exposureData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exposureType, exposureData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelCompletionResultsAnalyticsHelper
#include "GlobalNamespace/LevelCompletionResultsAnalyticsHelper.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelCompletionResultsAnalyticsHelper.FillEventData
void GlobalNamespace::LevelCompletionResultsAnalyticsHelper::FillEventData(::GlobalNamespace::LevelCompletionResults* levelCompletionResults, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResultsAnalyticsHelper::FillEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LevelCompletionResultsAnalyticsHelper", "FillEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, levelCompletionResults, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelAnalytics
#include "GlobalNamespace/MissionLevelAnalytics.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionLevelScenesTransitionSetupDataSO _missionLevelScenesTransitionSetupData
::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*& GlobalNamespace::MissionLevelAnalytics::dyn__missionLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelAnalytics::dyn__missionLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
::GlobalNamespace::IAnalyticsModel*& GlobalNamespace::MissionLevelAnalytics::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelAnalytics::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionLevelAnalytics.Start
void GlobalNamespace::MissionLevelAnalytics::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelAnalytics::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelAnalytics.OnDestroy
void GlobalNamespace::MissionLevelAnalytics::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelAnalytics::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelAnalytics.HandleMissionLevelDidFinishEvent
void GlobalNamespace::MissionLevelAnalytics::HandleMissionLevelDidFinishEvent(::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO* missionLevelScenesTransitionSetupData, ::GlobalNamespace::MissionCompletionResults* missionCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionLevelAnalytics::HandleMissionLevelDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionLevelDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(missionCompletionResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionLevelScenesTransitionSetupData, missionCompletionResults);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelAnalytics
#include "GlobalNamespace/MultiplayerLevelAnalytics.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: MultiplayerResultsData
#include "GlobalNamespace/MultiplayerResultsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MultiplayerLevelScenesTransitionSetupDataSO _multiplayerLevelScenesTransitionSetupData
::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*& GlobalNamespace::MultiplayerLevelAnalytics::dyn__multiplayerLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelAnalytics::dyn__multiplayerLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
::GlobalNamespace::IAnalyticsModel*& GlobalNamespace::MultiplayerLevelAnalytics::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelAnalytics::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLevelAnalytics.Start
void GlobalNamespace::MultiplayerLevelAnalytics::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelAnalytics::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelAnalytics.OnDestroy
void GlobalNamespace::MultiplayerLevelAnalytics::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelAnalytics::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelAnalytics.HandleMultiplayerLevelDidFinish
void GlobalNamespace::MultiplayerLevelAnalytics::HandleMultiplayerLevelDidFinish(::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO* multiplayerLevelScenesTransitionSetupData, ::GlobalNamespace::MultiplayerResultsData* multiplayerResultsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelAnalytics::HandleMultiplayerLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(multiplayerResultsData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, multiplayerLevelScenesTransitionSetupData, multiplayerResultsData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyAnalytics
#include "GlobalNamespace/MultiplayerLobbyAnalytics.hpp"
// Including type: GameServerLobbyFlowCoordinator/LobbyType
#include "GlobalNamespace/GameServerLobbyFlowCoordinator_LobbyType.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameServerLobbyFlowCoordinator _gameServerLobbyFlowCoordinator
::GlobalNamespace::GameServerLobbyFlowCoordinator*& GlobalNamespace::MultiplayerLobbyAnalytics::dyn__gameServerLobbyFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAnalytics::dyn__gameServerLobbyFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameServerLobbyFlowCoordinator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServerLobbyFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
::GlobalNamespace::IAnalyticsModel*& GlobalNamespace::MultiplayerLobbyAnalytics::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAnalytics::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyAnalytics.Awake
void GlobalNamespace::MultiplayerLobbyAnalytics::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAnalytics::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAnalytics.OnDestroy
void GlobalNamespace::MultiplayerLobbyAnalytics::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAnalytics::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAnalytics.HandleGameServerLobbyFlowCoordinatorDidSetupEvent
void GlobalNamespace::MultiplayerLobbyAnalytics::HandleGameServerLobbyFlowCoordinatorDidSetupEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAnalytics::HandleGameServerLobbyFlowCoordinatorDidSetupEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameServerLobbyFlowCoordinatorDidSetupEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAnalytics.HandleGameServerLobbyFlowCoordinatorDidFinish
void GlobalNamespace::MultiplayerLobbyAnalytics::HandleGameServerLobbyFlowCoordinatorDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAnalytics::HandleGameServerLobbyFlowCoordinatorDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameServerLobbyFlowCoordinatorDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAnalytics.HandleGameServerLobbyFlowCoordinatorStartGameOrReady
void GlobalNamespace::MultiplayerLobbyAnalytics::HandleGameServerLobbyFlowCoordinatorStartGameOrReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAnalytics::HandleGameServerLobbyFlowCoordinatorStartGameOrReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameServerLobbyFlowCoordinatorStartGameOrReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAnalytics.HandleGameServerLobbyFlowCoordinatorDidOpenInvitePanel
void GlobalNamespace::MultiplayerLobbyAnalytics::HandleGameServerLobbyFlowCoordinatorDidOpenInvitePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAnalytics::HandleGameServerLobbyFlowCoordinatorDidOpenInvitePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameServerLobbyFlowCoordinatorDidOpenInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAnalytics.LogClick
void GlobalNamespace::MultiplayerLobbyAnalytics::LogClick(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* clickData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAnalytics::LogClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clickData);
}
// Autogenerated method: MultiplayerLobbyAnalytics.GetEventTypeFromLobbyType
::StringW GlobalNamespace::MultiplayerLobbyAnalytics::GetEventTypeFromLobbyType(::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType lobbyType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyAnalytics::GetEventTypeFromLobbyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEventTypeFromLobbyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, lobbyType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoAnalyticsModel
#include "GlobalNamespace/NoAnalyticsModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoAnalyticsModel.get_supportsOpenDataPrivacyPage
bool GlobalNamespace::NoAnalyticsModel::get_supportsOpenDataPrivacyPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoAnalyticsModel::get_supportsOpenDataPrivacyPage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_supportsOpenDataPrivacyPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NoAnalyticsModel.OpenDataPrivacyPage
void GlobalNamespace::NoAnalyticsModel::OpenDataPrivacyPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoAnalyticsModel::OpenDataPrivacyPage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenDataPrivacyPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoAnalyticsModel.LogEditAvatarEvent
void GlobalNamespace::NoAnalyticsModel::LogEditAvatarEvent(::StringW eventType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoAnalyticsModel::LogEditAvatarEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEditAvatarEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, eventData);
}
// Autogenerated method: NoAnalyticsModel.LogEvent
void GlobalNamespace::NoAnalyticsModel::LogEvent(::StringW eventType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoAnalyticsModel::LogEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, eventData);
}
// Autogenerated method: NoAnalyticsModel.LogClick
void GlobalNamespace::NoAnalyticsModel::LogClick(::StringW clickType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* clickData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoAnalyticsModel::LogClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickType), ::il2cpp_utils::ExtractType(clickData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clickType, clickData);
}
// Autogenerated method: NoAnalyticsModel.LogImpression
void GlobalNamespace::NoAnalyticsModel::LogImpression(::StringW impressionType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* impressionData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoAnalyticsModel::LogImpression");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogImpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impressionType), ::il2cpp_utils::ExtractType(impressionData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, impressionType, impressionData);
}
// Autogenerated method: NoAnalyticsModel.LogExposure
void GlobalNamespace::NoAnalyticsModel::LogExposure(::StringW exposureType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* exposureData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoAnalyticsModel::LogExposure");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogExposure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exposureType), ::il2cpp_utils::ExtractType(exposureData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exposureType, exposureData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusAnalyticsModel
#include "GlobalNamespace/OculusAnalyticsModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusAnalyticsModel.get_supportsOpenDataPrivacyPage
bool GlobalNamespace::OculusAnalyticsModel::get_supportsOpenDataPrivacyPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusAnalyticsModel::get_supportsOpenDataPrivacyPage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_supportsOpenDataPrivacyPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusAnalyticsModel.OpenDataPrivacyPage
void GlobalNamespace::OculusAnalyticsModel::OpenDataPrivacyPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusAnalyticsModel::OpenDataPrivacyPage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenDataPrivacyPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusAnalyticsModel.LogEvent
void GlobalNamespace::OculusAnalyticsModel::LogEvent(::StringW eventType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusAnalyticsModel::LogEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, eventData);
}
// Autogenerated method: OculusAnalyticsModel.LogEditAvatarEvent
void GlobalNamespace::OculusAnalyticsModel::LogEditAvatarEvent(::StringW eventType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusAnalyticsModel::LogEditAvatarEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEditAvatarEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, eventData);
}
// Autogenerated method: OculusAnalyticsModel.LogClick
void GlobalNamespace::OculusAnalyticsModel::LogClick(::StringW clickType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* clickData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusAnalyticsModel::LogClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickType), ::il2cpp_utils::ExtractType(clickData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clickType, clickData);
}
// Autogenerated method: OculusAnalyticsModel.LogImpression
void GlobalNamespace::OculusAnalyticsModel::LogImpression(::StringW impressionType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* impressionData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusAnalyticsModel::LogImpression");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogImpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impressionType), ::il2cpp_utils::ExtractType(impressionData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, impressionType, impressionData);
}
// Autogenerated method: OculusAnalyticsModel.LogExposure
void GlobalNamespace::OculusAnalyticsModel::LogExposure(::StringW exposureType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* exposureData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusAnalyticsModel::LogExposure");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogExposure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exposureType), ::il2cpp_utils::ExtractType(exposureData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exposureType, exposureData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelAnalytics
#include "GlobalNamespace/StandardLevelAnalytics.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private StandardLevelScenesTransitionSetupDataSO _standardLevelScenesTransitionSetupData
::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*& GlobalNamespace::StandardLevelAnalytics::dyn__standardLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelAnalytics::dyn__standardLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
::GlobalNamespace::IAnalyticsModel*& GlobalNamespace::StandardLevelAnalytics::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelAnalytics::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardLevelAnalytics.Start
void GlobalNamespace::StandardLevelAnalytics::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelAnalytics::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelAnalytics.OnDestroy
void GlobalNamespace::StandardLevelAnalytics::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelAnalytics::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelAnalytics.HandleStandardLevelDidFinishEvent
void GlobalNamespace::StandardLevelAnalytics::HandleStandardLevelDidFinishEvent(::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* standardLevelScenesTransitionSetupData, ::GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelAnalytics::HandleStandardLevelDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStandardLevelDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standardLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(levelCompletionResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standardLevelScenesTransitionSetupData, levelCompletionResults);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestAnalyticsModel
#include "GlobalNamespace/TestAnalyticsModel.hpp"
// Including type: TestAnalyticsModel/<>c
#include "GlobalNamespace/TestAnalyticsModel_--c.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestAnalyticsModel.get_supportsOpenDataPrivacyPage
bool GlobalNamespace::TestAnalyticsModel::get_supportsOpenDataPrivacyPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::get_supportsOpenDataPrivacyPage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_supportsOpenDataPrivacyPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TestAnalyticsModel.OpenDataPrivacyPage
void GlobalNamespace::TestAnalyticsModel::OpenDataPrivacyPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::OpenDataPrivacyPage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenDataPrivacyPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TestAnalyticsModel.LogEvent
void GlobalNamespace::TestAnalyticsModel::LogEvent(::StringW eventType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::LogEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, eventData);
}
// Autogenerated method: TestAnalyticsModel.LogEditAvatarEvent
void GlobalNamespace::TestAnalyticsModel::LogEditAvatarEvent(::StringW eventType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* avatarEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::LogEditAvatarEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogEditAvatarEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(avatarEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventType, avatarEventData);
}
// Autogenerated method: TestAnalyticsModel.LogClick
void GlobalNamespace::TestAnalyticsModel::LogClick(::StringW clickType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* clickData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::LogClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clickType), ::il2cpp_utils::ExtractType(clickData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clickType, clickData);
}
// Autogenerated method: TestAnalyticsModel.LogImpression
void GlobalNamespace::TestAnalyticsModel::LogImpression(::StringW impressionType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* impressionData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::LogImpression");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogImpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impressionType), ::il2cpp_utils::ExtractType(impressionData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, impressionType, impressionData);
}
// Autogenerated method: TestAnalyticsModel.LogExposure
void GlobalNamespace::TestAnalyticsModel::LogExposure(::StringW exposureType, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* exposureData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::LogExposure");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogExposure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exposureType), ::il2cpp_utils::ExtractType(exposureData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exposureType, exposureData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestAnalyticsModel/<>c
#include "GlobalNamespace/TestAnalyticsModel_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly TestAnalyticsModel/<>c <>9
::GlobalNamespace::TestAnalyticsModel::$$c* GlobalNamespace::TestAnalyticsModel::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::TestAnalyticsModel::$$c*>("", "TestAnalyticsModel/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly TestAnalyticsModel/<>c <>9
void GlobalNamespace::TestAnalyticsModel::$$c::_set_$$9(::GlobalNamespace::TestAnalyticsModel::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "TestAnalyticsModel/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.String,System.String>,System.String> <>9__3_0
::System::Func_2<::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>, ::StringW>* GlobalNamespace::TestAnalyticsModel::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>, ::StringW>*>("", "TestAnalyticsModel/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.String,System.String>,System.String> <>9__3_0
void GlobalNamespace::TestAnalyticsModel::$$c::_set_$$9__3_0(::System::Func_2<::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "TestAnalyticsModel/<>c", "<>9__3_0", value)));
}
// Autogenerated method: TestAnalyticsModel/<>c..cctor
void GlobalNamespace::TestAnalyticsModel::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TestAnalyticsModel/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TestAnalyticsModel/<>c.<LogEvent>b__3_0
::StringW GlobalNamespace::TestAnalyticsModel::$$c::$LogEvent$b__3_0(::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW> kvp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestAnalyticsModel::$$c::<LogEvent>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LogEvent>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kvp)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, kvp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInit
#include "GlobalNamespace/AppInit.hpp"
// Including type: AppInit/AppStartType
#include "GlobalNamespace/AppInit_AppStartType.hpp"
// Including type: AppInit/<>c
#include "GlobalNamespace/AppInit_--c.hpp"
// Including type: AppInit/<StartCoroutine>d__8
#include "GlobalNamespace/AppInit_-StartCoroutine-d__8.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: MultiplayerMockSettings
#include "GlobalNamespace/MultiplayerMockSettings.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: MockPlayersModel
#include "GlobalNamespace/MockPlayersModel.hpp"
// Including type: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO_AppInitSceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _cameraGO
::UnityEngine::GameObject*& GlobalNamespace::AppInit::dyn__cameraGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::dyn__cameraGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraGO"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerMockSettings _multiplayerMockSettings
::GlobalNamespace::MultiplayerMockSettings*& GlobalNamespace::AppInit::dyn__multiplayerMockSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::dyn__multiplayerMockSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerMockSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerMockSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData _sceneSetupData
::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData*& GlobalNamespace::AppInit::dyn__sceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::dyn__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameScenesManager _gameScenesManager
::GlobalNamespace::GameScenesManager*& GlobalNamespace::AppInit::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AppInit.get_gameScenesManager
::GlobalNamespace::GameScenesManager* GlobalNamespace::AppInit::get_gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::get_gameScenesManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameScenesManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameScenesManager*, false>(this, ___internal__method);
}
// Autogenerated method: AppInit.StartCoroutine
::System::Collections::IEnumerator* GlobalNamespace::AppInit::StartCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::StartCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: AppInit.OnDestroy
void GlobalNamespace::AppInit::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppInit.HandleBeforeDismissingScenes
void GlobalNamespace::AppInit::HandleBeforeDismissingScenes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::HandleBeforeDismissingScenes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeforeDismissingScenes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppInit.GetMockPlayersModel
::GlobalNamespace::MockPlayersModel* GlobalNamespace::AppInit::GetMockPlayersModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::GetMockPlayersModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMockPlayersModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MockPlayersModel*, false>(this, ___internal__method);
}
// Autogenerated method: AppInit.GetAppStartType
::GlobalNamespace::AppInit::AppStartType GlobalNamespace::AppInit::GetAppStartType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::GetAppStartType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAppStartType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AppInit::AppStartType, false>(this, ___internal__method);
}
// Autogenerated method: AppInit.AppStartAndMultiSceneEditorSetup
void GlobalNamespace::AppInit::AppStartAndMultiSceneEditorSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::AppStartAndMultiSceneEditorSetup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppStartAndMultiSceneEditorSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppInit.RepeatableSetup
void GlobalNamespace::AppInit::RepeatableSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::RepeatableSetup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RepeatableSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppInit.TransitionToNextScene
void GlobalNamespace::AppInit::TransitionToNextScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::TransitionToNextScene");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNextScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppInit.Start
void GlobalNamespace::AppInit::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInit/AppStartType
#include "GlobalNamespace/AppInit_AppStartType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AppInit/AppStartType AppStart
::GlobalNamespace::AppInit::AppStartType GlobalNamespace::AppInit::AppStartType::_get_AppStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::AppStartType::_get_AppStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AppInit::AppStartType>("", "AppInit/AppStartType", "AppStart"));
}
// Autogenerated static field setter
// Set static field: static public AppInit/AppStartType AppStart
void GlobalNamespace::AppInit::AppStartType::_set_AppStart(::GlobalNamespace::AppInit::AppStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::AppStartType::_set_AppStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInit/AppStartType", "AppStart", value));
}
// Autogenerated static field getter
// Get static field: static public AppInit/AppStartType AppRestart
::GlobalNamespace::AppInit::AppStartType GlobalNamespace::AppInit::AppStartType::_get_AppRestart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::AppStartType::_get_AppRestart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AppInit::AppStartType>("", "AppInit/AppStartType", "AppRestart"));
}
// Autogenerated static field setter
// Set static field: static public AppInit/AppStartType AppRestart
void GlobalNamespace::AppInit::AppStartType::_set_AppRestart(::GlobalNamespace::AppInit::AppStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::AppStartType::_set_AppRestart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInit/AppStartType", "AppRestart", value));
}
// Autogenerated static field getter
// Get static field: static public AppInit/AppStartType MultiSceneEditor
::GlobalNamespace::AppInit::AppStartType GlobalNamespace::AppInit::AppStartType::_get_MultiSceneEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::AppStartType::_get_MultiSceneEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AppInit::AppStartType>("", "AppInit/AppStartType", "MultiSceneEditor"));
}
// Autogenerated static field setter
// Set static field: static public AppInit/AppStartType MultiSceneEditor
void GlobalNamespace::AppInit::AppStartType::_set_MultiSceneEditor(::GlobalNamespace::AppInit::AppStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::AppStartType::_set_MultiSceneEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInit/AppStartType", "MultiSceneEditor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::AppInit::AppStartType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppInit::AppStartType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
