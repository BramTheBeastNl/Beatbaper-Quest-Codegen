// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RankModelHelper
#include "GlobalNamespace/RankModelHelper.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: RankModel/Rank
#include "GlobalNamespace/RankModel_Rank.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RankModelHelper.MaxRankForGameplayModifiers
GlobalNamespace::RankModel::Rank GlobalNamespace::RankModelHelper::MaxRankForGameplayModifiers(GlobalNamespace::GameplayModifiers* gameplayModifiers, GlobalNamespace::GameplayModifiersModelSO* gameplayModifiersModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RankModelHelper::MaxRankForGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "RankModelHelper", "MaxRankForGameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameplayModifiers, gameplayModifiersModel)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::RankModel::Rank, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gameplayModifiers, gameplayModifiersModel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResetLocalLeaderboardOnKey
#include "GlobalNamespace/ResetLocalLeaderboardOnKey.hpp"
// Including type: LocalLeaderboardsModel
#include "GlobalNamespace/LocalLeaderboardsModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ResetLocalLeaderboardOnKey.Update
void GlobalNamespace::ResetLocalLeaderboardOnKey::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResetLocalLeaderboardOnKey::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusRichPresencePlatformHandler
#include "GlobalNamespace/OculusRichPresencePlatformHandler.hpp"
// Including type: IRichPresenceData
#include "GlobalNamespace/IRichPresenceData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusRichPresencePlatformHandler.SetPresence
void GlobalNamespace::OculusRichPresencePlatformHandler::SetPresence(GlobalNamespace::IRichPresenceData* richPresenceData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusRichPresencePlatformHandler::SetPresence");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(richPresenceData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, richPresenceData);
}
// Autogenerated method: OculusRichPresencePlatformHandler.Clear
void GlobalNamespace::OculusRichPresencePlatformHandler::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusRichPresencePlatformHandler::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IRichPresenceData
#include "GlobalNamespace/IRichPresenceData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IRichPresenceData.get_apiName
::Il2CppString* GlobalNamespace::IRichPresenceData::get_apiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IRichPresenceData::get_apiName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_apiName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IRichPresenceData.get_localizedDescription
::Il2CppString* GlobalNamespace::IRichPresenceData::get_localizedDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IRichPresenceData::get_localizedDescription");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localizedDescription", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BrowsingMenusRichPresenceData
#include "GlobalNamespace/BrowsingMenusRichPresenceData.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kBrowsingMenusRichPresenceLocalizationKey
::Il2CppString* GlobalNamespace::BrowsingMenusRichPresenceData::_get_kBrowsingMenusRichPresenceLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BrowsingMenusRichPresenceData::_get_kBrowsingMenusRichPresenceLocalizationKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "BrowsingMenusRichPresenceData", "kBrowsingMenusRichPresenceLocalizationKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kBrowsingMenusRichPresenceLocalizationKey
void GlobalNamespace::BrowsingMenusRichPresenceData::_set_kBrowsingMenusRichPresenceLocalizationKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BrowsingMenusRichPresenceData::_set_kBrowsingMenusRichPresenceLocalizationKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BrowsingMenusRichPresenceData", "kBrowsingMenusRichPresenceLocalizationKey", value));
}
// Autogenerated method: BrowsingMenusRichPresenceData.set_localizedDescription
void GlobalNamespace::BrowsingMenusRichPresenceData::set_localizedDescription(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BrowsingMenusRichPresenceData::set_localizedDescription");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_localizedDescription", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BrowsingMenusRichPresenceData.get_apiName
::Il2CppString* GlobalNamespace::BrowsingMenusRichPresenceData::get_apiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BrowsingMenusRichPresenceData::get_apiName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_apiName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BrowsingMenusRichPresenceData.get_localizedDescription
::Il2CppString* GlobalNamespace::BrowsingMenusRichPresenceData::get_localizedDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BrowsingMenusRichPresenceData::get_localizedDescription");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localizedDescription", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayingCampaignRichPresenceData
#include "GlobalNamespace/PlayingCampaignRichPresenceData.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kPlayingCampaignRichPresenceLocalizationKey
::Il2CppString* GlobalNamespace::PlayingCampaignRichPresenceData::_get_kPlayingCampaignRichPresenceLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayingCampaignRichPresenceData::_get_kPlayingCampaignRichPresenceLocalizationKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "PlayingCampaignRichPresenceData", "kPlayingCampaignRichPresenceLocalizationKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPlayingCampaignRichPresenceLocalizationKey
void GlobalNamespace::PlayingCampaignRichPresenceData::_set_kPlayingCampaignRichPresenceLocalizationKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayingCampaignRichPresenceData::_set_kPlayingCampaignRichPresenceLocalizationKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayingCampaignRichPresenceData", "kPlayingCampaignRichPresenceLocalizationKey", value));
}
// Autogenerated method: PlayingCampaignRichPresenceData.set_localizedDescription
void GlobalNamespace::PlayingCampaignRichPresenceData::set_localizedDescription(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayingCampaignRichPresenceData::set_localizedDescription");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_localizedDescription", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayingCampaignRichPresenceData.get_apiName
::Il2CppString* GlobalNamespace::PlayingCampaignRichPresenceData::get_apiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayingCampaignRichPresenceData::get_apiName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_apiName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PlayingCampaignRichPresenceData.get_localizedDescription
::Il2CppString* GlobalNamespace::PlayingCampaignRichPresenceData::get_localizedDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayingCampaignRichPresenceData::get_localizedDescription");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localizedDescription", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayingTutorialPresenceData
#include "GlobalNamespace/PlayingTutorialPresenceData.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kPlayingCampaignRichPresenceLocalizationKey
::Il2CppString* GlobalNamespace::PlayingTutorialPresenceData::_get_kPlayingCampaignRichPresenceLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayingTutorialPresenceData::_get_kPlayingCampaignRichPresenceLocalizationKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "PlayingTutorialPresenceData", "kPlayingCampaignRichPresenceLocalizationKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPlayingCampaignRichPresenceLocalizationKey
void GlobalNamespace::PlayingTutorialPresenceData::_set_kPlayingCampaignRichPresenceLocalizationKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayingTutorialPresenceData::_set_kPlayingCampaignRichPresenceLocalizationKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayingTutorialPresenceData", "kPlayingCampaignRichPresenceLocalizationKey", value));
}
// Autogenerated method: PlayingTutorialPresenceData.set_localizedDescription
void GlobalNamespace::PlayingTutorialPresenceData::set_localizedDescription(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayingTutorialPresenceData::set_localizedDescription");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_localizedDescription", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayingTutorialPresenceData.get_apiName
::Il2CppString* GlobalNamespace::PlayingTutorialPresenceData::get_apiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayingTutorialPresenceData::get_apiName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_apiName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PlayingTutorialPresenceData.get_localizedDescription
::Il2CppString* GlobalNamespace::PlayingTutorialPresenceData::get_localizedDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayingTutorialPresenceData::get_localizedDescription");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localizedDescription", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayingDifficultyBeatmapRichPresenceData
#include "GlobalNamespace/PlayingDifficultyBeatmapRichPresenceData.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayingDifficultyBeatmapRichPresenceData.set_apiName
void GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::set_apiName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::set_apiName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_apiName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayingDifficultyBeatmapRichPresenceData.set_localizedDescription
void GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::set_localizedDescription(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::set_localizedDescription");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_localizedDescription", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayingDifficultyBeatmapRichPresenceData.GetDestinationLocalizedString
::Il2CppString* GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::GetDestinationLocalizedString(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::GetDestinationLocalizedString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDestinationLocalizedString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(difficultyBeatmap)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, difficultyBeatmap);
}
// Autogenerated method: PlayingDifficultyBeatmapRichPresenceData.get_apiName
::Il2CppString* GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::get_apiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::get_apiName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_apiName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PlayingDifficultyBeatmapRichPresenceData.get_localizedDescription
::Il2CppString* GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::get_localizedDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::get_localizedDescription");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localizedDescription", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RichPresenceManager
#include "GlobalNamespace/RichPresenceManager.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: MenuScenesTransitionSetupDataSO
#include "GlobalNamespace/MenuScenesTransitionSetupDataSO.hpp"
// Including type: IRichPresencePlatformHandler
#include "GlobalNamespace/IRichPresencePlatformHandler.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: BrowsingMenusRichPresenceData
#include "GlobalNamespace/BrowsingMenusRichPresenceData.hpp"
// Including type: PlayingCampaignRichPresenceData
#include "GlobalNamespace/PlayingCampaignRichPresenceData.hpp"
// Including type: PlayingTutorialPresenceData
#include "GlobalNamespace/PlayingTutorialPresenceData.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RichPresenceManager.Awake
void GlobalNamespace::RichPresenceManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RichPresenceManager::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceManager.OnDestroy
void GlobalNamespace::RichPresenceManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RichPresenceManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceManager.HandleGameScenesManagerTransitionDidFinish
void GlobalNamespace::RichPresenceManager::HandleGameScenesManagerTransitionDidFinish(GlobalNamespace::ScenesTransitionSetupDataSO* scenesTransitionSetupData, Zenject::DiContainer* diContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RichPresenceManager::HandleGameScenesManagerTransitionDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleGameScenesManagerTransitionDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scenesTransitionSetupData, diContainer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, scenesTransitionSetupData, diContainer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IRichPresencePlatformHandler
#include "GlobalNamespace/IRichPresencePlatformHandler.hpp"
// Including type: IRichPresenceData
#include "GlobalNamespace/IRichPresenceData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IRichPresencePlatformHandler.SetPresence
void GlobalNamespace::IRichPresencePlatformHandler::SetPresence(GlobalNamespace::IRichPresenceData* richPresenceData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IRichPresencePlatformHandler::SetPresence");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(richPresenceData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, richPresenceData);
}
// Autogenerated method: IRichPresencePlatformHandler.Clear
void GlobalNamespace::IRichPresencePlatformHandler::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IRichPresencePlatformHandler::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestRichPresencePlatformHandler
#include "GlobalNamespace/TestRichPresencePlatformHandler.hpp"
// Including type: IRichPresenceData
#include "GlobalNamespace/IRichPresenceData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestRichPresencePlatformHandler.SetPresence
void GlobalNamespace::TestRichPresencePlatformHandler::SetPresence(GlobalNamespace::IRichPresenceData* richPresenceData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestRichPresencePlatformHandler::SetPresence");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(richPresenceData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, richPresenceData);
}
// Autogenerated method: TestRichPresencePlatformHandler.Clear
void GlobalNamespace::TestRichPresencePlatformHandler::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestRichPresencePlatformHandler::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamRichPresencePlatformHandler
#include "GlobalNamespace/SteamRichPresencePlatformHandler.hpp"
// Including type: IRichPresenceData
#include "GlobalNamespace/IRichPresenceData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamRichPresencePlatformHandler.SetPresence
void GlobalNamespace::SteamRichPresencePlatformHandler::SetPresence(GlobalNamespace::IRichPresenceData* richPresenceData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamRichPresencePlatformHandler::SetPresence");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(richPresenceData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, richPresenceData);
}
// Autogenerated method: SteamRichPresencePlatformHandler.Clear
void GlobalNamespace::SteamRichPresencePlatformHandler::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamRichPresencePlatformHandler::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBladeMovementData
#include "GlobalNamespace/IBladeMovementData.hpp"
// Including type: BladeMovementDataElement
#include "GlobalNamespace/BladeMovementDataElement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBladeMovementData.get_bladeSpeed
float GlobalNamespace::IBladeMovementData::get_bladeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBladeMovementData::get_bladeSpeed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_bladeSpeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IBladeMovementData.get_lastAddedData
GlobalNamespace::BladeMovementDataElement GlobalNamespace::IBladeMovementData::get_lastAddedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBladeMovementData::get_lastAddedData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_lastAddedData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BladeMovementDataElement, false>(this, ___internal__method);
}
// Autogenerated method: IBladeMovementData.get_prevAddedData
GlobalNamespace::BladeMovementDataElement GlobalNamespace::IBladeMovementData::get_prevAddedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBladeMovementData::get_prevAddedData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_prevAddedData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BladeMovementDataElement, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ISaberMovementDataProcessor
#include "GlobalNamespace/ISaberMovementDataProcessor.hpp"
// Including type: BladeMovementDataElement
#include "GlobalNamespace/BladeMovementDataElement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ISaberMovementDataProcessor.ProcessNewData
void GlobalNamespace::ISaberMovementDataProcessor::ProcessNewData(GlobalNamespace::BladeMovementDataElement newData, GlobalNamespace::BladeMovementDataElement prevData, bool prevDataAreValid) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ISaberMovementDataProcessor::ProcessNewData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessNewData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newData, prevData, prevDataAreValid)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newData, prevData, prevDataAreValid);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SaberMovementData
#include "GlobalNamespace/SaberMovementData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ISaberMovementDataProcessor
#include "GlobalNamespace/ISaberMovementDataProcessor.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kOutOfRangeBladeSpeed
float GlobalNamespace::SaberMovementData::_get_kOutOfRangeBladeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::_get_kOutOfRangeBladeSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberMovementData", "kOutOfRangeBladeSpeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kOutOfRangeBladeSpeed
void GlobalNamespace::SaberMovementData::_set_kOutOfRangeBladeSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::_set_kOutOfRangeBladeSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberMovementData", "kOutOfRangeBladeSpeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kSmoothUpBladeSpeedCoef
float GlobalNamespace::SaberMovementData::_get_kSmoothUpBladeSpeedCoef() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::_get_kSmoothUpBladeSpeedCoef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberMovementData", "kSmoothUpBladeSpeedCoef"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSmoothUpBladeSpeedCoef
void GlobalNamespace::SaberMovementData::_set_kSmoothUpBladeSpeedCoef(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::_set_kSmoothUpBladeSpeedCoef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberMovementData", "kSmoothUpBladeSpeedCoef", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kSmoothDownBladeSpeedCoef
float GlobalNamespace::SaberMovementData::_get_kSmoothDownBladeSpeedCoef() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::_get_kSmoothDownBladeSpeedCoef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberMovementData", "kSmoothDownBladeSpeedCoef"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSmoothDownBladeSpeedCoef
void GlobalNamespace::SaberMovementData::_set_kSmoothDownBladeSpeedCoef(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::_set_kSmoothDownBladeSpeedCoef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberMovementData", "kSmoothDownBladeSpeedCoef", value));
}
// Autogenerated method: SaberMovementData.AddDataProcessor
void GlobalNamespace::SaberMovementData::AddDataProcessor(GlobalNamespace::ISaberMovementDataProcessor* dataProcessor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::AddDataProcessor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddDataProcessor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dataProcessor)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dataProcessor);
}
// Autogenerated method: SaberMovementData.RemoveDataProcessor
void GlobalNamespace::SaberMovementData::RemoveDataProcessor(GlobalNamespace::ISaberMovementDataProcessor* dataProcessor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::RemoveDataProcessor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveDataProcessor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dataProcessor)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dataProcessor);
}
// Autogenerated method: SaberMovementData.RequestLastDataProcessing
void GlobalNamespace::SaberMovementData::RequestLastDataProcessing(GlobalNamespace::ISaberMovementDataProcessor* dataProcessor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::RequestLastDataProcessing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RequestLastDataProcessing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dataProcessor)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dataProcessor);
}
// Autogenerated method: SaberMovementData.AddNewData
void GlobalNamespace::SaberMovementData::AddNewData(UnityEngine::Vector3 topPos, UnityEngine::Vector3 bottomPos, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::AddNewData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddNewData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(topPos, bottomPos, time)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, topPos, bottomPos, time);
}
// Autogenerated method: SaberMovementData.ComputeAdditionalData
void GlobalNamespace::SaberMovementData::ComputeAdditionalData(UnityEngine::Vector3 topPos, UnityEngine::Vector3 bottomPos, int idxOffset, UnityEngine::Vector3& segmentNormal, float& segmentAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::ComputeAdditionalData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ComputeAdditionalData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(topPos, bottomPos, idxOffset, segmentNormal, segmentAngle)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, topPos, bottomPos, idxOffset, segmentNormal, segmentAngle);
}
// Autogenerated method: SaberMovementData.ComputePlaneNormal
UnityEngine::Vector3 GlobalNamespace::SaberMovementData::ComputePlaneNormal(UnityEngine::Vector3 tp0, UnityEngine::Vector3 bp0, UnityEngine::Vector3 tp1, UnityEngine::Vector3 bp1) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::ComputePlaneNormal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ComputePlaneNormal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tp0, bp0, tp1, bp1)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, tp0, bp0, tp1, bp1);
}
// Autogenerated method: SaberMovementData.ComputeCutPlaneNormal
UnityEngine::Vector3 GlobalNamespace::SaberMovementData::ComputeCutPlaneNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::ComputeCutPlaneNormal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ComputeCutPlaneNormal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: SaberMovementData.ComputeSwingRating
float GlobalNamespace::SaberMovementData::ComputeSwingRating(float overrideSegmentAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::ComputeSwingRating");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ComputeSwingRating", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(overrideSegmentAngle)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, overrideSegmentAngle);
}
// Autogenerated method: SaberMovementData.ComputeSwingRating
float GlobalNamespace::SaberMovementData::ComputeSwingRating() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::ComputeSwingRating");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ComputeSwingRating", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SaberMovementData.ComputeSwingRating
float GlobalNamespace::SaberMovementData::ComputeSwingRating(bool overrideSegmenAngle, float overrideValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::ComputeSwingRating");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ComputeSwingRating", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(overrideSegmenAngle, overrideValue)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, overrideSegmenAngle, overrideValue);
}
// Autogenerated method: SaberMovementData.get_bladeSpeed
float GlobalNamespace::SaberMovementData::get_bladeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::get_bladeSpeed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_bladeSpeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SaberMovementData.get_lastAddedData
GlobalNamespace::BladeMovementDataElement GlobalNamespace::SaberMovementData::get_lastAddedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::get_lastAddedData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_lastAddedData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BladeMovementDataElement, false>(this, ___internal__method);
}
// Autogenerated method: SaberMovementData.get_prevAddedData
GlobalNamespace::BladeMovementDataElement GlobalNamespace::SaberMovementData::get_prevAddedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberMovementData::get_prevAddedData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_prevAddedData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BladeMovementDataElement, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberSwingRating
#include "GlobalNamespace/SaberSwingRating.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kMaxNormalAngleDiff
float GlobalNamespace::SaberSwingRating::_get_kMaxNormalAngleDiff() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_get_kMaxNormalAngleDiff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kMaxNormalAngleDiff"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kMaxNormalAngleDiff
void GlobalNamespace::SaberSwingRating::_set_kMaxNormalAngleDiff(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_set_kMaxNormalAngleDiff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kMaxNormalAngleDiff", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kToleranceNormalAngleDiff
float GlobalNamespace::SaberSwingRating::_get_kToleranceNormalAngleDiff() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_get_kToleranceNormalAngleDiff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kToleranceNormalAngleDiff"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kToleranceNormalAngleDiff
void GlobalNamespace::SaberSwingRating::_set_kToleranceNormalAngleDiff(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_set_kToleranceNormalAngleDiff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kToleranceNormalAngleDiff", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kMaxBeforeCutSwingDuration
float GlobalNamespace::SaberSwingRating::_get_kMaxBeforeCutSwingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_get_kMaxBeforeCutSwingDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kMaxBeforeCutSwingDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kMaxBeforeCutSwingDuration
void GlobalNamespace::SaberSwingRating::_set_kMaxBeforeCutSwingDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_set_kMaxBeforeCutSwingDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kMaxBeforeCutSwingDuration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kMaxAfterCutSwingDuration
float GlobalNamespace::SaberSwingRating::_get_kMaxAfterCutSwingDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_get_kMaxAfterCutSwingDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kMaxAfterCutSwingDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kMaxAfterCutSwingDuration
void GlobalNamespace::SaberSwingRating::_set_kMaxAfterCutSwingDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_set_kMaxAfterCutSwingDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kMaxAfterCutSwingDuration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kBeforeCutAngleFor1Rating
float GlobalNamespace::SaberSwingRating::_get_kBeforeCutAngleFor1Rating() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_get_kBeforeCutAngleFor1Rating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kBeforeCutAngleFor1Rating"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kBeforeCutAngleFor1Rating
void GlobalNamespace::SaberSwingRating::_set_kBeforeCutAngleFor1Rating(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_set_kBeforeCutAngleFor1Rating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kBeforeCutAngleFor1Rating", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kAfterCutAngleFor1Rating
float GlobalNamespace::SaberSwingRating::_get_kAfterCutAngleFor1Rating() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_get_kAfterCutAngleFor1Rating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberSwingRating", "kAfterCutAngleFor1Rating"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kAfterCutAngleFor1Rating
void GlobalNamespace::SaberSwingRating::_set_kAfterCutAngleFor1Rating(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::_set_kAfterCutAngleFor1Rating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberSwingRating", "kAfterCutAngleFor1Rating", value));
}
// Autogenerated method: SaberSwingRating.NormalRating
float GlobalNamespace::SaberSwingRating::NormalRating(float normalDiff) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::NormalRating");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SaberSwingRating", "NormalRating", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(normalDiff)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, normalDiff);
}
// Autogenerated method: SaberSwingRating.BeforeCutStepRating
float GlobalNamespace::SaberSwingRating::BeforeCutStepRating(float angleDiff, float normalDiff) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::BeforeCutStepRating");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SaberSwingRating", "BeforeCutStepRating", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(angleDiff, normalDiff)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, angleDiff, normalDiff);
}
// Autogenerated method: SaberSwingRating.AfterCutStepRating
float GlobalNamespace::SaberSwingRating::AfterCutStepRating(float angleDiff, float normalDiff) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRating::AfterCutStepRating");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "SaberSwingRating", "AfterCutStepRating", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(angleDiff, normalDiff)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, angleDiff, normalDiff);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberSwingRatingCounter
#include "GlobalNamespace/SaberSwingRatingCounter.hpp"
// Including type: SwingSaberRatingDidChangeDelegate
#include "GlobalNamespace/SwingSaberRatingDidChangeDelegate.hpp"
// Including type: SwingSaberRatingDidFinishDelegate
#include "GlobalNamespace/SwingSaberRatingDidFinishDelegate.hpp"
// Including type: SaberMovementData
#include "GlobalNamespace/SaberMovementData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: BladeMovementDataElement
#include "GlobalNamespace/BladeMovementDataElement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SaberSwingRatingCounter.Init
void GlobalNamespace::SaberSwingRatingCounter::Init(GlobalNamespace::SaberMovementData* saberMovementData, UnityEngine::Transform* noteTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(saberMovementData, noteTransform)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saberMovementData, noteTransform);
}
// Autogenerated method: SaberSwingRatingCounter.Deinit
void GlobalNamespace::SaberSwingRatingCounter::Deinit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::Deinit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Deinit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberSwingRatingCounter.DrawGizmos
void GlobalNamespace::SaberSwingRatingCounter::DrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::DrawGizmos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DrawGizmos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberSwingRatingCounter.add_didChangeEvent
void GlobalNamespace::SaberSwingRatingCounter::add_didChangeEvent(GlobalNamespace::SwingSaberRatingDidChangeDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::add_didChangeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didChangeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SaberSwingRatingCounter.remove_didChangeEvent
void GlobalNamespace::SaberSwingRatingCounter::remove_didChangeEvent(GlobalNamespace::SwingSaberRatingDidChangeDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::remove_didChangeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didChangeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SaberSwingRatingCounter.add_didFinishEvent
void GlobalNamespace::SaberSwingRatingCounter::add_didFinishEvent(GlobalNamespace::SwingSaberRatingDidFinishDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SaberSwingRatingCounter.remove_didFinishEvent
void GlobalNamespace::SaberSwingRatingCounter::remove_didFinishEvent(GlobalNamespace::SwingSaberRatingDidFinishDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SaberSwingRatingCounter.get_didFinish
bool GlobalNamespace::SaberSwingRatingCounter::get_didFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::get_didFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_didFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SaberSwingRatingCounter.get_beforeCutRating
float GlobalNamespace::SaberSwingRatingCounter::get_beforeCutRating() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::get_beforeCutRating");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beforeCutRating", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SaberSwingRatingCounter.get_afterCutRating
float GlobalNamespace::SaberSwingRatingCounter::get_afterCutRating() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::get_afterCutRating");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_afterCutRating", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SaberSwingRatingCounter.ProcessNewData
void GlobalNamespace::SaberSwingRatingCounter::ProcessNewData(GlobalNamespace::BladeMovementDataElement newData, GlobalNamespace::BladeMovementDataElement prevData, bool prevDataAreValid) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSwingRatingCounter::ProcessNewData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessNewData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newData, prevData, prevDataAreValid)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newData, prevData, prevDataAreValid);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScoreModel
#include "GlobalNamespace/ScoreModel.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxMultiplier
int GlobalNamespace::ScoreModel::_get_kMaxMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreModel::_get_kMaxMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ScoreModel", "kMaxMultiplier"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxMultiplier
void GlobalNamespace::ScoreModel::_set_kMaxMultiplier(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreModel::_set_kMaxMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "kMaxMultiplier", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxBeforeCutSwingRawScore
int GlobalNamespace::ScoreModel::_get_kMaxBeforeCutSwingRawScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreModel::_get_kMaxBeforeCutSwingRawScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ScoreModel", "kMaxBeforeCutSwingRawScore"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxBeforeCutSwingRawScore
void GlobalNamespace::ScoreModel::_set_kMaxBeforeCutSwingRawScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreModel::_set_kMaxBeforeCutSwingRawScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "kMaxBeforeCutSwingRawScore", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxCutDistanceRawScore
int GlobalNamespace::ScoreModel::_get_kMaxCutDistanceRawScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreModel::_get_kMaxCutDistanceRawScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ScoreModel", "kMaxCutDistanceRawScore"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxCutDistanceRawScore
void GlobalNamespace::ScoreModel::_set_kMaxCutDistanceRawScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreModel::_set_kMaxCutDistanceRawScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "kMaxCutDistanceRawScore", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxAfterCutSwingRawScore
int GlobalNamespace::ScoreModel::_get_kMaxAfterCutSwingRawScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreModel::_get_kMaxAfterCutSwingRawScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ScoreModel", "kMaxAfterCutSwingRawScore"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxAfterCutSwingRawScore
void GlobalNamespace::ScoreModel::_set_kMaxAfterCutSwingRawScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreModel::_set_kMaxAfterCutSwingRawScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "kMaxAfterCutSwingRawScore", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxCutRawScore
int GlobalNamespace::ScoreModel::_get_kMaxCutRawScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreModel::_get_kMaxCutRawScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ScoreModel", "kMaxCutRawScore"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxCutRawScore
void GlobalNamespace::ScoreModel::_set_kMaxCutRawScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreModel::_set_kMaxCutRawScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "kMaxCutRawScore", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kSwingScorePart
float GlobalNamespace::ScoreModel::_get_kSwingScorePart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreModel::_get_kSwingScorePart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ScoreModel", "kSwingScorePart"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSwingScorePart
void GlobalNamespace::ScoreModel::_set_kSwingScorePart(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreModel::_set_kSwingScorePart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "kSwingScorePart", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kDistanceToCenterScorePart
float GlobalNamespace::ScoreModel::_get_kDistanceToCenterScorePart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreModel::_get_kDistanceToCenterScorePart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ScoreModel", "kDistanceToCenterScorePart"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kDistanceToCenterScorePart
void GlobalNamespace::ScoreModel::_set_kDistanceToCenterScorePart(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreModel::_set_kDistanceToCenterScorePart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "kDistanceToCenterScorePart", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kMaxDistanceForDistanceToCenterScore
float GlobalNamespace::ScoreModel::_get_kMaxDistanceForDistanceToCenterScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreModel::_get_kMaxDistanceForDistanceToCenterScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ScoreModel", "kMaxDistanceForDistanceToCenterScore"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMaxDistanceForDistanceToCenterScore
void GlobalNamespace::ScoreModel::_set_kMaxDistanceForDistanceToCenterScore(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreModel::_set_kMaxDistanceForDistanceToCenterScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "kMaxDistanceForDistanceToCenterScore", value));
}
// Autogenerated method: ScoreModel.MaxRawScoreForNumberOfNotes
int GlobalNamespace::ScoreModel::MaxRawScoreForNumberOfNotes(int noteCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreModel::MaxRawScoreForNumberOfNotes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "ScoreModel", "MaxRawScoreForNumberOfNotes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteCount)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, noteCount);
}
// Autogenerated method: ScoreModel.RawScoreWithoutMultiplier
void GlobalNamespace::ScoreModel::RawScoreWithoutMultiplier(GlobalNamespace::NoteCutInfo* noteCutInfo, int& beforeCutRawScore, int& afterCutRawScore, int& cutDistanceRawScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreModel::RawScoreWithoutMultiplier");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "ScoreModel", "RawScoreWithoutMultiplier", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteCutInfo, beforeCutRawScore, afterCutRawScore, cutDistanceRawScore)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, noteCutInfo, beforeCutRawScore, afterCutRawScore, cutDistanceRawScore);
}
// Autogenerated method: ScoreModel.GetModifiedScoreForGameplayModifiersScoreMultiplier
int GlobalNamespace::ScoreModel::GetModifiedScoreForGameplayModifiersScoreMultiplier(int rawScore, float gameplayModifiersScoreMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreModel::GetModifiedScoreForGameplayModifiersScoreMultiplier");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "ScoreModel", "GetModifiedScoreForGameplayModifiersScoreMultiplier", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rawScore, gameplayModifiersScoreMultiplier)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawScore, gameplayModifiersScoreMultiplier);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelLoader
#include "GlobalNamespace/StandardLevelLoader.hpp"
// Including type: StandardLevelInfoSaveData
#include "GlobalNamespace/StandardLevelInfoSaveData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelLoader.LoadStandardLevelSaveData
GlobalNamespace::StandardLevelInfoSaveData* GlobalNamespace::StandardLevelLoader::LoadStandardLevelSaveData(::Il2CppString* levelInfoFilenamePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelLoader::LoadStandardLevelSaveData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "StandardLevelLoader", "LoadStandardLevelSaveData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelInfoFilenamePath)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardLevelInfoSaveData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, levelInfoFilenamePath);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersValueSOOffsets
#include "GlobalNamespace/VRControllersValueSOOffsets.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRControllersValueSOOffsets.get_positionOffset
UnityEngine::Vector3 GlobalNamespace::VRControllersValueSOOffsets::get_positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersValueSOOffsets::get_positionOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_positionOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersValueSOOffsets.get_rotationOffset
UnityEngine::Vector3 GlobalNamespace::VRControllersValueSOOffsets::get_rotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersValueSOOffsets::get_rotationOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rotationOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VersionSaveData
#include "GlobalNamespace/VersionSaveData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseResultsEnvironmentController
#include "GlobalNamespace/BaseResultsEnvironmentController.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BaseResultsEnvironmentController.Activate
void GlobalNamespace::BaseResultsEnvironmentController::Activate(bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseResultsEnvironmentController::Activate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(immediately)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, immediately);
}
// Autogenerated method: BaseResultsEnvironmentController.Deactivate
void GlobalNamespace::BaseResultsEnvironmentController::Deactivate(bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseResultsEnvironmentController::Deactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(immediately)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, immediately);
}
// Autogenerated method: BaseResultsEnvironmentController.Setup
void GlobalNamespace::BaseResultsEnvironmentController::Setup(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseResultsEnvironmentController::Setup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(difficultyBeatmap)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, difficultyBeatmap);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EnvironmentBrandingManager
#include "GlobalNamespace/EnvironmentBrandingManager.hpp"
// Including type: EnvironmentBrandingManager/InitData
#include "GlobalNamespace/EnvironmentBrandingManager_InitData.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnvironmentBrandingManager.Start
void GlobalNamespace::EnvironmentBrandingManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentBrandingManager::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentBrandingManager/InitData
#include "GlobalNamespace/EnvironmentBrandingManager_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuEnvironmentManager
#include "GlobalNamespace/MenuEnvironmentManager.hpp"
// Including type: MenuEnvironmentManager/MenuEnvironmentObjects
#include "GlobalNamespace/MenuEnvironmentManager_MenuEnvironmentObjects.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuEnvironmentManager.Start
void GlobalNamespace::MenuEnvironmentManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuEnvironmentManager::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuEnvironmentManager.ShowEnvironmentType
void GlobalNamespace::MenuEnvironmentManager::ShowEnvironmentType(GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType menuEnvironmentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuEnvironmentManager::ShowEnvironmentType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ShowEnvironmentType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(menuEnvironmentType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, menuEnvironmentType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuEnvironmentManager/MenuEnvironmentType
#include "GlobalNamespace/MenuEnvironmentManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MenuEnvironmentManager/MenuEnvironmentType None
GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType>("", "MenuEnvironmentManager/MenuEnvironmentType", "None"));
}
// Autogenerated static field setter
// Set static field: static public MenuEnvironmentManager/MenuEnvironmentType None
void GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_set_None(GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuEnvironmentManager/MenuEnvironmentType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MenuEnvironmentManager/MenuEnvironmentType Default
GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType>("", "MenuEnvironmentManager/MenuEnvironmentType", "Default"));
}
// Autogenerated static field setter
// Set static field: static public MenuEnvironmentManager/MenuEnvironmentType Default
void GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_set_Default(GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuEnvironmentManager/MenuEnvironmentType", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public MenuEnvironmentManager/MenuEnvironmentType Lobby
GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_get_Lobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_get_Lobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType>("", "MenuEnvironmentManager/MenuEnvironmentType", "Lobby"));
}
// Autogenerated static field setter
// Set static field: static public MenuEnvironmentManager/MenuEnvironmentType Lobby
void GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_set_Lobby(GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_set_Lobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuEnvironmentManager/MenuEnvironmentType", "Lobby", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuEnvironmentManager/MenuEnvironmentObjects
#include "GlobalNamespace/MenuEnvironmentManager_MenuEnvironmentObjects.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuEnvironmentManager/MenuEnvironmentObjects.get_menuEnvironmentType
GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects::get_menuEnvironmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects::get_menuEnvironmentType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_menuEnvironmentType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType, false>(this, ___internal__method);
}
// Autogenerated method: MenuEnvironmentManager/MenuEnvironmentObjects.get_wrapper
UnityEngine::GameObject* GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects::get_wrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects::get_wrapper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_wrapper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuNeonLightsGenerator
#include "GlobalNamespace/MenuNeonLightsGenerator.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OffsetByBeatmapObjectSpawnCenter
#include "GlobalNamespace/OffsetByBeatmapObjectSpawnCenter.hpp"
// Including type: BeatmapObjectSpawnCenter
#include "GlobalNamespace/BeatmapObjectSpawnCenter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OffsetByBeatmapObjectSpawnCenter.Start
void GlobalNamespace::OffsetByBeatmapObjectSpawnCenter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OffsetByBeatmapObjectSpawnCenter::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OffsetByBeatmapObjectSpawnCenter.HandleSpawnCenterDistanceWasFound
void GlobalNamespace::OffsetByBeatmapObjectSpawnCenter::HandleSpawnCenterDistanceWasFound(float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OffsetByBeatmapObjectSpawnCenter::HandleSpawnCenterDistanceWasFound");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleSpawnCenterDistanceWasFound", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(distance)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, distance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ResultsEnvironmentManager
#include "GlobalNamespace/ResultsEnvironmentManager.hpp"
// Including type: ResultsEnvironmentManager/ResultEnvironmentControllerWithKeyword
#include "GlobalNamespace/ResultsEnvironmentManager_ResultEnvironmentControllerWithKeyword.hpp"
// Including type: ResultsEnvironmentManager/<>c__DisplayClass3_0
#include "GlobalNamespace/ResultsEnvironmentManager_--c__DisplayClass3_0.hpp"
// Including type: BaseResultsEnvironmentController
#include "GlobalNamespace/BaseResultsEnvironmentController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ResultsEnvironmentManager.GetResultEnvironmentControllerForKeyword
GlobalNamespace::BaseResultsEnvironmentController* GlobalNamespace::ResultsEnvironmentManager::GetResultEnvironmentControllerForKeyword(::Il2CppString* keyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsEnvironmentManager::GetResultEnvironmentControllerForKeyword");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetResultEnvironmentControllerForKeyword", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyword)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseResultsEnvironmentController*, false>(this, ___internal__method, keyword);
}
// Autogenerated method: ResultsEnvironmentManager.ShowResultForKeyword
void GlobalNamespace::ResultsEnvironmentManager::ShowResultForKeyword(::Il2CppString* keyword, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsEnvironmentManager::ShowResultForKeyword");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ShowResultForKeyword", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyword, immediately)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keyword, immediately);
}
// Autogenerated method: ResultsEnvironmentManager.HideResultForKeyword
void GlobalNamespace::ResultsEnvironmentManager::HideResultForKeyword(::Il2CppString* keyword, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsEnvironmentManager::HideResultForKeyword");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HideResultForKeyword", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyword, immediately)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, keyword, immediately);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ResultsEnvironmentManager/ResultEnvironmentControllerWithKeyword
#include "GlobalNamespace/ResultsEnvironmentManager_ResultEnvironmentControllerWithKeyword.hpp"
// Including type: BaseResultsEnvironmentController
#include "GlobalNamespace/BaseResultsEnvironmentController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ResultsEnvironmentManager/ResultEnvironmentControllerWithKeyword.get_keyword
::Il2CppString* GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword::get_keyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword::get_keyword");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_keyword", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: ResultsEnvironmentManager/ResultEnvironmentControllerWithKeyword.get_resultsEnvironmentController
GlobalNamespace::BaseResultsEnvironmentController* GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword::get_resultsEnvironmentController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword::get_resultsEnvironmentController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_resultsEnvironmentController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseResultsEnvironmentController*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ResultsEnvironmentManager/<>c__DisplayClass3_0
#include "GlobalNamespace/ResultsEnvironmentManager_--c__DisplayClass3_0.hpp"
// Including type: ResultsEnvironmentManager/ResultEnvironmentControllerWithKeyword
#include "GlobalNamespace/ResultsEnvironmentManager_ResultEnvironmentControllerWithKeyword.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ResultsEnvironmentManager/<>c__DisplayClass3_0.<GetResultEnvironmentControllerForKeyword>b__0
bool GlobalNamespace::ResultsEnvironmentManager::$$c__DisplayClass3_0::$GetResultEnvironmentControllerForKeyword$b__0(GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword* controllerWithKeyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsEnvironmentManager::$$c__DisplayClass3_0::<GetResultEnvironmentControllerForKeyword>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetResultEnvironmentControllerForKeyword>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controllerWithKeyword))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, controllerWithKeyword);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatLine
#include "GlobalNamespace/BeatLine.hpp"
// Including type: BeatLine/Pool
#include "GlobalNamespace/BeatLine_Pool.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatLine.get_isFinished
bool GlobalNamespace::BeatLine::get_isFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatLine::get_isFinished");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isFinished", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatLine.get_rotation
float GlobalNamespace::BeatLine::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatLine::get_rotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatLine.Init
void GlobalNamespace::BeatLine::Init(UnityEngine::Vector3 position, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatLine::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(position, rotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: BeatLine.AddHighlight
void GlobalNamespace::BeatLine::AddHighlight(float startTime, float arriveDuration, float jumpDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatLine::AddHighlight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddHighlight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(startTime, arriveDuration, jumpDuration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, startTime, arriveDuration, jumpDuration);
}
// Autogenerated method: BeatLine.ManualUpdate
void GlobalNamespace::BeatLine::ManualUpdate(float songTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatLine::ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(songTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, songTime);
}
// Autogenerated method: BeatLine.ColorWasSet
void GlobalNamespace::BeatLine::ColorWasSet(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatLine::ColorWasSet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatLine/Pool
#include "GlobalNamespace/BeatLine_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatLineManager
#include "GlobalNamespace/BeatLineManager.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: BeatLine/Pool
#include "GlobalNamespace/BeatLine_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatLineManager.get_isMidRotationValid
bool GlobalNamespace::BeatLineManager::get_isMidRotationValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatLineManager::get_isMidRotationValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isMidRotationValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatLineManager.get_midRotation
float GlobalNamespace::BeatLineManager::get_midRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatLineManager::get_midRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_midRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatLineManager.get_rotationRange
float GlobalNamespace::BeatLineManager::get_rotationRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatLineManager::get_rotationRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rotationRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatLineManager.Start
void GlobalNamespace::BeatLineManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatLineManager::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatLineManager.OnDestroy
void GlobalNamespace::BeatLineManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatLineManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatLineManager.Update
void GlobalNamespace::BeatLineManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatLineManager::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatLineManager.HandleNoteWasSpawned
void GlobalNamespace::BeatLineManager::HandleNoteWasSpawned(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatLineManager::HandleNoteWasSpawned");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteWasSpawned", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BasicBeatmapObjectManager
#include "GlobalNamespace/BasicBeatmapObjectManager.hpp"
// Including type: BasicBeatmapObjectManager/InitData
#include "GlobalNamespace/BasicBeatmapObjectManager_InitData.hpp"
// Including type: MonoMemoryPoolContainer`1
#include "GlobalNamespace/MonoMemoryPoolContainer_1.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: GameNoteController/Pool
#include "GlobalNamespace/GameNoteController_Pool.hpp"
// Including type: BombNoteController/Pool
#include "GlobalNamespace/BombNoteController_Pool.hpp"
// Including type: ObstacleController/Pool
#include "GlobalNamespace/ObstacleController_Pool.hpp"
// Including type: BeatmapObjectSpawnMovementData/ObstacleSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_ObstacleSpawnData.hpp"
// Including type: BeatmapObjectSpawnMovementData/NoteSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_NoteSpawnData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BasicBeatmapObjectManager.GetMaxYForRangeInMiddleTwoLanes
float GlobalNamespace::BasicBeatmapObjectManager::GetMaxYForRangeInMiddleTwoLanes(float zStart, float zEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicBeatmapObjectManager::GetMaxYForRangeInMiddleTwoLanes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMaxYForRangeInMiddleTwoLanes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(zStart, zEnd)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, zStart, zEnd);
}
// Autogenerated method: BasicBeatmapObjectManager.get_activeObstacleControllers
System::Collections::Generic::HashSet_1<GlobalNamespace::ObstacleController*>* GlobalNamespace::BasicBeatmapObjectManager::get_activeObstacleControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicBeatmapObjectManager::get_activeObstacleControllers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_activeObstacleControllers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::HashSet_1<GlobalNamespace::ObstacleController*>*, false>(this, ___internal__method);
}
// Autogenerated method: BasicBeatmapObjectManager.SpawnObstacleInternal
GlobalNamespace::ObstacleController* GlobalNamespace::BasicBeatmapObjectManager::SpawnObstacleInternal(GlobalNamespace::ObstacleData* obstacleData, GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData obstacleSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicBeatmapObjectManager::SpawnObstacleInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnObstacleInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleData, obstacleSpawnData, rotation)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ObstacleController*, false>(this, ___internal__method, obstacleData, obstacleSpawnData, rotation);
}
// Autogenerated method: BasicBeatmapObjectManager.SpawnBombNoteInternal
GlobalNamespace::NoteController* GlobalNamespace::BasicBeatmapObjectManager::SpawnBombNoteInternal(GlobalNamespace::NoteData* bombNoteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicBeatmapObjectManager::SpawnBombNoteInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnBombNoteInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bombNoteData, noteSpawnData, rotation)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteController*, false>(this, ___internal__method, bombNoteData, noteSpawnData, rotation);
}
// Autogenerated method: BasicBeatmapObjectManager.SpawnBasicNoteInternal
GlobalNamespace::NoteController* GlobalNamespace::BasicBeatmapObjectManager::SpawnBasicNoteInternal(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation, float cutDirectionAngleOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicBeatmapObjectManager::SpawnBasicNoteInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnBasicNoteInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, noteSpawnData, rotation, cutDirectionAngleOffset)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteController*, false>(this, ___internal__method, noteData, noteSpawnData, rotation, cutDirectionAngleOffset);
}
// Autogenerated method: BasicBeatmapObjectManager.DespawnInternal
void GlobalNamespace::BasicBeatmapObjectManager::DespawnInternal(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicBeatmapObjectManager::DespawnInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: BasicBeatmapObjectManager.DespawnInternal
void GlobalNamespace::BasicBeatmapObjectManager::DespawnInternal(GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicBeatmapObjectManager::DespawnInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: BasicBeatmapObjectManager.DissolveAllObjects
void GlobalNamespace::BasicBeatmapObjectManager::DissolveAllObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicBeatmapObjectManager::DissolveAllObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DissolveAllObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasicBeatmapObjectManager.HideAllBeatmapObjects
void GlobalNamespace::BasicBeatmapObjectManager::HideAllBeatmapObjects(bool hide) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicBeatmapObjectManager::HideAllBeatmapObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HideAllBeatmapObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hide)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hide);
}
// Autogenerated method: BasicBeatmapObjectManager.PauseAllBeatmapObjects
void GlobalNamespace::BasicBeatmapObjectManager::PauseAllBeatmapObjects(bool pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicBeatmapObjectManager::PauseAllBeatmapObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PauseAllBeatmapObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pause)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pause);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BasicBeatmapObjectManager/InitData
#include "GlobalNamespace/BasicBeatmapObjectManager_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCallbackItemDataList
#include "GlobalNamespace/BeatmapCallbackItemDataList.hpp"
// Including type: BeatmapCallbackItemDataList/SpawnBasicNoteCallback
#include "GlobalNamespace/BeatmapCallbackItemDataList_SpawnBasicNoteCallback.hpp"
// Including type: BeatmapCallbackItemDataList/SpawnLongNoteCallback
#include "GlobalNamespace/BeatmapCallbackItemDataList_SpawnLongNoteCallback.hpp"
// Including type: BeatmapCallbackItemDataList/SpawnBombNoteCallback
#include "GlobalNamespace/BeatmapCallbackItemDataList_SpawnBombNoteCallback.hpp"
// Including type: BeatmapCallbackItemDataList/SpawnObstacleCallback
#include "GlobalNamespace/BeatmapCallbackItemDataList_SpawnObstacleCallback.hpp"
// Including type: BeatmapCallbackItemDataList/ProcessBeatmapEventCallback
#include "GlobalNamespace/BeatmapCallbackItemDataList_ProcessBeatmapEventCallback.hpp"
// Including type: BeatmapCallbackItemDataList/GetRelativeNoteOffsetCallback
#include "GlobalNamespace/BeatmapCallbackItemDataList_GetRelativeNoteOffsetCallback.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapCallbackItemDataList.InsertBeatmapObjectData
void GlobalNamespace::BeatmapCallbackItemDataList::InsertBeatmapObjectData(GlobalNamespace::BeatmapObjectData* beatmapObjectData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::InsertBeatmapObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InsertBeatmapObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapObjectData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapObjectData);
}
// Autogenerated method: BeatmapCallbackItemDataList.InsertBeatmapEventData
void GlobalNamespace::BeatmapCallbackItemDataList::InsertBeatmapEventData(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::InsertBeatmapEventData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InsertBeatmapEventData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: BeatmapCallbackItemDataList.ProcessData
void GlobalNamespace::BeatmapCallbackItemDataList::ProcessData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::ProcessData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCallbackItemDataList.ProcessNotesByColorType
bool GlobalNamespace::BeatmapCallbackItemDataList::ProcessNotesByColorType(System::Collections::Generic::List_1<GlobalNamespace::NoteData*>* notesWithTheSameColorTypeList) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::ProcessNotesByColorType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessNotesByColorType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(notesWithTheSameColorTypeList)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, notesWithTheSameColorTypeList);
}
// Autogenerated method: BeatmapCallbackItemDataList.SpawnNoteOrLongNote
void GlobalNamespace::BeatmapCallbackItemDataList::SpawnNoteOrLongNote(GlobalNamespace::NoteData* noteData, float cutDirectionAngleOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::SpawnNoteOrLongNote");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnNoteOrLongNote", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, cutDirectionAngleOffset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteData, cutDirectionAngleOffset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapCallbackItemDataList/SpawnBasicNoteCallback
#include "GlobalNamespace/BeatmapCallbackItemDataList_SpawnBasicNoteCallback.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapCallbackItemDataList/SpawnBasicNoteCallback.Invoke
void GlobalNamespace::BeatmapCallbackItemDataList::SpawnBasicNoteCallback::Invoke(GlobalNamespace::NoteData* noteData, float cutDirectionAngleOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::SpawnBasicNoteCallback::Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, cutDirectionAngleOffset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteData, cutDirectionAngleOffset);
}
// Autogenerated method: BeatmapCallbackItemDataList/SpawnBasicNoteCallback.BeginInvoke
System::IAsyncResult* GlobalNamespace::BeatmapCallbackItemDataList::SpawnBasicNoteCallback::BeginInvoke(GlobalNamespace::NoteData* noteData, float cutDirectionAngleOffset, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::SpawnBasicNoteCallback::BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, cutDirectionAngleOffset, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, noteData, cutDirectionAngleOffset, callback, object);
}
// Autogenerated method: BeatmapCallbackItemDataList/SpawnBasicNoteCallback.EndInvoke
void GlobalNamespace::BeatmapCallbackItemDataList::SpawnBasicNoteCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::SpawnBasicNoteCallback::EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapCallbackItemDataList/SpawnLongNoteCallback
#include "GlobalNamespace/BeatmapCallbackItemDataList_SpawnLongNoteCallback.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapCallbackItemDataList/SpawnLongNoteCallback.Invoke
void GlobalNamespace::BeatmapCallbackItemDataList::SpawnLongNoteCallback::Invoke(GlobalNamespace::NoteData* noteData, float cutDirectionAngleOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::SpawnLongNoteCallback::Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, cutDirectionAngleOffset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteData, cutDirectionAngleOffset);
}
// Autogenerated method: BeatmapCallbackItemDataList/SpawnLongNoteCallback.BeginInvoke
System::IAsyncResult* GlobalNamespace::BeatmapCallbackItemDataList::SpawnLongNoteCallback::BeginInvoke(GlobalNamespace::NoteData* noteData, float cutDirectionAngleOffset, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::SpawnLongNoteCallback::BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, cutDirectionAngleOffset, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, noteData, cutDirectionAngleOffset, callback, object);
}
// Autogenerated method: BeatmapCallbackItemDataList/SpawnLongNoteCallback.EndInvoke
void GlobalNamespace::BeatmapCallbackItemDataList::SpawnLongNoteCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::SpawnLongNoteCallback::EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapCallbackItemDataList/SpawnBombNoteCallback
#include "GlobalNamespace/BeatmapCallbackItemDataList_SpawnBombNoteCallback.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapCallbackItemDataList/SpawnBombNoteCallback.Invoke
void GlobalNamespace::BeatmapCallbackItemDataList::SpawnBombNoteCallback::Invoke(GlobalNamespace::NoteData* noteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::SpawnBombNoteCallback::Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteData);
}
// Autogenerated method: BeatmapCallbackItemDataList/SpawnBombNoteCallback.BeginInvoke
System::IAsyncResult* GlobalNamespace::BeatmapCallbackItemDataList::SpawnBombNoteCallback::BeginInvoke(GlobalNamespace::NoteData* noteData, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::SpawnBombNoteCallback::BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, noteData, callback, object);
}
// Autogenerated method: BeatmapCallbackItemDataList/SpawnBombNoteCallback.EndInvoke
void GlobalNamespace::BeatmapCallbackItemDataList::SpawnBombNoteCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::SpawnBombNoteCallback::EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapCallbackItemDataList/SpawnObstacleCallback
#include "GlobalNamespace/BeatmapCallbackItemDataList_SpawnObstacleCallback.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapCallbackItemDataList/SpawnObstacleCallback.Invoke
void GlobalNamespace::BeatmapCallbackItemDataList::SpawnObstacleCallback::Invoke(GlobalNamespace::ObstacleData* obstacleData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::SpawnObstacleCallback::Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obstacleData);
}
// Autogenerated method: BeatmapCallbackItemDataList/SpawnObstacleCallback.BeginInvoke
System::IAsyncResult* GlobalNamespace::BeatmapCallbackItemDataList::SpawnObstacleCallback::BeginInvoke(GlobalNamespace::ObstacleData* obstacleData, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::SpawnObstacleCallback::BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleData, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, obstacleData, callback, object);
}
// Autogenerated method: BeatmapCallbackItemDataList/SpawnObstacleCallback.EndInvoke
void GlobalNamespace::BeatmapCallbackItemDataList::SpawnObstacleCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::SpawnObstacleCallback::EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapCallbackItemDataList/ProcessBeatmapEventCallback
#include "GlobalNamespace/BeatmapCallbackItemDataList_ProcessBeatmapEventCallback.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapCallbackItemDataList/ProcessBeatmapEventCallback.Invoke
void GlobalNamespace::BeatmapCallbackItemDataList::ProcessBeatmapEventCallback::Invoke(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::ProcessBeatmapEventCallback::Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: BeatmapCallbackItemDataList/ProcessBeatmapEventCallback.BeginInvoke
System::IAsyncResult* GlobalNamespace::BeatmapCallbackItemDataList::ProcessBeatmapEventCallback::BeginInvoke(GlobalNamespace::BeatmapEventData* beatmapEventData, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::ProcessBeatmapEventCallback::BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventData, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, beatmapEventData, callback, object);
}
// Autogenerated method: BeatmapCallbackItemDataList/ProcessBeatmapEventCallback.EndInvoke
void GlobalNamespace::BeatmapCallbackItemDataList::ProcessBeatmapEventCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::ProcessBeatmapEventCallback::EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapCallbackItemDataList/GetRelativeNoteOffsetCallback
#include "GlobalNamespace/BeatmapCallbackItemDataList_GetRelativeNoteOffsetCallback.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: NoteLineLayer
#include "GlobalNamespace/NoteLineLayer.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapCallbackItemDataList/GetRelativeNoteOffsetCallback.Invoke
UnityEngine::Vector2 GlobalNamespace::BeatmapCallbackItemDataList::GetRelativeNoteOffsetCallback::Invoke(int lineIndex, GlobalNamespace::NoteLineLayer noteLineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::GetRelativeNoteOffsetCallback::Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lineIndex, noteLineLayer)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, lineIndex, noteLineLayer);
}
// Autogenerated method: BeatmapCallbackItemDataList/GetRelativeNoteOffsetCallback.BeginInvoke
System::IAsyncResult* GlobalNamespace::BeatmapCallbackItemDataList::GetRelativeNoteOffsetCallback::BeginInvoke(int lineIndex, GlobalNamespace::NoteLineLayer noteLineLayer, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::GetRelativeNoteOffsetCallback::BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lineIndex, noteLineLayer, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, lineIndex, noteLineLayer, callback, object);
}
// Autogenerated method: BeatmapCallbackItemDataList/GetRelativeNoteOffsetCallback.EndInvoke
UnityEngine::Vector2 GlobalNamespace::BeatmapCallbackItemDataList::GetRelativeNoteOffsetCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCallbackItemDataList::GetRelativeNoteOffsetCallback::EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectCallbackController
#include "GlobalNamespace/BeatmapObjectCallbackController.hpp"
// Including type: BeatmapObjectCallbackController/InitData
#include "GlobalNamespace/BeatmapObjectCallbackController_InitData.hpp"
// Including type: BeatmapObjectCallbackController/BeatmapObjectCallbackData
#include "GlobalNamespace/BeatmapObjectCallbackController_BeatmapObjectCallbackData.hpp"
// Including type: BeatmapObjectCallbackController/BeatmapEventCallbackData
#include "GlobalNamespace/BeatmapObjectCallbackController_BeatmapEventCallbackData.hpp"
// Including type: BeatmapObjectCallbackController/BeatmapObjectCallback
#include "GlobalNamespace/BeatmapObjectCallbackController_BeatmapObjectCallback.hpp"
// Including type: BeatmapObjectCallbackController/BeatmapEventCallback
#include "GlobalNamespace/BeatmapObjectCallbackController_BeatmapEventCallback.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: EnvironmentKeywords
#include "GlobalNamespace/EnvironmentKeywords.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapObjectCallbackController.add_beatmapEventDidTriggerEvent
void GlobalNamespace::BeatmapObjectCallbackController::add_beatmapEventDidTriggerEvent(System::Action_1<GlobalNamespace::BeatmapEventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackController::add_beatmapEventDidTriggerEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_beatmapEventDidTriggerEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectCallbackController.remove_beatmapEventDidTriggerEvent
void GlobalNamespace::BeatmapObjectCallbackController::remove_beatmapEventDidTriggerEvent(System::Action_1<GlobalNamespace::BeatmapEventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackController::remove_beatmapEventDidTriggerEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_beatmapEventDidTriggerEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectCallbackController.add_callbacksForThisFrameWereProcessedEvent
void GlobalNamespace::BeatmapObjectCallbackController::add_callbacksForThisFrameWereProcessedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackController::add_callbacksForThisFrameWereProcessedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_callbacksForThisFrameWereProcessedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectCallbackController.remove_callbacksForThisFrameWereProcessedEvent
void GlobalNamespace::BeatmapObjectCallbackController::remove_callbacksForThisFrameWereProcessedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackController::remove_callbacksForThisFrameWereProcessedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_callbacksForThisFrameWereProcessedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectCallbackController.Start
void GlobalNamespace::BeatmapObjectCallbackController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackController::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectCallbackController.LateUpdate
void GlobalNamespace::BeatmapObjectCallbackController::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackController::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectCallbackController.AddBeatmapObjectCallback
GlobalNamespace::BeatmapObjectCallbackController::BeatmapObjectCallbackData* GlobalNamespace::BeatmapObjectCallbackController::AddBeatmapObjectCallback(GlobalNamespace::BeatmapObjectCallbackController::BeatmapObjectCallback* callback, float aheadTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackController::AddBeatmapObjectCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddBeatmapObjectCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback, aheadTime)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapObjectCallbackController::BeatmapObjectCallbackData*, false>(this, ___internal__method, callback, aheadTime);
}
// Autogenerated method: BeatmapObjectCallbackController.RemoveBeatmapObjectCallback
void GlobalNamespace::BeatmapObjectCallbackController::RemoveBeatmapObjectCallback(GlobalNamespace::BeatmapObjectCallbackController::BeatmapObjectCallbackData* callbackData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackController::RemoveBeatmapObjectCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveBeatmapObjectCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callbackData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callbackData);
}
// Autogenerated method: BeatmapObjectCallbackController.AddBeatmapEventCallback
GlobalNamespace::BeatmapObjectCallbackController::BeatmapEventCallbackData* GlobalNamespace::BeatmapObjectCallbackController::AddBeatmapEventCallback(GlobalNamespace::BeatmapObjectCallbackController::BeatmapEventCallback* callback, float aheadTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackController::AddBeatmapEventCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddBeatmapEventCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback, aheadTime)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapObjectCallbackController::BeatmapEventCallbackData*, false>(this, ___internal__method, callback, aheadTime);
}
// Autogenerated method: BeatmapObjectCallbackController.RemoveBeatmapEventCallback
void GlobalNamespace::BeatmapObjectCallbackController::RemoveBeatmapEventCallback(GlobalNamespace::BeatmapObjectCallbackController::BeatmapEventCallbackData* callbackData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackController::RemoveBeatmapEventCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveBeatmapEventCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callbackData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, callbackData);
}
// Autogenerated method: BeatmapObjectCallbackController.SendBeatmapEventDidTriggerEvent
void GlobalNamespace::BeatmapObjectCallbackController::SendBeatmapEventDidTriggerEvent(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackController::SendBeatmapEventDidTriggerEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendBeatmapEventDidTriggerEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: BeatmapObjectCallbackController.SetNewBeatmapData
void GlobalNamespace::BeatmapObjectCallbackController::SetNewBeatmapData(GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackController::SetNewBeatmapData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetNewBeatmapData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapData);
}
// Autogenerated method: BeatmapObjectCallbackController.Pause
void GlobalNamespace::BeatmapObjectCallbackController::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackController::Pause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectCallbackController.Resume
void GlobalNamespace::BeatmapObjectCallbackController::Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackController::Resume");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Resume", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectCallbackController/InitData
#include "GlobalNamespace/BeatmapObjectCallbackController_InitData.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapObjectCallbackController/BeatmapObjectCallbackData
#include "GlobalNamespace/BeatmapObjectCallbackController_BeatmapObjectCallbackData.hpp"
// Including type: BeatmapObjectCallbackController/BeatmapObjectCallback
#include "GlobalNamespace/BeatmapObjectCallbackController_BeatmapObjectCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectCallbackController/BeatmapEventCallbackData
#include "GlobalNamespace/BeatmapObjectCallbackController_BeatmapEventCallbackData.hpp"
// Including type: BeatmapObjectCallbackController/BeatmapEventCallback
#include "GlobalNamespace/BeatmapObjectCallbackController_BeatmapEventCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapObjectCallbackController/BeatmapObjectCallback
#include "GlobalNamespace/BeatmapObjectCallbackController_BeatmapObjectCallback.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapObjectCallbackController/BeatmapObjectCallback.Invoke
void GlobalNamespace::BeatmapObjectCallbackController::BeatmapObjectCallback::Invoke(GlobalNamespace::BeatmapObjectData* noteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackController::BeatmapObjectCallback::Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteData);
}
// Autogenerated method: BeatmapObjectCallbackController/BeatmapObjectCallback.BeginInvoke
System::IAsyncResult* GlobalNamespace::BeatmapObjectCallbackController::BeatmapObjectCallback::BeginInvoke(GlobalNamespace::BeatmapObjectData* noteData, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackController::BeatmapObjectCallback::BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, noteData, callback, object);
}
// Autogenerated method: BeatmapObjectCallbackController/BeatmapObjectCallback.EndInvoke
void GlobalNamespace::BeatmapObjectCallbackController::BeatmapObjectCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackController::BeatmapObjectCallback::EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapObjectCallbackController/BeatmapEventCallback
#include "GlobalNamespace/BeatmapObjectCallbackController_BeatmapEventCallback.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapObjectCallbackController/BeatmapEventCallback.Invoke
void GlobalNamespace::BeatmapObjectCallbackController::BeatmapEventCallback::Invoke(GlobalNamespace::BeatmapEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackController::BeatmapEventCallback::Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: BeatmapObjectCallbackController/BeatmapEventCallback.BeginInvoke
System::IAsyncResult* GlobalNamespace::BeatmapObjectCallbackController::BeatmapEventCallback::BeginInvoke(GlobalNamespace::BeatmapEventData* eventData, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackController::BeatmapEventCallback::BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventData, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, eventData, callback, object);
}
// Autogenerated method: BeatmapObjectCallbackController/BeatmapEventCallback.EndInvoke
void GlobalNamespace::BeatmapObjectCallbackController::BeatmapEventCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectCallbackController::BeatmapEventCallback::EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectExecutionRatingsRecorder
#include "GlobalNamespace/BeatmapObjectExecutionRatingsRecorder.hpp"
// Including type: BeatmapObjectExecutionRatingsRecorder/CutScoreHandler
#include "GlobalNamespace/BeatmapObjectExecutionRatingsRecorder_CutScoreHandler.hpp"
// Including type: ScoreController
#include "GlobalNamespace/ScoreController.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: PlayerHeadAndObstacleInteraction
#include "GlobalNamespace/PlayerHeadAndObstacleInteraction.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapObjectExecutionRating
#include "GlobalNamespace/BeatmapObjectExecutionRating.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder.get_beatmapObjectExecutionRatings
System::Collections::Generic::List_1<GlobalNamespace::BeatmapObjectExecutionRating*>* GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::get_beatmapObjectExecutionRatings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::get_beatmapObjectExecutionRatings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapObjectExecutionRatings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::BeatmapObjectExecutionRating*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder.Start
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder.OnDestroy
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder.Update
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder.HandleCutScoreHandlerDidFinish
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::HandleCutScoreHandlerDidFinish(GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::CutScoreHandler* cutScoreHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::HandleCutScoreHandlerDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleCutScoreHandlerDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cutScoreHandler)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cutScoreHandler);
}
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder.HandleScoreControllerNoteWasCut
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::HandleScoreControllerNoteWasCut(GlobalNamespace::NoteData* noteData, GlobalNamespace::NoteCutInfo* noteCutInfo, int multiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::HandleScoreControllerNoteWasCut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleScoreControllerNoteWasCut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, noteCutInfo, multiplier)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteData, noteCutInfo, multiplier);
}
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder.HandleScoreControllerNoteWasMissed
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::HandleScoreControllerNoteWasMissed(GlobalNamespace::NoteData* noteData, int multiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::HandleScoreControllerNoteWasMissed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleScoreControllerNoteWasMissed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, multiplier)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteData, multiplier);
}
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder.HandleObstacleDidPassAvoidedMark
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::HandleObstacleDidPassAvoidedMark(GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::HandleObstacleDidPassAvoidedMark");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleObstacleDidPassAvoidedMark", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectExecutionRatingsRecorder/CutScoreHandler
#include "GlobalNamespace/BeatmapObjectExecutionRatingsRecorder_CutScoreHandler.hpp"
// Including type: BeatmapObjectExecutionRatingsRecorder/CutScoreHandler/DidFinishCallback
#include "GlobalNamespace/BeatmapObjectExecutionRatingsRecorder_CutScoreHandler_DidFinishCallback.hpp"
// Including type: NoteExecutionRating
#include "GlobalNamespace/NoteExecutionRating.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: ISaberSwingRatingCounter
#include "GlobalNamespace/ISaberSwingRatingCounter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder/CutScoreHandler.Set
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::CutScoreHandler::Set(GlobalNamespace::NoteCutInfo* noteCutInfo, GlobalNamespace::NoteExecutionRating* noteExecutionRating, GlobalNamespace::ISaberSwingRatingCounter* swingRatingCounter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::CutScoreHandler::Set");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteCutInfo, noteExecutionRating, swingRatingCounter)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteCutInfo, noteExecutionRating, swingRatingCounter);
}
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder/CutScoreHandler.HandleSwingRatingCounterDidFinish
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::CutScoreHandler::HandleSwingRatingCounterDidFinish(GlobalNamespace::ISaberSwingRatingCounter* swingRatingCounter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::CutScoreHandler::HandleSwingRatingCounterDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleSwingRatingCounterDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(swingRatingCounter)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, swingRatingCounter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapObjectExecutionRatingsRecorder/CutScoreHandler/DidFinishCallback
#include "GlobalNamespace/BeatmapObjectExecutionRatingsRecorder_CutScoreHandler_DidFinishCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder/CutScoreHandler/DidFinishCallback.Invoke
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::CutScoreHandler::DidFinishCallback::Invoke(GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::CutScoreHandler* cutScoreHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::CutScoreHandler::DidFinishCallback::Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cutScoreHandler)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cutScoreHandler);
}
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder/CutScoreHandler/DidFinishCallback.BeginInvoke
System::IAsyncResult* GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::CutScoreHandler::DidFinishCallback::BeginInvoke(GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::CutScoreHandler* cutScoreHandler, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::CutScoreHandler::DidFinishCallback::BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cutScoreHandler, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, cutScoreHandler, callback, object);
}
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder/CutScoreHandler/DidFinishCallback.EndInvoke
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::CutScoreHandler::DidFinishCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::CutScoreHandler::DidFinishCallback::EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: BeatmapObjectSpawnMovementData/ObstacleSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_ObstacleSpawnData.hpp"
// Including type: BeatmapObjectSpawnMovementData/NoteSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_NoteSpawnData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapObjectManager.add_noteWasSpawnedEvent
void GlobalNamespace::BeatmapObjectManager::add_noteWasSpawnedEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::add_noteWasSpawnedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_noteWasSpawnedEvent
void GlobalNamespace::BeatmapObjectManager::remove_noteWasSpawnedEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::remove_noteWasSpawnedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_noteWasMissedEvent
void GlobalNamespace::BeatmapObjectManager::add_noteWasMissedEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::add_noteWasMissedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteWasMissedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_noteWasMissedEvent
void GlobalNamespace::BeatmapObjectManager::remove_noteWasMissedEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::remove_noteWasMissedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteWasMissedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_noteWasCutEvent
void GlobalNamespace::BeatmapObjectManager::add_noteWasCutEvent(System::Action_2<GlobalNamespace::NoteController*, GlobalNamespace::NoteCutInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::add_noteWasCutEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteWasCutEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_noteWasCutEvent
void GlobalNamespace::BeatmapObjectManager::remove_noteWasCutEvent(System::Action_2<GlobalNamespace::NoteController*, GlobalNamespace::NoteCutInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::remove_noteWasCutEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteWasCutEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_noteDidStartJumpEvent
void GlobalNamespace::BeatmapObjectManager::add_noteDidStartJumpEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::add_noteDidStartJumpEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteDidStartJumpEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_noteDidStartJumpEvent
void GlobalNamespace::BeatmapObjectManager::remove_noteDidStartJumpEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::remove_noteDidStartJumpEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteDidStartJumpEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_obstacleWasSpawnedEvent
void GlobalNamespace::BeatmapObjectManager::add_obstacleWasSpawnedEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::add_obstacleWasSpawnedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_obstacleWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_obstacleWasSpawnedEvent
void GlobalNamespace::BeatmapObjectManager::remove_obstacleWasSpawnedEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::remove_obstacleWasSpawnedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_obstacleWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_obstacleDidPassThreeQuartersOfMove2Event
void GlobalNamespace::BeatmapObjectManager::add_obstacleDidPassThreeQuartersOfMove2Event(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::add_obstacleDidPassThreeQuartersOfMove2Event");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_obstacleDidPassThreeQuartersOfMove2Event", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_obstacleDidPassThreeQuartersOfMove2Event
void GlobalNamespace::BeatmapObjectManager::remove_obstacleDidPassThreeQuartersOfMove2Event(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::remove_obstacleDidPassThreeQuartersOfMove2Event");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_obstacleDidPassThreeQuartersOfMove2Event", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_obstacleDidPassAvoidedMarkEvent
void GlobalNamespace::BeatmapObjectManager::add_obstacleDidPassAvoidedMarkEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::add_obstacleDidPassAvoidedMarkEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_obstacleDidPassAvoidedMarkEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_obstacleDidPassAvoidedMarkEvent
void GlobalNamespace::BeatmapObjectManager::remove_obstacleDidPassAvoidedMarkEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::remove_obstacleDidPassAvoidedMarkEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_obstacleDidPassAvoidedMarkEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.get_activeObstacleControllers
System::Collections::Generic::HashSet_1<GlobalNamespace::ObstacleController*>* GlobalNamespace::BeatmapObjectManager::get_activeObstacleControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::get_activeObstacleControllers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_activeObstacleControllers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::HashSet_1<GlobalNamespace::ObstacleController*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectManager.SpawnObstacleInternal
GlobalNamespace::ObstacleController* GlobalNamespace::BeatmapObjectManager::SpawnObstacleInternal(GlobalNamespace::ObstacleData* obstacleData, GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData obstacleSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::SpawnObstacleInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnObstacleInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleData, obstacleSpawnData, rotation)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ObstacleController*, false>(this, ___internal__method, obstacleData, obstacleSpawnData, rotation);
}
// Autogenerated method: BeatmapObjectManager.SpawnBombNoteInternal
GlobalNamespace::NoteController* GlobalNamespace::BeatmapObjectManager::SpawnBombNoteInternal(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::SpawnBombNoteInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnBombNoteInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, noteSpawnData, rotation)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteController*, false>(this, ___internal__method, noteData, noteSpawnData, rotation);
}
// Autogenerated method: BeatmapObjectManager.SpawnBasicNoteInternal
GlobalNamespace::NoteController* GlobalNamespace::BeatmapObjectManager::SpawnBasicNoteInternal(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation, float cutDirectionAngleOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::SpawnBasicNoteInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnBasicNoteInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, noteSpawnData, rotation, cutDirectionAngleOffset)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteController*, false>(this, ___internal__method, noteData, noteSpawnData, rotation, cutDirectionAngleOffset);
}
// Autogenerated method: BeatmapObjectManager.DespawnInternal
void GlobalNamespace::BeatmapObjectManager::DespawnInternal(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::DespawnInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: BeatmapObjectManager.DespawnInternal
void GlobalNamespace::BeatmapObjectManager::DespawnInternal(GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::DespawnInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: BeatmapObjectManager.get_spawnHidden
bool GlobalNamespace::BeatmapObjectManager::get_spawnHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::get_spawnHidden");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_spawnHidden", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectManager.set_spawnHidden
void GlobalNamespace::BeatmapObjectManager::set_spawnHidden(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::set_spawnHidden");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_spawnHidden", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.SetNoteControllerEventCallbacks
void GlobalNamespace::BeatmapObjectManager::SetNoteControllerEventCallbacks(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::SetNoteControllerEventCallbacks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetNoteControllerEventCallbacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: BeatmapObjectManager.RemoveNoteControllerEventCallbacks
void GlobalNamespace::BeatmapObjectManager::RemoveNoteControllerEventCallbacks(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::RemoveNoteControllerEventCallbacks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveNoteControllerEventCallbacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: BeatmapObjectManager.SetObstacleEventCallbacks
void GlobalNamespace::BeatmapObjectManager::SetObstacleEventCallbacks(GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::SetObstacleEventCallbacks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetObstacleEventCallbacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: BeatmapObjectManager.RemoveObstacleEventCallbacks
void GlobalNamespace::BeatmapObjectManager::RemoveObstacleEventCallbacks(GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::RemoveObstacleEventCallbacks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveObstacleEventCallbacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: BeatmapObjectManager.Despawn
void GlobalNamespace::BeatmapObjectManager::Despawn(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::Despawn");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Despawn", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: BeatmapObjectManager.Despawn
void GlobalNamespace::BeatmapObjectManager::Despawn(GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::Despawn");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Despawn", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: BeatmapObjectManager.HandleNoteDidStartJump
void GlobalNamespace::BeatmapObjectManager::HandleNoteDidStartJump(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::HandleNoteDidStartJump");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteDidStartJump", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: BeatmapObjectManager.HandleNoteWasMissed
void GlobalNamespace::BeatmapObjectManager::HandleNoteWasMissed(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::HandleNoteWasMissed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteWasMissed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: BeatmapObjectManager.HandleNoteDidFinishJump
void GlobalNamespace::BeatmapObjectManager::HandleNoteDidFinishJump(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::HandleNoteDidFinishJump");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteDidFinishJump", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: BeatmapObjectManager.HandleNoteDidDissolve
void GlobalNamespace::BeatmapObjectManager::HandleNoteDidDissolve(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::HandleNoteDidDissolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteDidDissolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: BeatmapObjectManager.HandleNoteWasCut
void GlobalNamespace::BeatmapObjectManager::HandleNoteWasCut(GlobalNamespace::NoteController* noteController, GlobalNamespace::NoteCutInfo* noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::HandleNoteWasCut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteWasCut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController, noteCutInfo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController, noteCutInfo);
}
// Autogenerated method: BeatmapObjectManager.HandleObstaclePassedThreeQuartersOfMove2
void GlobalNamespace::BeatmapObjectManager::HandleObstaclePassedThreeQuartersOfMove2(GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::HandleObstaclePassedThreeQuartersOfMove2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleObstaclePassedThreeQuartersOfMove2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: BeatmapObjectManager.HandleObstaclePassedAvoidedMark
void GlobalNamespace::BeatmapObjectManager::HandleObstaclePassedAvoidedMark(GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::HandleObstaclePassedAvoidedMark");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleObstaclePassedAvoidedMark", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: BeatmapObjectManager.HandleObstacleFinishedMovement
void GlobalNamespace::BeatmapObjectManager::HandleObstacleFinishedMovement(GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::HandleObstacleFinishedMovement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleObstacleFinishedMovement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: BeatmapObjectManager.HandleObstacleDidDissolve
void GlobalNamespace::BeatmapObjectManager::HandleObstacleDidDissolve(GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::HandleObstacleDidDissolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleObstacleDidDissolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: BeatmapObjectManager.DissolveAllObjects
void GlobalNamespace::BeatmapObjectManager::DissolveAllObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::DissolveAllObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DissolveAllObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectManager.HideAllBeatmapObjects
void GlobalNamespace::BeatmapObjectManager::HideAllBeatmapObjects(bool hide) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::HideAllBeatmapObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HideAllBeatmapObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hide)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hide);
}
// Autogenerated method: BeatmapObjectManager.PauseAllBeatmapObjects
void GlobalNamespace::BeatmapObjectManager::PauseAllBeatmapObjects(bool pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::PauseAllBeatmapObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PauseAllBeatmapObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pause)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pause);
}
// Autogenerated method: BeatmapObjectManager.SpawnObstacle
GlobalNamespace::ObstacleController* GlobalNamespace::BeatmapObjectManager::SpawnObstacle(GlobalNamespace::ObstacleData* obstacleData, GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData obstacleSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::SpawnObstacle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnObstacle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleData, obstacleSpawnData, rotation)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ObstacleController*, false>(this, ___internal__method, obstacleData, obstacleSpawnData, rotation);
}
// Autogenerated method: BeatmapObjectManager.SpawnBombNote
GlobalNamespace::NoteController* GlobalNamespace::BeatmapObjectManager::SpawnBombNote(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::SpawnBombNote");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnBombNote", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, noteSpawnData, rotation)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteController*, false>(this, ___internal__method, noteData, noteSpawnData, rotation);
}
// Autogenerated method: BeatmapObjectManager.SpawnBasicNote
GlobalNamespace::NoteController* GlobalNamespace::BeatmapObjectManager::SpawnBasicNote(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation, float cutDirectionAngleOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectManager::SpawnBasicNote");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnBasicNote", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, noteSpawnData, rotation, cutDirectionAngleOffset)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteController*, false>(this, ___internal__method, noteData, noteSpawnData, rotation, cutDirectionAngleOffset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapObjectSpawnCenter
#include "GlobalNamespace/BeatmapObjectSpawnCenter.hpp"
// Including type: BeatmapObjectSpawnCenter/PlayerCountToDistance
#include "GlobalNamespace/BeatmapObjectSpawnCenter_PlayerCountToDistance.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapObjectSpawnCenter.get_spawnCenterDistance
float GlobalNamespace::BeatmapObjectSpawnCenter::get_spawnCenterDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnCenter::get_spawnCenterDistance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_spawnCenterDistance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnCenter.get_spawnCenterDistanceWasFound
bool GlobalNamespace::BeatmapObjectSpawnCenter::get_spawnCenterDistanceWasFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnCenter::get_spawnCenterDistanceWasFound");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_spawnCenterDistanceWasFound", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnCenter.add_spawnCenterDistanceWasFoundEvent
void GlobalNamespace::BeatmapObjectSpawnCenter::add_spawnCenterDistanceWasFoundEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnCenter::add_spawnCenterDistanceWasFoundEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_spawnCenterDistanceWasFoundEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectSpawnCenter.remove_spawnCenterDistanceWasFoundEvent
void GlobalNamespace::BeatmapObjectSpawnCenter::remove_spawnCenterDistanceWasFoundEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnCenter::remove_spawnCenterDistanceWasFoundEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_spawnCenterDistanceWasFoundEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectSpawnCenter.CalculateSpawnCenterPosition
float GlobalNamespace::BeatmapObjectSpawnCenter::CalculateSpawnCenterPosition(int numberOfPlayers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnCenter::CalculateSpawnCenterPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CalculateSpawnCenterPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(numberOfPlayers)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, numberOfPlayers);
}
// Autogenerated method: BeatmapObjectSpawnCenter.ReportAndSaveSpawnCenterDistance
void GlobalNamespace::BeatmapObjectSpawnCenter::ReportAndSaveSpawnCenterDistance(float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnCenter::ReportAndSaveSpawnCenterDistance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReportAndSaveSpawnCenterDistance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(distance)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, distance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectSpawnCenter/PlayerCountToDistance
#include "GlobalNamespace/BeatmapObjectSpawnCenter_PlayerCountToDistance.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapObjectSpawnCenter/PlayerCountToDistance.get_playerCount
int GlobalNamespace::BeatmapObjectSpawnCenter::PlayerCountToDistance::get_playerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnCenter::PlayerCountToDistance::get_playerCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_playerCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnCenter/PlayerCountToDistance.get_distance
float GlobalNamespace::BeatmapObjectSpawnCenter::PlayerCountToDistance::get_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnCenter::PlayerCountToDistance::get_distance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_distance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectSpawnController
#include "GlobalNamespace/BeatmapObjectSpawnController.hpp"
// Including type: BeatmapObjectSpawnController/InitData
#include "GlobalNamespace/BeatmapObjectSpawnController_InitData.hpp"
// Including type: BeatmapObjectSpawnMovementData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData.hpp"
// Including type: BeatmapCallbackItemDataList
#include "GlobalNamespace/BeatmapCallbackItemDataList.hpp"
// Including type: IBeatmapObjectSpawner
#include "GlobalNamespace/IBeatmapObjectSpawner.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: SpawnRotationProcessor
#include "GlobalNamespace/SpawnRotationProcessor.hpp"
// Including type: VariableBpmProcessor
#include "GlobalNamespace/VariableBpmProcessor.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: NoteLineLayer
#include "GlobalNamespace/NoteLineLayer.hpp"
// Including type: BeatmapObjectCallbackController/BeatmapObjectCallbackData
#include "GlobalNamespace/BeatmapObjectCallbackController_BeatmapObjectCallbackData.hpp"
// Including type: BeatmapObjectCallbackController/BeatmapEventCallbackData
#include "GlobalNamespace/BeatmapObjectCallbackController_BeatmapEventCallbackData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapObjectSpawnController.get_jumpOffsetY
float GlobalNamespace::BeatmapObjectSpawnController::get_jumpOffsetY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::get_jumpOffsetY");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_jumpOffsetY", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.set_jumpOffsetY
void GlobalNamespace::BeatmapObjectSpawnController::set_jumpOffsetY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::set_jumpOffsetY");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_jumpOffsetY", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectSpawnController.get_currentBpm
float GlobalNamespace::BeatmapObjectSpawnController::get_currentBpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::get_currentBpm");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_currentBpm", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.get_moveDuration
float GlobalNamespace::BeatmapObjectSpawnController::get_moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::get_moveDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_moveDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.get_jumpDuration
float GlobalNamespace::BeatmapObjectSpawnController::get_jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::get_jumpDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_jumpDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.get_jumpDistance
float GlobalNamespace::BeatmapObjectSpawnController::get_jumpDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::get_jumpDistance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_jumpDistance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.get_verticalLayerDistance
float GlobalNamespace::BeatmapObjectSpawnController::get_verticalLayerDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::get_verticalLayerDistance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_verticalLayerDistance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.get_noteJumpMovementSpeed
float GlobalNamespace::BeatmapObjectSpawnController::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::get_noteJumpMovementSpeed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.get_noteLinesDistance
float GlobalNamespace::BeatmapObjectSpawnController::get_noteLinesDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::get_noteLinesDistance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteLinesDistance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.get_beatmapObjectSpawnMovementData
GlobalNamespace::BeatmapObjectSpawnMovementData* GlobalNamespace::BeatmapObjectSpawnController::get_beatmapObjectSpawnMovementData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::get_beatmapObjectSpawnMovementData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapObjectSpawnMovementData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapObjectSpawnMovementData*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.get_isInitialized
bool GlobalNamespace::BeatmapObjectSpawnController::get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::get_isInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.add_didInitEvent
void GlobalNamespace::BeatmapObjectSpawnController::add_didInitEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::add_didInitEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didInitEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectSpawnController.remove_didInitEvent
void GlobalNamespace::BeatmapObjectSpawnController::remove_didInitEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::remove_didInitEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didInitEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectSpawnController.Start
void GlobalNamespace::BeatmapObjectSpawnController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.OnDestroy
void GlobalNamespace::BeatmapObjectSpawnController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.SpawnObstacle
void GlobalNamespace::BeatmapObjectSpawnController::SpawnObstacle(GlobalNamespace::ObstacleData* obstacleData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::SpawnObstacle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnObstacle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obstacleData);
}
// Autogenerated method: BeatmapObjectSpawnController.SpawnBasicNote
void GlobalNamespace::BeatmapObjectSpawnController::SpawnBasicNote(GlobalNamespace::NoteData* noteData, float cutDirectionAngleOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::SpawnBasicNote");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnBasicNote", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, cutDirectionAngleOffset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteData, cutDirectionAngleOffset);
}
// Autogenerated method: BeatmapObjectSpawnController.SpawnBombNote
void GlobalNamespace::BeatmapObjectSpawnController::SpawnBombNote(GlobalNamespace::NoteData* noteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::SpawnBombNote");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnBombNote", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteData);
}
// Autogenerated method: BeatmapObjectSpawnController.ProcessEarlyBeatmapEventData
void GlobalNamespace::BeatmapObjectSpawnController::ProcessEarlyBeatmapEventData(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::ProcessEarlyBeatmapEventData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessEarlyBeatmapEventData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: BeatmapObjectSpawnController.EarlyEventsWereProcessed
void GlobalNamespace::BeatmapObjectSpawnController::EarlyEventsWereProcessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::EarlyEventsWereProcessed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EarlyEventsWereProcessed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.ProcessLateBeatmapEventData
void GlobalNamespace::BeatmapObjectSpawnController::ProcessLateBeatmapEventData(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::ProcessLateBeatmapEventData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessLateBeatmapEventData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: BeatmapObjectSpawnController.HandleBeatmapObjectCallback
void GlobalNamespace::BeatmapObjectSpawnController::HandleBeatmapObjectCallback(GlobalNamespace::BeatmapObjectData* beatmapObjectData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::HandleBeatmapObjectCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapObjectData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapObjectData);
}
// Autogenerated method: BeatmapObjectSpawnController.HandleBeatmapEventCallback
void GlobalNamespace::BeatmapObjectSpawnController::HandleBeatmapEventCallback(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::HandleBeatmapEventCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBeatmapEventCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: BeatmapObjectSpawnController.HandleCallbacksForThisFrameWereProcessed
void GlobalNamespace::BeatmapObjectSpawnController::HandleCallbacksForThisFrameWereProcessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::HandleCallbacksForThisFrameWereProcessed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleCallbacksForThisFrameWereProcessed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.StopSpawning
void GlobalNamespace::BeatmapObjectSpawnController::StopSpawning() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::StopSpawning");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StopSpawning", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.Get2DNoteOffset
UnityEngine::Vector2 GlobalNamespace::BeatmapObjectSpawnController::Get2DNoteOffset(int noteLineIndex, GlobalNamespace::NoteLineLayer noteLineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::Get2DNoteOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Get2DNoteOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteLineIndex, noteLineLayer)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, noteLineIndex, noteLineLayer);
}
// Autogenerated method: BeatmapObjectSpawnController.JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset
float GlobalNamespace::BeatmapObjectSpawnController::JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset(GlobalNamespace::NoteLineLayer lineLayer, float distanceFromPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnController::JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lineLayer, distanceFromPlayer)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, lineLayer, distanceFromPlayer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectSpawnController/InitData
#include "GlobalNamespace/BeatmapObjectSpawnController_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectSpawnMovementData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData.hpp"
// Including type: BeatmapObjectSpawnMovementData/ObstacleSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_ObstacleSpawnData.hpp"
// Including type: BeatmapObjectSpawnMovementData/NoteSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_NoteSpawnData.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: NoteLineLayer
#include "GlobalNamespace/NoteLineLayer.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapObjectSpawnMovementData.get_spawnAheadTime
float GlobalNamespace::BeatmapObjectSpawnMovementData::get_spawnAheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::get_spawnAheadTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_spawnAheadTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.get_moveDuration
float GlobalNamespace::BeatmapObjectSpawnMovementData::get_moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::get_moveDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_moveDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.get_jumpDuration
float GlobalNamespace::BeatmapObjectSpawnMovementData::get_jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::get_jumpDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_jumpDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.get_noteLinesDistance
float GlobalNamespace::BeatmapObjectSpawnMovementData::get_noteLinesDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::get_noteLinesDistance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteLinesDistance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.get_verticalLayersDistance
float GlobalNamespace::BeatmapObjectSpawnMovementData::get_verticalLayersDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::get_verticalLayersDistance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_verticalLayersDistance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.get_jumpDistance
float GlobalNamespace::BeatmapObjectSpawnMovementData::get_jumpDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::get_jumpDistance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_jumpDistance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.get_noteJumpMovementSpeed
float GlobalNamespace::BeatmapObjectSpawnMovementData::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::get_noteJumpMovementSpeed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.Init
void GlobalNamespace::BeatmapObjectSpawnMovementData::Init(int noteLinesCount, float startNoteJumpMovementSpeed, float startBpm, float noteJumpStartBeatOffset, float jumpOffsetY, UnityEngine::Vector3 rightVec, UnityEngine::Vector3 forwardVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteLinesCount, startNoteJumpMovementSpeed, startBpm, noteJumpStartBeatOffset, jumpOffsetY, rightVec, forwardVec)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteLinesCount, startNoteJumpMovementSpeed, startBpm, noteJumpStartBeatOffset, jumpOffsetY, rightVec, forwardVec);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.Update
void GlobalNamespace::BeatmapObjectSpawnMovementData::Update(float bpm, float jumpOffsetY) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bpm, jumpOffsetY)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bpm, jumpOffsetY);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.GetObstacleSpawnData
GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData GlobalNamespace::BeatmapObjectSpawnMovementData::GetObstacleSpawnData(GlobalNamespace::ObstacleData* obstacleData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::GetObstacleSpawnData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetObstacleSpawnData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleData)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData, false>(this, ___internal__method, obstacleData);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.GetJumpingNoteSpawnData
GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData GlobalNamespace::BeatmapObjectSpawnMovementData::GetJumpingNoteSpawnData(GlobalNamespace::NoteData* noteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::GetJumpingNoteSpawnData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetJumpingNoteSpawnData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData, false>(this, ___internal__method, noteData);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.GetNoteOffset
UnityEngine::Vector3 GlobalNamespace::BeatmapObjectSpawnMovementData::GetNoteOffset(int noteLineIndex, GlobalNamespace::NoteLineLayer noteLineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::GetNoteOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNoteOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteLineIndex, noteLineLayer)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, noteLineIndex, noteLineLayer);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.Get2DNoteOffset
UnityEngine::Vector2 GlobalNamespace::BeatmapObjectSpawnMovementData::Get2DNoteOffset(int noteLineIndex, GlobalNamespace::NoteLineLayer noteLineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::Get2DNoteOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Get2DNoteOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteLineIndex, noteLineLayer)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, noteLineIndex, noteLineLayer);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset
float GlobalNamespace::BeatmapObjectSpawnMovementData::JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset(GlobalNamespace::NoteLineLayer lineLayer, float distanceFromPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lineLayer, distanceFromPlayer)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, lineLayer, distanceFromPlayer);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.HighestJumpPosYForLineLayer
float GlobalNamespace::BeatmapObjectSpawnMovementData::HighestJumpPosYForLineLayer(GlobalNamespace::NoteLineLayer lineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::HighestJumpPosYForLineLayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HighestJumpPosYForLineLayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lineLayer)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, lineLayer);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.HighestJumpPosYForLineLayerWithoutJumpOffset
float GlobalNamespace::BeatmapObjectSpawnMovementData::HighestJumpPosYForLineLayerWithoutJumpOffset(GlobalNamespace::NoteLineLayer lineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::HighestJumpPosYForLineLayerWithoutJumpOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HighestJumpPosYForLineLayerWithoutJumpOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lineLayer)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, lineLayer);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.LineYPosForLineLayer
float GlobalNamespace::BeatmapObjectSpawnMovementData::LineYPosForLineLayer(GlobalNamespace::NoteLineLayer lineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::LineYPosForLineLayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LineYPosForLineLayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lineLayer)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, lineLayer);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.NoteJumpGravityForLineLayer
float GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpGravityForLineLayer(GlobalNamespace::NoteLineLayer lineLayer, GlobalNamespace::NoteLineLayer startLineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpGravityForLineLayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NoteJumpGravityForLineLayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lineLayer, startLineLayer)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, lineLayer, startLineLayer);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.NoteJumpGravityForLineLayerWithoutJumpOffset
float GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpGravityForLineLayerWithoutJumpOffset(GlobalNamespace::NoteLineLayer lineLayer, GlobalNamespace::NoteLineLayer startLineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpGravityForLineLayerWithoutJumpOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NoteJumpGravityForLineLayerWithoutJumpOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lineLayer, startLineLayer)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, lineLayer, startLineLayer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectSpawnMovementData/ObstacleSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_ObstacleSpawnData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectSpawnMovementData/NoteSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_NoteSpawnData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatmapObjectSpawner
#include "GlobalNamespace/IBeatmapObjectSpawner.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: BeatmapObjectSpawnMovementData/ObstacleSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_ObstacleSpawnData.hpp"
// Including type: BeatmapObjectSpawnMovementData/NoteSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_NoteSpawnData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapObjectSpawner.SpawnObstacle
GlobalNamespace::ObstacleController* GlobalNamespace::IBeatmapObjectSpawner::SpawnObstacle(GlobalNamespace::ObstacleData* obstacleData, GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData obstacleSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawner::SpawnObstacle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnObstacle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleData, obstacleSpawnData, rotation)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ObstacleController*, false>(this, ___internal__method, obstacleData, obstacleSpawnData, rotation);
}
// Autogenerated method: IBeatmapObjectSpawner.SpawnBombNote
GlobalNamespace::NoteController* GlobalNamespace::IBeatmapObjectSpawner::SpawnBombNote(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawner::SpawnBombNote");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnBombNote", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, noteSpawnData, rotation)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteController*, false>(this, ___internal__method, noteData, noteSpawnData, rotation);
}
// Autogenerated method: IBeatmapObjectSpawner.SpawnBasicNote
GlobalNamespace::NoteController* GlobalNamespace::IBeatmapObjectSpawner::SpawnBasicNote(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation, float cutDirectionAngleOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapObjectSpawner::SpawnBasicNote");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnBasicNote", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, noteSpawnData, rotation, cutDirectionAngleOffset)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteController*, false>(this, ___internal__method, noteData, noteSpawnData, rotation, cutDirectionAngleOffset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseNoteVisuals
#include "GlobalNamespace/BaseNoteVisuals.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: CutoutAnimateEffect
#include "GlobalNamespace/CutoutAnimateEffect.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BaseNoteVisuals.Awake
void GlobalNamespace::BaseNoteVisuals::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNoteVisuals::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNoteVisuals.OnDestroy
void GlobalNamespace::BaseNoteVisuals::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNoteVisuals::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNoteVisuals.HandleNoteControllerDidInit
void GlobalNamespace::BaseNoteVisuals::HandleNoteControllerDidInit(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNoteVisuals::HandleNoteControllerDidInit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteControllerDidInit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: BaseNoteVisuals.HandleNoteDidStartDissolving
void GlobalNamespace::BaseNoteVisuals::HandleNoteDidStartDissolving(GlobalNamespace::NoteController* noteController, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNoteVisuals::HandleNoteDidStartDissolving");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteDidStartDissolving", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController, duration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController, duration);
}
// Autogenerated method: BaseNoteVisuals.AnimateCutout
void GlobalNamespace::BaseNoteVisuals::AnimateCutout(float cutoutStart, float cutoutEnd, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNoteVisuals::AnimateCutout");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AnimateCutout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cutoutStart, cutoutEnd, duration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cutoutStart, cutoutEnd, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BombNoteController
#include "GlobalNamespace/BombNoteController.hpp"
// Including type: BombNoteController/Pool
#include "GlobalNamespace/BombNoteController_Pool.hpp"
// Including type: CuttableBySaber
#include "GlobalNamespace/CuttableBySaber.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BombNoteController.Init
void GlobalNamespace::BombNoteController::Init(GlobalNamespace::NoteData* noteData, float worldRotation, UnityEngine::Vector3 moveStartPos, UnityEngine::Vector3 moveEndPos, UnityEngine::Vector3 jumpEndPos, float moveDuration, float jumpDuration, float jumpGravity) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, worldRotation, moveStartPos, moveEndPos, jumpEndPos, moveDuration, jumpDuration, jumpGravity)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteData, worldRotation, moveStartPos, moveEndPos, jumpEndPos, moveDuration, jumpDuration, jumpGravity);
}
// Autogenerated method: BombNoteController.HandleDidPassHalfJump
void GlobalNamespace::BombNoteController::HandleDidPassHalfJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::HandleDidPassHalfJump");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleDidPassHalfJump", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BombNoteController.HandleWasCutBySaber
void GlobalNamespace::BombNoteController::HandleWasCutBySaber(GlobalNamespace::Saber* saber, UnityEngine::Vector3 cutPoint, UnityEngine::Quaternion orientation, UnityEngine::Vector3 cutDirVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::HandleWasCutBySaber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleWasCutBySaber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(saber, cutPoint, orientation, cutDirVec)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saber, cutPoint, orientation, cutDirVec);
}
// Autogenerated method: BombNoteController.set_hide
void GlobalNamespace::BombNoteController::set_hide(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::set_hide");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_hide", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BombNoteController.get_hide
bool GlobalNamespace::BombNoteController::get_hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::get_hide");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hide", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BombNoteController.set_pause
void GlobalNamespace::BombNoteController::set_pause(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::set_pause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_pause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BombNoteController.Awake
void GlobalNamespace::BombNoteController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BombNoteController.OnDestroy
void GlobalNamespace::BombNoteController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BombNoteController.NoteDidPassMissedMarker
void GlobalNamespace::BombNoteController::NoteDidPassMissedMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::NoteDidPassMissedMarker");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NoteDidPassMissedMarker", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BombNoteController.NoteDidStartDissolving
void GlobalNamespace::BombNoteController::NoteDidStartDissolving() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BombNoteController::NoteDidStartDissolving");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NoteDidStartDissolving", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BombNoteController/Pool
#include "GlobalNamespace/BombNoteController_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ColorNoteVisuals
#include "GlobalNamespace/ColorNoteVisuals.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: MaterialPropertyBlockController
#include "GlobalNamespace/MaterialPropertyBlockController.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC58A8
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _colorId
int GlobalNamespace::ColorNoteVisuals::_get__colorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::_get__colorId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ColorNoteVisuals", "_colorId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _colorId
void GlobalNamespace::ColorNoteVisuals::_set__colorId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::_set__colorId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ColorNoteVisuals", "_colorId", value));
}
// Autogenerated method: ColorNoteVisuals.add_didInitEvent
void GlobalNamespace::ColorNoteVisuals::add_didInitEvent(System::Action_2<GlobalNamespace::ColorNoteVisuals*, GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::add_didInitEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didInitEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorNoteVisuals.remove_didInitEvent
void GlobalNamespace::ColorNoteVisuals::remove_didInitEvent(System::Action_2<GlobalNamespace::ColorNoteVisuals*, GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::remove_didInitEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didInitEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorNoteVisuals.get_noteColor
UnityEngine::Color GlobalNamespace::ColorNoteVisuals::get_noteColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::get_noteColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: ColorNoteVisuals.set_showArrow
void GlobalNamespace::ColorNoteVisuals::set_showArrow(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::set_showArrow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_showArrow", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorNoteVisuals.set_showCircle
void GlobalNamespace::ColorNoteVisuals::set_showCircle(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::set_showCircle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_showCircle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorNoteVisuals.Awake
void GlobalNamespace::ColorNoteVisuals::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorNoteVisuals.OnDestroy
void GlobalNamespace::ColorNoteVisuals::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorNoteVisuals.HandleNoteControllerDidInit
void GlobalNamespace::ColorNoteVisuals::HandleNoteControllerDidInit(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::HandleNoteControllerDidInit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteControllerDidInit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: ColorNoteVisuals.HandleNoteControllerNoteDidPassJumpThreeQuarters
void GlobalNamespace::ColorNoteVisuals::HandleNoteControllerNoteDidPassJumpThreeQuarters(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::HandleNoteControllerNoteDidPassJumpThreeQuarters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteControllerNoteDidPassJumpThreeQuarters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: ColorNoteVisuals.HandleNoteDidStartDissolving
void GlobalNamespace::ColorNoteVisuals::HandleNoteDidStartDissolving(GlobalNamespace::NoteController* noteController, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::HandleNoteDidStartDissolving");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteDidStartDissolving", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController, duration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController, duration);
}
// Autogenerated method: ColorNoteVisuals..cctor
void GlobalNamespace::ColorNoteVisuals::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorNoteVisuals::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "ColorNoteVisuals", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisappearingArrowController
#include "GlobalNamespace/DisappearingArrowController.hpp"
// Including type: GameNoteController
#include "GlobalNamespace/GameNoteController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DisappearingArrowController.get_gameNoteController
GlobalNamespace::GameNoteController* GlobalNamespace::DisappearingArrowController::get_gameNoteController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisappearingArrowController::get_gameNoteController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameNoteController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameNoteController*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameNoteCollidersSizeController
#include "GlobalNamespace/GameNoteCollidersSizeController.hpp"
// Including type: GameNoteController
#include "GlobalNamespace/GameNoteController.hpp"
// Including type: BoxCuttableBySaber
#include "GlobalNamespace/BoxCuttableBySaber.hpp"
// Including type: NoteMovement
#include "GlobalNamespace/NoteMovement.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameNoteCollidersSizeController.Awake
void GlobalNamespace::GameNoteCollidersSizeController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteCollidersSizeController::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameNoteCollidersSizeController.OnDestroy
void GlobalNamespace::GameNoteCollidersSizeController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteCollidersSizeController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameNoteCollidersSizeController.HandleGameNoteControllerDidInit
void GlobalNamespace::GameNoteCollidersSizeController::HandleGameNoteControllerDidInit(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteCollidersSizeController::HandleGameNoteControllerDidInit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleGameNoteControllerDidInit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: GameNoteCollidersSizeController.HandleGameNoteControllerNoteDidStartJump
void GlobalNamespace::GameNoteCollidersSizeController::HandleGameNoteControllerNoteDidStartJump(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteCollidersSizeController::HandleGameNoteControllerNoteDidStartJump");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleGameNoteControllerNoteDidStartJump", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: GameNoteCollidersSizeController.Update
void GlobalNamespace::GameNoteCollidersSizeController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteCollidersSizeController::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameNoteController
#include "GlobalNamespace/GameNoteController.hpp"
// Including type: GameNoteController/Pool
#include "GlobalNamespace/GameNoteController_Pool.hpp"
// Including type: BoxCuttableBySaber
#include "GlobalNamespace/BoxCuttableBySaber.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameNoteController.add_gameNoteControllerDidInitEvent
void GlobalNamespace::GameNoteController::add_gameNoteControllerDidInitEvent(System::Action_1<GlobalNamespace::GameNoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::add_gameNoteControllerDidInitEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_gameNoteControllerDidInitEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameNoteController.remove_gameNoteControllerDidInitEvent
void GlobalNamespace::GameNoteController::remove_gameNoteControllerDidInitEvent(System::Action_1<GlobalNamespace::GameNoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::remove_gameNoteControllerDidInitEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_gameNoteControllerDidInitEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameNoteController.Init
void GlobalNamespace::GameNoteController::Init(GlobalNamespace::NoteData* noteData, float worldRotation, UnityEngine::Vector3 moveStartPos, UnityEngine::Vector3 moveEndPos, UnityEngine::Vector3 jumpEndPos, float moveDuration, float jumpDuration, float jumpGravity, GlobalNamespace::GameNoteController_GameNoteType gameNoteType, float cutDirectionAngleOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, worldRotation, moveStartPos, moveEndPos, jumpEndPos, moveDuration, jumpDuration, jumpGravity, gameNoteType, cutDirectionAngleOffset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteData, worldRotation, moveStartPos, moveEndPos, jumpEndPos, moveDuration, jumpDuration, jumpGravity, gameNoteType, cutDirectionAngleOffset);
}
// Autogenerated method: GameNoteController.HandleBigWasCutBySaber
void GlobalNamespace::GameNoteController::HandleBigWasCutBySaber(GlobalNamespace::Saber* saber, UnityEngine::Vector3 cutPoint, UnityEngine::Quaternion orientation, UnityEngine::Vector3 cutDirVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::HandleBigWasCutBySaber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBigWasCutBySaber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(saber, cutPoint, orientation, cutDirVec)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saber, cutPoint, orientation, cutDirVec);
}
// Autogenerated method: GameNoteController.HandleSmallWasCutBySaber
void GlobalNamespace::GameNoteController::HandleSmallWasCutBySaber(GlobalNamespace::Saber* saber, UnityEngine::Vector3 cutPoint, UnityEngine::Quaternion orientation, UnityEngine::Vector3 cutDirVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::HandleSmallWasCutBySaber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleSmallWasCutBySaber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(saber, cutPoint, orientation, cutDirVec)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saber, cutPoint, orientation, cutDirVec);
}
// Autogenerated method: GameNoteController.HandleCut
void GlobalNamespace::GameNoteController::HandleCut(GlobalNamespace::Saber* saber, UnityEngine::Vector3 cutPoint, UnityEngine::Quaternion orientation, UnityEngine::Vector3 cutDirVec, bool allowBadCut) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::HandleCut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleCut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(saber, cutPoint, orientation, cutDirVec, allowBadCut)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saber, cutPoint, orientation, cutDirVec, allowBadCut);
}
// Autogenerated method: GameNoteController.get_gameNoteType
GlobalNamespace::GameNoteController_GameNoteType GlobalNamespace::GameNoteController::get_gameNoteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::get_gameNoteType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameNoteType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameNoteController_GameNoteType, false>(this, ___internal__method);
}
// Autogenerated method: GameNoteController.set_hide
void GlobalNamespace::GameNoteController::set_hide(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::set_hide");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_hide", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameNoteController.get_hide
bool GlobalNamespace::GameNoteController::get_hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::get_hide");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hide", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameNoteController.set_pause
void GlobalNamespace::GameNoteController::set_pause(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::set_pause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_pause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameNoteController.Awake
void GlobalNamespace::GameNoteController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameNoteController.OnDestroy
void GlobalNamespace::GameNoteController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameNoteController.NoteDidPassMissedMarker
void GlobalNamespace::GameNoteController::NoteDidPassMissedMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::NoteDidPassMissedMarker");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NoteDidPassMissedMarker", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameNoteController.NoteDidStartDissolving
void GlobalNamespace::GameNoteController::NoteDidStartDissolving() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::NoteDidStartDissolving");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NoteDidStartDissolving", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameNoteController.NoteDidStartJump
void GlobalNamespace::GameNoteController::NoteDidStartJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameNoteController::NoteDidStartJump");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NoteDidStartJump", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameNoteController/Pool
#include "GlobalNamespace/GameNoteController_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IGameNoteTypeProvider
#include "GlobalNamespace/IGameNoteTypeProvider.hpp"
// Including type: GameNoteController/GameNoteType
#include "GlobalNamespace/GameNoteController_GameNoteType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IGameNoteTypeProvider.get_gameNoteType
GlobalNamespace::GameNoteController_GameNoteType GlobalNamespace::IGameNoteTypeProvider::get_gameNoteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameNoteTypeProvider::get_gameNoteType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameNoteType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameNoteController_GameNoteType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteController/<DissolveCoroutine>d__71
#include "GlobalNamespace/NoteController_-DissolveCoroutine-d__71.hpp"
// Including type: NoteMovement
#include "GlobalNamespace/NoteMovement.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteController.add_didInitEvent
void GlobalNamespace::NoteController::add_didInitEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::add_didInitEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didInitEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteController.remove_didInitEvent
void GlobalNamespace::NoteController::remove_didInitEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::remove_didInitEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didInitEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteController.add_noteDidStartJumpEvent
void GlobalNamespace::NoteController::add_noteDidStartJumpEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::add_noteDidStartJumpEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteDidStartJumpEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteController.remove_noteDidStartJumpEvent
void GlobalNamespace::NoteController::remove_noteDidStartJumpEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::remove_noteDidStartJumpEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteDidStartJumpEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteController.add_noteDidFinishJumpEvent
void GlobalNamespace::NoteController::add_noteDidFinishJumpEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::add_noteDidFinishJumpEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteDidFinishJumpEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteController.remove_noteDidFinishJumpEvent
void GlobalNamespace::NoteController::remove_noteDidFinishJumpEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::remove_noteDidFinishJumpEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteDidFinishJumpEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteController.add_noteDidPassJumpThreeQuartersEvent
void GlobalNamespace::NoteController::add_noteDidPassJumpThreeQuartersEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::add_noteDidPassJumpThreeQuartersEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteDidPassJumpThreeQuartersEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteController.remove_noteDidPassJumpThreeQuartersEvent
void GlobalNamespace::NoteController::remove_noteDidPassJumpThreeQuartersEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::remove_noteDidPassJumpThreeQuartersEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteDidPassJumpThreeQuartersEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteController.add_noteWasCutEvent
void GlobalNamespace::NoteController::add_noteWasCutEvent(System::Action_2<GlobalNamespace::NoteController*, GlobalNamespace::NoteCutInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::add_noteWasCutEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteWasCutEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteController.remove_noteWasCutEvent
void GlobalNamespace::NoteController::remove_noteWasCutEvent(System::Action_2<GlobalNamespace::NoteController*, GlobalNamespace::NoteCutInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::remove_noteWasCutEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteWasCutEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteController.add_noteWasMissedEvent
void GlobalNamespace::NoteController::add_noteWasMissedEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::add_noteWasMissedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteWasMissedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteController.remove_noteWasMissedEvent
void GlobalNamespace::NoteController::remove_noteWasMissedEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::remove_noteWasMissedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteWasMissedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteController.add_noteDidStartDissolvingEvent
void GlobalNamespace::NoteController::add_noteDidStartDissolvingEvent(System::Action_2<GlobalNamespace::NoteController*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::add_noteDidStartDissolvingEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteDidStartDissolvingEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteController.remove_noteDidStartDissolvingEvent
void GlobalNamespace::NoteController::remove_noteDidStartDissolvingEvent(System::Action_2<GlobalNamespace::NoteController*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::remove_noteDidStartDissolvingEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteDidStartDissolvingEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteController.add_noteDidDissolveEvent
void GlobalNamespace::NoteController::add_noteDidDissolveEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::add_noteDidDissolveEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteDidDissolveEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteController.remove_noteDidDissolveEvent
void GlobalNamespace::NoteController::remove_noteDidDissolveEvent(System::Action_1<GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::remove_noteDidDissolveEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteDidDissolveEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteController.get_noteTransform
UnityEngine::Transform* GlobalNamespace::NoteController::get_noteTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_noteTransform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteTransform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.get_worldRotation
UnityEngine::Quaternion GlobalNamespace::NoteController::get_worldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_worldRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_worldRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.get_inverseWorldRotation
UnityEngine::Quaternion GlobalNamespace::NoteController::get_inverseWorldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_inverseWorldRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_inverseWorldRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.get_moveStartTime
float GlobalNamespace::NoteController::get_moveStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_moveStartTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_moveStartTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.get_moveDuration
float GlobalNamespace::NoteController::get_moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_moveDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_moveDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.get_jumpDuration
float GlobalNamespace::NoteController::get_jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_jumpDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_jumpDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.get_jumpMoveVec
UnityEngine::Vector3 GlobalNamespace::NoteController::get_jumpMoveVec() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_jumpMoveVec");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_jumpMoveVec", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.get_beatPos
UnityEngine::Vector3 GlobalNamespace::NoteController::get_beatPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_beatPos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatPos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.get_jumpStartPos
UnityEngine::Vector3 GlobalNamespace::NoteController::get_jumpStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_jumpStartPos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_jumpStartPos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.get_noteData
GlobalNamespace::NoteData* GlobalNamespace::NoteController::get_noteData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_noteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteData*, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.get_moveVec
UnityEngine::Vector3 GlobalNamespace::NoteController::get_moveVec() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_moveVec");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_moveVec", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.set_hide
void GlobalNamespace::NoteController::set_hide(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::set_hide");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_hide", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteController.get_hide
bool GlobalNamespace::NoteController::get_hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::get_hide");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hide", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.set_pause
void GlobalNamespace::NoteController::set_pause(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::set_pause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_pause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteController.Awake
void GlobalNamespace::NoteController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.OnDestroy
void GlobalNamespace::NoteController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.Update
void GlobalNamespace::NoteController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.ManualUpdate
void GlobalNamespace::NoteController::ManualUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.HandleNoteDidStartJump
void GlobalNamespace::NoteController::HandleNoteDidStartJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::HandleNoteDidStartJump");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteDidStartJump", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.HandleNoteDidFinishJump
void GlobalNamespace::NoteController::HandleNoteDidFinishJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::HandleNoteDidFinishJump");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteDidFinishJump", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.HandleNoteDidPassJumpThreeQuarters
void GlobalNamespace::NoteController::HandleNoteDidPassJumpThreeQuarters(GlobalNamespace::NoteMovement* noteMovement) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::HandleNoteDidPassJumpThreeQuarters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteDidPassJumpThreeQuarters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteMovement)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteMovement);
}
// Autogenerated method: NoteController.HandleNoteDidPassMissedMarkerEvent
void GlobalNamespace::NoteController::HandleNoteDidPassMissedMarkerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::HandleNoteDidPassMissedMarkerEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteDidPassMissedMarkerEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.NoteDidStartJump
void GlobalNamespace::NoteController::NoteDidStartJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::NoteDidStartJump");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NoteDidStartJump", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.NoteDidFinishJump
void GlobalNamespace::NoteController::NoteDidFinishJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::NoteDidFinishJump");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NoteDidFinishJump", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.NoteDidPassJumpThreeQuarters
void GlobalNamespace::NoteController::NoteDidPassJumpThreeQuarters(GlobalNamespace::NoteMovement* noteMovement) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::NoteDidPassJumpThreeQuarters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NoteDidPassJumpThreeQuarters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteMovement)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteMovement);
}
// Autogenerated method: NoteController.NoteDidPassMissedMarker
void GlobalNamespace::NoteController::NoteDidPassMissedMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::NoteDidPassMissedMarker");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NoteDidPassMissedMarker", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.NoteDidStartDissolving
void GlobalNamespace::NoteController::NoteDidStartDissolving() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::NoteDidStartDissolving");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NoteDidStartDissolving", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.SendNoteWasMissedEvent
void GlobalNamespace::NoteController::SendNoteWasMissedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::SendNoteWasMissedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendNoteWasMissedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteController.SendNoteWasCutEvent
void GlobalNamespace::NoteController::SendNoteWasCutEvent(GlobalNamespace::NoteCutInfo* noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::SendNoteWasCutEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendNoteWasCutEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteCutInfo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteCutInfo);
}
// Autogenerated method: NoteController.Init
void GlobalNamespace::NoteController::Init(GlobalNamespace::NoteData* noteData, float worldRotation, UnityEngine::Vector3 moveStartPos, UnityEngine::Vector3 moveEndPos, UnityEngine::Vector3 jumpEndPos, float moveDuration, float jumpDuration, float jumpGravity, float endRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, worldRotation, moveStartPos, moveEndPos, jumpEndPos, moveDuration, jumpDuration, jumpGravity, endRotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteData, worldRotation, moveStartPos, moveEndPos, jumpEndPos, moveDuration, jumpDuration, jumpGravity, endRotation);
}
// Autogenerated method: NoteController.DissolveCoroutine
System::Collections::IEnumerator* GlobalNamespace::NoteController::DissolveCoroutine(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::DissolveCoroutine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DissolveCoroutine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(duration)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, duration);
}
// Autogenerated method: NoteController.Dissolve
void GlobalNamespace::NoteController::Dissolve(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::Dissolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dissolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(duration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NoteController/<DissolveCoroutine>d__71
#include "GlobalNamespace/NoteController_-DissolveCoroutine-d__71.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteController/<DissolveCoroutine>d__71.System.IDisposable.Dispose
void GlobalNamespace::NoteController::$DissolveCoroutine$d__71::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::$DissolveCoroutine$d__71::System.IDisposable.Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteController/<DissolveCoroutine>d__71.MoveNext
bool GlobalNamespace::NoteController::$DissolveCoroutine$d__71::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::$DissolveCoroutine$d__71::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool GlobalNamespace::NoteController::$DissolveCoroutine$d__71::System_Collections_IEnumerator_MoveNext() {
  return GlobalNamespace::NoteController::$DissolveCoroutine$d__71::MoveNext();
}
// Autogenerated method: NoteController/<DissolveCoroutine>d__71.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::NoteController::$DissolveCoroutine$d__71::System_Collections_Generic_IEnumerator_1_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::$DissolveCoroutine$d__71::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NoteController/<DissolveCoroutine>d__71.System.Collections.IEnumerator.Reset
void GlobalNamespace::NoteController::$DissolveCoroutine$d__71::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::$DissolveCoroutine$d__71::System.Collections.IEnumerator.Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteController/<DissolveCoroutine>d__71.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::NoteController::$DissolveCoroutine$d__71::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteController::$DissolveCoroutine$d__71::System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NoteDebris
#include "GlobalNamespace/NoteDebris.hpp"
// Including type: NoteDebris/Pool
#include "GlobalNamespace/NoteDebris_Pool.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: NoteDebrisPhysics
#include "GlobalNamespace/NoteDebrisPhysics.hpp"
// Including type: MaterialPropertyBlockController
#include "GlobalNamespace/MaterialPropertyBlockController.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ColorType
#include "GlobalNamespace/ColorType.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC5B60
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _cutoutPropertyID
int GlobalNamespace::NoteDebris::_get__cutoutPropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::_get__cutoutPropertyID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NoteDebris", "_cutoutPropertyID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _cutoutPropertyID
void GlobalNamespace::NoteDebris::_set__cutoutPropertyID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::_set__cutoutPropertyID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteDebris", "_cutoutPropertyID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC5B70
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _colorID
int GlobalNamespace::NoteDebris::_get__colorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::_get__colorID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NoteDebris", "_colorID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _colorID
void GlobalNamespace::NoteDebris::_set__colorID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::_set__colorID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteDebris", "_colorID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC5B80
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _cutPlaneID
int GlobalNamespace::NoteDebris::_get__cutPlaneID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::_get__cutPlaneID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NoteDebris", "_cutPlaneID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _cutPlaneID
void GlobalNamespace::NoteDebris::_set__cutPlaneID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::_set__cutPlaneID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteDebris", "_cutPlaneID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC5B90
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _cutoutTexOffsetID
int GlobalNamespace::NoteDebris::_get__cutoutTexOffsetID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::_get__cutoutTexOffsetID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NoteDebris", "_cutoutTexOffsetID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _cutoutTexOffsetID
void GlobalNamespace::NoteDebris::_set__cutoutTexOffsetID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::_set__cutoutTexOffsetID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteDebris", "_cutoutTexOffsetID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC5BA0
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3[] _meshVertices
::Array<UnityEngine::Vector3>* GlobalNamespace::NoteDebris::_get__meshVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::_get__meshVertices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("", "NoteDebris", "_meshVertices"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3[] _meshVertices
void GlobalNamespace::NoteDebris::_set__meshVertices(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::_set__meshVertices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteDebris", "_meshVertices", value));
}
// Autogenerated method: NoteDebris.add_didFinishEvent
void GlobalNamespace::NoteDebris::add_didFinishEvent(System::Action_1<GlobalNamespace::NoteDebris*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteDebris.remove_didFinishEvent
void GlobalNamespace::NoteDebris::remove_didFinishEvent(System::Action_1<GlobalNamespace::NoteDebris*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteDebris.Awake
void GlobalNamespace::NoteDebris::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteDebris.Update
void GlobalNamespace::NoteDebris::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteDebris.Init
void GlobalNamespace::NoteDebris::Init(GlobalNamespace::ColorType colorType, UnityEngine::Vector3 notePos, UnityEngine::Quaternion noteRot, UnityEngine::Vector3 positionOffset, UnityEngine::Quaternion rotationOffset, UnityEngine::Vector3 cutPoint, UnityEngine::Vector3 cutNormal, UnityEngine::Vector3 force, UnityEngine::Vector3 torque, float lifeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(colorType, notePos, noteRot, positionOffset, rotationOffset, cutPoint, cutNormal, force, torque, lifeTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colorType, notePos, noteRot, positionOffset, rotationOffset, cutPoint, cutNormal, force, torque, lifeTime);
}
// Autogenerated method: NoteDebris..cctor
void GlobalNamespace::NoteDebris::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebris::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "NoteDebris", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteDebris/Pool
#include "GlobalNamespace/NoteDebris_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteDebrisPhysics
#include "GlobalNamespace/NoteDebrisPhysics.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteDebrisPhysics.SetVelocity
void GlobalNamespace::NoteDebrisPhysics::SetVelocity(UnityEngine::Vector3 force) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisPhysics::SetVelocity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetVelocity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(force)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: NoteDebrisPhysics.SetAngularVelocity
void GlobalNamespace::NoteDebrisPhysics::SetAngularVelocity(UnityEngine::Vector3 torque) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisPhysics::SetAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetAngularVelocity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(torque)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, torque);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteDebrisRigidbodyPhysics
#include "GlobalNamespace/NoteDebrisRigidbodyPhysics.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: NoteDebrisSimplePhysics
#include "GlobalNamespace/NoteDebrisSimplePhysics.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteDebrisRigidbodyPhysics.FixedUpdate
void GlobalNamespace::NoteDebrisRigidbodyPhysics::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisRigidbodyPhysics::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteDebrisRigidbodyPhysics.SetVelocity
void GlobalNamespace::NoteDebrisRigidbodyPhysics::SetVelocity(UnityEngine::Vector3 force) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisRigidbodyPhysics::SetVelocity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetVelocity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(force)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: NoteDebrisRigidbodyPhysics.SetAngularVelocity
void GlobalNamespace::NoteDebrisRigidbodyPhysics::SetAngularVelocity(UnityEngine::Vector3 torque) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisRigidbodyPhysics::SetAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetAngularVelocity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(torque)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, torque);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteDebrisSimplePhysics
#include "GlobalNamespace/NoteDebrisSimplePhysics.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteDebrisSimplePhysics.Start
void GlobalNamespace::NoteDebrisSimplePhysics::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSimplePhysics::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteDebrisSimplePhysics.LateUpdate
void GlobalNamespace::NoteDebrisSimplePhysics::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSimplePhysics::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteDebrisSimplePhysics.SetVelocity
void GlobalNamespace::NoteDebrisSimplePhysics::SetVelocity(UnityEngine::Vector3 force) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSimplePhysics::SetVelocity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetVelocity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(force)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: NoteDebrisSimplePhysics.SetAngularVelocity
void GlobalNamespace::NoteDebrisSimplePhysics::SetAngularVelocity(UnityEngine::Vector3 torque) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteDebrisSimplePhysics::SetAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetAngularVelocity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(torque)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, torque);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteFloorMovement
#include "GlobalNamespace/NoteFloorMovement.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteFloorMovement.add_floorMovementDidFinishEvent
void GlobalNamespace::NoteFloorMovement::add_floorMovementDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::add_floorMovementDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_floorMovementDidFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteFloorMovement.remove_floorMovementDidFinishEvent
void GlobalNamespace::NoteFloorMovement::remove_floorMovementDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::remove_floorMovementDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_floorMovementDidFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteFloorMovement.get_distanceToPlayer
float GlobalNamespace::NoteFloorMovement::get_distanceToPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::get_distanceToPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_distanceToPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteFloorMovement.get_startPos
UnityEngine::Vector3 GlobalNamespace::NoteFloorMovement::get_startPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::get_startPos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_startPos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: NoteFloorMovement.get_endPos
UnityEngine::Vector3 GlobalNamespace::NoteFloorMovement::get_endPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::get_endPos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_endPos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: NoteFloorMovement.get_startTime
float GlobalNamespace::NoteFloorMovement::get_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::get_startTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_startTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteFloorMovement.get_moveDuration
float GlobalNamespace::NoteFloorMovement::get_moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::get_moveDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_moveDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteFloorMovement.get_worldRotation
UnityEngine::Quaternion GlobalNamespace::NoteFloorMovement::get_worldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::get_worldRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_worldRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: NoteFloorMovement.get_inverseWorldRotation
UnityEngine::Quaternion GlobalNamespace::NoteFloorMovement::get_inverseWorldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::get_inverseWorldRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_inverseWorldRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: NoteFloorMovement.Init
void GlobalNamespace::NoteFloorMovement::Init(float worldRotation, UnityEngine::Vector3 startPos, UnityEngine::Vector3 endPos, float moveDuration, float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(worldRotation, startPos, endPos, moveDuration, startTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, worldRotation, startPos, endPos, moveDuration, startTime);
}
// Autogenerated method: NoteFloorMovement.SetToStart
UnityEngine::Vector3 GlobalNamespace::NoteFloorMovement::SetToStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::SetToStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetToStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: NoteFloorMovement.ManualUpdate
UnityEngine::Vector3 GlobalNamespace::NoteFloorMovement::ManualUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteFloorMovement::ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NoteJump
#include "GlobalNamespace/NoteJump.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: PlayerSpaceConvertor
#include "GlobalNamespace/PlayerSpaceConvertor.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kMissedTimeOffset
float GlobalNamespace::NoteJump::_get_kMissedTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::_get_kMissedTimeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "NoteJump", "kMissedTimeOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kMissedTimeOffset
void GlobalNamespace::NoteJump::_set_kMissedTimeOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::_set_kMissedTimeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteJump", "kMissedTimeOffset", value));
}
// Autogenerated method: NoteJump.add_noteJumpDidFinishEvent
void GlobalNamespace::NoteJump::add_noteJumpDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::add_noteJumpDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteJumpDidFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteJump.remove_noteJumpDidFinishEvent
void GlobalNamespace::NoteJump::remove_noteJumpDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::remove_noteJumpDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteJumpDidFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteJump.add_noteJumpDidPassMissedMarkerEvent
void GlobalNamespace::NoteJump::add_noteJumpDidPassMissedMarkerEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::add_noteJumpDidPassMissedMarkerEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteJumpDidPassMissedMarkerEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteJump.remove_noteJumpDidPassMissedMarkerEvent
void GlobalNamespace::NoteJump::remove_noteJumpDidPassMissedMarkerEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::remove_noteJumpDidPassMissedMarkerEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteJumpDidPassMissedMarkerEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteJump.add_noteJumpDidPassThreeQuartersEvent
void GlobalNamespace::NoteJump::add_noteJumpDidPassThreeQuartersEvent(System::Action_1<GlobalNamespace::NoteJump*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::add_noteJumpDidPassThreeQuartersEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteJumpDidPassThreeQuartersEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteJump.remove_noteJumpDidPassThreeQuartersEvent
void GlobalNamespace::NoteJump::remove_noteJumpDidPassThreeQuartersEvent(System::Action_1<GlobalNamespace::NoteJump*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::remove_noteJumpDidPassThreeQuartersEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteJumpDidPassThreeQuartersEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteJump.add_noteJumpDidPassHalfEvent
void GlobalNamespace::NoteJump::add_noteJumpDidPassHalfEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::add_noteJumpDidPassHalfEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteJumpDidPassHalfEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteJump.remove_noteJumpDidPassHalfEvent
void GlobalNamespace::NoteJump::remove_noteJumpDidPassHalfEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::remove_noteJumpDidPassHalfEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteJumpDidPassHalfEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteJump.add_noteJumpDidUpdateProgressEvent
void GlobalNamespace::NoteJump::add_noteJumpDidUpdateProgressEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::add_noteJumpDidUpdateProgressEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteJumpDidUpdateProgressEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteJump.remove_noteJumpDidUpdateProgressEvent
void GlobalNamespace::NoteJump::remove_noteJumpDidUpdateProgressEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::remove_noteJumpDidUpdateProgressEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteJumpDidUpdateProgressEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteJump.get_distanceToPlayer
float GlobalNamespace::NoteJump::get_distanceToPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::get_distanceToPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_distanceToPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteJump.get_beatPos
UnityEngine::Vector3 GlobalNamespace::NoteJump::get_beatPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::get_beatPos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatPos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: NoteJump.get_jumpDuration
float GlobalNamespace::NoteJump::get_jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::get_jumpDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_jumpDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteJump.get_moveVec
UnityEngine::Vector3 GlobalNamespace::NoteJump::get_moveVec() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::get_moveVec");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_moveVec", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: NoteJump.Init
void GlobalNamespace::NoteJump::Init(float beatTime, float worldRotation, UnityEngine::Vector3 startPos, UnityEngine::Vector3 endPos, float jumpDuration, float gravity, float flipYSide, float endRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatTime, worldRotation, startPos, endPos, jumpDuration, gravity, flipYSide, endRotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatTime, worldRotation, startPos, endPos, jumpDuration, gravity, flipYSide, endRotation);
}
// Autogenerated method: NoteJump.ManualUpdate
UnityEngine::Vector3 GlobalNamespace::NoteJump::ManualUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJump::ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteJumpStartScaleUp
#include "GlobalNamespace/NoteJumpStartScaleUp.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteJump
#include "GlobalNamespace/NoteJump.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteJumpStartScaleUp.Start
void GlobalNamespace::NoteJumpStartScaleUp::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartScaleUp::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteJumpStartScaleUp.OnDestroy
void GlobalNamespace::NoteJumpStartScaleUp::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartScaleUp::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteJumpStartScaleUp.UpdateScale
void GlobalNamespace::NoteJumpStartScaleUp::UpdateScale(float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartScaleUp::UpdateScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(progress)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, progress);
}
// Autogenerated method: NoteJumpStartScaleUp.HandleNoteJumpDidUpdateProgress
void GlobalNamespace::NoteJumpStartScaleUp::HandleNoteJumpDidUpdateProgress(float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartScaleUp::HandleNoteJumpDidUpdateProgress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteJumpDidUpdateProgress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(progress)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, progress);
}
// Autogenerated method: NoteJumpStartScaleUp.HandleNoteControllerDidInit
void GlobalNamespace::NoteJumpStartScaleUp::HandleNoteControllerDidInit(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteJumpStartScaleUp::HandleNoteControllerDidInit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteControllerDidInit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteLineConnectionController
#include "GlobalNamespace/NoteLineConnectionController.hpp"
// Including type: NoteLineConnectionController/Pool
#include "GlobalNamespace/NoteLineConnectionController_Pool.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteLineConnectionController.add_didFinishEvent
void GlobalNamespace::NoteLineConnectionController::add_didFinishEvent(System::Action_1<GlobalNamespace::NoteLineConnectionController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteLineConnectionController.remove_didFinishEvent
void GlobalNamespace::NoteLineConnectionController::remove_didFinishEvent(System::Action_1<GlobalNamespace::NoteLineConnectionController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteLineConnectionController.Setup
void GlobalNamespace::NoteLineConnectionController::Setup(GlobalNamespace::NoteController* noteController0, GlobalNamespace::NoteController* noteController1, float fadeOutStartDistance, float fadeOutEndDistance, float noteTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::Setup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController0, noteController1, fadeOutStartDistance, fadeOutEndDistance, noteTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController0, noteController1, fadeOutStartDistance, fadeOutEndDistance, noteTime);
}
// Autogenerated method: NoteLineConnectionController.Update
void GlobalNamespace::NoteLineConnectionController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteLineConnectionController.UpdatePositionsAndColors
void GlobalNamespace::NoteLineConnectionController::UpdatePositionsAndColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteLineConnectionController::UpdatePositionsAndColors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdatePositionsAndColors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteLineConnectionController/Pool
#include "GlobalNamespace/NoteLineConnectionController_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteMovement
#include "GlobalNamespace/NoteMovement.hpp"
// Including type: NoteFloorMovement
#include "GlobalNamespace/NoteFloorMovement.hpp"
// Including type: NoteJump
#include "GlobalNamespace/NoteJump.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteMovement.add_didInitEvent
void GlobalNamespace::NoteMovement::add_didInitEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::add_didInitEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didInitEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMovement.remove_didInitEvent
void GlobalNamespace::NoteMovement::remove_didInitEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::remove_didInitEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didInitEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMovement.add_noteDidStartJumpEvent
void GlobalNamespace::NoteMovement::add_noteDidStartJumpEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::add_noteDidStartJumpEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteDidStartJumpEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMovement.remove_noteDidStartJumpEvent
void GlobalNamespace::NoteMovement::remove_noteDidStartJumpEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::remove_noteDidStartJumpEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteDidStartJumpEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMovement.add_noteDidFinishJumpEvent
void GlobalNamespace::NoteMovement::add_noteDidFinishJumpEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::add_noteDidFinishJumpEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteDidFinishJumpEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMovement.remove_noteDidFinishJumpEvent
void GlobalNamespace::NoteMovement::remove_noteDidFinishJumpEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::remove_noteDidFinishJumpEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteDidFinishJumpEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMovement.add_noteDidPassMissedMarkerEvent
void GlobalNamespace::NoteMovement::add_noteDidPassMissedMarkerEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::add_noteDidPassMissedMarkerEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteDidPassMissedMarkerEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMovement.remove_noteDidPassMissedMarkerEvent
void GlobalNamespace::NoteMovement::remove_noteDidPassMissedMarkerEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::remove_noteDidPassMissedMarkerEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteDidPassMissedMarkerEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMovement.add_noteDidPassHalfJumpEvent
void GlobalNamespace::NoteMovement::add_noteDidPassHalfJumpEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::add_noteDidPassHalfJumpEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteDidPassHalfJumpEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMovement.remove_noteDidPassHalfJumpEvent
void GlobalNamespace::NoteMovement::remove_noteDidPassHalfJumpEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::remove_noteDidPassHalfJumpEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteDidPassHalfJumpEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMovement.add_noteDidPassJumpThreeQuartersEvent
void GlobalNamespace::NoteMovement::add_noteDidPassJumpThreeQuartersEvent(System::Action_1<GlobalNamespace::NoteMovement*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::add_noteDidPassJumpThreeQuartersEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteDidPassJumpThreeQuartersEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMovement.remove_noteDidPassJumpThreeQuartersEvent
void GlobalNamespace::NoteMovement::remove_noteDidPassJumpThreeQuartersEvent(System::Action_1<GlobalNamespace::NoteMovement*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::remove_noteDidPassJumpThreeQuartersEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteDidPassJumpThreeQuartersEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMovement.add_noteDidMoveInJumpPhaseEvent
void GlobalNamespace::NoteMovement::add_noteDidMoveInJumpPhaseEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::add_noteDidMoveInJumpPhaseEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_noteDidMoveInJumpPhaseEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMovement.remove_noteDidMoveInJumpPhaseEvent
void GlobalNamespace::NoteMovement::remove_noteDidMoveInJumpPhaseEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::remove_noteDidMoveInJumpPhaseEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_noteDidMoveInJumpPhaseEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMovement.get_movementPhase
GlobalNamespace::NoteMovement::MovementPhase GlobalNamespace::NoteMovement::get_movementPhase() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_movementPhase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_movementPhase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteMovement::MovementPhase, false>(this, ___internal__method);
}
// Autogenerated method: NoteMovement.set_movementPhase
void GlobalNamespace::NoteMovement::set_movementPhase(GlobalNamespace::NoteMovement::MovementPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::set_movementPhase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_movementPhase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMovement.get_position
UnityEngine::Vector3 GlobalNamespace::NoteMovement::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: NoteMovement.get_prevPosition
UnityEngine::Vector3 GlobalNamespace::NoteMovement::get_prevPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_prevPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_prevPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: NoteMovement.get_worldRotation
UnityEngine::Quaternion GlobalNamespace::NoteMovement::get_worldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_worldRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_worldRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: NoteMovement.get_inverseWorldRotation
UnityEngine::Quaternion GlobalNamespace::NoteMovement::get_inverseWorldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_inverseWorldRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_inverseWorldRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: NoteMovement.get_moveEndPos
UnityEngine::Vector3 GlobalNamespace::NoteMovement::get_moveEndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_moveEndPos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_moveEndPos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: NoteMovement.get_moveStartTime
float GlobalNamespace::NoteMovement::get_moveStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_moveStartTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_moveStartTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteMovement.get_moveDuration
float GlobalNamespace::NoteMovement::get_moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_moveDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_moveDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteMovement.get_beatPos
UnityEngine::Vector3 GlobalNamespace::NoteMovement::get_beatPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_beatPos");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatPos", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: NoteMovement.get_jumpDuration
float GlobalNamespace::NoteMovement::get_jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_jumpDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_jumpDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteMovement.get_jumpMoveVec
UnityEngine::Vector3 GlobalNamespace::NoteMovement::get_jumpMoveVec() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_jumpMoveVec");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_jumpMoveVec", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: NoteMovement.get_distanceToPlayer
float GlobalNamespace::NoteMovement::get_distanceToPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::get_distanceToPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_distanceToPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteMovement.Init
void GlobalNamespace::NoteMovement::Init(float beatTime, float worldRotation, UnityEngine::Vector3 moveStartPos, UnityEngine::Vector3 moveEndPos, UnityEngine::Vector3 jumpEndPos, float moveDuration, float jumpDuration, float jumpGravity, float flipYSide, float endRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatTime, worldRotation, moveStartPos, moveEndPos, jumpEndPos, moveDuration, jumpDuration, jumpGravity, flipYSide, endRotation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatTime, worldRotation, moveStartPos, moveEndPos, jumpEndPos, moveDuration, jumpDuration, jumpGravity, flipYSide, endRotation);
}
// Autogenerated method: NoteMovement.Awake
void GlobalNamespace::NoteMovement::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteMovement.OnDestroy
void GlobalNamespace::NoteMovement::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteMovement.HandleFloorMovementDidFinish
void GlobalNamespace::NoteMovement::HandleFloorMovementDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::HandleFloorMovementDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleFloorMovementDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteMovement.HandleNoteJumpDidFinish
void GlobalNamespace::NoteMovement::HandleNoteJumpDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::HandleNoteJumpDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteJumpDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteMovement.HandleNoteJumpDidPassMissedMark
void GlobalNamespace::NoteMovement::HandleNoteJumpDidPassMissedMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::HandleNoteJumpDidPassMissedMark");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteJumpDidPassMissedMark", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteMovement.HandleNoteJumpDidPassThreeQuarters
void GlobalNamespace::NoteMovement::HandleNoteJumpDidPassThreeQuarters(GlobalNamespace::NoteJump* noteJump) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::HandleNoteJumpDidPassThreeQuarters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteJumpDidPassThreeQuarters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteJump)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteJump);
}
// Autogenerated method: NoteMovement.HandleNoteJumpNoteJumpDidPassHalf
void GlobalNamespace::NoteMovement::HandleNoteJumpNoteJumpDidPassHalf() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::HandleNoteJumpNoteJumpDidPassHalf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteJumpNoteJumpDidPassHalf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteMovement.ManualUpdate
void GlobalNamespace::NoteMovement::ManualUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteMovement/MovementPhase
#include "GlobalNamespace/NoteMovement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NoteMovement/MovementPhase None
GlobalNamespace::NoteMovement::MovementPhase GlobalNamespace::NoteMovement::MovementPhase::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::MovementPhase::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NoteMovement::MovementPhase>("", "NoteMovement/MovementPhase", "None"));
}
// Autogenerated static field setter
// Set static field: static public NoteMovement/MovementPhase None
void GlobalNamespace::NoteMovement::MovementPhase::_set_None(GlobalNamespace::NoteMovement::MovementPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::MovementPhase::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteMovement/MovementPhase", "None", value));
}
// Autogenerated static field getter
// Get static field: static public NoteMovement/MovementPhase MovingOnTheFloor
GlobalNamespace::NoteMovement::MovementPhase GlobalNamespace::NoteMovement::MovementPhase::_get_MovingOnTheFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::MovementPhase::_get_MovingOnTheFloor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NoteMovement::MovementPhase>("", "NoteMovement/MovementPhase", "MovingOnTheFloor"));
}
// Autogenerated static field setter
// Set static field: static public NoteMovement/MovementPhase MovingOnTheFloor
void GlobalNamespace::NoteMovement::MovementPhase::_set_MovingOnTheFloor(GlobalNamespace::NoteMovement::MovementPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::MovementPhase::_set_MovingOnTheFloor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteMovement/MovementPhase", "MovingOnTheFloor", value));
}
// Autogenerated static field getter
// Get static field: static public NoteMovement/MovementPhase Jumping
GlobalNamespace::NoteMovement::MovementPhase GlobalNamespace::NoteMovement::MovementPhase::_get_Jumping() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::MovementPhase::_get_Jumping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NoteMovement::MovementPhase>("", "NoteMovement/MovementPhase", "Jumping"));
}
// Autogenerated static field setter
// Set static field: static public NoteMovement/MovementPhase Jumping
void GlobalNamespace::NoteMovement::MovementPhase::_set_Jumping(GlobalNamespace::NoteMovement::MovementPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteMovement::MovementPhase::_set_Jumping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteMovement/MovementPhase", "Jumping", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialNoteController
#include "GlobalNamespace/TutorialNoteController.hpp"
// Including type: TutorialNoteController/Pool
#include "GlobalNamespace/TutorialNoteController_Pool.hpp"
// Including type: BoxCuttableBySaber
#include "GlobalNamespace/BoxCuttableBySaber.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TutorialNoteController.HandleBeforeNoteWasCutBySaber
void GlobalNamespace::TutorialNoteController::HandleBeforeNoteWasCutBySaber(GlobalNamespace::Saber* saber, UnityEngine::Vector3 cutPoint, UnityEngine::Quaternion orientation, UnityEngine::Vector3 cutDirVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::HandleBeforeNoteWasCutBySaber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBeforeNoteWasCutBySaber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(saber, cutPoint, orientation, cutDirVec)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saber, cutPoint, orientation, cutDirVec);
}
// Autogenerated method: TutorialNoteController.HandleCoreWasCutBySaber
void GlobalNamespace::TutorialNoteController::HandleCoreWasCutBySaber(GlobalNamespace::Saber* saber, UnityEngine::Vector3 cutPoint, UnityEngine::Quaternion orientation, UnityEngine::Vector3 cutDirVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::HandleCoreWasCutBySaber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleCoreWasCutBySaber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(saber, cutPoint, orientation, cutDirVec)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saber, cutPoint, orientation, cutDirVec);
}
// Autogenerated method: TutorialNoteController.set_hide
void GlobalNamespace::TutorialNoteController::set_hide(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::set_hide");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_hide", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TutorialNoteController.get_hide
bool GlobalNamespace::TutorialNoteController::get_hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::get_hide");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hide", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TutorialNoteController.set_pause
void GlobalNamespace::TutorialNoteController::set_pause(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::set_pause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_pause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TutorialNoteController.Init
void GlobalNamespace::TutorialNoteController::Init(GlobalNamespace::NoteData* noteData, float worldRotation, UnityEngine::Vector3 moveStartPos, UnityEngine::Vector3 moveEndPos, UnityEngine::Vector3 jumpEndPos, float moveDuration, float jumpDuration, float jumpGravity, float cutDirectionAngleOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, worldRotation, moveStartPos, moveEndPos, jumpEndPos, moveDuration, jumpDuration, jumpGravity, cutDirectionAngleOffset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteData, worldRotation, moveStartPos, moveEndPos, jumpEndPos, moveDuration, jumpDuration, jumpGravity, cutDirectionAngleOffset);
}
// Autogenerated method: TutorialNoteController.Awake
void GlobalNamespace::TutorialNoteController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialNoteController.OnDestroy
void GlobalNamespace::TutorialNoteController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialNoteController.NoteDidPassMissedMarker
void GlobalNamespace::TutorialNoteController::NoteDidPassMissedMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteController::NoteDidPassMissedMarker");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NoteDidPassMissedMarker", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialNoteController/Pool
#include "GlobalNamespace/TutorialNoteController_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: ObstacleController/Pool
#include "GlobalNamespace/ObstacleController_Pool.hpp"
// Including type: ObstacleController/<DissolveCoroutine>d__60
#include "GlobalNamespace/ObstacleController_-DissolveCoroutine-d__60.hpp"
// Including type: StretchableObstacle
#include "GlobalNamespace/StretchableObstacle.hpp"
// Including type: SimpleColorSO
#include "GlobalNamespace/SimpleColorSO.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kAvoidMarkTimeOffset
float GlobalNamespace::ObstacleController::_get_kAvoidMarkTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::_get_kAvoidMarkTimeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ObstacleController", "kAvoidMarkTimeOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kAvoidMarkTimeOffset
void GlobalNamespace::ObstacleController::_set_kAvoidMarkTimeOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::_set_kAvoidMarkTimeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObstacleController", "kAvoidMarkTimeOffset", value));
}
// Autogenerated method: ObstacleController.add_didInitEvent
void GlobalNamespace::ObstacleController::add_didInitEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::add_didInitEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didInitEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleController.remove_didInitEvent
void GlobalNamespace::ObstacleController::remove_didInitEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::remove_didInitEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didInitEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleController.add_finishedMovementEvent
void GlobalNamespace::ObstacleController::add_finishedMovementEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::add_finishedMovementEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_finishedMovementEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleController.remove_finishedMovementEvent
void GlobalNamespace::ObstacleController::remove_finishedMovementEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::remove_finishedMovementEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_finishedMovementEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleController.add_passedThreeQuartersOfMove2Event
void GlobalNamespace::ObstacleController::add_passedThreeQuartersOfMove2Event(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::add_passedThreeQuartersOfMove2Event");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_passedThreeQuartersOfMove2Event", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleController.remove_passedThreeQuartersOfMove2Event
void GlobalNamespace::ObstacleController::remove_passedThreeQuartersOfMove2Event(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::remove_passedThreeQuartersOfMove2Event");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_passedThreeQuartersOfMove2Event", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleController.add_passedAvoidedMarkEvent
void GlobalNamespace::ObstacleController::add_passedAvoidedMarkEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::add_passedAvoidedMarkEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_passedAvoidedMarkEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleController.remove_passedAvoidedMarkEvent
void GlobalNamespace::ObstacleController::remove_passedAvoidedMarkEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::remove_passedAvoidedMarkEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_passedAvoidedMarkEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleController.add_didStartDissolvingEvent
void GlobalNamespace::ObstacleController::add_didStartDissolvingEvent(System::Action_2<GlobalNamespace::ObstacleController*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::add_didStartDissolvingEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didStartDissolvingEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleController.remove_didStartDissolvingEvent
void GlobalNamespace::ObstacleController::remove_didStartDissolvingEvent(System::Action_2<GlobalNamespace::ObstacleController*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::remove_didStartDissolvingEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didStartDissolvingEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleController.add_didDissolveEvent
void GlobalNamespace::ObstacleController::add_didDissolveEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::add_didDissolveEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didDissolveEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleController.remove_didDissolveEvent
void GlobalNamespace::ObstacleController::remove_didDissolveEvent(System::Action_1<GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::remove_didDissolveEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didDissolveEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleController.set_hide
void GlobalNamespace::ObstacleController::set_hide(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::set_hide");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_hide", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleController.set_pause
void GlobalNamespace::ObstacleController::set_pause(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::set_pause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_pause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleController.get_bounds
UnityEngine::Bounds GlobalNamespace::ObstacleController::get_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::get_bounds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_bounds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleController.get_obstacleData
GlobalNamespace::ObstacleData* GlobalNamespace::ObstacleController::get_obstacleData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::get_obstacleData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_obstacleData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ObstacleData*, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleController.get_hasPassedAvoidedMark
bool GlobalNamespace::ObstacleController::get_hasPassedAvoidedMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::get_hasPassedAvoidedMark");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasPassedAvoidedMark", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleController.get_move1Duration
float GlobalNamespace::ObstacleController::get_move1Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::get_move1Duration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_move1Duration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleController.get_move2Duration
float GlobalNamespace::ObstacleController::get_move2Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::get_move2Duration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_move2Duration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleController.Init
void GlobalNamespace::ObstacleController::Init(GlobalNamespace::ObstacleData* obstacleData, float worldRotation, UnityEngine::Vector3 startPos, UnityEngine::Vector3 midPos, UnityEngine::Vector3 endPos, float move1Duration, float move2Duration, float singleLineWidth, float height) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleData, worldRotation, startPos, midPos, endPos, move1Duration, move2Duration, singleLineWidth, height)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obstacleData, worldRotation, startPos, midPos, endPos, move1Duration, move2Duration, singleLineWidth, height);
}
// Autogenerated method: ObstacleController.Update
void GlobalNamespace::ObstacleController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleController.ManualUpdate
void GlobalNamespace::ObstacleController::ManualUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleController.GetPosForTime
UnityEngine::Vector3 GlobalNamespace::ObstacleController::GetPosForTime(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::GetPosForTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPosForTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, time);
}
// Autogenerated method: ObstacleController.DissolveCoroutine
System::Collections::IEnumerator* GlobalNamespace::ObstacleController::DissolveCoroutine(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::DissolveCoroutine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DissolveCoroutine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(duration)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, duration);
}
// Autogenerated method: ObstacleController.Dissolve
void GlobalNamespace::ObstacleController::Dissolve(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::Dissolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dissolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(duration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObstacleController/Pool
#include "GlobalNamespace/ObstacleController_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ObstacleController/<DissolveCoroutine>d__60
#include "GlobalNamespace/ObstacleController_-DissolveCoroutine-d__60.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ObstacleController/<DissolveCoroutine>d__60.System.IDisposable.Dispose
void GlobalNamespace::ObstacleController::$DissolveCoroutine$d__60::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::$DissolveCoroutine$d__60::System.IDisposable.Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleController/<DissolveCoroutine>d__60.MoveNext
bool GlobalNamespace::ObstacleController::$DissolveCoroutine$d__60::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::$DissolveCoroutine$d__60::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool GlobalNamespace::ObstacleController::$DissolveCoroutine$d__60::System_Collections_IEnumerator_MoveNext() {
  return GlobalNamespace::ObstacleController::$DissolveCoroutine$d__60::MoveNext();
}
// Autogenerated method: ObstacleController/<DissolveCoroutine>d__60.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::ObstacleController::$DissolveCoroutine$d__60::System_Collections_Generic_IEnumerator_1_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::$DissolveCoroutine$d__60::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleController/<DissolveCoroutine>d__60.System.Collections.IEnumerator.Reset
void GlobalNamespace::ObstacleController::$DissolveCoroutine$d__60::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::$DissolveCoroutine$d__60::System.Collections.IEnumerator.Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleController/<DissolveCoroutine>d__60.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ObstacleController::$DissolveCoroutine$d__60::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleController::$DissolveCoroutine$d__60::System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObstacleDissolve
#include "GlobalNamespace/ObstacleDissolve.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: CutoutAnimateEffect
#include "GlobalNamespace/CutoutAnimateEffect.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ObstacleDissolve.Awake
void GlobalNamespace::ObstacleDissolve::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleDissolve::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleDissolve.OnDestroy
void GlobalNamespace::ObstacleDissolve::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleDissolve::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleDissolve.HandleObstacleDidInitEvent
void GlobalNamespace::ObstacleDissolve::HandleObstacleDidInitEvent(GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleDissolve::HandleObstacleDidInitEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleObstacleDidInitEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: ObstacleDissolve.HandleObcstacleDidStartDissolvingEvent
void GlobalNamespace::ObstacleDissolve::HandleObcstacleDidStartDissolvingEvent(GlobalNamespace::ObstacleController* obstacleController, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleDissolve::HandleObcstacleDidStartDissolvingEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleObcstacleDidStartDissolvingEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleController, duration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obstacleController, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StretchableCube
#include "GlobalNamespace/StretchableCube.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kLength
float GlobalNamespace::StretchableCube::_get_kLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_kLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "StretchableCube", "kLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kLength
void GlobalNamespace::StretchableCube::_set_kLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_kLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "kLength", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kWidth
float GlobalNamespace::StretchableCube::_get_kWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_kWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "StretchableCube", "kWidth"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kWidth
void GlobalNamespace::StretchableCube::_set_kWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_kWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "kWidth", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kHeight
float GlobalNamespace::StretchableCube::_get_kHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_kHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "StretchableCube", "kHeight"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kHeight
void GlobalNamespace::StretchableCube::_set_kHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_kHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "kHeight", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC5FE8
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 p0
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_p0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_p0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "p0"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 p0
void GlobalNamespace::StretchableCube::_set_p0(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_p0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "p0", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC5FF8
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 p1
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_p1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_p1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "p1"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 p1
void GlobalNamespace::StretchableCube::_set_p1(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_p1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "p1", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC6008
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 p2
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_p2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_p2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "p2"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 p2
void GlobalNamespace::StretchableCube::_set_p2(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_p2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "p2", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC6018
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 p3
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_p3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_p3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "p3"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 p3
void GlobalNamespace::StretchableCube::_set_p3(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_p3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "p3", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC6028
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 p4
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_p4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_p4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "p4"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 p4
void GlobalNamespace::StretchableCube::_set_p4(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_p4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "p4", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC6038
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 p5
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_p5() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_p5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "p5"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 p5
void GlobalNamespace::StretchableCube::_set_p5(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_p5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "p5", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC6048
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 p6
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_p6() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_p6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "p6"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 p6
void GlobalNamespace::StretchableCube::_set_p6(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_p6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "p6", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC6058
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 p7
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_p7() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_p7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "p7"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 p7
void GlobalNamespace::StretchableCube::_set_p7(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_p7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "p7", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC6068
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] vertices
::Array<UnityEngine::Vector3>* GlobalNamespace::StretchableCube::_get_vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_vertices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("", "StretchableCube", "vertices"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] vertices
void GlobalNamespace::StretchableCube::_set_vertices(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_vertices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "vertices", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC6078
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 up
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_up() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "up"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 up
void GlobalNamespace::StretchableCube::_set_up(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "up", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC6088
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 down
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_down() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "down"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 down
void GlobalNamespace::StretchableCube::_set_down(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "down", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC6098
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 front
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_front() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_front");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "front"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 front
void GlobalNamespace::StretchableCube::_set_front(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_front");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "front", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC60A8
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 back
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_back() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "back"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 back
void GlobalNamespace::StretchableCube::_set_back(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "back", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC60B8
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 left
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_left() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "left"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 left
void GlobalNamespace::StretchableCube::_set_left(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "left", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC60C8
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 right
UnityEngine::Vector3 GlobalNamespace::StretchableCube::_get_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("", "StretchableCube", "right"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 right
void GlobalNamespace::StretchableCube::_set_right(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "right", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC60D8
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] normals
::Array<UnityEngine::Vector3>* GlobalNamespace::StretchableCube::_get_normals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_normals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("", "StretchableCube", "normals"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] normals
void GlobalNamespace::StretchableCube::_set_normals(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_normals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "normals", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC60E8
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] triangles
::Array<int>* GlobalNamespace::StretchableCube::_get_triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_get_triangles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("", "StretchableCube", "triangles"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] triangles
void GlobalNamespace::StretchableCube::_set_triangles(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::_set_triangles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableCube", "triangles", value));
}
// Autogenerated method: StretchableCube.Awake
void GlobalNamespace::StretchableCube::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StretchableCube.OnDestroy
void GlobalNamespace::StretchableCube::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StretchableCube.CreateBox
UnityEngine::Mesh* GlobalNamespace::StretchableCube::CreateBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::CreateBox");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateBox", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: StretchableCube.RecalculateUVs
void GlobalNamespace::StretchableCube::RecalculateUVs(::Array<UnityEngine::Vector2>* uvs) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::RecalculateUVs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RecalculateUVs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uvs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, uvs);
}
// Autogenerated method: StretchableCube.RefreshUVs
void GlobalNamespace::StretchableCube::RefreshUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::RefreshUVs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RefreshUVs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StretchableCube..cctor
void GlobalNamespace::StretchableCube::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableCube::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "StretchableCube", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StretchableObstacle
#include "GlobalNamespace/StretchableObstacle.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: MaterialPropertyBlockController
#include "GlobalNamespace/MaterialPropertyBlockController.hpp"
// Including type: ParametricBoxFrameController
#include "GlobalNamespace/ParametricBoxFrameController.hpp"
// Including type: ParametricBoxFakeGlowController
#include "GlobalNamespace/ParametricBoxFakeGlowController.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC61A0
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _uvScaleID
int GlobalNamespace::StretchableObstacle::_get__uvScaleID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::_get__uvScaleID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "StretchableObstacle", "_uvScaleID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _uvScaleID
void GlobalNamespace::StretchableObstacle::_set__uvScaleID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::_set__uvScaleID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableObstacle", "_uvScaleID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC61B0
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _tintColorID
int GlobalNamespace::StretchableObstacle::_get__tintColorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::_get__tintColorID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "StretchableObstacle", "_tintColorID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _tintColorID
void GlobalNamespace::StretchableObstacle::_set__tintColorID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::_set__tintColorID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableObstacle", "_tintColorID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDC61C0
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _addColorID
int GlobalNamespace::StretchableObstacle::_get__addColorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::_get__addColorID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "StretchableObstacle", "_addColorID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _addColorID
void GlobalNamespace::StretchableObstacle::_set__addColorID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::_set__addColorID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StretchableObstacle", "_addColorID", value));
}
// Autogenerated method: StretchableObstacle.get_bounds
UnityEngine::Bounds GlobalNamespace::StretchableObstacle::get_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::get_bounds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_bounds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: StretchableObstacle.SetSizeAndColor
void GlobalNamespace::StretchableObstacle::SetSizeAndColor(float width, float height, float length, UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::SetSizeAndColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetSizeAndColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(width, height, length, color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, width, height, length, color);
}
// Autogenerated method: StretchableObstacle.OnValidate
void GlobalNamespace::StretchableObstacle::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::OnValidate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StretchableObstacle..cctor
void GlobalNamespace::StretchableObstacle::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StretchableObstacle::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "StretchableObstacle", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialBeatmapObjectManager
#include "GlobalNamespace/TutorialBeatmapObjectManager.hpp"
// Including type: MonoMemoryPoolContainer`1
#include "GlobalNamespace/MonoMemoryPoolContainer_1.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: TutorialNoteController/Pool
#include "GlobalNamespace/TutorialNoteController_Pool.hpp"
// Including type: BombNoteController/Pool
#include "GlobalNamespace/BombNoteController_Pool.hpp"
// Including type: ObstacleController/Pool
#include "GlobalNamespace/ObstacleController_Pool.hpp"
// Including type: BeatmapObjectSpawnMovementData/ObstacleSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_ObstacleSpawnData.hpp"
// Including type: BeatmapObjectSpawnMovementData/NoteSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_NoteSpawnData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TutorialBeatmapObjectManager.get_activeObstacleControllers
System::Collections::Generic::HashSet_1<GlobalNamespace::ObstacleController*>* GlobalNamespace::TutorialBeatmapObjectManager::get_activeObstacleControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::get_activeObstacleControllers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_activeObstacleControllers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::HashSet_1<GlobalNamespace::ObstacleController*>*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialBeatmapObjectManager.SpawnObstacleInternal
GlobalNamespace::ObstacleController* GlobalNamespace::TutorialBeatmapObjectManager::SpawnObstacleInternal(GlobalNamespace::ObstacleData* obstacleData, GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData obstacleSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::SpawnObstacleInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnObstacleInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleData, obstacleSpawnData, rotation)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ObstacleController*, false>(this, ___internal__method, obstacleData, obstacleSpawnData, rotation);
}
// Autogenerated method: TutorialBeatmapObjectManager.SpawnBombNoteInternal
GlobalNamespace::NoteController* GlobalNamespace::TutorialBeatmapObjectManager::SpawnBombNoteInternal(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::SpawnBombNoteInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnBombNoteInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, noteSpawnData, rotation)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteController*, false>(this, ___internal__method, noteData, noteSpawnData, rotation);
}
// Autogenerated method: TutorialBeatmapObjectManager.SpawnBasicNoteInternal
GlobalNamespace::NoteController* GlobalNamespace::TutorialBeatmapObjectManager::SpawnBasicNoteInternal(GlobalNamespace::NoteData* noteData, GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation, float cutDirectionAngleOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::SpawnBasicNoteInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnBasicNoteInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteData, noteSpawnData, rotation, cutDirectionAngleOffset)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteController*, false>(this, ___internal__method, noteData, noteSpawnData, rotation, cutDirectionAngleOffset);
}
// Autogenerated method: TutorialBeatmapObjectManager.DespawnInternal
void GlobalNamespace::TutorialBeatmapObjectManager::DespawnInternal(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::DespawnInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: TutorialBeatmapObjectManager.DespawnInternal
void GlobalNamespace::TutorialBeatmapObjectManager::DespawnInternal(GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::DespawnInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obstacleController)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: TutorialBeatmapObjectManager.DissolveAllObjects
void GlobalNamespace::TutorialBeatmapObjectManager::DissolveAllObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::DissolveAllObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DissolveAllObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialBeatmapObjectManager.HideAllBeatmapObjects
void GlobalNamespace::TutorialBeatmapObjectManager::HideAllBeatmapObjects(bool hide) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::HideAllBeatmapObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HideAllBeatmapObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hide)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hide);
}
// Autogenerated method: TutorialBeatmapObjectManager.PauseAllBeatmapObjects
void GlobalNamespace::TutorialBeatmapObjectManager::PauseAllBeatmapObjects(bool pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectManager::PauseAllBeatmapObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PauseAllBeatmapObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pause)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pause);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BadNoteCutEffectSpawner
#include "GlobalNamespace/BadNoteCutEffectSpawner.hpp"
// Including type: FlyingSpriteSpawner
#include "GlobalNamespace/FlyingSpriteSpawner.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: CoreGameHUDController/InitData
#include "GlobalNamespace/CoreGameHUDController_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BadNoteCutEffectSpawner.Start
void GlobalNamespace::BadNoteCutEffectSpawner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BadNoteCutEffectSpawner::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BadNoteCutEffectSpawner.OnDestroy
void GlobalNamespace::BadNoteCutEffectSpawner::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BadNoteCutEffectSpawner::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BadNoteCutEffectSpawner.HandleNoteWasCut
void GlobalNamespace::BadNoteCutEffectSpawner::HandleNoteWasCut(GlobalNamespace::NoteController* noteController, GlobalNamespace::NoteCutInfo* noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BadNoteCutEffectSpawner::HandleNoteWasCut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleNoteWasCut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(noteController, noteCutInfo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController, noteCutInfo);
}
